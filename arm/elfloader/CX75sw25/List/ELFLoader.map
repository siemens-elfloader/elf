################################################################################
#                                                                              #
#      IAR Universal Linker V4.60I/386                                         #
#                                                                              #
#           Link time     =  29/Jan/2010  18:41:02                             #
#           Target CPU    =  ARM                                               #
#           List file     =  C:\arm\elfloader\CX75sw25\List\ELFLoader.map      #
#           Output file 1 =  C:\arm\elfloader\CX75sw25\Exe\ELFLoader.elf       #
#                            Format: elf, variant: -yas                        #
#           Output file 2 =  C:\arm\elfloader\CX75sw25\Exe\ELFLoader.a79       #
#                            Format: intel-extended                            #
#           Command line  =  C:\arm\elfloader\CX75sw25\Obj\ESI.r79             #
#                            C:\arm\elfloader\CX75sw25\Obj\EXT2.r79            #
#                            C:\arm\elfloader\CX75sw25\Obj\FSWI.r79            #
#                            C:\arm\elfloader\CX75sw25\Obj\IMB.r79             #
#                            C:\arm\elfloader\CX75sw25\Obj\additional.r79      #
#                            C:\arm\elfloader\CX75sw25\Obj\conf_loader.r79     #
#                            C:\arm\elfloader\CX75sw25\Obj\config_data.r79     #
#                            C:\arm\elfloader\CX75sw25\Obj\elfloader.r79       #
#                            C:\arm\elfloader\CX75sw25\Obj\png.r79             #
#                            C:\arm\elfloader\CX75sw25\Obj\rets_CX75sw25.r79   #
#                            -o C:\arm\elfloader\CX75sw25\Exe\ELFLoader.a79    #
#                            -Fintel-extended -l                               #
#                            C:\arm\elfloader\CX75sw25\List\ELFLoader.map      #
#                            -xmsnio -f C:\arm\elfloader\CX75sw25.xcl (-carm   #
#                            -Z(CODE)START,CODE,SWITAB,INITTAB,DATA_ID,DATA_C, #
#                            CONFIG_DATA_ID=A0FD8000-A0FDA000                  #
#                            -Z(DATA)CONFIG_DATA_I,DATA_N=A84C81D4-FFFFFFFF    #
#                            -Z(CODE)PATCH_ONCREATE=A04A3808-FFFFFFFF          #
#                            -Z(CODE)PATCH_ONCLOSE=A04A380C-FFFFFFFF           #
#                            -Z(CODE)PATCH_ESI=A0A85B48-FFFFFFFF               #
#                            -Z(CODE)PATCH_NO_UNK_EXT=A02A0984-A02A0987        #
#                            -Z(CODE)SWILIB_FUNC00B=A0FD402C-A0FD402F          #
#                            -Z(CODE)SWILIB_FUNC00C=A0FD4030-A0FD4033          #
#                            -Z(CODE)SWILIB_FUNC095=A0FD4254-A0FD4257          #
#                            -Z(CODE)SWILIB_FUNC12B_12D=A0FD44AC-A0FD44B7      #
#                            -Z(CODE)SWILIB_FUNC171=A0FD45C4-A0FD45C7          #
#                            -Z(CODE)SWILIB_FUNC172=A0FD45C8-A0FD45CB          #
#                            -Z(CODE)SWILIB_FUNC19C=A0FD4670-A0FD4673          #
#                            -Z(CODE)SWILIB_FUNC1B8_1BB=A0FD46E0-A0FD46EF      #
#                            -Z(CODE)SWILIB_FUNC1E9=A0FD47A4-A0FD47A7          #
#                            -Z(DATA)REGEXPL_CNT=A84C81D0-FFFFFFFF             #
#                            -Z(CODE)REG_FILE=A02A0F7C-FFFFFFFF                #
#                            -Z(CODE)PATCH_GET_EXT=A02A0954-FFFFFFFF           #
#                            -Z(CODE)PATCH_GET_REGEXT1=A02A0764-FFFFFFFF       #
#                            -Z(CODE)PATCH_GET_REGEXT2=A02A0778-FFFFFFFF       #
#                            -Z(CODE)PATCH_BIG_ICON=A0354FE4-FFFFFFFF          #
#                            -Z(CODE)PATCH_REGEXPL=A02A1064-FFFFFFFF           #
#                            -Z(CODE)PATCH_GET_PIT=A0801A60-A0801A63           #
#                            -Z(CODE)PATCH_GET_PITJ=A0801A64-A0801A68          #
#                            -Z(CODE)PATCH_KEYB_MSG=A07F6974-FFFFFFFF          #
#                            -Z(CODE)PATCH_KEYB_MSGJ=A07F6978-FFFFFFFF         #
#                            -Z(CODE)FSWI_PATCH1=A0092BE4-FFFFFFFF             #
#                            -Z(CODE)FSWI_PATCH2=A0092CC8-FFFFFFFF             #
#                            -Z(CODE)FSWI_PATCH3=A0092CC7-FFFFFFFF             #
#                            -Z(CODE)LIBR=A0FD4000-A0FD7FFF)                   #
#                            -Oelf,as=C:\arm\elfloader\CX75sw25\Exe\ELFLoader. #
#                            elf                                               #
#                                                                              #
#                        Copyright 1987-2007 IAR Systems. All rights reserved. #
################################################################################





                ****************************************
                *                                      *
                *           CROSS REFERENCE            *
                *                                      *
                ****************************************

                  There are no program entries.




                ****************************************
                *                                      *
                *            RUNTIME MODEL             *
                *                                      *
                ****************************************

  StackAlign4  = USED
  __cpu_mode   = __pcs__interwork
  __data_model = absolute
  __endian     = little
  __rt_version = 6



                ****************************************
                *                                      *
                *              MODULE MAP              *
                *                                      *
                ****************************************


  DEFINED ABSOLUTE ENTRIES
    *************************************************************************

  FILE NAME : C:\arm\elfloader\CX75sw25\Obj\ESI.r79
  PROGRAM MODULE, NAME : ESI

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: A0FD8000 - A0FD8003 (0x4 bytes), align: 2
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           BXR1                    A0FD8000        MyIDLECSMonClose (elfloader)
                                                   MyIDLECSMonCreate (elfloader)
    -------------------------------------------------------------------------
PATCH_ESI
  Relative segment, address: A0A85B48 - A0A85B4F (0x8 bytes), align: 2
  Segment part 1. ROOT.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD8004 - A0FD8037 (0x34 bytes), align: 2
  Segment part 2.             Intra module refs:   Segment part 1
    -------------------------------------------------------------------------
PATCH_NO_UNK_EXT
  Relative segment, address: A02A0984 - A02A0987 (0x4 bytes), align: 2
  Segment part 3. ROOT.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD8038 - A0FD805B (0x24 bytes), align: 2
  Segment part 4.             Intra module refs:   Segment part 3
    -------------------------------------------------------------------------
PATCH_GET_PIT
  Relative segment, address: A0801A60 - A0801A63 (0x4 bytes), align: 2
  Segment part 5. ROOT.
    -------------------------------------------------------------------------
PATCH_GET_PITJ
  Relative segment, address: A0801A64 - A0801A67 (0x4 bytes), align: 2
  Segment part 6. ROOT.       Intra module refs:   Segment part 5
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD805C - A0FD8097 (0x3c bytes), align: 2
  Segment part 7. ROOT.       Intra module refs:   Segment part 6
    -------------------------------------------------------------------------
PATCH_KEYB_MSG
  Relative segment, address: A07F6974 - A07F6977 (0x4 bytes), align: 1
  Segment part 8. ROOT.
    -------------------------------------------------------------------------
PATCH_KEYB_MSGJ
  Relative segment, address: A07F6978 - A07F697B (0x4 bytes), align: 2
  Segment part 9. ROOT.       Intra module refs:   Segment part 8
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD8098 - A0FD80C3 (0x2c bytes), align: 2
  Segment part 10.            Intra module refs:   Segment part 9

    *************************************************************************

  FILE NAME : C:\arm\elfloader\CX75sw25\Obj\EXT2.r79
  PROGRAM MODULE, NAME : EXT2

  SEGMENTS IN THE MODULE
  ======================
PATCH_GET_EXT
  Relative segment, address: A02A0954 - A02A0957 (0x4 bytes), align: 2
  Segment part 0. ROOT.
    -------------------------------------------------------------------------
PATCH_GET_REGEXT1
  Relative segment, address: A02A0764 - A02A0767 (0x4 bytes), align: 2
  Segment part 1. ROOT.
    -------------------------------------------------------------------------
PATCH_GET_REGEXT2
  Relative segment, address: A02A0778 - A02A077B (0x4 bytes), align: 2
  Segment part 2. ROOT.
    -------------------------------------------------------------------------
REG_FILE
  Relative segment, address: A02A0F7C - A02A0F83 (0x8 bytes), align: 2
  Segment part 3. ROOT.
    -------------------------------------------------------------------------
PATCH_BIG_ICON
  Relative segment, address: A0354FE4 - A0354FE7 (0x4 bytes), align: 2
  Segment part 4. ROOT.
    -------------------------------------------------------------------------
PATCH_REGEXPL
  Relative segment, address: A02A1064 - A02A1067 (0x4 bytes), align: 2
  Segment part 5. ROOT.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD80C4 - A0FD810F (0x4c bytes), align: 2
  Segment part 6.             Intra module refs:   Segment part 0
                                                   Segment part 1
                                                   Segment part 2
                                                   Segment part 5

    *************************************************************************

  FILE NAME : C:\arm\elfloader\CX75sw25\Obj\FSWI.r79
  PROGRAM MODULE, NAME : FSWI

  SEGMENTS IN THE MODULE
  ======================
FSWI_PATCH1
  Relative segment, address: A0092BE4 - A0092BE7 (0x4 bytes), align: 2
  Segment part 0. ROOT.
    -------------------------------------------------------------------------
FSWI_PATCH3
  Relative segment, address: A0092CC7 - A0092CC7 (0x1 bytes), align: 0
  Segment part 1. ROOT.
    -------------------------------------------------------------------------
FSWI_PATCH2
  Relative segment, address: A0092CC8 - A0092CCB (0x4 bytes), align: 2
  Segment part 2. ROOT.       Intra module refs:   Segment part 0
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD8110 - A0FD819B (0x8c bytes), align: 2
  Segment part 3. ROOT.       Intra module refs:   Segment part 2
    -------------------------------------------------------------------------
LIBR
  Relative segment, address: A0FD4000, align: 2
  Segment part 4. ROOT.       Intra module refs:   Segment part 3
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Library                 A0FD4000        LoadLibrary (elfloader)

    *************************************************************************

  FILE NAME : C:\arm\elfloader\CX75sw25\Obj\IMB.r79
  PROGRAM MODULE, NAME : IMB

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: A0FD819C - A0FD8207 (0x6c bytes), align: 2
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ExecuteIMB              A0FD819C        ExecuteIMB::??rT (elfloader)
                                                   elfload (elfloader)

    *************************************************************************

  FILE NAME : C:\arm\elfloader\CX75sw25\Obj\additional.r79
  PROGRAM MODULE, NAME : additional

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD8208 - A0FD8293 (0x8c bytes), align: 2
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RegFile                 A0FD8208        Segment part 3 (EXT2)
                                                   Segment part 6 (EXT2)
               stack 1 = 00000000 ( 00000030 )
    -------------------------------------------------------------------------
CODE
  Segment part 11. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD8294 - A0FD82C7 (0x34 bytes), align: 2
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GetBigIcon              A0FD8294        Segment part 4 (EXT2)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 13. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD82C8 - A0FD8373 (0xac bytes), align: 2
  Segment part 14.            Intra module refs:   Segment part 5
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UnregExplExt_impl       A0FD82C8 
               stack 1 = 00000000 ( 00000028 )
    -------------------------------------------------------------------------
CODE
  Segment part 15. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_N
  Relative segment, address: A84C860C - A84C8617 (0xc bytes), align: 2
  Segment part 2.             Intra module refs:   Segment part 29
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _plistq                 A84C860C 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD8374 - A0FD838B (0x18 bytes), align: 2
  Segment part 16.            Intra module refs:   AddKeybMsgHook_impl
           LOCAL                   ADDRESS         
           =====                   =======         
           LLaddToEnd              A0FD8375 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 17. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD838C - A0FD83A5 (0x1a bytes), align: 2
  Segment part 18.            Intra module refs:   AddKeybMsgHook_end_impl
           LOCAL                   ADDRESS         
           =====                   =======         
           LLaddToBegin            A0FD838D 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 19. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD83A8 - A0FD83D7 (0x30 bytes), align: 2
  Segment part 20.            Intra module refs:   RemoveKeybMsgHook_impl
           LOCAL                   ADDRESS         
           =====                   =======         
           LLremoveFromQ           A0FD83A9 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 21. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD83D8 - A0FD842B (0x54 bytes), align: 2
  Segment part 22.            Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddKeybMsgHook_impl     A0FD83D8 
               stack 1 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
CODE
  Segment part 23. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD842C - A0FD849F (0x74 bytes), align: 2
  Segment part 24.            Intra module refs:   Segment part 7
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddKeybMsgHook_end_impl
                                   A0FD842C 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 25. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD84A0 - A0FD84D7 (0x38 bytes), align: 2
  Segment part 26.            Intra module refs:   Segment part 8
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RemoveKeybMsgHook_impl
                                   A0FD84A0 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 27. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD84D8 - A0FD8515 (0x3e bytes), align: 2
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PatchKeybMsg            A0FD84D9        Segment part 10 (ESI)
               stack 1 = 00000000 ( 00000018 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD8518 - A0FD851B (0x4 bytes), align: 2
  Segment part 29.            Intra module refs:   AddKeybMsgHook_end_impl
                                                   AddKeybMsgHook_impl
                                                   PatchKeybMsg
                                                   RemoveKeybMsgHook_impl
    -------------------------------------------------------------------------
CODE
  Segment part 30. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD851C - A0FD8557 (0x3c bytes), align: 2
  Segment part 31.            Intra module refs:   Segment part 3
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           fread32                 A0FD851D 
               stack 1 = 00000000 ( 00000020 )
    -------------------------------------------------------------------------
CODE
  Segment part 32. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD8558 - A0FD8593 (0x3c bytes), align: 2
  Segment part 33.            Intra module refs:   Segment part 4
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           fwrite32                A0FD8559 
               stack 1 = 00000000 ( 00000020 )
    -------------------------------------------------------------------------
CODE
  Segment part 34. NOT NEEDED.Intra module refs:   RegFile
    -------------------------------------------------------------------------
SWILIB_FUNC00B
  Relative segment, address: A0FD402C - A0FD402F (0x4 bytes), align: 2
  Segment part 3. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC00C
  Relative segment, address: A0FD4030 - A0FD4033 (0x4 bytes), align: 2
  Segment part 4. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC095
  Relative segment, address: A0FD4254 - A0FD4257 (0x4 bytes), align: 2
  Segment part 5. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC12B_12D
  Relative segment, address: A0FD44AC - A0FD44AF (0x4 bytes), align: 2
  Segment part 6. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC12B_12D
  Relative segment, address: A0FD44B0 - A0FD44B3 (0x4 bytes), align: 2
  Segment part 7. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC12B_12D
  Relative segment, address: A0FD44B4 - A0FD44B7 (0x4 bytes), align: 2
  Segment part 8. ROOT.
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    *************************************************************************

  FILE NAME : C:\arm\elfloader\CX75sw25\Obj\conf_loader.r79
  PROGRAM MODULE, NAME : conf_loader

  SEGMENTS IN THE MODULE
  ======================
DATA_N
  Relative segment, address: A84C8618 - A84C861B (0x4 bytes), align: 2
  Segment part 2.             Intra module refs:   LoadConfigData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           successed_config_filename
                                   A84C8618 
    -------------------------------------------------------------------------
CODE
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD8594 - A0FD86B3 (0x120 bytes), align: 2
  Segment part 4.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LoadConfigData          A0FD8594        start (elfloader)
               stack 1 = 00000000 ( 00000030 )
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Segment part 6. NOT NEEDED.

    *************************************************************************

  FILE NAME : C:\arm\elfloader\CX75sw25\Obj\config_data.r79
  PROGRAM MODULE, NAME : config_data

  SEGMENTS IN THE MODULE
  ======================
CONFIG_DATA_I
  Relative segment, address: A84C81D4 - A84C81FF (0x2c bytes), align: 2
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr1                 A84C81D4 
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A84C8200 - A84C82FF (0x100 bytes), align: 2
  Segment part 4. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           folder_d                A84C8200        LoadDaemons (elfloader)
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A84C8300 - A84C832B (0x2c bytes), align: 2
  Segment part 6. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr2                 A84C8300 
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A84C832C - A84C836B (0x40 bytes), align: 2
  Segment part 8. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           swi_blib                A84C832C        LoadLibrary (elfloader)
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A84C836C - A84C8397 (0x2c bytes), align: 2
  Segment part 10. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr_m11              A84C836C 
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A84C8398 - A84C83C3 (0x2c bytes), align: 2
  Segment part 12. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr3                 A84C8398 
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A84C83C4 - A84C8443 (0x80 bytes), align: 2
  Segment part 14. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           folder_i                A84C83C4        PatchGetPIT (png)
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A84C8444 - A84C846F (0x2c bytes), align: 2
  Segment part 16. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr4                 A84C8444 
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A84C8470 - A84C84EF (0x80 bytes), align: 2
  Segment part 18. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           folder_e                A84C8470        loading (elfloader)
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A84C84F0 - A84C851B (0x2c bytes), align: 2
  Segment part 20. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr5                 A84C84F0 
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A84C851C - A84C851F (0x4 bytes), align: 2
  Segment part 22. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ALPHA_THRESHOLD         A84C851C        create_imghdr (png)
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A84C8520 - A84C854B (0x2c bytes), align: 2
  Segment part 24. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr6                 A84C8520 
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A84C854C - A84C854F (0x4 bytes), align: 2
  Segment part 26. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CACHE_PNG               A84C854C        PatchGetPIT (png)
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A84C8550 - A84C857B (0x2c bytes), align: 2
  Segment part 28. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr7                 A84C8550 
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A84C857C - A84C857F (0x4 bytes), align: 2
  Segment part 30. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DEFAULT_COLOR           A84C857C        create_imghdr (png)
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A84C8580 - A84C85DF (0x60 bytes), align: 2
  Segment part 32. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfgcbox7_1              A84C8580 
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A84C85E0 - A84C860B (0x2c bytes), align: 2
  Segment part 34. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr_m10              A84C85E0 
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A0FD9B0C - A0FD9B37 (0x2c bytes), align: 2
  Segment part 3. ROOT.       Intra module refs:   cfghdr1
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A0FD9B38 - A0FD9C37 (0x100 bytes), align: 2
  Segment part 5. ROOT.       Intra module refs:   folder_d
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A0FD9C38 - A0FD9C63 (0x2c bytes), align: 2
  Segment part 7. ROOT.       Intra module refs:   cfghdr2
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A0FD9C64 - A0FD9CA3 (0x40 bytes), align: 2
  Segment part 9. ROOT.       Intra module refs:   swi_blib
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A0FD9CA4 - A0FD9CCF (0x2c bytes), align: 2
  Segment part 11. ROOT.      Intra module refs:   cfghdr_m11
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A0FD9CD0 - A0FD9CFB (0x2c bytes), align: 2
  Segment part 13. ROOT.      Intra module refs:   cfghdr3
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A0FD9CFC - A0FD9D7B (0x80 bytes), align: 2
  Segment part 15. ROOT.      Intra module refs:   folder_i
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A0FD9D7C - A0FD9DA7 (0x2c bytes), align: 2
  Segment part 17. ROOT.      Intra module refs:   cfghdr4
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A0FD9DA8 - A0FD9E27 (0x80 bytes), align: 2
  Segment part 19. ROOT.      Intra module refs:   folder_e
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A0FD9E28 - A0FD9E53 (0x2c bytes), align: 2
  Segment part 21. ROOT.      Intra module refs:   cfghdr5
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A0FD9E54 - A0FD9E57 (0x4 bytes), align: 2
  Segment part 23. ROOT.      Intra module refs:   ALPHA_THRESHOLD
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A0FD9E58 - A0FD9E83 (0x2c bytes), align: 2
  Segment part 25. ROOT.      Intra module refs:   cfghdr6
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A0FD9E84 - A0FD9E87 (0x4 bytes), align: 2
  Segment part 27. ROOT.      Intra module refs:   CACHE_PNG
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A0FD9E88 - A0FD9EB3 (0x2c bytes), align: 2
  Segment part 29. ROOT.      Intra module refs:   cfghdr7
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A0FD9EB4 - A0FD9EB7 (0x4 bytes), align: 2
  Segment part 31. ROOT.      Intra module refs:   DEFAULT_COLOR
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A0FD9EB8 - A0FD9F17 (0x60 bytes), align: 2
  Segment part 33. ROOT.      Intra module refs:   cfgcbox7_1
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A0FD9F18 - A0FD9F43 (0x2c bytes), align: 2
  Segment part 35. ROOT.      Intra module refs:   cfghdr_m10
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Segment part 36. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?*?CONFIG_DATA_ID       
    -------------------------------------------------------------------------
INITTAB
  Relative segment, address: A0FD99B4 - A0FD99BF (0xc bytes), align: 2
  Segment part 37. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?init?tab?CONFIG_DATA_I
                                   A0FD99B4 

    *************************************************************************

  FILE NAME : C:\arm\elfloader\CX75sw25\Obj\elfloader.r79
  PROGRAM MODULE, NAME : elfloader

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 24. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD86B4 - A0FD86BF (0xc bytes), align: 2
  Segment part 25.            Intra module refs:   elfload
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zeromem_a               A0FD86B4 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 26. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD86C0 - A0FD897B (0x2bc bytes), align: 2
  Segment part 27.            Intra module refs:   LoadDaemons
                                                   elfloader_onload
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           elfload                 A0FD86C1 
               stack 1 = 00000000 ( 00000224 )
    -------------------------------------------------------------------------
CODE
  Segment part 28. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD897C - A0FD89A1 (0x26 bytes), align: 2
  Segment part 29.            Intra module refs:   Segment part 5
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           elfloader_onload        A0FD897D 
               stack 1 = 00000000 ( 00000088 )
    -------------------------------------------------------------------------
CODE
  Segment part 30. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD89A4 - A0FD8A03 (0x60 bytes), align: 2
  Segment part 31.            Intra module refs:   CreateHELPER_PROC
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           proc_HELPER             A0FD89A4 
               stack 1 = 00000000 ( 00000018 )
    -------------------------------------------------------------------------
CODE
  Segment part 32. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD8A04 - A0FD8A33 (0x30 bytes), align: 2
  Segment part 33.            Intra module refs:   MyIDLECSMonCreate
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CreateHELPER_PROC       A0FD8A04 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 34. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD8A34 - A0FD8A57 (0x24 bytes), align: 2
  Segment part 35.            Intra module refs:   Segment part 22
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           REDRAW_impl             A0FD8A34 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 36. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD8A58 - A0FD8A7B (0x24 bytes), align: 2
  Segment part 37.            Intra module refs:   Segment part 21
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SUBPROC_impl            A0FD8A58 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 38. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD8A7C - A0FD8A87 (0xc bytes), align: 2
  Segment part 39.            Intra module refs:   Segment part 23
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SEQKILLER_impl          A0FD8A7D 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 40. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD8A88 - A0FD8AB3 (0x2c bytes), align: 2
  Segment part 41.            Intra module refs:   Segment part 20
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MyIDLECSMonClose        A0FD8A88 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 42. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD8AB4 - A0FD8B47 (0x94 bytes), align: 2
  Segment part 43.            Intra module refs:   loading
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LoadDaemons             A0FD8AB4 
               stack 1 = 00000000 ( 000001C8 )
    -------------------------------------------------------------------------
CODE
  Segment part 44. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_N
  Relative segment, address: A84C861C - A84C861F (0x4 bytes), align: 2
  Segment part 13.            Intra module refs:   LoadLibrary
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pLIB_TOP                A84C861C        Segment part 1 (rets_CX75sw25)
                                                   Segment part 3 (FSWI)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD8B48 - A0FD8B63 (0x1c bytes), align: 2
  Segment part 45.            Intra module refs:   LoadLibrary
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           get_file_size           A0FD8B49 
               stack 1 = 00000000 ( 00000034 )
    -------------------------------------------------------------------------
CODE
  Segment part 46. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD8B64 - A0FD8CA7 (0x144 bytes), align: 2
  Segment part 47.            Intra module refs:   loading
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LoadLibrary             A0FD8B64 
               stack 1 = 00000000 ( 00000050 )
    -------------------------------------------------------------------------
CODE
  Segment part 48. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_N
  Relative segment, address: A84C8620 - A84C865F (0x40 bytes), align: 2
  Segment part 14.            Intra module refs:   Segment part 15
                                                   Segment part 16
                                                   loading
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           bigicons_str            A84C8640 
           smallicons_str          A84C8620 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD8CA8 - A0FD8D2F (0x88 bytes), align: 2
  Segment part 49.            Intra module refs:   create_folder
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           mktree                  A0FD8CA8 
               stack 1 = 00000000 ( 0000009C )
    -------------------------------------------------------------------------
CODE
  Segment part 50. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD8D30 - A0FD8D47 (0x18 bytes), align: 2
  Segment part 51.            Intra module refs:   start
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           create_folder           A0FD8D30 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 52. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD8D48 - A0FD8DC3 (0x7c bytes), align: 2
  Segment part 53.            Intra module refs:   start
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           loading                 A0FD8D48 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 54. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A0FD99C0 - A0FD99C7 (0x8 bytes), align: 2
  Segment part 2.             Intra module refs:   LoadDaemons
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A0FD99C8 - A0FD9A0B (0x44 bytes), align: 2
  Segment part 3.             Intra module refs:   LoadLibrary
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A0FD9A0C - A0FD9A1F (0x14 bytes), align: 2
  Segment part 4.             Intra module refs:   create_folder
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A0FD9A20 - A0FD9A57 (0x38 bytes), align: 2
  Segment part 5.             Intra module refs:   loading
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A0FD9A58 - A0FD9A5B (0x4 bytes), align: 2
  Segment part 6.             Intra module refs:   Segment part 5
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A0FD9A5C - A0FD9ABB (0x60 bytes), align: 2
  Segment part 7.             Intra module refs:   start
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A0FD9ABC - A0FD9AC3 (0x8 bytes), align: 2
  Segment part 8.             Intra module refs:   ESI
    -------------------------------------------------------------------------
DATA_C
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_C
  Segment part 10. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A0FD9AC4 - A0FD9ADF (0x1c bytes), align: 2
  Segment part 11.            Intra module refs:   NO_FUNC
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A0FD9AE0 - A0FD9AE7 (0x8 bytes), align: 2
  Segment part 12.            Intra module refs:   CreateHELPER_PROC
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A0FD9AE8 - A0FD9AEF (0x8 bytes), align: 2
  Segment part 15.            Intra module refs:   Segment part 5
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A0FD9AF0 - A0FD9AF7 (0x8 bytes), align: 2
  Segment part 16.            Intra module refs:   Segment part 5
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD8DC4 - A0FD8E0F (0x4c bytes), align: 2
  Segment part 55.            Intra module refs:   MyIDLECSMonCreate
                                                   create_folder
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           start                   A0FD8DC4 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 56. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD8E10 - A0FD8E37 (0x28 bytes), align: 2
  Segment part 57.            Intra module refs:   Segment part 19
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MyIDLECSMonCreate       A0FD8E10 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 58. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD8E38 - A0FD8EA7 (0x70 bytes), align: 2
  Segment part 59.            Intra module refs:   ascii2ws
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           char8to16               A0FD8E39 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 60. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD8EA8 - A0FD8EC3 (0x1c bytes), align: 2
  Segment part 61.            Intra module refs:   ESI
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ascii2ws                A0FD8EA9 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 62. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD8EC4 - A0FD8F0F (0x4c bytes), align: 2
  Segment part 63.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ESI                     A0FD8EC4        Segment part 2 (ESI)
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 64. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 65. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DoUnknownFileType       
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 66. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_N
  Relative segment, address: A84C8660 - A84C8663 (0x4 bytes), align: 2
  Segment part 17.            Intra module refs:   EXT2_REALLOC
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EXT2_AREA               A84C8660        Segment part 1 (rets_CX75sw25)
                                                   Segment part 6 (EXT2)
                                                   UnregExplExt_impl (additional)
    -------------------------------------------------------------------------
REGEXPL_CNT
  Relative segment, address: A84C81D0 - A84C81D3 (0x4 bytes), align: 2
  Segment part 18.            Intra module refs:   EXT2_REALLOC
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EXT2_CNT                A84C81D0        UnregExplExt_impl (additional)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD8F10 - A0FD8F8F (0x80 bytes), align: 2
  Segment part 67.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EXT2_REALLOC            A0FD8F10        RegFile (additional)
               stack 1 = 00000000 ( 0000001C )
    -------------------------------------------------------------------------
CODE
  Segment part 68. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 69. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PropertyPatch           
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 70. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 71. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           FUNC_ABORT              
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 72. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD8F90 - A0FD8FC3 (0x34 bytes), align: 2
  Segment part 73.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NO_FUNC                 A0FD8F90        Segment part 3 (FSWI)
               stack 1 = 00000000 ( 00000044 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD8FC4 - A0FD8FCB (0x8 bytes), align: 2
  Segment part 74.            Intra module refs:   elfload
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ExecuteIMB::??rT        A0FD8FC5 
    -------------------------------------------------------------------------
CODE
  Segment part 75. NOT NEEDED.Intra module refs:   MyIDLECSMonClose
                                                   MyIDLECSMonCreate
    -------------------------------------------------------------------------
CODE
  Segment part 76. NOT NEEDED.Intra module refs:   loading
    -------------------------------------------------------------------------
CODE
  Segment part 77. NOT NEEDED.Intra module refs:   start
    -------------------------------------------------------------------------
CODE
  Segment part 78. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 79. NOT NEEDED.
    -------------------------------------------------------------------------
PATCH_ONCREATE
  Relative segment, address: A04A3808 - A04A380B (0x4 bytes), align: 2
  Segment part 19. ROOT.
    -------------------------------------------------------------------------
PATCH_ONCLOSE
  Relative segment, address: A04A380C - A04A380F (0x4 bytes), align: 2
  Segment part 20. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC171
  Relative segment, address: A0FD45C4 - A0FD45C7 (0x4 bytes), align: 2
  Segment part 21. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC172
  Relative segment, address: A0FD45C8 - A0FD45CB (0x4 bytes), align: 2
  Segment part 22. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC19C
  Relative segment, address: A0FD4670 - A0FD4673 (0x4 bytes), align: 2
  Segment part 23. ROOT.
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    *************************************************************************

  FILE NAME : C:\arm\elfloader\CX75sw25\Obj\png.r79
  PROGRAM MODULE, NAME : png

  SEGMENTS IN THE MODULE
  ======================
DATA_C
  Relative segment, address: A0FD9AF8 - A0FD9AFF (0x8 bytes), align: 2
  Segment part 2.             Intra module refs:   create_imghdr
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A0FD9B08 - A0FD9B08 (0x1 bytes), align: 0
  Segment part 3.             Intra module refs:   empty_img
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Pointer                 A0FD9B08 
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A0FD9B00 - A0FD9B07 (0x8 bytes), align: 2
  Segment part 4.             Intra module refs:   PatchGetPIT
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           empty_img               A0FD9B00 
    -------------------------------------------------------------------------
CODE
  Segment part 7. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD8FCC - A0FD8FD3 (0x8 bytes), align: 2
  Segment part 8.             Intra module refs:   create_imghdr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           xmalloc                 A0FD8FCD 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD8FD4 - A0FD8FDB (0x8 bytes), align: 2
  Segment part 10.            Intra module refs:   create_imghdr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           xmfree                  A0FD8FD5 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 11. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD8FDC - A0FD9003 (0x28 bytes), align: 2
  Segment part 12.            Intra module refs:   create_imghdr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           read_data_fn            A0FD8FDC 
               stack 1 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
CODE
  Segment part 13. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD9004 - A0FD95AF (0x5ac bytes), align: 2
  Segment part 14.            Intra module refs:   PatchGetPIT
                                                   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           create_imghdr           A0FD9004 
               stack 1 = 00000000 ( 00000060 )
    -------------------------------------------------------------------------
CODE
  Segment part 15. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_N
  Relative segment, address: A84C8664 - A84C866F (0xc bytes), align: 2
  Segment part 5.             Intra module refs:   InitPngBitMap
                                                   Segment part 23
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pngtop                  A84C8664        Segment part 1 (rets_CX75sw25)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD95B0 - A0FD95D3 (0x24 bytes), align: 2
  Segment part 16.            Intra module refs:   PatchGetPIT
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           strcpy_tolow            A0FD95B1 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 17. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD95D4 - A0FD966B (0x98 bytes), align: 2
  Segment part 18.            Intra module refs:   PatchGetPIT
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           print10                 A0FD95D4 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 19. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD966C - A0FD96DF (0x74 bytes), align: 2
  Segment part 20.            Intra module refs:   PatchGetPIT
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           find_png_in_cache       A0FD966C 
               stack 1 = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
CODE
  Segment part 21. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD96E0 - A0FD994F (0x270 bytes), align: 2
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PatchGetPIT             A0FD96E0        Segment part 7 (ESI)
               stack 1 = 00000000 ( 00000120 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD9950 - A0FD9953 (0x4 bytes), align: 2
  Segment part 23.            Intra module refs:   PatchGetPIT
                                                   find_png_in_cache
    -------------------------------------------------------------------------
CODE
  Segment part 24. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD9954 - A0FD998F (0x3c bytes), align: 2
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           InitPngBitMap           A0FD9954        loading (elfloader)
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
SWILIB_FUNC1E9
  Relative segment, address: A0FD47A4 - A0FD47A7 (0x4 bytes), align: 2
  Segment part 6. ROOT.
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    *************************************************************************

  FILE NAME : C:\arm\elfloader\CX75sw25\Obj\rets_CX75sw25.r79
  PROGRAM MODULE, NAME : rets_CX75sw25

Absolute parts
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           StoreErrInfoAndAbort    A07CD184 
           StoreErrString          A07CCFA8 
  SEGMENTS IN THE MODULE
  ======================
DATA_N
  Relative segment, address: A84C8670, align: 2
  Segment part 0. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC1B8_1BB
  Relative segment, address: A0FD46E0 - A0FD46EF (0x10 bytes), align: 2
  Segment part 1. ROOT.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD9990 - A0FD99B3 (0x24 bytes), align: 2
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OldOnClose              A0FD9990        MyIDLECSMonClose (elfloader)
           OldOnCreate             A0FD9994        MyIDLECSMonCreate (elfloader)
           ESIOld                  A0FD9998        Segment part 2 (ESI)
           PITgetN                 A0FD999C        Segment part 7 (ESI)
           PITret                  A0FD99A0        Segment part 7 (ESI)
           KEYBret                 A0FD99A4        Segment part 10 (ESI)
           KEYBfunc                A0FD99A8        Segment part 10 (ESI)
           FReadOld                A0FD99AC        fread32 (additional)
           FWriteOld               A0FD99B0        fwrite32 (additional)




                ****************************************
                *                                      *
                *            MODULE SUMMARY            *
                *                                      *
                ****************************************

Module            CODE   DATA
------            ----   ----
                 (Rel)  (Rel)
ESI                224
EXT2               104
FSWI               149
IMB                108
additional         932     12
conf_loader        288      4
config_data      1 092  1 080
elfloader        2 652     76
  + shared           8
png              2 521     12
rets_CX75sw25       52
N/A (alignment)
------           -----  -----
Total:           8 130  1 184


                ****************************************
                *                                      *
                *              CALL GRAPH              *
                *                                      *
                ****************************************

  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  UnregExplExt_impl
      | Stack used (prev) :  00000000
      | + function block  :  00000028
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000028


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  AddKeybMsgHook_impl
      | Stack used (prev) :  00000000
      | + function block  :  00000010
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000010


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  AddKeybMsgHook_end_impl
      | Stack used (prev) :  00000000
      | + function block  :  0000000C
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000000C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  RemoveKeybMsgHook_impl
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  fread32
      | Stack used (prev) :  00000000
      | + function block  :  00000020
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000020


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  fwrite32
      | Stack used (prev) :  00000000
      | + function block  :  00000020
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000020


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  elfloader_onload
      | Stack used (prev) :  00000000
      | + function block  :  00000088
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000088


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  proc_HELPER
      | Stack used (prev) :  00000000
      | + function block  :  00000018
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000018


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  REDRAW_impl
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  SUBPROC_impl
      | Stack used (prev) :  00000000
      | + function block  :  00000008
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000008


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  SEQKILLER_impl
      | Stack used (prev) :  00000000
      | + function block  :  00000008
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000008


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  MyIDLECSMonClose
      | Stack used (prev) :  00000000
      | + function block  :  00000008
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000008


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  LoadDaemons
      | Stack used (prev) :  00000000
      | + function block  :  000001C8
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  000001C8


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  MyIDLECSMonCreate
      | Stack used (prev) :  00000000
      | + function block  :  00000008
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000008


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  xmalloc
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  xmfree
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  read_data_fn
      | Stack used (prev) :  00000000
      | + function block  :  00000010
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000010


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  create_imghdr
      | Stack used (prev) :  00000000
      | + function block  :  00000060
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000060


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000001C8
  01  RegFile
      | Stack used (prev) :  000001C8
      | + function block  :  00000030
  <-Sub-tree of type: Function tree
    | Stack used          :  000001F8


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000001F8
  01  GetBigIcon
      | Stack used (prev) :  000001F8
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  000001FC


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000001FC
  01  LLaddToEnd
      | Stack used (prev) :  000001FC
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00000200


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000200
  01  LLaddToBegin
      | Stack used (prev) :  00000200
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00000204


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000204
  01  LLremoveFromQ
      | Stack used (prev) :  00000204
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  0000020C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000020C
  01  PatchKeybMsg
      | Stack used (prev) :  0000020C
      | + function block  :  00000018
  <-Sub-tree of type: Function tree
    | Stack used          :  00000224


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000224
  01  LoadConfigData
      | Stack used (prev) :  00000224
      | + function block  :  00000030
  <-Sub-tree of type: Function tree
    | Stack used          :  00000254


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000254
  01  zeromem_a
      | Stack used (prev) :  00000254
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00000258


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000258
  01  elfload
      | Stack used (prev) :  00000258
      | + function block  :  00000224
  <-Sub-tree of type: Function tree
    | Stack used          :  0000047C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000047C
  01  CreateHELPER_PROC
      | Stack used (prev) :  0000047C
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00000484


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000484
  01  get_file_size
      | Stack used (prev) :  00000484
      | + function block  :  00000034
  <-Sub-tree of type: Function tree
    | Stack used          :  000004B8


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000004B8
  01  LoadLibrary
      | Stack used (prev) :  000004B8
      | + function block  :  00000050
  <-Sub-tree of type: Function tree
    | Stack used          :  00000508


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000508
  01  mktree
      | Stack used (prev) :  00000508
      | + function block  :  0000009C
  <-Sub-tree of type: Function tree
    | Stack used          :  000005A4


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000005A4
  01  create_folder
      | Stack used (prev) :  000005A4
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  000005A8


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000005A8
  01  loading
      | Stack used (prev) :  000005A8
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B4


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000005B4
  01  start
      | Stack used (prev) :  000005B4
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  000005BC


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000005BC
  01  char8to16
      | Stack used (prev) :  000005BC
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  000005C0


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000005C0
  01  ascii2ws
      | Stack used (prev) :  000005C0
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  000005CC


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000005CC
  01  ESI
      | Stack used (prev) :  000005CC
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  000005D8


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000005D8
  01  EXT2_REALLOC
      | Stack used (prev) :  000005D8
      | + function block  :  0000001C
  <-Sub-tree of type: Function tree
    | Stack used          :  000005F4


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000005F4
  01  NO_FUNC
      | Stack used (prev) :  000005F4
      | + function block  :  00000044
  <-Sub-tree of type: Function tree
    | Stack used          :  00000638


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000638
  01  strcpy_tolow
      | Stack used (prev) :  00000638
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  0000063C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000063C
  01  print10
      | Stack used (prev) :  0000063C
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00000640


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000640
  01  find_png_in_cache
      | Stack used (prev) :  00000640
      | + function block  :  00000014
  <-Sub-tree of type: Function tree
    | Stack used          :  00000654


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000654
  01  PatchGetPIT
      | Stack used (prev) :  00000654
      | + function block  :  00000120
  <-Sub-tree of type: Function tree
    | Stack used          :  00000774


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000774
  01  InitPngBitMap
      | Stack used (prev) :  00000774
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00000780




                ****************************************
                *                                      *
                *      SEGMENTS IN ADDRESS ORDER       *
                *                                      *
                ****************************************


SEGMENT              SPACE    START ADDRESS   END ADDRESS     SIZE  TYPE  ALIGN
=======              =====    =============   ===========     ====  ====  =====
FSWI_PATCH1                        A0092BE4 - A0092BE7           4   rel    2
FSWI_PATCH3                        A0092CC7 - A0092CC7           1   rel    0
FSWI_PATCH2                        A0092CC8 - A0092CCB           4   rel    2
PATCH_GET_REGEXT1                  A02A0764 - A02A0767           4   rel    2
PATCH_GET_REGEXT2                  A02A0778 - A02A077B           4   rel    2
PATCH_GET_EXT                      A02A0954 - A02A0957           4   rel    2
PATCH_NO_UNK_EXT                   A02A0984 - A02A0987           4   rel    2
REG_FILE                           A02A0F7C - A02A0F83           8   rel    2
PATCH_REGEXPL                      A02A1064 - A02A1067           4   rel    2
PATCH_BIG_ICON                     A0354FE4 - A0354FE7           4   rel    2
PATCH_ONCREATE                     A04A3808 - A04A380B           4   rel    2
PATCH_ONCLOSE                      A04A380C - A04A380F           4   rel    2
PATCH_KEYB_MSG                     A07F6974 - A07F6977           4   rel    1
PATCH_KEYB_MSGJ                    A07F6978 - A07F697B           4   rel    2
PATCH_GET_PIT                      A0801A60 - A0801A63           4   rel    2
PATCH_GET_PITJ                     A0801A64 - A0801A67           4   rel    2
PATCH_ESI                          A0A85B48 - A0A85B4F           8   rel    2
LIBR                                    A0FD4000                     rel    2
SWILIB_FUNC00B                     A0FD402C - A0FD402F           4   rel    2
SWILIB_FUNC00C                     A0FD4030 - A0FD4033           4   rel    2
SWILIB_FUNC095                     A0FD4254 - A0FD4257           4   rel    2
SWILIB_FUNC12B_12D                 A0FD44AC - A0FD44B7           C   rel    2
SWILIB_FUNC171                     A0FD45C4 - A0FD45C7           4   rel    2
SWILIB_FUNC172                     A0FD45C8 - A0FD45CB           4   rel    2
SWILIB_FUNC19C                     A0FD4670 - A0FD4673           4   rel    2
SWILIB_FUNC1B8_1BB                 A0FD46E0 - A0FD46EF          10   rel    2
SWILIB_FUNC1E9                     A0FD47A4 - A0FD47A7           4   rel    2
START                                   A0FD8000                     dse    0
CODE                               A0FD8000 - A0FD99B3        19B4   rel    2
SWITAB                                  A0FD99B4                     dse    0
INITTAB                            A0FD99B4 - A0FD99BF           C   rel    2
DATA_ID                                 A0FD99C0                     dse    0
DATA_C                             A0FD99C0 - A0FD9B08         149   rel    2
CONFIG_DATA_ID                     A0FD9B0C - A0FD9F43         438   rel    2
REGEXPL_CNT                        A84C81D0 - A84C81D3           4   rel    2
CONFIG_DATA_I                      A84C81D4 - A84C860B         438   rel    2
DATA_N                             A84C860C - A84C866F          64   rel    2

                ****************************************
                *                                      *
                *        END OF CROSS REFERENCE        *
                *                                      *
                ****************************************

 8 130 bytes of CODE memory
 1 184 bytes of DATA memory

Errors: none
Warnings: none

