##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION    09/Jul/2010  14:24:43 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  C:\arm\MusicButton\draw.c                            #
#    Command line    =  C:\arm\MusicButton\draw.c -D NEWSGOLD -lC            #
#                       C:\arm\MusicButton\NSG\List\ -o                      #
#                       C:\arm\MusicButton\NSG\Obj\ -s9 --no_unroll          #
#                       --no_clustering --cpu_mode arm --endian little       #
#                       --cpu ARM926EJ-S --stack_align 4 --interwork -e      #
#                       --fpu None -I "C:\arm2\Embedded Workbench 4.0        #
#                       Evaluation\ARM\INC\" --inline_threshold=2            #
#    List file       =  C:\arm\MusicButton\NSG\List\draw.lst                 #
#    Object file     =  C:\arm\MusicButton\NSG\Obj\draw.r79                  #
#                                                                            #
#                                                                            #
##############################################################################

C:\arm\MusicButton\draw.c
      1          #include "draw.h"
      2          

   \                                 In segment CODE, align 4, keep-with-next
      3          void DrawTags()
      4          {
      5          
      6          }
   \                     DrawTags:
   \   00000000   1EFF2FE1           BX       LR               ;; return

   Maximum stack usage in bytes:

     Function CSTACK
     -------- ------
     DrawTags     0


   Segment part sizes:

     Function/Label Bytes
     -------------- -----
     DrawTags          4
      Others           4

 
 8 bytes in segment CODE
 
 4 bytes of CODE memory (+ 4 bytes shared)

Errors: none
Warnings: none
