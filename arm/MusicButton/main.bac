/*
* PlayersControl
* (c) Danil_e71
* »де€ Snoop-Cat
* 2010
*/
#include "conf_loader.h"//кфг
#include "main.h"//константы
#include "funcs.c"//основные функции
#define VERSION "0.5"
#include "draw.h"

//#define OLDMAPLAYER если да, то дл€ старой версии maplayer



int MyFunc(int key1,int key2,int key1type,int key2type,int msg,int submsg,void ptr(),int number)
{
  if((submsg==key1&&(key1type==KEY_LONG_PRESS&&msg==LONG_PRESS)||key1type==KEY_ONE_CLICK&&msg==KEY_UP)||(submsg==key2&&(key2type==KEY_LONG_PRESS&&msg==LONG_PRESS)||key2type==KEY_ONE_CLICK&&msg==KEY_UP))
  {
    ptr();
    return KEYHOOK_BREAK;
  }
  if((key1type==KEY_DOUBLE_CLICK&&msg==KEY_UP&&submsg==key1)||(key2type==KEY_DOUBLE_CLICK&&msg==KEY_UP&&submsg==key2))
  {
    doublekey[number]++;
    TmrSec();
    if(doublekey[number]==DOUBLE_SECOND)
    {
      ptr();
      doublekey[number]=DOUBLE_NULL;
  } 
  return KEYHOOK_BREAK;  
  }
 
 if((key1type==KEY_TWO&&key2type==KEY_TWO&&msg==KEY_UP)&&(submsg==key1||submsg==key2))
  {
    if(submsg==key1){doublekey[number]++;TmrSec();}
    if(doublekey[number]==DOUBLE_FIRST&&submsg==key2)
    {
      ptr();
      doublekey[number]=DOUBLE_NULL;
  }   
  return KEYHOOK_BREAK;
  } 
    
    return KEYHOOK_NEXT;
}


int my_keyhook(int submsg, int msg)//—амый жестокий мой код в жизни!!!!
{

 if((MainType==TYPE_ONLY_UNLOCK&&!IsUnlocked())||(MainType==TYPE_ONLY_LOCK&&!IsUnlocked())||MainType==TYPE_BOTH) 
  { 
    if(!IsPlayerOn()&&(StartKey1_1Type!=KEY_NOT_USE||StartKey1_2Type!=KEY_NOT_USE))
  {
    
 /* if((submsg==StartKey1_1&&((StartKey1_1Type==KEY_LONG_PRESS&&msg==LONG_PRESS)||(StartKey1_1Type==KEY_ONE_CLICK&&msg==KEY_UP)))||(((StartKey1_2Type==KEY_LONG_PRESS&&msg==LONG_PRESS)||(StartKey1_2Type==KEY_ONE_CLICK&&msg==KEY_UP))&&submsg==StartKey1_2))
  {
    Start(STANDART);
    return KEYHOOK_BREAK;
    
  }
  if((StartKey1_1Type==KEY_DOUBLE_CLICK&&msg==KEY_UP&&submsg==StartKey1_1)||(StartKey1_2Type==KEY_DOUBLE_CLICK&&msg==KEY_UP&&submsg==StartKey1_2))
  {
    doublekey[0]++;TmrSec();
    if(doublekey[0]==DOUBLE_SECOND)
    {
      Start(STANDART);
      doublekey[0]=DOUBLE_NULL;
  } 
  return KEYHOOK_BREAK;  
  }    
 
 if((StartKey1_1Type==KEY_TWO&&StartKey1_2Type==KEY_TWO&&msg==KEY_UP)&&(submsg==StartKey1_1||submsg==StartKey1_2))
  {
    if(submsg==StartKey1_1){doublekey[0]++;TmrSec();}
    if(doublekey[0]==DOUBLE_FIRST&&submsg==StartKey1_2)
    {
      Start(STANDART);
      doublekey[0]=DOUBLE_NULL;
  }   
  return KEYHOOK_BREAK;
  }*/
 return MyFunc(StartKey1_1,StartKey1_2,StartKey1_1Type,StartKey1_2Type,msg,submsg,Start,0);
     }
//-------------------------  
      if(!IsIvoOn&&(StartKey2_1Type!=KEY_NOT_USE||StartKey2_2Type!=KEY_NOT_USE))
  {
    
  if((((StartKey2_1Type==KEY_LONG_PRESS&&msg==LONG_PRESS)||(StartKey2_1Type==KEY_ONE_CLICK&&msg==KEY_UP))&&submsg==StartKey2_1)
  ||(((StartKey2_2Type==KEY_LONG_PRESS&&msg==LONG_PRESS)||(StartKey2_2Type==KEY_ONE_CLICK&&msg==KEY_UP))&&submsg==StartKey2_2))
  {
    Start(IVOPLAY);return KEYHOOK_BREAK;
  }
  
  
  if((StartKey2_1Type==KEY_DOUBLE_CLICK&&msg==KEY_UP&&submsg==StartKey2_1)||(StartKey2_2Type==KEY_DOUBLE_CLICK&&msg==KEY_UP&&submsg==StartKey2_2))
  {
    doublekey[1]++;TmrSec();
    if(doublekey[1]==DOUBLE_SECOND)
    {
      Start(IVOPLAY);
      doublekey[1]=DOUBLE_NULL;
  }    return KEYHOOK_BREAK;
  }    
 
  
  if((StartKey2_1Type==KEY_TWO&&StartKey2_2Type==KEY_TWO&&msg==KEY_UP)&&(submsg==StartKey2_1||submsg==StartKey2_2))
  {
    if(submsg==StartKey2_1){doublekey[1]++;TmrSec();}
    if(doublekey[1]==DOUBLE_FIRST&&submsg==StartKey2_2)
    {
      Start(IVOPLAY);
      doublekey[1]=DOUBLE_NULL;
  }    return KEYHOOK_BREAK;
  }
    }//запуск Ivo

 //------------------------- 
   if(!IsMaplayerOn&&(StartKey3_1Type!=KEY_NOT_USE||StartKey3_2Type!=KEY_NOT_USE))
  {
    
  if((((StartKey3_1Type==KEY_LONG_PRESS&&msg==LONG_PRESS)||(StartKey3_1Type==KEY_ONE_CLICK&&msg==KEY_UP))&&submsg==StartKey3_1)
  ||(((StartKey3_2Type==KEY_LONG_PRESS&&msg==LONG_PRESS)||(StartKey3_2Type==KEY_ONE_CLICK&&msg==KEY_UP))&&submsg==StartKey3_2))
  {
    Start(MAPLAYER);return KEYHOOK_BREAK;
  }
  
  
  if((StartKey3_1Type==KEY_DOUBLE_CLICK&&msg==KEY_UP&&submsg==StartKey3_1)||(StartKey3_2Type==KEY_DOUBLE_CLICK&&msg==KEY_UP&&submsg==StartKey3_2))
  {
    doublekey[2]++;TmrSec();
    if(doublekey[2]==DOUBLE_SECOND)
    {
      Start(MAPLAYER);
      doublekey[2]=DOUBLE_NULL;
  }    return KEYHOOK_BREAK;
  }    
 
  
  if((StartKey3_1Type==KEY_TWO&&StartKey3_2Type==KEY_TWO&&msg==KEY_UP)&&(submsg==StartKey3_1||submsg==StartKey3_2))
  {
    if(submsg==StartKey3_1){doublekey[2]++;TmrSec();}
    if(doublekey[2]==DOUBLE_FIRST&&submsg==StartKey3_2)
    {
      Start(MAPLAYER);
      doublekey[2]=DOUBLE_NULL;
  }    return KEYHOOK_BREAK;
  }
  
  }
 
   if(!IsSPlayerOn&&(StartKey4_1Type!=KEY_NOT_USE||StartKey4_2Type!=KEY_NOT_USE))
  {
    
  if((((StartKey4_1Type==KEY_LONG_PRESS&&msg==LONG_PRESS)||(StartKey4_1Type==KEY_ONE_CLICK&&msg==KEY_UP))&&submsg==StartKey4_1)
  ||(((StartKey4_2Type==KEY_LONG_PRESS&&msg==LONG_PRESS)||(StartKey4_2Type==KEY_ONE_CLICK&&msg==KEY_UP))&&submsg==StartKey4_2))
  {
    Start(MAPLAYER);return KEYHOOK_BREAK;
  }
  
  
  if((StartKey4_1Type==KEY_DOUBLE_CLICK&&msg==KEY_UP&&submsg==StartKey4_1)||(StartKey4_2Type==KEY_DOUBLE_CLICK&&msg==KEY_UP&&submsg==StartKey4_2))
  {
    doublekey[14]++;TmrSec();
    if(doublekey[14]==DOUBLE_SECOND)
    {
      Start(SPLAYER);
      doublekey[14]=DOUBLE_NULL;
  }    return KEYHOOK_BREAK;
  }    
 
  
  if((StartKey4_1Type==KEY_TWO&&StartKey4_2Type==KEY_TWO&&msg==KEY_UP)&&(submsg==StartKey4_1||submsg==StartKey4_2))
  {
    if(submsg==StartKey4_1){doublekey[2]++;TmrSec();}
    if(doublekey[14]==DOUBLE_FIRST&&submsg==StartKey4_2)
    {
      Start(SPLAYER);
      doublekey[14]=DOUBLE_NULL;
  }    return KEYHOOK_BREAK;
  }
  
  }
   //----------зјѕ”—  ќ“ƒ≈Ћ№Ќќ-^^---------------------------------
 
    
  if(IsPlayerOn()||IsIvoOn||IsMaplayerOn||IsSPlayerOn)
  {
   
    if(PlayPauseKey_1Type!=KEY_NOT_USE||PlayPauseKey_2Type!=KEY_NOT_USE)
  {
    
  if((((PlayPauseKey_1Type==KEY_LONG_PRESS&&msg==LONG_PRESS)||(PlayPauseKey_1Type==KEY_ONE_CLICK&&msg==KEY_UP))&&submsg==PlayPauseKey_1)
  ||(((PlayPauseKey_2Type==KEY_LONG_PRESS&&msg==LONG_PRESS)||(PlayPauseKey_2Type==KEY_ONE_CLICK&&msg==KEY_UP))&&submsg==PlayPauseKey_2))
  {
    PlayPause();return KEYHOOK_BREAK;
  }
  
  
  if((PlayPauseKey_1Type==KEY_DOUBLE_CLICK&&msg==KEY_UP&&submsg==PlayPauseKey_1)||(PlayPauseKey_2Type==KEY_DOUBLE_CLICK&&msg==KEY_UP&&submsg==PlayPauseKey_2))
  {
    if(submsg==PlayPauseKey_1){doublekey[3]++;TmrSec();}
    if(doublekey[3]==DOUBLE_SECOND)
    {
      PlayPause();
      doublekey[3]=DOUBLE_NULL;
  } 
  return KEYHOOK_BREAK;
  }    
 
  
  if((PlayPauseKey_1Type==KEY_TWO&&PlayPauseKey_2Type==KEY_TWO&&msg==KEY_UP)&&(submsg==PlayPauseKey_1||submsg==PlayPauseKey_2))
  {
    if(submsg==PlayPauseKey_1){doublekey[3]++;TmrSec();}
    if(doublekey[3]==DOUBLE_FIRST&&submsg==PlayPauseKey_2)
    {
      PlayPause();
      doublekey[3]=DOUBLE_NULL;
  }   
  return KEYHOOK_BREAK;
  }
  
  }
  //-------------------------

   
   if(CloseKey_1Type!=KEY_NOT_USE||CloseKey_2Type!=KEY_NOT_USE)
  {
    
  if((((CloseKey_1Type==KEY_LONG_PRESS&&msg==LONG_PRESS)||(CloseKey_1Type==KEY_ONE_CLICK&&msg==KEY_UP))&&submsg==CloseKey_1)
  ||(((CloseKey_2Type==KEY_LONG_PRESS&&msg==LONG_PRESS)||(CloseKey_2Type==KEY_ONE_CLICK&&msg==KEY_UP))&&submsg==CloseKey_2))
  {
    Close();
    return KEYHOOK_BREAK;
  }
  
  
  if((CloseKey_1Type==KEY_DOUBLE_CLICK&&msg==KEY_UP&&submsg==CloseKey_1)||(CloseKey_2Type==KEY_DOUBLE_CLICK&&msg==KEY_UP&&submsg==CloseKey_2))
  {
    doublekey[4]++;TmrSec();
    if(doublekey[4]==DOUBLE_SECOND)
    {
      Close();
      doublekey[4]=DOUBLE_NULL;
  }    
  return KEYHOOK_BREAK;
  }    
 
  
  if((CloseKey_1Type==KEY_TWO&&CloseKey_2Type==KEY_TWO&&msg==KEY_UP)&&(submsg==CloseKey_1||submsg==CloseKey_2))
  {
    if(submsg==CloseKey_1){doublekey[4]++;TmrSec();}
    if(doublekey[4]==DOUBLE_FIRST&&submsg==CloseKey_2)
    {
      Close();
      doublekey[4]=DOUBLE_NULL;
  }   
  return KEYHOOK_BREAK;
  }
  
  }

//-------------------------
    
 if(StopKey_1Type!=KEY_NOT_USE||StopKey_2Type!=KEY_NOT_USE)
  {
   
  if((((StopKey_1Type==KEY_LONG_PRESS&&msg==LONG_PRESS)||(StopKey_1Type==KEY_ONE_CLICK&&msg==KEY_UP))&&submsg==StopKey_1)
  ||(((StopKey_2Type==KEY_LONG_PRESS&&msg==LONG_PRESS)||(StopKey_2Type==KEY_ONE_CLICK&&msg==KEY_UP))&&submsg==StopKey_2))
  {
    Stop();return KEYHOOK_BREAK;
  }
  
  
  if((StopKey_1Type==KEY_DOUBLE_CLICK&&msg==KEY_UP&&submsg==StopKey_1)||(StopKey_2Type==KEY_DOUBLE_CLICK&&msg==KEY_UP&&submsg==StopKey_2))
  {
    doublekey[5]++;TmrSec();
    if(doublekey[5]==DOUBLE_SECOND)
    {
      Stop();
      doublekey[5]=DOUBLE_NULL;
  }    return KEYHOOK_BREAK;
  }    
 
  
  if((StopKey_1Type==KEY_TWO&&StopKey_2Type==KEY_TWO&&msg==KEY_UP)&&(submsg==StopKey_1||submsg==StopKey_2))
  {
    if(submsg==StopKey_1){doublekey[5]++;TmrSec();}
    if(doublekey[5]==DOUBLE_FIRST&&submsg==StopKey_2)
    {
      Stop();
      doublekey[5]=DOUBLE_NULL;
  }    return KEYHOOK_BREAK;
  }
  
  }

 //-------------------------   
 if(NextKey_1Type!=KEY_NOT_USE||NextKey_2Type!=KEY_NOT_USE)
  {
    
  if((((NextKey_1Type==KEY_LONG_PRESS&&msg==LONG_PRESS)||(NextKey_1Type==KEY_ONE_CLICK&&msg==KEY_UP))&&submsg==NextKey_1)
  ||(((NextKey_2Type==KEY_LONG_PRESS&&msg==LONG_PRESS)||(NextKey_2Type==KEY_ONE_CLICK&&msg==KEY_UP))&&submsg==NextKey_2))
  {
    Next();return KEYHOOK_BREAK;
  }
  
  
  if((NextKey_1Type==KEY_DOUBLE_CLICK&&msg==KEY_UP&&submsg==NextKey_1)||(NextKey_2Type==KEY_DOUBLE_CLICK&&msg==KEY_UP&&submsg==NextKey_2))
  {
    doublekey[6]++;TmrSec();
    if(doublekey[6]==DOUBLE_SECOND)
    {
      Next();
      doublekey[6]=DOUBLE_NULL;
  }    return KEYHOOK_BREAK;
  }    
 
  
  if((NextKey_1Type==KEY_TWO&&NextKey_2Type==KEY_TWO&&msg==KEY_UP)&&(submsg==NextKey_1||submsg==NextKey_2))
  {
    if(submsg==NextKey_1){doublekey[6]++;TmrSec();}
    if(doublekey[6]==DOUBLE_FIRST&&submsg==NextKey_2)
    {
      Next();
      doublekey[6]=DOUBLE_NULL;
  }    return KEYHOOK_BREAK;
  }
  
  }

 //------------------------- 
    
 if(PrevKey_1Type!=KEY_NOT_USE||PrevKey_2Type!=KEY_NOT_USE)
  {
    
  if((((PrevKey_1Type==KEY_LONG_PRESS&&msg==LONG_PRESS)||(PrevKey_1Type==KEY_ONE_CLICK&&msg==KEY_UP))&&submsg==PrevKey_1)
  ||(((PrevKey_2Type==KEY_LONG_PRESS&&msg==LONG_PRESS)||(PrevKey_2Type==KEY_ONE_CLICK&&msg==KEY_UP))&&submsg==PrevKey_2))
  {
    Prev();return KEYHOOK_BREAK;
  }
  
  
  if((PrevKey_1Type==KEY_DOUBLE_CLICK&&msg==KEY_UP&&submsg==PrevKey_1)||(PrevKey_2Type==KEY_DOUBLE_CLICK&&msg==KEY_UP&&submsg==PrevKey_2))
  {
    doublekey[7]++;TmrSec();
    if(doublekey[7]==DOUBLE_SECOND)
    {
      Prev();
      doublekey[7]=DOUBLE_NULL;
  }    return KEYHOOK_BREAK;
  }    
 
  
  if((PrevKey_1Type==KEY_TWO&&PrevKey_2Type==KEY_TWO&&msg==KEY_UP)&&(submsg==PrevKey_1||submsg==PrevKey_2))
  {
    if(submsg==PrevKey_1){doublekey[7]++;TmrSec();}
    if(doublekey[7]==DOUBLE_FIRST&&submsg==PrevKey_2)
    {
      Prev();
      doublekey[7]=DOUBLE_NULL;
  }    return KEYHOOK_BREAK;
  }
  
  }
//-------------------------
    
 if(VolUPKey_1Type!=KEY_NOT_USE||VolUPKey_2Type!=KEY_NOT_USE)
  {
    
  if((((VolUPKey_1Type==KEY_LONG_PRESS&&msg==LONG_PRESS)||(VolUPKey_1Type==KEY_ONE_CLICK&&msg==KEY_UP))&&submsg==VolUPKey_1)
  ||(((VolUPKey_2Type==KEY_LONG_PRESS&&msg==LONG_PRESS)||(VolUPKey_2Type==KEY_ONE_CLICK&&msg==KEY_UP))&&submsg==VolUPKey_2))
  {
    VolUP();return KEYHOOK_BREAK;
  }
  
  
  if((VolUPKey_1Type==KEY_DOUBLE_CLICK&&msg==KEY_UP&&submsg==VolUPKey_1)||(VolUPKey_2Type==KEY_DOUBLE_CLICK&&msg==KEY_UP&&submsg==VolUPKey_2))
  {
    doublekey[8]++;TmrSec();
    if(doublekey[8]==DOUBLE_SECOND)
    {
      VolUP();
      doublekey[8]=DOUBLE_NULL;
  }    return KEYHOOK_BREAK;
  }    
 
  
  if((VolUPKey_1Type==KEY_TWO&&VolUPKey_2Type==KEY_TWO&&msg==KEY_UP)&&(submsg==VolUPKey_1||submsg==VolUPKey_2))
  {
    if(submsg==VolUPKey_1){doublekey[8]++;TmrSec();}
    if(doublekey[8]==DOUBLE_FIRST&&submsg==VolUPKey_2)
    {
      VolUP();
      doublekey[8]=DOUBLE_NULL;
  }    return KEYHOOK_BREAK;
  }
  
  }
//-------------------------  
   if(VolDOWNKey_1Type!=KEY_NOT_USE||VolDOWNKey_2Type!=KEY_NOT_USE)
  {
    
  if((((VolDOWNKey_1Type==KEY_LONG_PRESS&&msg==LONG_PRESS)||(VolDOWNKey_1Type==KEY_ONE_CLICK&&msg==KEY_UP))&&submsg==VolDOWNKey_1)
  ||(((VolDOWNKey_2Type==KEY_LONG_PRESS&&msg==LONG_PRESS)||(VolDOWNKey_2Type==KEY_ONE_CLICK&&msg==KEY_UP))&&submsg==VolDOWNKey_2))
  {
    VolDOWN();return KEYHOOK_BREAK;
  }
  
  
  if((VolDOWNKey_1Type==KEY_DOUBLE_CLICK&&msg==KEY_UP&&submsg==VolDOWNKey_1)||(VolDOWNKey_2Type==KEY_DOUBLE_CLICK&&msg==KEY_UP&&submsg==VolDOWNKey_2))
  {
    doublekey[9]++;TmrSec();
    if(doublekey[9]==DOUBLE_SECOND)
    {
      VolDOWN();
      doublekey[9]=DOUBLE_NULL;
  }    return KEYHOOK_BREAK;
  }    
 
  
  if((VolDOWNKey_1Type==KEY_TWO&&VolDOWNKey_2Type==KEY_TWO&&msg==KEY_UP)&&(submsg==VolDOWNKey_1||submsg==VolDOWNKey_2))
  {
    if(submsg==VolDOWNKey_1){doublekey[9]++;TmrSec();}
    if(doublekey[9]==DOUBLE_FIRST&&submsg==VolDOWNKey_2)
    {
      VolDOWN();
      doublekey[9]=DOUBLE_NULL;
  }    return KEYHOOK_BREAK;
  }
  
  }
  
//-------------------------  
   if(MuteKey_1Type!=KEY_NOT_USE||MuteKey_2Type!=KEY_NOT_USE)
  {
    
  if((((MuteKey_1Type==KEY_LONG_PRESS&&msg==LONG_PRESS)||(MuteKey_1Type==KEY_ONE_CLICK&&msg==KEY_UP))&&submsg==MuteKey_1)
  ||(((MuteKey_2Type==KEY_LONG_PRESS&&msg==LONG_PRESS)||(MuteKey_2Type==KEY_ONE_CLICK&&msg==KEY_UP))&&submsg==MuteKey_2))
  {
    Mute();return KEYHOOK_BREAK;
  }
  
  
  if((MuteKey_1Type==KEY_DOUBLE_CLICK&&msg==KEY_UP&&submsg==MuteKey_1)||(MuteKey_2Type==KEY_DOUBLE_CLICK&&msg==KEY_UP&&submsg==MuteKey_2))
  {
    doublekey[10]++;TmrSec();
    if(doublekey[10]==DOUBLE_SECOND)
    {
      Mute();
      doublekey[10]=DOUBLE_NULL;
  }    return KEYHOOK_BREAK;
  }    
 
  
  if((MuteKey_1Type==KEY_TWO&&MuteKey_2Type==KEY_TWO&&msg==KEY_UP)&&(submsg==MuteKey_1||submsg==MuteKey_2))
  {
    if(submsg==MuteKey_1){doublekey[10]++;TmrSec();}
    if(doublekey[10]==DOUBLE_FIRST&&submsg==MuteKey_2)
    {
      Mute();
      doublekey[10]=DOUBLE_NULL;
  }    return KEYHOOK_BREAK;
  }
  
  }
  //-----------------------------------------  

     if(LockKey_1Type!=KEY_NOT_USE||LockKey_2Type!=KEY_NOT_USE)
  {
    
  if((((LockKey_1Type==KEY_LONG_PRESS&&msg==LONG_PRESS)||(LockKey_1Type==KEY_ONE_CLICK&&msg==KEY_UP))&&submsg==LockKey_1)
  ||(((LockKey_2Type==KEY_LONG_PRESS&&msg==LONG_PRESS)||(LockKey_2Type==KEY_ONE_CLICK&&msg==KEY_UP))&&submsg==LockKey_2))
  {
    Lock();return KEYHOOK_BREAK;
  }
  
  
  if((LockKey_1Type==KEY_DOUBLE_CLICK&&msg==KEY_UP&&submsg==LockKey_1)||(LockKey_2Type==KEY_DOUBLE_CLICK&&msg==KEY_UP&&submsg==LockKey_2))
  {
    doublekey[11]++;TmrSec();
    if(doublekey[11]==DOUBLE_SECOND)
    {
      Lock();
      doublekey[11]=DOUBLE_NULL;
  }    return KEYHOOK_BREAK;
  }    
 
  
  if((LockKey_1Type==KEY_TWO&&LockKey_2Type==KEY_TWO&&msg==KEY_UP)&&(submsg==LockKey_1||submsg==LockKey_2))
  {
    if(submsg==LockKey_1){doublekey[10]++;TmrSec();}
    if(doublekey[11]==DOUBLE_FIRST&&submsg==LockKey_2)
    {
      Lock();
      doublekey[11]=DOUBLE_NULL;
  }    return KEYHOOK_BREAK;
  }
  
  }
  //-----------------------
  
      if(TimerOnKeyType!=3)
  {
    
  if(((TimerOnKeyType==KEY_LONG_PRESS&&msg==LONG_PRESS)||(TimerOnKeyType==KEY_ONE_CLICK&&msg==KEY_UP))&&submsg==TimerOnKey)
  {
    StartCloseTimer();return KEYHOOK_BREAK;
  }
  
  
  if((TimerOnKeyType==KEY_DOUBLE_CLICK&&msg==KEY_UP&&submsg==TimerOnKey))
  {
    if(submsg==TimerOnKey){doublekey[12]++;TmrSec();}
    if(doublekey[12]==DOUBLE_SECOND)
    {
      StartCloseTimer();
      doublekey[12]=DOUBLE_NULL;
  }    return KEYHOOK_BREAK;
  } 
    }
//-------
          if(TimerOffKeyType!=3)
  {
    
  if(((TimerOffKeyType==KEY_LONG_PRESS&&msg==LONG_PRESS)||(TimerOffKeyType==KEY_ONE_CLICK&&msg==KEY_UP))&&submsg==TimerOffKey)
  {
    StartCloseTimer();return KEYHOOK_BREAK;
  }
  
  
  if((TimerOffKeyType==KEY_DOUBLE_CLICK&&msg==KEY_UP&&submsg==TimerOffKey))
  {
    if(submsg==TimerOffKey){doublekey[12]++;TmrSec();}
    if(doublekey[13]==DOUBLE_SECOND)
    {
      StopCloseTimer();
      doublekey[13]=DOUBLE_NULL;
  }    return KEYHOOK_BREAK;
  } 
    }

    
  }
 
  }
 
  return KEYHOOK_NEXT;
}
//-------------------------
int maincsm_onmessage(CSM_RAM* data,GBS_MSG* msg)
{
   if (msg->msg==MSG_RECONFIGURE_REQ)
  {
    if (strcmp_nocase(successed_config_filename,(char *)msg->data0)==0)
    {
      ShowMessage(" онфиг изменен!");
      InitConfig();
    }    
  }
    if (msg->msg==MSG_IPC)
     {
    if ((ipc_recv=(IPC_REQ*)msg->data0))
    {
     if(strcmp_nocase(ipc_recv->name_from,IPC_MAPLYER)==0)
     {
       switch(msg->submess)
       {
       case IPC_CHECK_DOUBLERUN:IsMaplayerOn=true;break;
       case IPC_CLOSE_PLAYER:IsMaplayerOn=false;break;
       }
     }

     if (strcmp_nocase(ipc_recv->name_to,ipc_my_name)==0&&strcmp_nocase(ipc_recv->name_from,IPC_IVO)==0)
     {
       IsIvoOn=true;
      
     }
     if(strcmp_nocase(ipc_recv->name_from,IPC_TO_SPLAYER))
         {
           switch(msg->submess)
            {
                   case IPC_SPLAYER_STARTED:IsSPlayerOn=true;break;
                   case IPC_SPLAYER_CLOSED:IsSPlayerOn=false;break;
            }
         }
    }
     }
  
  return (1);
}
//-------------------------
static void maincsm_oncreate(CSM_RAM *data)
{
  AddKeybMsgHook((void *)my_keyhook);

}
//-------------------------
static void Killer(void)
{
  extern void *ELF_BEGIN;
  kill_data(&ELF_BEGIN,(void (*)(void *))mfree_adr());
}
//-------------------------
static void maincsm_onclose(CSM_RAM *csm)
{
  if(IsTimerProc(&KeyTmr))GBS_DelTimer(&KeyTmr);
  if(IsTimerProc(&Acctmr))GBS_DelTimer(&Acctmr);
  if(IsTimerProc(&close_timer))GBS_DelTimer(&close_timer);
  RemoveKeybMsgHook((void *)my_keyhook);
  SUBPROC((void *)Killer);
}
/*typedef struct
{
  char check_name[8];
  int addr;
}ICONBAR_H;*/
//-------------------------
static const struct
{
  CSM_DESC maincsm;
  WSHDR maincsm_name;
 // ICONBAR_H iconbar_handler; //iconbar
}MAINCSM =
{
{
  maincsm_onmessage,
  maincsm_oncreate,
#ifdef NEWSGOLD
  0,
  0,
  0,
  0,
#endif
  maincsm_onclose,
  sizeof(MAIN_CSM),
  1,
  &minus11
  },
  {
    maincsm_name_body,
    NAMECSM_MAGIC1,
    NAMECSM_MAGIC2,
    0x0,
    139
  },
  // {
   // "IconBar"
 // }
};
/*void IconBar(void)
{
  MAINCSM.iconbar_handler.addr = (int)addIconBar;
}*/
//-------------------------
static void UpdateCSMname(void)
{
  wsprintf((WSHDR *)(&MAINCSM.maincsm_name),perc_ss,"PlayersControl",VERSION);
}
//-------------------------
int main()
{
  InitConfig();
  acc=GetAccessoryType();
  if(!OnOn)if((acc==19||acc==18||acc==21))old=true;
  GetAccesory();
  CSM_RAM *save_cmpc;
  char dummy[sizeof(MAIN_CSM)];
  UpdateCSMname();
  LockSched();
  save_cmpc=CSM_root()->csm_q->current_msg_processing_csm;
  CSM_root()->csm_q->current_msg_processing_csm=CSM_root()->csm_q->csm.first;
  CreateCSM(&MAINCSM.maincsm,dummy,0);
  CSM_root()->csm_q->current_msg_processing_csm=save_cmpc;
  UnlockSched();
  return 0;
}
