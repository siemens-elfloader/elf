##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION    01/Jul/2010  14:09:05 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  C:\arm\MusicButton\funcs.c                           #
#    Command line    =  C:\arm\MusicButton\funcs.c -D NEWSGOLD -D ELKA -lC   #
#                       C:\arm\MusicButton\ELKA\List\ -o                     #
#                       C:\arm\MusicButton\ELKA\Obj\ -s9 --no_unroll         #
#                       --no_clustering --cpu_mode arm --endian little       #
#                       --cpu ARM926EJ-S --stack_align 4 --interwork -e      #
#                       --fpu None -I "C:\arm2\Embedded Workbench 4.0        #
#                       Evaluation\ARM\INC\" --inline_threshold=2            #
#    List file       =  C:\arm\MusicButton\ELKA\List\funcs.lst               #
#    Object file     =  C:\arm\MusicButton\ELKA\Obj\funcs.r79                #
#                                                                            #
#                                                                            #
##############################################################################

C:\arm\MusicButton\funcs.c
      1          #include "C:\ARM\inc\swilib.h"
      2          #include "C:\ARM\inc\mplayer.h"

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void Send_MPlayer_Command(unsigned short, short)
   \                     Send_MPlayer_Command:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   E18000EF           SWI      +32993
   \   00000010   10002DE9           PUSH     {R4}
   \   00000014   000090E5           LDR      R0,[R0, #+0]
   \   00000018   0020A0E3           MOV      R2,#+0
   \   0000001C   053040E0           SUB      R3,R0,R5
   \   00000020   5310A0E3           MOV      R1,#+83
   \   00000024   801C81E3           ORR      R1,R1,#0x8000
   \   00000028   0900A0E3           MOV      R0,#+9
   \   0000002C   420C80E3           ORR      R0,R0,#0x4200
   \   00000030   000100EF           SWI      +256
   \   00000034   3180BDE8           POP      {R0,R4,R5,PC}    ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void MPlayer_VolChange(short)
   \                     MPlayer_VolChange:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   010050E3           CMP      R0,#+1
   \   00000008   0210A0E3           MOV      R1,#+2
   \   0000000C   1540A003           MOVEQ    R4,#+21
   \   00000010   1640A013           MOVNE    R4,#+22
   \   00000014   0400A0E1           MOV      R0,R4
   \   00000018   ........           BL       Send_MPlayer_Command
   \   0000001C   0010A0E3           MOV      R1,#+0
   \   00000020   0400A0E1           MOV      R0,R4
   \   00000024   1040BDE8           POP      {R4,LR}          ;; Pop
   \   00000028   ........           B        Send_MPlayer_Command  ;; tailcall
      3          
      4          #include "main.h"

   \                                 In segment DATA_I, align 4, align-sorted
   \   char const *__data perc_t
   \                     perc_t:
   \   00000000                      DS8 4
   \   00000004                      REQUIRE `?<Initializer for perc_t>`

   \                                 In segment DATA_Z, align 4, align-sorted
   \   IPC_REQ __data gipcMy
   \                     gipcMy:
   \   00000000                      DS8 12

   \                                 In segment CODE, align 4, keep-with-next
      5          void PlayPause(int player)
      6          {
   \                     PlayPause:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0040B0E1           MOVS     R4,R0
      7            if(player==STANDART||player==ALL)
   \   00000008   03005413           CMPNE    R4,#+3
   \   0000000C   0500001A           BNE      ??PlayPause_0
      8            {
      9             if(IsPlayerOn())MPlayer_Toggle();
   \   00000010   7F0000EF           SWI      +127
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   0200000A           BEQ      ??PlayPause_0
   \   0000001C   0010A0E3           MOV      R1,#+0
   \   00000020   1100A0E3           MOV      R0,#+17
   \   00000024   ........           BL       Send_MPlayer_Command
     10            }
     11            if(player==IVOPLAY||player==ALL)
   \                     ??PlayPause_0:
   \   00000028   ........           LDR      R7,??DataTable16  ;; gipcMy
   \   0000002C   0950A0E3           MOV      R5,#+9
   \   00000030   425C85E3           ORR      R5,R5,#0x4200
   \   00000034   B060A0E3           MOV      R6,#+176
   \   00000038   DE6C86E3           ORR      R6,R6,#0xDE00
   \   0000003C   010054E3           CMP      R4,#+1
   \   00000040   03005413           CMPNE    R4,#+3
   \   00000044   0600001A           BNE      ??PlayPause_1
     12              {
     13              gipcMy.name_to=IPC_IVO;
   \   00000048   ........           LDR      R0,??DataTable17  ;; `?<Constant "IVOPLAY">`
     14              GBS_SendMessage(MMI_CEPID,MSG_IPC,CMD_PLAY_PAUSE,&gipcMy); 
   \   0000004C   0730A0E1           MOV      R3,R7
   \   00000050   000087E5           STR      R0,[R7, #+0]
   \   00000054   0320A0E3           MOV      R2,#+3
   \   00000058   0610A0E1           MOV      R1,R6
   \   0000005C   0500A0E1           MOV      R0,R5
   \   00000060   000100EF           SWI      +256
     15              }
     16             if(player==MAPLAYER||player==ALL)
   \                     ??PlayPause_1:
   \   00000064   020054E3           CMP      R4,#+2
   \   00000068   03005413           CMPNE    R4,#+3
   \   0000006C   F080BD18           POPNE    {R4-R7,PC}
     17            {
     18              gipcMy.name_to=IPC_MAPLYER;
   \   00000070   ........           LDR      R0,??DataTable13  ;; `?<Constant "MusicAPlayer">`
     19              GBS_SendMessage(MMI_CEPID,MSG_IPC,IPC_ENTER_BUTTON,&gipcMy); 
   \   00000074   0730A0E1           MOV      R3,R7
   \   00000078   000087E5           STR      R0,[R7, #+0]
   \   0000007C   0520A0E3           MOV      R2,#+5
   \   00000080   0610A0E1           MOV      R1,R6
   \   00000084   0500A0E1           MOV      R0,R5
   \   00000088   000100EF           SWI      +256
     20            }
     21          }
   \   0000008C   F080BDE8           POP      {R4-R7,PC}       ;; return
     22          

   \                                 In segment CODE, align 4, keep-with-next
     23          void Stop(int player)
     24          {
   \                     Stop:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040B0E1           MOVS     R4,R0
     25              if(player==STANDART||player==ALL)
   \   00000008   03005413           CMPNE    R4,#+3
   \   0000000C   0500001A           BNE      ??Stop_0
     26            {
     27             if(IsPlayerOn())MPlayer_Stop();
   \   00000010   7F0000EF           SWI      +127
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   0200000A           BEQ      ??Stop_0
   \   0000001C   0010A0E3           MOV      R1,#+0
   \   00000020   0F00A0E3           MOV      R0,#+15
   \   00000024   ........           BL       Send_MPlayer_Command
     28            }
     29            if(player==IVOPLAY||player==ALL)
   \                     ??Stop_0:
   \   00000028   010054E3           CMP      R4,#+1
   \   0000002C   03005413           CMPNE    R4,#+3
   \   00000030   1080BD18           POPNE    {R4,PC}
     30              {
     31              gipcMy.name_to=IPC_IVO;
   \   00000034   ........           LDR      R3,??DataTable16  ;; gipcMy
   \   00000038   ........           LDR      R0,??DataTable17  ;; `?<Constant "IVOPLAY">`
     32              GBS_SendMessage(MMI_CEPID,MSG_IPC,CMD_STOP,&gipcMy); 
   \   0000003C   0720A0E3           MOV      R2,#+7
   \   00000040   000083E5           STR      R0,[R3, #+0]
   \   00000044   B010A0E3           MOV      R1,#+176
   \   00000048   DE1C81E3           ORR      R1,R1,#0xDE00
   \   0000004C   0900A0E3           MOV      R0,#+9
   \   00000050   420C80E3           ORR      R0,R0,#0x4200
   \   00000054   000100EF           SWI      +256
     33              }
     34          }
   \   00000058   1080BDE8           POP      {R4,PC}          ;; return
     35          

   \                                 In segment CODE, align 4, keep-with-next
     36          void Prev(int player)
     37          {
   \                     Prev:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0040B0E1           MOVS     R4,R0
     38              if(player==STANDART||player==ALL)
   \   00000008   03005413           CMPNE    R4,#+3
   \   0000000C   0500001A           BNE      ??Prev_0
     39            {
     40             if(IsPlayerOn())MPlayer_Prev();
   \   00000010   7F0000EF           SWI      +127
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   0200000A           BEQ      ??Prev_0
   \   0000001C   0010A0E3           MOV      R1,#+0
   \   00000020   0100A0E3           MOV      R0,#+1
   \   00000024   ........           BL       Send_MPlayer_Command
     41            }
     42            if(player==IVOPLAY||player==ALL)
   \                     ??Prev_0:
   \   00000028   ........           LDR      R7,??DataTable16  ;; gipcMy
   \   0000002C   0950A0E3           MOV      R5,#+9
   \   00000030   425C85E3           ORR      R5,R5,#0x4200
   \   00000034   B060A0E3           MOV      R6,#+176
   \   00000038   DE6C86E3           ORR      R6,R6,#0xDE00
   \   0000003C   010054E3           CMP      R4,#+1
   \   00000040   03005413           CMPNE    R4,#+3
   \   00000044   0600001A           BNE      ??Prev_1
     43              {
     44              gipcMy.name_to=IPC_IVO;
   \   00000048   ........           LDR      R0,??DataTable17  ;; `?<Constant "IVOPLAY">`
     45              GBS_SendMessage(MMI_CEPID,MSG_IPC,CMD_PREV,&gipcMy); 
   \   0000004C   0730A0E1           MOV      R3,R7
   \   00000050   000087E5           STR      R0,[R7, #+0]
   \   00000054   0220A0E3           MOV      R2,#+2
   \   00000058   0610A0E1           MOV      R1,R6
   \   0000005C   0500A0E1           MOV      R0,R5
   \   00000060   000100EF           SWI      +256
     46              }
     47             if(player==MAPLAYER||player==ALL)
   \                     ??Prev_1:
   \   00000064   020054E3           CMP      R4,#+2
   \   00000068   03005413           CMPNE    R4,#+3
   \   0000006C   F080BD18           POPNE    {R4-R7,PC}
     48            {
     49              gipcMy.name_to=IPC_MAPLYER;
   \   00000070   ........           LDR      R0,??DataTable13  ;; `?<Constant "MusicAPlayer">`
     50              GBS_SendMessage(MMI_CEPID,MSG_IPC,IPC_PREV,&gipcMy); 
   \   00000074   0730A0E1           MOV      R3,R7
   \   00000078   000087E5           STR      R0,[R7, #+0]
   \   0000007C   0420A0E3           MOV      R2,#+4
   \   00000080   0610A0E1           MOV      R1,R6
   \   00000084   0500A0E1           MOV      R0,R5
   \   00000088   000100EF           SWI      +256
     51            }
     52          }
   \   0000008C   F080BDE8           POP      {R4-R7,PC}       ;; return
     53          

   \                                 In segment CODE, align 4, keep-with-next
     54          void Next(int player)
     55          {
   \                     Next:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0040B0E1           MOVS     R4,R0
     56              if(player==STANDART||player==ALL)
   \   00000008   03005413           CMPNE    R4,#+3
   \   0000000C   0500001A           BNE      ??Next_0
     57            {
     58             if(IsPlayerOn())MPlayer_Next();
   \   00000010   7F0000EF           SWI      +127
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   0200000A           BEQ      ??Next_0
   \   0000001C   0010A0E3           MOV      R1,#+0
   \   00000020   0200A0E3           MOV      R0,#+2
   \   00000024   ........           BL       Send_MPlayer_Command
     59            }
     60            if(player==IVOPLAY||player==ALL)
   \                     ??Next_0:
   \   00000028   ........           LDR      R7,??DataTable16  ;; gipcMy
   \   0000002C   0950A0E3           MOV      R5,#+9
   \   00000030   425C85E3           ORR      R5,R5,#0x4200
   \   00000034   B060A0E3           MOV      R6,#+176
   \   00000038   DE6C86E3           ORR      R6,R6,#0xDE00
   \   0000003C   010054E3           CMP      R4,#+1
   \   00000040   03005413           CMPNE    R4,#+3
   \   00000044   0600001A           BNE      ??Next_1
     61              {
     62              gipcMy.name_to=IPC_IVO;
   \   00000048   ........           LDR      R0,??DataTable17  ;; `?<Constant "IVOPLAY">`
     63              GBS_SendMessage(MMI_CEPID,MSG_IPC,CMD_NEXT,&gipcMy); 
   \   0000004C   0730A0E1           MOV      R3,R7
   \   00000050   000087E5           STR      R0,[R7, #+0]
   \   00000054   0120A0E3           MOV      R2,#+1
   \   00000058   0610A0E1           MOV      R1,R6
   \   0000005C   0500A0E1           MOV      R0,R5
   \   00000060   000100EF           SWI      +256
     64              }
     65             if(player==MAPLAYER||player==ALL)
   \                     ??Next_1:
   \   00000064   020054E3           CMP      R4,#+2
   \   00000068   03005413           CMPNE    R4,#+3
   \   0000006C   F080BD18           POPNE    {R4-R7,PC}
     66            {
     67              gipcMy.name_to=IPC_MAPLYER;
   \   00000070   ........           LDR      R0,??DataTable13  ;; `?<Constant "MusicAPlayer">`
     68              GBS_SendMessage(MMI_CEPID,MSG_IPC,IPC_NEXT,&gipcMy); 
   \   00000074   0730A0E1           MOV      R3,R7
   \   00000078   000087E5           STR      R0,[R7, #+0]
   \   0000007C   0620A0E3           MOV      R2,#+6
   \   00000080   0610A0E1           MOV      R1,R6
   \   00000084   0500A0E1           MOV      R0,R5
   \   00000088   000100EF           SWI      +256
     69            }
     70          }
   \   0000008C   F080BDE8           POP      {R4-R7,PC}       ;; return
     71          

   \                                 In segment CODE, align 4, keep-with-next
     72          void Start(int player)
     73          {
   \                     Start:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040B0E1           MOVS     R4,R0
     74             if(player==STANDART||player==ALL)
   \   00000008   03005413           CMPNE    R4,#+3
   \   0000000C   0500001A           BNE      ??Start_0
     75            {
     76             if(IsPlayerOn())MPlayer_Start();
   \   00000010   7F0000EF           SWI      +127
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   0200000A           BEQ      ??Start_0
   \   0000001C   0010A0E3           MOV      R1,#+0
   \   00000020   0E00A0E3           MOV      R0,#+14
   \   00000024   ........           BL       Send_MPlayer_Command
     77            }
     78            WSHDR *fws=AllocWS(256);
     79            if(player==IVOPLAY||player==ALL)
   \                     ??Start_0:
   \   00000028   68609FE5           LDR      R6,??Start_1     ;; perc_t
   \   0000002C   400FA0E3           MOV      R0,#+256
   \   00000030   250100EF           SWI      +293
   \   00000034   0050A0E1           MOV      R5,R0
   \   00000038   010054E3           CMP      R4,#+1
   \   0000003C   03005413           CMPNE    R4,#+3
   \   00000040   0600001A           BNE      ??Start_2
     80              {
     81              
     82              wsprintf(fws,perc_t,PATH_IVO);
   \   00000044   50209FE5           LDR      R2,??Start_1+0x4  ;; PATH_IVO
   \   00000048   001096E5           LDR      R1,[R6, #+0]
   \   0000004C   240100EF           SWI      +292
     83              ExecuteFile(fws,NULL,NULL);
   \   00000050   0020A0E3           MOV      R2,#+0
   \   00000054   0010A0E3           MOV      R1,#+0
   \   00000058   0500A0E1           MOV      R0,R5
   \   0000005C   940000EF           SWI      +148
     84              
     85              }
     86             if(player==MAPLAYER||player==ALL)
   \                     ??Start_2:
   \   00000060   020054E3           CMP      R4,#+2
   \   00000064   03005413           CMPNE    R4,#+3
   \   00000068   0700001A           BNE      ??Start_3
     87            {
     88              wsprintf(fws,perc_t,PATH_MAPLAYER);
   \   0000006C   2C209FE5           LDR      R2,??Start_1+0x8  ;; PATH_MAPLAYER
   \   00000070   001096E5           LDR      R1,[R6, #+0]
   \   00000074   0500A0E1           MOV      R0,R5
   \   00000078   240100EF           SWI      +292
     89              ExecuteFile(fws,NULL,NULL);
   \   0000007C   0020A0E3           MOV      R2,#+0
   \   00000080   0010A0E3           MOV      R1,#+0
   \   00000084   0500A0E1           MOV      R0,R5
   \   00000088   940000EF           SWI      +148
     90            }
     91            FreeWS(fws);
   \                     ??Start_3:
   \   0000008C   0500A0E1           MOV      R0,R5
   \   00000090   290100EF           SWI      +297
     92          }
   \   00000094   7080BDE8           POP      {R4-R6,PC}       ;; return
   \                     ??Start_1:
   \   00000098   ........           DC32     perc_t
   \   0000009C   ........           DC32     PATH_IVO
   \   000000A0   ........           DC32     PATH_MAPLAYER
     93          

   \                                 In segment CODE, align 4, keep-with-next
     94          void Close(int player)
     95          {
   \                     Close:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0040B0E1           MOVS     R4,R0
     96              if(player==STANDART||player==ALL)
   \   00000008   03005413           CMPNE    R4,#+3
   \   0000000C   0500001A           BNE      ??Close_0
     97            {
     98             if(IsPlayerOn())MPlayer_Shutdown();
   \   00000010   7F0000EF           SWI      +127
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   0200000A           BEQ      ??Close_0
   \   0000001C   0010A0E3           MOV      R1,#+0
   \   00000020   0C00A0E3           MOV      R0,#+12
   \   00000024   ........           BL       Send_MPlayer_Command
     99            }
    100            if(player==IVOPLAY||player==ALL)
   \                     ??Close_0:
   \   00000028   ........           LDR      R7,??DataTable16  ;; gipcMy
   \   0000002C   0950A0E3           MOV      R5,#+9
   \   00000030   425C85E3           ORR      R5,R5,#0x4200
   \   00000034   B060A0E3           MOV      R6,#+176
   \   00000038   DE6C86E3           ORR      R6,R6,#0xDE00
   \   0000003C   010054E3           CMP      R4,#+1
   \   00000040   03005413           CMPNE    R4,#+3
   \   00000044   0600001A           BNE      ??Close_1
    101              {
    102              gipcMy.name_to=IPC_IVO;
   \   00000048   ........           LDR      R0,??DataTable17  ;; `?<Constant "IVOPLAY">`
    103              GBS_SendMessage(MMI_CEPID,MSG_IPC,CMD_KILL,&gipcMy); 
   \   0000004C   0730A0E1           MOV      R3,R7
   \   00000050   000087E5           STR      R0,[R7, #+0]
   \   00000054   1920A0E3           MOV      R2,#+25
   \   00000058   0610A0E1           MOV      R1,R6
   \   0000005C   0500A0E1           MOV      R0,R5
   \   00000060   000100EF           SWI      +256
    104              }
    105             if(player==MAPLAYER||player==ALL)
   \                     ??Close_1:
   \   00000064   020054E3           CMP      R4,#+2
   \   00000068   03005413           CMPNE    R4,#+3
   \   0000006C   F080BD18           POPNE    {R4-R7,PC}
    106            {
    107              gipcMy.name_to=IPC_MAPLYER;
   \   00000070   ........           LDR      R0,??DataTable13  ;; `?<Constant "MusicAPlayer">`
    108              GBS_SendMessage(MMI_CEPID,MSG_IPC,IPC_CLOSE_PLAYER,&gipcMy); 
   \   00000074   0730A0E1           MOV      R3,R7
   \   00000078   000087E5           STR      R0,[R7, #+0]
   \   0000007C   0920A0E3           MOV      R2,#+9
   \   00000080   0610A0E1           MOV      R1,R6
   \   00000084   0500A0E1           MOV      R0,R5
   \   00000088   000100EF           SWI      +256
    109            }
    110          }
   \   0000008C   F080BDE8           POP      {R4-R7,PC}       ;; return
    111          
    112          
    113          

   \                                 In segment CODE, align 4, keep-with-next
    114          void VolUP(int player)
    115          {
   \                     VolUP:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040B0E1           MOVS     R4,R0
    116              if(player==STANDART||player==ALL)
   \   00000008   03005413           CMPNE    R4,#+3
   \   0000000C   0400001A           BNE      ??VolUP_0
    117            {
    118             if(IsPlayerOn())MPlayer_VolChange(1);
   \   00000010   7F0000EF           SWI      +127
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   0100000A           BEQ      ??VolUP_0
   \   0000001C   0100A0E3           MOV      R0,#+1
   \   00000020   ........           BL       MPlayer_VolChange
    119            }
    120            if(player==IVOPLAY||player==ALL)
   \                     ??VolUP_0:
   \   00000024   010054E3           CMP      R4,#+1
   \   00000028   03005413           CMPNE    R4,#+3
   \   0000002C   1080BD18           POPNE    {R4,PC}
    121              {
    122              gipcMy.name_to=IPC_IVO;
   \   00000030   ........           LDR      R3,??DataTable16  ;; gipcMy
   \   00000034   ........           LDR      R0,??DataTable17  ;; `?<Constant "IVOPLAY">`
    123              GBS_SendMessage(MMI_CEPID,MSG_IPC,CMD_VOLUP,&gipcMy); 
   \   00000038   0420A0E3           MOV      R2,#+4
   \   0000003C   000083E5           STR      R0,[R3, #+0]
   \   00000040   B010A0E3           MOV      R1,#+176
   \   00000044   DE1C81E3           ORR      R1,R1,#0xDE00
   \   00000048   0900A0E3           MOV      R0,#+9
   \   0000004C   420C80E3           ORR      R0,R0,#0x4200
   \   00000050   000100EF           SWI      +256
    124              }
    125          }
   \   00000054   1080BDE8           POP      {R4,PC}          ;; return
    126          

   \                                 In segment CODE, align 4, keep-with-next
    127          void VolDOWN(int player)
    128          {
   \                     VolDOWN:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040B0E1           MOVS     R4,R0
    129              if(player==STANDART||player==ALL)
   \   00000008   03005413           CMPNE    R4,#+3
   \   0000000C   0400001A           BNE      ??VolDOWN_0
    130            {
    131             if(IsPlayerOn())MPlayer_VolChange(-1);
   \   00000010   7F0000EF           SWI      +127
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   0100000A           BEQ      ??VolDOWN_0
   \   0000001C   0000E0E3           MVN      R0,#+0
   \   00000020   ........           BL       MPlayer_VolChange
    132            }
    133            if(player==IVOPLAY||player==ALL)
   \                     ??VolDOWN_0:
   \   00000024   010054E3           CMP      R4,#+1
   \   00000028   03005413           CMPNE    R4,#+3
   \   0000002C   1080BD18           POPNE    {R4,PC}
    134              {
    135              gipcMy.name_to=IPC_IVO;
   \   00000030   ........           LDR      R3,??DataTable16  ;; gipcMy
   \   00000034   ........           LDR      R0,??DataTable17  ;; `?<Constant "IVOPLAY">`
    136              GBS_SendMessage(MMI_CEPID,MSG_IPC,CMD_VOLDOWN,&gipcMy); 
   \   00000038   0520A0E3           MOV      R2,#+5
   \   0000003C   000083E5           STR      R0,[R3, #+0]
   \   00000040   B010A0E3           MOV      R1,#+176
   \   00000044   DE1C81E3           ORR      R1,R1,#0xDE00
   \   00000048   0900A0E3           MOV      R0,#+9
   \   0000004C   420C80E3           ORR      R0,R0,#0x4200
   \   00000050   000100EF           SWI      +256
    137              }
    138          }
   \   00000054   1080BDE8           POP      {R4,PC}          ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable13:
   \   00000000   ........           DC32     `?<Constant "MusicAPlayer">`

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable16:
   \   00000000   ........           DC32     gipcMy

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable17:
   \   00000000   ........           DC32     `?<Constant "IVOPLAY">`

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for perc_t>`:
   \   00000000   ........           DC32 `?<Constant "%t">`

   \                                 In segment DATA_C, align 1, align-sorted
   \                     `?<Constant "%t">`:
   \   00000000   257400             DC8 "%t"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "IVOPLAY">`:
   \   00000000   49564F504C41       DC8 "IVOPLAY"
   \              5900        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "MusicAPlayer">`:
   \   00000000   4D7573696341       DC8 "MusicAPlayer"
   \              506C61796572
   \              00          
   \   0000000D   000000             DC8 0, 0, 0

   Maximum stack usage in bytes:

     Function             CSTACK
     --------             ------
     Close                   20
     MPlayer_VolChange        8
     Next                    20
     PlayPause               20
     Prev                    20
     Send_MPlayer_Command    16
     Start                   16
     Stop                     8
     VolDOWN                  8
     VolUP                    8


   Segment part sizes:

     Function/Label             Bytes
     --------------             -----
     Send_MPlayer_Command         56
     MPlayer_VolChange            44
     perc_t                        4
     gipcMy                       12
     PlayPause                   144
     Stop                         92
     Prev                        144
     Next                        144
     Start                       164
     Close                       144
     VolUP                        88
     VolDOWN                      88
     ??DataTable13                 4
     ??DataTable16                 4
     ??DataTable17                 4
     ?<Initializer for perc_t>     4
     ?<Constant "%t">              3
     ?<Constant "IVOPLAY">         8
     ?<Constant "MusicAPlayer">   16
      Others                      64

 
 1 160 bytes in segment CODE
    27 bytes in segment DATA_C
     4 bytes in segment DATA_I
     4 bytes in segment DATA_ID
    12 bytes in segment DATA_Z
    24 bytes in segment INITTAB
 
 1 120 bytes of CODE  memory (+ 64 bytes shared)
    31 bytes of CONST memory
    16 bytes of DATA  memory

Errors: none
Warnings: none
