################################################################################
#                                                                              #
#      IAR Universal Linker V4.60I/386                                         #
#                                                                              #
#           Link time     =  21/Dec/2010  19:11:47                             #
#           Target CPU    =  ARM                                               #
#           List file     =  C:\arm\elfpack_mod_last\Other\EL71sw45\List\ELFLo #
#                            ader.map                                          #
#           Output file 1 =  C:\arm\elfpack_mod_last\VKP\EL71sw45\ELFLoader.el #
#                            f                                                 #
#                            Format: elf, variant: -yas                        #
#           Command line  =  C:\arm\elfpack_mod_last\Other\EL71sw45\Obj\ALTSWI #
#                            .r79                                              #
#                            C:\arm\elfpack_mod_last\Other\EL71sw45\Obj\DH.r79 #
#                            C:\arm\elfpack_mod_last\Other\EL71sw45\Obj\ESI.r7 #
#                            9                                                 #
#                            C:\arm\elfpack_mod_last\Other\EL71sw45\Obj\EXT2.r #
#                            79                                                #
#                            C:\arm\elfpack_mod_last\Other\EL71sw45\Obj\FSWI.r #
#                            79                                                #
#                            C:\arm\elfpack_mod_last\Other\EL71sw45\Obj\IMB.r7 #
#                            9                                                 #
#                            C:\arm\elfpack_mod_last\Other\EL71sw45\Obj\MFUNC. #
#                            r79                                               #
#                            C:\arm\elfpack_mod_last\Other\EL71sw45\Obj\additi #
#                            onal.r79                                          #
#                            C:\arm\elfpack_mod_last\Other\EL71sw45\Obj\conf_l #
#                            oader.r79                                         #
#                            C:\arm\elfpack_mod_last\Other\EL71sw45\Obj\config #
#                            _data.r79                                         #
#                            C:\arm\elfpack_mod_last\Other\EL71sw45\Obj\consol #
#                            e.r79                                             #
#                            C:\arm\elfpack_mod_last\Other\EL71sw45\Obj\dhs.r7 #
#                            9                                                 #
#                            C:\arm\elfpack_mod_last\Other\EL71sw45\Obj\edl.r7 #
#                            9                                                 #
#                            C:\arm\elfpack_mod_last\Other\EL71sw45\Obj\elf.r7 #
#                            9                                                 #
#                            C:\arm\elfpack_mod_last\Other\EL71sw45\Obj\elfloa #
#                            der.r79                                           #
#                            C:\arm\elfpack_mod_last\Other\EL71sw45\Obj\gbspro #
#                            c.r79                                             #
#                            C:\arm\elfpack_mod_last\Other\EL71sw45\Obj\logger #
#                            .r79                                              #
#                            C:\arm\elfpack_mod_last\Other\EL71sw45\Obj\paths. #
#                            r79                                               #
#                            C:\arm\elfpack_mod_last\Other\EL71sw45\Obj\png.r7 #
#                            9                                                 #
#                            C:\arm\elfpack_mod_last\Other\EL71sw45\Obj\ramlib #
#                            .r79                                              #
#                            C:\arm\elfpack_mod_last\Other\EL71sw45\Obj\rets_E #
#                            L71sw45.r79                                       #
#                            -o                                                #
#                            C:\arm\elfpack_mod_last\VKP\EL71sw45\ELFLoader.el #
#                            f                                                 #
#                            -Felf -yas -l                                     #
#                            C:\arm\elfpack_mod_last\Other\EL71sw45\List\ELFLo #
#                            ader.map                                          #
#                            -xmsnio                                           #
#                            "-IC:\arm2\Embedded Workbench 4.0 Evaluation\ARM\ #
#                            LIB\"                                             #
#                            -f C:\arm\elfpack_mod_last\config\EL71sw45.xcl    #
#                            (-carm                                            #
#                            -Z(CODE)START,CODE,SWITAB,INITTAB,DATA_ID,DATA_C, #
#                            CONFIG_DATA_ID,CONFIG_DATA_C=A0078000-A007C000    #
#                            -Z(DATA)CODE_I,DATA_I,CONFIG_DATA_I,DATA_Z,DATA_N #
#                            =A8D9F004-A8D9F963                                #
#                            -Z(CODE)PATCH_ONCREATE=A0853F98-A0853F9B          #
#                            -Z(CODE)PATCH_ONCLOSE=A0853FAC-A0853FAF           #
#                            -Z(CODE)PATCH_ESI1=A08DF41C-A08DF41F              #
#                            -Z(CODE)PATCH_ESI2=A08DF42C-A08DF42F              #
#                            -Z(CODE)PATCH_SHOWMSG_BLF=A07FF180-A07FF184       #
#                            -Z(CODE)PATCH_NO_BROWSE_TXT=A06Cc03A-A06Cc03B     #
#                            -Z(CODE)SWILIB_FUNC171=A00745C4-A00745C7          #
#                            -Z(CODE)SWILIB_FUNC172=A00745C8-A00745CB          #
#                            -Z(CODE)SWILIB_FUNC19C=A0074670-A0074673          #
#                            -Z(CODE)SWILIB_FUNC1B8_1BB=A00746E0-A00746EF      #
#                            -Z(CODE)SWILIB_FUNC1E9=A00747A4-A00747A7          #
#                            -Z(DATA)REGEXPL_CNT=A8D9F000-A8D9F003             #
#                            -Z(CODE)PATCH_EXT2_R7=A0508220-A0508223           #
#                            -Z(CODE)PATCH_EXT2_R6=A0508404-A0508407           #
#                            -Z(CODE)PATCH_EXT2_R7_1=A0507E54-A0507E57         #
#                            -Z(CODE)PATCH_EXT2_R2=A0507FD8-A0507FDB           #
#                            -Z(CODE)PATCH_EXT2_IMPL=A05082A4-A05082C7         #
#                            -Z(CODE)PATCH_ENABLE_ALTOPEN=A072A414-A072A417    #
#                            -Z(CODE)PATCH_GET_PIT=A0956C1E-A0956C21           #
#                            -Z(CODE)PATCH_GET_PITJ=A0956C24-A0956C27          #
#                            -Z(CODE)FSWI_PATCH1=A12DD85C-A12DD85F             #
#                            -Z(CODE)FSWI_PATCH2=A12DD770-A12DD773             #
#                            -Z(CODE)LIBR=A0074000-A0077FFF                    #
#                            -Z(CODE)MFREE_MOD=A0092D98-FFFFFFFF               #
#                            -Z(CODE)PATCH_DRAWHANDLER=A09567A0-FFFFFFFF       #
#                            -Z(CODE)PATCH_DRAWHANDLER_J32=A0A00910-FFFFFFFF   #
#                            -Z(CODE)SWILIB_FUNC300_30A=A0074C00-FFFFFFFF      #
#                            -Z(CODE)SWILIB_FUNC30B_310=A0074C2C-FFFFFFFF      #
#                            -Z(CODE)SWILIB_FUNC311_317=A0074C44-FFFFFFFF      #
#                            -Z(CODE)SWILIB_FUNC318_318=A0074C60-FFFFFFFF      #
#                            -Z(CODE)SWILIB_FUNC319_31E=A0074C64-FFFFFFFF)     #
#                                                                              #
#                        Copyright 1987-2007 IAR Systems. All rights reserved. #
################################################################################





                ****************************************
                *                                      *
                *           CROSS REFERENCE            *
                *                                      *
                ****************************************

                  There are no program entries.




                ****************************************
                *                                      *
                *            RUNTIME MODEL             *
                *                                      *
                ****************************************

  StackAlign4  = USED
  __cpu_mode   = __pcs__interwork
  __data_model = absolute
  __endian     = little
  __rt_version = 6



                ****************************************
                *                                      *
                *              MODULE MAP              *
                *                                      *
                ****************************************


  DEFINED ABSOLUTE ENTRIES
    *************************************************************************

  FILE NAME : C:\arm\elfpack_mod_last\Other\EL71sw45\Obj\ALTSWI.r79
  PROGRAM MODULE, NAME : ALTSWI

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: A0078000 - A0078077 (0x78 bytes), align: 2
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RunSWIFromCashe_ep      A0078000        Segment part 9 (ramlib)

    *************************************************************************

  FILE NAME : C:\arm\elfpack_mod_last\Other\EL71sw45\Obj\DH.r79
  PROGRAM MODULE, NAME : DH

  SEGMENTS IN THE MODULE
  ======================
PATCH_DRAWHANDLER
  Relative segment, address: A09567A0 - A09567A3 (0x4 bytes), align: 2
  Segment part 0. ROOT.
    -------------------------------------------------------------------------
PATCH_DRAWHANDLER_J32
  Relative segment, address: A0A00910 - A0A00913 (0x4 bytes), align: 2
  Segment part 1. ROOT.       Intra module refs:   Segment part 0
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078078 - A007808F (0x18 bytes), align: 2
  Segment part 2. ROOT.       Intra module refs:   Segment part 1
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           dhandler                A0078078 

    *************************************************************************

  FILE NAME : C:\arm\elfpack_mod_last\Other\EL71sw45\Obj\ESI.r79
  PROGRAM MODULE, NAME : ESI

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: A0078090 - A0078093 (0x4 bytes), align: 2
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           BXR1                    A0078090        MyIDLECSMonClose (elfloader)
                                                   MyIDLECSMonCreate (elfloader)
    -------------------------------------------------------------------------
PATCH_NO_BROWSE_TXT
  Relative segment, address: A06CC03A - A06CC03B (0x2 bytes), align: 1
  Segment part 1. ROOT.
    -------------------------------------------------------------------------
PATCH_ESI1
  Relative segment, address: A08DF41C - A08DF41F (0x4 bytes), align: 2
  Segment part 2. ROOT.
    -------------------------------------------------------------------------
PATCH_ESI2
  Relative segment, address: A08DF42C - A08DF42F (0x4 bytes), align: 2
  Segment part 3. ROOT.       Intra module refs:   Segment part 2
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078094 - A007809F (0xc bytes), align: 2
  Segment part 4. ROOT.       Intra module refs:   Segment part 3
    -------------------------------------------------------------------------
PATCH_GET_PIT
  Relative segment, address: A0956C1E - A0956C21 (0x4 bytes), align: 1
  Segment part 5. ROOT.
    -------------------------------------------------------------------------
PATCH_GET_PITJ
  Relative segment, address: A0956C24 - A0956C27 (0x4 bytes), align: 2
  Segment part 6. ROOT.       Intra module refs:   Segment part 5
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A00780A0 - A00780DB (0x3c bytes), align: 2
  Segment part 7. ROOT.       Intra module refs:   Segment part 6

    *************************************************************************

  FILE NAME : C:\arm\elfpack_mod_last\Other\EL71sw45\Obj\EXT2.r79
  PROGRAM MODULE, NAME : EXT2

  SEGMENTS IN THE MODULE
  ======================
PATCH_ENABLE_ALTOPEN
  Relative segment, address: A072A414 - A072A417 (0x4 bytes), align: 2
  Segment part 0. ROOT.
    -------------------------------------------------------------------------
PATCH_EXT2_R7
  Relative segment, address: A0508220 - A0508223 (0x4 bytes), align: 2
  Segment part 1. ROOT.
    -------------------------------------------------------------------------
PATCH_EXT2_R6
  Relative segment, address: A0508404 - A0508407 (0x4 bytes), align: 2
  Segment part 2. ROOT.
    -------------------------------------------------------------------------
PATCH_EXT2_R7_1
  Relative segment, address: A0507E54 - A0507E57 (0x4 bytes), align: 2
  Segment part 3. ROOT.
    -------------------------------------------------------------------------
PATCH_EXT2_R2
  Relative segment, address: A0507FD8 - A0507FDB (0x4 bytes), align: 2
  Segment part 4. ROOT.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A00780DC - A0078103 (0x28 bytes), align: 2
  Segment part 5.             Intra module refs:   Segment part 1
                                                   Segment part 2
                                                   Segment part 3
                                                   Segment part 4
    -------------------------------------------------------------------------
PATCH_EXT2_IMPL
  Relative segment, address: A05082A4 - A05082C7 (0x24 bytes), align: 2
  Segment part 6. ROOT.

    *************************************************************************

  FILE NAME : C:\arm\elfpack_mod_last\Other\EL71sw45\Obj\FSWI.r79
  PROGRAM MODULE, NAME : FSWI

  SEGMENTS IN THE MODULE
  ======================
FSWI_PATCH1
  Relative segment, address: A12DD85C - A12DD85F (0x4 bytes), align: 2
  Segment part 0. ROOT.
    -------------------------------------------------------------------------
FSWI_PATCH2
  Relative segment, address: A12DD770 - A12DD773 (0x4 bytes), align: 2
  Segment part 1. ROOT.       Intra module refs:   Segment part 0
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078104 - A0078193 (0x90 bytes), align: 2
  Segment part 2. ROOT.       Intra module refs:   Segment part 1
    -------------------------------------------------------------------------
LIBR
  Relative segment, address: A0074000, align: 2
  Segment part 3. ROOT.       Intra module refs:   Segment part 2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Library                 A0074000        Segment part 20 (ramlib)

    *************************************************************************

  FILE NAME : C:\arm\elfpack_mod_last\Other\EL71sw45\Obj\IMB.r79
  PROGRAM MODULE, NAME : IMB

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: A0078194 - A00781FF (0x6c bytes), align: 2
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ExecuteIMB              A0078194        ExecuteIMB::??rT (elf)
                                                   elfload (elf)

    *************************************************************************

  FILE NAME : C:\arm\elfpack_mod_last\Other\EL71sw45\Obj\MFUNC.r79
  PROGRAM MODULE, NAME : MFUNC

  SEGMENTS IN THE MODULE
  ======================
MFREE_MOD
  Relative segment, address: A0092D98 - A0092D9B (0x4 bytes), align: 2
  Segment part 0. ROOT.

    *************************************************************************

  FILE NAME : C:\arm\elfpack_mod_last\Other\EL71sw45\Obj\additional.r79
  PROGRAM MODULE, NAME : additional

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: A0078200 - A0078207 (0x8 bytes), align: 2
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           get_file_size::??rA     A0078200 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078208 - A0078223 (0x1c bytes), align: 2
  Segment part 10.            Intra module refs:   get_file_size::??rA
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           get_file_size           A0078209        EDL_load_ep (edl)
                                                   LoadLibrary (ramlib)
                                                   logger (logger)
               stack 1 = 00000000 ( 00000034 )
    -------------------------------------------------------------------------
CODE
  Segment part 11. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078224 - A0078237 (0x14 bytes), align: 2
  Segment part 12.            Intra module refs:   Segment part 7
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           REDRAW_impl             A0078224 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 13. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078238 - A0078243 (0xc bytes), align: 2
  Segment part 14.            Intra module refs:   Segment part 8
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SEQKILLER_impl          A0078239 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 15. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078244 - A00782B3 (0x70 bytes), align: 2
  Segment part 16.            Intra module refs:   ascii2ws
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           char8to16               A0078245 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 17. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A00782B4 - A00782CF (0x1c bytes), align: 2
  Segment part 18.            Intra module refs:   ESI
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ascii2ws                A00782B5 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 19. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A00782D0 - A0078317 (0x48 bytes), align: 2
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ESI                     A00782D0        Segment part 4 (ESI)
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 21. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078318 - A0078353 (0x3c bytes), align: 2
  Segment part 22.            Intra module refs:   MyShowMSG
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DoUnknownFileType       A0078318 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 23. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_N
  Relative segment, address: A8D9F30C - A8D9F30F (0x4 bytes), align: 2
  Segment part 4.             Intra module refs:   EXT2_REALLOC
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EXT2_AREA               A8D9F30C        Segment part 1 (rets_EL71sw45)
                                                   Segment part 5 (EXT2)
    -------------------------------------------------------------------------
REGEXPL_CNT
  Relative segment, address: A8D9F000 - A8D9F003 (0x4 bytes), align: 2
  Segment part 5.             Intra module refs:   EXT2_REALLOC
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EXT2_CNT                A8D9F000 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078354 - A00783C7 (0x74 bytes), align: 2
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EXT2_REALLOC            A0078354        Segment part 6 (EXT2)
               stack 1 = 00000000 ( 0000001C )
    -------------------------------------------------------------------------
CODE
  Segment part 25. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A00783C8 - A00783E7 (0x20 bytes), align: 2
  Segment part 26.            Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MyShowMSG               A00783C9 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
PATCH_SHOWMSG_BLF
  Relative segment, address: A07FF180 - A07FF183 (0x4 bytes), align: 2
  Segment part 6. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC172
  Relative segment, address: A00745C8 - A00745CB (0x4 bytes), align: 2
  Segment part 7. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC19C
  Relative segment, address: A0074670 - A0074673 (0x4 bytes), align: 2
  Segment part 8. ROOT.
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A007A6C0 - A007A6C7 (0x8 bytes), align: 2
  Segment part 2.             Intra module refs:   ESI
    -------------------------------------------------------------------------
DATA_C
  Segment part 3. NOT NEEDED.

    *************************************************************************

  FILE NAME : C:\arm\elfpack_mod_last\Other\EL71sw45\Obj\conf_loader.r79
  PROGRAM MODULE, NAME : conf_loader

  SEGMENTS IN THE MODULE
  ======================
DATA_N
  Relative segment, address: A8D9F310 - A8D9F317 (0x8 bytes), align: 2
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DEFAULT_DISK_N          A8D9F314        EDL_load_ep (edl)
                                                   LoadLibrary (ramlib)
                                                   PatchGetPIT (png)
                                                   Segment part 29 (elfloader)
                                                   logger (logger)
           successed_config_filename
                                   A8D9F310 
    -------------------------------------------------------------------------
CODE
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 4. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LoadConfigData          
               not allocated function
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Segment part 6. NOT NEEDED.

    *************************************************************************

  FILE NAME : C:\arm\elfpack_mod_last\Other\EL71sw45\Obj\config_data.r79
  PROGRAM MODULE, NAME : config_data

  SEGMENTS IN THE MODULE
  ======================
CONFIG_DATA_I
  Relative segment, address: A8D9F00C - A8D9F037 (0x2c bytes), align: 2
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr_01_begin         A8D9F00C 
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A8D9F038 - A8D9F063 (0x2c bytes), align: 2
  Segment part 4. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr01_01             A8D9F038 
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A8D9F064 - A8D9F067 (0x4 bytes), align: 2
  Segment part 6. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ALPHA_THRESHOLD         A8D9F064        create_imghdr (png)
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A8D9F068 - A8D9F093 (0x2c bytes), align: 2
  Segment part 8. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr01_02             A8D9F068 
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A8D9F094 - A8D9F097 (0x4 bytes), align: 2
  Segment part 10. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CACHE_PNG               A8D9F094        PatchGetPIT (png)
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A8D9F098 - A8D9F0C3 (0x2c bytes), align: 2
  Segment part 12. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr01_03             A8D9F098 
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A8D9F0C4 - A8D9F0C7 (0x4 bytes), align: 2
  Segment part 14. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DEFAULT_COLOR           A8D9F0C4        create_imghdr (png)
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A8D9F0C8 - A8D9F127 (0x60 bytes), align: 2
  Segment part 16. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfgcbox01_03            A8D9F0C8 
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A8D9F128 - A8D9F153 (0x2c bytes), align: 2
  Segment part 18. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr_01_end           A8D9F128 
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A8D9F154 - A8D9F17F (0x2c bytes), align: 2
  Segment part 20. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr_03_begin         A8D9F154 
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A8D9F180 - A8D9F1AB (0x2c bytes), align: 2
  Segment part 22. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr03_01             A8D9F180 
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A8D9F1AC - A8D9F1AF (0x4 bytes), align: 2
  Segment part 24. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           edl_ena                 A8D9F1AC        MyIDLECSMonCreate (elfloader)
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A8D9F1B0 - A8D9F1DB (0x2c bytes), align: 2
  Segment part 26. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr03_02             A8D9F1B0 
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A8D9F1DC - A8D9F1DF (0x4 bytes), align: 2
  Segment part 28. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           edl_sys_size            A8D9F1DC        Segment part 45 (edl)
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A8D9F1E0 - A8D9F20B (0x2c bytes), align: 2
  Segment part 30. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr_03_end           A8D9F1E0 
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A8D9F20C - A8D9F237 (0x2c bytes), align: 2
  Segment part 32. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr_05_begin         A8D9F20C 
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A8D9F238 - A8D9F263 (0x2c bytes), align: 2
  Segment part 34. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr05_01             A8D9F238 
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A8D9F264 - A8D9F267 (0x4 bytes), align: 2
  Segment part 36. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           log_sound               A8D9F264        logger (logger)
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A8D9F268 - A8D9F293 (0x2c bytes), align: 2
  Segment part 38. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr05_02             A8D9F268 
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A8D9F294 - A8D9F297 (0x4 bytes), align: 2
  Segment part 40. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           subproc_daem            A8D9F294        MyIDLECSMonCreate (elfloader)
                                                   proc_EPC (gbsproc)
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A8D9F298 - A8D9F2C3 (0x2c bytes), align: 2
  Segment part 42. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr05_03             A8D9F298 
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A8D9F2C4 - A8D9F2C7 (0x4 bytes), align: 2
  Segment part 44. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           subproc_prio            A8D9F2C4        CreateEPC_PROC (gbsproc)
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A8D9F2C8 - A8D9F2F3 (0x2c bytes), align: 2
  Segment part 46. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr_05_end           A8D9F2C8 
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A007AA10 - A007AA3B (0x2c bytes), align: 2
  Segment part 3. ROOT.       Intra module refs:   cfghdr_01_begin
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A007AA3C - A007AA67 (0x2c bytes), align: 2
  Segment part 5. ROOT.       Intra module refs:   cfghdr01_01
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A007AA68 - A007AA6B (0x4 bytes), align: 2
  Segment part 7. ROOT.       Intra module refs:   ALPHA_THRESHOLD
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A007AA6C - A007AA97 (0x2c bytes), align: 2
  Segment part 9. ROOT.       Intra module refs:   cfghdr01_02
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A007AA98 - A007AA9B (0x4 bytes), align: 2
  Segment part 11. ROOT.      Intra module refs:   CACHE_PNG
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A007AA9C - A007AAC7 (0x2c bytes), align: 2
  Segment part 13. ROOT.      Intra module refs:   cfghdr01_03
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A007AAC8 - A007AACB (0x4 bytes), align: 2
  Segment part 15. ROOT.      Intra module refs:   DEFAULT_COLOR
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A007AACC - A007AB2B (0x60 bytes), align: 2
  Segment part 17. ROOT.      Intra module refs:   cfgcbox01_03
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A007AB2C - A007AB57 (0x2c bytes), align: 2
  Segment part 19. ROOT.      Intra module refs:   cfghdr_01_end
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A007AB58 - A007AB83 (0x2c bytes), align: 2
  Segment part 21. ROOT.      Intra module refs:   cfghdr_03_begin
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A007AB84 - A007ABAF (0x2c bytes), align: 2
  Segment part 23. ROOT.      Intra module refs:   cfghdr03_01
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A007ABB0 - A007ABB3 (0x4 bytes), align: 2
  Segment part 25. ROOT.      Intra module refs:   edl_ena
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A007ABB4 - A007ABDF (0x2c bytes), align: 2
  Segment part 27. ROOT.      Intra module refs:   cfghdr03_02
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A007ABE0 - A007ABE3 (0x4 bytes), align: 2
  Segment part 29. ROOT.      Intra module refs:   edl_sys_size
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A007ABE4 - A007AC0F (0x2c bytes), align: 2
  Segment part 31. ROOT.      Intra module refs:   cfghdr_03_end
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A007AC10 - A007AC3B (0x2c bytes), align: 2
  Segment part 33. ROOT.      Intra module refs:   cfghdr_05_begin
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A007AC3C - A007AC67 (0x2c bytes), align: 2
  Segment part 35. ROOT.      Intra module refs:   cfghdr05_01
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A007AC68 - A007AC6B (0x4 bytes), align: 2
  Segment part 37. ROOT.      Intra module refs:   log_sound
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A007AC6C - A007AC97 (0x2c bytes), align: 2
  Segment part 39. ROOT.      Intra module refs:   cfghdr05_02
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A007AC98 - A007AC9B (0x4 bytes), align: 2
  Segment part 41. ROOT.      Intra module refs:   subproc_daem
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A007AC9C - A007ACC7 (0x2c bytes), align: 2
  Segment part 43. ROOT.      Intra module refs:   cfghdr05_03
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A007ACC8 - A007ACCB (0x4 bytes), align: 2
  Segment part 45. ROOT.      Intra module refs:   subproc_prio
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A007ACCC - A007ACF7 (0x2c bytes), align: 2
  Segment part 47. ROOT.      Intra module refs:   cfghdr_05_end
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Segment part 48. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?*?CONFIG_DATA_ID       
    -------------------------------------------------------------------------
INITTAB
  Relative segment, address: A007A694 - A007A69F (0xc bytes), align: 2
  Segment part 49. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?init?tab?CONFIG_DATA_I
                                   A007A694 

    *************************************************************************

  FILE NAME : C:\arm\elfpack_mod_last\Other\EL71sw45\Obj\console.r79
  PROGRAM MODULE, NAME : console

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 11. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A00783E8 - A00783FB (0x14 bytes), align: 2
  Segment part 12.            Intra module refs:   InitConsole_ep(int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Console_Buffer::new Console_Buffer(int)
                                   A00783E9 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 13. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A00783FC - A007840B (0x10 bytes), align: 2
  Segment part 14.            Intra module refs:   KillConsole_ep()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Console_Buffer::delete ~Console_Buffer(Console_Buffer *)
                                   A00783FD 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 15. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 16. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           operator new(size_t)    
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 17. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 18. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           operator new[](size_t)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 19. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 20. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           operator delete(void *)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 21. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A007840C - A0078425 (0x1a bytes), align: 2
  Segment part 22.            Intra module refs:   Console_Buffer::new Console_Buffer(int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Console_Buffer::Console_Buffer(int)
                                   A007840D 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 23. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 24. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Console_Buffer::~Console_Buffer()
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 25. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078428 - A0078459 (0x32 bytes), align: 2
  Segment part 26.            Intra module refs:   ConsolePut_ep(Buff_Data *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Console_Buffer::Put(Buff_Data *)
                                   A0078429 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 27. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A007845C - A0078465 (0xa bytes), align: 2
  Segment part 28.            Intra module refs:   ConsoleGetEx_ep(int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Console_Buffer::GetEx(int)
                                   A007845D 
    -------------------------------------------------------------------------
CODE
  Segment part 29. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078468 - A007848F (0x28 bytes), align: 2
  Segment part 30.            Intra module refs:   ConsoleGet_ep(Buff_Data *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Console_Buffer::Get(Buff_Data * *)
                                   A0078469 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 31. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078490 - A00784A5 (0x16 bytes), align: 2
  Segment part 32.            Intra module refs:   ConsoleClean_ep()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Console_Buffer::Clean()
                                   A0078491 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 33. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_I
  Relative segment, address: A8D9F004 - A8D9F00B (0x8 bytes), align: 2
  Segment part 2.             Intra module refs:   Segment part 47
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Con_Buf                 A8D9F008 
           cstate                  A8D9F004 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A00784A8 - A00784CF (0x28 bytes), align: 2
  Segment part 34.            Intra module refs:   ReInitConsole_ep(int)
                                                   Segment part 4
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           InitConsole_ep(int)     A00784A8 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 35. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A00784D0 - A00784FB (0x2c bytes), align: 2
  Segment part 36.            Intra module refs:   ReInitConsole_ep(int)
                                                   Segment part 5
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           KillConsole_ep()        A00784D0 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 37. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A00784FC - A0078523 (0x28 bytes), align: 2
  Segment part 38.            Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ReInitConsole_ep(int)   A00784FC 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 39. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078524 - A0078553 (0x30 bytes), align: 2
  Segment part 40.            Intra module refs:   Segment part 7
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ConsolePut_ep(Buff_Data *)
                                   A0078524 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 41. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078554 - A0078583 (0x30 bytes), align: 2
  Segment part 42.            Intra module refs:   Segment part 8
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ConsoleGet_ep(Buff_Data *)
                                   A0078554 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 43. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078584 - A00785AF (0x2c bytes), align: 2
  Segment part 44.            Intra module refs:   Segment part 9
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ConsoleGetEx_ep(int)    A0078584 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 45. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A00785B0 - A00785D7 (0x28 bytes), align: 2
  Segment part 46.            Intra module refs:   Segment part 10
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ConsoleClean_ep()       A00785B0 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A00785D8 - A00785DB (0x4 bytes), align: 2
  Segment part 47.            Intra module refs:   ConsoleClean_ep()
                                                   ConsoleGetEx_ep(int)
                                                   ConsoleGet_ep(Buff_Data *)
                                                   ConsolePut_ep(Buff_Data *)
                                                   InitConsole_ep(int)
                                                   KillConsole_ep()
                                                   ReInitConsole_ep(int)
    -------------------------------------------------------------------------
SWILIB_FUNC311_317
  Relative segment, address: A0074C44 - A0074C47 (0x4 bytes), align: 2
  Segment part 4. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC311_317
  Relative segment, address: A0074C48 - A0074C4B (0x4 bytes), align: 2
  Segment part 5. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC311_317
  Relative segment, address: A0074C4C - A0074C4F (0x4 bytes), align: 2
  Segment part 6. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC311_317
  Relative segment, address: A0074C50 - A0074C53 (0x4 bytes), align: 2
  Segment part 7. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC311_317
  Relative segment, address: A0074C54 - A0074C57 (0x4 bytes), align: 2
  Segment part 8. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC311_317
  Relative segment, address: A0074C58 - A0074C5B (0x4 bytes), align: 2
  Segment part 9. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC311_317
  Relative segment, address: A0074C5C - A0074C5F (0x4 bytes), align: 2
  Segment part 10. ROOT.
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_ID
  Relative segment, address: A007A6B8 - A007A6BF (0x8 bytes), align: 2
  Segment part 3.             Intra module refs:   Segment part 2
    -------------------------------------------------------------------------
DATA_ID
  Segment part 48. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?*?DATA_ID              
    -------------------------------------------------------------------------
INITTAB
  Relative segment, address: A007A6A0 - A007A6AB (0xc bytes), align: 2
  Segment part 49. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?init?tab?DATA_I        A007A6A0 

    *************************************************************************

  FILE NAME : C:\arm\elfpack_mod_last\Other\EL71sw45\Obj\dhs.r79
  PROGRAM MODULE, NAME : dhs

  SEGMENTS IN THE MODULE
  ======================
DATA_Z
  Relative segment, address: A8D9F2F4 - A8D9F2FB (0x8 bytes), align: 2
  Segment part 2.             Intra module refs:   Segment part 29
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           dhs                     A8D9F2F4 
           priodraw                A8D9F2F8 
    -------------------------------------------------------------------------
CODE
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A00785DC - A007862F (0x54 bytes), align: 2
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DHS_init                A00785DC        MyIDLECSMonCreate (elfloader)
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 11. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078630 - A00786B3 (0x84 bytes), align: 2
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DHS_kill                A0078630        MyIDLECSMonClose (elfloader)
               stack 1 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
CODE
  Segment part 13. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A00786B4 - A00786ED (0x3a bytes), align: 2
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DHS_drawItems           A00786B5        dhandler (DH)
               stack 1 = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
CODE
  Segment part 15. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A00786F0 - A00787B3 (0xc4 bytes), align: 2
  Segment part 16.            Intra module refs:   Segment part 3
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DHS_addProc_ep          A00786F0 
               stack 1 = 00000000 ( 00000018 )
    -------------------------------------------------------------------------
CODE
  Segment part 17. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A00787B4 - A00788B7 (0x104 bytes), align: 2
  Segment part 18.            Intra module refs:   Segment part 4
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DHS_removeProc_ep       A00787B4 
               stack 1 = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
CODE
  Segment part 19. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A00788B8 - A00788CF (0x18 bytes), align: 2
  Segment part 20.            Intra module refs:   DHS_kill
                                                   Segment part 5
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DHS_lockDraw_ep         A00788B9 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A00788D0 - A00788D3 (0x4 bytes), align: 2
  Segment part 21.            Intra module refs:   DHS_drawItems
                                                   DHS_init
                                                   DHS_lockDraw_ep
    -------------------------------------------------------------------------
CODE
  Segment part 22. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A00788D4 - A00788D9 (0x6 bytes), align: 2
  Segment part 23.            Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DHS_getBaseAddr_ep      A00788D5 
    -------------------------------------------------------------------------
CODE
  Segment part 24. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A00788DC - A0078927 (0x4c bytes), align: 2
  Segment part 25.            Intra module refs:   Segment part 7
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DHS_getStatusItem_ep    A00788DD 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078928 - A007892B (0x4 bytes), align: 2
  Segment part 26.            Intra module refs:   DHS_drawItems
                                                   DHS_getStatusItem_ep
    -------------------------------------------------------------------------
CODE
  Segment part 27. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A007892C - A00789A7 (0x7c bytes), align: 2
  Segment part 28.            Intra module refs:   Segment part 8
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DHS_workProcPrio_ep     A007892C 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A00789A8 - A00789AB (0x4 bytes), align: 2
  Segment part 29.            Intra module refs:   DHS_addProc_ep
                                                   DHS_drawItems
                                                   DHS_getBaseAddr_ep
                                                   DHS_getStatusItem_ep
                                                   DHS_init
                                                   DHS_kill
                                                   DHS_lockDraw_ep
                                                   DHS_removeProc_ep
                                                   DHS_workProcPrio_ep
    -------------------------------------------------------------------------
SWILIB_FUNC319_31E
  Relative segment, address: A0074C64 - A0074C67 (0x4 bytes), align: 2
  Segment part 3. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC319_31E
  Relative segment, address: A0074C68 - A0074C6B (0x4 bytes), align: 2
  Segment part 4. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC319_31E
  Relative segment, address: A0074C6C - A0074C6F (0x4 bytes), align: 2
  Segment part 5. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC319_31E
  Relative segment, address: A0074C70 - A0074C73 (0x4 bytes), align: 2
  Segment part 6. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC319_31E
  Relative segment, address: A0074C74 - A0074C77 (0x4 bytes), align: 2
  Segment part 7. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC319_31E
  Relative segment, address: A0074C78 - A0074C7B (0x4 bytes), align: 2
  Segment part 8. ROOT.
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
INITTAB
  Relative segment, address: A007A6AC - A007A6B7 (0xc bytes), align: 2
  Segment part 30. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?init?tab?DATA_Z        A007A6AC 

    *************************************************************************

  FILE NAME : C:\arm\elfpack_mod_last\Other\EL71sw45\Obj\edl.r79
  PROGRAM MODULE, NAME : edl

  SEGMENTS IN THE MODULE
  ======================
DATA_Z
  Relative segment, address: A8D9F2FC - A8D9F2FF (0x4 bytes), align: 2
  Segment part 6.             Intra module refs:   Segment part 42
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pEDL_TOP                A8D9F2FC 
    -------------------------------------------------------------------------
CODE
  Segment part 18. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A00789AC - A0078A1B (0x70 bytes), align: 2
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EDL_system_init         A00789AC        MyIDLECSMonCreate (elfloader)
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 20. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 21. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EDL_system_kill         
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 22. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 23. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EDL_system_reinit       
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 24. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078A1C - A0078AA3 (0x88 bytes), align: 2
  Segment part 25.            Intra module refs:   EDL_addlib_ep
                                                   EDL_load_ep
                                                   EDL_remove_ep
                                                   EDL_unload_ep
                                                   EDL_use_ep
                                                   Segment part 13
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           isEDL_exist_ep          A0078A1C 
               stack 1 = 00000000 ( 0000001C )
    -------------------------------------------------------------------------
CODE
  Segment part 26. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078AA4 - A0078B87 (0xe4 bytes), align: 2
  Segment part 27.            Intra module refs:   EDL_load_ep
                                                   Segment part 14
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           isEDL_support_ep        A0078AA4 
               stack 1 = 00000000 ( 0000001C )
    -------------------------------------------------------------------------
CODE
  Segment part 28. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078B88 - A0078D5F (0x1d8 bytes), align: 2
  Segment part 29.            Intra module refs:   Segment part 8
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EDL_load_ep             A0078B88        executer_and_messager (elfloader)
               stack 1 = 00000000 ( 00000124 )
    -------------------------------------------------------------------------
CODE
  Segment part 30. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078D60 - A0078DBB (0x5c bytes), align: 2
  Segment part 31.            Intra module refs:   Segment part 9
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EDL_unload_ep           A0078D60 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 32. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078DBC - A0078E33 (0x78 bytes), align: 2
  Segment part 33.            Intra module refs:   Segment part 10
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EDL_addlib_ep           A0078DBC 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 34. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078E34 - A0078E83 (0x50 bytes), align: 2
  Segment part 35.            Intra module refs:   Segment part 11
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EDL_remove_ep           A0078E34 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 36. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078E84 - A0078ECF (0x4c bytes), align: 2
  Segment part 37.            Intra module refs:   Segment part 12
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EDL_use_ep              A0078E84 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 38. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078ED0 - A0078EDB (0xc bytes), align: 2
  Segment part 39.            Intra module refs:   Segment part 15
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           getEDL_baseAddr_ep      A0078ED0 
    -------------------------------------------------------------------------
CODE
  Segment part 40. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078EDC - A0078F23 (0x48 bytes), align: 2
  Segment part 41.            Intra module refs:   Segment part 16
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           getEDL_curLibs_ep       A0078EDC 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078F24 - A0078F27 (0x4 bytes), align: 2
  Segment part 42.            Intra module refs:   EDL_addlib_ep
                                                   EDL_remove_ep
                                                   EDL_system_init
                                                   EDL_unload_ep
                                                   EDL_use_ep
                                                   getEDL_baseAddr_ep
                                                   getEDL_curLibs_ep
                                                   isEDL_exist_ep
    -------------------------------------------------------------------------
CODE
  Segment part 43. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078F28 - A0078F33 (0xc bytes), align: 2
  Segment part 44.            Intra module refs:   Segment part 17
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           getEDL_maxLibs_ep       A0078F28 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078F34 - A0078F37 (0x4 bytes), align: 2
  Segment part 45.            Intra module refs:   EDL_addlib_ep
                                                   EDL_system_init
                                                   getEDL_curLibs_ep
                                                   getEDL_maxLibs_ep
                                                   isEDL_exist_ep
    -------------------------------------------------------------------------
CODE
  Segment part 46. NOT NEEDED.Intra module refs:   EDL_load_ep
    -------------------------------------------------------------------------
CODE
  Segment part 47. NOT NEEDED.Intra module refs:   EDL_load_ep
    -------------------------------------------------------------------------
SWILIB_FUNC300_30A
  Relative segment, address: A0074C00 - A0074C03 (0x4 bytes), align: 2
  Segment part 7. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC300_30A
  Relative segment, address: A0074C04 - A0074C07 (0x4 bytes), align: 2
  Segment part 8. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC300_30A
  Relative segment, address: A0074C08 - A0074C0B (0x4 bytes), align: 2
  Segment part 9. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC300_30A
  Relative segment, address: A0074C0C - A0074C0F (0x4 bytes), align: 2
  Segment part 10. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC300_30A
  Relative segment, address: A0074C10 - A0074C13 (0x4 bytes), align: 2
  Segment part 11. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC300_30A
  Relative segment, address: A0074C14 - A0074C17 (0x4 bytes), align: 2
  Segment part 12. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC300_30A
  Relative segment, address: A0074C18 - A0074C1B (0x4 bytes), align: 2
  Segment part 13. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC300_30A
  Relative segment, address: A0074C1C - A0074C1F (0x4 bytes), align: 2
  Segment part 14. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC300_30A
  Relative segment, address: A0074C20 - A0074C23 (0x4 bytes), align: 2
  Segment part 15. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC300_30A
  Relative segment, address: A0074C24 - A0074C27 (0x4 bytes), align: 2
  Segment part 16. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC300_30A
  Relative segment, address: A0074C28 - A0074C2B (0x4 bytes), align: 2
  Segment part 17. ROOT.
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
INITTAB
  Segment part 48. TENTATIVE. Used definition from dhs
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?init?tab?DATA_Z        
    -------------------------------------------------------------------------
DATA_C
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A007A6C8 - A007A6CF (0x8 bytes), align: 2
  Segment part 3.             Intra module refs:   isEDL_support_ep
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A007A6D0 - A007A6EF (0x20 bytes), align: 2
  Segment part 4.             Intra module refs:   EDL_load_ep
    -------------------------------------------------------------------------
DATA_C
  Segment part 5. NOT NEEDED.

    *************************************************************************

  FILE NAME : C:\arm\elfpack_mod_last\Other\EL71sw45\Obj\elf.r79
  PROGRAM MODULE, NAME : elf

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078F38 - A0078F43 (0xc bytes), align: 2
  Segment part 3.             Intra module refs:   elfload
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zeromem_a               A0078F38 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078F44 - A0078F4B (0x8 bytes), align: 2
  Segment part 4.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           elfload::??rA           A0078F44 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078F4C - A007920B (0x2c0 bytes), align: 2
  Segment part 5.             Intra module refs:   elfload::??rA
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           elfload                 A0078F4D        EDL_load_ep (edl)
                                                   executer_and_messager (elfloader)
               stack 1 = 00000000 ( 00000224 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A007920C - A0079213 (0x8 bytes), align: 2
  Segment part 6.             Intra module refs:   elfload
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ExecuteIMB::??rT        A007920D 
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    *************************************************************************

  FILE NAME : C:\arm\elfpack_mod_last\Other\EL71sw45\Obj\elfloader.r79
  PROGRAM MODULE, NAME : elfloader

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 17. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0079214 - A0079283 (0x70 bytes), align: 2
  Segment part 18.            Intra module refs:   LoadDaemons
                                                   LoadLibs
                                                   edl_onload
                                                   elf_onload
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           executer_and_messager   A0079214 
               stack 1 = 00000000 ( 0000006C )
    -------------------------------------------------------------------------
CODE
  Segment part 19. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0079284 - A00792CB (0x48 bytes), align: 2
  Segment part 20.            Intra module refs:   Segment part 5
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           elf_onload              A0079284 
               stack 1 = 00000000 ( 00000088 )
    -------------------------------------------------------------------------
CODE
  Segment part 21. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A00792CC - A0079303 (0x38 bytes), align: 2
  Segment part 22.            Intra module refs:   Segment part 5
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           edl_onload              A00792CC 
               stack 1 = 00000000 ( 00000084 )
    -------------------------------------------------------------------------
CODE
  Segment part 23. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0079304 - A00793B7 (0xb4 bytes), align: 2
  Segment part 24.            Intra module refs:   MyIDLECSMonCreate
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LoadLibs                A0079304        proc_EPC (gbsproc)
               stack 1 = 00000000 ( 00000454 )
    -------------------------------------------------------------------------
CODE
  Segment part 25. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A00793B8 - A007946B (0xb4 bytes), align: 2
  Segment part 26.            Intra module refs:   MyIDLECSMonCreate
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LoadDaemons             A00793B8        Segment part 16 (gbsproc)
                                                   proc_EPC (gbsproc)
               stack 1 = 00000000 ( 00000454 )
    -------------------------------------------------------------------------
CODE
  Segment part 27. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_N
  Relative segment, address: A8D9F318 - A8D9F397 (0x80 bytes), align: 2
  Segment part 10.            Intra module refs:   MyIDLECSMonCreate
                                                   Segment part 11
                                                   Segment part 12
                                                   Segment part 13
                                                   Segment part 14
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           bigicons_edl_str        A8D9F378 
           bigicons_str            A8D9F338 
           smallicons_edl_str      A8D9F358 
           smallicons_str          A8D9F318 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A007946C - A0079553 (0xe8 bytes), align: 2
  Segment part 28.            Intra module refs:   Segment part 15
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MyIDLECSMonCreate       A007946C 
               stack 1 = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0079554 - A0079557 (0x4 bytes), align: 2
  Segment part 29.            Intra module refs:   LoadDaemons
                                                   LoadLibs
                                                   MyIDLECSMonCreate
    -------------------------------------------------------------------------
CODE
  Segment part 30. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A007A6F0 - A007A703 (0x14 bytes), align: 2
  Segment part 2.             Intra module refs:   executer_and_messager
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A007A704 - A007A71B (0x18 bytes), align: 2
  Segment part 3.             Intra module refs:   LoadLibs
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A007A71C - A007A733 (0x18 bytes), align: 2
  Segment part 4.             Intra module refs:   LoadDaemons
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A007A734 - A007A7EB (0xb8 bytes), align: 2
  Segment part 5.             Intra module refs:   MyIDLECSMonCreate
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A007A7EC - A007A7EF (0x4 bytes), align: 2
  Segment part 6.             Intra module refs:   Segment part 5
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A007A7F0 - A007A7F7 (0x8 bytes), align: 2
  Segment part 7.             Intra module refs:   Segment part 5
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A007A7F8 - A007A7FF (0x8 bytes), align: 2
  Segment part 8.             Intra module refs:   Segment part 5
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A007A800 - A007A803 (0x4 bytes), align: 2
  Segment part 9.             Intra module refs:   Segment part 5
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A007A804 - A007A80B (0x8 bytes), align: 2
  Segment part 11.            Intra module refs:   Segment part 5
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A007A80C - A007A813 (0x8 bytes), align: 2
  Segment part 12.            Intra module refs:   Segment part 5
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A007A814 - A007A81B (0x8 bytes), align: 2
  Segment part 13.            Intra module refs:   Segment part 5
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A007A81C - A007A823 (0x8 bytes), align: 2
  Segment part 14.            Intra module refs:   Segment part 5
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0079558 - A007957F (0x28 bytes), align: 2
  Segment part 31.            Intra module refs:   Segment part 16
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MyIDLECSMonClose        A0079558 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 32. NOT NEEDED.Intra module refs:   executer_and_messager
    -------------------------------------------------------------------------
CODE
  Segment part 33. NOT NEEDED.Intra module refs:   executer_and_messager
    -------------------------------------------------------------------------
CODE
  Segment part 34. NOT NEEDED.Intra module refs:   MyIDLECSMonCreate
    -------------------------------------------------------------------------
CODE
  Segment part 35. NOT NEEDED.Intra module refs:   MyIDLECSMonCreate
    -------------------------------------------------------------------------
CODE
  Segment part 36. NOT NEEDED.Intra module refs:   MyIDLECSMonCreate
    -------------------------------------------------------------------------
CODE
  Segment part 37. NOT NEEDED.Intra module refs:   MyIDLECSMonCreate
    -------------------------------------------------------------------------
CODE
  Segment part 38. NOT NEEDED.Intra module refs:   MyIDLECSMonCreate
    -------------------------------------------------------------------------
CODE
  Segment part 39. NOT NEEDED.Intra module refs:   MyIDLECSMonClose
                                                   MyIDLECSMonCreate
    -------------------------------------------------------------------------
CODE
  Segment part 40. NOT NEEDED.Intra module refs:   MyIDLECSMonClose
    -------------------------------------------------------------------------
CODE
  Segment part 41. NOT NEEDED.Intra module refs:   MyIDLECSMonClose
    -------------------------------------------------------------------------
PATCH_ONCREATE
  Relative segment, address: A0853F98 - A0853F9B (0x4 bytes), align: 2
  Segment part 15. ROOT.
    -------------------------------------------------------------------------
PATCH_ONCLOSE
  Relative segment, address: A0853FAC - A0853FAF (0x4 bytes), align: 2
  Segment part 16. ROOT.
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    *************************************************************************

  FILE NAME : C:\arm\elfpack_mod_last\Other\EL71sw45\Obj\gbsproc.r79
  PROGRAM MODULE, NAME : gbsproc

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0079580 - A00796A3 (0x124 bytes), align: 2
  Segment part 6.             Intra module refs:   CreateEPC_PROC
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           proc_EPC                A0079580 
               stack 1 = 00000000 ( 00000024 )
    -------------------------------------------------------------------------
CODE
  Segment part 7. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A00796A4 - A00796DB (0x38 bytes), align: 2
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CreateEPC_PROC          A00796A4        MyIDLECSMonCreate (elfloader)
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A00796DC - A00796EF (0x14 bytes), align: 2
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           KillEPC_PROC            A00796DC        MyIDLECSMonClose (elfloader)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 11. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A00796F0 - A0079713 (0x24 bytes), align: 2
  Segment part 12.            Intra module refs:   Segment part 4
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SUBPROC_impl            A00796F0 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 13. NOT NEEDED.Intra module refs:   proc_EPC
    -------------------------------------------------------------------------
CODE
  Segment part 14. NOT NEEDED.Intra module refs:   proc_EPC
    -------------------------------------------------------------------------
CODE
  Segment part 15. NOT NEEDED.Intra module refs:   proc_EPC
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0079714 - A0079717 (0x4 bytes), align: 2
  Segment part 16.            Intra module refs:   proc_EPC
    -------------------------------------------------------------------------
CODE
  Segment part 17. NOT NEEDED.Intra module refs:   proc_EPC
    -------------------------------------------------------------------------
SWILIB_FUNC171
  Relative segment, address: A00745C4 - A00745C7 (0x4 bytes), align: 2
  Segment part 4. ROOT.
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A007A824 - A007A87F (0x5c bytes), align: 2
  Segment part 2.             Intra module refs:   proc_EPC
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A007A880 - A007A88F (0x10 bytes), align: 2
  Segment part 3.             Intra module refs:   CreateEPC_PROC

    *************************************************************************

  FILE NAME : C:\arm\elfpack_mod_last\Other\EL71sw45\Obj\logger.r79
  PROGRAM MODULE, NAME : logger

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0079718 - A0079893 (0x17c bytes), align: 2
  Segment part 4.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           logger                  A0079718        FUNC_ABORT (ramlib)
               stack 1 = 00000000 ( 000000CC )
    -------------------------------------------------------------------------
CODE
  Segment part 5. NOT NEEDED. Intra module refs:   logger
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A007A890 - A007A95B (0xcc bytes), align: 2
  Segment part 2.             Intra module refs:   logger

    *************************************************************************

  FILE NAME : C:\arm\elfpack_mod_last\Other\EL71sw45\Obj\paths.r79
  PROGRAM MODULE, NAME : paths

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0079894 - A007989B (0x8 bytes), align: 2
  Segment part 4.             Intra module refs:   Segment part 2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GetPathOfEP_ep          A0079894 
    -------------------------------------------------------------------------
SWILIB_FUNC318_318
  Relative segment, address: A0074C60 - A0074C63 (0x4 bytes), align: 2
  Segment part 2. ROOT.
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    *************************************************************************

  FILE NAME : C:\arm\elfpack_mod_last\Other\EL71sw45\Obj\png.r79
  PROGRAM MODULE, NAME : png

  SEGMENTS IN THE MODULE
  ======================
DATA_C
  Relative segment, address: A007A95C - A007A963 (0x8 bytes), align: 2
  Segment part 2.             Intra module refs:   create_imghdr
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A007A964 - A007A97B (0x18 bytes), align: 2
  Segment part 3.             Intra module refs:   PatchGetPIT
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DEFAULT_FOLDER          A007A964 
           empty_img               A007A970 
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A007AA0C - A007AA0C (0x1 bytes), align: 0
  Segment part 4.             Intra module refs:   Segment part 3
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Pointer                 A007AA0C 
    -------------------------------------------------------------------------
CODE
  Segment part 7. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A007989C - A00798A3 (0x8 bytes), align: 2
  Segment part 8.             Intra module refs:   create_imghdr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           xmalloc                 A007989D 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A00798A4 - A00798AB (0x8 bytes), align: 2
  Segment part 10.            Intra module refs:   create_imghdr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           xmfree                  A00798A5 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 11. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A00798AC - A0079917 (0x6c bytes), align: 2
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           clear_cache             A00798AC        proc_EPC (gbsproc)
               stack 1 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
CODE
  Segment part 13. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0079918 - A007993F (0x28 bytes), align: 2
  Segment part 14.            Intra module refs:   create_imghdr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           read_data_fn            A0079918 
               stack 1 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
CODE
  Segment part 15. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0079940 - A0079EEB (0x5ac bytes), align: 2
  Segment part 16.            Intra module refs:   PatchGetPIT
                                                   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           create_imghdr           A0079940 
               stack 1 = 00000000 ( 00000060 )
    -------------------------------------------------------------------------
CODE
  Segment part 17. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_N
  Relative segment, address: A8D9F398 - A8D9F3A3 (0xc bytes), align: 2
  Segment part 5.             Intra module refs:   InitPngBitMap
                                                   Segment part 25
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pngtop                  A8D9F398        Segment part 1 (rets_EL71sw45)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0079EEC - A0079F0F (0x24 bytes), align: 2
  Segment part 18.            Intra module refs:   PatchGetPIT
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           strcpy_tolow            A0079EED 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 19. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0079F10 - A0079FA7 (0x98 bytes), align: 2
  Segment part 20.            Intra module refs:   PatchGetPIT
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           print10                 A0079F10 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 21. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0079FA8 - A007A01B (0x74 bytes), align: 2
  Segment part 22.            Intra module refs:   PatchGetPIT
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           find_png_in_cache       A0079FA8 
               stack 1 = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
CODE
  Segment part 23. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A007A01C - A007A2A7 (0x28c bytes), align: 2
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PatchGetPIT             A007A01C        Segment part 7 (ESI)
               stack 1 = 00000000 ( 00000124 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A007A2A8 - A007A2AB (0x4 bytes), align: 2
  Segment part 25.            Intra module refs:   PatchGetPIT
                                                   find_png_in_cache
    -------------------------------------------------------------------------
CODE
  Segment part 26. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A007A2AC - A007A2E7 (0x3c bytes), align: 2
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           InitPngBitMap           A007A2AC        MyIDLECSMonCreate (elfloader)
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
SWILIB_FUNC1E9
  Relative segment, address: A00747A4 - A00747A7 (0x4 bytes), align: 2
  Segment part 6. ROOT.
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    *************************************************************************

  FILE NAME : C:\arm\elfpack_mod_last\Other\EL71sw45\Obj\ramlib.r79
  PROGRAM MODULE, NAME : ramlib

  SEGMENTS IN THE MODULE
  ======================
DATA_N
  Relative segment, address: A8D9F3A4 - A8D9F3A7 (0x4 bytes), align: 2
  Segment part 4.             Intra module refs:   Segment part 29
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pLIB_TOP                A8D9F3A4        Segment part 1 (rets_EL71sw45)
                                                   Segment part 2 (FSWI)
    -------------------------------------------------------------------------
DATA_Z
  Relative segment, address: A8D9F308 - A8D9F309 (0x2 bytes), align: 1
  Segment part 5.             Intra module refs:   SetSWINumInCashe_ep
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pLIB_TOP_cashe          A8D9F308        RunSWIFromCashe_ep (ALTSWI)
    -------------------------------------------------------------------------
DATA_Z
  Relative segment, address: A8D9F300 - A8D9F307 (0x8 bytes), align: 2
  Segment part 6.             Intra module refs:   Segment part 17
                                                   Segment part 30
                                                   SetSWIHookInRAMState_ep
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pLIB_TOP_backup         A8D9F304        RunSWIFromCashe_ep (ALTSWI)
           pLIB_TOP_exist          A8D9F300 
    -------------------------------------------------------------------------
CODE
  Segment part 13. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A007A2E8 - A007A4BF (0x1d8 bytes), align: 2
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LoadLibrary             A007A2E8        MyIDLECSMonCreate (elfloader)
                                                   proc_EPC (gbsproc)
               stack 1 = 00000000 ( 000000D0 )
    -------------------------------------------------------------------------
CODE
  Segment part 15. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A007A4C0 - A007A53B (0x7c bytes), align: 2
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           FUNC_ABORT              A007A4C0        RunSWIFromCashe_ep (ALTSWI)
                                                   Segment part 2 (FSWI)
               stack 1 = 00000000 ( 00000050 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A007A53C - A007A53F (0x4 bytes), align: 2
  Segment part 17.            Intra module refs:   FUNC_ABORT
                                                   LoadLibrary
    -------------------------------------------------------------------------
CODE
  Segment part 18. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A007A540 - A007A5B3 (0x74 bytes), align: 2
  Segment part 19.            Intra module refs:   Segment part 7
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SetSWIHookInRAMState_ep
                                   A007A540 
               stack 1 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A007A5B4 - A007A5B7 (0x4 bytes), align: 2
  Segment part 20.            Intra module refs:   LoadLibrary
                                                   SetSWIHookInRAMState_ep
    -------------------------------------------------------------------------
CODE
  Segment part 21. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A007A5B8 - A007A5CF (0x18 bytes), align: 2
  Segment part 22.            Intra module refs:   Segment part 8
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SetSWINumInCashe_ep     A007A5B9 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 23. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A007A5D0 - A007A603 (0x34 bytes), align: 2
  Segment part 24.            Intra module refs:   Segment part 10
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SetSWIFunc_ep           A007A5D0 
               stack 1 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
CODE
  Segment part 25. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A007A604 - A007A63F (0x3c bytes), align: 2
  Segment part 26.            Intra module refs:   Segment part 11
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RepairSWIFunc_ep        A007A604 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 27. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A007A640 - A007A677 (0x38 bytes), align: 2
  Segment part 28.            Intra module refs:   Segment part 12
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RepairSWILib_ep         A007A640 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A007A678 - A007A67B (0x4 bytes), align: 2
  Segment part 29.            Intra module refs:   LoadLibrary
                                                   RepairSWIFunc_ep
                                                   RepairSWILib_ep
                                                   SetSWIFunc_ep
                                                   SetSWIHookInRAMState_ep
                                                   SetSWINumInCashe_ep
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A007A67C - A007A67F (0x4 bytes), align: 2
  Segment part 30.            Intra module refs:   RepairSWIFunc_ep
                                                   RepairSWILib_ep
    -------------------------------------------------------------------------
CODE
  Segment part 31. NOT NEEDED.Intra module refs:   LoadLibrary
    -------------------------------------------------------------------------
CODE
  Segment part 32. NOT NEEDED.Intra module refs:   FUNC_ABORT
    -------------------------------------------------------------------------
SWILIB_FUNC30B_310
  Relative segment, address: A0074C2C - A0074C2F (0x4 bytes), align: 2
  Segment part 7. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC30B_310
  Relative segment, address: A0074C30 - A0074C33 (0x4 bytes), align: 2
  Segment part 8. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC30B_310
  Relative segment, address: A0074C34 - A0074C37 (0x4 bytes), align: 2
  Segment part 9. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC30B_310
  Relative segment, address: A0074C38 - A0074C3B (0x4 bytes), align: 2
  Segment part 10. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC30B_310
  Relative segment, address: A0074C3C - A0074C3F (0x4 bytes), align: 2
  Segment part 11. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC30B_310
  Relative segment, address: A0074C40 - A0074C43 (0x4 bytes), align: 2
  Segment part 12. ROOT.
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
INITTAB
  Segment part 33. TENTATIVE. Used definition from dhs
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?init?tab?DATA_Z        
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A007A97C - A007A9EB (0x70 bytes), align: 2
  Segment part 2.             Intra module refs:   LoadLibrary
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A007A9EC - A007AA0B (0x20 bytes), align: 2
  Segment part 3.             Intra module refs:   FUNC_ABORT

    *************************************************************************

  FILE NAME : C:\arm\elfpack_mod_last\Other\EL71sw45\Obj\rets_EL71sw45.r79
  PROGRAM MODULE, NAME : rets_EL71sw45

Absolute parts
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           StoreErrInfoAndAbort    A04D319C 
           StoreErrString          A04D3068 
  SEGMENTS IN THE MODULE
  ======================
DATA_N
  Relative segment, address: A8D9F3A8, align: 2
  Segment part 0. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC1B8_1BB
  Relative segment, address: A00746E0 - A00746EF (0x10 bytes), align: 2
  Segment part 1. ROOT.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A007A680 - A007A693 (0x14 bytes), align: 2
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OldOnClose              A007A680        MyIDLECSMonClose (elfloader)
           OldOnCreate             A007A684        MyIDLECSMonCreate (elfloader)
           OldShowMsg              A007A688        MyShowMSG (additional)
           PITgetN                 A007A68C        Segment part 7 (ESI)
           PITret                  A007A690        Segment part 7 (ESI)




                ****************************************
                *                                      *
                *            MODULE SUMMARY            *
                *                                      *
                ****************************************

Module             CODE   DATA
------             ----   ----
                  (Rel)  (Rel)
ALTSWI              120
DH                   32
ESI                  94
EXT2                 96
FSWI                152
IMB                 108
MFUNC                 4
additional          500      8
  + shared            8
conf_loader                  8
config_data         756    744
console             548      8
dhs               1 000      8
  + shared           12
edl               1 504      4
elf                 716
  + shared           16
elfloader         1 192    128
gbsproc             520
logger              584
paths                12
png               2 673     12
ramlib            1 088     14
rets_EL71sw45        36
N/A (alignment)
------           ------    ---
Total:           11 771    934


                ****************************************
                *                                      *
                *              CALL GRAPH              *
                *                                      *
                ****************************************

  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  REDRAW_impl
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  SEQKILLER_impl
      | Stack used (prev) :  00000000
      | + function block  :  00000008
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000008


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  MyShowMSG
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  InitConsole_ep(int)
      | Stack used (prev) :  00000000
      | + function block  :  00000008
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000008


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  KillConsole_ep()
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  ReInitConsole_ep(int)
      | Stack used (prev) :  00000000
      | + function block  :  00000008
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000008


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  ConsolePut_ep(Buff_Data *)
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  ConsoleGet_ep(Buff_Data *)
      | Stack used (prev) :  00000000
      | + function block  :  00000008
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000008


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  ConsoleGetEx_ep(int)
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  ConsoleClean_ep()
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  DHS_addProc_ep
      | Stack used (prev) :  00000000
      | + function block  :  00000018
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000018


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  DHS_removeProc_ep
      | Stack used (prev) :  00000000
      | + function block  :  00000014
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000014


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  DHS_lockDraw_ep
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  DHS_getBaseAddr_ep
      | Stack used (prev) :  00000000
      | + function block  :  00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000000


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  DHS_getStatusItem_ep
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  DHS_workProcPrio_ep
      | Stack used (prev) :  00000000
      | + function block  :  0000000C
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000000C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  isEDL_exist_ep
      | Stack used (prev) :  00000000
      | + function block  :  0000001C
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000001C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  isEDL_support_ep
      | Stack used (prev) :  00000000
      | + function block  :  0000001C
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000001C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  EDL_load_ep
      | Stack used (prev) :  00000000
      | + function block  :  00000124
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000124


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  EDL_unload_ep
      | Stack used (prev) :  00000000
      | + function block  :  0000000C
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000000C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  EDL_addlib_ep
      | Stack used (prev) :  00000000
      | + function block  :  00000008
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000008


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  EDL_remove_ep
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  EDL_use_ep
      | Stack used (prev) :  00000000
      | + function block  :  00000008
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000008


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  getEDL_baseAddr_ep
      | Stack used (prev) :  00000000
      | + function block  :  00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000000


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  getEDL_curLibs_ep
      | Stack used (prev) :  00000000
      | + function block  :  00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000000


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  getEDL_maxLibs_ep
      | Stack used (prev) :  00000000
      | + function block  :  00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000000


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  elf_onload
      | Stack used (prev) :  00000000
      | + function block  :  00000088
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000088


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  edl_onload
      | Stack used (prev) :  00000000
      | + function block  :  00000084
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000084


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  LoadDaemons
      | Stack used (prev) :  00000000
      | + function block  :  00000454
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000454


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  MyIDLECSMonCreate
      | Stack used (prev) :  00000000
      | + function block  :  00000014
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000014


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  MyIDLECSMonClose
      | Stack used (prev) :  00000000
      | + function block  :  00000008
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000008


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  proc_EPC
      | Stack used (prev) :  00000000
      | + function block  :  00000024
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000024


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  SUBPROC_impl
      | Stack used (prev) :  00000000
      | + function block  :  00000008
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000008


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  GetPathOfEP_ep
      | Stack used (prev) :  00000000
      | + function block  :  00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000000


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  xmalloc
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  xmfree
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  read_data_fn
      | Stack used (prev) :  00000000
      | + function block  :  00000010
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000010


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  create_imghdr
      | Stack used (prev) :  00000000
      | + function block  :  00000060
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000060


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  SetSWIHookInRAMState_ep
      | Stack used (prev) :  00000000
      | + function block  :  00000010
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000010


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  SetSWINumInCashe_ep
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  SetSWIFunc_ep
      | Stack used (prev) :  00000000
      | + function block  :  00000010
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000010


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  RepairSWIFunc_ep
      | Stack used (prev) :  00000000
      | + function block  :  0000000C
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000000C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  RepairSWILib_ep
      | Stack used (prev) :  00000000
      | + function block  :  00000008
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000008


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000454
  01  get_file_size
      | Stack used (prev) :  00000454
      | + function block  :  00000034
  <-Sub-tree of type: Function tree
    | Stack used          :  00000488


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000488
  01  char8to16
      | Stack used (prev) :  00000488
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  0000048C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000048C
  01  ascii2ws
      | Stack used (prev) :  0000048C
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00000498


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000498
  01  ESI
      | Stack used (prev) :  00000498
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  000004A4


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000004A4
  01  DoUnknownFileType
      | Stack used (prev) :  000004A4
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  000004B0


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000004B0
  01  EXT2_REALLOC
      | Stack used (prev) :  000004B0
      | + function block  :  0000001C
  <-Sub-tree of type: Function tree
    | Stack used          :  000004CC


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000004CC
  01  Console_Buffer::new Console_Buffer(int)
      | Stack used (prev) :  000004CC
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  000004D4


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000004D4
  01  Console_Buffer::delete ~Console_Buffer(Console_Buffer *)
      | Stack used (prev) :  000004D4
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  000004DC


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000004DC
  01  Console_Buffer::Console_Buffer(int)
      | Stack used (prev) :  000004DC
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  000004E4


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000004E4
  01  Console_Buffer::Put(Buff_Data *)
      | Stack used (prev) :  000004E4
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  000004EC


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000004EC
  01  Console_Buffer::GetEx(int)
      | Stack used (prev) :  000004EC
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000004EC


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000004EC
  01  Console_Buffer::Get(Buff_Data * *)
      | Stack used (prev) :  000004EC
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  000004F4


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000004F4
  01  Console_Buffer::Clean()
      | Stack used (prev) :  000004F4
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  000004FC


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000004FC
  01  DHS_init
      | Stack used (prev) :  000004FC
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00000504


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000504
  01  DHS_kill
      | Stack used (prev) :  00000504
      | + function block  :  00000010
  <-Sub-tree of type: Function tree
    | Stack used          :  00000514


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000514
  01  DHS_drawItems
      | Stack used (prev) :  00000514
      | + function block  :  00000014
  <-Sub-tree of type: Function tree
    | Stack used          :  00000528


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000528
  01  EDL_system_init
      | Stack used (prev) :  00000528
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00000534


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000534
  01  zeromem_a
      | Stack used (prev) :  00000534
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00000538


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000538
  01  elfload
      | Stack used (prev) :  00000538
      | + function block  :  00000224
  <-Sub-tree of type: Function tree
    | Stack used          :  0000075C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000075C
  01  executer_and_messager
      | Stack used (prev) :  0000075C
      | + function block  :  0000006C
  <-Sub-tree of type: Function tree
    | Stack used          :  000007C8


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000007C8
  01  LoadLibs
      | Stack used (prev) :  000007C8
      | + function block  :  00000454
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C1C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000C1C
  01  CreateEPC_PROC
      | Stack used (prev) :  00000C1C
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C24


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000C24
  01  KillEPC_PROC
      | Stack used (prev) :  00000C24
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C28


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000C28
  01  logger
      | Stack used (prev) :  00000C28
      | + function block  :  000000CC
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CF4


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000CF4
  01  clear_cache
      | Stack used (prev) :  00000CF4
      | + function block  :  00000010
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D04


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000D04
  01  strcpy_tolow
      | Stack used (prev) :  00000D04
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D08


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000D08
  01  print10
      | Stack used (prev) :  00000D08
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D0C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000D0C
  01  find_png_in_cache
      | Stack used (prev) :  00000D0C
      | + function block  :  00000014
  <-Sub-tree of type: Function tree
    | Stack used          :  00000D20


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000D20
  01  PatchGetPIT
      | Stack used (prev) :  00000D20
      | + function block  :  00000124
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E44


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000E44
  01  InitPngBitMap
      | Stack used (prev) :  00000E44
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E50


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000E50
  01  LoadLibrary
      | Stack used (prev) :  00000E50
      | + function block  :  000000D0
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F20


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000F20
  01  FUNC_ABORT
      | Stack used (prev) :  00000F20
      | + function block  :  00000050
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F70




                ****************************************
                *                                      *
                *      SEGMENTS IN ADDRESS ORDER       *
                *                                      *
                ****************************************


SEGMENT              SPACE    START ADDRESS   END ADDRESS     SIZE  TYPE  ALIGN
=======              =====    =============   ===========     ====  ====  =====
LIBR                                    A0074000                     rel    2
SWILIB_FUNC171                     A00745C4 - A00745C7           4   rel    2
SWILIB_FUNC172                     A00745C8 - A00745CB           4   rel    2
SWILIB_FUNC19C                     A0074670 - A0074673           4   rel    2
SWILIB_FUNC1B8_1BB                 A00746E0 - A00746EF          10   rel    2
SWILIB_FUNC1E9                     A00747A4 - A00747A7           4   rel    2
SWILIB_FUNC300_30A                 A0074C00 - A0074C2B          2C   rel    2
SWILIB_FUNC30B_310                 A0074C2C - A0074C43          18   rel    2
SWILIB_FUNC311_317                 A0074C44 - A0074C5F          1C   rel    2
SWILIB_FUNC318_318                 A0074C60 - A0074C63           4   rel    2
SWILIB_FUNC319_31E                 A0074C64 - A0074C7B          18   rel    2
START                                   A0078000                     dse    0
CODE                               A0078000 - A007A693        2694   rel    2
SWITAB                                  A007A694                     dse    0
INITTAB                            A007A694 - A007A6B7          24   rel    2
DATA_ID                            A007A6B8 - A007A6BF           8   rel    2
DATA_C                             A007A6C0 - A007AA0C         34D   rel    2
CONFIG_DATA_ID                     A007AA10 - A007ACF7         2E8   rel    2
MFREE_MOD                          A0092D98 - A0092D9B           4   rel    2
PATCH_EXT2_R7_1                    A0507E54 - A0507E57           4   rel    2
PATCH_EXT2_R2                      A0507FD8 - A0507FDB           4   rel    2
PATCH_EXT2_R7                      A0508220 - A0508223           4   rel    2
PATCH_EXT2_IMPL                    A05082A4 - A05082C7          24   rel    2
PATCH_EXT2_R6                      A0508404 - A0508407           4   rel    2
PATCH_NO_BROWSE_TXT
                                   A06CC03A - A06CC03B           2   rel    1
PATCH_ENABLE_ALTOPEN
                                   A072A414 - A072A417           4   rel    2
PATCH_SHOWMSG_BLF                  A07FF180 - A07FF183           4   rel    2
PATCH_ONCREATE                     A0853F98 - A0853F9B           4   rel    2
PATCH_ONCLOSE                      A0853FAC - A0853FAF           4   rel    2
PATCH_ESI1                         A08DF41C - A08DF41F           4   rel    2
PATCH_ESI2                         A08DF42C - A08DF42F           4   rel    2
PATCH_DRAWHANDLER                  A09567A0 - A09567A3           4   rel    2
PATCH_GET_PIT                      A0956C1E - A0956C21           4   rel    1
PATCH_GET_PITJ                     A0956C24 - A0956C27           4   rel    2
PATCH_DRAWHANDLER_J32
                                   A0A00910 - A0A00913           4   rel    2
FSWI_PATCH2                        A12DD770 - A12DD773           4   rel    2
FSWI_PATCH1                        A12DD85C - A12DD85F           4   rel    2
REGEXPL_CNT                        A8D9F000 - A8D9F003           4   rel    2
CODE_I                                  A8D9F004                     dse    0
DATA_I                             A8D9F004 - A8D9F00B           8   rel    2
CONFIG_DATA_I                      A8D9F00C - A8D9F2F3         2E8   rel    2
DATA_Z                             A8D9F2F4 - A8D9F309          16   rel    2
DATA_N                             A8D9F30C - A8D9F3A7          9C   rel    2

                ****************************************
                *                                      *
                *        END OF CROSS REFERENCE        *
                *                                      *
                ****************************************

 11 771 bytes of CODE memory
    934 bytes of DATA memory

Errors: none
Warnings: none

