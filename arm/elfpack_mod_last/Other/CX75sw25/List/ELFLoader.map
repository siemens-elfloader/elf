################################################################################
#                                                                              #
#      IAR Universal Linker V4.60I/386                                         #
#                                                                              #
#           Link time     =  07/Mar/2011  11:51:15                             #
#           Target CPU    =  ARM                                               #
#           List file     =  C:\arm\elfpack_mod_last\Other\CX75sw25\List\ELFLo #
#                            ader.map                                          #
#           Output file 1 =  C:\arm\elfpack_mod_last\VKP\CX75sw25\ELFLoader.el #
#                            f                                                 #
#                            Format: elf, variant: -yas                        #
#           Command line  =  C:\arm\elfpack_mod_last\Other\CX75sw25\Obj\ALTSWI #
#                            .r79                                              #
#                            C:\arm\elfpack_mod_last\Other\CX75sw25\Obj\DH.r79 #
#                            C:\arm\elfpack_mod_last\Other\CX75sw25\Obj\ESI.r7 #
#                            9                                                 #
#                            C:\arm\elfpack_mod_last\Other\CX75sw25\Obj\EXT2.r #
#                            79                                                #
#                            C:\arm\elfpack_mod_last\Other\CX75sw25\Obj\FSWI.r #
#                            79                                                #
#                            C:\arm\elfpack_mod_last\Other\CX75sw25\Obj\IMB.r7 #
#                            9                                                 #
#                            C:\arm\elfpack_mod_last\Other\CX75sw25\Obj\MFUNC. #
#                            r79                                               #
#                            C:\arm\elfpack_mod_last\Other\CX75sw25\Obj\additi #
#                            onal.r79                                          #
#                            C:\arm\elfpack_mod_last\Other\CX75sw25\Obj\conf_l #
#                            oader.r79                                         #
#                            C:\arm\elfpack_mod_last\Other\CX75sw25\Obj\config #
#                            _data.r79                                         #
#                            C:\arm\elfpack_mod_last\Other\CX75sw25\Obj\consol #
#                            e.r79                                             #
#                            C:\arm\elfpack_mod_last\Other\CX75sw25\Obj\dhs.r7 #
#                            9                                                 #
#                            C:\arm\elfpack_mod_last\Other\CX75sw25\Obj\edl.r7 #
#                            9                                                 #
#                            C:\arm\elfpack_mod_last\Other\CX75sw25\Obj\elf.r7 #
#                            9                                                 #
#                            C:\arm\elfpack_mod_last\Other\CX75sw25\Obj\elfloa #
#                            der.r79                                           #
#                            C:\arm\elfpack_mod_last\Other\CX75sw25\Obj\gbspro #
#                            c.r79                                             #
#                            C:\arm\elfpack_mod_last\Other\CX75sw25\Obj\logger #
#                            .r79                                              #
#                            C:\arm\elfpack_mod_last\Other\CX75sw25\Obj\paths. #
#                            r79                                               #
#                            C:\arm\elfpack_mod_last\Other\CX75sw25\Obj\png.r7 #
#                            9                                                 #
#                            C:\arm\elfpack_mod_last\Other\CX75sw25\Obj\ramlib #
#                            .r79                                              #
#                            C:\arm\elfpack_mod_last\Other\CX75sw25\Obj\rets_C #
#                            X75sw25.r79                                       #
#                            -o                                                #
#                            C:\arm\elfpack_mod_last\VKP\CX75sw25\ELFLoader.el #
#                            f                                                 #
#                            -Felf -yas -l                                     #
#                            C:\arm\elfpack_mod_last\Other\CX75sw25\List\ELFLo #
#                            ader.map                                          #
#                            -xmsnio                                           #
#                            "-IC:\arm2\Embedded Workbench 4.0 Evaluation\ARM\ #
#                            LIB\"                                             #
#                            -f C:\arm\elfpack_mod_last\config\CX75sw25.xcl    #
#                            (-carm                                            #
#                            -Z(CODE)START,CODE,SWITAB,INITTAB,DATA_ID,DATA_C, #
#                            CONFIG_DATA_ID,CONFIG_DATA_C=A0FD8000-A0FDC000    #
#                            -Z(DATA)CODE_I,DATA_I,CONFIG_DATA_I,DATA_Z,DATA_N #
#                            =A84C81D4-FFFFFFFF                                #
#                            -Z(CODE)PATCH_ONCREATE=A04A3808-FFFFFFFF          #
#                            -Z(CODE)PATCH_ONCLOSE=A04A380C-FFFFFFFF           #
#                            -Z(CODE)PATCH_ESI=A0A85B48-FFFFFFFF               #
#                            -Z(CODE)PATCH_NO_UNK_EXT=A02A0984-A02A0987        #
#                            -Z(CODE)SWILIB_FUNC00B=A0FD402C-A0FD402F          #
#                            -Z(CODE)SWILIB_FUNC00C=A0FD4030-A0FD4033          #
#                            -Z(CODE)SWILIB_FUNC095=A0FD4254-A0FD4257          #
#                            -Z(CODE)SWILIB_FUNC12B_12D=A0FD44AC-A0FD44B7      #
#                            -Z(CODE)SWILIB_FUNC171=A0FD45C4-A0FD45C7          #
#                            -Z(CODE)SWILIB_FUNC172=A0FD45C8-A0FD45CB          #
#                            -Z(CODE)SWILIB_FUNC19C=A0FD4670-A0FD4673          #
#                            -Z(CODE)SWILIB_FUNC1B8_1BB=A0FD46E0-A0FD46EF      #
#                            -Z(CODE)SWILIB_FUNC1E9=A0FD47A4-A0FD47A7          #
#                            -Z(DATA)REGEXPL_CNT=A84C81D0-FFFFFFFF             #
#                            -Z(CODE)REG_FILE=A02A0F7C-FFFFFFFF                #
#                            -Z(CODE)PATCH_GET_EXT=A02A0954-FFFFFFFF           #
#                            -Z(CODE)PATCH_GET_REGEXT1=A02A0764-FFFFFFFF       #
#                            -Z(CODE)PATCH_GET_REGEXT2=A02A0778-FFFFFFFF       #
#                            -Z(CODE)PATCH_BIG_ICON=A0354FE4-FFFFFFFF          #
#                            -Z(CODE)PATCH_REGEXPL=A02A1064-FFFFFFFF           #
#                            -Z(CODE)PATCH_GET_PIT=A0801A60-A0801A63           #
#                            -Z(CODE)PATCH_GET_PITJ=A0801A64-A0801A68          #
#                            -Z(CODE)PATCH_KEYB_MSG=A07F6974-FFFFFFFF          #
#                            -Z(CODE)PATCH_KEYB_MSGJ=A07F6978-FFFFFFFF         #
#                            -Z(CODE)FSWI_PATCH1=A0092BE4-FFFFFFFF             #
#                            -Z(CODE)FSWI_PATCH2=A0092CC8-FFFFFFFF             #
#                            -Z(CODE)FSWI_PATCH3=A0092CC7-FFFFFFFF             #
#                            -Z(CODE)LIBR=A0FD4000-A0FD7FFF                    #
#                            -Z(CODE)MFREE_MOD=A0203968-A0203987               #
#                            -Z(CODE)PATCH_DRAWHANDLER=A07FDC94-FFFFFFFF       #
#                            -Z(CODE)PATCH_DRAWHANDLER_J32=A07F18F8-FFFFFFFF   #
#                            -Z(CODE)SWILIB_FUNC300_30A=A0FD4C00-FFFFFFFF      #
#                            -Z(CODE)SWILIB_FUNC30B_310=A0FD4C2C-FFFFFFFF      #
#                            -Z(CODE)SWILIB_FUNC311_317=A0FD4C44-FFFFFFFF      #
#                            -Z(CODE)SWILIB_FUNC318_318=A0FD4C60-FFFFFFFF      #
#                            -Z(CODE)SWILIB_FUNC319_31E=A0FD4C64-FFFFFFFF)     #
#                                                                              #
#                        Copyright 1987-2007 IAR Systems. All rights reserved. #
################################################################################





                ****************************************
                *                                      *
                *           CROSS REFERENCE            *
                *                                      *
                ****************************************

                  There are no program entries.




                ****************************************
                *                                      *
                *            RUNTIME MODEL             *
                *                                      *
                ****************************************

  StackAlign4  = USED
  __cpu_mode   = __pcs__interwork
  __data_model = absolute
  __endian     = little
  __rt_version = 6



                ****************************************
                *                                      *
                *              MODULE MAP              *
                *                                      *
                ****************************************


  DEFINED ABSOLUTE ENTRIES
    *************************************************************************

  FILE NAME : C:\arm\elfpack_mod_last\Other\CX75sw25\Obj\ALTSWI.r79
  PROGRAM MODULE, NAME : ALTSWI

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: A0FD8000 - A0FD8077 (0x78 bytes), align: 2
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RunSWIFromCashe_ep      A0FD8000        Segment part 9 (ramlib)

    *************************************************************************

  FILE NAME : C:\arm\elfpack_mod_last\Other\CX75sw25\Obj\DH.r79
  PROGRAM MODULE, NAME : DH

  SEGMENTS IN THE MODULE
  ======================
PATCH_DRAWHANDLER
  Relative segment, address: A07FDC94 - A07FDC97 (0x4 bytes), align: 2
  Segment part 0. ROOT.
    -------------------------------------------------------------------------
PATCH_DRAWHANDLER_J32
  Relative segment, address: A07F18F8 - A07F18FB (0x4 bytes), align: 2
  Segment part 1. ROOT.       Intra module refs:   Segment part 0
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD8078 - A0FD808F (0x18 bytes), align: 2
  Segment part 2. ROOT.       Intra module refs:   Segment part 1
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           dhandler                A0FD8078 

    *************************************************************************

  FILE NAME : C:\arm\elfpack_mod_last\Other\CX75sw25\Obj\ESI.r79
  PROGRAM MODULE, NAME : ESI

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: A0FD8090 - A0FD8093 (0x4 bytes), align: 2
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           BXR1                    A0FD8090        MyIDLECSMonClose (elfloader)
                                                   MyIDLECSMonCreate (elfloader)
    -------------------------------------------------------------------------
PATCH_ESI
  Relative segment, address: A0A85B48 - A0A85B4F (0x8 bytes), align: 2
  Segment part 1. ROOT.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD8094 - A0FD80C7 (0x34 bytes), align: 2
  Segment part 2.             Intra module refs:   Segment part 1
    -------------------------------------------------------------------------
PATCH_NO_UNK_EXT
  Relative segment, address: A02A0984 - A02A0987 (0x4 bytes), align: 2
  Segment part 3. ROOT.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD80C8 - A0FD80EB (0x24 bytes), align: 2
  Segment part 4.             Intra module refs:   Segment part 3
    -------------------------------------------------------------------------
PATCH_GET_PIT
  Relative segment, address: A0801A60 - A0801A63 (0x4 bytes), align: 2
  Segment part 5. ROOT.
    -------------------------------------------------------------------------
PATCH_GET_PITJ
  Relative segment, address: A0801A64 - A0801A67 (0x4 bytes), align: 2
  Segment part 6. ROOT.       Intra module refs:   Segment part 5
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD80EC - A0FD8127 (0x3c bytes), align: 2
  Segment part 7. ROOT.       Intra module refs:   Segment part 6
    -------------------------------------------------------------------------
PATCH_KEYB_MSG
  Relative segment, address: A07F6974 - A07F6977 (0x4 bytes), align: 1
  Segment part 8. ROOT.
    -------------------------------------------------------------------------
PATCH_KEYB_MSGJ
  Relative segment, address: A07F6978 - A07F697B (0x4 bytes), align: 2
  Segment part 9. ROOT.       Intra module refs:   Segment part 8
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD8128 - A0FD8153 (0x2c bytes), align: 2
  Segment part 10.            Intra module refs:   Segment part 9

    *************************************************************************

  FILE NAME : C:\arm\elfpack_mod_last\Other\CX75sw25\Obj\EXT2.r79
  PROGRAM MODULE, NAME : EXT2

  SEGMENTS IN THE MODULE
  ======================
PATCH_GET_EXT
  Relative segment, address: A02A0954 - A02A0957 (0x4 bytes), align: 2
  Segment part 0. ROOT.
    -------------------------------------------------------------------------
PATCH_GET_REGEXT1
  Relative segment, address: A02A0764 - A02A0767 (0x4 bytes), align: 2
  Segment part 1. ROOT.
    -------------------------------------------------------------------------
PATCH_GET_REGEXT2
  Relative segment, address: A02A0778 - A02A077B (0x4 bytes), align: 2
  Segment part 2. ROOT.
    -------------------------------------------------------------------------
REG_FILE
  Relative segment, address: A02A0F7C - A02A0F83 (0x8 bytes), align: 2
  Segment part 3. ROOT.
    -------------------------------------------------------------------------
PATCH_BIG_ICON
  Relative segment, address: A0354FE4 - A0354FE7 (0x4 bytes), align: 2
  Segment part 4. ROOT.
    -------------------------------------------------------------------------
PATCH_REGEXPL
  Relative segment, address: A02A1064 - A02A1067 (0x4 bytes), align: 2
  Segment part 5. ROOT.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD8154 - A0FD819F (0x4c bytes), align: 2
  Segment part 6.             Intra module refs:   Segment part 0
                                                   Segment part 1
                                                   Segment part 2
                                                   Segment part 5

    *************************************************************************

  FILE NAME : C:\arm\elfpack_mod_last\Other\CX75sw25\Obj\FSWI.r79
  PROGRAM MODULE, NAME : FSWI

  SEGMENTS IN THE MODULE
  ======================
FSWI_PATCH1
  Relative segment, address: A0092BE4 - A0092BE7 (0x4 bytes), align: 2
  Segment part 0. ROOT.
    -------------------------------------------------------------------------
FSWI_PATCH3
  Relative segment, address: A0092CC7 - A0092CC7 (0x1 bytes), align: 0
  Segment part 1. ROOT.
    -------------------------------------------------------------------------
FSWI_PATCH2
  Relative segment, address: A0092CC8 - A0092CCB (0x4 bytes), align: 2
  Segment part 2. ROOT.       Intra module refs:   Segment part 0
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD81A0 - A0FD822F (0x90 bytes), align: 2
  Segment part 3. ROOT.       Intra module refs:   Segment part 2
    -------------------------------------------------------------------------
LIBR
  Relative segment, address: A0FD4000, align: 2
  Segment part 4. ROOT.       Intra module refs:   Segment part 3
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Library                 A0FD4000        Segment part 20 (ramlib)

    *************************************************************************

  FILE NAME : C:\arm\elfpack_mod_last\Other\CX75sw25\Obj\IMB.r79
  PROGRAM MODULE, NAME : IMB

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: A0FD8230 - A0FD829B (0x6c bytes), align: 2
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ExecuteIMB              A0FD8230        ExecuteIMB::??rT (elf)
                                                   elfload (elf)

    *************************************************************************

  FILE NAME : C:\arm\elfpack_mod_last\Other\CX75sw25\Obj\MFUNC.r79
  PROGRAM MODULE, NAME : MFUNC

  SEGMENTS IN THE MODULE
  ======================
MFREE_MOD
  Relative segment, address: A0203968 - A020396F (0x8 bytes), align: 2
  Segment part 0. ROOT.

    *************************************************************************

  FILE NAME : C:\arm\elfpack_mod_last\Other\CX75sw25\Obj\additional.r79
  PROGRAM MODULE, NAME : additional

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: A0FD829C - A0FD82A3 (0x8 bytes), align: 2
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           get_file_size::??rA     A0FD829C 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD82A4 - A0FD82BF (0x1c bytes), align: 2
  Segment part 16.            Intra module refs:   get_file_size::??rA
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           get_file_size           A0FD82A5        EDL_load_ep (edl)
                                                   LoadLibrary (ramlib)
                                                   logger (logger)
               stack 1 = 00000000 ( 00000034 )
    -------------------------------------------------------------------------
CODE
  Segment part 17. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD82C0 - A0FD82E3 (0x24 bytes), align: 2
  Segment part 18.            Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           REDRAW_impl             A0FD82C0 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 19. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD82E4 - A0FD82EF (0xc bytes), align: 2
  Segment part 20.            Intra module refs:   Segment part 7
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SEQKILLER_impl          A0FD82E5 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 21. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD82F0 - A0FD835F (0x70 bytes), align: 2
  Segment part 22.            Intra module refs:   ascii2ws
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           char8to16               A0FD82F1 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 23. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD8360 - A0FD837B (0x1c bytes), align: 2
  Segment part 24.            Intra module refs:   ESI
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ascii2ws                A0FD8361 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 25. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD837C - A0FD83C7 (0x4c bytes), align: 2
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ESI                     A0FD837C        Segment part 2 (ESI)
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 27. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 28. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DoUnknownFileType       
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 29. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_N
  Relative segment, address: A84C8668 - A84C866B (0x4 bytes), align: 2
  Segment part 4.             Intra module refs:   Segment part 40
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EXT2_AREA               A84C8668        Segment part 1 (rets_CX75sw25)
                                                   Segment part 6 (EXT2)
    -------------------------------------------------------------------------
REGEXPL_CNT
  Relative segment, address: A84C81D0 - A84C81D3 (0x4 bytes), align: 2
  Segment part 5.             Intra module refs:   Segment part 39
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EXT2_CNT                A84C81D0 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD83C8 - A0FD843F (0x78 bytes), align: 2
  Segment part 30.            Intra module refs:   RegFile
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EXT2_REALLOC            A0FD83C8 
               stack 1 = 00000000 ( 0000001C )
    -------------------------------------------------------------------------
CODE
  Segment part 31. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 32. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PropertyPatch           
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 33. NOT NEEDED.
    -------------------------------------------------------------------------
SWILIB_FUNC172
  Relative segment, address: A0FD45C8 - A0FD45CB (0x4 bytes), align: 2
  Segment part 6. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC19C
  Relative segment, address: A0FD4670 - A0FD4673 (0x4 bytes), align: 2
  Segment part 7. ROOT.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD8440 - A0FD84CB (0x8c bytes), align: 2
  Segment part 34.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RegFile                 A0FD8440        Segment part 3 (EXT2)
                                                   Segment part 6 (EXT2)
               stack 1 = 00000000 ( 00000030 )
    -------------------------------------------------------------------------
CODE
  Segment part 35. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD84CC - A0FD84FF (0x34 bytes), align: 2
  Segment part 36.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GetBigIcon              A0FD84CC        Segment part 4 (EXT2)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 37. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD8500 - A0FD85A3 (0xa4 bytes), align: 2
  Segment part 38.            Intra module refs:   Segment part 11
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UnregExplExt_impl       A0FD8500 
               stack 1 = 00000000 ( 00000028 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD85A4 - A0FD85A7 (0x4 bytes), align: 2
  Segment part 39.            Intra module refs:   EXT2_REALLOC
                                                   UnregExplExt_impl
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD85A8 - A0FD85AB (0x4 bytes), align: 2
  Segment part 40.            Intra module refs:   EXT2_REALLOC
                                                   UnregExplExt_impl
    -------------------------------------------------------------------------
CODE
  Segment part 41. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_N
  Relative segment, address: A84C866C - A84C8677 (0xc bytes), align: 2
  Segment part 8.             Intra module refs:   Segment part 55
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _plistq                 A84C866C 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD85AC - A0FD85C3 (0x18 bytes), align: 2
  Segment part 42.            Intra module refs:   AddKeybMsgHook_impl
           LOCAL                   ADDRESS         
           =====                   =======         
           LLaddToEnd              A0FD85AD 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 43. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD85C4 - A0FD85DD (0x1a bytes), align: 2
  Segment part 44.            Intra module refs:   AddKeybMsgHook_end_impl
           LOCAL                   ADDRESS         
           =====                   =======         
           LLaddToBegin            A0FD85C5 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 45. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD85E0 - A0FD860F (0x30 bytes), align: 2
  Segment part 46.            Intra module refs:   RemoveKeybMsgHook_impl
           LOCAL                   ADDRESS         
           =====                   =======         
           LLremoveFromQ           A0FD85E1 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 47. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD8610 - A0FD8663 (0x54 bytes), align: 2
  Segment part 48.            Intra module refs:   Segment part 12
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddKeybMsgHook_impl     A0FD8610 
               stack 1 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
CODE
  Segment part 49. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD8664 - A0FD86D7 (0x74 bytes), align: 2
  Segment part 50.            Intra module refs:   Segment part 13
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddKeybMsgHook_end_impl
                                   A0FD8664 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 51. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD86D8 - A0FD870F (0x38 bytes), align: 2
  Segment part 52.            Intra module refs:   Segment part 14
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RemoveKeybMsgHook_impl
                                   A0FD86D8 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 53. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD8710 - A0FD874D (0x3e bytes), align: 2
  Segment part 54.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PatchKeybMsg            A0FD8711        Segment part 10 (ESI)
               stack 1 = 00000000 ( 00000018 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD8750 - A0FD8753 (0x4 bytes), align: 2
  Segment part 55.            Intra module refs:   AddKeybMsgHook_end_impl
                                                   AddKeybMsgHook_impl
                                                   PatchKeybMsg
                                                   RemoveKeybMsgHook_impl
    -------------------------------------------------------------------------
CODE
  Segment part 56. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD8754 - A0FD878F (0x3c bytes), align: 2
  Segment part 57.            Intra module refs:   Segment part 9
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           fread32                 A0FD8755 
               stack 1 = 00000000 ( 00000020 )
    -------------------------------------------------------------------------
CODE
  Segment part 58. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD8790 - A0FD87CB (0x3c bytes), align: 2
  Segment part 59.            Intra module refs:   Segment part 10
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           fwrite32                A0FD8791 
               stack 1 = 00000000 ( 00000020 )
    -------------------------------------------------------------------------
SWILIB_FUNC00B
  Relative segment, address: A0FD402C - A0FD402F (0x4 bytes), align: 2
  Segment part 9. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC00C
  Relative segment, address: A0FD4030 - A0FD4033 (0x4 bytes), align: 2
  Segment part 10. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC095
  Relative segment, address: A0FD4254 - A0FD4257 (0x4 bytes), align: 2
  Segment part 11. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC12B_12D
  Relative segment, address: A0FD44AC - A0FD44AF (0x4 bytes), align: 2
  Segment part 12. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC12B_12D
  Relative segment, address: A0FD44B0 - A0FD44B3 (0x4 bytes), align: 2
  Segment part 13. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC12B_12D
  Relative segment, address: A0FD44B4 - A0FD44B7 (0x4 bytes), align: 2
  Segment part 14. ROOT.
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A0FDACA8 - A0FDACAF (0x8 bytes), align: 2
  Segment part 2.             Intra module refs:   ESI
    -------------------------------------------------------------------------
DATA_C
  Segment part 3. NOT NEEDED.

    *************************************************************************

  FILE NAME : C:\arm\elfpack_mod_last\Other\CX75sw25\Obj\conf_loader.r79
  PROGRAM MODULE, NAME : conf_loader

  SEGMENTS IN THE MODULE
  ======================
DATA_N
  Relative segment, address: A84C8678 - A84C867F (0x8 bytes), align: 2
  Segment part 2.             Intra module refs:   LoadConfigData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DEFAULT_DISK_N          A84C867C        EDL_load_ep (edl)
                                                   LoadLibrary (ramlib)
                                                   LoadLibs (elfloader)
                                                   logger (logger)
           successed_config_filename
                                   A84C8678 
    -------------------------------------------------------------------------
CODE
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD87CC - A0FD88F3 (0x128 bytes), align: 2
  Segment part 4.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LoadConfigData          A0FD87CC        MyIDLECSMonCreate (elfloader)
               stack 1 = 00000000 ( 0000002C )
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Segment part 6. NOT NEEDED.

    *************************************************************************

  FILE NAME : C:\arm\elfpack_mod_last\Other\CX75sw25\Obj\config_data.r79
  PROGRAM MODULE, NAME : config_data

  SEGMENTS IN THE MODULE
  ======================
CONFIG_DATA_I
  Relative segment, address: A84C81E0 - A84C820B (0x2c bytes), align: 2
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr_01_begin         A84C81E0 
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A84C820C - A84C8237 (0x2c bytes), align: 2
  Segment part 4. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr3_1               A84C820C 
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A84C8238 - A84C82B7 (0x80 bytes), align: 2
  Segment part 6. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           folder_img              A84C8238        MyIDLECSMonCreate (elfloader)
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A84C82B8 - A84C82E3 (0x2c bytes), align: 2
  Segment part 8. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr01_01             A84C82B8 
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A84C82E4 - A84C82E7 (0x4 bytes), align: 2
  Segment part 10. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ALPHA_THRESHOLD         A84C82E4        create_imghdr (png)
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A84C82E8 - A84C8313 (0x2c bytes), align: 2
  Segment part 12. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr01_02             A84C82E8 
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A84C8314 - A84C8317 (0x4 bytes), align: 2
  Segment part 14. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CACHE_PNG               A84C8314        PatchGetPIT (png)
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A84C8318 - A84C8343 (0x2c bytes), align: 2
  Segment part 16. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr01_03             A84C8318 
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A84C8344 - A84C8347 (0x4 bytes), align: 2
  Segment part 18. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DEFAULT_COLOR           A84C8344        create_imghdr (png)
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A84C8348 - A84C83A7 (0x60 bytes), align: 2
  Segment part 20. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfgcbox01_03            A84C8348 
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A84C83A8 - A84C83D3 (0x2c bytes), align: 2
  Segment part 22. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr_01_end           A84C83A8 
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A84C83D4 - A84C83FF (0x2c bytes), align: 2
  Segment part 24. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr_03_begin         A84C83D4 
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A84C8400 - A84C842B (0x2c bytes), align: 2
  Segment part 26. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr03_01             A84C8400 
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A84C842C - A84C842F (0x4 bytes), align: 2
  Segment part 28. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           edl_ena                 A84C842C        MyIDLECSMonCreate (elfloader)
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A84C8430 - A84C845B (0x2c bytes), align: 2
  Segment part 30. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr03_02             A84C8430 
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A84C845C - A84C845F (0x4 bytes), align: 2
  Segment part 32. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           edl_sys_size            A84C845C        Segment part 45 (edl)
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A84C8460 - A84C848B (0x2c bytes), align: 2
  Segment part 34. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr_03_end           A84C8460 
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A84C848C - A84C84B7 (0x2c bytes), align: 2
  Segment part 36. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr_05_begin         A84C848C 
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A84C84B8 - A84C84E3 (0x2c bytes), align: 2
  Segment part 38. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr05_01             A84C84B8 
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A84C84E4 - A84C84E7 (0x4 bytes), align: 2
  Segment part 40. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           log_sound               A84C84E4        logger (logger)
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A84C84E8 - A84C8513 (0x2c bytes), align: 2
  Segment part 42. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr05_02             A84C84E8 
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A84C8514 - A84C8593 (0x80 bytes), align: 2
  Segment part 44. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           folder_daemons          A84C8514        LoadDaemons (elfloader)
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A84C8594 - A84C85BF (0x2c bytes), align: 2
  Segment part 46. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr05_03             A84C8594 
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A84C85C0 - A84C85C3 (0x4 bytes), align: 2
  Segment part 48. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           key_break               A84C85C0        MyIDLECSMonCreate (elfloader)
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A84C85C4 - A84C85EF (0x2c bytes), align: 2
  Segment part 50. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr05_04             A84C85C4 
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A84C85F0 - A84C85F3 (0x4 bytes), align: 2
  Segment part 52. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           subproc_daem            A84C85F0        MyIDLECSMonCreate (elfloader)
                                                   proc_EPC (gbsproc)
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A84C85F4 - A84C861F (0x2c bytes), align: 2
  Segment part 54. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr05_05             A84C85F4 
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A84C8620 - A84C8623 (0x4 bytes), align: 2
  Segment part 56. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           subproc_prio            A84C8620        CreateEPC_PROC (gbsproc)
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A84C8624 - A84C864F (0x2c bytes), align: 2
  Segment part 58. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr_05_end           A84C8624 
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A0FDB028 - A0FDB053 (0x2c bytes), align: 2
  Segment part 3. ROOT.       Intra module refs:   cfghdr_01_begin
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A0FDB054 - A0FDB07F (0x2c bytes), align: 2
  Segment part 5. ROOT.       Intra module refs:   cfghdr3_1
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A0FDB080 - A0FDB0FF (0x80 bytes), align: 2
  Segment part 7. ROOT.       Intra module refs:   folder_img
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A0FDB100 - A0FDB12B (0x2c bytes), align: 2
  Segment part 9. ROOT.       Intra module refs:   cfghdr01_01
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A0FDB12C - A0FDB12F (0x4 bytes), align: 2
  Segment part 11. ROOT.      Intra module refs:   ALPHA_THRESHOLD
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A0FDB130 - A0FDB15B (0x2c bytes), align: 2
  Segment part 13. ROOT.      Intra module refs:   cfghdr01_02
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A0FDB15C - A0FDB15F (0x4 bytes), align: 2
  Segment part 15. ROOT.      Intra module refs:   CACHE_PNG
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A0FDB160 - A0FDB18B (0x2c bytes), align: 2
  Segment part 17. ROOT.      Intra module refs:   cfghdr01_03
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A0FDB18C - A0FDB18F (0x4 bytes), align: 2
  Segment part 19. ROOT.      Intra module refs:   DEFAULT_COLOR
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A0FDB190 - A0FDB1EF (0x60 bytes), align: 2
  Segment part 21. ROOT.      Intra module refs:   cfgcbox01_03
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A0FDB1F0 - A0FDB21B (0x2c bytes), align: 2
  Segment part 23. ROOT.      Intra module refs:   cfghdr_01_end
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A0FDB21C - A0FDB247 (0x2c bytes), align: 2
  Segment part 25. ROOT.      Intra module refs:   cfghdr_03_begin
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A0FDB248 - A0FDB273 (0x2c bytes), align: 2
  Segment part 27. ROOT.      Intra module refs:   cfghdr03_01
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A0FDB274 - A0FDB277 (0x4 bytes), align: 2
  Segment part 29. ROOT.      Intra module refs:   edl_ena
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A0FDB278 - A0FDB2A3 (0x2c bytes), align: 2
  Segment part 31. ROOT.      Intra module refs:   cfghdr03_02
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A0FDB2A4 - A0FDB2A7 (0x4 bytes), align: 2
  Segment part 33. ROOT.      Intra module refs:   edl_sys_size
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A0FDB2A8 - A0FDB2D3 (0x2c bytes), align: 2
  Segment part 35. ROOT.      Intra module refs:   cfghdr_03_end
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A0FDB2D4 - A0FDB2FF (0x2c bytes), align: 2
  Segment part 37. ROOT.      Intra module refs:   cfghdr_05_begin
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A0FDB300 - A0FDB32B (0x2c bytes), align: 2
  Segment part 39. ROOT.      Intra module refs:   cfghdr05_01
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A0FDB32C - A0FDB32F (0x4 bytes), align: 2
  Segment part 41. ROOT.      Intra module refs:   log_sound
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A0FDB330 - A0FDB35B (0x2c bytes), align: 2
  Segment part 43. ROOT.      Intra module refs:   cfghdr05_02
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A0FDB35C - A0FDB3DB (0x80 bytes), align: 2
  Segment part 45. ROOT.      Intra module refs:   folder_daemons
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A0FDB3DC - A0FDB407 (0x2c bytes), align: 2
  Segment part 47. ROOT.      Intra module refs:   cfghdr05_03
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A0FDB408 - A0FDB40B (0x4 bytes), align: 2
  Segment part 49. ROOT.      Intra module refs:   key_break
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A0FDB40C - A0FDB437 (0x2c bytes), align: 2
  Segment part 51. ROOT.      Intra module refs:   cfghdr05_04
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A0FDB438 - A0FDB43B (0x4 bytes), align: 2
  Segment part 53. ROOT.      Intra module refs:   subproc_daem
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A0FDB43C - A0FDB467 (0x2c bytes), align: 2
  Segment part 55. ROOT.      Intra module refs:   cfghdr05_05
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A0FDB468 - A0FDB46B (0x4 bytes), align: 2
  Segment part 57. ROOT.      Intra module refs:   subproc_prio
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A0FDB46C - A0FDB497 (0x2c bytes), align: 2
  Segment part 59. ROOT.      Intra module refs:   cfghdr_05_end
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Segment part 60. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?*?CONFIG_DATA_ID       
    -------------------------------------------------------------------------
INITTAB
  Relative segment, address: A0FDAC78 - A0FDAC83 (0xc bytes), align: 2
  Segment part 61. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?init?tab?CONFIG_DATA_I
                                   A0FDAC78 

    *************************************************************************

  FILE NAME : C:\arm\elfpack_mod_last\Other\CX75sw25\Obj\console.r79
  PROGRAM MODULE, NAME : console

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 11. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD88F4 - A0FD8907 (0x14 bytes), align: 2
  Segment part 12.            Intra module refs:   InitConsole_ep(int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Console_Buffer::new Console_Buffer(int)
                                   A0FD88F5 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 13. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD8908 - A0FD8917 (0x10 bytes), align: 2
  Segment part 14.            Intra module refs:   KillConsole_ep()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Console_Buffer::delete ~Console_Buffer(Console_Buffer *)
                                   A0FD8909 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 15. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 16. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           operator new(size_t)    
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 17. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 18. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           operator new[](size_t)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 19. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 20. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           operator delete(void *)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 21. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD8918 - A0FD8931 (0x1a bytes), align: 2
  Segment part 22.            Intra module refs:   Console_Buffer::new Console_Buffer(int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Console_Buffer::Console_Buffer(int)
                                   A0FD8919 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 23. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 24. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Console_Buffer::~Console_Buffer()
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 25. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD8934 - A0FD8965 (0x32 bytes), align: 2
  Segment part 26.            Intra module refs:   ConsolePut_ep(Buff_Data *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Console_Buffer::Put(Buff_Data *)
                                   A0FD8935 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 27. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD8968 - A0FD8971 (0xa bytes), align: 2
  Segment part 28.            Intra module refs:   ConsoleGetEx_ep(int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Console_Buffer::GetEx(int)
                                   A0FD8969 
    -------------------------------------------------------------------------
CODE
  Segment part 29. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD8974 - A0FD899B (0x28 bytes), align: 2
  Segment part 30.            Intra module refs:   ConsoleGet_ep(Buff_Data *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Console_Buffer::Get(Buff_Data * *)
                                   A0FD8975 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 31. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD899C - A0FD89B1 (0x16 bytes), align: 2
  Segment part 32.            Intra module refs:   ConsoleClean_ep()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Console_Buffer::Clean()
                                   A0FD899D 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 33. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_I
  Relative segment, address: A84C81D4 - A84C81DB (0x8 bytes), align: 2
  Segment part 2.             Intra module refs:   Segment part 47
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Con_Buf                 A84C81D8 
           cstate                  A84C81D4 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD89B4 - A0FD89DB (0x28 bytes), align: 2
  Segment part 34.            Intra module refs:   ReInitConsole_ep(int)
                                                   Segment part 4
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           InitConsole_ep(int)     A0FD89B4 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 35. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD89DC - A0FD8A07 (0x2c bytes), align: 2
  Segment part 36.            Intra module refs:   ReInitConsole_ep(int)
                                                   Segment part 5
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           KillConsole_ep()        A0FD89DC 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 37. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD8A08 - A0FD8A2F (0x28 bytes), align: 2
  Segment part 38.            Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ReInitConsole_ep(int)   A0FD8A08 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 39. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD8A30 - A0FD8A5F (0x30 bytes), align: 2
  Segment part 40.            Intra module refs:   Segment part 7
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ConsolePut_ep(Buff_Data *)
                                   A0FD8A30 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 41. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD8A60 - A0FD8A8F (0x30 bytes), align: 2
  Segment part 42.            Intra module refs:   Segment part 8
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ConsoleGet_ep(Buff_Data *)
                                   A0FD8A60 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 43. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD8A90 - A0FD8ABB (0x2c bytes), align: 2
  Segment part 44.            Intra module refs:   Segment part 9
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ConsoleGetEx_ep(int)    A0FD8A90 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 45. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD8ABC - A0FD8AE3 (0x28 bytes), align: 2
  Segment part 46.            Intra module refs:   Segment part 10
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ConsoleClean_ep()       A0FD8ABC 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD8AE4 - A0FD8AE7 (0x4 bytes), align: 2
  Segment part 47.            Intra module refs:   ConsoleClean_ep()
                                                   ConsoleGetEx_ep(int)
                                                   ConsoleGet_ep(Buff_Data *)
                                                   ConsolePut_ep(Buff_Data *)
                                                   InitConsole_ep(int)
                                                   KillConsole_ep()
                                                   ReInitConsole_ep(int)
    -------------------------------------------------------------------------
SWILIB_FUNC311_317
  Relative segment, address: A0FD4C44 - A0FD4C47 (0x4 bytes), align: 2
  Segment part 4. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC311_317
  Relative segment, address: A0FD4C48 - A0FD4C4B (0x4 bytes), align: 2
  Segment part 5. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC311_317
  Relative segment, address: A0FD4C4C - A0FD4C4F (0x4 bytes), align: 2
  Segment part 6. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC311_317
  Relative segment, address: A0FD4C50 - A0FD4C53 (0x4 bytes), align: 2
  Segment part 7. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC311_317
  Relative segment, address: A0FD4C54 - A0FD4C57 (0x4 bytes), align: 2
  Segment part 8. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC311_317
  Relative segment, address: A0FD4C58 - A0FD4C5B (0x4 bytes), align: 2
  Segment part 9. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC311_317
  Relative segment, address: A0FD4C5C - A0FD4C5F (0x4 bytes), align: 2
  Segment part 10. ROOT.
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_ID
  Relative segment, address: A0FDAC9C - A0FDACA3 (0x8 bytes), align: 2
  Segment part 3.             Intra module refs:   Segment part 2
    -------------------------------------------------------------------------
DATA_ID
  Segment part 48. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?*?DATA_ID              
    -------------------------------------------------------------------------
INITTAB
  Relative segment, address: A0FDAC84 - A0FDAC8F (0xc bytes), align: 2
  Segment part 49. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?init?tab?DATA_I        A0FDAC84 

    *************************************************************************

  FILE NAME : C:\arm\elfpack_mod_last\Other\CX75sw25\Obj\dhs.r79
  PROGRAM MODULE, NAME : dhs

  SEGMENTS IN THE MODULE
  ======================
DATA_Z
  Relative segment, address: A84C8650 - A84C8657 (0x8 bytes), align: 2
  Segment part 2.             Intra module refs:   Segment part 29
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           dhs                     A84C8650 
           priodraw                A84C8654 
    -------------------------------------------------------------------------
CODE
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD8AE8 - A0FD8B3B (0x54 bytes), align: 2
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DHS_init                A0FD8AE8        MyIDLECSMonCreate (elfloader)
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 11. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD8B3C - A0FD8BBF (0x84 bytes), align: 2
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DHS_kill                A0FD8B3C        MyIDLECSMonClose (elfloader)
               stack 1 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
CODE
  Segment part 13. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD8BC0 - A0FD8BF9 (0x3a bytes), align: 2
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DHS_drawItems           A0FD8BC1        dhandler (DH)
               stack 1 = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
CODE
  Segment part 15. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD8BFC - A0FD8CBF (0xc4 bytes), align: 2
  Segment part 16.            Intra module refs:   Segment part 3
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DHS_addProc_ep          A0FD8BFC 
               stack 1 = 00000000 ( 00000018 )
    -------------------------------------------------------------------------
CODE
  Segment part 17. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD8CC0 - A0FD8DC3 (0x104 bytes), align: 2
  Segment part 18.            Intra module refs:   Segment part 4
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DHS_removeProc_ep       A0FD8CC0 
               stack 1 = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
CODE
  Segment part 19. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD8DC4 - A0FD8DDB (0x18 bytes), align: 2
  Segment part 20.            Intra module refs:   DHS_kill
                                                   Segment part 5
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DHS_lockDraw_ep         A0FD8DC5 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD8DDC - A0FD8DDF (0x4 bytes), align: 2
  Segment part 21.            Intra module refs:   DHS_drawItems
                                                   DHS_init
                                                   DHS_lockDraw_ep
    -------------------------------------------------------------------------
CODE
  Segment part 22. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD8DE0 - A0FD8DE5 (0x6 bytes), align: 2
  Segment part 23.            Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DHS_getBaseAddr_ep      A0FD8DE1 
    -------------------------------------------------------------------------
CODE
  Segment part 24. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD8DE8 - A0FD8E33 (0x4c bytes), align: 2
  Segment part 25.            Intra module refs:   Segment part 7
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DHS_getStatusItem_ep    A0FD8DE9 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD8E34 - A0FD8E37 (0x4 bytes), align: 2
  Segment part 26.            Intra module refs:   DHS_drawItems
                                                   DHS_getStatusItem_ep
    -------------------------------------------------------------------------
CODE
  Segment part 27. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD8E38 - A0FD8EB3 (0x7c bytes), align: 2
  Segment part 28.            Intra module refs:   Segment part 8
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DHS_workProcPrio_ep     A0FD8E38 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD8EB4 - A0FD8EB7 (0x4 bytes), align: 2
  Segment part 29.            Intra module refs:   DHS_addProc_ep
                                                   DHS_drawItems
                                                   DHS_getBaseAddr_ep
                                                   DHS_getStatusItem_ep
                                                   DHS_init
                                                   DHS_kill
                                                   DHS_lockDraw_ep
                                                   DHS_removeProc_ep
                                                   DHS_workProcPrio_ep
    -------------------------------------------------------------------------
SWILIB_FUNC319_31E
  Relative segment, address: A0FD4C64 - A0FD4C67 (0x4 bytes), align: 2
  Segment part 3. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC319_31E
  Relative segment, address: A0FD4C68 - A0FD4C6B (0x4 bytes), align: 2
  Segment part 4. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC319_31E
  Relative segment, address: A0FD4C6C - A0FD4C6F (0x4 bytes), align: 2
  Segment part 5. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC319_31E
  Relative segment, address: A0FD4C70 - A0FD4C73 (0x4 bytes), align: 2
  Segment part 6. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC319_31E
  Relative segment, address: A0FD4C74 - A0FD4C77 (0x4 bytes), align: 2
  Segment part 7. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC319_31E
  Relative segment, address: A0FD4C78 - A0FD4C7B (0x4 bytes), align: 2
  Segment part 8. ROOT.
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
INITTAB
  Relative segment, address: A0FDAC90 - A0FDAC9B (0xc bytes), align: 2
  Segment part 30. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?init?tab?DATA_Z        A0FDAC90 

    *************************************************************************

  FILE NAME : C:\arm\elfpack_mod_last\Other\CX75sw25\Obj\edl.r79
  PROGRAM MODULE, NAME : edl

  SEGMENTS IN THE MODULE
  ======================
DATA_Z
  Relative segment, address: A84C8658 - A84C865B (0x4 bytes), align: 2
  Segment part 6.             Intra module refs:   Segment part 42
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pEDL_TOP                A84C8658 
    -------------------------------------------------------------------------
CODE
  Segment part 18. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD8EB8 - A0FD8F27 (0x70 bytes), align: 2
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EDL_system_init         A0FD8EB8        MyIDLECSMonCreate (elfloader)
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 20. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 21. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EDL_system_kill         
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 22. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 23. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EDL_system_reinit       
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 24. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD8F28 - A0FD8FAF (0x88 bytes), align: 2
  Segment part 25.            Intra module refs:   EDL_addlib_ep
                                                   EDL_load_ep
                                                   EDL_remove_ep
                                                   EDL_unload_ep
                                                   EDL_use_ep
                                                   Segment part 13
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           isEDL_exist_ep          A0FD8F28 
               stack 1 = 00000000 ( 0000001C )
    -------------------------------------------------------------------------
CODE
  Segment part 26. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD8FB0 - A0FD9093 (0xe4 bytes), align: 2
  Segment part 27.            Intra module refs:   EDL_load_ep
                                                   Segment part 14
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           isEDL_support_ep        A0FD8FB0 
               stack 1 = 00000000 ( 0000001C )
    -------------------------------------------------------------------------
CODE
  Segment part 28. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD9094 - A0FD926B (0x1d8 bytes), align: 2
  Segment part 29.            Intra module refs:   Segment part 8
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EDL_load_ep             A0FD9094        executer_and_messager (elfloader)
               stack 1 = 00000000 ( 00000124 )
    -------------------------------------------------------------------------
CODE
  Segment part 30. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD926C - A0FD92C7 (0x5c bytes), align: 2
  Segment part 31.            Intra module refs:   Segment part 9
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EDL_unload_ep           A0FD926C 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 32. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD92C8 - A0FD933F (0x78 bytes), align: 2
  Segment part 33.            Intra module refs:   Segment part 10
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EDL_addlib_ep           A0FD92C8 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 34. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD9340 - A0FD938F (0x50 bytes), align: 2
  Segment part 35.            Intra module refs:   Segment part 11
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EDL_remove_ep           A0FD9340 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 36. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD9390 - A0FD93DB (0x4c bytes), align: 2
  Segment part 37.            Intra module refs:   Segment part 12
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EDL_use_ep              A0FD9390 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 38. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD93DC - A0FD93E7 (0xc bytes), align: 2
  Segment part 39.            Intra module refs:   Segment part 15
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           getEDL_baseAddr_ep      A0FD93DC 
    -------------------------------------------------------------------------
CODE
  Segment part 40. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD93E8 - A0FD942F (0x48 bytes), align: 2
  Segment part 41.            Intra module refs:   Segment part 16
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           getEDL_curLibs_ep       A0FD93E8 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD9430 - A0FD9433 (0x4 bytes), align: 2
  Segment part 42.            Intra module refs:   EDL_addlib_ep
                                                   EDL_remove_ep
                                                   EDL_system_init
                                                   EDL_unload_ep
                                                   EDL_use_ep
                                                   getEDL_baseAddr_ep
                                                   getEDL_curLibs_ep
                                                   isEDL_exist_ep
    -------------------------------------------------------------------------
CODE
  Segment part 43. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD9434 - A0FD943F (0xc bytes), align: 2
  Segment part 44.            Intra module refs:   Segment part 17
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           getEDL_maxLibs_ep       A0FD9434 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD9440 - A0FD9443 (0x4 bytes), align: 2
  Segment part 45.            Intra module refs:   EDL_addlib_ep
                                                   EDL_system_init
                                                   getEDL_curLibs_ep
                                                   getEDL_maxLibs_ep
                                                   isEDL_exist_ep
    -------------------------------------------------------------------------
CODE
  Segment part 46. NOT NEEDED.Intra module refs:   EDL_load_ep
    -------------------------------------------------------------------------
CODE
  Segment part 47. NOT NEEDED.Intra module refs:   EDL_load_ep
    -------------------------------------------------------------------------
SWILIB_FUNC300_30A
  Relative segment, address: A0FD4C00 - A0FD4C03 (0x4 bytes), align: 2
  Segment part 7. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC300_30A
  Relative segment, address: A0FD4C04 - A0FD4C07 (0x4 bytes), align: 2
  Segment part 8. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC300_30A
  Relative segment, address: A0FD4C08 - A0FD4C0B (0x4 bytes), align: 2
  Segment part 9. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC300_30A
  Relative segment, address: A0FD4C0C - A0FD4C0F (0x4 bytes), align: 2
  Segment part 10. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC300_30A
  Relative segment, address: A0FD4C10 - A0FD4C13 (0x4 bytes), align: 2
  Segment part 11. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC300_30A
  Relative segment, address: A0FD4C14 - A0FD4C17 (0x4 bytes), align: 2
  Segment part 12. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC300_30A
  Relative segment, address: A0FD4C18 - A0FD4C1B (0x4 bytes), align: 2
  Segment part 13. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC300_30A
  Relative segment, address: A0FD4C1C - A0FD4C1F (0x4 bytes), align: 2
  Segment part 14. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC300_30A
  Relative segment, address: A0FD4C20 - A0FD4C23 (0x4 bytes), align: 2
  Segment part 15. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC300_30A
  Relative segment, address: A0FD4C24 - A0FD4C27 (0x4 bytes), align: 2
  Segment part 16. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC300_30A
  Relative segment, address: A0FD4C28 - A0FD4C2B (0x4 bytes), align: 2
  Segment part 17. ROOT.
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
INITTAB
  Segment part 48. TENTATIVE. Used definition from dhs
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?init?tab?DATA_Z        
    -------------------------------------------------------------------------
DATA_C
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A0FDACB0 - A0FDACB7 (0x8 bytes), align: 2
  Segment part 3.             Intra module refs:   isEDL_support_ep
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A0FDACB8 - A0FDACD7 (0x20 bytes), align: 2
  Segment part 4.             Intra module refs:   EDL_load_ep
    -------------------------------------------------------------------------
DATA_C
  Segment part 5. NOT NEEDED.

    *************************************************************************

  FILE NAME : C:\arm\elfpack_mod_last\Other\CX75sw25\Obj\elf.r79
  PROGRAM MODULE, NAME : elf

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD9444 - A0FD944F (0xc bytes), align: 2
  Segment part 3.             Intra module refs:   elfload
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zeromem_a               A0FD9444 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD9450 - A0FD9457 (0x8 bytes), align: 2
  Segment part 4.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           elfload::??rA           A0FD9450 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD9458 - A0FD9717 (0x2c0 bytes), align: 2
  Segment part 5.             Intra module refs:   elfload::??rA
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           elfload                 A0FD9459        EDL_load_ep (edl)
                                                   LoadDaemons (elfloader)
                                                   executer_and_messager (elfloader)
               stack 1 = 00000000 ( 00000224 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD9718 - A0FD971F (0x8 bytes), align: 2
  Segment part 6.             Intra module refs:   elfload
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ExecuteIMB::??rT        A0FD9719 
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    *************************************************************************

  FILE NAME : C:\arm\elfpack_mod_last\Other\CX75sw25\Obj\elfloader.r79
  PROGRAM MODULE, NAME : elfloader

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 15. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD9720 - A0FD978F (0x70 bytes), align: 2
  Segment part 16.            Intra module refs:   LoadLibs
                                                   edl_onload
                                                   elf_onload
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           executer_and_messager   A0FD9720 
               stack 1 = 00000000 ( 0000006C )
    -------------------------------------------------------------------------
CODE
  Segment part 17. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD9790 - A0FD97D7 (0x48 bytes), align: 2
  Segment part 18.            Intra module refs:   Segment part 5
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           elf_onload              A0FD9790 
               stack 1 = 00000000 ( 00000088 )
    -------------------------------------------------------------------------
CODE
  Segment part 19. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD97D8 - A0FD980F (0x38 bytes), align: 2
  Segment part 20.            Intra module refs:   Segment part 5
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           edl_onload              A0FD97D8 
               stack 1 = 00000000 ( 00000084 )
    -------------------------------------------------------------------------
CODE
  Segment part 21. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD9810 - A0FD98BF (0xb0 bytes), align: 2
  Segment part 22.            Intra module refs:   MyIDLECSMonCreate
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LoadLibs                A0FD9810        proc_EPC (gbsproc)
               stack 1 = 00000000 ( 000002C8 )
    -------------------------------------------------------------------------
CODE
  Segment part 23. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD98C0 - A0FD9967 (0xa8 bytes), align: 2
  Segment part 24.            Intra module refs:   MyIDLECSMonCreate
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LoadDaemons             A0FD98C0        Segment part 16 (gbsproc)
                                                   proc_EPC (gbsproc)
               stack 1 = 00000000 ( 000001CC )
    -------------------------------------------------------------------------
CODE
  Segment part 25. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_N
  Relative segment, address: A84C8680 - A84C86FF (0x80 bytes), align: 2
  Segment part 8.             Intra module refs:   MyIDLECSMonCreate
                                                   Segment part 10
                                                   Segment part 11
                                                   Segment part 12
                                                   Segment part 9
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           bigicons_edl_str        A84C86E0 
           bigicons_str            A84C86A0 
           smallicons_edl_str      A84C86C0 
           smallicons_str          A84C8680 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD9968 - A0FD99EF (0x88 bytes), align: 2
  Segment part 26.            Intra module refs:   MyIDLECSMonCreate
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           mktree                  A0FD9968 
               stack 1 = 00000000 ( 0000009C )
    -------------------------------------------------------------------------
CODE
  Segment part 27. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD99F0 - A0FD9B37 (0x148 bytes), align: 2
  Segment part 28.            Intra module refs:   Segment part 13
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MyIDLECSMonCreate       A0FD99F0 
               stack 1 = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
CODE
  Segment part 29. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A0FDACD8 - A0FDACEB (0x14 bytes), align: 2
  Segment part 2.             Intra module refs:   executer_and_messager
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A0FDACEC - A0FDAD03 (0x18 bytes), align: 2
  Segment part 3.             Intra module refs:   LoadLibs
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A0FDAD04 - A0FDAD0B (0x8 bytes), align: 2
  Segment part 4.             Intra module refs:   LoadDaemons
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A0FDAD0C - A0FDAE17 (0x10c bytes), align: 2
  Segment part 5.             Intra module refs:   MyIDLECSMonCreate
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A0FDAE18 - A0FDAE1B (0x4 bytes), align: 2
  Segment part 6.             Intra module refs:   Segment part 5
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A0FDAE1C - A0FDAE1F (0x4 bytes), align: 2
  Segment part 7.             Intra module refs:   Segment part 5
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A0FDAE20 - A0FDAE27 (0x8 bytes), align: 2
  Segment part 9.             Intra module refs:   Segment part 5
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A0FDAE28 - A0FDAE2F (0x8 bytes), align: 2
  Segment part 10.            Intra module refs:   Segment part 5
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A0FDAE30 - A0FDAE37 (0x8 bytes), align: 2
  Segment part 11.            Intra module refs:   Segment part 5
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A0FDAE38 - A0FDAE3F (0x8 bytes), align: 2
  Segment part 12.            Intra module refs:   Segment part 5
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD9B38 - A0FD9B5F (0x28 bytes), align: 2
  Segment part 30.            Intra module refs:   Segment part 14
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MyIDLECSMonClose        A0FD9B38 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 31. NOT NEEDED.Intra module refs:   LoadDaemons
                                                   executer_and_messager
    -------------------------------------------------------------------------
CODE
  Segment part 32. NOT NEEDED.Intra module refs:   executer_and_messager
    -------------------------------------------------------------------------
CODE
  Segment part 33. NOT NEEDED.Intra module refs:   MyIDLECSMonCreate
    -------------------------------------------------------------------------
CODE
  Segment part 34. NOT NEEDED.Intra module refs:   MyIDLECSMonCreate
    -------------------------------------------------------------------------
CODE
  Segment part 35. NOT NEEDED.Intra module refs:   MyIDLECSMonCreate
    -------------------------------------------------------------------------
CODE
  Segment part 36. NOT NEEDED.Intra module refs:   MyIDLECSMonCreate
    -------------------------------------------------------------------------
CODE
  Segment part 37. NOT NEEDED.Intra module refs:   MyIDLECSMonCreate
    -------------------------------------------------------------------------
CODE
  Segment part 38. NOT NEEDED.Intra module refs:   MyIDLECSMonCreate
    -------------------------------------------------------------------------
CODE
  Segment part 39. NOT NEEDED.Intra module refs:   MyIDLECSMonClose
                                                   MyIDLECSMonCreate
    -------------------------------------------------------------------------
CODE
  Segment part 40. NOT NEEDED.Intra module refs:   MyIDLECSMonClose
    -------------------------------------------------------------------------
CODE
  Segment part 41. NOT NEEDED.Intra module refs:   MyIDLECSMonClose
    -------------------------------------------------------------------------
PATCH_ONCREATE
  Relative segment, address: A04A3808 - A04A380B (0x4 bytes), align: 2
  Segment part 13. ROOT.
    -------------------------------------------------------------------------
PATCH_ONCLOSE
  Relative segment, address: A04A380C - A04A380F (0x4 bytes), align: 2
  Segment part 14. ROOT.
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    *************************************************************************

  FILE NAME : C:\arm\elfpack_mod_last\Other\CX75sw25\Obj\gbsproc.r79
  PROGRAM MODULE, NAME : gbsproc

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD9B60 - A0FD9C77 (0x118 bytes), align: 2
  Segment part 6.             Intra module refs:   CreateEPC_PROC
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           proc_EPC                A0FD9B60 
               stack 1 = 00000000 ( 00000020 )
    -------------------------------------------------------------------------
CODE
  Segment part 7. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD9C78 - A0FD9CAF (0x38 bytes), align: 2
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CreateEPC_PROC          A0FD9C78        MyIDLECSMonCreate (elfloader)
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD9CB0 - A0FD9CC3 (0x14 bytes), align: 2
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           KillEPC_PROC            A0FD9CB0        MyIDLECSMonClose (elfloader)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 11. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD9CC4 - A0FD9CE7 (0x24 bytes), align: 2
  Segment part 12.            Intra module refs:   Segment part 4
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SUBPROC_impl            A0FD9CC4 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 13. NOT NEEDED.Intra module refs:   proc_EPC
    -------------------------------------------------------------------------
CODE
  Segment part 14. NOT NEEDED.Intra module refs:   proc_EPC
    -------------------------------------------------------------------------
CODE
  Segment part 15. NOT NEEDED.Intra module refs:   proc_EPC
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD9CE8 - A0FD9CEB (0x4 bytes), align: 2
  Segment part 16.            Intra module refs:   proc_EPC
    -------------------------------------------------------------------------
CODE
  Segment part 17. NOT NEEDED.Intra module refs:   proc_EPC
    -------------------------------------------------------------------------
SWILIB_FUNC171
  Relative segment, address: A0FD45C4 - A0FD45C7 (0x4 bytes), align: 2
  Segment part 4. ROOT.
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A0FDAE40 - A0FDAE9B (0x5c bytes), align: 2
  Segment part 2.             Intra module refs:   proc_EPC
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A0FDAE9C - A0FDAEAB (0x10 bytes), align: 2
  Segment part 3.             Intra module refs:   CreateEPC_PROC

    *************************************************************************

  FILE NAME : C:\arm\elfpack_mod_last\Other\CX75sw25\Obj\logger.r79
  PROGRAM MODULE, NAME : logger

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD9CEC - A0FD9E67 (0x17c bytes), align: 2
  Segment part 4.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           logger                  A0FD9CEC        FUNC_ABORT (ramlib)
               stack 1 = 00000000 ( 000000CC )
    -------------------------------------------------------------------------
CODE
  Segment part 5. NOT NEEDED. Intra module refs:   logger
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A0FDAEAC - A0FDAF77 (0xcc bytes), align: 2
  Segment part 2.             Intra module refs:   logger

    *************************************************************************

  FILE NAME : C:\arm\elfpack_mod_last\Other\CX75sw25\Obj\paths.r79
  PROGRAM MODULE, NAME : paths

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD9E68 - A0FD9E6F (0x8 bytes), align: 2
  Segment part 4.             Intra module refs:   Segment part 2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GetPathOfEP_ep          A0FD9E68 
    -------------------------------------------------------------------------
SWILIB_FUNC318_318
  Relative segment, address: A0FD4C60 - A0FD4C63 (0x4 bytes), align: 2
  Segment part 2. ROOT.
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    *************************************************************************

  FILE NAME : C:\arm\elfpack_mod_last\Other\CX75sw25\Obj\png.r79
  PROGRAM MODULE, NAME : png

  SEGMENTS IN THE MODULE
  ======================
DATA_I
  Relative segment, address: A84C81DC - A84C81DF (0x4 bytes), align: 2
  Segment part 3.             Intra module refs:   PatchGetPIT
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DEFAULT_DISK_N2         A84C81DC 
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A0FDAF78 - A0FDAF7F (0x8 bytes), align: 2
  Segment part 2.             Intra module refs:   create_imghdr
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A0FDAF80 - A0FDAF93 (0x14 bytes), align: 2
  Segment part 5.             Intra module refs:   PatchGetPIT
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DEFAULT_FOLDER          A0FDAF80 
           empty_img               A0FDAF8C 
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A0FDB024 - A0FDB024 (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   Segment part 5
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Pointer                 A0FDB024 
    -------------------------------------------------------------------------
CODE
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD9E70 - A0FD9E77 (0x8 bytes), align: 2
  Segment part 10.            Intra module refs:   create_imghdr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           xmalloc                 A0FD9E71 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 11. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD9E78 - A0FD9E7F (0x8 bytes), align: 2
  Segment part 12.            Intra module refs:   create_imghdr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           xmfree                  A0FD9E79 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 13. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD9E80 - A0FD9EEB (0x6c bytes), align: 2
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           clear_cache             A0FD9E80        proc_EPC (gbsproc)
               stack 1 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
CODE
  Segment part 15. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD9EEC - A0FD9F13 (0x28 bytes), align: 2
  Segment part 16.            Intra module refs:   create_imghdr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           read_data_fn            A0FD9EEC 
               stack 1 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
CODE
  Segment part 17. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FD9F14 - A0FDA4BF (0x5ac bytes), align: 2
  Segment part 18.            Intra module refs:   PatchGetPIT
                                                   Segment part 8
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           create_imghdr           A0FD9F14 
               stack 1 = 00000000 ( 00000060 )
    -------------------------------------------------------------------------
CODE
  Segment part 19. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_N
  Relative segment, address: A84C8700 - A84C870B (0xc bytes), align: 2
  Segment part 7.             Intra module refs:   InitPngBitMap
                                                   Segment part 27
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pngtop                  A84C8700        Segment part 1 (rets_CX75sw25)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FDA4C0 - A0FDA4E3 (0x24 bytes), align: 2
  Segment part 20.            Intra module refs:   PatchGetPIT
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           strcpy_tolow            A0FDA4C1 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 21. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FDA4E4 - A0FDA57B (0x98 bytes), align: 2
  Segment part 22.            Intra module refs:   PatchGetPIT
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           print10                 A0FDA4E4 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 23. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FDA57C - A0FDA5EF (0x74 bytes), align: 2
  Segment part 24.            Intra module refs:   PatchGetPIT
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           find_png_in_cache       A0FDA57C 
               stack 1 = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
CODE
  Segment part 25. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FDA5F0 - A0FDA87B (0x28c bytes), align: 2
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PatchGetPIT             A0FDA5F0        Segment part 7 (ESI)
               stack 1 = 00000000 ( 00000124 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FDA87C - A0FDA87F (0x4 bytes), align: 2
  Segment part 27.            Intra module refs:   PatchGetPIT
                                                   find_png_in_cache
    -------------------------------------------------------------------------
CODE
  Segment part 28. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FDA880 - A0FDA8BB (0x3c bytes), align: 2
  Segment part 29.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           InitPngBitMap           A0FDA880        MyIDLECSMonCreate (elfloader)
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
SWILIB_FUNC1E9
  Relative segment, address: A0FD47A4 - A0FD47A7 (0x4 bytes), align: 2
  Segment part 8. ROOT.
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_ID
  Relative segment, address: A0FDACA4 - A0FDACA7 (0x4 bytes), align: 2
  Segment part 4.             Intra module refs:   DEFAULT_DISK_N2
    -------------------------------------------------------------------------
DATA_ID
  Segment part 30. TENTATIVE. Used definition from console
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?*?DATA_ID              
    -------------------------------------------------------------------------
INITTAB
  Segment part 31. TENTATIVE. Used definition from console
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?init?tab?DATA_I        

    *************************************************************************

  FILE NAME : C:\arm\elfpack_mod_last\Other\CX75sw25\Obj\ramlib.r79
  PROGRAM MODULE, NAME : ramlib

  SEGMENTS IN THE MODULE
  ======================
DATA_N
  Relative segment, address: A84C870C - A84C870F (0x4 bytes), align: 2
  Segment part 4.             Intra module refs:   Segment part 29
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pLIB_TOP                A84C870C        Segment part 1 (rets_CX75sw25)
                                                   Segment part 3 (FSWI)
    -------------------------------------------------------------------------
DATA_Z
  Relative segment, address: A84C8664 - A84C8665 (0x2 bytes), align: 1
  Segment part 5.             Intra module refs:   SetSWINumInCashe_ep
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pLIB_TOP_cashe          A84C8664        RunSWIFromCashe_ep (ALTSWI)
    -------------------------------------------------------------------------
DATA_Z
  Relative segment, address: A84C865C - A84C8663 (0x8 bytes), align: 2
  Segment part 6.             Intra module refs:   Segment part 17
                                                   Segment part 30
                                                   SetSWIHookInRAMState_ep
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pLIB_TOP_backup         A84C8660        RunSWIFromCashe_ep (ALTSWI)
           pLIB_TOP_exist          A84C865C 
    -------------------------------------------------------------------------
CODE
  Segment part 13. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FDA8BC - A0FDAA93 (0x1d8 bytes), align: 2
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LoadLibrary             A0FDA8BC        MyIDLECSMonCreate (elfloader)
                                                   proc_EPC (gbsproc)
               stack 1 = 00000000 ( 000000D0 )
    -------------------------------------------------------------------------
CODE
  Segment part 15. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FDAA94 - A0FDAB0F (0x7c bytes), align: 2
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           FUNC_ABORT              A0FDAA94        RunSWIFromCashe_ep (ALTSWI)
                                                   Segment part 3 (FSWI)
               stack 1 = 00000000 ( 00000050 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FDAB10 - A0FDAB13 (0x4 bytes), align: 2
  Segment part 17.            Intra module refs:   FUNC_ABORT
                                                   LoadLibrary
    -------------------------------------------------------------------------
CODE
  Segment part 18. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FDAB14 - A0FDAB87 (0x74 bytes), align: 2
  Segment part 19.            Intra module refs:   Segment part 7
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SetSWIHookInRAMState_ep
                                   A0FDAB14 
               stack 1 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FDAB88 - A0FDAB8B (0x4 bytes), align: 2
  Segment part 20.            Intra module refs:   LoadLibrary
                                                   SetSWIHookInRAMState_ep
    -------------------------------------------------------------------------
CODE
  Segment part 21. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FDAB8C - A0FDABA3 (0x18 bytes), align: 2
  Segment part 22.            Intra module refs:   Segment part 8
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SetSWINumInCashe_ep     A0FDAB8D 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 23. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FDABA4 - A0FDABD7 (0x34 bytes), align: 2
  Segment part 24.            Intra module refs:   Segment part 10
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SetSWIFunc_ep           A0FDABA4 
               stack 1 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
CODE
  Segment part 25. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FDABD8 - A0FDAC13 (0x3c bytes), align: 2
  Segment part 26.            Intra module refs:   Segment part 11
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RepairSWIFunc_ep        A0FDABD8 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 27. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FDAC14 - A0FDAC4B (0x38 bytes), align: 2
  Segment part 28.            Intra module refs:   Segment part 12
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RepairSWILib_ep         A0FDAC14 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FDAC4C - A0FDAC4F (0x4 bytes), align: 2
  Segment part 29.            Intra module refs:   LoadLibrary
                                                   RepairSWIFunc_ep
                                                   RepairSWILib_ep
                                                   SetSWIFunc_ep
                                                   SetSWIHookInRAMState_ep
                                                   SetSWINumInCashe_ep
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FDAC50 - A0FDAC53 (0x4 bytes), align: 2
  Segment part 30.            Intra module refs:   RepairSWIFunc_ep
                                                   RepairSWILib_ep
    -------------------------------------------------------------------------
CODE
  Segment part 31. NOT NEEDED.Intra module refs:   LoadLibrary
    -------------------------------------------------------------------------
CODE
  Segment part 32. NOT NEEDED.Intra module refs:   FUNC_ABORT
    -------------------------------------------------------------------------
SWILIB_FUNC30B_310
  Relative segment, address: A0FD4C2C - A0FD4C2F (0x4 bytes), align: 2
  Segment part 7. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC30B_310
  Relative segment, address: A0FD4C30 - A0FD4C33 (0x4 bytes), align: 2
  Segment part 8. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC30B_310
  Relative segment, address: A0FD4C34 - A0FD4C37 (0x4 bytes), align: 2
  Segment part 9. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC30B_310
  Relative segment, address: A0FD4C38 - A0FD4C3B (0x4 bytes), align: 2
  Segment part 10. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC30B_310
  Relative segment, address: A0FD4C3C - A0FD4C3F (0x4 bytes), align: 2
  Segment part 11. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC30B_310
  Relative segment, address: A0FD4C40 - A0FD4C43 (0x4 bytes), align: 2
  Segment part 12. ROOT.
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
INITTAB
  Segment part 33. TENTATIVE. Used definition from dhs
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?init?tab?DATA_Z        
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A0FDAF94 - A0FDB003 (0x70 bytes), align: 2
  Segment part 2.             Intra module refs:   LoadLibrary
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A0FDB004 - A0FDB023 (0x20 bytes), align: 2
  Segment part 3.             Intra module refs:   FUNC_ABORT

    *************************************************************************

  FILE NAME : C:\arm\elfpack_mod_last\Other\CX75sw25\Obj\rets_CX75sw25.r79
  PROGRAM MODULE, NAME : rets_CX75sw25

Absolute parts
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           StoreErrInfoAndAbort    A07CD184 
           StoreErrString          A07CCFA8 
  SEGMENTS IN THE MODULE
  ======================
DATA_N
  Relative segment, address: A84C8710, align: 2
  Segment part 0. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC1B8_1BB
  Relative segment, address: A0FD46E0 - A0FD46EF (0x10 bytes), align: 2
  Segment part 1. ROOT.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0FDAC54 - A0FDAC77 (0x24 bytes), align: 2
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OldOnClose              A0FDAC54        MyIDLECSMonClose (elfloader)
           OldOnCreate             A0FDAC58        MyIDLECSMonCreate (elfloader)
           ESIOld                  A0FDAC5C        Segment part 2 (ESI)
           PITgetN                 A0FDAC60        Segment part 7 (ESI)
           PITret                  A0FDAC64        Segment part 7 (ESI)
           KEYBret                 A0FDAC68        Segment part 10 (ESI)
           KEYBfunc                A0FDAC6C        Segment part 10 (ESI)
           FReadOld                A0FDAC70        fread32 (additional)
           FWriteOld               A0FDAC74        fwrite32 (additional)




                ****************************************
                *                                      *
                *            MODULE SUMMARY            *
                *                                      *
                ****************************************

Module             CODE   DATA
------             ----   ----
                  (Rel)  (Rel)
ALTSWI              120
DH                   32
ESI                 224
EXT2                104
FSWI                153
IMB                 108
MFUNC                 8
additional        1 360     20
  + shared            8
conf_loader         296      8
config_data       1 148  1 136
console             536      8
  + shared           12
dhs               1 000      8
  + shared           12
edl               1 504      4
elf                 716
  + shared           16
elfloader         1 456    128
gbsproc             508
logger              584
paths                12
png               2 673     16
ramlib            1 088     14
rets_CX75sw25        52
N/A (alignment)
------           ------  -----
Total:           13 730  1 342


                ****************************************
                *                                      *
                *              CALL GRAPH              *
                *                                      *
                ****************************************

  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  REDRAW_impl
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  SEQKILLER_impl
      | Stack used (prev) :  00000000
      | + function block  :  00000008
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000008


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  UnregExplExt_impl
      | Stack used (prev) :  00000000
      | + function block  :  00000028
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000028


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  AddKeybMsgHook_impl
      | Stack used (prev) :  00000000
      | + function block  :  00000010
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000010


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  AddKeybMsgHook_end_impl
      | Stack used (prev) :  00000000
      | + function block  :  0000000C
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000000C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  RemoveKeybMsgHook_impl
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  fread32
      | Stack used (prev) :  00000000
      | + function block  :  00000020
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000020


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  fwrite32
      | Stack used (prev) :  00000000
      | + function block  :  00000020
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000020


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  InitConsole_ep(int)
      | Stack used (prev) :  00000000
      | + function block  :  00000008
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000008


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  KillConsole_ep()
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  ReInitConsole_ep(int)
      | Stack used (prev) :  00000000
      | + function block  :  00000008
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000008


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  ConsolePut_ep(Buff_Data *)
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  ConsoleGet_ep(Buff_Data *)
      | Stack used (prev) :  00000000
      | + function block  :  00000008
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000008


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  ConsoleGetEx_ep(int)
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  ConsoleClean_ep()
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  DHS_addProc_ep
      | Stack used (prev) :  00000000
      | + function block  :  00000018
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000018


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  DHS_removeProc_ep
      | Stack used (prev) :  00000000
      | + function block  :  00000014
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000014


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  DHS_lockDraw_ep
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  DHS_getBaseAddr_ep
      | Stack used (prev) :  00000000
      | + function block  :  00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000000


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  DHS_getStatusItem_ep
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  DHS_workProcPrio_ep
      | Stack used (prev) :  00000000
      | + function block  :  0000000C
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000000C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  isEDL_exist_ep
      | Stack used (prev) :  00000000
      | + function block  :  0000001C
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000001C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  isEDL_support_ep
      | Stack used (prev) :  00000000
      | + function block  :  0000001C
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000001C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  EDL_load_ep
      | Stack used (prev) :  00000000
      | + function block  :  00000124
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000124


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  EDL_unload_ep
      | Stack used (prev) :  00000000
      | + function block  :  0000000C
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000000C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  EDL_addlib_ep
      | Stack used (prev) :  00000000
      | + function block  :  00000008
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000008


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  EDL_remove_ep
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  EDL_use_ep
      | Stack used (prev) :  00000000
      | + function block  :  00000008
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000008


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  getEDL_baseAddr_ep
      | Stack used (prev) :  00000000
      | + function block  :  00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000000


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  getEDL_curLibs_ep
      | Stack used (prev) :  00000000
      | + function block  :  00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000000


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  getEDL_maxLibs_ep
      | Stack used (prev) :  00000000
      | + function block  :  00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000000


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  elf_onload
      | Stack used (prev) :  00000000
      | + function block  :  00000088
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000088


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  edl_onload
      | Stack used (prev) :  00000000
      | + function block  :  00000084
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000084


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  LoadDaemons
      | Stack used (prev) :  00000000
      | + function block  :  000001CC
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  000001CC


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  MyIDLECSMonCreate
      | Stack used (prev) :  00000000
      | + function block  :  00000014
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000014


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  MyIDLECSMonClose
      | Stack used (prev) :  00000000
      | + function block  :  00000008
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000008


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  proc_EPC
      | Stack used (prev) :  00000000
      | + function block  :  00000020
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000020


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  SUBPROC_impl
      | Stack used (prev) :  00000000
      | + function block  :  00000008
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000008


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  GetPathOfEP_ep
      | Stack used (prev) :  00000000
      | + function block  :  00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000000


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  xmalloc
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  xmfree
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  read_data_fn
      | Stack used (prev) :  00000000
      | + function block  :  00000010
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000010


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  create_imghdr
      | Stack used (prev) :  00000000
      | + function block  :  00000060
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000060


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  SetSWIHookInRAMState_ep
      | Stack used (prev) :  00000000
      | + function block  :  00000010
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000010


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  SetSWINumInCashe_ep
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  SetSWIFunc_ep
      | Stack used (prev) :  00000000
      | + function block  :  00000010
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000010


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  RepairSWIFunc_ep
      | Stack used (prev) :  00000000
      | + function block  :  0000000C
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000000C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  RepairSWILib_ep
      | Stack used (prev) :  00000000
      | + function block  :  00000008
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000008


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000001CC
  01  get_file_size
      | Stack used (prev) :  000001CC
      | + function block  :  00000034
  <-Sub-tree of type: Function tree
    | Stack used          :  00000200


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000200
  01  char8to16
      | Stack used (prev) :  00000200
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00000204


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000204
  01  ascii2ws
      | Stack used (prev) :  00000204
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00000210


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000210
  01  ESI
      | Stack used (prev) :  00000210
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  0000021C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000021C
  01  EXT2_REALLOC
      | Stack used (prev) :  0000021C
      | + function block  :  0000001C
  <-Sub-tree of type: Function tree
    | Stack used          :  00000238


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000238
  01  RegFile
      | Stack used (prev) :  00000238
      | + function block  :  00000030
  <-Sub-tree of type: Function tree
    | Stack used          :  00000268


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000268
  01  GetBigIcon
      | Stack used (prev) :  00000268
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  0000026C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000026C
  01  LLaddToEnd
      | Stack used (prev) :  0000026C
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00000270


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000270
  01  LLaddToBegin
      | Stack used (prev) :  00000270
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00000274


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000274
  01  LLremoveFromQ
      | Stack used (prev) :  00000274
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  0000027C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000027C
  01  PatchKeybMsg
      | Stack used (prev) :  0000027C
      | + function block  :  00000018
  <-Sub-tree of type: Function tree
    | Stack used          :  00000294


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000294
  01  LoadConfigData
      | Stack used (prev) :  00000294
      | + function block  :  0000002C
  <-Sub-tree of type: Function tree
    | Stack used          :  000002C0


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000002C0
  01  Console_Buffer::new Console_Buffer(int)
      | Stack used (prev) :  000002C0
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  000002C8


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000002C8
  01  Console_Buffer::delete ~Console_Buffer(Console_Buffer *)
      | Stack used (prev) :  000002C8
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  000002D0


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000002D0
  01  Console_Buffer::Console_Buffer(int)
      | Stack used (prev) :  000002D0
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  000002D8


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000002D8
  01  Console_Buffer::Put(Buff_Data *)
      | Stack used (prev) :  000002D8
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  000002E0


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000002E0
  01  Console_Buffer::GetEx(int)
      | Stack used (prev) :  000002E0
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000002E0


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000002E0
  01  Console_Buffer::Get(Buff_Data * *)
      | Stack used (prev) :  000002E0
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  000002E8


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000002E8
  01  Console_Buffer::Clean()
      | Stack used (prev) :  000002E8
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  000002F0


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000002F0
  01  DHS_init
      | Stack used (prev) :  000002F0
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  000002F8


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000002F8
  01  DHS_kill
      | Stack used (prev) :  000002F8
      | + function block  :  00000010
  <-Sub-tree of type: Function tree
    | Stack used          :  00000308


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000308
  01  DHS_drawItems
      | Stack used (prev) :  00000308
      | + function block  :  00000014
  <-Sub-tree of type: Function tree
    | Stack used          :  0000031C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000031C
  01  EDL_system_init
      | Stack used (prev) :  0000031C
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00000328


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000328
  01  zeromem_a
      | Stack used (prev) :  00000328
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  0000032C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000032C
  01  elfload
      | Stack used (prev) :  0000032C
      | + function block  :  00000224
  <-Sub-tree of type: Function tree
    | Stack used          :  00000550


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000550
  01  executer_and_messager
      | Stack used (prev) :  00000550
      | + function block  :  0000006C
  <-Sub-tree of type: Function tree
    | Stack used          :  000005BC


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000005BC
  01  LoadLibs
      | Stack used (prev) :  000005BC
      | + function block  :  000002C8
  <-Sub-tree of type: Function tree
    | Stack used          :  00000884


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000884
  01  mktree
      | Stack used (prev) :  00000884
      | + function block  :  0000009C
  <-Sub-tree of type: Function tree
    | Stack used          :  00000920


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000920
  01  CreateEPC_PROC
      | Stack used (prev) :  00000920
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00000928


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000928
  01  KillEPC_PROC
      | Stack used (prev) :  00000928
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  0000092C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000092C
  01  logger
      | Stack used (prev) :  0000092C
      | + function block  :  000000CC
  <-Sub-tree of type: Function tree
    | Stack used          :  000009F8


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000009F8
  01  clear_cache
      | Stack used (prev) :  000009F8
      | + function block  :  00000010
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A08


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000A08
  01  strcpy_tolow
      | Stack used (prev) :  00000A08
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A0C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000A0C
  01  print10
      | Stack used (prev) :  00000A0C
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A10


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000A10
  01  find_png_in_cache
      | Stack used (prev) :  00000A10
      | + function block  :  00000014
  <-Sub-tree of type: Function tree
    | Stack used          :  00000A24


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000A24
  01  PatchGetPIT
      | Stack used (prev) :  00000A24
      | + function block  :  00000124
  <-Sub-tree of type: Function tree
    | Stack used          :  00000B48


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000B48
  01  InitPngBitMap
      | Stack used (prev) :  00000B48
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00000B54


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000B54
  01  LoadLibrary
      | Stack used (prev) :  00000B54
      | + function block  :  000000D0
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C24


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000C24
  01  FUNC_ABORT
      | Stack used (prev) :  00000C24
      | + function block  :  00000050
  <-Sub-tree of type: Function tree
    | Stack used          :  00000C74




                ****************************************
                *                                      *
                *      SEGMENTS IN ADDRESS ORDER       *
                *                                      *
                ****************************************


SEGMENT              SPACE    START ADDRESS   END ADDRESS     SIZE  TYPE  ALIGN
=======              =====    =============   ===========     ====  ====  =====
FSWI_PATCH1                        A0092BE4 - A0092BE7           4   rel    2
FSWI_PATCH3                        A0092CC7 - A0092CC7           1   rel    0
FSWI_PATCH2                        A0092CC8 - A0092CCB           4   rel    2
MFREE_MOD                          A0203968 - A020396F           8   rel    2
PATCH_GET_REGEXT1                  A02A0764 - A02A0767           4   rel    2
PATCH_GET_REGEXT2                  A02A0778 - A02A077B           4   rel    2
PATCH_GET_EXT                      A02A0954 - A02A0957           4   rel    2
PATCH_NO_UNK_EXT                   A02A0984 - A02A0987           4   rel    2
REG_FILE                           A02A0F7C - A02A0F83           8   rel    2
PATCH_REGEXPL                      A02A1064 - A02A1067           4   rel    2
PATCH_BIG_ICON                     A0354FE4 - A0354FE7           4   rel    2
PATCH_ONCREATE                     A04A3808 - A04A380B           4   rel    2
PATCH_ONCLOSE                      A04A380C - A04A380F           4   rel    2
PATCH_DRAWHANDLER_J32
                                   A07F18F8 - A07F18FB           4   rel    2
PATCH_KEYB_MSG                     A07F6974 - A07F6977           4   rel    1
PATCH_KEYB_MSGJ                    A07F6978 - A07F697B           4   rel    2
PATCH_DRAWHANDLER                  A07FDC94 - A07FDC97           4   rel    2
PATCH_GET_PIT                      A0801A60 - A0801A63           4   rel    2
PATCH_GET_PITJ                     A0801A64 - A0801A67           4   rel    2
PATCH_ESI                          A0A85B48 - A0A85B4F           8   rel    2
LIBR                                    A0FD4000                     rel    2
SWILIB_FUNC00B                     A0FD402C - A0FD402F           4   rel    2
SWILIB_FUNC00C                     A0FD4030 - A0FD4033           4   rel    2
SWILIB_FUNC095                     A0FD4254 - A0FD4257           4   rel    2
SWILIB_FUNC12B_12D                 A0FD44AC - A0FD44B7           C   rel    2
SWILIB_FUNC171                     A0FD45C4 - A0FD45C7           4   rel    2
SWILIB_FUNC172                     A0FD45C8 - A0FD45CB           4   rel    2
SWILIB_FUNC19C                     A0FD4670 - A0FD4673           4   rel    2
SWILIB_FUNC1B8_1BB                 A0FD46E0 - A0FD46EF          10   rel    2
SWILIB_FUNC1E9                     A0FD47A4 - A0FD47A7           4   rel    2
SWILIB_FUNC300_30A                 A0FD4C00 - A0FD4C2B          2C   rel    2
SWILIB_FUNC30B_310                 A0FD4C2C - A0FD4C43          18   rel    2
SWILIB_FUNC311_317                 A0FD4C44 - A0FD4C5F          1C   rel    2
SWILIB_FUNC318_318                 A0FD4C60 - A0FD4C63           4   rel    2
SWILIB_FUNC319_31E                 A0FD4C64 - A0FD4C7B          18   rel    2
START                                   A0FD8000                     dse    0
CODE                               A0FD8000 - A0FDAC77        2C78   rel    2
SWITAB                                  A0FDAC78                     dse    0
INITTAB                            A0FDAC78 - A0FDAC9B          24   rel    2
DATA_ID                            A0FDAC9C - A0FDACA7           C   rel    2
DATA_C                             A0FDACA8 - A0FDB024         37D   rel    2
CONFIG_DATA_ID                     A0FDB028 - A0FDB497         470   rel    2
REGEXPL_CNT                        A84C81D0 - A84C81D3           4   rel    2
CODE_I                                  A84C81D4                     dse    0
DATA_I                             A84C81D4 - A84C81DF           C   rel    2
CONFIG_DATA_I                      A84C81E0 - A84C864F         470   rel    2
DATA_Z                             A84C8650 - A84C8665          16   rel    2
DATA_N                             A84C8668 - A84C870F          A8   rel    2

                ****************************************
                *                                      *
                *        END OF CROSS REFERENCE        *
                *                                      *
                ****************************************

 13 730 bytes of CODE memory
  1 342 bytes of DATA memory

Errors: none
Warnings: none

