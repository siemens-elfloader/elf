################################################################################
#                                                                              #
#      IAR Universal Linker V4.60I/386                                         #
#                                                                              #
#           Link time     =  13/Jan/2011  14:21:46                             #
#           Target CPU    =  ARM                                               #
#           List file     =  C:\arm\elfpack_mod_last\Other\E71sw45\List\ELFLoa #
#                            der.map                                           #
#           Output file 1 =  C:\arm\elfpack_mod_last\VKP\E71sw45\ELFLoader.elf #
#                            Format: elf, variant: -yas                        #
#           Command line  =  C:\arm\elfpack_mod_last\Other\E71sw45\Obj\ALTSWI. #
#                            r79                                               #
#                            C:\arm\elfpack_mod_last\Other\E71sw45\Obj\DH.r79  #
#                            C:\arm\elfpack_mod_last\Other\E71sw45\Obj\ESI.r79 #
#                            C:\arm\elfpack_mod_last\Other\E71sw45\Obj\EXT2.r7 #
#                            9                                                 #
#                            C:\arm\elfpack_mod_last\Other\E71sw45\Obj\FSWI.r7 #
#                            9                                                 #
#                            C:\arm\elfpack_mod_last\Other\E71sw45\Obj\IMB.r79 #
#                            C:\arm\elfpack_mod_last\Other\E71sw45\Obj\MFUNC.r #
#                            79                                                #
#                            C:\arm\elfpack_mod_last\Other\E71sw45\Obj\additio #
#                            nal.r79                                           #
#                            C:\arm\elfpack_mod_last\Other\E71sw45\Obj\conf_lo #
#                            ader.r79                                          #
#                            C:\arm\elfpack_mod_last\Other\E71sw45\Obj\config_ #
#                            data.r79                                          #
#                            C:\arm\elfpack_mod_last\Other\E71sw45\Obj\console #
#                            .r79                                              #
#                            C:\arm\elfpack_mod_last\Other\E71sw45\Obj\dhs.r79 #
#                            C:\arm\elfpack_mod_last\Other\E71sw45\Obj\edl.r79 #
#                            C:\arm\elfpack_mod_last\Other\E71sw45\Obj\elf.r79 #
#                            C:\arm\elfpack_mod_last\Other\E71sw45\Obj\elfload #
#                            er.r79                                            #
#                            C:\arm\elfpack_mod_last\Other\E71sw45\Obj\gbsproc #
#                            .r79                                              #
#                            C:\arm\elfpack_mod_last\Other\E71sw45\Obj\logger. #
#                            r79                                               #
#                            C:\arm\elfpack_mod_last\Other\E71sw45\Obj\paths.r #
#                            79                                                #
#                            C:\arm\elfpack_mod_last\Other\E71sw45\Obj\png.r79 #
#                            C:\arm\elfpack_mod_last\Other\E71sw45\Obj\ramlib. #
#                            r79                                               #
#                            C:\arm\elfpack_mod_last\Other\E71sw45\Obj\rets_E7 #
#                            1sw45.r79                                         #
#                            -o                                                #
#                            C:\arm\elfpack_mod_last\VKP\E71sw45\ELFLoader.elf #
#                            -Felf -yas -l                                     #
#                            C:\arm\elfpack_mod_last\Other\E71sw45\List\ELFLoa #
#                            der.map                                           #
#                            -xmsnio                                           #
#                            "-IC:\arm2\Embedded Workbench 4.0 Evaluation\ARM\ #
#                            LIB\"                                             #
#                            -f C:\arm\elfpack_mod_last\config\E71sw45.xcl     #
#                            (-carm                                            #
#                            -Z(CODE)START,CODE,SWITAB,INITTAB,DATA_ID,DATA_C, #
#                            CONFIG_DATA_ID,CONFIG_DATA_C=A0078000-A007C000    #
#                            -Z(DATA)CODE_I,DATA_I,CONFIG_DATA_I,DATA_Z,DATA_N #
#                            =A8D9F178-A8D9FAD7                                #
#                            -Z(CODE)PATCH_ONCREATE=A084B698-A084B69B          #
#                            -Z(CODE)PATCH_ONCLOSE=A084B6AC-A084B6AF           #
#                            -Z(CODE)PATCH_ESI1=A08D5FF4-A08D5FF7              #
#                            -Z(CODE)PATCH_ESI2=A08D6004-A08D6007              #
#                            -Z(CODE)PATCH_SHOWMSG_BLF=A07F9600-A07F9603       #
#                            -Z(CODE)PATCH_NO_BROWSE_TXT=A06C697A-A06C697D     #
#                            -Z(CODE)SWILIB_FUNC171=A00745C4-A00745C7          #
#                            -Z(CODE)SWILIB_FUNC172=A00745C8-A00745CB          #
#                            -Z(CODE)SWILIB_FUNC19C=A0074670-A0074673          #
#                            -Z(CODE)SWILIB_FUNC1B8_1BB=A00746E0-A00746EF      #
#                            -Z(CODE)SWILIB_FUNC1E9=A00747A4-A00747A7          #
#                            -Z(DATA)REGEXPL_CNT=A8D9F174-A8D9F177             #
#                            -Z(CODE)PATCH_EXT2_R7=A0502A78-A0502A7B           #
#                            -Z(CODE)PATCH_EXT2_R6=A0502C5C-A0502C5F           #
#                            -Z(CODE)PATCH_EXT2_R7_1=A05026AC-A05026AF         #
#                            -Z(CODE)PATCH_EXT2_R2=A0502830-A0502833           #
#                            -Z(CODE)PATCH_EXT2_IMPL=A0502AFC-A0502B1F         #
#                            -Z(CODE)PATCH_ENABLE_ALTOPEN=A071CDD4-A071CDD7    #
#                            -Z(CODE)PATCH_GET_PIT=A094CE9A-A094CE9D           #
#                            -Z(CODE)PATCH_GET_PITJ=A094CEA0-A094CEA3          #
#                            -Z(CODE)FSWI_PATCH1=A12D1414-A12D1417             #
#                            -Z(CODE)FSWI_PATCH2=A12D1328-A12D132B             #
#                            -Z(CODE)LIBR=A0074000-A0077FFF                    #
#                            -Z(CODE)MFREE_MOD=A0092D98-FFFFFFFF               #
#                            -Z(CODE)PATCH_DRAWHANDLER=A094CA1C-FFFFFFFF       #
#                            -Z(CODE)PATCH_DRAWHANDLER_J32=A09F6B64-FFFFFFFF   #
#                            -Z(CODE)SWILIB_FUNC300_30A=A0074C00-FFFFFFFF      #
#                            -Z(CODE)SWILIB_FUNC30B_310=A0074C2C-FFFFFFFF      #
#                            -Z(CODE)SWILIB_FUNC311_317=A0074C44-FFFFFFFF      #
#                            -Z(CODE)SWILIB_FUNC318_318=A0074C60-FFFFFFFF      #
#                            -Z(CODE)SWILIB_FUNC319_31E=A0074C64-FFFFFFFF)     #
#                                                                              #
#                        Copyright 1987-2007 IAR Systems. All rights reserved. #
################################################################################





                ****************************************
                *                                      *
                *           CROSS REFERENCE            *
                *                                      *
                ****************************************

                  There are no program entries.




                ****************************************
                *                                      *
                *            RUNTIME MODEL             *
                *                                      *
                ****************************************

  StackAlign4  = USED
  __cpu_mode   = __pcs__interwork
  __data_model = absolute
  __endian     = little
  __rt_version = 6



                ****************************************
                *                                      *
                *              MODULE MAP              *
                *                                      *
                ****************************************


  DEFINED ABSOLUTE ENTRIES
    *************************************************************************

  FILE NAME : C:\arm\elfpack_mod_last\Other\E71sw45\Obj\ALTSWI.r79
  PROGRAM MODULE, NAME : ALTSWI

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: A0078000 - A0078077 (0x78 bytes), align: 2
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RunSWIFromCashe_ep      A0078000        Segment part 9 (ramlib)

    *************************************************************************

  FILE NAME : C:\arm\elfpack_mod_last\Other\E71sw45\Obj\DH.r79
  PROGRAM MODULE, NAME : DH

  SEGMENTS IN THE MODULE
  ======================
PATCH_DRAWHANDLER
  Relative segment, address: A094CA1C - A094CA1F (0x4 bytes), align: 2
  Segment part 0. ROOT.
    -------------------------------------------------------------------------
PATCH_DRAWHANDLER_J32
  Relative segment, address: A09F6B64 - A09F6B67 (0x4 bytes), align: 2
  Segment part 1. ROOT.       Intra module refs:   Segment part 0
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078078 - A007808F (0x18 bytes), align: 2
  Segment part 2. ROOT.       Intra module refs:   Segment part 1
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           dhandler                A0078078 

    *************************************************************************

  FILE NAME : C:\arm\elfpack_mod_last\Other\E71sw45\Obj\ESI.r79
  PROGRAM MODULE, NAME : ESI

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: A0078090 - A0078093 (0x4 bytes), align: 2
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           BXR1                    A0078090        MyIDLECSMonClose (elfloader)
                                                   MyIDLECSMonCreate (elfloader)
    -------------------------------------------------------------------------
PATCH_NO_BROWSE_TXT
  Relative segment, address: A06C697A - A06C697B (0x2 bytes), align: 1
  Segment part 1. ROOT.
    -------------------------------------------------------------------------
PATCH_ESI1
  Relative segment, address: A08D5FF4 - A08D5FF7 (0x4 bytes), align: 2
  Segment part 2. ROOT.
    -------------------------------------------------------------------------
PATCH_ESI2
  Relative segment, address: A08D6004 - A08D6007 (0x4 bytes), align: 2
  Segment part 3. ROOT.       Intra module refs:   Segment part 2
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078094 - A007809F (0xc bytes), align: 2
  Segment part 4. ROOT.       Intra module refs:   Segment part 3
    -------------------------------------------------------------------------
PATCH_GET_PIT
  Relative segment, address: A094CE9A - A094CE9D (0x4 bytes), align: 1
  Segment part 5. ROOT.
    -------------------------------------------------------------------------
PATCH_GET_PITJ
  Relative segment, address: A094CEA0 - A094CEA3 (0x4 bytes), align: 2
  Segment part 6. ROOT.       Intra module refs:   Segment part 5
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A00780A0 - A00780DB (0x3c bytes), align: 2
  Segment part 7. ROOT.       Intra module refs:   Segment part 6

    *************************************************************************

  FILE NAME : C:\arm\elfpack_mod_last\Other\E71sw45\Obj\EXT2.r79
  PROGRAM MODULE, NAME : EXT2

  SEGMENTS IN THE MODULE
  ======================
PATCH_ENABLE_ALTOPEN
  Relative segment, address: A071CDD4 - A071CDD7 (0x4 bytes), align: 2
  Segment part 0. ROOT.
    -------------------------------------------------------------------------
PATCH_EXT2_R7
  Relative segment, address: A0502A78 - A0502A7B (0x4 bytes), align: 2
  Segment part 1. ROOT.
    -------------------------------------------------------------------------
PATCH_EXT2_R6
  Relative segment, address: A0502C5C - A0502C5F (0x4 bytes), align: 2
  Segment part 2. ROOT.
    -------------------------------------------------------------------------
PATCH_EXT2_R7_1
  Relative segment, address: A05026AC - A05026AF (0x4 bytes), align: 2
  Segment part 3. ROOT.
    -------------------------------------------------------------------------
PATCH_EXT2_R2
  Relative segment, address: A0502830 - A0502833 (0x4 bytes), align: 2
  Segment part 4. ROOT.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A00780DC - A0078103 (0x28 bytes), align: 2
  Segment part 5.             Intra module refs:   Segment part 1
                                                   Segment part 2
                                                   Segment part 3
                                                   Segment part 4
    -------------------------------------------------------------------------
PATCH_EXT2_IMPL
  Relative segment, address: A0502AFC - A0502B1F (0x24 bytes), align: 2
  Segment part 6. ROOT.

    *************************************************************************

  FILE NAME : C:\arm\elfpack_mod_last\Other\E71sw45\Obj\FSWI.r79
  PROGRAM MODULE, NAME : FSWI

  SEGMENTS IN THE MODULE
  ======================
FSWI_PATCH1
  Relative segment, address: A12D1414 - A12D1417 (0x4 bytes), align: 2
  Segment part 0. ROOT.
    -------------------------------------------------------------------------
FSWI_PATCH2
  Relative segment, address: A12D1328 - A12D132B (0x4 bytes), align: 2
  Segment part 1. ROOT.       Intra module refs:   Segment part 0
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078104 - A0078193 (0x90 bytes), align: 2
  Segment part 2. ROOT.       Intra module refs:   Segment part 1
    -------------------------------------------------------------------------
LIBR
  Relative segment, address: A0074000, align: 2
  Segment part 3. ROOT.       Intra module refs:   Segment part 2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Library                 A0074000        Segment part 20 (ramlib)

    *************************************************************************

  FILE NAME : C:\arm\elfpack_mod_last\Other\E71sw45\Obj\IMB.r79
  PROGRAM MODULE, NAME : IMB

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: A0078194 - A00781FF (0x6c bytes), align: 2
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ExecuteIMB              A0078194        ExecuteIMB::??rT (elf)
                                                   elfload (elf)

    *************************************************************************

  FILE NAME : C:\arm\elfpack_mod_last\Other\E71sw45\Obj\MFUNC.r79
  PROGRAM MODULE, NAME : MFUNC

  SEGMENTS IN THE MODULE
  ======================
MFREE_MOD
  Relative segment, address: A0092D98 - A0092D9B (0x4 bytes), align: 2
  Segment part 0. ROOT.

    *************************************************************************

  FILE NAME : C:\arm\elfpack_mod_last\Other\E71sw45\Obj\additional.r79
  PROGRAM MODULE, NAME : additional

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: A0078200 - A0078207 (0x8 bytes), align: 2
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           get_file_size::??rA     A0078200 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078208 - A0078223 (0x1c bytes), align: 2
  Segment part 10.            Intra module refs:   get_file_size::??rA
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           get_file_size           A0078209        EDL_load_ep (edl)
                                                   LoadLibrary (ramlib)
                                                   logger (logger)
               stack 1 = 00000000 ( 00000034 )
    -------------------------------------------------------------------------
CODE
  Segment part 11. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078224 - A0078237 (0x14 bytes), align: 2
  Segment part 12.            Intra module refs:   Segment part 7
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           REDRAW_impl             A0078224 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 13. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078238 - A0078243 (0xc bytes), align: 2
  Segment part 14.            Intra module refs:   Segment part 8
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SEQKILLER_impl          A0078239 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 15. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078244 - A00782B3 (0x70 bytes), align: 2
  Segment part 16.            Intra module refs:   ascii2ws
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           char8to16               A0078245 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 17. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A00782B4 - A00782CF (0x1c bytes), align: 2
  Segment part 18.            Intra module refs:   ESI
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ascii2ws                A00782B5 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 19. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A00782D0 - A0078317 (0x48 bytes), align: 2
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ESI                     A00782D0        Segment part 4 (ESI)
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 21. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078318 - A0078353 (0x3c bytes), align: 2
  Segment part 22.            Intra module refs:   MyShowMSG
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DoUnknownFileType       A0078318 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 23. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_N
  Relative segment, address: A8D9F60C - A8D9F60F (0x4 bytes), align: 2
  Segment part 4.             Intra module refs:   EXT2_REALLOC
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EXT2_AREA               A8D9F60C        Segment part 1 (rets_E71sw45)
                                                   Segment part 5 (EXT2)
    -------------------------------------------------------------------------
REGEXPL_CNT
  Relative segment, address: A8D9F174 - A8D9F177 (0x4 bytes), align: 2
  Segment part 5.             Intra module refs:   EXT2_REALLOC
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EXT2_CNT                A8D9F174 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078354 - A00783C7 (0x74 bytes), align: 2
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EXT2_REALLOC            A0078354        Segment part 6 (EXT2)
               stack 1 = 00000000 ( 0000001C )
    -------------------------------------------------------------------------
CODE
  Segment part 25. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A00783C8 - A00783E7 (0x20 bytes), align: 2
  Segment part 26.            Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MyShowMSG               A00783C9 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
PATCH_SHOWMSG_BLF
  Relative segment, address: A07F9600 - A07F9603 (0x4 bytes), align: 2
  Segment part 6. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC172
  Relative segment, address: A00745C8 - A00745CB (0x4 bytes), align: 2
  Segment part 7. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC19C
  Relative segment, address: A0074670 - A0074673 (0x4 bytes), align: 2
  Segment part 8. ROOT.
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A007A8C8 - A007A8CF (0x8 bytes), align: 2
  Segment part 2.             Intra module refs:   ESI
    -------------------------------------------------------------------------
DATA_C
  Segment part 3. NOT NEEDED.

    *************************************************************************

  FILE NAME : C:\arm\elfpack_mod_last\Other\E71sw45\Obj\conf_loader.r79
  PROGRAM MODULE, NAME : conf_loader

  SEGMENTS IN THE MODULE
  ======================
DATA_N
  Relative segment, address: A8D9F610 - A8D9F617 (0x8 bytes), align: 2
  Segment part 2.             Intra module refs:   LoadConfigData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DEFAULT_DISK_N          A8D9F614        EDL_load_ep (edl)
                                                   LoadLibrary (ramlib)
                                                   LoadLibs (elfloader)
                                                   logger (logger)
           successed_config_filename
                                   A8D9F610 
    -------------------------------------------------------------------------
CODE
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A00783E8 - A007850F (0x128 bytes), align: 2
  Segment part 4.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LoadConfigData          A00783E8        MyIDLECSMonCreate (elfloader)
               stack 1 = 00000000 ( 0000002C )
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Segment part 6. NOT NEEDED.

    *************************************************************************

  FILE NAME : C:\arm\elfpack_mod_last\Other\E71sw45\Obj\config_data.r79
  PROGRAM MODULE, NAME : config_data

  SEGMENTS IN THE MODULE
  ======================
CONFIG_DATA_I
  Relative segment, address: A8D9F184 - A8D9F1AF (0x2c bytes), align: 2
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr_01_begin         A8D9F184 
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A8D9F1B0 - A8D9F1DB (0x2c bytes), align: 2
  Segment part 4. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr3_1               A8D9F1B0 
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A8D9F1DC - A8D9F25B (0x80 bytes), align: 2
  Segment part 6. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           folder_img              A8D9F1DC        MyIDLECSMonCreate (elfloader)
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A8D9F25C - A8D9F287 (0x2c bytes), align: 2
  Segment part 8. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr01_01             A8D9F25C 
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A8D9F288 - A8D9F28B (0x4 bytes), align: 2
  Segment part 10. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ALPHA_THRESHOLD         A8D9F288        create_imghdr (png)
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A8D9F28C - A8D9F2B7 (0x2c bytes), align: 2
  Segment part 12. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr01_02             A8D9F28C 
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A8D9F2B8 - A8D9F2BB (0x4 bytes), align: 2
  Segment part 14. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CACHE_PNG               A8D9F2B8        PatchGetPIT (png)
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A8D9F2BC - A8D9F2E7 (0x2c bytes), align: 2
  Segment part 16. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr01_03             A8D9F2BC 
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A8D9F2E8 - A8D9F2EB (0x4 bytes), align: 2
  Segment part 18. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DEFAULT_COLOR           A8D9F2E8        create_imghdr (png)
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A8D9F2EC - A8D9F34B (0x60 bytes), align: 2
  Segment part 20. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfgcbox01_03            A8D9F2EC 
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A8D9F34C - A8D9F377 (0x2c bytes), align: 2
  Segment part 22. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr_01_end           A8D9F34C 
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A8D9F378 - A8D9F3A3 (0x2c bytes), align: 2
  Segment part 24. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr_03_begin         A8D9F378 
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A8D9F3A4 - A8D9F3CF (0x2c bytes), align: 2
  Segment part 26. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr03_01             A8D9F3A4 
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A8D9F3D0 - A8D9F3D3 (0x4 bytes), align: 2
  Segment part 28. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           edl_ena                 A8D9F3D0        MyIDLECSMonCreate (elfloader)
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A8D9F3D4 - A8D9F3FF (0x2c bytes), align: 2
  Segment part 30. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr03_02             A8D9F3D4 
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A8D9F400 - A8D9F403 (0x4 bytes), align: 2
  Segment part 32. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           edl_sys_size            A8D9F400        Segment part 45 (edl)
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A8D9F404 - A8D9F42F (0x2c bytes), align: 2
  Segment part 34. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr_03_end           A8D9F404 
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A8D9F430 - A8D9F45B (0x2c bytes), align: 2
  Segment part 36. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr_05_begin         A8D9F430 
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A8D9F45C - A8D9F487 (0x2c bytes), align: 2
  Segment part 38. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr05_01             A8D9F45C 
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A8D9F488 - A8D9F48B (0x4 bytes), align: 2
  Segment part 40. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           log_sound               A8D9F488        logger (logger)
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A8D9F48C - A8D9F4B7 (0x2c bytes), align: 2
  Segment part 42. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr05_02             A8D9F48C 
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A8D9F4B8 - A8D9F537 (0x80 bytes), align: 2
  Segment part 44. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           folder_daemons          A8D9F4B8        LoadDaemons (elfloader)
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A8D9F538 - A8D9F563 (0x2c bytes), align: 2
  Segment part 46. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr05_03             A8D9F538 
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A8D9F564 - A8D9F567 (0x4 bytes), align: 2
  Segment part 48. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           key_break               A8D9F564        MyIDLECSMonCreate (elfloader)
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A8D9F568 - A8D9F593 (0x2c bytes), align: 2
  Segment part 50. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr05_04             A8D9F568 
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A8D9F594 - A8D9F597 (0x4 bytes), align: 2
  Segment part 52. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           subproc_daem            A8D9F594        MyIDLECSMonCreate (elfloader)
                                                   proc_EPC (gbsproc)
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A8D9F598 - A8D9F5C3 (0x2c bytes), align: 2
  Segment part 54. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr05_05             A8D9F598 
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A8D9F5C4 - A8D9F5C7 (0x4 bytes), align: 2
  Segment part 56. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           subproc_prio            A8D9F5C4        CreateEPC_PROC (gbsproc)
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A8D9F5C8 - A8D9F5F3 (0x2c bytes), align: 2
  Segment part 58. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr_05_end           A8D9F5C8 
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A007AC74 - A007AC9F (0x2c bytes), align: 2
  Segment part 3. ROOT.       Intra module refs:   cfghdr_01_begin
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A007ACA0 - A007ACCB (0x2c bytes), align: 2
  Segment part 5. ROOT.       Intra module refs:   cfghdr3_1
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A007ACCC - A007AD4B (0x80 bytes), align: 2
  Segment part 7. ROOT.       Intra module refs:   folder_img
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A007AD4C - A007AD77 (0x2c bytes), align: 2
  Segment part 9. ROOT.       Intra module refs:   cfghdr01_01
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A007AD78 - A007AD7B (0x4 bytes), align: 2
  Segment part 11. ROOT.      Intra module refs:   ALPHA_THRESHOLD
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A007AD7C - A007ADA7 (0x2c bytes), align: 2
  Segment part 13. ROOT.      Intra module refs:   cfghdr01_02
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A007ADA8 - A007ADAB (0x4 bytes), align: 2
  Segment part 15. ROOT.      Intra module refs:   CACHE_PNG
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A007ADAC - A007ADD7 (0x2c bytes), align: 2
  Segment part 17. ROOT.      Intra module refs:   cfghdr01_03
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A007ADD8 - A007ADDB (0x4 bytes), align: 2
  Segment part 19. ROOT.      Intra module refs:   DEFAULT_COLOR
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A007ADDC - A007AE3B (0x60 bytes), align: 2
  Segment part 21. ROOT.      Intra module refs:   cfgcbox01_03
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A007AE3C - A007AE67 (0x2c bytes), align: 2
  Segment part 23. ROOT.      Intra module refs:   cfghdr_01_end
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A007AE68 - A007AE93 (0x2c bytes), align: 2
  Segment part 25. ROOT.      Intra module refs:   cfghdr_03_begin
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A007AE94 - A007AEBF (0x2c bytes), align: 2
  Segment part 27. ROOT.      Intra module refs:   cfghdr03_01
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A007AEC0 - A007AEC3 (0x4 bytes), align: 2
  Segment part 29. ROOT.      Intra module refs:   edl_ena
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A007AEC4 - A007AEEF (0x2c bytes), align: 2
  Segment part 31. ROOT.      Intra module refs:   cfghdr03_02
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A007AEF0 - A007AEF3 (0x4 bytes), align: 2
  Segment part 33. ROOT.      Intra module refs:   edl_sys_size
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A007AEF4 - A007AF1F (0x2c bytes), align: 2
  Segment part 35. ROOT.      Intra module refs:   cfghdr_03_end
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A007AF20 - A007AF4B (0x2c bytes), align: 2
  Segment part 37. ROOT.      Intra module refs:   cfghdr_05_begin
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A007AF4C - A007AF77 (0x2c bytes), align: 2
  Segment part 39. ROOT.      Intra module refs:   cfghdr05_01
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A007AF78 - A007AF7B (0x4 bytes), align: 2
  Segment part 41. ROOT.      Intra module refs:   log_sound
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A007AF7C - A007AFA7 (0x2c bytes), align: 2
  Segment part 43. ROOT.      Intra module refs:   cfghdr05_02
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A007AFA8 - A007B027 (0x80 bytes), align: 2
  Segment part 45. ROOT.      Intra module refs:   folder_daemons
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A007B028 - A007B053 (0x2c bytes), align: 2
  Segment part 47. ROOT.      Intra module refs:   cfghdr05_03
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A007B054 - A007B057 (0x4 bytes), align: 2
  Segment part 49. ROOT.      Intra module refs:   key_break
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A007B058 - A007B083 (0x2c bytes), align: 2
  Segment part 51. ROOT.      Intra module refs:   cfghdr05_04
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A007B084 - A007B087 (0x4 bytes), align: 2
  Segment part 53. ROOT.      Intra module refs:   subproc_daem
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A007B088 - A007B0B3 (0x2c bytes), align: 2
  Segment part 55. ROOT.      Intra module refs:   cfghdr05_05
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A007B0B4 - A007B0B7 (0x4 bytes), align: 2
  Segment part 57. ROOT.      Intra module refs:   subproc_prio
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A007B0B8 - A007B0E3 (0x2c bytes), align: 2
  Segment part 59. ROOT.      Intra module refs:   cfghdr_05_end
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Segment part 60. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?*?CONFIG_DATA_ID       
    -------------------------------------------------------------------------
INITTAB
  Relative segment, address: A007A898 - A007A8A3 (0xc bytes), align: 2
  Segment part 61. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?init?tab?CONFIG_DATA_I
                                   A007A898 

    *************************************************************************

  FILE NAME : C:\arm\elfpack_mod_last\Other\E71sw45\Obj\console.r79
  PROGRAM MODULE, NAME : console

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 11. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078510 - A0078523 (0x14 bytes), align: 2
  Segment part 12.            Intra module refs:   InitConsole_ep(int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Console_Buffer::new Console_Buffer(int)
                                   A0078511 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 13. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078524 - A0078533 (0x10 bytes), align: 2
  Segment part 14.            Intra module refs:   KillConsole_ep()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Console_Buffer::delete ~Console_Buffer(Console_Buffer *)
                                   A0078525 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 15. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 16. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           operator new(size_t)    
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 17. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 18. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           operator new[](size_t)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 19. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 20. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           operator delete(void *)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 21. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078534 - A007854D (0x1a bytes), align: 2
  Segment part 22.            Intra module refs:   Console_Buffer::new Console_Buffer(int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Console_Buffer::Console_Buffer(int)
                                   A0078535 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 23. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 24. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Console_Buffer::~Console_Buffer()
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 25. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078550 - A0078581 (0x32 bytes), align: 2
  Segment part 26.            Intra module refs:   ConsolePut_ep(Buff_Data *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Console_Buffer::Put(Buff_Data *)
                                   A0078551 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 27. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078584 - A007858D (0xa bytes), align: 2
  Segment part 28.            Intra module refs:   ConsoleGetEx_ep(int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Console_Buffer::GetEx(int)
                                   A0078585 
    -------------------------------------------------------------------------
CODE
  Segment part 29. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078590 - A00785B7 (0x28 bytes), align: 2
  Segment part 30.            Intra module refs:   ConsoleGet_ep(Buff_Data *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Console_Buffer::Get(Buff_Data * *)
                                   A0078591 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 31. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A00785B8 - A00785CD (0x16 bytes), align: 2
  Segment part 32.            Intra module refs:   ConsoleClean_ep()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Console_Buffer::Clean()
                                   A00785B9 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 33. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_I
  Relative segment, address: A8D9F178 - A8D9F17F (0x8 bytes), align: 2
  Segment part 2.             Intra module refs:   Segment part 47
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Con_Buf                 A8D9F17C 
           cstate                  A8D9F178 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A00785D0 - A00785F7 (0x28 bytes), align: 2
  Segment part 34.            Intra module refs:   ReInitConsole_ep(int)
                                                   Segment part 4
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           InitConsole_ep(int)     A00785D0 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 35. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A00785F8 - A0078623 (0x2c bytes), align: 2
  Segment part 36.            Intra module refs:   ReInitConsole_ep(int)
                                                   Segment part 5
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           KillConsole_ep()        A00785F8 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 37. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078624 - A007864B (0x28 bytes), align: 2
  Segment part 38.            Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ReInitConsole_ep(int)   A0078624 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 39. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A007864C - A007867B (0x30 bytes), align: 2
  Segment part 40.            Intra module refs:   Segment part 7
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ConsolePut_ep(Buff_Data *)
                                   A007864C 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 41. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A007867C - A00786AB (0x30 bytes), align: 2
  Segment part 42.            Intra module refs:   Segment part 8
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ConsoleGet_ep(Buff_Data *)
                                   A007867C 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 43. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A00786AC - A00786D7 (0x2c bytes), align: 2
  Segment part 44.            Intra module refs:   Segment part 9
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ConsoleGetEx_ep(int)    A00786AC 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 45. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A00786D8 - A00786FF (0x28 bytes), align: 2
  Segment part 46.            Intra module refs:   Segment part 10
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ConsoleClean_ep()       A00786D8 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078700 - A0078703 (0x4 bytes), align: 2
  Segment part 47.            Intra module refs:   ConsoleClean_ep()
                                                   ConsoleGetEx_ep(int)
                                                   ConsoleGet_ep(Buff_Data *)
                                                   ConsolePut_ep(Buff_Data *)
                                                   InitConsole_ep(int)
                                                   KillConsole_ep()
                                                   ReInitConsole_ep(int)
    -------------------------------------------------------------------------
SWILIB_FUNC311_317
  Relative segment, address: A0074C44 - A0074C47 (0x4 bytes), align: 2
  Segment part 4. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC311_317
  Relative segment, address: A0074C48 - A0074C4B (0x4 bytes), align: 2
  Segment part 5. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC311_317
  Relative segment, address: A0074C4C - A0074C4F (0x4 bytes), align: 2
  Segment part 6. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC311_317
  Relative segment, address: A0074C50 - A0074C53 (0x4 bytes), align: 2
  Segment part 7. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC311_317
  Relative segment, address: A0074C54 - A0074C57 (0x4 bytes), align: 2
  Segment part 8. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC311_317
  Relative segment, address: A0074C58 - A0074C5B (0x4 bytes), align: 2
  Segment part 9. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC311_317
  Relative segment, address: A0074C5C - A0074C5F (0x4 bytes), align: 2
  Segment part 10. ROOT.
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_ID
  Relative segment, address: A007A8BC - A007A8C3 (0x8 bytes), align: 2
  Segment part 3.             Intra module refs:   Segment part 2
    -------------------------------------------------------------------------
DATA_ID
  Segment part 48. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?*?DATA_ID              
    -------------------------------------------------------------------------
INITTAB
  Relative segment, address: A007A8A4 - A007A8AF (0xc bytes), align: 2
  Segment part 49. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?init?tab?DATA_I        A007A8A4 

    *************************************************************************

  FILE NAME : C:\arm\elfpack_mod_last\Other\E71sw45\Obj\dhs.r79
  PROGRAM MODULE, NAME : dhs

  SEGMENTS IN THE MODULE
  ======================
DATA_Z
  Relative segment, address: A8D9F5F4 - A8D9F5FB (0x8 bytes), align: 2
  Segment part 2.             Intra module refs:   Segment part 29
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           dhs                     A8D9F5F4 
           priodraw                A8D9F5F8 
    -------------------------------------------------------------------------
CODE
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078704 - A0078757 (0x54 bytes), align: 2
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DHS_init                A0078704        MyIDLECSMonCreate (elfloader)
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 11. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078758 - A00787DB (0x84 bytes), align: 2
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DHS_kill                A0078758        MyIDLECSMonClose (elfloader)
               stack 1 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
CODE
  Segment part 13. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A00787DC - A0078815 (0x3a bytes), align: 2
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DHS_drawItems           A00787DD        dhandler (DH)
               stack 1 = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
CODE
  Segment part 15. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078818 - A00788DB (0xc4 bytes), align: 2
  Segment part 16.            Intra module refs:   Segment part 3
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DHS_addProc_ep          A0078818 
               stack 1 = 00000000 ( 00000018 )
    -------------------------------------------------------------------------
CODE
  Segment part 17. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A00788DC - A00789DF (0x104 bytes), align: 2
  Segment part 18.            Intra module refs:   Segment part 4
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DHS_removeProc_ep       A00788DC 
               stack 1 = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
CODE
  Segment part 19. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A00789E0 - A00789F7 (0x18 bytes), align: 2
  Segment part 20.            Intra module refs:   DHS_kill
                                                   Segment part 5
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DHS_lockDraw_ep         A00789E1 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A00789F8 - A00789FB (0x4 bytes), align: 2
  Segment part 21.            Intra module refs:   DHS_drawItems
                                                   DHS_init
                                                   DHS_lockDraw_ep
    -------------------------------------------------------------------------
CODE
  Segment part 22. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A00789FC - A0078A01 (0x6 bytes), align: 2
  Segment part 23.            Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DHS_getBaseAddr_ep      A00789FD 
    -------------------------------------------------------------------------
CODE
  Segment part 24. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078A04 - A0078A4F (0x4c bytes), align: 2
  Segment part 25.            Intra module refs:   Segment part 7
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DHS_getStatusItem_ep    A0078A05 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078A50 - A0078A53 (0x4 bytes), align: 2
  Segment part 26.            Intra module refs:   DHS_drawItems
                                                   DHS_getStatusItem_ep
    -------------------------------------------------------------------------
CODE
  Segment part 27. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078A54 - A0078ACF (0x7c bytes), align: 2
  Segment part 28.            Intra module refs:   Segment part 8
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DHS_workProcPrio_ep     A0078A54 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078AD0 - A0078AD3 (0x4 bytes), align: 2
  Segment part 29.            Intra module refs:   DHS_addProc_ep
                                                   DHS_drawItems
                                                   DHS_getBaseAddr_ep
                                                   DHS_getStatusItem_ep
                                                   DHS_init
                                                   DHS_kill
                                                   DHS_lockDraw_ep
                                                   DHS_removeProc_ep
                                                   DHS_workProcPrio_ep
    -------------------------------------------------------------------------
SWILIB_FUNC319_31E
  Relative segment, address: A0074C64 - A0074C67 (0x4 bytes), align: 2
  Segment part 3. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC319_31E
  Relative segment, address: A0074C68 - A0074C6B (0x4 bytes), align: 2
  Segment part 4. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC319_31E
  Relative segment, address: A0074C6C - A0074C6F (0x4 bytes), align: 2
  Segment part 5. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC319_31E
  Relative segment, address: A0074C70 - A0074C73 (0x4 bytes), align: 2
  Segment part 6. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC319_31E
  Relative segment, address: A0074C74 - A0074C77 (0x4 bytes), align: 2
  Segment part 7. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC319_31E
  Relative segment, address: A0074C78 - A0074C7B (0x4 bytes), align: 2
  Segment part 8. ROOT.
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
INITTAB
  Relative segment, address: A007A8B0 - A007A8BB (0xc bytes), align: 2
  Segment part 30. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?init?tab?DATA_Z        A007A8B0 

    *************************************************************************

  FILE NAME : C:\arm\elfpack_mod_last\Other\E71sw45\Obj\edl.r79
  PROGRAM MODULE, NAME : edl

  SEGMENTS IN THE MODULE
  ======================
DATA_Z
  Relative segment, address: A8D9F5FC - A8D9F5FF (0x4 bytes), align: 2
  Segment part 6.             Intra module refs:   Segment part 42
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pEDL_TOP                A8D9F5FC 
    -------------------------------------------------------------------------
CODE
  Segment part 18. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078AD4 - A0078B43 (0x70 bytes), align: 2
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EDL_system_init         A0078AD4        MyIDLECSMonCreate (elfloader)
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 20. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 21. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EDL_system_kill         
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 22. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 23. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EDL_system_reinit       
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 24. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078B44 - A0078BCB (0x88 bytes), align: 2
  Segment part 25.            Intra module refs:   EDL_addlib_ep
                                                   EDL_load_ep
                                                   EDL_remove_ep
                                                   EDL_unload_ep
                                                   EDL_use_ep
                                                   Segment part 13
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           isEDL_exist_ep          A0078B44 
               stack 1 = 00000000 ( 0000001C )
    -------------------------------------------------------------------------
CODE
  Segment part 26. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078BCC - A0078CAF (0xe4 bytes), align: 2
  Segment part 27.            Intra module refs:   EDL_load_ep
                                                   Segment part 14
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           isEDL_support_ep        A0078BCC 
               stack 1 = 00000000 ( 0000001C )
    -------------------------------------------------------------------------
CODE
  Segment part 28. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078CB0 - A0078E87 (0x1d8 bytes), align: 2
  Segment part 29.            Intra module refs:   Segment part 8
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EDL_load_ep             A0078CB0        executer_and_messager (elfloader)
               stack 1 = 00000000 ( 00000124 )
    -------------------------------------------------------------------------
CODE
  Segment part 30. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078E88 - A0078EE3 (0x5c bytes), align: 2
  Segment part 31.            Intra module refs:   Segment part 9
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EDL_unload_ep           A0078E88 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 32. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078EE4 - A0078F5B (0x78 bytes), align: 2
  Segment part 33.            Intra module refs:   Segment part 10
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EDL_addlib_ep           A0078EE4 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 34. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078F5C - A0078FAB (0x50 bytes), align: 2
  Segment part 35.            Intra module refs:   Segment part 11
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EDL_remove_ep           A0078F5C 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 36. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078FAC - A0078FF7 (0x4c bytes), align: 2
  Segment part 37.            Intra module refs:   Segment part 12
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EDL_use_ep              A0078FAC 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 38. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078FF8 - A0079003 (0xc bytes), align: 2
  Segment part 39.            Intra module refs:   Segment part 15
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           getEDL_baseAddr_ep      A0078FF8 
    -------------------------------------------------------------------------
CODE
  Segment part 40. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0079004 - A007904B (0x48 bytes), align: 2
  Segment part 41.            Intra module refs:   Segment part 16
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           getEDL_curLibs_ep       A0079004 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A007904C - A007904F (0x4 bytes), align: 2
  Segment part 42.            Intra module refs:   EDL_addlib_ep
                                                   EDL_remove_ep
                                                   EDL_system_init
                                                   EDL_unload_ep
                                                   EDL_use_ep
                                                   getEDL_baseAddr_ep
                                                   getEDL_curLibs_ep
                                                   isEDL_exist_ep
    -------------------------------------------------------------------------
CODE
  Segment part 43. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0079050 - A007905B (0xc bytes), align: 2
  Segment part 44.            Intra module refs:   Segment part 17
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           getEDL_maxLibs_ep       A0079050 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A007905C - A007905F (0x4 bytes), align: 2
  Segment part 45.            Intra module refs:   EDL_addlib_ep
                                                   EDL_system_init
                                                   getEDL_curLibs_ep
                                                   getEDL_maxLibs_ep
                                                   isEDL_exist_ep
    -------------------------------------------------------------------------
CODE
  Segment part 46. NOT NEEDED.Intra module refs:   EDL_load_ep
    -------------------------------------------------------------------------
CODE
  Segment part 47. NOT NEEDED.Intra module refs:   EDL_load_ep
    -------------------------------------------------------------------------
SWILIB_FUNC300_30A
  Relative segment, address: A0074C00 - A0074C03 (0x4 bytes), align: 2
  Segment part 7. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC300_30A
  Relative segment, address: A0074C04 - A0074C07 (0x4 bytes), align: 2
  Segment part 8. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC300_30A
  Relative segment, address: A0074C08 - A0074C0B (0x4 bytes), align: 2
  Segment part 9. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC300_30A
  Relative segment, address: A0074C0C - A0074C0F (0x4 bytes), align: 2
  Segment part 10. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC300_30A
  Relative segment, address: A0074C10 - A0074C13 (0x4 bytes), align: 2
  Segment part 11. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC300_30A
  Relative segment, address: A0074C14 - A0074C17 (0x4 bytes), align: 2
  Segment part 12. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC300_30A
  Relative segment, address: A0074C18 - A0074C1B (0x4 bytes), align: 2
  Segment part 13. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC300_30A
  Relative segment, address: A0074C1C - A0074C1F (0x4 bytes), align: 2
  Segment part 14. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC300_30A
  Relative segment, address: A0074C20 - A0074C23 (0x4 bytes), align: 2
  Segment part 15. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC300_30A
  Relative segment, address: A0074C24 - A0074C27 (0x4 bytes), align: 2
  Segment part 16. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC300_30A
  Relative segment, address: A0074C28 - A0074C2B (0x4 bytes), align: 2
  Segment part 17. ROOT.
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
INITTAB
  Segment part 48. TENTATIVE. Used definition from dhs
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?init?tab?DATA_Z        
    -------------------------------------------------------------------------
DATA_C
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A007A8D0 - A007A8D7 (0x8 bytes), align: 2
  Segment part 3.             Intra module refs:   isEDL_support_ep
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A007A8D8 - A007A8F7 (0x20 bytes), align: 2
  Segment part 4.             Intra module refs:   EDL_load_ep
    -------------------------------------------------------------------------
DATA_C
  Segment part 5. NOT NEEDED.

    *************************************************************************

  FILE NAME : C:\arm\elfpack_mod_last\Other\E71sw45\Obj\elf.r79
  PROGRAM MODULE, NAME : elf

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0079060 - A007906B (0xc bytes), align: 2
  Segment part 3.             Intra module refs:   elfload
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zeromem_a               A0079060 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A007906C - A0079073 (0x8 bytes), align: 2
  Segment part 4.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           elfload::??rA           A007906C 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0079074 - A0079333 (0x2c0 bytes), align: 2
  Segment part 5.             Intra module refs:   elfload::??rA
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           elfload                 A0079075        EDL_load_ep (edl)
                                                   LoadDaemons (elfloader)
                                                   executer_and_messager (elfloader)
               stack 1 = 00000000 ( 00000224 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0079334 - A007933B (0x8 bytes), align: 2
  Segment part 6.             Intra module refs:   elfload
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ExecuteIMB::??rT        A0079335 
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    *************************************************************************

  FILE NAME : C:\arm\elfpack_mod_last\Other\E71sw45\Obj\elfloader.r79
  PROGRAM MODULE, NAME : elfloader

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 17. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A007933C - A00793AB (0x70 bytes), align: 2
  Segment part 18.            Intra module refs:   LoadLibs
                                                   edl_onload
                                                   elf_onload
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           executer_and_messager   A007933C 
               stack 1 = 00000000 ( 0000006C )
    -------------------------------------------------------------------------
CODE
  Segment part 19. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A00793AC - A00793F3 (0x48 bytes), align: 2
  Segment part 20.            Intra module refs:   Segment part 5
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           elf_onload              A00793AC 
               stack 1 = 00000000 ( 00000088 )
    -------------------------------------------------------------------------
CODE
  Segment part 21. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A00793F4 - A007942B (0x38 bytes), align: 2
  Segment part 22.            Intra module refs:   Segment part 5
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           edl_onload              A00793F4 
               stack 1 = 00000000 ( 00000084 )
    -------------------------------------------------------------------------
CODE
  Segment part 23. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A007942C - A00794E3 (0xb8 bytes), align: 2
  Segment part 24.            Intra module refs:   MyIDLECSMonCreate
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LoadLibs                A007942C        proc_EPC (gbsproc)
               stack 1 = 00000000 ( 00000454 )
    -------------------------------------------------------------------------
CODE
  Segment part 25. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A00794E4 - A007958B (0xa8 bytes), align: 2
  Segment part 26.            Intra module refs:   MyIDLECSMonCreate
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LoadDaemons             A00794E4        Segment part 16 (gbsproc)
                                                   proc_EPC (gbsproc)
               stack 1 = 00000000 ( 00000358 )
    -------------------------------------------------------------------------
CODE
  Segment part 27. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_N
  Relative segment, address: A8D9F618 - A8D9F697 (0x80 bytes), align: 2
  Segment part 10.            Intra module refs:   MyIDLECSMonCreate
                                                   Segment part 11
                                                   Segment part 12
                                                   Segment part 13
                                                   Segment part 14
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           bigicons_edl_str        A8D9F678 
           bigicons_str            A8D9F638 
           smallicons_edl_str      A8D9F658 
           smallicons_str          A8D9F618 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A007958C - A0079613 (0x88 bytes), align: 2
  Segment part 28.            Intra module refs:   MyIDLECSMonCreate
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           mktree                  A007958C 
               stack 1 = 00000000 ( 0000009C )
    -------------------------------------------------------------------------
CODE
  Segment part 29. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0079614 - A007975B (0x148 bytes), align: 2
  Segment part 30.            Intra module refs:   Segment part 15
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MyIDLECSMonCreate       A0079614 
               stack 1 = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
CODE
  Segment part 31. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A007A8F8 - A007A90B (0x14 bytes), align: 2
  Segment part 2.             Intra module refs:   executer_and_messager
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A007A90C - A007A923 (0x18 bytes), align: 2
  Segment part 3.             Intra module refs:   LoadLibs
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A007A924 - A007A92B (0x8 bytes), align: 2
  Segment part 4.             Intra module refs:   LoadDaemons
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A007A92C - A007AA4F (0x124 bytes), align: 2
  Segment part 5.             Intra module refs:   MyIDLECSMonCreate
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A007AA50 - A007AA53 (0x4 bytes), align: 2
  Segment part 6.             Intra module refs:   Segment part 5
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A007AA54 - A007AA5B (0x8 bytes), align: 2
  Segment part 7.             Intra module refs:   Segment part 5
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A007AA5C - A007AA63 (0x8 bytes), align: 2
  Segment part 8.             Intra module refs:   Segment part 5
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A007AA64 - A007AA67 (0x4 bytes), align: 2
  Segment part 9.             Intra module refs:   Segment part 5
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A007AA68 - A007AA6F (0x8 bytes), align: 2
  Segment part 11.            Intra module refs:   Segment part 5
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A007AA70 - A007AA77 (0x8 bytes), align: 2
  Segment part 12.            Intra module refs:   Segment part 5
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A007AA78 - A007AA7F (0x8 bytes), align: 2
  Segment part 13.            Intra module refs:   Segment part 5
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A007AA80 - A007AA87 (0x8 bytes), align: 2
  Segment part 14.            Intra module refs:   Segment part 5
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A007975C - A0079783 (0x28 bytes), align: 2
  Segment part 32.            Intra module refs:   Segment part 16
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MyIDLECSMonClose        A007975C 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 33. NOT NEEDED.Intra module refs:   LoadDaemons
                                                   executer_and_messager
    -------------------------------------------------------------------------
CODE
  Segment part 34. NOT NEEDED.Intra module refs:   executer_and_messager
    -------------------------------------------------------------------------
CODE
  Segment part 35. NOT NEEDED.Intra module refs:   MyIDLECSMonCreate
    -------------------------------------------------------------------------
CODE
  Segment part 36. NOT NEEDED.Intra module refs:   MyIDLECSMonCreate
    -------------------------------------------------------------------------
CODE
  Segment part 37. NOT NEEDED.Intra module refs:   MyIDLECSMonCreate
    -------------------------------------------------------------------------
CODE
  Segment part 38. NOT NEEDED.Intra module refs:   MyIDLECSMonCreate
    -------------------------------------------------------------------------
CODE
  Segment part 39. NOT NEEDED.Intra module refs:   MyIDLECSMonCreate
    -------------------------------------------------------------------------
CODE
  Segment part 40. NOT NEEDED.Intra module refs:   MyIDLECSMonCreate
    -------------------------------------------------------------------------
CODE
  Segment part 41. NOT NEEDED.Intra module refs:   MyIDLECSMonClose
                                                   MyIDLECSMonCreate
    -------------------------------------------------------------------------
CODE
  Segment part 42. NOT NEEDED.Intra module refs:   MyIDLECSMonClose
    -------------------------------------------------------------------------
CODE
  Segment part 43. NOT NEEDED.Intra module refs:   MyIDLECSMonClose
    -------------------------------------------------------------------------
PATCH_ONCREATE
  Relative segment, address: A084B698 - A084B69B (0x4 bytes), align: 2
  Segment part 15. ROOT.
    -------------------------------------------------------------------------
PATCH_ONCLOSE
  Relative segment, address: A084B6AC - A084B6AF (0x4 bytes), align: 2
  Segment part 16. ROOT.
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    *************************************************************************

  FILE NAME : C:\arm\elfpack_mod_last\Other\E71sw45\Obj\gbsproc.r79
  PROGRAM MODULE, NAME : gbsproc

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0079784 - A00798A7 (0x124 bytes), align: 2
  Segment part 6.             Intra module refs:   CreateEPC_PROC
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           proc_EPC                A0079784 
               stack 1 = 00000000 ( 00000024 )
    -------------------------------------------------------------------------
CODE
  Segment part 7. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A00798A8 - A00798DF (0x38 bytes), align: 2
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CreateEPC_PROC          A00798A8        MyIDLECSMonCreate (elfloader)
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A00798E0 - A00798F3 (0x14 bytes), align: 2
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           KillEPC_PROC            A00798E0        MyIDLECSMonClose (elfloader)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 11. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A00798F4 - A0079917 (0x24 bytes), align: 2
  Segment part 12.            Intra module refs:   Segment part 4
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SUBPROC_impl            A00798F4 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 13. NOT NEEDED.Intra module refs:   proc_EPC
    -------------------------------------------------------------------------
CODE
  Segment part 14. NOT NEEDED.Intra module refs:   proc_EPC
    -------------------------------------------------------------------------
CODE
  Segment part 15. NOT NEEDED.Intra module refs:   proc_EPC
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0079918 - A007991B (0x4 bytes), align: 2
  Segment part 16.            Intra module refs:   proc_EPC
    -------------------------------------------------------------------------
CODE
  Segment part 17. NOT NEEDED.Intra module refs:   proc_EPC
    -------------------------------------------------------------------------
SWILIB_FUNC171
  Relative segment, address: A00745C4 - A00745C7 (0x4 bytes), align: 2
  Segment part 4. ROOT.
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A007AA88 - A007AAE3 (0x5c bytes), align: 2
  Segment part 2.             Intra module refs:   proc_EPC
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A007AAE4 - A007AAF3 (0x10 bytes), align: 2
  Segment part 3.             Intra module refs:   CreateEPC_PROC

    *************************************************************************

  FILE NAME : C:\arm\elfpack_mod_last\Other\E71sw45\Obj\logger.r79
  PROGRAM MODULE, NAME : logger

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A007991C - A0079A97 (0x17c bytes), align: 2
  Segment part 4.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           logger                  A007991C        FUNC_ABORT (ramlib)
               stack 1 = 00000000 ( 000000CC )
    -------------------------------------------------------------------------
CODE
  Segment part 5. NOT NEEDED. Intra module refs:   logger
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A007AAF4 - A007ABBF (0xcc bytes), align: 2
  Segment part 2.             Intra module refs:   logger

    *************************************************************************

  FILE NAME : C:\arm\elfpack_mod_last\Other\E71sw45\Obj\paths.r79
  PROGRAM MODULE, NAME : paths

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0079A98 - A0079A9F (0x8 bytes), align: 2
  Segment part 4.             Intra module refs:   Segment part 2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GetPathOfEP_ep          A0079A98 
    -------------------------------------------------------------------------
SWILIB_FUNC318_318
  Relative segment, address: A0074C60 - A0074C63 (0x4 bytes), align: 2
  Segment part 2. ROOT.
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    *************************************************************************

  FILE NAME : C:\arm\elfpack_mod_last\Other\E71sw45\Obj\png.r79
  PROGRAM MODULE, NAME : png

  SEGMENTS IN THE MODULE
  ======================
DATA_I
  Relative segment, address: A8D9F180 - A8D9F183 (0x4 bytes), align: 2
  Segment part 3.             Intra module refs:   PatchGetPIT
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DEFAULT_DISK_N2         A8D9F180 
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A007ABC0 - A007ABC7 (0x8 bytes), align: 2
  Segment part 2.             Intra module refs:   create_imghdr
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A007ABC8 - A007ABDF (0x18 bytes), align: 2
  Segment part 5.             Intra module refs:   PatchGetPIT
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DEFAULT_FOLDER          A007ABC8 
           empty_img               A007ABD4 
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A007AC70 - A007AC70 (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   Segment part 5
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Pointer                 A007AC70 
    -------------------------------------------------------------------------
CODE
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0079AA0 - A0079AA7 (0x8 bytes), align: 2
  Segment part 10.            Intra module refs:   create_imghdr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           xmalloc                 A0079AA1 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 11. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0079AA8 - A0079AAF (0x8 bytes), align: 2
  Segment part 12.            Intra module refs:   create_imghdr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           xmfree                  A0079AA9 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 13. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0079AB0 - A0079B1B (0x6c bytes), align: 2
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           clear_cache             A0079AB0        proc_EPC (gbsproc)
               stack 1 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
CODE
  Segment part 15. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0079B1C - A0079B43 (0x28 bytes), align: 2
  Segment part 16.            Intra module refs:   create_imghdr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           read_data_fn            A0079B1C 
               stack 1 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
CODE
  Segment part 17. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0079B44 - A007A0EF (0x5ac bytes), align: 2
  Segment part 18.            Intra module refs:   PatchGetPIT
                                                   Segment part 8
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           create_imghdr           A0079B44 
               stack 1 = 00000000 ( 00000060 )
    -------------------------------------------------------------------------
CODE
  Segment part 19. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_N
  Relative segment, address: A8D9F698 - A8D9F6A3 (0xc bytes), align: 2
  Segment part 7.             Intra module refs:   InitPngBitMap
                                                   Segment part 27
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pngtop                  A8D9F698        Segment part 1 (rets_E71sw45)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A007A0F0 - A007A113 (0x24 bytes), align: 2
  Segment part 20.            Intra module refs:   PatchGetPIT
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           strcpy_tolow            A007A0F1 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 21. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A007A114 - A007A1AB (0x98 bytes), align: 2
  Segment part 22.            Intra module refs:   PatchGetPIT
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           print10                 A007A114 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 23. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A007A1AC - A007A21F (0x74 bytes), align: 2
  Segment part 24.            Intra module refs:   PatchGetPIT
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           find_png_in_cache       A007A1AC 
               stack 1 = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
CODE
  Segment part 25. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A007A220 - A007A4AB (0x28c bytes), align: 2
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PatchGetPIT             A007A220        Segment part 7 (ESI)
               stack 1 = 00000000 ( 00000124 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A007A4AC - A007A4AF (0x4 bytes), align: 2
  Segment part 27.            Intra module refs:   PatchGetPIT
                                                   find_png_in_cache
    -------------------------------------------------------------------------
CODE
  Segment part 28. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A007A4B0 - A007A4EB (0x3c bytes), align: 2
  Segment part 29.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           InitPngBitMap           A007A4B0        MyIDLECSMonCreate (elfloader)
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
SWILIB_FUNC1E9
  Relative segment, address: A00747A4 - A00747A7 (0x4 bytes), align: 2
  Segment part 8. ROOT.
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_ID
  Relative segment, address: A007A8C4 - A007A8C7 (0x4 bytes), align: 2
  Segment part 4.             Intra module refs:   DEFAULT_DISK_N2
    -------------------------------------------------------------------------
DATA_ID
  Segment part 30. TENTATIVE. Used definition from console
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?*?DATA_ID              
    -------------------------------------------------------------------------
INITTAB
  Segment part 31. TENTATIVE. Used definition from console
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?init?tab?DATA_I        

    *************************************************************************

  FILE NAME : C:\arm\elfpack_mod_last\Other\E71sw45\Obj\ramlib.r79
  PROGRAM MODULE, NAME : ramlib

  SEGMENTS IN THE MODULE
  ======================
DATA_N
  Relative segment, address: A8D9F6A4 - A8D9F6A7 (0x4 bytes), align: 2
  Segment part 4.             Intra module refs:   Segment part 29
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pLIB_TOP                A8D9F6A4        Segment part 1 (rets_E71sw45)
                                                   Segment part 2 (FSWI)
    -------------------------------------------------------------------------
DATA_Z
  Relative segment, address: A8D9F608 - A8D9F609 (0x2 bytes), align: 1
  Segment part 5.             Intra module refs:   SetSWINumInCashe_ep
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pLIB_TOP_cashe          A8D9F608        RunSWIFromCashe_ep (ALTSWI)
    -------------------------------------------------------------------------
DATA_Z
  Relative segment, address: A8D9F600 - A8D9F607 (0x8 bytes), align: 2
  Segment part 6.             Intra module refs:   Segment part 17
                                                   Segment part 30
                                                   SetSWIHookInRAMState_ep
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pLIB_TOP_backup         A8D9F604        RunSWIFromCashe_ep (ALTSWI)
           pLIB_TOP_exist          A8D9F600 
    -------------------------------------------------------------------------
CODE
  Segment part 13. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A007A4EC - A007A6C3 (0x1d8 bytes), align: 2
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LoadLibrary             A007A4EC        MyIDLECSMonCreate (elfloader)
                                                   proc_EPC (gbsproc)
               stack 1 = 00000000 ( 000000D0 )
    -------------------------------------------------------------------------
CODE
  Segment part 15. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A007A6C4 - A007A73F (0x7c bytes), align: 2
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           FUNC_ABORT              A007A6C4        RunSWIFromCashe_ep (ALTSWI)
                                                   Segment part 2 (FSWI)
               stack 1 = 00000000 ( 00000050 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A007A740 - A007A743 (0x4 bytes), align: 2
  Segment part 17.            Intra module refs:   FUNC_ABORT
                                                   LoadLibrary
    -------------------------------------------------------------------------
CODE
  Segment part 18. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A007A744 - A007A7B7 (0x74 bytes), align: 2
  Segment part 19.            Intra module refs:   Segment part 7
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SetSWIHookInRAMState_ep
                                   A007A744 
               stack 1 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A007A7B8 - A007A7BB (0x4 bytes), align: 2
  Segment part 20.            Intra module refs:   LoadLibrary
                                                   SetSWIHookInRAMState_ep
    -------------------------------------------------------------------------
CODE
  Segment part 21. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A007A7BC - A007A7D3 (0x18 bytes), align: 2
  Segment part 22.            Intra module refs:   Segment part 8
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SetSWINumInCashe_ep     A007A7BD 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 23. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A007A7D4 - A007A807 (0x34 bytes), align: 2
  Segment part 24.            Intra module refs:   Segment part 10
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SetSWIFunc_ep           A007A7D4 
               stack 1 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
CODE
  Segment part 25. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A007A808 - A007A843 (0x3c bytes), align: 2
  Segment part 26.            Intra module refs:   Segment part 11
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RepairSWIFunc_ep        A007A808 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 27. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A007A844 - A007A87B (0x38 bytes), align: 2
  Segment part 28.            Intra module refs:   Segment part 12
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RepairSWILib_ep         A007A844 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A007A87C - A007A87F (0x4 bytes), align: 2
  Segment part 29.            Intra module refs:   LoadLibrary
                                                   RepairSWIFunc_ep
                                                   RepairSWILib_ep
                                                   SetSWIFunc_ep
                                                   SetSWIHookInRAMState_ep
                                                   SetSWINumInCashe_ep
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A007A880 - A007A883 (0x4 bytes), align: 2
  Segment part 30.            Intra module refs:   RepairSWIFunc_ep
                                                   RepairSWILib_ep
    -------------------------------------------------------------------------
CODE
  Segment part 31. NOT NEEDED.Intra module refs:   LoadLibrary
    -------------------------------------------------------------------------
CODE
  Segment part 32. NOT NEEDED.Intra module refs:   FUNC_ABORT
    -------------------------------------------------------------------------
SWILIB_FUNC30B_310
  Relative segment, address: A0074C2C - A0074C2F (0x4 bytes), align: 2
  Segment part 7. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC30B_310
  Relative segment, address: A0074C30 - A0074C33 (0x4 bytes), align: 2
  Segment part 8. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC30B_310
  Relative segment, address: A0074C34 - A0074C37 (0x4 bytes), align: 2
  Segment part 9. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC30B_310
  Relative segment, address: A0074C38 - A0074C3B (0x4 bytes), align: 2
  Segment part 10. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC30B_310
  Relative segment, address: A0074C3C - A0074C3F (0x4 bytes), align: 2
  Segment part 11. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC30B_310
  Relative segment, address: A0074C40 - A0074C43 (0x4 bytes), align: 2
  Segment part 12. ROOT.
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
INITTAB
  Segment part 33. TENTATIVE. Used definition from dhs
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?init?tab?DATA_Z        
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A007ABE0 - A007AC4F (0x70 bytes), align: 2
  Segment part 2.             Intra module refs:   LoadLibrary
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A007AC50 - A007AC6F (0x20 bytes), align: 2
  Segment part 3.             Intra module refs:   FUNC_ABORT

    *************************************************************************

  FILE NAME : C:\arm\elfpack_mod_last\Other\E71sw45\Obj\rets_E71sw45.r79
  PROGRAM MODULE, NAME : rets_E71sw45

Absolute parts
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           StoreErrInfoAndAbort    A04CCDD4 
           StoreErrString          A04CCCA0 
  SEGMENTS IN THE MODULE
  ======================
DATA_N
  Relative segment, address: A8D9F6A8, align: 2
  Segment part 0. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC1B8_1BB
  Relative segment, address: A00746E0 - A00746EF (0x10 bytes), align: 2
  Segment part 1. ROOT.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A007A884 - A007A897 (0x14 bytes), align: 2
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OldOnClose              A007A884        MyIDLECSMonClose (elfloader)
           OldOnCreate             A007A888        MyIDLECSMonCreate (elfloader)
           OldShowMsg              A007A88C        MyShowMSG (additional)
           PITgetN                 A007A890        Segment part 7 (ESI)
           PITret                  A007A894        Segment part 7 (ESI)




                ****************************************
                *                                      *
                *            MODULE SUMMARY            *
                *                                      *
                ****************************************

Module             CODE   DATA
------             ----   ----
                  (Rel)  (Rel)
ALTSWI              120
DH                   32
ESI                  94
EXT2                 96
FSWI                152
IMB                 108
MFUNC                 4
additional          500      8
  + shared            8
conf_loader         296      8
config_data       1 148  1 136
console             536      8
  + shared           12
dhs               1 000      8
  + shared           12
edl               1 504      4
elf                 716
  + shared           16
elfloader         1 504    128
gbsproc             520
logger              584
paths                12
png               2 677     16
ramlib            1 088     14
rets_E71sw45         36
N/A (alignment)
------           ------  -----
Total:           12 775  1 330


                ****************************************
                *                                      *
                *              CALL GRAPH              *
                *                                      *
                ****************************************

  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  REDRAW_impl
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  SEQKILLER_impl
      | Stack used (prev) :  00000000
      | + function block  :  00000008
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000008


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  MyShowMSG
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  InitConsole_ep(int)
      | Stack used (prev) :  00000000
      | + function block  :  00000008
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000008


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  KillConsole_ep()
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  ReInitConsole_ep(int)
      | Stack used (prev) :  00000000
      | + function block  :  00000008
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000008


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  ConsolePut_ep(Buff_Data *)
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  ConsoleGet_ep(Buff_Data *)
      | Stack used (prev) :  00000000
      | + function block  :  00000008
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000008


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  ConsoleGetEx_ep(int)
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  ConsoleClean_ep()
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  DHS_addProc_ep
      | Stack used (prev) :  00000000
      | + function block  :  00000018
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000018


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  DHS_removeProc_ep
      | Stack used (prev) :  00000000
      | + function block  :  00000014
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000014


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  DHS_lockDraw_ep
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  DHS_getBaseAddr_ep
      | Stack used (prev) :  00000000
      | + function block  :  00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000000


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  DHS_getStatusItem_ep
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  DHS_workProcPrio_ep
      | Stack used (prev) :  00000000
      | + function block  :  0000000C
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000000C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  isEDL_exist_ep
      | Stack used (prev) :  00000000
      | + function block  :  0000001C
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000001C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  isEDL_support_ep
      | Stack used (prev) :  00000000
      | + function block  :  0000001C
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000001C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  EDL_load_ep
      | Stack used (prev) :  00000000
      | + function block  :  00000124
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000124


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  EDL_unload_ep
      | Stack used (prev) :  00000000
      | + function block  :  0000000C
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000000C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  EDL_addlib_ep
      | Stack used (prev) :  00000000
      | + function block  :  00000008
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000008


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  EDL_remove_ep
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  EDL_use_ep
      | Stack used (prev) :  00000000
      | + function block  :  00000008
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000008


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  getEDL_baseAddr_ep
      | Stack used (prev) :  00000000
      | + function block  :  00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000000


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  getEDL_curLibs_ep
      | Stack used (prev) :  00000000
      | + function block  :  00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000000


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  getEDL_maxLibs_ep
      | Stack used (prev) :  00000000
      | + function block  :  00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000000


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  elf_onload
      | Stack used (prev) :  00000000
      | + function block  :  00000088
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000088


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  edl_onload
      | Stack used (prev) :  00000000
      | + function block  :  00000084
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000084


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  LoadDaemons
      | Stack used (prev) :  00000000
      | + function block  :  00000358
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000358


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  MyIDLECSMonCreate
      | Stack used (prev) :  00000000
      | + function block  :  00000014
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000014


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  MyIDLECSMonClose
      | Stack used (prev) :  00000000
      | + function block  :  00000008
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000008


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  proc_EPC
      | Stack used (prev) :  00000000
      | + function block  :  00000024
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000024


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  SUBPROC_impl
      | Stack used (prev) :  00000000
      | + function block  :  00000008
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000008


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  GetPathOfEP_ep
      | Stack used (prev) :  00000000
      | + function block  :  00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000000


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  xmalloc
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  xmfree
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  read_data_fn
      | Stack used (prev) :  00000000
      | + function block  :  00000010
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000010


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  create_imghdr
      | Stack used (prev) :  00000000
      | + function block  :  00000060
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000060


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  SetSWIHookInRAMState_ep
      | Stack used (prev) :  00000000
      | + function block  :  00000010
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000010


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  SetSWINumInCashe_ep
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  SetSWIFunc_ep
      | Stack used (prev) :  00000000
      | + function block  :  00000010
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000010


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  RepairSWIFunc_ep
      | Stack used (prev) :  00000000
      | + function block  :  0000000C
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000000C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  RepairSWILib_ep
      | Stack used (prev) :  00000000
      | + function block  :  00000008
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000008


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000358
  01  get_file_size
      | Stack used (prev) :  00000358
      | + function block  :  00000034
  <-Sub-tree of type: Function tree
    | Stack used          :  0000038C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000038C
  01  char8to16
      | Stack used (prev) :  0000038C
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00000390


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000390
  01  ascii2ws
      | Stack used (prev) :  00000390
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  0000039C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000039C
  01  ESI
      | Stack used (prev) :  0000039C
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  000003A8


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000003A8
  01  DoUnknownFileType
      | Stack used (prev) :  000003A8
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  000003B4


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000003B4
  01  EXT2_REALLOC
      | Stack used (prev) :  000003B4
      | + function block  :  0000001C
  <-Sub-tree of type: Function tree
    | Stack used          :  000003D0


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000003D0
  01  LoadConfigData
      | Stack used (prev) :  000003D0
      | + function block  :  0000002C
  <-Sub-tree of type: Function tree
    | Stack used          :  000003FC


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000003FC
  01  Console_Buffer::new Console_Buffer(int)
      | Stack used (prev) :  000003FC
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00000404


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000404
  01  Console_Buffer::delete ~Console_Buffer(Console_Buffer *)
      | Stack used (prev) :  00000404
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  0000040C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000040C
  01  Console_Buffer::Console_Buffer(int)
      | Stack used (prev) :  0000040C
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00000414


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000414
  01  Console_Buffer::Put(Buff_Data *)
      | Stack used (prev) :  00000414
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  0000041C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000041C
  01  Console_Buffer::GetEx(int)
      | Stack used (prev) :  0000041C
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000041C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000041C
  01  Console_Buffer::Get(Buff_Data * *)
      | Stack used (prev) :  0000041C
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00000424


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000424
  01  Console_Buffer::Clean()
      | Stack used (prev) :  00000424
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  0000042C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000042C
  01  DHS_init
      | Stack used (prev) :  0000042C
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00000434


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000434
  01  DHS_kill
      | Stack used (prev) :  00000434
      | + function block  :  00000010
  <-Sub-tree of type: Function tree
    | Stack used          :  00000444


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000444
  01  DHS_drawItems
      | Stack used (prev) :  00000444
      | + function block  :  00000014
  <-Sub-tree of type: Function tree
    | Stack used          :  00000458


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000458
  01  EDL_system_init
      | Stack used (prev) :  00000458
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00000464


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000464
  01  zeromem_a
      | Stack used (prev) :  00000464
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00000468


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000468
  01  elfload
      | Stack used (prev) :  00000468
      | + function block  :  00000224
  <-Sub-tree of type: Function tree
    | Stack used          :  0000068C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000068C
  01  executer_and_messager
      | Stack used (prev) :  0000068C
      | + function block  :  0000006C
  <-Sub-tree of type: Function tree
    | Stack used          :  000006F8


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000006F8
  01  LoadLibs
      | Stack used (prev) :  000006F8
      | + function block  :  00000454
  <-Sub-tree of type: Function tree
    | Stack used          :  00000B4C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000B4C
  01  mktree
      | Stack used (prev) :  00000B4C
      | + function block  :  0000009C
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BE8


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000BE8
  01  CreateEPC_PROC
      | Stack used (prev) :  00000BE8
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF0


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000BF0
  01  KillEPC_PROC
      | Stack used (prev) :  00000BF0
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00000BF4


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000BF4
  01  logger
      | Stack used (prev) :  00000BF4
      | + function block  :  000000CC
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CC0


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000CC0
  01  clear_cache
      | Stack used (prev) :  00000CC0
      | + function block  :  00000010
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CD0


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000CD0
  01  strcpy_tolow
      | Stack used (prev) :  00000CD0
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CD4


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000CD4
  01  print10
      | Stack used (prev) :  00000CD4
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CD8


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000CD8
  01  find_png_in_cache
      | Stack used (prev) :  00000CD8
      | + function block  :  00000014
  <-Sub-tree of type: Function tree
    | Stack used          :  00000CEC


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000CEC
  01  PatchGetPIT
      | Stack used (prev) :  00000CEC
      | + function block  :  00000124
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E10


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000E10
  01  InitPngBitMap
      | Stack used (prev) :  00000E10
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00000E1C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000E1C
  01  LoadLibrary
      | Stack used (prev) :  00000E1C
      | + function block  :  000000D0
  <-Sub-tree of type: Function tree
    | Stack used          :  00000EEC


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000EEC
  01  FUNC_ABORT
      | Stack used (prev) :  00000EEC
      | + function block  :  00000050
  <-Sub-tree of type: Function tree
    | Stack used          :  00000F3C




                ****************************************
                *                                      *
                *      SEGMENTS IN ADDRESS ORDER       *
                *                                      *
                ****************************************


SEGMENT              SPACE    START ADDRESS   END ADDRESS     SIZE  TYPE  ALIGN
=======              =====    =============   ===========     ====  ====  =====
LIBR                                    A0074000                     rel    2
SWILIB_FUNC171                     A00745C4 - A00745C7           4   rel    2
SWILIB_FUNC172                     A00745C8 - A00745CB           4   rel    2
SWILIB_FUNC19C                     A0074670 - A0074673           4   rel    2
SWILIB_FUNC1B8_1BB                 A00746E0 - A00746EF          10   rel    2
SWILIB_FUNC1E9                     A00747A4 - A00747A7           4   rel    2
SWILIB_FUNC300_30A                 A0074C00 - A0074C2B          2C   rel    2
SWILIB_FUNC30B_310                 A0074C2C - A0074C43          18   rel    2
SWILIB_FUNC311_317                 A0074C44 - A0074C5F          1C   rel    2
SWILIB_FUNC318_318                 A0074C60 - A0074C63           4   rel    2
SWILIB_FUNC319_31E                 A0074C64 - A0074C7B          18   rel    2
START                                   A0078000                     dse    0
CODE                               A0078000 - A007A897        2898   rel    2
SWITAB                                  A007A898                     dse    0
INITTAB                            A007A898 - A007A8BB          24   rel    2
DATA_ID                            A007A8BC - A007A8C7           C   rel    2
DATA_C                             A007A8C8 - A007AC70         3A9   rel    2
CONFIG_DATA_ID                     A007AC74 - A007B0E3         470   rel    2
MFREE_MOD                          A0092D98 - A0092D9B           4   rel    2
PATCH_EXT2_R7_1                    A05026AC - A05026AF           4   rel    2
PATCH_EXT2_R2                      A0502830 - A0502833           4   rel    2
PATCH_EXT2_R7                      A0502A78 - A0502A7B           4   rel    2
PATCH_EXT2_IMPL                    A0502AFC - A0502B1F          24   rel    2
PATCH_EXT2_R6                      A0502C5C - A0502C5F           4   rel    2
PATCH_NO_BROWSE_TXT
                                   A06C697A - A06C697B           2   rel    1
PATCH_ENABLE_ALTOPEN
                                   A071CDD4 - A071CDD7           4   rel    2
PATCH_SHOWMSG_BLF                  A07F9600 - A07F9603           4   rel    2
PATCH_ONCREATE                     A084B698 - A084B69B           4   rel    2
PATCH_ONCLOSE                      A084B6AC - A084B6AF           4   rel    2
PATCH_ESI1                         A08D5FF4 - A08D5FF7           4   rel    2
PATCH_ESI2                         A08D6004 - A08D6007           4   rel    2
PATCH_DRAWHANDLER                  A094CA1C - A094CA1F           4   rel    2
PATCH_GET_PIT                      A094CE9A - A094CE9D           4   rel    1
PATCH_GET_PITJ                     A094CEA0 - A094CEA3           4   rel    2
PATCH_DRAWHANDLER_J32
                                   A09F6B64 - A09F6B67           4   rel    2
FSWI_PATCH2                        A12D1328 - A12D132B           4   rel    2
FSWI_PATCH1                        A12D1414 - A12D1417           4   rel    2
REGEXPL_CNT                        A8D9F174 - A8D9F177           4   rel    2
CODE_I                                  A8D9F178                     dse    0
DATA_I                             A8D9F178 - A8D9F183           C   rel    2
CONFIG_DATA_I                      A8D9F184 - A8D9F5F3         470   rel    2
DATA_Z                             A8D9F5F4 - A8D9F609          16   rel    2
DATA_N                             A8D9F60C - A8D9F6A7          9C   rel    2

                ****************************************
                *                                      *
                *        END OF CROSS REFERENCE        *
                *                                      *
                ****************************************

 12 775 bytes of CODE memory
  1 330 bytes of DATA memory

Errors: none
Warnings: none

