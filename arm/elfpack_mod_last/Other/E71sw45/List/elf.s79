//////////////////////////////////////////////////////////////////////////////
//                                                                           /
// IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION   13/Jan/2011  14:21:43 /
// Copyright 1999-2005 IAR Systems. All rights reserved.                     /
//                                                                           /
//    Cpu mode        =  interwork                                           /
//    Endian          =  little                                              /
//    Stack alignment =  4                                                   /
//    Source file     =  C:\arm\elfpack_mod_last\main\elf.c                  /
//    Command line    =  C:\arm\elfpack_mod_last\main\elf.c -D NEWSGOLD -D   /
//                       ELKA -lCN C:\arm\elfpack_mod_last\Other\E71sw45\Lis /
//                       t\ -lb C:\arm\elfpack_mod_last\Other\E71sw45\List\  /
//                       -o C:\arm\elfpack_mod_last\Other\E71sw45\Obj\ -s9   /
//                       --no_unroll --cpu_mode thumb --endian little --cpu  /
//                       ARM926EJ-S --stack_align 4 --interwork -e --fpu     /
//                       None -I "C:\arm2\Embedded Workbench 4.0             /
//                       Evaluation\ARM\INC\" --inline_threshold=2           /
//    List file       =  C:\arm\elfpack_mod_last\Other\E71sw45\List\elf.s79  /
//                                                                           /
//                                                                           /
//////////////////////////////////////////////////////////////////////////////

        NAME elf

        RSEG CSTACK:DATA:NOROOT(2)

        MULTWEAK ??ExecuteIMB??rT
        MULTWEAK ??elfload??rA
        MULTWEAK ??zeromem_a??rT
        PUBLIC elfload
        PUBLIC zeromem_a

ExecuteIMB          SYMBOL "ExecuteIMB"
??ExecuteIMB??rT    SYMBOL "??rT", ExecuteIMB
elfload             SYMBOL "elfload"
??elfload??rA       SYMBOL "??rA", elfload
zeromem_a           SYMBOL "zeromem_a"
??zeromem_a??rT     SYMBOL "??rT", zeromem_a

        EXTERN ExecuteIMB


        RSEG CODE:CODE:NOROOT(2)
        THUMB
??zeromem_a??rT:
        BX       PC
        Nop      
        REQUIRE zeromem_a

        RSEG CODE:CODE:NOROOT(2)
        ARM
zeromem_a:
        PUSH     {LR}
        SWI      +285
        POP      {PC}             ;; return

        RSEG CODE:CODE:NOROOT(2)
        ARM
??elfload??rA:
        ADD      R12,PC,#+1
        BX       R12
        REQUIRE elfload

        RSEG CODE:CODE:NOROOT(2)
        THUMB
elfload:
        PUSH     {R0-R6,LR}
        SUB      SP,SP,#+508
        MOVS     R5,#+0
        MVNS     R5,R5
        STR      R5,[SP, #+20]
        MOVS     R1,#+100
        ADD      R0,SP,#+408
        BLX      zeromem_a
        LDR      R0,[SP, #+508]
        MOVS     R4,#+0
        MOV      R3,SP
        MOVS     R2,#+128
        LSLS     R1,R2,#+8
        SVC      +10
        STR      R0,[SP, #+4]
        CMP      R0,#+0
        BPL      ??elfload_0
        MOVS     R0,R5
        B        ??elfload_1
??elfload_0:
        MOV      R3,SP
        MOVS     R2,#+52
        ADD      R1,SP,#+36
        SVC      +11
        CMP      R0,#+52
        BEQ      ??elfload_2
        LDR      R0,[SP, #+4]
        MOV      R1,SP
        SVC      +13
        MOVS     R0,#+1
??elfload_3:
        MVNS     R0,R0
        B        ??elfload_1
??elfload_2:
        LDR      R0,[SP, #+36]
        LDR      R1,??elfload_4   ;; 0x464c457f
        CMP      R0,R1
        BEQ      ??elfload_5
        LDR      R0,[SP, #+4]
        MOV      R1,SP
        SVC      +13
        MOVS     R0,#+2
        B.N      ??elfload_3
??elfload_5:
        ADD      R0,SP,#+36
        LDRH     R0,[R0, #+44]
        CMP      R0,#+11
        BCC      ??elfload_6
        MOVS     R0,#+8
??elfload_7:
        MVNS     R0,R0
        B        ??elfload_1
??elfload_6:
        STR      R4,[SP, #+8]
        B        ??elfload_8
??elfload_9:
        LDR      R0,[R5, #+0]
        CMP      R0,#+1
        BNE      ??elfload_10
        LDR      R0,[R5, #+8]
        LDR      R1,[SP, #+20]
        CMP      R0,R1
        BCS      ??elfload_11
        STR      R0,[SP, #+20]
??elfload_11:
        LDR      R1,[R5, #+20]
        ADDS     R0,R0,R1
        CMP      R4,R0
        BCS      ??elfload_10
        LDR      R0,[R5, #+8]
        ADDS     R4,R0,R1
??elfload_10:
        LDR      R0,[SP, #+8]
        ADDS     R0,R0,#+1
        STR      R0,[SP, #+8]
??elfload_8:
        LDR      R0,[SP, #+8]
        ADD      R1,SP,#+36
        LDRH     R1,[R1, #+44]
        CMP      R0,R1
        BGE      ??elfload_12
        ADD      R0,SP,#+32
        PUSH     {R0}
        LDR      R0,[SP, #+68]
        LDR      R1,[SP, #+12]
        ADD      R5,SP,#+40
        LDRH     R5,[R5, #+42]
        ADD      R3,SP,#+4
        MOVS     R2,#+0
        MULS     R1,R5,R1
        ADDS     R1,R0,R1
        LDR      R0,[SP, #+8]
        SVC      +15
        LDR      R1,[SP, #+68]
        LDR      R2,[SP, #+12]
        ADD      R3,SP,#+40
        LDRH     R3,[R3, #+42]
        ADD      SP,SP,#+4
        MULS     R2,R3,R2
        ADDS     R1,R1,R2
        CMP      R0,R1
        BEQ      ??elfload_13
        LDR      R0,[SP, #+4]
        MOV      R1,SP
        SVC      +13
        MOVS     R0,#+3
        B.N      ??elfload_3
??elfload_13:
        LDR      R0,[SP, #+8]
        ADD      R1,SP,#+88
        LSLS     R0,R0,#+5
        ADDS     R5,R1,R0
        LDR      R0,[SP, #+4]
        MOV      R3,SP
        MOVS     R2,#+32
        MOVS     R1,R5
        SVC      +11
        CMP      R0,#+32
        BEQ      ??elfload_9
        LDR      R0,[SP, #+4]
        MOV      R1,SP
        SVC      +13
        MOVS     R0,#+4
        B.N      ??elfload_7
??elfload_12:
        LDR      R0,[SP, #+20]
        SUBS     R5,R4,R0
        MOVS     R0,R5
        SVC      +20
        MOVS     R4,R0
        BNE      ??elfload_14
        LDR      R0,[SP, #+4]
        MOV      R1,SP
        SVC      +13
        MOVS     R0,#+12
        B.N      ??elfload_3
??elfload_14:
        MOVS     R1,R5
        BLX      zeromem_a
        MOVS     R0,#+0
        B.N      ??elfload_15
??elfload_16:
        LDR      R0,[SP, #+16]
        LDR      R0,[R0, #+0]
        CMP      R0,#+1
        BEQ      ??elfload_17
        CMP      R0,#+2
        BEQ      ??elfload_18
        B        ??elfload_19
??elfload_17:
        LDR      R0,[SP, #+16]
        LDR      R2,[R0, #+16]
        CMP      R2,#+0
        BEQ      ??elfload_20
        LDR      R0,[R0, #+8]
        LDR      R1,[SP, #+20]
        MOV      R3,SP
        SUBS     R0,R0,R1
        ADDS     R1,R4,R0
        LDR      R0,[SP, #+4]
        SVC      +11
        LDR      R1,[SP, #+16]
        LDR      R1,[R1, #+16]
        CMP      R0,R1
        BEQ      ??elfload_20
        LDR      R0,[SP, #+4]
        MOV      R1,SP
        SVC      +13
        MOVS     R0,R4
        SVC      +21
        MOVS     R0,#+9
??elfload_21:
        MVNS     R0,R0
        B        ??elfload_1
??elfload_18:
        LDR      R0,[SP, #+16]
        LDR      R0,[R0, #+16]
        SVC      +20
        STR      R0,[SP, #+12]
        CMP      R0,#+0
        BNE      ??elfload_22
        LDR      R0,[SP, #+4]
        MOV      R1,SP
        SVC      +13
        MOVS     R0,R4
        SVC      +21
        MOVS     R0,#+6
        B.N      ??elfload_3
??elfload_22:
        LDR      R0,[SP, #+16]
        LDR      R1,[SP, #+12]
        LDR      R2,[R0, #+16]
        LDR      R0,[SP, #+4]
        MOV      R3,SP
        SVC      +11
        LDR      R1,[SP, #+16]
        LDR      R1,[R1, #+16]
        CMP      R0,R1
        BEQ      ??elfload_23
        LDR      R0,[SP, #+4]
        MOV      R1,SP
        SVC      +13
        LDR      R0,[SP, #+12]
        SVC      +21
        MOVS     R0,R4
        SVC      +21
        MOVS     R0,#+7
        B.N      ??elfload_7
??elfload_23:
        LDR      R1,[SP, #+12]
        MOVS     R0,#+0
        LDR      R1,[R1, #+0]
        ADD      R3,SP,#+408
        CMP      R1,#+0
        BNE      ??elfload_24
        B        ??elfload_25
??elfload_26:
        CMP      R2,#+25
        BGE      ??elfload_27
        LDR      R1,[R1, #+4]
        LSLS     R2,R2,#+2
        STR      R1,[R3, R2]
??elfload_27:
        ADDS     R0,R0,#+1
??elfload_24:
        LDR      R2,[SP, #+12]
        LSLS     R1,R0,#+3
        ADDS     R1,R2,R1
        LDR      R2,[R1, #+0]
        CMP      R2,#+0
        BNE      ??elfload_26
??elfload_25:
        LDR      R1,[SP, #+480]
        MOVS     R0,#+0
        CMP      R1,#+0
        BNE      ??elfload_28
??elfload_29:
        LDR      R0,[SP, #+12]
        SVC      +21
??elfload_20:
        LDR      R0,[SP, #+8]
        ADDS     R0,R0,#+1
??elfload_15:
        STR      R0,[SP, #+8]
        LDR      R0,[SP, #+20]
        RSBS     R1,R0,#+0
        STR      R1,[SP, #+28]
        LDR      R0,[SP, #+8]
        ADD      R1,SP,#+36
        LDRH     R1,[R1, #+44]
        CMP      R0,R1
        BGE      ??elfload_30
        LSLS     R0,R0,#+5
        ADD      R1,SP,#+88
        ADDS     R0,R1,R0
        STR      R0,[SP, #+16]
        MOV      R0,SP
        PUSH     {R0}
        LDR      R0,[SP, #+20]
        ADD      R3,SP,#+4
        LDR      R1,[R0, #+4]
        LDR      R0,[SP, #+8]
        MOVS     R2,#+0
        SVC      +15
        LDR      R1,[SP, #+20]
        LDR      R1,[R1, #+4]
        ADD      SP,SP,#+4
        CMP      R0,R1
        BEQ      ??elfload_16
        LDR      R0,[SP, #+4]
        MOV      R1,SP
        SVC      +13
        MOVS     R0,R4
        SVC      +21
        MOVS     R0,#+5
        B.N      ??elfload_3
??elfload_31:
        LDR      R5,[SP, #+12]
        ADDS     R3,R5,R3
        ADDS     R2,R3,R2
        LDR      R3,[SP, #+20]
        ADDS     R2,R2,R1
        LDR      R1,[R2, #+0]
        LDR      R2,[R4, R1]
        ADDS     R2,R2,R4
        SUBS     R2,R2,R3
        STR      R2,[R4, R1]
??elfload_32:
        ADDS     R0,R0,#+1
??elfload_28:
        LDR      R2,[SP, #+480]
        LSLS     R1,R0,#+3
        CMP      R1,R2
        BCS      ??elfload_29
        LDR      R1,[SP, #+16]
        LDR      R3,[SP, #+476]
        LDR      R1,[R1, #+8]
        LDR      R5,[SP, #+12]
        RSBS     R2,R1,#+0
        LSLS     R1,R0,#+3
        ADDS     R5,R5,R2
        ADDS     R5,R5,R1
        ADDS     R5,R5,R3
        LDR      R5,[R5, #+4]
        LSLS     R5,R5,#+24
        LSRS     R5,R5,#+24
        STR      R5,[SP, #+24]
        CMP      R5,#+255
        BEQ      ??elfload_32
        CMP      R5,#+253
        BEQ      ??elfload_31
        LDR      R5,[SP, #+28]
        LDR      R6,[SP, #+24]
        ADDS     R5,R4,R5
        CMP      R6,#+0
        BEQ      ??elfload_32
        CMP      R6,#+2
        BEQ      ??elfload_33
        CMP      R6,#+23
        BEQ      ??elfload_34
        CMP      R6,#+255
        BEQ      ??elfload_32
        B        ??elfload_35
??elfload_33:
        LDR      R6,[SP, #+12]
        ADDS     R3,R6,R3
        ADDS     R2,R3,R2
        ADDS     R2,R2,R1
        LDR      R1,[R2, #+0]
        LDR      R2,[R5, R1]
        ADDS     R2,R2,R4
??elfload_36:
        STR      R2,[R5, R1]
        B        ??elfload_32
??elfload_34:
        LDR      R6,[SP, #+12]
        ADDS     R3,R6,R3
        ADDS     R2,R3,R2
        LDR      R3,[SP, #+20]
        ADDS     R2,R2,R1
        LDR      R1,[R2, #+0]
        LDR      R2,[R5, R1]
        ADDS     R2,R2,R4
        SUBS     R2,R2,R3
        B.N      ??elfload_36
??elfload_35:
        LDR      R0,[SP, #+4]
        MOV      R1,SP
        SVC      +13
        MOVS     R0,R4
        SVC      +21
        LDR      R0,[SP, #+12]
        SVC      +21
        MOVS     R0,#+11
        B.N      ??elfload_21
??elfload_19:
        LDR      R0,[SP, #+4]
        MOV      R1,SP
        SVC      +13
        MOVS     R0,R4
        SVC      +21
        MOVS     R0,#+10
        B.N      ??elfload_3
??elfload_30:
        LDR      R0,[SP, #+4]
        MOV      R1,SP
        SVC      +13
        _BLF     ExecuteIMB,??ExecuteIMB??rT
        LDR      R5,[SP, #+28]
        LDR      R6,[SP, #+60]
        LDR      R3,[SP, #+520]
        LDR      R2,[SP, #+516]
        LDR      R1,[SP, #+512]
        LDR      R0,[SP, #+508]
        ADDS     R4,R4,R6
        ADDS     R4,R4,R5
        BLX      R4
        MOVS     R0,#+0
??elfload_1:
        ADD      SP,SP,#+508
        ADD      SP,SP,#+16
        POP      {R4-R6,PC}
        Nop      
        DATA
??elfload_4:
        DC32     0x464c457f

        RSEG CODE:CODE:NOROOT(2)
        THUMB
??ExecuteIMB??rT:
        LDR      R3,??Subroutine2_0  ;; ExecuteIMB
        BX       R3
        DATA
??Subroutine2_0:
        DC32     ExecuteIMB

        END
// 
// 736 bytes in segment CODE
// 
// 716 bytes of CODE memory (+ 20 bytes shared)
//
//Errors: none
//Warnings: none
