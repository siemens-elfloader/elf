##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION    26/Jun/2008  11:49:58 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  F:\siemens\elfs\xtask3 mod scrooling\gui.c           #
#    Command line    =  "F:\siemens\elfs\xtask3 mod scrooling\gui.c" -D X75  #
#                       -lC "F:\siemens\elfs\xtask3 mod                      #
#                       scrooling\Release_SGOLD_X75\List\" -o                #
#                       "F:\siemens\elfs\xtask3 mod                          #
#                       scrooling\Release_SGOLD_X75\Obj\" -s9 --no_unroll    #
#                       --no_clustering --cpu_mode arm --endian little       #
#                       --cpu ARM926EJ-S --stack_align 4 --interwork -e      #
#                       --fpu None --dlib_config "C:\Program                 #
#                       Files\iar\Embedded Workbench 4.0                     #
#                       Evaluation\ARM\LIB\dl5tpainl8n.h" -I "C:\Program     #
#                       Files\iar\Embedded Workbench 4.0                     #
#                       Evaluation\ARM\INC\" --inline_threshold=2            #
#    List file       =  F:\siemens\elfs\xtask3 mod                           #
#                       scrooling\Release_SGOLD_X75\List\gui.lst             #
#    Object file     =  F:\siemens\elfs\xtask3 mod                           #
#                       scrooling\Release_SGOLD_X75\Obj\gui.r79              #
#                                                                            #
#                                                                            #
##############################################################################

F:\siemens\elfs\xtask3 mod scrooling\gui.c
      1          #include "..\inc\swilib.h"
      2          //#include "conf_loader.h"
      3          #include "rect_patcher.h"
      4          #include "swaper.h"
      5          #include "main.h"
      6          
      7          

   \                                 In segment DATA_Z, align 4, align-sorted
      8          NAMELIST * volatile nltop;
   \                     nltop:
   \   00000000                      DS8 4
      9          

   \                                 In segment DATA_Z, align 4, align-sorted
     10          int number_reald;  // Number of real dialogs
   \                     number_reald:
   \   00000000                      DS8 4

   \                                 In segment DATA_Z, align 4, align-sorted
     11          int number_nsd;  // Number of new style dialogs
   \                     number_nsd:
   \   00000000                      DS8 4
     12          extern int show_daemons;
     13          extern CSM_RAM *under_idle;
     14          extern int tasks;
     15          

   \                                 In segment DATA_C, align 4, align-sorted
     16          const int SHOW_IDLESCREEN=1;
   \                     SHOW_IDLESCREEN:
   \   00000000   01000000           DC32 1
     17          

   \                                 In segment DATA_C, align 4, align-sorted
     18          const CSM_DESC maincsm;
   \                     maincsm:
   \   00000000   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000010   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0000        
     19          
     20          typedef struct
     21          {
     22            CSM_RAM csm;
     23            int gui_id;
     24          //  int show_csm;
     25          //  int do_idle;
     26          }MAIN_CSM;
     27          

   \                                 In segment DATA_Z, align 4, align-sorted
     28          int my_csm_id;
   \                     my_csm_id:
   \   00000000                      DS8 4
     29          
     30          #pragma inline=forced
     31          int toupper(int c)
     32          {
     33            if ((c>='a')&&(c<='z')) c+='A'-'a';
     34            return(c);
     35          }
     36          

   \                                 In segment CODE, align 4, keep-with-next
     37          int strncmp_nocase(const char *s1,const char *s2,unsigned int n)
     38          {
   \                     strncmp_nocase:
   \   00000000   10002DE9           PUSH     {R4}
     39            int i;
     40            int c;
     41            while(!(i=(c=toupper(*s1++))-toupper(*s2++))&&(--n)) if (!c) break;
   \                     ??strncmp_nocase_0:
   \   00000004   0030D0E5           LDRB     R3,[R0, #+0]
   \   00000008   610053E3           CMP      R3,#+97
   \   0000000C   010000BA           BLT      ??strncmp_nocase_1
   \   00000010   7B0053E3           CMP      R3,#+123
   \   00000014   203043B2           SUBLT    R3,R3,#+32
   \                     ??strncmp_nocase_1:
   \   00000018   0040D1E5           LDRB     R4,[R1, #+0]
   \   0000001C   010080E2           ADD      R0,R0,#+1
   \   00000020   03C0A0E1           MOV      R12,R3
   \   00000024   610054E3           CMP      R4,#+97
   \   00000028   010000BA           BLT      ??strncmp_nocase_2
   \   0000002C   7B0054E3           CMP      R4,#+123
   \   00000030   204044B2           SUBLT    R4,R4,#+32
   \                     ??strncmp_nocase_2:
   \   00000034   011081E2           ADD      R1,R1,#+1
   \   00000038   043053E0           SUBS     R3,R3,R4
   \   0000003C   0200001A           BNE      ??strncmp_nocase_3
   \   00000040   012052E2           SUBS     R2,R2,#+1
   \   00000044   00005C13           CMPNE    R12,#+0
   \   00000048   EDFFFF1A           BNE      ??strncmp_nocase_0
     42            return(i);
   \                     ??strncmp_nocase_3:
   \   0000004C   1000BDE8           POP      {R4}
   \   00000050   0300A0E1           MOV      R0,R3
   \   00000054   1EFF2FE1           BX       LR               ;; return
     43          }
     44          

   \                                 In segment DATA_Z, align 4, align-sorted
     45          char csm_text[32768];
   \                     csm_text:
   \   00000000                      DS8 32768
     46          

   \                                 In segment DATA_C, align 1, align-sorted
     47          const char percent_t[]="%t";
   \                     percent_t:
   \   00000000   257400             DC8 "%t"
     48          

   \                                 In segment CODE, align 4, keep-with-next
     49          void ClearNL(void)
     50          {
   \                     ClearNL:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
     51            LockSched();
   \   00000004   460100EF           SWI      +326
     52            NAMELIST *nl=nltop;
   \   00000008   ........           LDR      R0,??DataTable3  ;; nltop
     53            nltop=0;
   \   0000000C   0010A0E3           MOV      R1,#+0
   \   00000010   004090E5           LDR      R4,[R0, #+0]
   \   00000014   001080E5           STR      R1,[R0, #+0]
     54            UnlockSched();
   \   00000018   470100EF           SWI      +327
   \   0000001C   000054E3           CMP      R4,#+0
   \   00000020   3080BD08           POPEQ    {R4,R5,PC}
     55            while(nl)
     56            {
     57              NAMELIST *p=nl;
     58              FreeWS(nl->name);
   \                     ??ClearNL_0:
   \   00000024   080094E5           LDR      R0,[R4, #+8]
   \   00000028   0450A0E1           MOV      R5,R4
   \   0000002C   290100EF           SWI      +297
     59              zeromem(nl->icon_path, 64);
   \   00000030   4010A0E3           MOV      R1,#+64
   \   00000034   140084E2           ADD      R0,R4,#+20
   \   00000038   1D0100EF           SWI      +285
     60              nl=p->next;
   \   0000003C   004095E5           LDR      R4,[R5, #+0]
     61              mfree(p);
   \   00000040   0500A0E1           MOV      R0,R5
   \   00000044   150000EF           SWI      +21
     62            }
   \   00000048   000054E3           CMP      R4,#+0
   \   0000004C   F4FFFF1A           BNE      ??ClearNL_0
     63          }
   \   00000050   3080BDE8           POP      {R4,R5,PC}       ;; return
     64          

   \                                 In segment CODE, align 4, keep-with-next
     65          void AddNL(WSHDR *ws, int is_daemon)
     66          {
   \                     AddNL:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
     67            NAMELIST *nnl=malloc(sizeof(NAMELIST));
   \   0000000C   5400A0E3           MOV      R0,#+84
   \   00000010   140000EF           SWI      +20
   \   00000014   0060A0E1           MOV      R6,R0
     68            //if(!nnl->icon_path)
     69            //Search_icon(ws, nnl);
     70            nnl->name=ws;
   \   00000018   084086E5           STR      R4,[R6, #+8]
     71            nnl->next=0;
   \   0000001C   0000A0E3           MOV      R0,#+0
   \   00000020   000086E5           STR      R0,[R6, #+0]
     72            nnl->is_daemon=is_daemon;
   \   00000024   105086E5           STR      R5,[R6, #+16]
     73            
     74           // strcpy(nnl->icon_path, path_name);
     75            LockSched();
   \   00000028   460100EF           SWI      +326
     76            if (!nltop)
   \   0000002C   ........           LDR      R0,??DataTable3  ;; nltop
   \   00000030   001090E5           LDR      R1,[R0, #+0]
   \   00000034   000051E3           CMP      R1,#+0
     77            {
     78              nltop=nnl;
     79            }
     80            else
     81            {
     82              nnl->next=nltop;
   \   00000038   00109015           LDRNE    R1,[R0, #+0]
   \   0000003C   00108615           STRNE    R1,[R6, #+0]
     83              nltop=nnl;
   \   00000040   006080E5           STR      R6,[R0, #+0]
     84            }
     85            UnlockSched();
   \   00000044   470100EF           SWI      +327
     86          }
   \   00000048   7080BDE8           POP      {R4-R6,PC}       ;; return
     87          

   \                                 In segment CODE, align 4, keep-with-next
     88          char *find_name(CSM_RAM *csm)
     89          {
     90            char s[40];
     91            char *p;
     92            static char u[40];
     93          
     94            CSM_DESC *desc=csm->constr;
     95          
     96            sprintf(s,"%08X ",desc);
   \                     find_name:
   \   00000000   4C109FE5           LDR      R1,??find_name_0  ;; `?<Constant "%08X ">`
   \   00000004   30402DE9           PUSH     {R4,R5,LR}
   \   00000008   28D04DE2           SUB      SP,SP,#+40
   \   0000000C   084090E5           LDR      R4,[R0, #+8]
   \   00000010   0D00A0E1           MOV      R0,SP
   \   00000014   0420A0E1           MOV      R2,R4
   \   00000018   160000EF           SWI      +22
     97            p=strstr(csm_text,s);
   \   0000001C   34009FE5           LDR      R0,??find_name_0+0x4  ;; csm_text
   \   00000020   0D10A0E1           MOV      R1,SP
   \   00000024   180100EF           SWI      +280
     98            if (p)
   \   00000028   000050E3           CMP      R0,#+0
     99            {
    100              return(p+9);
   \   0000002C   09008012           ADDNE    R0,R0,#+9
   \   00000030   0500001A           BNE      ??find_name_1
    101            }
    102            else
    103            {
    104              sprintf(u,"Unknown %08X!",desc);
   \   00000034   20509FE5           LDR      R5,??find_name_0+0x8  ;; ??u
   \   00000038   20109FE5           LDR      R1,??find_name_0+0xC  ;; `?<Constant "Unknown %08X!">`
   \   0000003C   0420A0E1           MOV      R2,R4
   \   00000040   0500A0E1           MOV      R0,R5
   \   00000044   160000EF           SWI      +22
    105              return(u);
   \   00000048   0500A0E1           MOV      R0,R5
   \                     ??find_name_1:
   \   0000004C   28D08DE2           ADD      SP,SP,#+40       ;; stack cleaning
   \   00000050   3080BDE8           POP      {R4,R5,PC}       ;; return
   \                     ??find_name_0:
   \   00000054   ........           DC32     `?<Constant "%08X ">`
   \   00000058   ........           DC32     csm_text
   \   0000005C   ........           DC32     ??u
   \   00000060   ........           DC32     `?<Constant "Unknown %08X!">`
    106            }
    107          }

   \                                 In segment DATA_Z, align 4, align-sorted
   \                     ??u:
   \   00000000                      DS8 40
    108          

   \                                 In segment CODE, align 4, keep-with-next
    109          int GetNumberOfDialogs(void)
    110          {
   \                     GetNumberOfDialogs:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
    111            int count=0;
    112            int c;
    113            int i;
    114            CSM_RAM *icsm;
    115            WSHDR *ws;
    116            char ss[64];
    117          
    118            void *ircsm=FindCSMbyID(CSM_root()->idle_id);
    119            ClearNL();
    120            //Find new style daemons
    121            number_nsd=0;
   \   00000004   80529FE5           LDR      R5,??GetNumberOfDialogs_0  ;; number_nsd
    122            if (show_daemons)
   \   00000008   ........           LDR      R6,??DataTable3  ;; nltop
   \   0000000C   7C729FE5           LDR      R7,??GetNumberOfDialogs_0+0x4  ;; 0x55aacccc
   \   00000010   44D04DE2           SUB      SP,SP,#+68
   \   00000014   068100EF           SWI      +33030
   \   00000018   040090E5           LDR      R0,[R0, #+4]
   \   0000001C   0040A0E3           MOV      R4,#+0
   \   00000020   080100EF           SWI      +264
   \   00000024   00008DE5           STR      R0,[SP, #+0]
   \   00000028   ........           BL       ClearNL
   \   0000002C   0000A0E3           MOV      R0,#+0
   \   00000030   000085E5           STR      R0,[R5, #+0]
   \   00000034   58029FE5           LDR      R0,??GetNumberOfDialogs_0+0x8  ;; show_daemons
   \   00000038   000090E5           LDR      R0,[R0, #+0]
   \   0000003C   000050E3           CMP      R0,#+0
   \   00000040   2300000A           BEQ      ??GetNumberOfDialogs_1
    123            {
    124              icsm=((CSM_RAM *)(CSM_root()->csm_q->csm.first))->next; //������ ������������ CSM �������
   \   00000044   068100EF           SWI      +33030
   \   00000048   080090E5           LDR      R0,[R0, #+8]
   \   0000004C   080090E5           LDR      R0,[R0, #+8]
   \   00000050   009090E5           LDR      R9,[R0, #+0]
   \   00000054   080099E5           LDR      R0,[R9, #+8]
   \   00000058   A00DA0E1           LSR      R0,R0,#+27
   \   0000005C   150050E3           CMP      R0,#+21
   \   00000060   1B00001A           BNE      ??GetNumberOfDialogs_1
    125              while(((unsigned int)(icsm->constr)>>27)==0x15)
    126              {
    127                WSHDR *tws=(WSHDR *)(((char *)icsm->constr)+sizeof(CSM_DESC));
   \                     ??GetNumberOfDialogs_2:
   \   00000064   080099E5           LDR      R0,[R9, #+8]
   \   00000068   18A080E2           ADD      R10,R0,#+24
    128                if((tws->ws_malloc==NAMECSM_MAGIC1)&&(tws->ws_mfree==NAMECSM_MAGIC2))
   \   0000006C   04009AE5           LDR      R0,[R10, #+4]
   \   00000070   070050E1           CMP      R0,R7
   \   00000074   1100001A           BNE      ??GetNumberOfDialogs_3
   \   00000078   08009AE5           LDR      R0,[R10, #+8]
   \   0000007C   14129FE5           LDR      R1,??GetNumberOfDialogs_0+0xC  ;; 0x3333aa55
   \   00000080   010050E1           CMP      R0,R1
   \   00000084   0D00001A           BNE      ??GetNumberOfDialogs_3
    129                {
    130                  ws=AllocWS(64);
   \   00000088   4000A0E3           MOV      R0,#+64
   \   0000008C   250100EF           SWI      +293
   \   00000090   0080A0E1           MOV      R8,R0
    131                  wstrcpy(ws,tws);
   \   00000094   0A10A0E1           MOV      R1,R10
   \   00000098   1F0100EF           SWI      +287
    132                  AddNL(ws,1);
   \   0000009C   0110A0E3           MOV      R1,#+1
   \   000000A0   0800A0E1           MOV      R0,R8
   \   000000A4   ........           BL       AddNL
    133                  nltop->p=icsm;
   \   000000A8   000096E5           LDR      R0,[R6, #+0]
    134                  count++;                  
   \   000000AC   014084E2           ADD      R4,R4,#+1
   \   000000B0   0C9080E5           STR      R9,[R0, #+12]
    135                  number_nsd++;         // count new style dialogs
   \   000000B4   000095E5           LDR      R0,[R5, #+0]
   \   000000B8   010080E2           ADD      R0,R0,#+1
   \   000000BC   000085E5           STR      R0,[R5, #+0]
    136                }
    137                icsm=icsm->next;
   \                     ??GetNumberOfDialogs_3:
   \   000000C0   009099E5           LDR      R9,[R9, #+0]
    138              }
   \   000000C4   080099E5           LDR      R0,[R9, #+8]
   \   000000C8   A00DA0E1           LSR      R0,R0,#+27
   \   000000CC   150050E3           CMP      R0,#+21
   \   000000D0   E3FFFF0A           BEQ      ??GetNumberOfDialogs_2
    139            }
    140            icsm=under_idle->next; //������ ��������
   \                     ??GetNumberOfDialogs_1:
   \   000000D4   C0019FE5           LDR      R0,??GetNumberOfDialogs_0+0x10  ;; under_idle
   \   000000D8   000090E5           LDR      R0,[R0, #+0]
   \   000000DC   009090E5           LDR      R9,[R0, #+0]
    141            do
    142            {
    143              if (icsm==ircsm)
   \                     ??GetNumberOfDialogs_4:
   \   000000E0   00009DE5           LDR      R0,[SP, #+0]
   \   000000E4   01A084E2           ADD      R10,R4,#+1
   \   000000E8   000059E1           CMP      R9,R0
   \   000000EC   0500001A           BNE      ??GetNumberOfDialogs_5
    144              {
    145                if (SHOW_IDLESCREEN)
    146                {
    147                  ws=AllocWS(40);
   \   000000F0   2800A0E3           MOV      R0,#+40
   \   000000F4   250100EF           SWI      +293
    148                  wsprintf(ws,"IDLE Screen");
   \   000000F8   A0119FE5           LDR      R1,??GetNumberOfDialogs_0+0x14  ;; `?<Constant "IDLE Screen">`
   \   000000FC   0080A0E1           MOV      R8,R0
   \                     ??GetNumberOfDialogs_6:
   \   00000100   240100EF           SWI      +292
    149                  AddNL(ws,0);
   \   00000104   4D0000EA           B        ??GetNumberOfDialogs_7
    150                  nltop->p=icsm;
    151                  count++;
    152                }
    153              }
    154              else
    155              {
    156                if (icsm->constr!=&maincsm)
   \                     ??GetNumberOfDialogs_5:
   \   00000108   080099E5           LDR      R0,[R9, #+8]
   \   0000010C   90119FE5           LDR      R1,??GetNumberOfDialogs_0+0x18  ;; maincsm
   \   00000110   010050E1           CMP      R0,R1
   \   00000114   4F00000A           BEQ      ??GetNumberOfDialogs_8
    157                {
    158          	WSHDR *tws=(WSHDR *)(((char *)icsm->constr)+sizeof(CSM_DESC));
   \   00000118   18B080E2           ADD      R11,R0,#+24
    159          	char *s;
    160          	if((tws->ws_malloc==NAMECSM_MAGIC1)&&(tws->ws_mfree==NAMECSM_MAGIC2))
   \   0000011C   04009BE5           LDR      R0,[R11, #+4]
   \   00000120   070050E1           CMP      R0,R7
   \   00000124   0900001A           BNE      ??GetNumberOfDialogs_9
   \   00000128   08009BE5           LDR      R0,[R11, #+8]
   \   0000012C   64119FE5           LDR      R1,??GetNumberOfDialogs_0+0xC  ;; 0x3333aa55
   \   00000130   010050E1           CMP      R0,R1
   \   00000134   0500001A           BNE      ??GetNumberOfDialogs_9
    161          	{
    162          	  ws=AllocWS(64);
   \   00000138   4000A0E3           MOV      R0,#+64
   \   0000013C   250100EF           SWI      +293
   \   00000140   0080A0E1           MOV      R8,R0
    163          	  wstrcpy(ws,tws);
   \   00000144   0B10A0E1           MOV      R1,R11
   \   00000148   1F0100EF           SWI      +287
    164          	  AddNL(ws,0);
   \   0000014C   3B0000EA           B        ??GetNumberOfDialogs_7
    165          	  nltop->p=icsm;
    166          	  count++;
    167          	}
    168          	else
    169          	{
    170          	  s=find_name(icsm);
   \                     ??GetNumberOfDialogs_9:
   \   00000150   0900A0E1           MOV      R0,R9
   \   00000154   ........           BL       find_name
    171          #ifdef NEWSGOLD
    172          	  if (!strncmp_nocase(s,"Java",4))
    173          	  {
    174          	    typedef struct
    175          	    {
    176          	      CSM_RAM csm;
    177          	      int unk1;
    178          	      int bearer;
    179          	      int gui_id;
    180          	      int unk2;
    181          	      int param_R1;
    182          	      int param_ZERO;
    183          	    }JAVAINTERFACE_CSM;
    184          	    int i=((JAVAINTERFACE_CSM *)icsm)->bearer;
    185          	    int j=((JAVAINTERFACE_CSM *)icsm)->param_R1;
    186          	    if (i==2) continue;
    187          	    ws=AllocWS(64);
    188          	    switch(i)
    189          	    {
    190          	    case 1:
    191          	      wsprintf(ws,"Browser",j);
    192          	      break;
    193          	    case 2:
    194          	      wsprintf(ws,"Jam %d",j);
    195          	      break;
    196          	    case 3:
    197          	      switch(j)
    198          	      {
    199          	      case 2:
    200          		wsprintf(ws,"Phone Java");
    201          		break;
    202          	      case 3:
    203          		wsprintf(ws,"User Java");
    204          		break;
    205          	      default:
    206          		wsprintf(ws,"Unknown Java (%d)",j);
    207          		break;
    208          	      }
    209          	      break;
    210          	    default:
    211          	      wsprintf(ws,"Unknown %d(%d) bearer",i,j);
    212          	      break;
    213          	    }
    214          	    goto L_ADD;
    215          	  }
    216          #else
    217                    if (!strncmp_nocase(s,"Java",4))
   \   00000158   48119FE5           LDR      R1,??GetNumberOfDialogs_0+0x1C  ;; `?<Constant "Java">`
   \   0000015C   00B0A0E1           MOV      R11,R0
   \   00000160   0420A0E3           MOV      R2,#+4
   \   00000164   ........           BL       strncmp_nocase
   \   00000168   000050E3           CMP      R0,#+0
   \   0000016C   1A00001A           BNE      ??GetNumberOfDialogs_10
    218          	  {
    219          	    typedef struct
    220          	    {
    221          	      CSM_RAM csm;
    222          	      int bearer;
    223          	      int gui_id;
    224          	      int gui_id2;
    225          	    }JAVAINTERFACE_CSM;
    226          	    int i=((JAVAINTERFACE_CSM *)icsm)->bearer;
   \   00000170   284099E5           LDR      R4,[R9, #+40]
    227          	    ws=AllocWS(64);
   \   00000174   4000A0E3           MOV      R0,#+64
   \   00000178   250100EF           SWI      +293
   \   0000017C   0080A0E1           MOV      R8,R0
    228          	    switch(i)
   \   00000180   010054E2           SUBS     R0,R4,#+1
   \   00000184   0600000A           BEQ      ??GetNumberOfDialogs_11
   \   00000188   0E0050E2           SUBS     R0,R0,#+14
   \   0000018C   0700000A           BEQ      ??GetNumberOfDialogs_12
   \   00000190   020050E2           SUBS     R0,R0,#+2
   \   00000194   0700000A           BEQ      ??GetNumberOfDialogs_13
   \   00000198   010050E2           SUBS     R0,R0,#+1
   \   0000019C   0900000A           BEQ      ??GetNumberOfDialogs_14
   \   000001A0   0A0000EA           B        ??GetNumberOfDialogs_15
    229          	    {
    230          	    case 1:
    231          	      wsprintf(ws,"Browser");
   \                     ??GetNumberOfDialogs_11:
   \   000001A4   00119FE5           LDR      R1,??GetNumberOfDialogs_0+0x20  ;; `?<Constant "Browser">`
   \                     ??GetNumberOfDialogs_16:
   \   000001A8   0800A0E1           MOV      R0,R8
   \   000001AC   D3FFFFEA           B        ??GetNumberOfDialogs_6
    232          	      break;
    233          	    case 0xF:
    234                        wsprintf(ws,"User Java");
   \                     ??GetNumberOfDialogs_12:
   \   000001B0   F8109FE5           LDR      R1,??GetNumberOfDialogs_0+0x24  ;; `?<Constant "User Java">`
   \   000001B4   FBFFFFEA           B        ??GetNumberOfDialogs_16
    235          	      break;
    236                      case 0x11:
    237          #ifdef X75
    238                        wsprintf(ws,"Java: %t",GetLastJavaApplication());
   \                     ??GetNumberOfDialogs_13:
   \   000001B8   E70100EF           SWI      +487
   \   000001BC   F0109FE5           LDR      R1,??GetNumberOfDialogs_0+0x28  ;; `?<Constant "Java: %t">`
   \   000001C0   0020A0E1           MOV      R2,R0
   \   000001C4   1B0000EA           B        ??GetNumberOfDialogs_17
    239          #else
    240                        wsprintf(ws,"Java");
    241          #endif
    242          	      break; 
    243                      case 18:
    244                        wsprintf(ws,"E-mail client");
   \                     ??GetNumberOfDialogs_14:
   \   000001C8   E8109FE5           LDR      R1,??GetNumberOfDialogs_0+0x2C  ;; `?<Constant "E-mail client">`
   \   000001CC   F5FFFFEA           B        ??GetNumberOfDialogs_16
    245          	      break; 
    246                      default:
    247                        wsprintf(ws,"Unknown %d bearer",i);
   \                     ??GetNumberOfDialogs_15:
   \   000001D0   E4109FE5           LDR      R1,??GetNumberOfDialogs_0+0x30  ;; `?<Constant "Unknown %d bearer">`
   \   000001D4   0420A0E1           MOV      R2,R4
   \   000001D8   160000EA           B        ??GetNumberOfDialogs_17
    248                        break;
    249          	    }
    250          	    goto L_ADD;
    251          	  }
    252          #endif
    253          	  if (strncmp(s,"!SKIP!",6))
   \                     ??GetNumberOfDialogs_10:
   \   000001DC   DC109FE5           LDR      R1,??GetNumberOfDialogs_0+0x34  ;; `?<Constant "!SKIP!">`
   \   000001E0   0620A0E3           MOV      R2,#+6
   \   000001E4   0B00A0E1           MOV      R0,R11
   \   000001E8   150100EF           SWI      +277
   \   000001EC   000050E3           CMP      R0,#+0
   \   000001F0   1800000A           BEQ      ??GetNumberOfDialogs_8
    254          	  {
    255          	    ws=AllocWS(64);
   \   000001F4   4000A0E3           MOV      R0,#+64
   \   000001F8   250100EF           SWI      +293
   \   000001FC   0080A0E1           MOV      R8,R0
    256          	    i=0;
   \   00000200   0000A0E3           MOV      R0,#+0
   \   00000204   020000EA           B        ??GetNumberOfDialogs_18
    257          	    while((c=*s++)>=' ')
    258          	    {
    259          	      if (i<(sizeof(ss)-1)) ss[i++]=c;
   \                     ??GetNumberOfDialogs_19:
   \   00000208   3F0050E3           CMP      R0,#+63
   \   0000020C   0020C135           STRBCC   R2,[R1, #+0]
   \   00000210   01008032           ADDCC    R0,R0,#+1
    260          	    }
   \                     ??GetNumberOfDialogs_18:
   \   00000214   ........           LDRB     R2,[R11], #+1
   \   00000218   04108DE2           ADD      R1,SP,#+4
   \   0000021C   011080E0           ADD      R1,R0,R1
   \   00000220   200052E3           CMP      R2,#+32
   \   00000224   F7FFFFAA           BGE      ??GetNumberOfDialogs_19
    261          	    ss[i]=0;
   \   00000228   0000A0E3           MOV      R0,#+0
   \   0000022C   0000C1E5           STRB     R0,[R1, #+0]
    262          	    wsprintf(ws,percent_t,ss);
   \   00000230   8C109FE5           LDR      R1,??GetNumberOfDialogs_0+0x38  ;; percent_t
   \   00000234   04208DE2           ADD      R2,SP,#+4
   \                     ??GetNumberOfDialogs_17:
   \   00000238   0800A0E1           MOV      R0,R8
   \   0000023C   240100EF           SWI      +292
    263          	  L_ADD:
    264          	    AddNL(ws,0);
   \                     ??GetNumberOfDialogs_7:
   \   00000240   0010A0E3           MOV      R1,#+0
   \   00000244   0800A0E1           MOV      R0,R8
   \   00000248   ........           BL       AddNL
    265          	    nltop->p=icsm;
   \   0000024C   000096E5           LDR      R0,[R6, #+0]
    266          	    count++;
   \   00000250   0A40A0E1           MOV      R4,R10
   \   00000254   0C9080E5           STR      R9,[R0, #+12]
    267          	  }
    268          	}
    269                }
    270              }
    271            }
    272            while((icsm=icsm->next));
   \                     ??GetNumberOfDialogs_8:
   \   00000258   009099E5           LDR      R9,[R9, #+0]
   \   0000025C   000059E3           CMP      R9,#+0
   \   00000260   9EFFFF1A           BNE      ??GetNumberOfDialogs_4
    273            number_reald=count-number_nsd;
   \   00000264   5C009FE5           LDR      R0,??GetNumberOfDialogs_0+0x3C  ;; number_reald
   \   00000268   001095E5           LDR      R1,[R5, #+0]
   \   0000026C   011044E0           SUB      R1,R4,R1
   \   00000270   001080E5           STR      R1,[R0, #+0]
    274            tasks=count-1;
   \   00000274   50009FE5           LDR      R0,??GetNumberOfDialogs_0+0x40  ;; tasks
   \   00000278   011044E2           SUB      R1,R4,#+1
   \   0000027C   001080E5           STR      R1,[R0, #+0]
    275            return(count);
   \   00000280   0400A0E1           MOV      R0,R4
   \   00000284   44D08DE2           ADD      SP,SP,#+68
   \   00000288   F08FBDE8           POP      {R4-R11,PC}      ;; return
   \                     ??GetNumberOfDialogs_0:
   \   0000028C   ........           DC32     number_nsd
   \   00000290   CCCCAA55           DC32     0x55aacccc
   \   00000294   ........           DC32     show_daemons
   \   00000298   55AA3333           DC32     0x3333aa55
   \   0000029C   ........           DC32     under_idle
   \   000002A0   ........           DC32     `?<Constant "IDLE Screen">`
   \   000002A4   ........           DC32     maincsm
   \   000002A8   ........           DC32     `?<Constant "Java">`
   \   000002AC   ........           DC32     `?<Constant "Browser">`
   \   000002B0   ........           DC32     `?<Constant "User Java">`
   \   000002B4   ........           DC32     `?<Constant "Java: %t">`
   \   000002B8   ........           DC32     `?<Constant "E-mail client">`
   \   000002BC   ........           DC32     `?<Constant "Unknown %d bearer">`
   \   000002C0   ........           DC32     `?<Constant "!SKIP!">`
   \   000002C4   ........           DC32     percent_t
   \   000002C8   ........           DC32     number_reald
   \   000002CC   ........           DC32     tasks
    276          }
    277          

   \                                 In segment CODE, align 4, keep-with-next
    278          NAMELIST *get_nlitem(int curitem)
    279          {
    280            NAMELIST *nl;
    281            nl=nltop;
   \                     get_nlitem:
   \   00000000   ........           LDR      R1,??DataTable3  ;; nltop
    282            int i=0;
   \   00000004   0020A0E3           MOV      R2,#+0
   \   00000008   001091E5           LDR      R1,[R1, #+0]
   \   0000000C   010000EA           B        ??get_nlitem_0
    283            while(nl)
    284            {
    285              if (i==curitem) break;
    286              i++;
    287              nl=nl->next;
   \                     ??get_nlitem_1:
   \   00000010   001091E5           LDR      R1,[R1, #+0]
   \   00000014   012082E2           ADD      R2,R2,#+1
   \                     ??get_nlitem_0:
   \   00000018   000051E3           CMP      R1,#+0
   \   0000001C   00005211           CMPNE    R2,R0
   \   00000020   FAFFFF1A           BNE      ??get_nlitem_1
    288            }
    289            return(nl);
   \   00000024   0100A0E1           MOV      R0,R1
   \   00000028   1EFF2FE1           BX       LR               ;; return
    290          }

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   ........           DC32     nltop

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "%08X ">`:
   \   00000000   253038582000       DC8 "%08X "
   \   00000006   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Unknown %08X!">`:
   \   00000000   556E6B6E6F77       DC8 "Unknown %08X!"
   \              6E2025303858
   \              2100        
   \   0000000E   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "IDLE Screen">`:
   \   00000000   49444C452053       DC8 "IDLE Screen"
   \              637265656E00

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Browser">`:
   \   00000000   42726F777365       DC8 "Browser"
   \              7200        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "User Java">`:
   \   00000000   55736572204A       DC8 "User Java"
   \              61766100    
   \   0000000A   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Java: %t">`:
   \   00000000   4A6176613A20       DC8 "Java: %t"
   \              257400      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "E-mail client">`:
   \   00000000   452D6D61696C       DC8 "E-mail client"
   \              20636C69656E
   \              7400        
   \   0000000E   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Unknown %d bearer">`:
   \   00000000   556E6B6E6F77       DC8 "Unknown %d bearer"
   \              6E2025642062
   \              656172657200
   \   00000012   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Java">`:
   \   00000000   4A61766100         DC8 "Java"
   \   00000005   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "!SKIP!">`:
   \   00000000   21534B495021       DC8 "!SKIP!"
   \              00          
   \   00000007   00                 DC8 0
    291          

   Maximum stack usage in bytes:

     Function           CSTACK
     --------           ------
     AddNL                 16
     ClearNL               12
     GetNumberOfDialogs   104
     find_name             52
     get_nlitem             0
     strncmp_nocase         4


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     nltop                              4
     number_reald                       4
     number_nsd                         4
     SHOW_IDLESCREEN                    4
     maincsm                           24
     my_csm_id                          4
     strncmp_nocase                    88
     csm_text                       32768
     percent_t                          3
     ClearNL                           84
     AddNL                             76
     find_name                        100
     u                                 40
     GetNumberOfDialogs               720
     get_nlitem                        44
     ??DataTable3                       4
     ?<Constant "%08X ">                8
     ?<Constant "Unknown %08X!">       16
     ?<Constant "IDLE Screen">         12
     ?<Constant "Browser">              8
     ?<Constant "User Java">           12
     ?<Constant "Java: %t">            12
     ?<Constant "E-mail client">       16
     ?<Constant "Unknown %d bearer">
                                       20
     ?<Constant "Java">                 8
     ?<Constant "!SKIP!">               8
      Others                           36

 
  1 140 bytes in segment CODE
    151 bytes in segment DATA_C
 32 824 bytes in segment DATA_Z
     12 bytes in segment INITTAB
 
  1 116 bytes of CODE  memory (+ 36 bytes shared)
    151 bytes of CONST memory
 32 824 bytes of DATA  memory

Errors: none
Warnings: none
