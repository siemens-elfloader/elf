//////////////////////////////////////////////////////////////////////////////
//                                                                           /
// IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION   09/Jul/2008  15:34:02 /
// Copyright 1999-2005 IAR Systems. All rights reserved.                     /
//                                                                           /
//    Cpu mode        =  interwork                                           /
//    Endian          =  little                                              /
//    Stack alignment =  4                                                   /
//    Source file     =  F:\siemens\elfs\n_start menu 2 by fox\init.c        /
//    Command line    =  "F:\siemens\elfs\n_start menu 2 by fox\init.c" -D   /
//                       NEWSGOLD -lC "F:\siemens\elfs\n_start menu 2 by     /
//                       fox\Release_NSG\List\" -lA                          /
//                       "F:\siemens\elfs\n_start menu 2 by                  /
//                       fox\Release_NSG\List\" -o "F:\siemens\elfs\n_start  /
//                       menu 2 by fox\Release_NSG\Obj\" -s9 --no_unroll     /
//                       --cpu_mode arm --endian little --cpu ARM926EJ-S     /
//                       --stack_align 4 --interwork -e --fpu None           /
//                       --dlib_config "C:\Program Files\iar\Embedded        /
//                       Workbench 4.0 Evaluation\ARM\LIB\dl5tpainl8n.h" -I  /
//                       "C:\Program Files\iar\Embedded Workbench 4.0        /
//                       Evaluation\ARM\INC\" --inline_threshold=2           /
//    List file       =  F:\siemens\elfs\n_start menu 2 by                   /
//                       fox\Release_NSG\List\init.s79                       /
//                                                                           /
//                                                                           /
//////////////////////////////////////////////////////////////////////////////

        NAME init

        RTMODEL "StackAlign4", "USED"
        RTMODEL "__cpu_mode", "__pcs__interwork"
        RTMODEL "__data_model", "absolute"
        RTMODEL "__endian", "little"
        RTMODEL "__rt_version", "6"

        RSEG CSTACK:DATA:NOROOT(2)

        MULTWEAK ??InitFiles??rT
        MULTWEAK ??InitUnderlinks_count??rT
        PUBWEAK ?init?tab?DATA_Z
        PUBLIC InitFiles
        FUNCTION InitFiles,0201H
        LOCFRAME CSTACK, 4, STACK
        PUBLIC InitUnderlinks_count
        FUNCTION InitUnderlinks_count,0201H
        LOCFRAME CSTACK, 64, STACK
        PUBLIC LinkCounters
        PUBLIC temp
        
        CFI Names cfiNames0
        CFI StackFrame CFA R13 HUGEDATA
        CFI Resource R0:32, R1:32, R2:32, R3:32, R4:32, R5:32, R6:32, R7:32
        CFI Resource R8:32, R9:32, R10:32, R11:32, R12:32, CPSR:32, R13:32
        CFI Resource R14:32, SPSR:32
        CFI VirtualResource ?RET:32
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 2
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon0
        
        
        CFI Common cfiCommon1 Using cfiNames0
        CFI CodeAlign 4
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon1
        
InitFiles           SYMBOL "InitFiles"
??InitFiles??rT     SYMBOL "??rT", InitFiles
InitUnderlinks_count SYMBOL "InitUnderlinks_count"
??InitUnderlinks_count??rT SYMBOL "??rT", InitUnderlinks_count

        EXTERN path

// F:\siemens\elfs\n_start menu 2 by fox\init.c
//    1 #include "..\inc\swilib.h"
//    2 
//    3 extern const char path[128];

        RSEG DATA_Z:DATA:SORT:NOROOT(2)
//    4 char temp[128];
//    5 char LinkCounters[10];
LinkCounters:
        DS8 12
temp:
        DS8 128

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock0 Using cfiCommon0
        CFI NoFunction
        THUMB
??InitUnderlinks_count??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock0
        REQUIRE InitUnderlinks_count
//    6 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock1 Using cfiCommon1
        CFI Function InitUnderlinks_count
        ARM
//    7 void InitUnderlinks_count()
//    8 {
//    9   int f;
//   10   int fsize;
//   11   FSTATS stat;
//   12   unsigned int ul;
//   13   sprintf(temp, "%slinkcounters.fx", path);
InitUnderlinks_count:
        LDR      R2,??InitUnderlinks_count_0  ;; path
        LDR      R1,??InitUnderlinks_count_0+0x4  ;; `?<Constant "%slinkcounters.fx">`
        PUSH     {R4-R7,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R7 Frame(CFA, -8)
        CFI R6 Frame(CFA, -12)
        CFI R5 Frame(CFA, -16)
        CFI R4 Frame(CFA, -20)
        CFI CFA R13+20
        LDR      R4,??InitUnderlinks_count_0+0x8  ;; LinkCounters
        SUB      SP,SP,#+44
        CFI CFA R13+64
        ADD      R0,R4,#+12
        SWI      +22
//   14   GetFileStats(temp,&stat,&ul);
        MOV      R2,SP
        ADD      R1,SP,#+4
        ADD      R0,R4,#+12
        SWI      +132
//   15   if(stat.size>0)
        LDR      R0,[SP, #+8]
        CMP      R0,#+0
        BEQ      ??InitUnderlinks_count_1
//   16   {
//   17     f=fopen(temp,A_ReadOnly+A_BIN,P_READ,&ul);
        MOV      R3,SP
        MOV      R2,#+128
        MOV      R1,#+32768
        ADD      R0,R4,#+12
        SWI      +10
//   18     fsize=stat.size;
        LDR      R6,[SP, #+8]
        MOV      R5,R0
//   19     char *p=malloc(fsize);
        MOV      R0,R6
        SWI      +20
        MOV      R7,R0
//   20     p[fread(f,p,fsize,&ul)];
        MOV      R3,SP
        MOV      R2,R6
        MOV      R1,R7
        MOV      R0,R5
        SWI      +11
//   21     fclose(f,&ul);
        MOV      R1,SP
        MOV      R0,R5
        SWI      +13
//   22     strcpy(LinkCounters, p);
        MOV      R1,R7
        MOV      R0,R4
        SWI      +26
//   23     LinkCounters[fsize]='\0';
        MOV      R0,#+0
        STRB     R0,[R6, +R4]
//   24     mfree(p);
        MOV      R0,R7
        SWI      +21
//   25   }
//   26 }
??InitUnderlinks_count_1:
        ADD      SP,SP,#+44       ;; stack cleaning
        CFI CFA R13+20
        POP      {R4-R7,PC}       ;; return
        DATA
??InitUnderlinks_count_0:
        DC32     path
        DC32     `?<Constant "%slinkcounters.fx">`
        DC32     LinkCounters
        CFI EndBlock cfiBlock1

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock2 Using cfiCommon0
        CFI NoFunction
        THUMB
??InitFiles??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock2
        REQUIRE InitFiles
//   27 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock3 Using cfiCommon1
        CFI Function InitFiles
        ARM
//   28 void InitFiles()
//   29 {
//   30   InitUnderlinks_count();
InitFiles:
        B        InitUnderlinks_count  ;; tailcall
        CFI EndBlock cfiBlock3
//   31 }

        RSEG INITTAB:CODE:ROOT(2)
        DATA
?init?tab?DATA_Z:
        DCD      sfe(DATA_Z) - sfb(DATA_Z), sfb(DATA_Z), sfb(DATA_Z)

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant "%slinkcounters.fx">`:
        DATA
        DC8 "%slinkcounters.fx"
        DC8 0, 0

        END
// 
// 188 bytes in segment CODE
//  20 bytes in segment DATA_C
// 140 bytes in segment DATA_Z
//  12 bytes in segment INITTAB
// 
// 180 bytes of CODE  memory (+ 20 bytes shared)
//  20 bytes of CONST memory
// 140 bytes of DATA  memory
//
//Errors: none
//Warnings: none
