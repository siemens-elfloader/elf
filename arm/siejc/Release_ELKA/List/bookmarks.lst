##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION    23/Feb/2011  16:37:57 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  C:\arm\siejc\bookmarks.c                             #
#    Command line    =  C:\arm\siejc\bookmarks.c -D NEWSGOLD -D ELKA         #
#                       --preprocess C:\arm\siejc\Release_ELKA\List\ -lC     #
#                       C:\arm\siejc\Release_ELKA\List\ -o                   #
#                       C:\arm\siejc\Release_ELKA\Obj\ -s9 --no_unroll       #
#                       --cpu_mode arm --endian little --cpu ARM926EJ-S      #
#                       --stack_align 4 --interwork -e --fpu None            #
#                       --dlib_config "C:\arm2\Embedded Workbench 4.0        #
#                       Evaluation\ARM\LIB\dl5tpainl8f.h" -I                 #
#                       "C:\arm2\Embedded Workbench 4.0                      #
#                       Evaluation\ARM\INC\" --inline_threshold=2            #
#    List file       =  C:\arm\siejc\Release_ELKA\List\bookmarks.lst         #
#    Object file     =  C:\arm\siejc\Release_ELKA\Obj\bookmarks.r79          #
#                                                                            #
#                                                                            #
##############################################################################

C:\arm\siejc\bookmarks.c
      1          #include "../inc/swilib.h"
      2          #include "main.h"
      3          #include "jabber_util.h"
      4          #include "bookmarks.h"
      5          #include "MUC_Enter_UI.h"
      6          #include "lang.h"
      7          #include "rect_patcher.h"
      8          #include "xml_gen.h"
      9          
     10          BM_ITEM *BM_ROOT  = NULL;
     11          int reqbook = 0; //флаг запроса закладок
     12          

   \                                 In segment CODE, align 4, keep-with-next
     13          void KillBMList()
     14          {
   \                     KillBMList:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
     15            LockSched();
     16            BM_ITEM* cl=BM_ROOT;
   \   00000004   ........           LDR      R4,??DataTable7  ;; bm_menuhdr
   \   00000008   460100EF           SWI      +326
   \   0000000C   1C5094E5           LDR      R5,[R4, #+28]
     17            BM_ROOT=NULL;
   \   00000010   0060A0E3           MOV      R6,#+0
   \   00000014   1C6084E5           STR      R6,[R4, #+28]
   \   00000018   000055E3           CMP      R5,#+0
   \   0000001C   1200000A           BEQ      ??KillBMList_0
     18            while(cl)
     19            {
     20              BM_ITEM *p;
     21              mfree(cl->bmname);
   \                     ??KillBMList_1:
   \   00000020   000095E5           LDR      R0,[R5, #+0]
   \   00000024   150000EF           SWI      +21
     22              if(cl->mucname)mfree(cl->mucname);
   \   00000028   040095E5           LDR      R0,[R5, #+4]
   \   0000002C   000050E3           CMP      R0,#+0
   \   00000030   0000000A           BEQ      ??KillBMList_2
   \   00000034   150000EF           SWI      +21
     23              if(cl->nick)mfree(cl->nick);
   \                     ??KillBMList_2:
   \   00000038   080095E5           LDR      R0,[R5, #+8]
   \   0000003C   000050E3           CMP      R0,#+0
   \   00000040   0000000A           BEQ      ??KillBMList_3
   \   00000044   150000EF           SWI      +21
     24              if(cl->pass)mfree(cl->pass);
   \                     ??KillBMList_3:
   \   00000048   0C0095E5           LDR      R0,[R5, #+12]
   \   0000004C   000050E3           CMP      R0,#+0
   \   00000050   0000000A           BEQ      ??KillBMList_4
   \   00000054   150000EF           SWI      +21
     25              p=cl;
   \                     ??KillBMList_4:
   \   00000058   0500A0E1           MOV      R0,R5
     26              cl=(BM_ITEM*)(cl->next);
   \   0000005C   105095E5           LDR      R5,[R5, #+16]
     27              mfree(p);
   \   00000060   150000EF           SWI      +21
     28              p=NULL;
     29            }
   \   00000064   000055E3           CMP      R5,#+0
   \   00000068   ECFFFF1A           BNE      ??KillBMList_1
     30            reqbook = 0;
   \                     ??KillBMList_0:
   \   0000006C   206084E5           STR      R6,[R4, #+32]
     31            UnlockSched();
   \   00000070   470100EF           SWI      +327
     32          }
   \   00000074   7080BDE8           POP      {R4-R6,PC}       ;; return
     33          

   \                                 In segment CODE, align 4, keep-with-next
     34          void Process_Bookmarks_Storage(XMLNode* nodeEx)
     35          {
   \                     Process_Bookmarks_Storage:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
     36            XMLNode *elem = nodeEx->subnode;
     37            XMLNode *tmpnode;
     38            extern const char conference_t[];
     39            extern const int MUC_AUTOJOIN;
     40            char jid[] = "jid";
   \   00000004   34429FE5           LDR      R4,??Process_Bookmarks_Storage_0+0x4  ;; `?<Constant "jid">`
   \   00000008   08D04DE2           SUB      SP,SP,#+8
   \   0000000C   001094E5           LDR      R1,[R4, #0]
   \   00000010   045090E5           LDR      R5,[R0, #+4]
   \   00000014   04008DE2           ADD      R0,SP,#+4
   \   00000018   001080E5           STR      R1,[R0, #+0]
   \   0000001C   0010A0E3           MOV      R1,#+0
   \   00000020   0010CDE5           STRB     R1,[SP, #+0]
     41            char ajoin=0;
     42            char *bm_name = NULL;
     43            char *n_name = NULL;
     44            char *c_name=NULL;
     45            char *c_nick=NULL;
     46            char *c_pass=NULL;
     47            char *c_ajoin = NULL;
   \   00000024   000000EA           B        ??Process_Bookmarks_Storage_1
     48          
     49            while(elem)
     50            {
     51              n_name = elem->name;
     52              if(!n_name)return;
     53               if(!strcmp(n_name, conference_t)) // Элемент конференции
     54              {
     55                c_name = XML_Get_Attr_Value(jid,elem->attr);
     56                bm_name = XML_Get_Attr_Value("name",elem->attr);
     57                if(!bm_name) 
     58                  if(!c_name) bm_name = "Error bookmark!";
     59                   else bm_name = c_name;
     60          
     61                c_ajoin = XML_Get_Attr_Value("autojoin",elem->attr);
     62           
     63                tmpnode = XML_Get_Child_Node_By_Name(elem, "nick");
     64                if(tmpnode)
     65                {
     66                  c_nick = tmpnode->value;
     67                }else c_nick=NULL;
     68          
     69                tmpnode = XML_Get_Child_Node_By_Name(elem, "password");
     70                if(tmpnode)
     71                {
     72                  c_pass = tmpnode->value;
     73                }else c_pass = NULL;
     74          
     75                BM_ITEM *bmitem = malloc(sizeof(BM_ITEM));
     76          
     77                bmitem->bmname = malloc(strlen(bm_name)+1);
     78                strcpy(bmitem->bmname, bm_name);
     79            
     80                bmitem->mucname = malloc(strlen(c_name)+1);
     81                strcpy(bmitem->mucname, c_name);
     82                if(c_nick)
     83                {
     84                  bmitem->nick = malloc(strlen(c_nick)+1);
     85                  strcpy(bmitem->nick, c_nick);
     86                }
     87                else bmitem->nick = NULL;
     88                if(c_pass)
     89                {
     90                  bmitem->pass = malloc(strlen(c_pass)+1);
     91                  strcpy(bmitem->pass, c_pass);
     92                }
     93                else bmitem->pass = NULL;
     94          
     95                // Создаём очередной элемент списка
     96                //если нет имени конфы такая закладка нам ненужна
     97                if(bmitem->mucname)
     98                {
     99                if(MUC_AUTOJOIN && c_ajoin && (bmitem->nick))
    100                {
    101                if((!strcmp(c_ajoin, "true"))||(!strcmp(c_ajoin, "1")))
    102                  {
    103                    ajoin=1;
    104                    extern const unsigned int DEFAULT_MUC_MSGCOUNT;
    105                    Enter_Conference(bmitem->mucname, bmitem->nick, bmitem->pass, DEFAULT_MUC_MSGCOUNT);
    106                  }
    107                }
    108                bmitem->next = NULL;
    109          
    110                BM_ITEM *tmp=BM_ROOT;
    111                if(tmp)
    112                  while(tmp->next)tmp = tmp->next;
    113                if(tmp)
    114                {
    115                  tmp->next = bmitem;
    116                }
    117                else BM_ROOT = bmitem;
    118                }
    119              }
    120              elem = elem->next;
   \                     ??Process_Bookmarks_Storage_2:
   \   00000028   005095E5           LDR      R5,[R5, #+0]
   \                     ??Process_Bookmarks_Storage_1:
   \   0000002C   000055E3           CMP      R5,#+0
   \   00000030   7900000A           BEQ      ??Process_Bookmarks_Storage_3
   \   00000034   080095E5           LDR      R0,[R5, #+8]
   \   00000038   000050E3           CMP      R0,#+0
   \   0000003C   F38FBD08           POPEQ    {R0,R1,R4-R11,PC}
   \   00000040   FC119FE5           LDR      R1,??Process_Bookmarks_Storage_0+0x8  ;; conference_t
   \   00000044   190000EF           SWI      +25
   \   00000048   000050E3           CMP      R0,#+0
   \   0000004C   F5FFFF1A           BNE      ??Process_Bookmarks_Storage_2
   \   00000050   0C1095E5           LDR      R1,[R5, #+12]
   \   00000054   04008DE2           ADD      R0,SP,#+4
   \   00000058   ........           _BLF     XML_Get_Attr_Value,??XML_Get_Attr_Value??rA
   \   0000005C   0C1095E5           LDR      R1,[R5, #+12]
   \   00000060   0060A0E1           MOV      R6,R0
   \   00000064   040084E2           ADD      R0,R4,#+4
   \   00000068   ........           _BLF     XML_Get_Attr_Value,??XML_Get_Attr_Value??rA
   \   0000006C   0070B0E1           MOVS     R7,R0
   \   00000070   0200001A           BNE      ??Process_Bookmarks_Storage_4
   \   00000074   000056E3           CMP      R6,#+0
   \   00000078   0C708402           ADDEQ    R7,R4,#+12
   \   0000007C   0670A011           MOVNE    R7,R6
   \                     ??Process_Bookmarks_Storage_4:
   \   00000080   0C1095E5           LDR      R1,[R5, #+12]
   \   00000084   1C0084E2           ADD      R0,R4,#+28
   \   00000088   ........           _BLF     XML_Get_Attr_Value,??XML_Get_Attr_Value??rA
   \   0000008C   0080A0E1           MOV      R8,R0
   \   00000090   281084E2           ADD      R1,R4,#+40
   \   00000094   0500A0E1           MOV      R0,R5
   \   00000098   ........           _BLF     XML_Get_Child_Node_By_Name,??XML_Get_Child_Node_By_Name??rA
   \   0000009C   000050E3           CMP      R0,#+0
   \   000000A0   10909015           LDRNE    R9,[R0, #+16]
   \   000000A4   301084E2           ADD      R1,R4,#+48
   \   000000A8   0090A003           MOVEQ    R9,#+0
   \   000000AC   0500A0E1           MOV      R0,R5
   \   000000B0   ........           _BLF     XML_Get_Child_Node_By_Name,??XML_Get_Child_Node_By_Name??rA
   \   000000B4   000050E3           CMP      R0,#+0
   \   000000B8   10A09015           LDRNE    R10,[R0, #+16]
   \   000000BC   1400A0E3           MOV      R0,#+20
   \   000000C0   00A0A003           MOVEQ    R10,#+0
   \   000000C4   140000EF           SWI      +20
   \   000000C8   00B0A0E1           MOV      R11,R0
   \   000000CC   0700A0E1           MOV      R0,R7
   \   000000D0   1B0000EF           SWI      +27
   \   000000D4   010080E2           ADD      R0,R0,#+1
   \   000000D8   140000EF           SWI      +20
   \   000000DC   00008BE5           STR      R0,[R11, #+0]
   \   000000E0   0710A0E1           MOV      R1,R7
   \   000000E4   1A0000EF           SWI      +26
   \   000000E8   0600A0E1           MOV      R0,R6
   \   000000EC   1B0000EF           SWI      +27
   \   000000F0   010080E2           ADD      R0,R0,#+1
   \   000000F4   140000EF           SWI      +20
   \   000000F8   04008BE5           STR      R0,[R11, #+4]
   \   000000FC   0610A0E1           MOV      R1,R6
   \   00000100   1A0000EF           SWI      +26
   \   00000104   000059E3           CMP      R9,#+0
   \   00000108   0700000A           BEQ      ??Process_Bookmarks_Storage_5
   \   0000010C   0900A0E1           MOV      R0,R9
   \   00000110   1B0000EF           SWI      +27
   \   00000114   010080E2           ADD      R0,R0,#+1
   \   00000118   140000EF           SWI      +20
   \   0000011C   08008BE5           STR      R0,[R11, #+8]
   \   00000120   0910A0E1           MOV      R1,R9
   \   00000124   1A0000EF           SWI      +26
   \   00000128   010000EA           B        ??Process_Bookmarks_Storage_6
   \                     ??Process_Bookmarks_Storage_5:
   \   0000012C   0000A0E3           MOV      R0,#+0
   \   00000130   08008BE5           STR      R0,[R11, #+8]
   \                     ??Process_Bookmarks_Storage_6:
   \   00000134   00005AE3           CMP      R10,#+0
   \   00000138   0700000A           BEQ      ??Process_Bookmarks_Storage_7
   \   0000013C   0A00A0E1           MOV      R0,R10
   \   00000140   1B0000EF           SWI      +27
   \   00000144   010080E2           ADD      R0,R0,#+1
   \   00000148   140000EF           SWI      +20
   \   0000014C   0C008BE5           STR      R0,[R11, #+12]
   \   00000150   0A10A0E1           MOV      R1,R10
   \   00000154   1A0000EF           SWI      +26
   \   00000158   010000EA           B        ??Process_Bookmarks_Storage_8
   \                     ??Process_Bookmarks_Storage_7:
   \   0000015C   0000A0E3           MOV      R0,#+0
   \   00000160   0C008BE5           STR      R0,[R11, #+12]
   \                     ??Process_Bookmarks_Storage_8:
   \   00000164   04009BE5           LDR      R0,[R11, #+4]
   \   00000168   000050E3           CMP      R0,#+0
   \   0000016C   ADFFFF0A           BEQ      ??Process_Bookmarks_Storage_2
   \   00000170   D0009FE5           LDR      R0,??Process_Bookmarks_Storage_0+0xC  ;; MUC_AUTOJOIN
   \   00000174   000090E5           LDR      R0,[R0, #+0]
   \   00000178   000050E3           CMP      R0,#+0
   \   0000017C   1800000A           BEQ      ??Process_Bookmarks_Storage_9
   \   00000180   000058E3           CMP      R8,#+0
   \   00000184   1500000A           BEQ      ??Process_Bookmarks_Storage_10
   \   00000188   08009BE5           LDR      R0,[R11, #+8]
   \   0000018C   000050E3           CMP      R0,#+0
   \   00000190   1300000A           BEQ      ??Process_Bookmarks_Storage_9
   \   00000194   3C1084E2           ADD      R1,R4,#+60
   \   00000198   0800A0E1           MOV      R0,R8
   \   0000019C   190000EF           SWI      +25
   \   000001A0   000050E3           CMP      R0,#+0
   \   000001A4   0400000A           BEQ      ??Process_Bookmarks_Storage_11
   \   000001A8   231F8FE2           ADR      R1,??Process_Bookmarks_Storage_0  ;; "1"
   \   000001AC   0800A0E1           MOV      R0,R8
   \   000001B0   190000EF           SWI      +25
   \   000001B4   000050E3           CMP      R0,#+0
   \   000001B8   0800001A           BNE      ??Process_Bookmarks_Storage_10
   \                     ??Process_Bookmarks_Storage_11:
   \   000001BC   ........           LDR      R0,??DataTable5  ;; DEFAULT_MUC_MSGCOUNT
   \   000001C0   0110A0E3           MOV      R1,#+1
   \   000001C4   0010CDE5           STRB     R1,[SP, #+0]
   \   000001C8   003090E5           LDR      R3,[R0, #+0]
   \   000001CC   0C209BE5           LDR      R2,[R11, #+12]
   \   000001D0   08109BE5           LDR      R1,[R11, #+8]
   \   000001D4   04009BE5           LDR      R0,[R11, #+4]
   \   000001D8   FF3003E2           AND      R3,R3,#0xFF
   \   000001DC   ........           _BLF     Enter_Conference,??Enter_Conference??rA
   \                     ??Process_Bookmarks_Storage_10:
   \   000001E0   0000A0E3           MOV      R0,#+0
   \                     ??Process_Bookmarks_Storage_9:
   \   000001E4   10008BE5           STR      R0,[R11, #+16]
   \   000001E8   ........           LDR      R0,??DataTable7  ;; bm_menuhdr
   \   000001EC   1C1090E5           LDR      R1,[R0, #+28]
   \   000001F0   000051E3           CMP      R1,#+0
   \   000001F4   0400000A           BEQ      ??Process_Bookmarks_Storage_12
   \   000001F8   000000EA           B        ??Process_Bookmarks_Storage_13
   \                     ??Process_Bookmarks_Storage_14:
   \   000001FC   0210A0E1           MOV      R1,R2
   \                     ??Process_Bookmarks_Storage_13:
   \   00000200   102091E5           LDR      R2,[R1, #+16]
   \   00000204   000052E3           CMP      R2,#+0
   \   00000208   FBFFFF1A           BNE      ??Process_Bookmarks_Storage_14
   \                     ??Process_Bookmarks_Storage_12:
   \   0000020C   000051E3           CMP      R1,#+0
   \   00000210   1CB08005           STREQ    R11,[R0, #+28]
   \   00000214   10B08115           STRNE    R11,[R1, #+16]
   \   00000218   82FFFFEA           B        ??Process_Bookmarks_Storage_2
    121            }
    122            if (!(MUC_AUTOJOIN&&ajoin))Disp_BM_Menu();
   \                     ??Process_Bookmarks_Storage_3:
   \   0000021C   24009FE5           LDR      R0,??Process_Bookmarks_Storage_0+0xC  ;; MUC_AUTOJOIN
   \   00000220   000090E5           LDR      R0,[R0, #+0]
   \   00000224   000050E3           CMP      R0,#+0
   \   00000228   0000DD15           LDRBNE   R0,[SP, #+0]
   \   0000022C   00005013           CMPNE    R0,#+0
   \   00000230   F38FBD18           POPNE    {R0,R1,R4-R11,PC}
   \   00000234   ........           BL       Disp_BM_Menu
   \   00000238   F38FBDE8           POP      {R0,R1,R4-R11,PC}  ;; return
   \                     ??Process_Bookmarks_Storage_0:
   \   0000023C   31000000           DC8      "1",+0,+0
   \   00000240   ........           DC32     `?<Constant "jid">`
   \   00000244   ........           DC32     conference_t
   \   00000248   ........           DC32     MUC_AUTOJOIN
    123          }
    124          
    125          //Context:HELPER

   \                                 In segment CODE, align 4, keep-with-next
    126          void _getbookmarkslist()
    127          {
    128            static char priv_id[]="SieJC_priv_req";
    129            char storage_t[]="storage";
   \                     _getbookmarkslist:
   \   00000000   7C109FE5           LDR      R1,??_getbookmarkslist_0  ;; `?<Constant "storage">`
   \   00000004   30402DE9           PUSH     {R4,R5,LR}
    130            char xmlns_t[]="xmlns";
    131            XMLNode *xml_bookmark = XML_CreateNode(storage_t, NULL);
    132            XML_Set_Attr_Value(xml_bookmark, xmlns_t, JABBER_STORAGE_BOOKMARKS);
   \   00000008   78509FE5           LDR      R5,??_getbookmarkslist_0+0x4  ;; `?<Constant "get">`
   \   0000000C   28D04DE2           SUB      SP,SP,#+40
   \   00000010   0C0091E8           LDM      R1,{R2,R3}
   \   00000014   70109FE5           LDR      R1,??_getbookmarkslist_0+0x8  ;; `?<Constant "xmlns">`
   \   00000018   04008DE2           ADD      R0,SP,#+4
   \   0000001C   0C0080E8           STM      R0,{R2,R3}
   \   00000020   0C0091E8           LDM      R1,{R2,R3}
   \   00000024   0C008DE2           ADD      R0,SP,#+12
   \   00000028   0C0080E8           STM      R0,{R2,R3}
   \   0000002C   0010A0E3           MOV      R1,#+0
   \   00000030   04008DE2           ADD      R0,SP,#+4
   \   00000034   ........           _BLF     XML_CreateNode,??XML_CreateNode??rA
   \   00000038   0040A0E1           MOV      R4,R0
   \   0000003C   042085E2           ADD      R2,R5,#+4
   \   00000040   0C108DE2           ADD      R1,SP,#+12
   \   00000044   ........           _BLF     XML_Set_Attr_Value,??XML_Set_Attr_Value??rA
    133            char gget[]=IQTYPE_GET;
   \   00000048   001095E5           LDR      R1,[R5, #0]
   \   0000004C   0D00A0E1           MOV      R0,SP
   \   00000050   001080E5           STR      R1,[R0, #+0]
    134            char iqv[]=IQ_PRIVATE;
   \   00000054   34109FE5           LDR      R1,??_getbookmarkslist_0+0xC  ;; `?<Constant "jabber:iq:private">`
   \   00000058   14008DE2           ADD      R0,SP,#+20
   \   0000005C   2C5091E8           LDM      R1,{R2,R3,R5,R12,LR}
   \   00000060   2C5080E8           STM      R0,{R2,R3,R5,R12,LR}
    135            SendIq(NULL, gget, priv_id, iqv, xml_bookmark);
   \   00000064   28209FE5           LDR      R2,??_getbookmarkslist_0+0x10  ;; ??priv_id
   \   00000068   10002DE9           PUSH     {R4}
   \   0000006C   18308DE2           ADD      R3,SP,#+24
   \   00000070   04108DE2           ADD      R1,SP,#+4
   \   00000074   0000A0E3           MOV      R0,#+0
   \   00000078   ........           _BLF     SendIq,??SendIq??rA
    136          }
   \   0000007C   2CD08DE2           ADD      SP,SP,#+44
   \   00000080   3080BDE8           POP      {R4,R5,PC}       ;; return
   \                     ??_getbookmarkslist_0:
   \   00000084   ........           DC32     `?<Constant "storage">`
   \   00000088   ........           DC32     `?<Constant "get">`
   \   0000008C   ........           DC32     `?<Constant "xmlns">`
   \   00000090   ........           DC32     `?<Constant "jabber:iq:private">`
   \   00000094   ........           DC32     ??priv_id
    137          

   \                                 In segment CODE, align 4, keep-with-next
    138          void Get_Bookmarks_List()
    139          {
   \                     Get_Bookmarks_List:
   \   00000000   10402DE9           PUSH     {R4,LR}
    140            if((!BM_ROOT)&&(reqbook==0))
   \   00000004   ........           LDR      R4,??DataTable7  ;; bm_menuhdr
   \   00000008   1C0094E5           LDR      R0,[R4, #+28]
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   0700001A           BNE      ??Get_Bookmarks_List_0
   \   00000014   200094E5           LDR      R0,[R4, #+32]
   \   00000018   000050E3           CMP      R0,#+0
   \   0000001C   1080BD18           POPNE    {R4,PC}
    141            {
    142                SUBPROC((void*)_getbookmarkslist);
   \   00000020   14009FE5           LDR      R0,??Get_Bookmarks_List_1  ;; _getbookmarkslist
   \   00000024   710100EF           SWI      +369
    143                reqbook=1;
   \   00000028   0100A0E3           MOV      R0,#+1
   \   0000002C   200084E5           STR      R0,[R4, #+32]
   \   00000030   1080BDE8           POP      {R4,PC}
    144            }
    145            else 
    146              if(BM_ROOT) Disp_BM_Menu();
   \                     ??Get_Bookmarks_List_0:
   \   00000034   ........           BL       Disp_BM_Menu
    147          }
   \   00000038   1080BDE8           POP      {R4,PC}          ;; return
   \                     ??Get_Bookmarks_List_1:
   \   0000003C   ........           DC32     _getbookmarkslist
    148          
    149          int BM_MenuID;
    150          int Req_Close_BM_Menu=0;
    151          extern BM_ITEM *BM_ROOT;
    152          

   \                                 In segment DATA_C, align 4, align-sorted
    153          const char bmmenu_header[]=LG_MENUBOOKMARK;
   \                     bmmenu_header:
   \   00000000   CCE5EDFE20E7       DC8 "\314\345\355\376 \347\340\352\353\340\344\356\352"
   \              E0EAEBE0E4EE
   \              EA00        
   \   0000000E   0000               DC8 0, 0
    154          int bmmenusoftkeys[]={0,1,2};
    155          HEADER_DESC bm_menuhdr={0,0,0,0,NULL,(int)bmmenu_header,LGP_NULL};
    156          SOFTKEY_DESC bmmenu_sk[]=
    157          {
    158            {0x0018,0x0000,(int)LG_EDIT},
    159            {0x0001,0x0000,(int)LG_BACK},
    160            {0x003D,0x0000,(int)LGP_DOIT_PIC}
    161          };
    162          
    163          SOFTKEYSTAB bmmenu_skt=
    164          {
    165            bmmenu_sk,0
    166          };
    167          
    168          void bm_menu_ghook(void *data, int cmd);
    169          int bm_menu_onkey(void *data, GUI_MSG *msg);
    170          void bm_menu_iconhndl(void *data, int curitem, void *unk);
    171          
    172          MENU_DESC bm_menu=
    173          {
    174            8,bm_menu_onkey,bm_menu_ghook,NULL,
    175            bmmenusoftkeys,
    176            &bmmenu_skt,
    177            0x11,
    178            bm_menu_iconhndl,
    179            NULL,   //Items
    180            NULL,   //Procs
    181            0   //n
    182          };
    183          

   \                                 In segment CODE, align 4, keep-with-next
    184          void bm_menu_ghook(void *data, int cmd)
    185          {
   \                     bm_menu_ghook:
   \   00000000   00402DE9           PUSH     {LR}
    186            if (cmd==TI_CMD_FOCUS)  // onFocus
   \   00000004   0A0051E3           CMP      R1,#+10
   \   00000008   0080BD18           POPNE    {PC}
    187            {
    188              DisableIDLETMR();
   \   0000000C   7F0100EF           SWI      +383
    189              if(Req_Close_BM_Menu)
   \   00000010   ........           LDR      R0,??DataTable7  ;; bm_menuhdr
   \   00000014   281090E5           LDR      R1,[R0, #+40]
   \   00000018   000051E3           CMP      R1,#+0
   \   0000001C   0080BD08           POPEQ    {PC}
    190              {
    191                Req_Close_BM_Menu=0;
   \   00000020   0010A0E3           MOV      R1,#+0
   \   00000024   281080E5           STR      R1,[R0, #+40]
    192                GeneralFunc_flag1(BM_MenuID,1);
   \   00000028   240090E5           LDR      R0,[R0, #+36]
   \   0000002C   0110A0E3           MOV      R1,#+1
   \   00000030   3D0100EF           SWI      +317
    193              }
    194            }
    195          }
   \   00000034   0080BDE8           POP      {PC}             ;; return
    196          
    197          /*
    198            Обработчик нажатий клавиш меню. Отсюда следует вызывать необходимые действия
    199          
    200          */

   \                                 In segment CODE, align 4, keep-with-next
    201          int bm_menu_onkey(void *data, GUI_MSG *msg)
    202          {
   \                     bm_menu_onkey:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0140A0E1           MOV      R4,R1
    203            int i=GetCurMenuItem(data);
   \   00000008   8F0100EF           SWI      +399
    204            if(msg->keys==0x18 || msg->keys==0x3D)
   \   0000000C   F230D4E1           LDRSH    R3,[R4, #+2]
   \   00000010   180053E3           CMP      R3,#+24
   \   00000014   3D005313           CMPNE    R3,#+61
   \   00000018   1A00001A           BNE      ??bm_menu_onkey_0
    205            {
    206              char s=0;
    207              BM_ITEM *it = BM_ROOT;
   \   0000001C   6C209FE5           LDR      R2,??bm_menu_onkey_1  ;; bm_menuhdr + 28
   \   00000020   0010A0E3           MOV      R1,#+0
   \   00000024   004092E5           LDR      R4,[R2, #+0]
   \   00000028   020000EA           B        ??bm_menu_onkey_2
    208              while(s!=i && it)
    209              {
    210                s++;
    211                it=it->next;
   \                     ??bm_menu_onkey_3:
   \   0000002C   104094E5           LDR      R4,[R4, #+16]
   \   00000030   011081E2           ADD      R1,R1,#+1
   \   00000034   FF1001E2           AND      R1,R1,#0xFF
    212              };
   \                     ??bm_menu_onkey_2:
   \   00000038   000051E1           CMP      R1,R0
   \   0000003C   00005413           CMPNE    R4,#+0
   \   00000040   F9FFFF1A           BNE      ??bm_menu_onkey_3
    213              if(it->mucname && it->nick && (msg->keys == 0x3D)) //Нажат центральный джой
   \   00000044   081094E5           LDR      R1,[R4, #+8]
   \   00000048   040094E5           LDR      R0,[R4, #+4]
   \   0000004C   0C2094E5           LDR      R2,[R4, #+12]
   \   00000050   000050E3           CMP      R0,#+0
   \   00000054   00005113           CMPNE    R1,#+0
   \   00000058   0700000A           BEQ      ??bm_menu_onkey_4
   \   0000005C   3D0053E3           CMP      R3,#+61
   \   00000060   0500001A           BNE      ??bm_menu_onkey_4
    214              {
    215                extern const unsigned int DEFAULT_MUC_MSGCOUNT;
    216                Enter_Conference(it->mucname, it->nick, it->pass, DEFAULT_MUC_MSGCOUNT);
   \   00000064   ........           LDR      R3,??DataTable5  ;; DEFAULT_MUC_MSGCOUNT
   \   00000068   003093E5           LDR      R3,[R3, #+0]
   \   0000006C   FF3003E2           AND      R3,R3,#0xFF
   \   00000070   ........           _BLF     Enter_Conference,??Enter_Conference??rA
   \   00000074   0100A0E3           MOV      R0,#+1
   \   00000078   1080BDE8           POP      {R4,PC}
    217              } else Disp_MUC_Enter_Dialog(it->mucname, it->nick, it->pass);
   \                     ??bm_menu_onkey_4:
   \   0000007C   ........           _BLF     Disp_MUC_Enter_Dialog,??Disp_MUC_Enter_Dialog??rA
    218              return 1;
   \   00000080   0100A0E3           MOV      R0,#+1
   \   00000084   1080BDE8           POP      {R4,PC}
    219            }
    220          return 0;
   \                     ??bm_menu_onkey_0:
   \   00000088   0000A0E3           MOV      R0,#+0
   \   0000008C   1080BDE8           POP      {R4,PC}          ;; return
   \                     ??bm_menu_onkey_1:
   \   00000090   ........           DC32     bm_menuhdr + 28
    221          }

   \                                 In segment DATA_I, align 4, align-sorted
   \                     bm_menuhdr:
   \   00000000                      DS8 20
   \   00000014                      REQUIRE `?<Initializer for bm_menuhdr>`
    222          
    223          int BM_ICON[2];
   \                     BM_ICON:
   \   00000014                      DS8 8
   \   0000001C                      REQUIRE `?<Initializer for BM_ICON>`
   \                     BM_ROOT:
   \   0000001C                      DS8 4
   \   00000020                      REQUIRE `?<Initializer for BM_ROOT>`
   \                     reqbook:
   \   00000020                      DS8 4
   \   00000024                      REQUIRE `?<Initializer for reqbook>`
   \                     BM_MenuID:
   \   00000024                      DS8 4
   \   00000028                      REQUIRE `?<Initializer for BM_MenuID>`
   \                     Req_Close_BM_Menu:
   \   00000028                      DS8 4
   \   0000002C                      REQUIRE `?<Initializer for Req_Close_BM_Menu>`
   \                     bm_menu:
   \   0000002C                      DS8 44
   \   00000058                      REQUIRE `?<Initializer for bm_menu>`
    224          char ICON_MUC[128];
   \                     ICON_MUC:
   \   00000058                      DS8 128
   \   000000D8                      REQUIRE `?<Initializer for ICON_MUC>`

   \                                 In segment DATA_I, align 4, align-sorted
   \                     ??priv_id:
   \   00000000                      DS8 16
   \   00000010                      REQUIRE `?<Initializer for priv_id>`

   \                                 In segment DATA_I, align 4, align-sorted
   \                     bmmenusoftkeys:
   \   00000000                      DS8 12
   \   0000000C                      REQUIRE `?<Initializer for bmmenusoftkeys>`

   \                                 In segment DATA_I, align 4, align-sorted
   \                     bmmenu_sk:
   \   00000000                      DS8 24
   \   00000018                      REQUIRE `?<Initializer for bmmenu_sk>`

   \                                 In segment DATA_I, align 4, align-sorted
   \                     bmmenu_skt:
   \   00000000                      DS8 8
   \   00000008                      REQUIRE `?<Initializer for bmmenu_skt>`
    225          
    226          /*
    227            Обработчик появления пунктов динамического меню
    228            Тут мы сами создаём каждый пункт, указывая для него иконку и текст.
    229          */

   \                                 In segment CODE, align 4, keep-with-next
    230          void bm_menu_iconhndl(void *data, int curitem, void *unk)
    231          {
   \                     bm_menu_iconhndl:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
    232            WSHDR *ws;
    233            extern const char percent_t[], empty_t[];
    234            char test_str[48];
    235            void *item=AllocMenuItem(data);
    236            strcpy(test_str,empty_t);
    237            char s=0;
    238            BM_ITEM *it = BM_ROOT;
   \   00000004   ........           LDR      R7,??DataTable7  ;; bm_menuhdr
   \   00000008   30D04DE2           SUB      SP,SP,#+48
   \   0000000C   0040A0E1           MOV      R4,R0
   \   00000010   0150A0E1           MOV      R5,R1
   \   00000014   970100EF           SWI      +407
   \   00000018   88109FE5           LDR      R1,??bm_menu_iconhndl_0  ;; empty_t
   \   0000001C   0060A0E1           MOV      R6,R0
   \   00000020   0D00A0E1           MOV      R0,SP
   \   00000024   1A0000EF           SWI      +26
   \   00000028   1C8097E5           LDR      R8,[R7, #+28]
   \   0000002C   0000A0E3           MOV      R0,#+0
   \   00000030   020000EA           B        ??bm_menu_iconhndl_1
    239            while(s!=curitem && it)
    240            {
    241              s++;
    242              it=it->next;    
   \                     ??bm_menu_iconhndl_2:
   \   00000034   108098E5           LDR      R8,[R8, #+16]
   \   00000038   010080E2           ADD      R0,R0,#+1
   \   0000003C   FF0000E2           AND      R0,R0,#0xFF
    243            };
   \                     ??bm_menu_iconhndl_1:
   \   00000040   050050E1           CMP      R0,R5
   \   00000044   00005813           CMPNE    R8,#+0
   \   00000048   F9FFFF1A           BNE      ??bm_menu_iconhndl_2
    244            
    245            ws=AllocMenuWS(data,strlen(it->bmname));
   \   0000004C   000098E5           LDR      R0,[R8, #+0]
   \   00000050   1B0000EF           SWI      +27
   \   00000054   0010A0E1           MOV      R1,R0
   \   00000058   0400A0E1           MOV      R0,R4
   \   0000005C   980100EF           SWI      +408
   \   00000060   0090A0E1           MOV      R9,R0
    246          //  wsprintf(ws,percent_t,it->bmname);
    247            utf8_2ws(ws,it->bmname,strlen(it->bmname));
   \   00000064   000098E5           LDR      R0,[R8, #+0]
   \   00000068   1B0000EF           SWI      +27
   \   0000006C   001098E5           LDR      R1,[R8, #+0]
   \   00000070   0020A0E1           MOV      R2,R0
   \   00000074   0900A0E1           MOV      R0,R9
   \   00000078   E30100EF           SWI      +483
    248            SetMenuItemIconArray(data,item,BM_ICON+1);
   \   0000007C   182087E2           ADD      R2,R7,#+24
   \   00000080   0610A0E1           MOV      R1,R6
   \   00000084   0400A0E1           MOV      R0,R4
   \   00000088   990100EF           SWI      +409
    249            SetMenuItemText(data,item,ws,curitem);
   \   0000008C   0530A0E1           MOV      R3,R5
   \   00000090   0920A0E1           MOV      R2,R9
   \   00000094   0610A0E1           MOV      R1,R6
   \   00000098   0400A0E1           MOV      R0,R4
   \   0000009C   9A0100EF           SWI      +410
    250            //SetMenuItemIcon(data,curitem,1);  // 0 = индекс иконки
    251          };
   \   000000A0   30D08DE2           ADD      SP,SP,#+48
   \   000000A4   F083BDE8           POP      {R4-R9,PC}       ;; return
   \                     ??bm_menu_iconhndl_0:
   \   000000A8   ........           DC32     empty_t
    252          
    253          extern const char PATH_TO_PIC[128];
    254          

   \                                 In segment CODE, align 4, keep-with-next
    255          void Init_bm_Icon_array()
    256          {
    257            strcpy(ICON_MUC, PATH_TO_PIC);strcat(ICON_MUC, "conference.png");
   \                     Init_bm_Icon_array:
   \   00000000   24109FE5           LDR      R1,??Init_bm_Icon_array_0  ;; PATH_TO_PIC
   \   00000004   10402DE9           PUSH     {R4,LR}
   \   00000008   ........           LDR      R4,??DataTable7  ;; bm_menuhdr
   \   0000000C   580084E2           ADD      R0,R4,#+88
   \   00000010   1A0000EF           SWI      +26
   \   00000014   14109FE5           LDR      R1,??Init_bm_Icon_array_0+0x4  ;; `?<Constant "conference.png">`
   \   00000018   580084E2           ADD      R0,R4,#+88
   \   0000001C   170000EF           SWI      +23
    258            BM_ICON[1]=(int)ICON_MUC;    
   \   00000020   580084E2           ADD      R0,R4,#+88
   \   00000024   180084E5           STR      R0,[R4, #+24]
    259          }
   \   00000028   1080BDE8           POP      {R4,PC}          ;; return
   \                     ??Init_bm_Icon_array_0:
   \   0000002C   ........           DC32     PATH_TO_PIC
   \   00000030   ........           DC32     `?<Constant "conference.png">`
    260          

   \                                 In segment CODE, align 4, keep-with-next
    261          void Disp_BM_Menu()
    262          {
   \                     Disp_BM_Menu:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
    263            if(BM_ROOT)
   \   00000004   90409FE5           LDR      R4,??Disp_BM_Menu_0  ;; bm_menuhdr
   \   00000008   1C0094E5           LDR      R0,[R4, #+28]
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   7080BD08           POPEQ    {R4-R6,PC}
    264            {
    265              Init_bm_Icon_array();
   \   00000014   ........           BL       Init_bm_Icon_array
    266              int n_items=0;
    267              BM_ITEM *i = BM_ROOT;
   \   00000018   1C0094E5           LDR      R0,[R4, #+28]
    268              n_items=1;
   \   0000001C   0150A0E3           MOV      R5,#+1
   \   00000020   101090E5           LDR      R1,[R0, #+16]
   \   00000024   000051E3           CMP      R1,#+0
   \   00000028   0400000A           BEQ      ??Disp_BM_Menu_1
    269              while(i->next)
    270              {
    271                n_items++;
    272                i = i->next;
   \                     ??Disp_BM_Menu_2:
   \   0000002C   100090E5           LDR      R0,[R0, #+16]
   \   00000030   015085E2           ADD      R5,R5,#+1
    273              }
   \   00000034   101090E5           LDR      R1,[R0, #+16]
   \   00000038   000051E3           CMP      R1,#+0
   \   0000003C   FAFFFF1A           BNE      ??Disp_BM_Menu_2
    274              patch_rect(&bm_menuhdr.rc,0,YDISP,ScreenW()-1,HeaderH()+YDISP);
   \                     ??Disp_BM_Menu_1:
   \   00000040   8A8100EF           SWI      +33162
   \   00000044   0060A0E1           MOV      R6,R0
   \   00000048   888100EF           SWI      +33160
   \   0000004C   181086E2           ADD      R1,R6,#+24
   \   00000050   010040E2           SUB      R0,R0,#+1
   \   00000054   0020A0E3           MOV      R2,#+0
   \   00000058   B020C4E1           STRH     R2,[R4, #+0]
   \   0000005C   1820A0E3           MOV      R2,#+24
   \   00000060   B220C4E1           STRH     R2,[R4, #+2]
   \   00000064   B400C4E1           STRH     R0,[R4, #+4]
   \   00000068   B610C4E1           STRH     R1,[R4, #+6]
    275              BM_MenuID=CreateMenu(0,0,&bm_menu,&bm_menuhdr,0,n_items,0,0);
   \   0000006C   0000A0E3           MOV      R0,#+0
   \   00000070   01002DE9           PUSH     {R0}
   \   00000074   01002DE9           PUSH     {R0}
   \   00000078   20002DE9           PUSH     {R5}
   \   0000007C   01002DE9           PUSH     {R0}
   \   00000080   0430A0E1           MOV      R3,R4
   \   00000084   2C2084E2           ADD      R2,R4,#+44
   \   00000088   0010A0E3           MOV      R1,#+0
   \   0000008C   520100EF           SWI      +338
   \   00000090   240084E5           STR      R0,[R4, #+36]
   \   00000094   10D08DE2           ADD      SP,SP,#+16
    276            }
    277          }
   \   00000098   7080BDE8           POP      {R4-R6,PC}       ;; return
   \                     ??Disp_BM_Menu_0:
   \   0000009C   ........           DC32     bm_menuhdr

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable5:
   \   00000000   ........           DC32     DEFAULT_MUC_MSGCOUNT

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable7:
   \   00000000   ........           DC32     bm_menuhdr

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for bm_menuhdr>`:
   \   00000000   000000000000       DC16 0, 0, 0, 0
   \              0000        
   \   00000008   00000000....       DC32 0H, bmmenu_header, 2147483647
   \              ....FFFFFF7F
   \                     `?<Initializer for BM_ICON>`:
   \   00000014   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0000        
   \                     `?<Initializer for BM_ROOT>`:
   \   0000001C   00000000           DC32 0H
   \                     `?<Initializer for reqbook>`:
   \   00000020   00000000           DC32 0
   \                     `?<Initializer for BM_MenuID>`:
   \   00000024   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for Req_Close_BM_Menu>`:
   \   00000028   00000000           DC32 0
   \                     `?<Initializer for bm_menu>`:
   \   0000002C   08000000....       DC32 8, bm_menu_onkey, bm_menu_ghook, 0H, bmmenusoftkeys, bmmenu_skt
   \              ............
   \              00000000....
   \              ............
   \   00000044   11000000....       DC32 17, bm_menu_iconhndl, 0H, 0H, 0
   \              ....00000000
   \              000000000000
   \              0000        
   \                     `?<Initializer for ICON_MUC>`:
   \   00000058   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000068   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000078   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000088   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000098   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000000A8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000000B8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000000C8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for priv_id>`:
   \   00000000   5369654A435F       DC8 "SieJC_priv_req"
   \              707269765F72
   \              657100      
   \   0000000F   00                 DC8 0

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for bmmenusoftkeys>`:
   \   00000000   000000000100       DC32 0, 1, 2
   \              000002000000

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for bmmenu_sk>`:
   \   00000000   18000000           DC16 24, 0
   \   00000004   ........           DC32 `?<Constant "\\310\\347\\354\\345\\355\\350\\362\\374">`
   \   00000008   01000000           DC16 1, 0
   \   0000000C   ........           DC32 `?<Constant "\\315\\340\\347\\340\\344">`
   \   00000010   3D000000           DC16 61, 0
   \   00000014   FBC0FF7F           DC32 2147467515

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for bmmenu_skt>`:
   \   00000000   ........0000       DC32 bmmenu_sk, 0
   \              0000        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\310\\347\\354\\345\\355\\350\\362\\374">`:
   \   00000000   C8E7ECE5EDE8       DC8 "\310\347\354\345\355\350\362\374"
   \              F2FC00      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\315\\340\\347\\340\\344">`:
   \   00000000   CDE0E7E0E400       DC8 "\315\340\347\340\344"
   \   00000006   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "jid">`:
   \   00000000   6A696400           DC8 "jid"
   \   00000004   6E616D6500         DC8 "name"
   \   00000009   000000             DC8 0, 0, 0
   \   0000000C   4572726F7220       DC8 "Error bookmark!"
   \              626F6F6B6D61
   \              726B2100    
   \   0000001C   6175746F6A6F       DC8 "autojoin"
   \              696E00      
   \   00000025   000000             DC8 0, 0, 0
   \   00000028   6E69636B00         DC8 "nick"
   \   0000002D   000000             DC8 0, 0, 0
   \   00000030   70617373776F       DC8 "password"
   \              726400      
   \   00000039   000000             DC8 0, 0, 0
   \   0000003C   7472756500         DC8 "true"
   \   00000041   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   3100               DC8 "1"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "storage">`:
   \   00000000   73746F726167       DC8 "storage"
   \              6500        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "xmlns">`:
   \   00000000   786D6C6E7300       DC8 "xmlns"
   \   00000006   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "get">`:
   \   00000000   67657400           DC8 "get"
   \   00000004   73746F726167       DC8 "storage:bookmarks"
   \              653A626F6F6B
   \              6D61726B7300
   \   00000016   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "jabber:iq:private">`:
   \   00000000   6A6162626572       DC8 "jabber:iq:private"
   \              3A69713A7072
   \              697661746500
   \   00000012   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "conference.png">`:
   \   00000000   636F6E666572       DC8 "conference.png"
   \              656E63652E70
   \              6E6700      
   \   0000000F   00                 DC8 0
    278          //EOL,EOF

   Maximum stack usage in bytes:

     Function                  CSTACK
     --------                  ------
     Disp_BM_Menu                 32
     Get_Bookmarks_List            8
     Init_bm_Icon_array            8
     KillBMList                   16
     Process_Bookmarks_Storage    44
     _getbookmarkslist            56
     bm_menu_ghook                 4
     bm_menu_iconhndl             76
     bm_menu_onkey                 8


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     KillBMList                      120
     Process_Bookmarks_Storage       588
     _getbookmarkslist               152
     Get_Bookmarks_List               64
     bmmenu_header                    16
     bm_menu_ghook                    56
     bm_menu_onkey                   148
     bm_menuhdr                      216
     priv_id                          16
     bmmenusoftkeys                   12
     bmmenu_sk                        24
     bmmenu_skt                        8
     bm_menu_iconhndl                172
     Init_bm_Icon_array               52
     Disp_BM_Menu                    160
     ??DataTable5                      4
     ??DataTable7                      4
     ?<Initializer for bm_menuhdr>   216
     ?<Initializer for priv_id>       16
     ?<Initializer for bmmenusoftkeys>
                                      12
     ?<Initializer for bmmenu_sk>     24
     ?<Initializer for bmmenu_skt>     8
     ?<Constant "\310\347\354\345\355\350\362\374">
                                      12
     ?<Constant "\315\340\347\340\344">
                                       8
     ?<Constant "jid">                68
     ?<Constant "1">                   2
     ?<Constant "storage">             8
     ?<Constant "xmlns">               8
     ?<Constant "get">                24
     ?<Constant "jabber:iq:private">
                                      20
     ?<Constant "conference.png">     16
      Others                         132

 
 1 640 bytes in segment CODE
   182 bytes in segment DATA_C
   276 bytes in segment DATA_I
   276 bytes in segment DATA_ID
    12 bytes in segment INITTAB
 
 1 520 bytes of CODE  memory (+ 132 bytes shared)
   458 bytes of CONST memory
   276 bytes of DATA  memory

Errors: none
Warnings: none
