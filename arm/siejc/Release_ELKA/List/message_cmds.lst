##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION    23/Feb/2011  16:38:15 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  C:\arm\siejc\message_cmds.c                          #
#    Command line    =  C:\arm\siejc\message_cmds.c -D NEWSGOLD -D ELKA      #
#                       --preprocess C:\arm\siejc\Release_ELKA\List\ -lC     #
#                       C:\arm\siejc\Release_ELKA\List\ -o                   #
#                       C:\arm\siejc\Release_ELKA\Obj\ -s9 --no_unroll       #
#                       --cpu_mode arm --endian little --cpu ARM926EJ-S      #
#                       --stack_align 4 --interwork -e --fpu None            #
#                       --dlib_config "C:\arm2\Embedded Workbench 4.0        #
#                       Evaluation\ARM\LIB\dl5tpainl8f.h" -I                 #
#                       "C:\arm2\Embedded Workbench 4.0                      #
#                       Evaluation\ARM\INC\" --inline_threshold=2            #
#    List file       =  C:\arm\siejc\Release_ELKA\List\message_cmds.lst      #
#    Object file     =  C:\arm\siejc\Release_ELKA\Obj\message_cmds.r79       #
#                                                                            #
#                                                                            #
##############################################################################

C:\arm\siejc\message_cmds.c
      1          #include "../inc/swilib.h"
      2          #include "main.h"
      3          #include "string_util.h"
      4          #include "clist_util.h"
      5          #include "lang.h"
      6          #include "smiles.h"
      7          #include "../inc/pnglist.h"
      8          #include "rect_patcher.h"
      9          #include "select_smile.h"
     10          //=================================== Команды ===========================================
     11          int Templates_Menu_ID;
     12          int Select_Menu_ID;
     13          
     14          int Mode;
     15          //0 - Смайлы
     16          //1 - Команды
     17          //2 - Шаблоны сообщений
     18          //3 - Ресурсы контакта
     19          
     20          char **commands_lines; //Массив указателей на строки
     21          int tmpl_num=0;
     22          

   \                                 In segment CODE, align 4, keep-with-next
     23          void FreeTemplates(void)
     24          {
   \                     FreeTemplates:
   \   00000000   10402DE9           PUSH     {R4,LR}
     25            if (commands_lines) mfree(commands_lines);
   \   00000004   ........           LDR      R4,??DataTable20  ;; tmpl_menuhdr
   \   00000008   340094E5           LDR      R0,[R4, #+52]
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   0100000A           BEQ      ??FreeTemplates_0
   \   00000014   150000EF           SWI      +21
     26            commands_lines=NULL;
   \   00000018   0000A0E3           MOV      R0,#+0
   \                     ??FreeTemplates_0:
   \   0000001C   340084E5           STR      R0,[R4, #+52]
     27          }
   \   00000020   1080BDE8           POP      {R4,PC}          ;; return
     28          
     29          extern const char COMMANDS_PATH[];
     30          extern const char MESSAGES_PATH[];
     31          extern const char SMILE_FILE[];
     32          
     33          extern CLIST* cltop;

   \                                 In segment CODE, align 4, keep-with-next
     34          int LoadTemplates_new(void)
     35          {
   \                     LoadTemplates_new:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
     36             int i=0;
     37             FreeTemplates();
     38             TRESOURCE *ResList = CList_FindContactByJID(CList_GetActiveContact()->full_name)->res_list;
   \   00000004   ........           LDR      R7,??DataTable20  ;; tmpl_menuhdr
   \   00000008   0040A0E3           MOV      R4,#+0
   \   0000000C   ........           BL       FreeTemplates
   \   00000010   ........           _BLF     CList_GetActiveContact,??CList_GetActiveContact??rA
   \   00000014   040090E5           LDR      R0,[R0, #+4]
   \   00000018   ........           _BLF     CList_FindContactByJID,??CList_FindContactByJID??rA
   \   0000001C   0C5090E5           LDR      R5,[R0, #+12]
   \   00000020   000055E3           CMP      R5,#+0
   \   00000024   1100000A           BEQ      ??LoadTemplates_new_0
     39             while(ResList)
     40              {
     41                if((ResList->name)&&(ResList->status!=6)) //бывает что имя ресурса незадано
   \                     ??LoadTemplates_new_1:
   \   00000028   000095E5           LDR      R0,[R5, #+0]
   \   0000002C   000050E3           CMP      R0,#+0
   \   00000030   0900D515           LDRBNE   R0,[R5, #+9]
   \   00000034   06005013           CMPNE    R0,#+6
   \   00000038   0900000A           BEQ      ??LoadTemplates_new_2
     42                {
     43               commands_lines=realloc(commands_lines,(i+1)*sizeof(char *));
   \   0000003C   340097E5           LDR      R0,[R7, #+52]
   \   00000040   016084E2           ADD      R6,R4,#+1
   \   00000044   0611A0E1           LSL      R1,R6,#+2
   \   00000048   BA0000EF           SWI      +186
   \   0000004C   340087E5           STR      R0,[R7, #+52]
     44               commands_lines[i++]= convUTF8_to_ANSI_STR(ResList->name);
   \   00000050   000095E5           LDR      R0,[R5, #+0]
   \   00000054   ........           _BLF     convUTF8_to_ANSI_STR,??convUTF8_to_ANSI_STR??rA
   \   00000058   341097E5           LDR      R1,[R7, #+52]
   \   0000005C   040181E7           STR      R0,[R1, +R4, LSL #+2]
   \   00000060   0640A0E1           MOV      R4,R6
     45                }
     46                ResList=ResList->next;
   \                     ??LoadTemplates_new_2:
   \   00000064   2C5095E5           LDR      R5,[R5, #+44]
     47              };
   \   00000068   000055E3           CMP      R5,#+0
   \   0000006C   EDFFFF1A           BNE      ??LoadTemplates_new_1
     48             return i;
   \                     ??LoadTemplates_new_0:
   \   00000070   0400A0E1           MOV      R0,R4
   \   00000074   F080BDE8           POP      {R4-R7,PC}       ;; return
     49          }

   \                                 In segment CODE, align 4, keep-with-next
     50          int LoadTemplates(void)
     51          {
   \                     LoadTemplates:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
     52            FSTATS stat;
     53            char fn[256];
     54            int f;
     55            unsigned int ul;
     56            int i;
     57            int fsize;
     58            char *p;
     59            char *pp;
     60            int c;
     61            FreeTemplates();
     62            
     63            switch (Mode)
   \   00000004   ........           LDR      R4,??DataTable20  ;; tmpl_menuhdr
   \   00000008   4BDF4DE2           SUB      SP,SP,#+300
   \   0000000C   ........           BL       FreeTemplates
   \   00000010   300094E5           LDR      R0,[R4, #+48]
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   0400000A           BEQ      ??LoadTemplates_0
   \   0000001C   010050E2           SUBS     R0,R0,#+1
   \   00000020   0400000A           BEQ      ??LoadTemplates_1
   \   00000024   010050E2           SUBS     R0,R0,#+1
   \   00000028   0400000A           BEQ      ??LoadTemplates_2
   \   0000002C   060000EA           B        ??LoadTemplates_3
     64            {
     65            case 0:
     66              strcpy(fn, SMILE_FILE);
   \                     ??LoadTemplates_0:
   \   00000030   ........           LDR      R1,??DataTable17  ;; SMILE_FILE
   \   00000034   020000EA           B        ??LoadTemplates_4
     67              break;
     68            case 1:
     69              strcpy(fn, COMMANDS_PATH);
   \                     ??LoadTemplates_1:
   \   00000038   ........           LDR      R1,??DataTable18  ;; COMMANDS_PATH
   \   0000003C   000000EA           B        ??LoadTemplates_4
     70              break;
     71            case 2:
     72              strcpy(fn, MESSAGES_PATH);
   \                     ??LoadTemplates_2:
   \   00000040   ........           LDR      R1,??DataTable19  ;; MESSAGES_PATH
   \                     ??LoadTemplates_4:
   \   00000044   04008DE2           ADD      R0,SP,#+4
   \   00000048   1A0000EF           SWI      +26
     73              break;
     74            }
     75          
     76            if (GetFileStats(fn,&stat,&ul)==-1) return 0;
   \                     ??LoadTemplates_3:
   \   0000004C   0050E0E3           MVN      R5,#+0
   \   00000050   0D20A0E1           MOV      R2,SP
   \   00000054   411F8DE2           ADD      R1,SP,#+260
   \   00000058   04008DE2           ADD      R0,SP,#+4
   \   0000005C   840000EF           SWI      +132
   \   00000060   050050E1           CMP      R0,R5
   \   00000064   0200001A           BNE      ??LoadTemplates_5
   \                     ??LoadTemplates_6:
   \   00000068   0000A0E3           MOV      R0,#+0
   \                     ??LoadTemplates_7:
   \   0000006C   4BDF8DE2           ADD      SP,SP,#+300      ;; stack cleaning
   \   00000070   F087BDE8           POP      {R4-R10,PC}      ;; return
     77            if ((fsize=stat.size)<=0) return 0;
   \                     ??LoadTemplates_5:
   \   00000074   08719DE5           LDR      R7,[SP, #+264]
   \   00000078   010057E3           CMP      R7,#+1
   \   0000007C   F9FFFFBA           BLT      ??LoadTemplates_6
     78            if ((f=fopen(fn,A_ReadOnly+A_BIN,P_READ,&ul))==-1) return 0;
   \   00000080   0D30A0E1           MOV      R3,SP
   \   00000084   8020A0E3           MOV      R2,#+128
   \   00000088   801CA0E3           MOV      R1,#+32768
   \   0000008C   04008DE2           ADD      R0,SP,#+4
   \   00000090   0A0000EF           SWI      +10
   \   00000094   0080A0E1           MOV      R8,R0
   \   00000098   050058E1           CMP      R8,R5
   \   0000009C   F1FFFF0A           BEQ      ??LoadTemplates_6
     79          
     80            p=malloc(fsize+1);
   \   000000A0   010087E2           ADD      R0,R7,#+1
   \   000000A4   140000EF           SWI      +20
   \   000000A8   0060A0E1           MOV      R6,R0
     81            p[fread(f,p,fsize,&ul)]=0;
   \   000000AC   0050A0E3           MOV      R5,#+0
   \   000000B0   0D30A0E1           MOV      R3,SP
   \   000000B4   0720A0E1           MOV      R2,R7
   \   000000B8   0610A0E1           MOV      R1,R6
   \   000000BC   0800A0E1           MOV      R0,R8
   \   000000C0   0B0000EF           SWI      +11
   \   000000C4   0650C0E7           STRB     R5,[R0, +R6]
     82            fclose(f,&ul);
   \   000000C8   0D10A0E1           MOV      R1,SP
   \   000000CC   0800A0E1           MOV      R0,R8
   \   000000D0   0D0000EF           SWI      +13
     83            i=0;
   \   000000D4   0070A0E3           MOV      R7,#+0
     84            pp=p;
   \   000000D8   0680A0E1           MOV      R8,R6
   \   000000DC   020000EA           B        ??LoadTemplates_8
     85            for(;;)
     86            {
     87              c=*p;
     88              if (c<32)
     89              {
     90                if (pp&&(pp!=p))
     91                {
     92          	commands_lines=realloc(commands_lines,(i+1)*sizeof(char *));
     93          	commands_lines[i++]=pp;
     94                }
     95                pp=NULL;
     96                if (!c) break;
     97                *p=0;
     98              }
     99              else
    100              {
    101                if (pp==NULL) pp=p;
   \                     ??LoadTemplates_9:
   \   000000E0   000058E3           CMP      R8,#+0
   \   000000E4   0680A001           MOVEQ    R8,R6
    102              }
    103              p++;
   \                     ??LoadTemplates_10:
   \   000000E8   016086E2           ADD      R6,R6,#+1
   \                     ??LoadTemplates_8:
   \   000000EC   0090D6E5           LDRB     R9,[R6, #+0]
   \   000000F0   200059E3           CMP      R9,#+32
   \   000000F4   F9FFFFAA           BGE      ??LoadTemplates_9
   \   000000F8   000058E3           CMP      R8,#+0
   \   000000FC   06005811           CMPNE    R8,R6
   \   00000100   0600000A           BEQ      ??LoadTemplates_11
   \   00000104   340094E5           LDR      R0,[R4, #+52]
   \   00000108   01A087E2           ADD      R10,R7,#+1
   \   0000010C   0A11A0E1           LSL      R1,R10,#+2
   \   00000110   BA0000EF           SWI      +186
   \   00000114   340084E5           STR      R0,[R4, #+52]
   \   00000118   078180E7           STR      R8,[R0, +R7, LSL #+2]
   \   0000011C   0A70A0E1           MOV      R7,R10
   \                     ??LoadTemplates_11:
   \   00000120   0080A0E3           MOV      R8,#+0
   \   00000124   000059E3           CMP      R9,#+0
    104            }
    105            return i;
   \   00000128   0700A001           MOVEQ    R0,R7
   \   0000012C   CEFFFF0A           BEQ      ??LoadTemplates_7
   \   00000130   0050C6E5           STRB     R5,[R6, #+0]
   \   00000134   EBFFFFEA           B        ??LoadTemplates_10
    106          }
    107          
    108          
    109          char clm_hdr_text[48];

   \                                 In segment CODE, align 4, keep-with-next
    110          void UpdateTemplatesMenu_header(void)
    111          {
    112            switch (Mode)
   \                     UpdateTemplatesMenu_header:
   \   00000000   ........           LDR      R0,??DataTable20  ;; tmpl_menuhdr
   \   00000004   50109FE5           LDR      R1,??UpdateTemplatesMenu_header_0  ;; `?<Constant "\\302\\373\\341\\356\\360 \\361\\354\\340\\`
   \   00000008   00402DE9           PUSH     {LR}
   \   0000000C   302090E5           LDR      R2,[R0, #+48]
   \   00000010   000052E3           CMP      R2,#+0
   \   00000014   0700000A           BEQ      ??UpdateTemplatesMenu_header_1
   \   00000018   012052E2           SUBS     R2,R2,#+1
   \   0000001C   0400000A           BEQ      ??UpdateTemplatesMenu_header_2
   \   00000020   012052E2           SUBS     R2,R2,#+1
   \   00000024   0600000A           BEQ      ??UpdateTemplatesMenu_header_3
   \   00000028   012052E2           SUBS     R2,R2,#+1
   \   0000002C   0600000A           BEQ      ??UpdateTemplatesMenu_header_4
   \   00000030   0080BDE8           POP      {PC}
    113            {
    114            case 0:
    115              strcpy(clm_hdr_text, LG_SELSMILE);
    116              break;
    117            case 1:
    118              strcpy(clm_hdr_text,LG_SELCOMMAND);
   \                     ??UpdateTemplatesMenu_header_2:
   \   00000034   101081E2           ADD      R1,R1,#+16
   \                     ??UpdateTemplatesMenu_header_1:
   \   00000038   3C0080E2           ADD      R0,R0,#+60
   \   0000003C   1A0000EF           SWI      +26
   \   00000040   0080BDE8           POP      {PC}
    119              break;
    120            case 2:
    121              strcpy(clm_hdr_text,LG_SELTEMPLATE);
   \                     ??UpdateTemplatesMenu_header_3:
   \   00000044   241081E2           ADD      R1,R1,#+36
   \   00000048   000000EA           B        ??UpdateTemplatesMenu_header_5
    122              break;
    123            case 3:
    124              strcpy(clm_hdr_text,LG_CONTRESOURCES);
   \                     ??UpdateTemplatesMenu_header_4:
   \   0000004C   381081E2           ADD      R1,R1,#+56
   \                     ??UpdateTemplatesMenu_header_5:
   \   00000050   3C0080E2           ADD      R0,R0,#+60
   \   00000054   1A0000EF           SWI      +26
   \   00000058   0080BDE8           POP      {PC}
   \                     ??UpdateTemplatesMenu_header_0:
   \   0000005C   ........           DC32     `?<Constant "\\302\\373\\341\\356\\360 \\361\\354\\340\\`
    125              break;
    126            }
    127          }
    128          
    129          HEADER_DESC tmpl_menuhdr={0,0,131,21,NULL,(int)clm_hdr_text,LGP_NULL};
    130          
    131          int tmpl_menusoftkeys[]={0,1,2};
    132          extern int edmessage_id;
    133          

   \                                 In segment CODE, align 4, keep-with-next
    134          void SetCmdToEditMessage(char *command)
    135          {
   \                     SetCmdToEditMessage:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
    136            void *data=FindGUIbyId(edmessage_id,NULL);
    137            
    138            EDITCONTROL ec;
    139            ExtractEditControl(data,1,&ec);
    140            int pos=EDIT_GetCursorPos(data);
    141            WSHDR *ws_me = AllocWS(ec.pWS->wsbody[0]+strlen(command));
    142          
    143            switch (Mode)
   \   00000004   ........           LDR      R8,??DataTable20  ;; tmpl_menuhdr
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   ........           LDR      R0,??DataTable16  ;; edmessage_id
   \   00000010   2CD04DE2           SUB      SP,SP,#+44
   \   00000014   000090E5           LDR      R0,[R0, #+0]
   \   00000018   0010A0E3           MOV      R1,#+0
   \   0000001C   090200EF           SWI      +521
   \   00000020   0050A0E1           MOV      R5,R0
   \   00000024   0D20A0E1           MOV      R2,SP
   \   00000028   0110A0E3           MOV      R1,#+1
   \   0000002C   690100EF           SWI      +361
   \   00000030   0500A0E1           MOV      R0,R5
   \   00000034   D30100EF           SWI      +467
   \   00000038   0060A0E1           MOV      R6,R0
   \   0000003C   0400A0E1           MOV      R0,R4
   \   00000040   1B0000EF           SWI      +27
   \   00000044   28109DE5           LDR      R1,[SP, #+40]
   \   00000048   001091E5           LDR      R1,[R1, #+0]
   \   0000004C   B010D1E1           LDRH     R1,[R1, #+0]
   \   00000050   010080E0           ADD      R0,R0,R1
   \   00000054   250100EF           SWI      +293
   \   00000058   0070A0E1           MOV      R7,R0
   \   0000005C   300098E5           LDR      R0,[R8, #+48]
   \   00000060   000050E3           CMP      R0,#+0
   \   00000064   1700000A           BEQ      ??SetCmdToEditMessage_0
   \   00000068   010050E2           SUBS     R0,R0,#+1
   \   0000006C   0400000A           BEQ      ??SetCmdToEditMessage_1
   \   00000070   010050E2           SUBS     R0,R0,#+1
   \   00000074   1300000A           BEQ      ??SetCmdToEditMessage_0
   \   00000078   010050E2           SUBS     R0,R0,#+1
   \   0000007C   2600000A           BEQ      ??SetCmdToEditMessage_2
   \   00000080   5B0000EA           B        ??SetCmdToEditMessage_3
    144            {
    145            case 1:
    146              {
    147                ascii2ws(ws_me,command);
   \                     ??SetCmdToEditMessage_1:
   \   00000084   0410A0E1           MOV      R1,R4
   \   00000088   0700A0E1           MOV      R0,R7
   \   0000008C   ........           _BLF     ascii2ws,??ascii2ws??rA
    148                WSHDR * ws = AllocWS(wstrlen(ec.pWS) + wstrlen(ws_me));
   \   00000090   28009DE5           LDR      R0,[SP, #+40]
   \   00000094   230100EF           SWI      +291
   \   00000098   0090A0E1           MOV      R9,R0
   \   0000009C   0700A0E1           MOV      R0,R7
   \   000000A0   230100EF           SWI      +291
   \   000000A4   090080E0           ADD      R0,R0,R9
   \   000000A8   250100EF           SWI      +293
   \   000000AC   0090A0E1           MOV      R9,R0
    149                wstrcpy(ws, ws_me);
   \   000000B0   0710A0E1           MOV      R1,R7
   \   000000B4   1F0100EF           SWI      +287
    150                wstrcat(ws, ec.pWS);
   \   000000B8   28109DE5           LDR      R1,[SP, #+40]
   \   000000BC   0900A0E1           MOV      R0,R9
   \   000000C0   210100EF           SWI      +289
    151                EDIT_SetTextToEditControl(data, 1, ws);
   \   000000C4   3F0000EA           B        ??SetCmdToEditMessage_4
    152                EDIT_SetCursorPos(data, pos + strlen(command));
    153                FreeWS(ws);
    154              }
    155              break;
    156             
    157            case 0:
    158            case 2:
    159              {
    160                int c;
    161                char *p=command;
    162                wstrcpy(ws_me,ec.pWS);
   \                     ??SetCmdToEditMessage_0:
   \   000000C8   28109DE5           LDR      R1,[SP, #+40]
   \   000000CC   0700A0E1           MOV      R0,R7
   \   000000D0   1F0100EF           SWI      +287
   \   000000D4   050000EA           B        ??SetCmdToEditMessage_5
    163                while(c=*p++)
    164                  wsInsertChar(ws_me,char8to16(c),pos++);
   \                     ??SetCmdToEditMessage_6:
   \   000000D8   ........           _BLF     char8to16,??char8to16??rA
   \   000000DC   0620A0E1           MOV      R2,R6
   \   000000E0   0010A0E1           MOV      R1,R0
   \   000000E4   0700A0E1           MOV      R0,R7
   \   000000E8   1D0000EF           SWI      +29
   \   000000EC   016086E2           ADD      R6,R6,#+1
   \                     ??SetCmdToEditMessage_5:
   \   000000F0   ........           LDRB     R0,[R4], #+1
   \   000000F4   000050E3           CMP      R0,#+0
   \   000000F8   F6FFFF1A           BNE      ??SetCmdToEditMessage_6
    165                EDIT_SetTextToEditControl(data,1,ws_me);
   \   000000FC   0720A0E1           MOV      R2,R7
   \   00000100   0110A0E3           MOV      R1,#+1
   \   00000104   0500A0E1           MOV      R0,R5
   \   00000108   DE0100EF           SWI      +478
    166                EDIT_SetCursorPos(data,pos);
   \   0000010C   0610A0E1           MOV      R1,R6
   \   00000110   0500A0E1           MOV      R0,R5
   \   00000114   D40100EF           SWI      +468
   \   00000118   350000EA           B        ??SetCmdToEditMessage_3
    167              }
    168              break;
    169             
    170            case 3:
    171              {
    172                int msglen = wstrlen(ec.pWS);
   \                     ??SetCmdToEditMessage_2:
   \   0000011C   28009DE5           LDR      R0,[SP, #+40]
   \   00000120   230100EF           SWI      +291
   \   00000124   00A0A0E1           MOV      R10,R0
    173                ascii2ws(ws_me,command);
   \   00000128   0410A0E1           MOV      R1,R4
   \   0000012C   0700A0E1           MOV      R0,R7
   \   00000130   ........           _BLF     ascii2ws,??ascii2ws??rA
    174                WSHDR * ws = AllocWS(msglen + wstrlen(ws_me)+2);
   \   00000134   0700A0E1           MOV      R0,R7
   \   00000138   230100EF           SWI      +291
   \   0000013C   0A0080E0           ADD      R0,R0,R10
   \   00000140   020080E2           ADD      R0,R0,#+2
   \   00000144   250100EF           SWI      +293
   \   00000148   0090A0E1           MOV      R9,R0
    175                if (pos==1)
   \   0000014C   010056E3           CMP      R6,#+1
   \   00000150   0500001A           BNE      ??SetCmdToEditMessage_7
    176                {
    177                  pos = pos+2;
    178                  wsprintf(ws, "%w: %w",ws_me, ec.pWS);
   \   00000154   28309DE5           LDR      R3,[SP, #+40]
   \   00000158   B0109FE5           LDR      R1,??SetCmdToEditMessage_8  ;; `?<Constant "%w: %w">`
   \   0000015C   0720A0E1           MOV      R2,R7
   \   00000160   240100EF           SWI      +292
   \   00000164   0360A0E3           MOV      R6,#+3
   \   00000168   160000EA           B        ??SetCmdToEditMessage_4
    179                }
    180                else
    181                {
    182                  wstrncpy(ws, ec.pWS, pos-1);
   \                     ??SetCmdToEditMessage_7:
   \   0000016C   28109DE5           LDR      R1,[SP, #+40]
   \   00000170   012046E2           SUB      R2,R6,#+1
   \   00000174   200100EF           SWI      +288
    183                  wstrcat(ws, ws_me);
   \   00000178   0710A0E1           MOV      R1,R7
   \   0000017C   0900A0E1           MOV      R0,R9
   \   00000180   210100EF           SWI      +289
    184                  if((pos+1)!=msglen)
   \   00000184   010086E2           ADD      R0,R6,#+1
   \   00000188   0A0050E1           CMP      R0,R10
   \   0000018C   0D00000A           BEQ      ??SetCmdToEditMessage_4
   \   00000190   06004AE0           SUB      R0,R10,R6
   \   00000194   01B080E2           ADD      R11,R0,#+1
   \   00000198   0B00A0E1           MOV      R0,R11
    185                  {
    186                    WSHDR * ws2 = AllocWS(msglen-pos+1);
   \   0000019C   250100EF           SWI      +293
    187                    wstrcpybypos(ws2, ec.pWS, pos, msglen-pos+1);
   \   000001A0   28109DE5           LDR      R1,[SP, #+40]
   \   000001A4   00A0A0E1           MOV      R10,R0
   \   000001A8   0B30A0E1           MOV      R3,R11
   \   000001AC   0620A0E1           MOV      R2,R6
   \   000001B0   140200EF           SWI      +532
    188                    wstrcat(ws, ws2);
   \   000001B4   0A10A0E1           MOV      R1,R10
   \   000001B8   0900A0E1           MOV      R0,R9
   \   000001BC   210100EF           SWI      +289
    189                    FreeWS(ws2);
   \   000001C0   0A00A0E1           MOV      R0,R10
   \   000001C4   290100EF           SWI      +297
    190                  }
    191                }
    192                EDIT_SetTextToEditControl(data, 1, ws);
   \                     ??SetCmdToEditMessage_4:
   \   000001C8   0920A0E1           MOV      R2,R9
   \   000001CC   0110A0E3           MOV      R1,#+1
   \   000001D0   0500A0E1           MOV      R0,R5
   \   000001D4   DE0100EF           SWI      +478
    193                EDIT_SetCursorPos(data, pos + strlen(command));
   \   000001D8   0400A0E1           MOV      R0,R4
   \   000001DC   1B0000EF           SWI      +27
   \   000001E0   061080E0           ADD      R1,R0,R6
   \   000001E4   0500A0E1           MOV      R0,R5
   \   000001E8   D40100EF           SWI      +468
    194                FreeWS(ws);
   \   000001EC   0900A0E1           MOV      R0,R9
   \   000001F0   290100EF           SWI      +297
    195              }
    196              break;    
    197            }
    198            FreeWS(ws_me);
   \                     ??SetCmdToEditMessage_3:
   \   000001F4   0700A0E1           MOV      R0,R7
   \   000001F8   290100EF           SWI      +297
    199            GeneralFunc_flag1(Templates_Menu_ID,1);
   \   000001FC   280098E5           LDR      R0,[R8, #+40]
   \   00000200   0110A0E3           MOV      R1,#+1
   \   00000204   3D0100EF           SWI      +317
    200          }
   \   00000208   2CD08DE2           ADD      SP,SP,#+44
   \   0000020C   F08FBDE8           POP      {R4-R11,PC}      ;; return
   \                     ??SetCmdToEditMessage_8:
   \   00000210   ........           DC32     `?<Constant "%w: %w">`
    201          
    202          SOFTKEY_DESC tmpl_menu_sk[]=
    203          {
    204            {0x0018,0x0000,(int)LG_SELECT},
    205            {0x0001,0x0000,(int)LG_CANCEL},
    206            {0x003D,0x0000,(int)LGP_DOIT_PIC}
    207          };
    208          
    209          SOFTKEYSTAB tmpl_menu_skt=
    210          {
    211            tmpl_menu_sk,3
    212          };
    213          

   \                                 In segment CODE, align 4, keep-with-next
    214          void tmpl_menuitemhandler(void *data, int curitem, void *unk)
    215          {
   \                     tmpl_menuitemhandler:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
    216            WSHDR * ws = AllocMenuWS(data,strlen(commands_lines[curitem]));
   \   00000004   ........           LDR      R6,??DataTable20  ;; tmpl_menuhdr
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   340096E5           LDR      R0,[R6, #+52]
   \   00000010   0150A0E1           MOV      R5,R1
   \   00000014   050190E7           LDR      R0,[R0, +R5, LSL #+2]
   \   00000018   1B0000EF           SWI      +27
   \   0000001C   0010A0E1           MOV      R1,R0
   \   00000020   0400A0E1           MOV      R0,R4
   \   00000024   980100EF           SWI      +408
   \   00000028   0070A0E1           MOV      R7,R0
    217            void * item = AllocMenuItem(data);
   \   0000002C   0400A0E1           MOV      R0,R4
   \   00000030   970100EF           SWI      +407
   \   00000034   0080A0E1           MOV      R8,R0
    218            ascii2ws(ws, commands_lines[curitem]);
   \   00000038   340096E5           LDR      R0,[R6, #+52]
   \   0000003C   051190E7           LDR      R1,[R0, +R5, LSL #+2]
   \   00000040   0700A0E1           MOV      R0,R7
   \   00000044   ........           _BLF     ascii2ws,??ascii2ws??rA
    219            SetMenuItemText(data, item, ws, curitem);
   \   00000048   0530A0E1           MOV      R3,R5
   \   0000004C   0720A0E1           MOV      R2,R7
   \   00000050   0810A0E1           MOV      R1,R8
   \   00000054   0400A0E1           MOV      R0,R4
   \   00000058   9A0100EF           SWI      +410
    220          }
   \   0000005C   F081BDE8           POP      {R4-R8,PC}       ;; return
    221          

   \                                 In segment CODE, align 4, keep-with-next
    222          void tmpl_menu_ghook(void *data, int cmd)
    223          {
   \                     tmpl_menu_ghook:
   \   00000000   00402DE9           PUSH     {LR}
    224            if (cmd == TI_CMD_FOCUS)
   \   00000004   0A0051E3           CMP      R1,#+10
   \   00000008   0100001A           BNE      ??tmpl_menu_ghook_0
    225            {
    226              DisableIDLETMR();
   \   0000000C   7F0100EF           SWI      +383
   \   00000010   0080BDE8           POP      {PC}
    227            }
    228            if (cmd == TI_CMD_DESTROY)
   \                     ??tmpl_menu_ghook_0:
   \   00000014   030051E3           CMP      R1,#+3
   \   00000018   0080BD18           POPNE    {PC}
    229            {
    230              FreeTemplates();
   \   0000001C   0040BDE8           POP      {LR}             ;; Pop
   \   00000020   ........           B        FreeTemplates    ;; tailcall
    231            }
    232          }
    233          

   \                                 In segment CODE, align 4, keep-with-next
    234          static int tmpl_menu_keyhook(void *data, GUI_MSG *msg)
    235          {
   \                     tmpl_menu_keyhook:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
    236            if ((msg->keys==0x18)||(msg->keys==0x3D))
   \   00000004   ........           LDR      R5,??DataTable20  ;; tmpl_menuhdr
   \   00000008   0140A0E1           MOV      R4,R1
   \   0000000C   F210D4E1           LDRSH    R1,[R4, #+2]
   \   00000010   180051E3           CMP      R1,#+24
   \   00000014   3D005113           CMPNE    R1,#+61
   \   00000018   0A00001A           BNE      ??tmpl_menu_keyhook_0
    237            {
    238              if (tmpl_num)
   \   0000001C   381095E5           LDR      R1,[R5, #+56]
   \   00000020   000051E3           CMP      R1,#+0
   \   00000024   0400000A           BEQ      ??tmpl_menu_keyhook_1
    239                SetCmdToEditMessage(commands_lines[GetCurMenuItem(data)]);
   \   00000028   8F0100EF           SWI      +399
   \   0000002C   341095E5           LDR      R1,[R5, #+52]
   \   00000030   000191E7           LDR      R0,[R1, +R0, LSL #+2]
   \   00000034   ........           BL       SetCmdToEditMessage
   \   00000038   020000EA           B        ??tmpl_menu_keyhook_0
    240              else
    241                GeneralFunc_flag1(Templates_Menu_ID, 1);
   \                     ??tmpl_menu_keyhook_1:
   \   0000003C   280095E5           LDR      R0,[R5, #+40]
   \   00000040   0110A0E3           MOV      R1,#+1
   \   00000044   3D0100EF           SWI      +317
    242            }
    243            if (msg->keys==0x01)
   \                     ??tmpl_menu_keyhook_0:
   \   00000048   F200D4E1           LDRSH    R0,[R4, #+2]
   \   0000004C   010050E3           CMP      R0,#+1
   \   00000050   0200001A           BNE      ??tmpl_menu_keyhook_2
    244            {
    245              GeneralFunc_flag1(Select_Menu_ID,1);
   \   00000054   2C0095E5           LDR      R0,[R5, #+44]
   \   00000058   0110A0E3           MOV      R1,#+1
   \   0000005C   3D0100EF           SWI      +317
    246            }  
    247            return(0);
   \                     ??tmpl_menu_keyhook_2:
   \   00000060   0000A0E3           MOV      R0,#+0
   \   00000064   3080BDE8           POP      {R4,R5,PC}       ;; return
    248          }
    249          

   \                                 In segment DATA_C, align 4, align-sorted
    250          static const MENU_DESC tmpl_menu=
   \                     tmpl_menu:
   \   00000000   08000000....       DC32 8, tmpl_menu_keyhook, tmpl_menu_ghook, 0H, tmpl_menusoftkeys
   \              ............
   \              00000000....
   \              ....        
   \   00000014   ........1000       DC32 tmpl_menu_skt, 16, tmpl_menuitemhandler, 0H, 0H, 0
   \              0000........
   \              000000000000
   \              000000000000
    251          {
    252            8,tmpl_menu_keyhook,tmpl_menu_ghook,NULL,
    253            tmpl_menusoftkeys,
    254            &tmpl_menu_skt,
    255            0x10,
    256            tmpl_menuitemhandler,
    257            NULL, //menuitems,
    258            NULL, //menuprocs,
    259            0
    260          };
    261          
    262          HEADER_DESC tmpl_menuhdr;
    263          

   \                                 In segment CODE, align 4, keep-with-next
    264          void DispTemplatesMenu()
    265          {
   \                     DispTemplatesMenu:
   \   00000000   10402DE9           PUSH     {R4,LR}
    266            UpdateTemplatesMenu_header();
    267            if (Mode == 3) tmpl_num = LoadTemplates_new();
   \   00000004   78409FE5           LDR      R4,??DispTemplatesMenu_0  ;; tmpl_menuhdr
   \   00000008   ........           BL       UpdateTemplatesMenu_header
   \   0000000C   300094E5           LDR      R0,[R4, #+48]
   \   00000010   030050E3           CMP      R0,#+3
   \   00000014   0100001A           BNE      ??DispTemplatesMenu_1
   \   00000018   ........           BL       LoadTemplates_new
   \   0000001C   000000EA           B        ??DispTemplatesMenu_2
    268            else tmpl_num = LoadTemplates();
   \                     ??DispTemplatesMenu_1:
   \   00000020   ........           BL       LoadTemplates
   \                     ??DispTemplatesMenu_2:
   \   00000024   380084E5           STR      R0,[R4, #+56]
    269            patch_header(&tmpl_menuhdr);
   \   00000028   0000A0E3           MOV      R0,#+0
   \   0000002C   B000C4E1           STRH     R0,[R4, #+0]
   \   00000030   1800A0E3           MOV      R0,#+24
   \   00000034   B200C4E1           STRH     R0,[R4, #+2]
   \   00000038   888100EF           SWI      +33160
   \   0000003C   010040E2           SUB      R0,R0,#+1
   \   00000040   B400C4E1           STRH     R0,[R4, #+4]
   \   00000044   8A8100EF           SWI      +33162
    270            Templates_Menu_ID = CreateMenu(0,0,&tmpl_menu,&tmpl_menuhdr,0,tmpl_num,0,0);
   \   00000048   38209FE5           LDR      R2,??DispTemplatesMenu_0+0x4  ;; tmpl_menu
   \   0000004C   180080E2           ADD      R0,R0,#+24
   \   00000050   B600C4E1           STRH     R0,[R4, #+6]
   \   00000054   0000A0E3           MOV      R0,#+0
   \   00000058   01002DE9           PUSH     {R0}
   \   0000005C   01002DE9           PUSH     {R0}
   \   00000060   380094E5           LDR      R0,[R4, #+56]
   \   00000064   0430A0E1           MOV      R3,R4
   \   00000068   01002DE9           PUSH     {R0}
   \   0000006C   0010A0E3           MOV      R1,#+0
   \   00000070   0000A0E3           MOV      R0,#+0
   \   00000074   01002DE9           PUSH     {R0}
   \   00000078   520100EF           SWI      +338
   \   0000007C   280084E5           STR      R0,[R4, #+40]
    271          }
   \   00000080   1F80BDE8           POP      {R0-R4,PC}       ;; return
   \                     ??DispTemplatesMenu_0:
   \   00000084   ........           DC32     tmpl_menuhdr
   \   00000088   ........           DC32     tmpl_menu
    272          
    273          //================================== Меню выбора ===============================
    274          #define SEL_MENU_ITEMS_NUM 5
    275          

   \                                 In segment CODE, align 4, keep-with-next
    276          void select_smile(GUI * data)
    277          {
   \                     select_smile:
   \   00000000   10402DE9           PUSH     {R4,LR}
    278            Mode = 0;
   \   00000004   ........           LDR      R4,??DataTable20  ;; tmpl_menuhdr
   \   00000008   0000A0E3           MOV      R0,#+0
   \   0000000C   300084E5           STR      R0,[R4, #+48]
    279            void * ed_gui = NULL;
    280            if (ed_gui = FindGUIbyId(edmessage_id, NULL))
   \   00000010   ........           LDR      R0,??DataTable16  ;; edmessage_id
   \   00000014   0010A0E3           MOV      R1,#+0
   \   00000018   000090E5           LDR      R0,[R0, #+0]
   \   0000001C   090200EF           SWI      +521
   \   00000020   000050E3           CMP      R0,#+0
   \   00000024   0000000A           BEQ      ??select_smile_0
    281              CreateSmileSelectGUI(ed_gui);
   \   00000028   ........           _BLF     CreateSmileSelectGUI,??CreateSmileSelectGUI??rA
    282            GeneralFunc_flag1(Select_Menu_ID, 1);
   \                     ??select_smile_0:
   \   0000002C   2C0094E5           LDR      R0,[R4, #+44]
   \   00000030   0110A0E3           MOV      R1,#+1
   \   00000034   3D0100EF           SWI      +317
    283          }
   \   00000038   1080BDE8           POP      {R4,PC}          ;; return
    284          

   \                                 In segment CODE, align 4, keep-with-next
    285          void select_command(GUI * data)
    286          {
   \                     select_command:
   \   00000000   10402DE9           PUSH     {R4,LR}
    287            Mode = 1;
   \   00000004   ........           LDR      R4,??DataTable20  ;; tmpl_menuhdr
   \   00000008   0100A0E3           MOV      R0,#+1
   \   0000000C   300084E5           STR      R0,[R4, #+48]
    288            DispTemplatesMenu();
   \   00000010   ........           BL       DispTemplatesMenu
    289            GeneralFunc_flag1(Select_Menu_ID, 1);
   \   00000014   2C0094E5           LDR      R0,[R4, #+44]
   \   00000018   0110A0E3           MOV      R1,#+1
   \   0000001C   3D0100EF           SWI      +317
    290          }
   \   00000020   1080BDE8           POP      {R4,PC}          ;; return
    291          

   \                                 In segment CODE, align 4, keep-with-next
    292          void select_template(GUI * data)
    293          {
   \                     select_template:
   \   00000000   10402DE9           PUSH     {R4,LR}
    294            Mode = 2;
   \   00000004   ........           LDR      R4,??DataTable20  ;; tmpl_menuhdr
   \   00000008   0200A0E3           MOV      R0,#+2
   \   0000000C   300084E5           STR      R0,[R4, #+48]
    295            DispTemplatesMenu();
   \   00000010   ........           BL       DispTemplatesMenu
    296            GeneralFunc_flag1(Select_Menu_ID, 1);
   \   00000014   2C0094E5           LDR      R0,[R4, #+44]
   \   00000018   0110A0E3           MOV      R1,#+1
   \   0000001C   3D0100EF           SWI      +317
    297          }
   \   00000020   1080BDE8           POP      {R4,PC}          ;; return
    298          

   \                                 In segment CODE, align 4, keep-with-next
    299          void select_nick(GUI * data)
    300          {
   \                     select_nick:
   \   00000000   10402DE9           PUSH     {R4,LR}
    301            Mode = 3;
   \   00000004   ........           LDR      R4,??DataTable20  ;; tmpl_menuhdr
   \   00000008   0300A0E3           MOV      R0,#+3
   \   0000000C   300084E5           STR      R0,[R4, #+48]
    302            DispTemplatesMenu();
   \   00000010   ........           BL       DispTemplatesMenu
    303            GeneralFunc_flag1(Select_Menu_ID, 1);
   \   00000014   2C0094E5           LDR      R0,[R4, #+44]
   \   00000018   0110A0E3           MOV      R1,#+1
   \   0000001C   3D0100EF           SWI      +317
    304          }
   \   00000020   1080BDE8           POP      {R4,PC}          ;; return
    305          

   \                                 In segment CODE, align 4, keep-with-next
    306          void select_close(GUI * data)
    307          {
    308            GeneralFunc_flag1(edmessage_id, 1);
   \                     select_close:
   \   00000000   ........           LDR      R0,??DataTable16  ;; edmessage_id
   \   00000004   00402DE9           PUSH     {LR}
   \   00000008   000090E5           LDR      R0,[R0, #+0]
   \   0000000C   0110A0E3           MOV      R1,#+1
   \   00000010   3D0100EF           SWI      +317
    309            GeneralFunc_flag1(Select_Menu_ID, 1);
   \   00000014   0C009FE5           LDR      R0,??select_close_0  ;; tmpl_menuhdr + 44
   \   00000018   0110A0E3           MOV      R1,#+1
   \   0000001C   000090E5           LDR      R0,[R0, #+0]
   \   00000020   3D0100EF           SWI      +317
    310          }
   \   00000024   0080BDE8           POP      {PC}             ;; return
   \                     ??select_close_0:
   \   00000028   ........           DC32     tmpl_menuhdr + 44
    311          
    312          HEADER_DESC sel_menu_header={0,0,131,21,NULL,(int)LG_SELECT2,LGP_NULL};
    313          
    314          int sel_menu_softkeys[]={0,1,2};
    315          
    316          MENUITEM_DESC sel_menu_items[SEL_MENU_ITEMS_NUM]=
    317          {
    318            {NULL, (int)LG_SMILE,         LGP_NULL, NULL, NULL, MENU_FLAG3, MENU_FLAG2},
    319            {NULL, (int)LG_COMMANDS,      LGP_NULL, NULL, NULL, MENU_FLAG3, MENU_FLAG2},
    320            {NULL, (int)LG_MSGTEMPLATE,   LGP_NULL, NULL, NULL, MENU_FLAG3, MENU_FLAG2},
    321            {NULL, (int)LG_CONTRESOURCE,  LGP_NULL, NULL, NULL, MENU_FLAG3, MENU_FLAG2},
    322            {NULL, (int)LG_CLOSEDLG,      LGP_NULL, NULL, NULL, MENU_FLAG3, MENU_FLAG2},
    323          };
    324          

   \                                 In segment DATA_C, align 4, align-sorted
    325          const MENUPROCS_DESC sel_menu_procs[SEL_MENU_ITEMS_NUM]=
   \                     sel_menu_procs:
   \   00000000   ............       DC32 select_smile, select_command, select_template, select_nick
   \              ............
   \              ........    
   \   00000010   ........           DC32 select_close
    326          {
    327            select_smile,
    328            select_command,
    329            select_template,
    330            select_nick,
    331            select_close
    332          };
    333          
    334          SOFTKEY_DESC sel_menu_sk[]=
    335          {
    336            {0x0018,0x0000,(int)LG_SELECT},
    337            {0x0001,0x0000,(int)LG_BACK},
    338            {0x003D,0x0000,(int)LGP_DOIT_PIC}
    339          };
    340          
    341          SOFTKEYSTAB sel_menu_skt=
    342          {
    343            sel_menu_sk,3
    344          };
    345          

   \                                 In segment CODE, align 4, keep-with-next
    346          void sel_menu_ghook(void *data, int cmd)
    347          {
   \                     sel_menu_ghook:
   \   00000000   00402DE9           PUSH     {LR}
    348            if (cmd==0x0A)
   \   00000004   0A0051E3           CMP      R1,#+10
   \   00000008   0080BD18           POPNE    {PC}
    349            {
    350              DisableIDLETMR();
   \   0000000C   7F0100EF           SWI      +383
    351            }
    352          }
   \   00000010   0080BDE8           POP      {PC}             ;; return

   \                                 In segment DATA_I, align 4, align-sorted
   \                     tmpl_menuhdr:
   \   00000000                      DS8 20
   \   00000014                      REQUIRE `?<Initializer for tmpl_menuhdr>`
   \                     sel_menu_header:
   \   00000014                      DS8 20
   \   00000028                      REQUIRE `?<Initializer for sel_menu_header>`
   \                     Templates_Menu_ID:
   \   00000028                      DS8 4
   \   0000002C                      REQUIRE `?<Initializer for Templates_Menu_ID>`
   \                     Select_Menu_ID:
   \   0000002C                      DS8 4
   \   00000030                      REQUIRE `?<Initializer for Select_Menu_ID>`
   \                     Mode:
   \   00000030                      DS8 4
   \   00000034                      REQUIRE `?<Initializer for Mode>`
   \                     commands_lines:
   \   00000034                      DS8 4
   \   00000038                      REQUIRE `?<Initializer for commands_lines>`
   \                     tmpl_num:
   \   00000038                      DS8 4
   \   0000003C                      REQUIRE `?<Initializer for tmpl_num>`
   \                     clm_hdr_text:
   \   0000003C                      DS8 48
   \   0000006C                      REQUIRE `?<Initializer for clm_hdr_text>`
    353          
    354          MENU_DESC sel_menu_struct=
   \                     sel_menu_struct:
   \   0000006C                      DS8 44
   \   00000098                      REQUIRE `?<Initializer for sel_menu_struct>`

   \                                 In segment DATA_I, align 4, align-sorted
   \                     tmpl_menusoftkeys:
   \   00000000                      DS8 12
   \   0000000C                      REQUIRE `?<Initializer for tmpl_menusoftkeys>`

   \                                 In segment DATA_I, align 4, align-sorted
   \                     tmpl_menu_sk:
   \   00000000                      DS8 24
   \   00000018                      REQUIRE `?<Initializer for tmpl_menu_sk>`

   \                                 In segment DATA_I, align 4, align-sorted
   \                     tmpl_menu_skt:
   \   00000000                      DS8 8
   \   00000008                      REQUIRE `?<Initializer for tmpl_menu_skt>`

   \                                 In segment DATA_I, align 4, align-sorted
   \                     sel_menu_softkeys:
   \   00000000                      DS8 12
   \   0000000C                      REQUIRE `?<Initializer for sel_menu_softkeys>`

   \                                 In segment DATA_I, align 4, align-sorted
   \                     sel_menu_items:
   \   00000000                      DS8 140
   \   0000008C                      REQUIRE `?<Initializer for sel_menu_items>`

   \                                 In segment DATA_I, align 4, align-sorted
   \                     sel_menu_sk:
   \   00000000                      DS8 24
   \   00000018                      REQUIRE `?<Initializer for sel_menu_sk>`

   \                                 In segment DATA_I, align 4, align-sorted
   \                     sel_menu_skt:
   \   00000000                      DS8 8
   \   00000008                      REQUIRE `?<Initializer for sel_menu_skt>`
    355          {
    356            8, NULL, sel_menu_ghook, NULL,
    357            sel_menu_softkeys,
    358            &sel_menu_skt,
    359            0x11,
    360            NULL,
    361            sel_menu_items, //menuitems,
    362            sel_menu_procs, //menuprocs,
    363            SEL_MENU_ITEMS_NUM
    364          };
    365          

   \                                 In segment CODE, align 4, keep-with-next
    366          void DispSelectMenu()
    367          {
    368            FSTATS fstat;
    369            unsigned int io_error = NULL;
    370            int to_remove[SEL_MENU_ITEMS_NUM + 1];
    371            int n = NULL;
    372            
    373            if (GetFileStats(SMILE_FILE, &fstat, &io_error) == -1 || !s_top || !SmilesImgList)
   \                     DispSelectMenu:
   \   00000000   ........           LDR      R0,??DataTable17  ;; SMILE_FILE
   \   00000004   70402DE9           PUSH     {R4-R6,LR}
   \   00000008   44D04DE2           SUB      SP,SP,#+68
   \   0000000C   0040A0E3           MOV      R4,#+0
   \   00000010   00408DE5           STR      R4,[SP, #+0]
   \   00000014   0060A0E3           MOV      R6,#+0
   \   00000018   0450E0E1           MVN      R5,R4
   \   0000001C   0D20A0E1           MOV      R2,SP
   \   00000020   1C108DE2           ADD      R1,SP,#+28
   \   00000024   840000EF           SWI      +132
   \   00000028   050050E1           CMP      R0,R5
   \   0000002C   0700000A           BEQ      ??DispSelectMenu_0
   \   00000030   E4009FE5           LDR      R0,??DispSelectMenu_1  ;; s_top
   \   00000034   000090E5           LDR      R0,[R0, #+0]
   \   00000038   000050E3           CMP      R0,#+0
   \   0000003C   0300000A           BEQ      ??DispSelectMenu_0
   \   00000040   D8009FE5           LDR      R0,??DispSelectMenu_1+0x4  ;; SmilesImgList
   \   00000044   000090E5           LDR      R0,[R0, #+0]
   \   00000048   000050E3           CMP      R0,#+0
   \   0000004C   0100001A           BNE      ??DispSelectMenu_2
    374              to_remove[++n] = 0; // Не показываем пункт "Смайлы"
   \                     ??DispSelectMenu_0:
   \   00000050   0160A0E3           MOV      R6,#+1
   \   00000054   08408DE5           STR      R4,[SP, #+8]
    375            if (GetFileStats(COMMANDS_PATH, &fstat, &io_error) == -1)
   \                     ??DispSelectMenu_2:
   \   00000058   ........           LDR      R0,??DataTable18  ;; COMMANDS_PATH
   \   0000005C   0D20A0E1           MOV      R2,SP
   \   00000060   1C108DE2           ADD      R1,SP,#+28
   \   00000064   840000EF           SWI      +132
   \   00000068   050050E1           CMP      R0,R5
   \   0000006C   0300001A           BNE      ??DispSelectMenu_3
    376              to_remove[++n] = 1; // Не показываем пункт "Комманды"
   \   00000070   016086E2           ADD      R6,R6,#+1
   \   00000074   04008DE2           ADD      R0,SP,#+4
   \   00000078   0110A0E3           MOV      R1,#+1
   \   0000007C   061180E7           STR      R1,[R0, +R6, LSL #+2]
    377            if (GetFileStats(MESSAGES_PATH, &fstat, &io_error) == -1)
   \                     ??DispSelectMenu_3:
   \   00000080   ........           LDR      R0,??DataTable19  ;; MESSAGES_PATH
   \   00000084   0D20A0E1           MOV      R2,SP
   \   00000088   1C108DE2           ADD      R1,SP,#+28
   \   0000008C   840000EF           SWI      +132
   \   00000090   050050E1           CMP      R0,R5
   \   00000094   0300001A           BNE      ??DispSelectMenu_4
    378              to_remove[++n] = 2; // Не показываем пункт "Шаблоны"
   \   00000098   016086E2           ADD      R6,R6,#+1
   \   0000009C   04008DE2           ADD      R0,SP,#+4
   \   000000A0   0210A0E3           MOV      R1,#+2
   \   000000A4   061180E7           STR      R1,[R0, +R6, LSL #+2]
    379            
    380          #ifndef NEWSGOLD
    381            to_remove[++n] = 4; // Не показываем пункт "Закрыть" для сголд
    382          #endif
    383            
    384            to_remove[0] = n;
   \                     ??DispSelectMenu_4:
   \   000000A8   04608DE5           STR      R6,[SP, #+4]
    385            if (n == SEL_MENU_ITEMS_NUM) return;
   \   000000AC   050056E3           CMP      R6,#+5
   \   000000B0   1700000A           BEQ      ??DispSelectMenu_5
    386            
    387            patch_header(&sel_menu_header);
   \   000000B4   ........           LDR      R5,??DataTable20  ;; tmpl_menuhdr
   \   000000B8   1800A0E3           MOV      R0,#+24
   \   000000BC   B441C5E1           STRH     R4,[R5, #+20]
   \   000000C0   B601C5E1           STRH     R0,[R5, #+22]
   \   000000C4   888100EF           SWI      +33160
   \   000000C8   010040E2           SUB      R0,R0,#+1
   \   000000CC   B801C5E1           STRH     R0,[R5, #+24]
   \   000000D0   8A8100EF           SWI      +33162
   \   000000D4   180080E2           ADD      R0,R0,#+24
   \   000000D8   BA01C5E1           STRH     R0,[R5, #+26]
    388            Select_Menu_ID = CreateMenu(0, 0, &sel_menu_struct, &sel_menu_header, 0, SEL_MENU_ITEMS_NUM, 0, to_remove);
   \   000000DC   04008DE2           ADD      R0,SP,#+4
   \   000000E0   01002DE9           PUSH     {R0}
   \   000000E4   143085E2           ADD      R3,R5,#+20
   \   000000E8   6C2085E2           ADD      R2,R5,#+108
   \   000000EC   0000A0E3           MOV      R0,#+0
   \   000000F0   01002DE9           PUSH     {R0}
   \   000000F4   0500A0E3           MOV      R0,#+5
   \   000000F8   01002DE9           PUSH     {R0}
   \   000000FC   0400A0E1           MOV      R0,R4
   \   00000100   01002DE9           PUSH     {R0}
   \   00000104   0010A0E1           MOV      R1,R0
   \   00000108   520100EF           SWI      +338
   \   0000010C   2C0085E5           STR      R0,[R5, #+44]
    389          }
   \   00000110   10D08DE2           ADD      SP,SP,#+16
   \                     ??DispSelectMenu_5:
   \   00000114   44D08DE2           ADD      SP,SP,#+68       ;; stack cleaning
   \   00000118   7080BDE8           POP      {R4-R6,PC}       ;; return
   \                     ??DispSelectMenu_1:
   \   0000011C   ........           DC32     s_top
   \   00000120   ........           DC32     SmilesImgList

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable16:
   \   00000000   ........           DC32     edmessage_id

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable17:
   \   00000000   ........           DC32     SMILE_FILE

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable18:
   \   00000000   ........           DC32     COMMANDS_PATH

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable19:
   \   00000000   ........           DC32     MESSAGES_PATH

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable20:
   \   00000000   ........           DC32     tmpl_menuhdr

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for tmpl_menuhdr>`:
   \   00000000   000000008300       DC16 0, 0, 131, 21
   \              1500        
   \   00000008   00000000....       DC32 0H, clm_hdr_text, 2147483647
   \              ....FFFFFF7F
   \                     `?<Initializer for sel_menu_header>`:
   \   00000014   000000008300       DC16 0, 0, 131, 21
   \              1500        
   \   0000001C   00000000....       DC32 0H, `?<Constant "\\302\\373\\341\\356\\360...">`, 2147483647
   \              ....FFFFFF7F
   \                     `?<Initializer for Templates_Menu_ID>`:
   \   00000028   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for Select_Menu_ID>`:
   \   0000002C   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for Mode>`:
   \   00000030   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for commands_lines>`:
   \   00000034   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for tmpl_num>`:
   \   00000038   00000000           DC32 0
   \                     `?<Initializer for clm_hdr_text>`:
   \   0000003C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000004C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000005C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \                     `?<Initializer for sel_menu_struct>`:
   \   0000006C   080000000000       DC32 8, 0H, sel_menu_ghook, 0H, sel_menu_softkeys, sel_menu_skt, 17, 0H
   \              0000........
   \              00000000....
   \              ............
   \              110000000000
   \              0000        
   \   0000008C   ............       DC32 sel_menu_items, sel_menu_procs, 5
   \              ....05000000

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for tmpl_menusoftkeys>`:
   \   00000000   000000000100       DC32 0, 1, 2
   \              000002000000

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for tmpl_menu_sk>`:
   \   00000000   18000000           DC16 24, 0
   \   00000004   ........           DC32 `?<Constant "\\302\\373\\341\\356\\360">`
   \   00000008   01000000           DC16 1, 0
   \   0000000C   ........           DC32 `?<Constant "\\316\\362\\354\\345\\355\\340">`
   \   00000010   3D000000           DC16 61, 0
   \   00000014   FBC0FF7F           DC32 2147467515

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for tmpl_menu_skt>`:
   \   00000000   ........0300       DC32 tmpl_menu_sk, 3
   \              0000        

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for sel_menu_softkeys>`:
   \   00000000   000000000100       DC32 0, 1, 2
   \              000002000000

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for sel_menu_items>`:
   \   00000000   00000000....       DC32 0H, `?<Constant "\\321\\354\\340\\351\\353\\373">`, 2147483647, 0
   \              ....FFFFFF7F
   \              00000000    
   \   00000010   000000000300       DC32 0H, 3, 1442, 0H
   \              0000A2050000
   \              00000000    
   \   00000020   ........FFFF       DC32 `?<Constant "\\312\\356\\354\\340\\355\\344\\373">`, 2147483647, 0
   \              FF7F00000000
   \   0000002C   000000000300       DC32 0H, 3, 1442, 0H
   \              0000A2050000
   \              00000000    
   \   0000003C   ........           DC32 `?<Constant "\\330\\340\\341\\353\\356\\355\\373 \\361\\`
   \   00000040   FFFFFF7F0000       DC32 2147483647, 0, 0H, 3, 1442, 0H
   \              000000000000
   \              03000000A205
   \              000000000000
   \   00000058   ........FFFF       DC32 `?<Constant "\\315\\350\\352\\350">`, 2147483647, 0, 0H, 3, 1442
   \              FF7F00000000
   \              000000000300
   \              0000A2050000
   \   00000070   00000000....       DC32 0H, `?<Constant "\\307\\340\\352\\360\\373\\362\\374 \\344\\`
   \              ....        
   \   00000078   FFFFFF7F0000       DC32 2147483647, 0, 0H, 3, 1442
   \              000000000000
   \              03000000A205
   \              0000        

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for sel_menu_sk>`:
   \   00000000   18000000           DC16 24, 0
   \   00000004   ........           DC32 `?<Constant "\\302\\373\\341\\356\\360">`
   \   00000008   01000000           DC16 1, 0
   \   0000000C   ........           DC32 `?<Constant "\\315\\340\\347\\340\\344">`
   \   00000010   3D000000           DC16 61, 0
   \   00000014   FBC0FF7F           DC32 2147467515

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for sel_menu_skt>`:
   \   00000000   ........0300       DC32 sel_menu_sk, 3
   \              0000        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\302\\373\\341\\356\\360">`:
   \   00000000   C2FBE1EEF000       DC8 "\302\373\341\356\360"
   \   00000006   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\316\\362\\354\\345\\355\\340">`:
   \   00000000   CEF2ECE5EDE0       DC8 "\316\362\354\345\355\340"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\302\\373\\341\\356\\360...">`:
   \   00000000   C2FBE1EEF02E       DC8 "\302\373\341\356\360..."
   \              2E2E00      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\321\\354\\340\\351\\353\\373">`:
   \   00000000   D1ECE0E9EBFB       DC8 "\321\354\340\351\353\373"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\312\\356\\354\\340\\355\\344\\373">`:
   \   00000000   CAEEECE0EDE4       DC8 "\312\356\354\340\355\344\373"
   \              FB00        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\330\\340\\341\\353\\356\\355\\373 \\361\\`:
   \   00000000   D8E0E1EBEEED       DC8 "\330\340\341\353\356\355\373 \361\356\356\341\371\345\355\350\351"
   \              FB20F1EEEEE1
   \              F9E5EDE8E900
   \   00000012   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\315\\350\\352\\350">`:
   \   00000000   CDE8EAE800         DC8 "\315\350\352\350"
   \   00000005   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\307\\340\\352\\360\\373\\362\\374 \\344\\`:
   \   00000000   C7E0EAF0FBF2       DC8 "\307\340\352\360\373\362\374 \344\350\340\353\356\343"
   \              FC20E4E8E0EB
   \              EEE300      
   \   0000000F   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\315\\340\\347\\340\\344">`:
   \   00000000   CDE0E7E0E400       DC8 "\315\340\347\340\344"
   \   00000006   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\302\\373\\341\\356\\360 \\361\\354\\340\\`:
   \   00000000   C2FBE1EEF020       DC8 "\302\373\341\356\360 \361\354\340\351\353\340..."
   \              F1ECE0E9EBE0
   \              2E2E2E00    
   \   00000010   C2FBE1EEF020       DC8 "\302\373\341\356\360 \352\356\354\340\355\344\373..."
   \              EAEEECE0EDE4
   \              FB2E2E2E00  
   \   00000021   000000             DC8 0, 0, 0
   \   00000024   C2FBE1EEF020       DC8 "\302\373\341\356\360 \370\340\341\353\356\355\340..."
   \              F8E0E1EBEEED
   \              E02E2E2E00  
   \   00000035   000000             DC8 0, 0, 0
   \   00000038   D0E5F1F3F0F1       DC8 "\320\345\361\363\360\361\373..."
   \              FB2E2E2E00  
   \   00000043   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "%w: %w">`:
   \   00000000   25773A202577       DC8 "%w: %w"
   \              00          
   \   00000007   00                 DC8 0
    390          

   Maximum stack usage in bytes:

     Function                   CSTACK
     --------                   ------
     DispSelectMenu               100
     DispTemplatesMenu             24
     FreeTemplates                  8
     LoadTemplates                332
     LoadTemplates_new             20
     SetCmdToEditMessage           80
     UpdateTemplatesMenu_header     4
     sel_menu_ghook                 4
     select_close                   4
     select_command                 8
     select_nick                    8
     select_smile                   8
     select_template                8
     tmpl_menu_ghook                4
     tmpl_menu_keyhook             12
     tmpl_menuitemhandler          24


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     FreeTemplates                    36
     LoadTemplates_new               120
     LoadTemplates                   312
     UpdateTemplatesMenu_header       96
     SetCmdToEditMessage             532
     tmpl_menuitemhandler             96
     tmpl_menu_ghook                  36
     tmpl_menu_keyhook               104
     tmpl_menu                        44
     DispTemplatesMenu               140
     select_smile                     60
     select_command                   36
     select_template                  36
     select_nick                      36
     select_close                     44
     sel_menu_procs                   20
     sel_menu_ghook                   20
     tmpl_menuhdr                    152
     tmpl_menusoftkeys                12
     tmpl_menu_sk                     24
     tmpl_menu_skt                     8
     sel_menu_softkeys                12
     sel_menu_items                  140
     sel_menu_sk                      24
     sel_menu_skt                      8
     DispSelectMenu                  292
     ??DataTable16                     4
     ??DataTable17                     4
     ??DataTable18                     4
     ??DataTable19                     4
     ??DataTable20                     4
     ?<Initializer for tmpl_menuhdr>
                                     152
     ?<Initializer for tmpl_menusoftkeys>
                                      12
     ?<Initializer for tmpl_menu_sk>
                                      24
     ?<Initializer for tmpl_menu_skt>
                                       8
     ?<Initializer for sel_menu_softkeys>
                                      12
     ?<Initializer for sel_menu_items>
                                     140
     ?<Initializer for sel_menu_sk>   24
     ?<Initializer for sel_menu_skt>
                                       8
     ?<Constant "\302\373\341\356\360">
                                       8
     ?<Constant "\316\362\354\345\355\340">
                                       8
     ?<Constant "\302\373\341\356\360...">
                                      12
     ?<Constant "\321\354\340\351\353\373">
                                       8
     ?<Constant "\312\356\354\340\355\344\373">
                                       8
     ?<Constant "\330\340\341\353\356\355\373 \361\
                                      20
     ?<Constant "\315\350\352\350">    8
     ?<Constant "\307\340\352\360\373\362\374 \344\
                                      16
     ?<Constant "\315\340\347\340\344">
                                       8
     ?<Constant "\302\373\341\356\360 \361\354\340\
                                      68
     ?<Constant "%w: %w">              8
      Others                         148

 
 2 152 bytes in segment CODE
   236 bytes in segment DATA_C
   380 bytes in segment DATA_I
   380 bytes in segment DATA_ID
    12 bytes in segment INITTAB
 
 2 016 bytes of CODE  memory (+ 148 bytes shared)
   616 bytes of CONST memory
   380 bytes of DATA  memory

Errors: none
Warnings: none
