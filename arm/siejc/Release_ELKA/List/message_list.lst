##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION    23/Feb/2011  16:37:52 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  C:\arm\siejc\message_list.c                          #
#    Command line    =  C:\arm\siejc\message_list.c -D NEWSGOLD -D ELKA      #
#                       --preprocess C:\arm\siejc\Release_ELKA\List\ -lC     #
#                       C:\arm\siejc\Release_ELKA\List\ -o                   #
#                       C:\arm\siejc\Release_ELKA\Obj\ -s9 --no_unroll       #
#                       --cpu_mode arm --endian little --cpu ARM926EJ-S      #
#                       --stack_align 4 --interwork -e --fpu None            #
#                       --dlib_config "C:\arm2\Embedded Workbench 4.0        #
#                       Evaluation\ARM\LIB\dl5tpainl8f.h" -I                 #
#                       "C:\arm2\Embedded Workbench 4.0                      #
#                       Evaluation\ARM\INC\" --inline_threshold=2            #
#    List file       =  C:\arm\siejc\Release_ELKA\List\message_list.lst      #
#    Object file     =  C:\arm\siejc\Release_ELKA\Obj\message_list.r79       #
#                                                                            #
#                                                                            #
##############################################################################

C:\arm\siejc\message_list.c
      1          /* -*- coding: windows-1251-dos -*- */
      2          #include "../inc/swilib.h"
      3          #include "main.h"
      4          #include "clist_util.h"
      5          #include "cont_menu.h"
      6          #include "history.h"
      7          #include "message_list.h"
      8          #include "message_cmds.h"
      9          #include "jabber_util.h"
     10          #include "string_util.h"
     11          #include "serial_dbg.h"
     12          #include "lang.h"
     13          #include "../inc/pnglist.h"
     14          #include "smiles.h"
     15          #include "color.h"
     16          #include "rect_patcher.h"
     17          
     18          #define MSG_START_X 1    //X-координата начала рисования строки сообщения
     19          

   \                                 In segment DATA_Z, align 4, align-sorted
     20          int flag2;
   \                     flag2:
   \   00000000                      DS8 4

   \                                 In segment DATA_Z, align 4, align-sorted
     21          int flag1;
   \                     flag1:
   \   00000000                      DS8 4
     22          extern const unsigned int DEF_SKR;
     23          extern int MESSAGEWIN_FONT;
     24          extern const int pod_mess;
     25          extern int Is_Smiles_Enabled;
     26          extern const int KBD_LAYOUT;
     27          
     28          char MsgList_Quit_Required = 0;
     29          
     30          TRESOURCE* Resource_Ex = NULL;
     31          
     32          
     33          int Message_gui_ID;
     34          int edmessage_id;
     35          
     36          

   \                                 In segment CODE, align 4, keep-with-next
     37          void CharsToSmilesUNI(WSHDR *ws, const char *s)
     38          {
   \                     CharsToSmilesUNI:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   \   00000004   0040A0E1           MOV      R4,R0
     39            S_SMILES *t;
     40            S_SMILES *t_root=(S_SMILES *)s_top;
   \   00000008   40019FE5           LDR      R0,??CharsToSmilesUNI_0  ;; s_top
   \   0000000C   08D04DE2           SUB      SP,SP,#+8
   \   00000010   006090E5           LDR      R6,[R0, #+0]
   \   00000014   0150A0E1           MOV      R5,R1
     41            STXT_SMILES *st;
     42            unsigned int wchar;
     43            unsigned int ulb=s[0]+(s[1]<<8)+(s[2]<<16)+(s[3]<<24);
   \   00000018   0000D5E5           LDRB     R0,[R5, #+0]
   \   0000001C   0110D5E5           LDRB     R1,[R5, #+1]
   \   00000020   010480E0           ADD      R0,R0,R1, LSL #+8
   \   00000024   0210D5E5           LDRB     R1,[R5, #+2]
   \   00000028   010880E0           ADD      R0,R0,R1, LSL #+16
   \   0000002C   0310D5E5           LDRB     R1,[R5, #+3]
   \   00000030   017C80E0           ADD      R7,R0,R1, LSL #+24
     44            CutWSTR(ws, 0);
   \   00000034   0010A0E3           MOV      R1,#+0
   \   00000038   0400A0E1           MOV      R0,R4
   \   0000003C   260100EF           SWI      +294
   \   00000040   0000D5E5           LDRB     R0,[R5, #+0]
   \   00000044   000050E3           CMP      R0,#+0
   \   00000048   F383BD08           POPEQ    {R0,R1,R4-R9,PC}
     45            while(wchar=*s)
     46            {
     47              t=t_root;
   \                     ??CharsToSmilesUNI_1:
   \   0000004C   0690A0E1           MOV      R9,R6
   \   00000050   230000EA           B        ??CharsToSmilesUNI_2
     48              while(t)
     49              {
     50                st=t->lines;
     51                while(st)
     52                {
     53          	if ((ulb&st->mask)==st->key)
   \                     ??CharsToSmilesUNI_3:
   \   00000054   0B00D8E5           LDRB     R0,[R8, #+11]
   \   00000058   0A10D8E5           LDRB     R1,[R8, #+10]
   \   0000005C   0620D8E5           LDRB     R2,[R8, #+6]
   \   00000060   000481E1           ORR      R0,R1,R0, LSL #+8
   \   00000064   0910D8E5           LDRB     R1,[R8, #+9]
   \   00000068   000481E1           ORR      R0,R1,R0, LSL #+8
   \   0000006C   0810D8E5           LDRB     R1,[R8, #+8]
   \   00000070   000481E1           ORR      R0,R1,R0, LSL #+8
   \   00000074   0710D8E5           LDRB     R1,[R8, #+7]
   \   00000078   070000E0           AND      R0,R0,R7
   \   0000007C   011482E1           ORR      R1,R2,R1, LSL #+8
   \   00000080   0520D8E5           LDRB     R2,[R8, #+5]
   \   00000084   011482E1           ORR      R1,R2,R1, LSL #+8
   \   00000088   0420D8E5           LDRB     R2,[R8, #+4]
   \   0000008C   011482E1           ORR      R1,R2,R1, LSL #+8
   \   00000090   010050E1           CMP      R0,R1
   \   00000094   0700001A           BNE      ??CharsToSmilesUNI_4
     54          	{
     55          	  if (!strncmp(s,st->text,strlen(st->text))) goto L1;
   \   00000098   0C0088E2           ADD      R0,R8,#+12
   \   0000009C   1B0000EF           SWI      +27
   \   000000A0   0020A0E1           MOV      R2,R0
   \   000000A4   0C1088E2           ADD      R1,R8,#+12
   \   000000A8   0500A0E1           MOV      R0,R5
   \   000000AC   150100EF           SWI      +277
   \   000000B0   000050E3           CMP      R0,#+0
   \   000000B4   1300000A           BEQ      ??CharsToSmilesUNI_5
     56          	}
     57          	st=st->next;
   \                     ??CharsToSmilesUNI_4:
   \   000000B8   0000A0E3           MOV      R0,#+0
   \   000000BC   04108DE2           ADD      R1,SP,#+4
   \                     ??CharsToSmilesUNI_6:
   \   000000C0   0820D0E7           LDRB     R2,[R0, +R8]
   \   000000C4   0120C0E7           STRB     R2,[R0, +R1]
   \   000000C8   010080E2           ADD      R0,R0,#+1
   \   000000CC   040050E3           CMP      R0,#+4
   \   000000D0   FAFFFFBA           BLT      ??CharsToSmilesUNI_6
   \   000000D4   04809DE5           LDR      R8,[SP, #+4]
     58                }
   \                     ??CharsToSmilesUNI_7:
   \   000000D8   000058E3           CMP      R8,#+0
   \   000000DC   DCFFFF1A           BNE      ??CharsToSmilesUNI_3
     59                t=t->next;
   \   000000E0   009099E5           LDR      R9,[R9, #+0]
   \                     ??CharsToSmilesUNI_2:
   \   000000E4   000059E3           CMP      R9,#+0
   \   000000E8   08809915           LDRNE    R8,[R9, #+8]
   \   000000EC   F9FFFF1A           BNE      ??CharsToSmilesUNI_7
     60              }
     61            L1:
     62              if (t)
     63              {
     64                wchar=t->uni_smile;
     65                s+=strlen(st->text);
     66                ulb=s[0]+(s[1]<<8)+(s[2]<<16)+(s[3]<<24);
     67              }
     68              else
     69              {
     70                const char *res;
     71                wchar=utf8_2unicode(&res, s);
   \   000000F0   0510A0E1           MOV      R1,R5
   \   000000F4   0D00A0E1           MOV      R0,SP
   \   000000F8   ........           _BLF     utf8_2unicode,??utf8_2unicode??rA
     72                s=res;
   \   000000FC   00509DE5           LDR      R5,[SP, #+0]
   \   00000100   0090A0E1           MOV      R9,R0
     73                ulb=s[0]+(s[1]<<8)+(s[2]<<16)+(s[3]<<24);
   \   00000104   030000EA           B        ??CharsToSmilesUNI_8
     74              }
   \                     ??CharsToSmilesUNI_5:
   \   00000108   049099E5           LDR      R9,[R9, #+4]
   \   0000010C   0C0088E2           ADD      R0,R8,#+12
   \   00000110   1B0000EF           SWI      +27
   \   00000114   055080E0           ADD      R5,R0,R5
   \                     ??CharsToSmilesUNI_8:
   \   00000118   0000D5E5           LDRB     R0,[R5, #+0]
   \   0000011C   0110D5E5           LDRB     R1,[R5, #+1]
   \   00000120   010480E0           ADD      R0,R0,R1, LSL #+8
   \   00000124   0210D5E5           LDRB     R1,[R5, #+2]
   \   00000128   010880E0           ADD      R0,R0,R1, LSL #+16
   \   0000012C   0310D5E5           LDRB     R1,[R5, #+3]
   \   00000130   017C80E0           ADD      R7,R0,R1, LSL #+24
     75               wsAppendChar(ws,wchar);
   \   00000134   0910A0E1           MOV      R1,R9
   \   00000138   0400A0E1           MOV      R0,R4
   \   0000013C   1C0000EF           SWI      +28
     76            }
   \   00000140   0000D5E5           LDRB     R0,[R5, #+0]
   \   00000144   000050E3           CMP      R0,#+0
   \   00000148   BFFFFF1A           BNE      ??CharsToSmilesUNI_1
     77          }
   \   0000014C   F383BDE8           POP      {R0,R1,R4-R9,PC}  ;; return
   \                     ??CharsToSmilesUNI_0:
   \   00000150   ........           DC32     s_top
     78          

   \                                 In segment CODE, align 4, keep-with-next
     79          void SmilesToCharsUNI(WSHDR *ws)
     80          {
   \                     SmilesToCharsUNI:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   0040A0E1           MOV      R4,R0
     81            S_SMILES *t;
     82            int c;
     83            unsigned short *wsbody=ws->wsbody;
   \   00000008   005094E5           LDR      R5,[R4, #+0]
     84            int wslen=wsbody[0];
   \   0000000C   B060D5E1           LDRH     R6,[R5, #+0]
     85            if (wslen)
   \   00000010   000056E3           CMP      R6,#+0
   \   00000014   F081BD08           POPEQ    {R4-R8,PC}
     86            {
     87              for (int i=0; i<wslen; i++) // оНЯВХРЮЕЛ НАЫСЧ ДКХМС АСДСЫЕИ ЯРПНЙХ
   \   00000018   0070A0E3           MOV      R7,#+0
   \   0000001C   010056E3           CMP      R6,#+1
   \   00000020   090000AA           BGE      ??SmilesToCharsUNI_0
     88              {
     89                c=wsbody[i+1];
     90                if (c>=0xE100)
     91                {
     92                  t=FindSmileByUni(c);
     93                  if (t)
     94                  {
     95                  	int w;
     96                  	char *s;
     97                    if (t->lines && (s=t->lines->text))
     98                    {
     99                    	wsRemoveChars(ws, i+1, 1);
    100                    	//i--;
    101                    	wslen--;
    102                    	while((w=*s++))
    103                    	{
    104                    		wsInsertChar(ws, w, ++i);
    105                    		wslen++;
    106                    	}
    107                    }
    108                  }
    109                }
    110              }
    111            }
    112          }
   \   00000024   F081BDE8           POP      {R4-R8,PC}       ;; return
   \                     ??SmilesToCharsUNI_1:
   \   00000028   017087E2           ADD      R7,R7,#+1
   \   0000002C   0720A0E1           MOV      R2,R7
   \   00000030   0400A0E1           MOV      R0,R4
   \   00000034   1D0000EF           SWI      +29
   \   00000038   016086E2           ADD      R6,R6,#+1
   \                     ??SmilesToCharsUNI_2:
   \   0000003C   ........           LDRB     R1,[R8], #+1
   \   00000040   000051E3           CMP      R1,#+0
   \   00000044   F7FFFF1A           BNE      ??SmilesToCharsUNI_1
   \                     ??SmilesToCharsUNI_3:
   \   00000048   017087E2           ADD      R7,R7,#+1
   \                     ??SmilesToCharsUNI_0:
   \   0000004C   060057E1           CMP      R7,R6
   \   00000050   F081BDA8           POPGE    {R4-R8,PC}
   \   00000054   870085E0           ADD      R0,R5,R7, LSL #+1
   \   00000058   B200D0E1           LDRH     R0,[R0, #+2]
   \   0000005C   E10C50E3           CMP      R0,#+57600
   \   00000060   F8FFFFBA           BLT      ??SmilesToCharsUNI_3
   \   00000064   ........           _BLF     FindSmileByUni,??FindSmileByUni??rA
   \   00000068   000050E3           CMP      R0,#+0
   \   0000006C   08009015           LDRNE    R0,[R0, #+8]
   \   00000070   00005013           CMPNE    R0,#+0
   \   00000074   0C809012           ADDSNE   R8,R0,#+12
   \   00000078   F2FFFF0A           BEQ      ??SmilesToCharsUNI_3
   \   0000007C   0120A0E3           MOV      R2,#+1
   \   00000080   011087E2           ADD      R1,R7,#+1
   \   00000084   0400A0E1           MOV      R0,R4
   \   00000088   150200EF           SWI      +533
   \   0000008C   016046E2           SUB      R6,R6,#+1
   \   00000090   E9FFFFEA           B        ??SmilesToCharsUNI_2
    113          //---------------------------------------------------------------------------
    114          // Test edit dialog
    115          //---------------------------------------------------------------------------
    116          
    117          

   \                                 In segment DATA_Z, align 4, align-sorted
    118          EDITCONTROL ec_message;
   \                     ec_message:
   \   00000000                      DS8 44

   \                                 In segment DATA_Z, align 4, align-sorted
    119          GUI *ed_message_gui;
   \                     ed_message_gui:
   \   00000000                      DS8 4
    120          
    121          void DispSelectMenu();
    122          char Mess_was_sent = 0;
    123          

   \                                 In segment CODE, align 4, keep-with-next
    124          int inp_onkey(GUI *gui, GUI_MSG *msg)
    125          {
   \                     inp_onkey:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000004   68D04DE2           SUB      SP,SP,#+104
   \   00000008   0140A0E1           MOV      R4,R1
    126            if(msg->gbsmsg->submess==GREEN_BUTTON)
   \   0000000C   041094E5           LDR      R1,[R4, #+4]
   \   00000010   081091E5           LDR      R1,[R1, #+8]
   \   00000014   0B0051E3           CMP      R1,#+11
   \   00000018   0601001A           BNE      ??inp_onkey_0
    127            {
    128              extern const char sndMsgSend[];
    129              EDITCONTROL ec;
    130              ExtractEditControl(gui, 1, &ec);
   \   0000001C   3C208DE2           ADD      R2,SP,#+60
    131              if(ec.pWS->wsbody[0])
   \   00000020   30949FE5           LDR      R9,??inp_onkey_1+0x4  ;; `?<Constant "/topic ">`
   \   00000024   0110A0E3           MOV      R1,#+1
   \   00000028   690100EF           SWI      +361
   \   0000002C   64009DE5           LDR      R0,[SP, #+100]
   \   00000030   000090E5           LDR      R0,[R0, #+0]
   \   00000034   B000D0E1           LDRH     R0,[R0, #+0]
   \   00000038   000050E3           CMP      R0,#+0
   \   0000003C   FA00000A           BEQ      ??inp_onkey_2
    132              {
    133                WSHDR * ws = AllocWS(MAX_MSG_LEN);
   \   00000040   400DA0E3           MOV      R0,#+4096
   \   00000044   250100EF           SWI      +293
    134                wstrcpy(ws, ec.pWS);
   \   00000048   64109DE5           LDR      R1,[SP, #+100]
   \   0000004C   0050A0E1           MOV      R5,R0
   \   00000050   1F0100EF           SWI      +287
    135                if (Is_Smiles_Enabled && SmilesImgList)
   \   00000054   ........           LDR      R0,??DataTable16  ;; Is_Smiles_Enabled
   \   00000058   000090E5           LDR      R0,[R0, #+0]
   \   0000005C   000050E3           CMP      R0,#+0
   \   00000060   0500000A           BEQ      ??inp_onkey_3
   \   00000064   ........           LDR      R0,??DataTable17  ;; SmilesImgList
   \   00000068   000090E5           LDR      R0,[R0, #+0]
   \   0000006C   000050E3           CMP      R0,#+0
   \   00000070   0100000A           BEQ      ??inp_onkey_3
    136                  SmilesToCharsUNI(ws);
   \   00000074   0500A0E1           MOV      R0,R5
   \   00000078   ........           BL       SmilesToCharsUNI
    137                char is_attention = 0;
   \                     ??inp_onkey_3:
   \   0000007C   0040A0E3           MOV      R4,#+0
   \   00000080   0C408DE5           STR      R4,[SP, #+12]
    138                int res_len;
    139                char * body = malloc(MAX_MSG_LEN);
    140                ws_2utf8(ws, body, &res_len, MAX_MSG_LEN);
    141          
    142                body = realloc(body, res_len + 1);
    143                body[res_len] = '\0';
    144                
    145                char is_gchat = Resource_Ex->entry_type== T_CONF_ROOT ? 1: 0;
   \   00000084   ........           LDR      R7,??DataTable18  ;; inp_desc
   \   00000088   400DA0E3           MOV      R0,#+4096
   \   0000008C   140000EF           SWI      +20
   \   00000090   0060A0E1           MOV      R6,R0
   \   00000094   403DA0E3           MOV      R3,#+4096
   \   00000098   08208DE2           ADD      R2,SP,#+8
   \   0000009C   0610A0E1           MOV      R1,R6
   \   000000A0   0500A0E1           MOV      R0,R5
   \   000000A4   E20100EF           SWI      +482
   \   000000A8   08009DE5           LDR      R0,[SP, #+8]
   \   000000AC   0180A0E3           MOV      R8,#+1
   \   000000B0   011080E2           ADD      R1,R0,#+1
   \   000000B4   0600A0E1           MOV      R0,R6
   \   000000B8   BA0000EF           SWI      +186
    146                char part_str[]="/part";
   \   000000BC   98139FE5           LDR      R1,??inp_onkey_1+0x8  ;; `?<Constant "/part">`
   \   000000C0   0060A0E1           MOV      R6,R0
   \   000000C4   08009DE5           LDR      R0,[SP, #+8]
   \   000000C8   0640C0E7           STRB     R4,[R0, +R6]
   \   000000CC   500097E5           LDR      R0,[R7, #+80]
   \   000000D0   0800D0E5           LDRB     R0,[R0, #+8]
   \   000000D4   020050E3           CMP      R0,#+2
   \   000000D8   00808D05           STREQ    R8,[SP, #+0]
   \   000000DC   00408D15           STRNE    R4,[SP, #+0]
   \   000000E0   0C0091E8           LDM      R1,{R2,R3}
   \   000000E4   10008DE2           ADD      R0,SP,#+16
   \   000000E8   0C0080E8           STM      R0,{R2,R3}
    147                char topic_str[]="/topic ";
   \   000000EC   060099E8           LDM      R9,{R1,R2}
   \   000000F0   24008DE2           ADD      R0,SP,#+36
   \   000000F4   060080E8           STM      R0,{R1,R2}
    148                char attention_str[]="/attention ";
   \   000000F8   60139FE5           LDR      R1,??inp_onkey_1+0xC  ;; `?<Constant "/attention ">`
   \   000000FC   30008DE2           ADD      R0,SP,#+48
   \   00000100   0C0291E8           LDM      R1,{R2,R3,R9}
    149                char message_str[]="/message ";
   \   00000104   58139FE5           LDR      R1,??inp_onkey_1+0x10  ;; `?<Constant "/message ">`
   \   00000108   0C0280E8           STM      R0,{R2,R3,R9}
   \   0000010C   0C0291E8           LDM      R1,{R2,R3,R9}
   \   00000110   18008DE2           ADD      R0,SP,#+24
   \   00000114   0C0280E8           STM      R0,{R2,R3,R9}
   \   00000118   18108DE2           ADD      R1,SP,#+24
   \   0000011C   0600A0E1           MOV      R0,R6
    150                  if(strstr(body, message_str)==body)  // Ключ в начале
   \   00000120   180100EF           SWI      +280
   \   00000124   060050E1           CMP      R0,R6
   \   00000128   5A00001A           BNE      ??inp_onkey_4
    151                  {
    152                    if(strlen(body)>(strlen(message_str)+5))
   \   0000012C   18008DE2           ADD      R0,SP,#+24
   \   00000130   1B0000EF           SWI      +27
   \   00000134   059080E2           ADD      R9,R0,#+5
   \   00000138   0600A0E1           MOV      R0,R6
   \   0000013C   1B0000EF           SWI      +27
   \   00000140   000059E1           CMP      R9,R0
   \   00000144   5300002A           BCS      ??inp_onkey_4
    153                    {
    154                      char *message = (char*)(body+strlen(message_str));
   \   00000148   18008DE2           ADD      R0,SP,#+24
   \   0000014C   1B0000EF           SWI      +27
   \   00000150   06A080E0           ADD      R10,R0,R6
    155                      char *message_body = (char*)(strstr(message, " ")+1);
   \   00000154   BE1F8FE2           ADR      R1,??inp_onkey_1  ;; " "
   \   00000158   0A00A0E1           MOV      R0,R10
   \   0000015C   180100EF           SWI      +280
   \   00000160   01B080E2           ADD      R11,R0,#+1
    156                      if((strlen(message)+7)>strlen(message_body))
   \   00000164   0B00A0E1           MOV      R0,R11
   \   00000168   1B0000EF           SWI      +27
   \   0000016C   0090A0E1           MOV      R9,R0
   \   00000170   0A00A0E1           MOV      R0,R10
   \   00000174   1B0000EF           SWI      +27
   \   00000178   070080E2           ADD      R0,R0,#+7
   \   0000017C   000059E1           CMP      R9,R0
   \   00000180   4400002A           BCS      ??inp_onkey_4
    157                      {
    158                      char *message_to = malloc(256);
   \   00000184   400FA0E3           MOV      R0,#+256
   \   00000188   140000EF           SWI      +20
   \   0000018C   0090A0E1           MOV      R9,R0
    159                      zeromem(message_to, 255);
   \   00000190   FF10A0E3           MOV      R1,#+255
   \   00000194   1D0100EF           SWI      +285
    160                      strncpy(message_to, message, strlen(message)-strlen(message_body)-1);
   \   00000198   0A00A0E1           MOV      R0,R10
   \   0000019C   1B0000EF           SWI      +27
   \   000001A0   04008DE5           STR      R0,[SP, #+4]
   \   000001A4   0B00A0E1           MOV      R0,R11
   \   000001A8   1B0000EF           SWI      +27
   \   000001AC   04109DE5           LDR      R1,[SP, #+4]
   \   000001B0   000041E0           SUB      R0,R1,R0
   \   000001B4   012040E2           SUB      R2,R0,#+1
   \   000001B8   0A10A0E1           MOV      R1,R10
   \   000001BC   0900A0E1           MOV      R0,R9
   \   000001C0   160100EF           SWI      +278
    161                      if(message_to && message_body)
   \   000001C4   000059E3           CMP      R9,#+0
   \   000001C8   00005B13           CMPNE    R11,#+0
   \   000001CC   2F00000A           BEQ      ??inp_onkey_5
    162                       if(strlen(message_to)>3 && strlen(message_body)>0)
   \   000001D0   0900A0E1           MOV      R0,R9
   \   000001D4   1B0000EF           SWI      +27
   \   000001D8   040050E3           CMP      R0,#+4
   \   000001DC   2B00003A           BCC      ??inp_onkey_5
   \   000001E0   0B00A0E1           MOV      R0,R11
   \   000001E4   1B0000EF           SWI      +27
   \   000001E8   000050E3           CMP      R0,#+0
   \   000001EC   2700000A           BEQ      ??inp_onkey_5
    163                       {
    164                       CList_AddMessage(message_to, MSG_ME, message_body);
   \   000001F0   0B20A0E1           MOV      R2,R11
   \   000001F4   0110A0E3           MOV      R1,#+1
   \   000001F8   0900A0E1           MOV      R0,R9
   \   000001FC   ........           _BLF     CList_AddMessage,??CList_AddMessage??rA
    165                       IPC_MESSAGE_S *mess = malloc(sizeof(IPC_MESSAGE_S));
   \   00000200   0800A0E3           MOV      R0,#+8
   \   00000204   140000EF           SWI      +20
   \   00000208   00A0A0E1           MOV      R10,R0
    166                       mess->IsGroupChat = is_gchat;
   \   0000020C   00009DE5           LDR      R0,[SP, #+0]
   \   00000210   0000CAE5           STRB     R0,[R10, #+0]
    167                       char* bodymsg=malloc(MAX_MSG_LEN);
   \   00000214   400DA0E3           MOV      R0,#+4096
   \   00000218   140000EF           SWI      +20
   \   0000021C   00B0A0E1           MOV      R11,R0
    168                       strcpy(bodymsg,(char*)(body+strlen(message_str)+1+strlen(message_to)));
   \   00000220   18008DE2           ADD      R0,SP,#+24
   \   00000224   1B0000EF           SWI      +27
   \   00000228   04008DE5           STR      R0,[SP, #+4]
   \   0000022C   0900A0E1           MOV      R0,R9
   \   00000230   1B0000EF           SWI      +27
   \   00000234   04109DE5           LDR      R1,[SP, #+4]
   \   00000238   061081E0           ADD      R1,R1,R6
   \   0000023C   010080E0           ADD      R0,R0,R1
   \   00000240   011080E2           ADD      R1,R0,#+1
   \   00000244   0B00A0E1           MOV      R0,R11
   \   00000248   1A0000EF           SWI      +26
    169                       mess->body = bodymsg;
   \   0000024C   04B08AE5           STR      R11,[R10, #+4]
    170                       mess->IsAttention = 0;
   \   00000250   0140CAE5           STRB     R4,[R10, #+1]
    171                       mfree(body);
   \   00000254   0600A0E1           MOV      R0,R6
   \   00000258   150000EF           SWI      +21
    172                       CLIST* messagenick=CList_FindContactByJID(message_to);
   \   0000025C   0900A0E1           MOV      R0,R9
   \   00000260   ........           _BLF     CList_FindContactByJID,??CList_FindContactByJID??rA
   \   00000264   0040A0E1           MOV      R4,R0
    173                       mfree(message_to);
   \   00000268   0900A0E1           MOV      R0,R9
   \   0000026C   150000EF           SWI      +21
    174                       if(messagenick) SUBPROC((void*)SendMessage,messagenick->JID, mess);
   \   00000270   000054E3           CMP      R4,#+0
   \   00000274   0300000A           BEQ      ??inp_onkey_6
   \   00000278   001094E5           LDR      R1,[R4, #+0]
   \   0000027C   E4019FE5           LDR      R0,??inp_onkey_1+0x14  ;; SendMessage
   \   00000280   0A20A0E1           MOV      R2,R10
   \   00000284   710100EF           SWI      +369
    175                       Mess_was_sent = 1;
   \                     ??inp_onkey_6:
   \   00000288   8180C7E5           STRB     R8,[R7, #+129]
    176                       FreeWS(ws);
   \                     ??inp_onkey_7:
   \   0000028C   550000EA           B        ??inp_onkey_8
    177                       return 1;
    178                       }
    179                      mfree(message_to);
   \                     ??inp_onkey_5:
   \   00000290   0900A0E1           MOV      R0,R9
   \   00000294   150000EF           SWI      +21
    180                      }
    181                    }
    182                  }
    183                if(!is_gchat)
   \                     ??inp_onkey_4:
   \   00000298   00009DE5           LDR      R0,[SP, #+0]
   \   0000029C   000CB0E1           LSLS     R0,R0,#+24
   \   000002A0   2300001A           BNE      ??inp_onkey_9
    184                {
    185                  if(strstr(body, attention_str)==body)  // Ключ в начале
   \   000002A4   30108DE2           ADD      R1,SP,#+48
   \   000002A8   0600A0E1           MOV      R0,R6
   \   000002AC   180100EF           SWI      +280
   \   000002B0   060050E1           CMP      R0,R6
   \   000002B4   0400001A           BNE      ??inp_onkey_10
    186                  {
    187                    is_attention = 1;
   \   000002B8   0C808DE5           STR      R8,[SP, #+12]
   \   000002BC   30008DE2           ADD      R0,SP,#+48
   \   000002C0   1B0000EF           SWI      +27
   \   000002C4   062080E0           ADD      R2,R0,R6
   \   000002C8   000000EA           B        ??inp_onkey_11
    188                  }
   \                     ??inp_onkey_10:
   \   000002CC   0620A0E1           MOV      R2,R6
   \                     ??inp_onkey_11:
   \   000002D0   500097E5           LDR      R0,[R7, #+80]
   \   000002D4   0110A0E3           MOV      R1,#+1
   \   000002D8   040090E5           LDR      R0,[R0, #+4]
   \   000002DC   ........           _BLF     CList_AddMessage,??CList_AddMessage??rA
    189                  CList_AddMessage(Resource_Ex->full_name, MSG_ME,is_attention ? (char*)(body+strlen(attention_str)):body);
    190                }
    191                else
    192                {
    193                  if(strstr(body, part_str)==body)  // Ключ в начале
    194                  {
    195                    CLIST* room=CList_FindContactByJID(CList_GetActiveContact()->full_name);
    196                    Send_Leave_Conference(room->JID, strlen(body)>strlen(part_str) ? (char*)(body+strlen(part_str)+1):NULL);
    197                    Mess_was_sent = 1;
    198                    mfree(body);
    199                    FreeWS(ws);
    200                    return 1;
    201                  }
    202                  if(strstr(body, topic_str)==body)  // Ключ в начале
    203                  {
    204                    CLIST* room=CList_FindContactByJID(CList_GetActiveContact()->full_name);
    205                    Set_Conference_Topic(room->JID, (char*)(body+strlen(topic_str)));
    206                    Mess_was_sent = 1;
    207                    mfree(body);
    208                    FreeWS(ws);
    209                    return 1;
    210                  }
    211                }
    212                IPC_MESSAGE_S *mess = malloc(sizeof(IPC_MESSAGE_S));
   \                     ??inp_onkey_12:
   \   000002E0   0800A0E3           MOV      R0,#+8
   \   000002E4   140000EF           SWI      +20
   \   000002E8   0090A0E1           MOV      R9,R0
    213                mess->IsGroupChat = is_gchat;
   \   000002EC   00009DE5           LDR      R0,[SP, #+0]
   \   000002F0   0000C9E5           STRB     R0,[R9, #+0]
    214                if(is_attention)
   \   000002F4   0C009DE5           LDR      R0,[SP, #+12]
   \   000002F8   000CB0E1           LSLS     R0,R0,#+24
   \   000002FC   3E00000A           BEQ      ??inp_onkey_13
    215                {
    216                  char * bodymsg = malloc(MAX_MSG_LEN);
   \   00000300   400DA0E3           MOV      R0,#+4096
   \   00000304   140000EF           SWI      +20
   \   00000308   0040A0E1           MOV      R4,R0
    217                  strcpy(bodymsg, (char*)(body+strlen(attention_str)));
   \   0000030C   30008DE2           ADD      R0,SP,#+48
   \   00000310   1B0000EF           SWI      +27
   \   00000314   061080E0           ADD      R1,R0,R6
   \   00000318   0400A0E1           MOV      R0,R4
   \   0000031C   1A0000EF           SWI      +26
    218                  mess->body = bodymsg;
   \   00000320   044089E5           STR      R4,[R9, #+4]
    219                  mfree(body);
   \   00000324   0600A0E1           MOV      R0,R6
   \   00000328   150000EF           SWI      +21
    220                  mess->IsAttention = 1;
   \   0000032C   0140A0E3           MOV      R4,#+1
   \   00000330   320000EA           B        ??inp_onkey_14
    221                } else
   \                     ??inp_onkey_9:
   \   00000334   10108DE2           ADD      R1,SP,#+16
   \   00000338   0600A0E1           MOV      R0,R6
   \   0000033C   180100EF           SWI      +280
   \   00000340   060050E1           CMP      R0,R6
   \   00000344   1600001A           BNE      ??inp_onkey_15
   \   00000348   ........           _BLF     CList_GetActiveContact,??CList_GetActiveContact??rA
   \   0000034C   040090E5           LDR      R0,[R0, #+4]
   \   00000350   ........           _BLF     CList_FindContactByJID,??CList_FindContactByJID??rA
   \   00000354   0090A0E1           MOV      R9,R0
   \   00000358   10008DE2           ADD      R0,SP,#+16
   \   0000035C   1B0000EF           SWI      +27
   \   00000360   00A0A0E1           MOV      R10,R0
   \   00000364   0600A0E1           MOV      R0,R6
   \   00000368   1B0000EF           SWI      +27
   \   0000036C   00005AE1           CMP      R10,R0
   \   00000370   0400002A           BCS      ??inp_onkey_16
   \   00000374   10008DE2           ADD      R0,SP,#+16
   \   00000378   1B0000EF           SWI      +27
   \   0000037C   060080E0           ADD      R0,R0,R6
   \   00000380   011080E2           ADD      R1,R0,#+1
   \   00000384   000000EA           B        ??inp_onkey_17
   \                     ??inp_onkey_16:
   \   00000388   0010A0E3           MOV      R1,#+0
   \                     ??inp_onkey_17:
   \   0000038C   000099E5           LDR      R0,[R9, #+0]
   \   00000390   ........           _BLF     Send_Leave_Conference,??Send_Leave_Conference??rA
   \   00000394   8180C7E5           STRB     R8,[R7, #+129]
   \   00000398   0600A0E1           MOV      R0,R6
   \   0000039C   150000EF           SWI      +21
   \   000003A0   100000EA           B        ??inp_onkey_8
   \                     ??inp_onkey_15:
   \   000003A4   24108DE2           ADD      R1,SP,#+36
   \   000003A8   0600A0E1           MOV      R0,R6
   \   000003AC   180100EF           SWI      +280
   \   000003B0   060050E1           CMP      R0,R6
   \   000003B4   C9FFFF1A           BNE      ??inp_onkey_12
   \   000003B8   ........           _BLF     CList_GetActiveContact,??CList_GetActiveContact??rA
   \   000003BC   040090E5           LDR      R0,[R0, #+4]
   \   000003C0   ........           _BLF     CList_FindContactByJID,??CList_FindContactByJID??rA
   \   000003C4   0040A0E1           MOV      R4,R0
   \   000003C8   24008DE2           ADD      R0,SP,#+36
   \   000003CC   1B0000EF           SWI      +27
   \   000003D0   061080E0           ADD      R1,R0,R6
   \   000003D4   000094E5           LDR      R0,[R4, #+0]
   \   000003D8   ........           _BLF     Set_Conference_Topic,??Set_Conference_Topic??rA
   \   000003DC   8180C7E5           STRB     R8,[R7, #+129]
   \   000003E0   0600A0E1           MOV      R0,R6
   \   000003E4   150000EF           SWI      +21
   \                     ??inp_onkey_8:
   \   000003E8   0500A0E1           MOV      R0,R5
   \   000003EC   290100EF           SWI      +297
   \   000003F0   0100A0E3           MOV      R0,#+1
   \   000003F4   68D08DE2           ADD      SP,SP,#+104
   \   000003F8   F08FBDE8           POP      {R4-R11,PC}
    222                {
    223                  mess->IsAttention = 0;
    224                  mess->body = body;
   \                     ??inp_onkey_13:
   \   000003FC   046089E5           STR      R6,[R9, #+4]
   \                     ??inp_onkey_14:
   \   00000400   0140C9E5           STRB     R4,[R9, #+1]
    225                }
    226                SUBPROC((void*)SendMessage,Resource_Ex->full_name, mess);
   \   00000404   500097E5           LDR      R0,[R7, #+80]
   \   00000408   0920A0E1           MOV      R2,R9
   \   0000040C   041090E5           LDR      R1,[R0, #+4]
   \   00000410   50009FE5           LDR      R0,??inp_onkey_1+0x14  ;; SendMessage
   \   00000414   710100EF           SWI      +369
    227                Mess_was_sent = 1;
    228                SUBPROC((void *)Play, sndMsgSend);
   \   00000418   4C109FE5           LDR      R1,??inp_onkey_1+0x18  ;; sndMsgSend
   \   0000041C   4C009FE5           LDR      R0,??inp_onkey_1+0x1C  ;; Play
   \   00000420   8180C7E5           STRB     R8,[R7, #+129]
   \   00000424   710100EF           SWI      +369
    229                FreeWS(ws);
   \   00000428   EEFFFFEA           B        ??inp_onkey_8
    230                return 1;
    231              }
    232              else MsgBoxError(1,(int)LG_NOSENDNULLMESS);
   \                     ??inp_onkey_2:
   \   0000042C   081089E2           ADD      R1,R9,#+8
   \   00000430   0100A0E3           MOV      R0,#+1
   \   00000434   4E0000EF           SWI      +78
    233            }
    234          
    235            if (msg->keys==0x18)
   \                     ??inp_onkey_0:
   \   00000438   F200D4E1           LDRSH    R0,[R4, #+2]
   \   0000043C   180050E3           CMP      R0,#+24
   \   00000440   0000001A           BNE      ??inp_onkey_18
    236            {
    237              DispSelectMenu();
   \   00000444   ........           _BLF     DispSelectMenu,??DispSelectMenu??rA
    238            }
    239          
    240          #ifndef NEWSGOLD
    241            if (msg->keys==0x0FF0) //Левый софт СГОЛД
    242            {
    243              return(1);
    244            }
    245          #endif
    246          
    247            return(0); //Do standart keys
   \                     ??inp_onkey_18:
   \   00000448   0000A0E3           MOV      R0,#+0
   \   0000044C   68D08DE2           ADD      SP,SP,#+104
   \   00000450   F08FBDE8           POP      {R4-R11,PC}      ;; return
   \                     ??inp_onkey_1:
   \   00000454   20000000           DC8      " ",+0,+0
   \   00000458   ........           DC32     `?<Constant "/topic ">`
   \   0000045C   ........           DC32     `?<Constant "/part">`
   \   00000460   ........           DC32     `?<Constant "/attention ">`
   \   00000464   ........           DC32     `?<Constant "/message ">`
   \   00000468   ........           DC32     SendMessage
   \   0000046C   ........           DC32     sndMsgSend
   \   00000470   ........           DC32     Play
    248          
    249          }
    250          

   \                                 In segment CODE, align 4, keep-with-next
    251          void inp_redraw(void *data)
    252          {
    253          }
   \                     inp_redraw:
   \   00000000   1EFF2FE1           BX       LR               ;; return
    254          

   \                                 In segment CODE, align 4, keep-with-next
    255          void inp_ghook(GUI *gui, int cmd)
    256          {
   \                     inp_ghook:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   2CD04DE2           SUB      SP,SP,#+44
   \   00000008   0060A0E1           MOV      R6,R0
   \   0000000C   0170A0E1           MOV      R7,R1
    257            static SOFTKEY_DESC sk={0x0018, 0x0000,(int)LG_MENU};
    258          #ifndef NEWSGOLD
    259            static const SOFTKEY_DESC sk_cancel={0x0FF0,0x0000,(int)LG_CLOSE};
    260          #endif
    261          
    262            PNGTOP_DESC *pltop=PNG_TOP();
   \   00000010   B98100EF           SWI      +33209
    263            if (cmd==TI_CMD_UNFOCUS)
   \   00000014   0040A0E3           MOV      R4,#+0
   \   00000018   090057E3           CMP      R7,#+9
    264            {
    265              pltop->dyn_pltop=NULL;
   \   0000001C   08408005           STREQ    R4,[R0, #+8]
   \   00000020   2D00000A           BEQ      ??inp_ghook_0
    266            }
    267          
    268            if (cmd == TI_CMD_REDRAW)
   \   00000024   ........           LDR      R5,??DataTable18  ;; inp_desc
   \   00000028   070057E3           CMP      R7,#+7
   \   0000002C   0800001A           BNE      ??inp_ghook_1
    269            {
    270              EDITCONTROL ec;
    271              ExtractEditControl(gui, 1, &ec);
   \   00000030   0D20A0E1           MOV      R2,SP
   \   00000034   0110A0E3           MOV      R1,#+1
   \   00000038   0600A0E1           MOV      R0,R6
   \   0000003C   690100EF           SWI      +361
    272          #ifdef NEWSGOLD
    273              SetSoftKey(gui, &sk,0);
   \   00000040   0020A0E3           MOV      R2,#+0
   \   00000044   841085E2           ADD      R1,R5,#+132
   \   00000048   0600A0E1           MOV      R0,R6
   \   0000004C   680100EF           SWI      +360
   \   00000050   050000EA           B        ??inp_ghook_2
    274          #else
    275             SetSoftKey(gui, &sk, 1);
    276             if (ec.pWS->wsbody[0]==0)
    277                SetSoftKey(gui,&sk_cancel,SET_SOFT_KEY_N==0?1:0);
    278          #endif
    279            }
    280          
    281            if(cmd == TI_CMD_FOCUS)
   \                     ??inp_ghook_1:
   \   00000054   0A0057E3           CMP      R7,#+10
   \   00000058   0500001A           BNE      ??inp_ghook_3
    282            {
    283              pltop->dyn_pltop=SmilesImgList;
   \   0000005C   ........           LDR      R1,??DataTable17  ;; SmilesImgList
   \   00000060   001091E5           LDR      R1,[R1, #+0]
   \   00000064   081080E5           STR      R1,[R0, #+8]
    284              DisableIDLETMR();   // Отключаем таймер выхода по таймауту
   \   00000068   7F0100EF           SWI      +383
   \                     ??inp_ghook_2:
   \   0000006C   2CD08DE2           ADD      SP,SP,#+44
   \   00000070   F080BDE8           POP      {R4-R7,PC}
    285            }
    286            if(cmd == TI_CMD_DESTROY)
   \                     ??inp_ghook_3:
   \   00000074   030057E3           CMP      R7,#+3
   \   00000078   1700001A           BNE      ??inp_ghook_0
    287            {
    288              //Send composing CANCELATION
    289              if(!Mess_was_sent)
   \   0000007C   8100D5E5           LDRB     R0,[R5, #+129]
   \   00000080   000050E3           CMP      R0,#+0
   \   00000084   1300001A           BNE      ??inp_ghook_4
    290                if(((Resource_Ex->entry_type == T_NORMAL)||(Resource_Ex->entry_type == T_CONF_NODE))
    291                   && (Resource_Ex->status < PRESENCE_OFFLINE))
   \   00000088   500095E5           LDR      R0,[R5, #+80]
   \   0000008C   0810D0E5           LDRB     R1,[R0, #+8]
   \   00000090   000051E3           CMP      R1,#+0
   \   00000094   03005113           CMPNE    R1,#+3
   \   00000098   0E00001A           BNE      ??inp_ghook_4
   \   0000009C   0900D0E5           LDRB     R0,[R0, #+9]
   \   000000A0   060050E3           CMP      R0,#+6
   \   000000A4   0B00002A           BCS      ??inp_ghook_4
    292              {
    293                char is_gchat = Resource_Ex->entry_type== T_CONF_ROOT ? 1: 0;
   \   000000A8   020051E3           CMP      R1,#+2
   \   000000AC   0160A003           MOVEQ    R6,#+1
   \   000000B0   0060A013           MOVNE    R6,#+0
    294                IPC_MESSAGE_S *mess = malloc(sizeof(IPC_MESSAGE_S));
   \   000000B4   0800A0E3           MOV      R0,#+8
   \   000000B8   140000EF           SWI      +20
   \   000000BC   0020A0E1           MOV      R2,R0
    295                mess->IsGroupChat = is_gchat;
   \   000000C0   0060C2E5           STRB     R6,[R2, #+0]
    296                mess->body = NULL;
   \   000000C4   044082E5           STR      R4,[R2, #+4]
    297                SUBPROC((void*)CancelComposing,Resource_Ex->full_name, mess);
   \   000000C8   500095E5           LDR      R0,[R5, #+80]
   \   000000CC   041090E5           LDR      R1,[R0, #+4]
   \   000000D0   0C009FE5           LDR      R0,??inp_ghook_5  ;; CancelComposing
   \   000000D4   710100EF           SWI      +369
    298              }
    299              Mess_was_sent = 0;
   \                     ??inp_ghook_4:
   \   000000D8   8140C5E5           STRB     R4,[R5, #+129]
    300            }
    301          }
   \                     ??inp_ghook_0:
   \   000000DC   2CD08DE2           ADD      SP,SP,#+44       ;; stack cleaning
   \   000000E0   F080BDE8           POP      {R4-R7,PC}       ;; return
   \                     ??inp_ghook_5:
   \   000000E4   ........           DC32     CancelComposing
    302          

   \                                 In segment CODE, align 4, keep-with-next
    303          void inp_locret(void){}
   \                     inp_locret:
   \   00000000   1EFF2FE1           BX       LR               ;; return
    304          
    305          SOFTKEY_DESC menu_sk[]=
    306          {
    307            {0x0018,0x0000,(int)LG_SELECT},
    308            {0x0001,0x0000,(int)LG_BACK},
    309            {0x003D,0x0000,(int)LGP_DOIT_PIC}
    310          };
    311          
    312          SOFTKEYSTAB menu_skt=
    313          {
    314            menu_sk,0
    315          };
    316          
    317          INPUTDIA_DESC inp_desc=
    318          {
    319            1,
    320            inp_onkey,
    321            inp_ghook,
    322            (void *)inp_locret,
    323            0,
    324            &menu_skt,
    325            {0,22,131,153},
    326            4,
    327            100,
    328            101,
    329            0,
    330            0,
    331            0x40000000
    332          };
    333          
    334          HEADER_DESC inp_hdr={0,0,0,0,NULL,(int)LG_NEW,LGP_NULL};
    335          
    336          // Открыть окно написания нового сообщения
    337          

   \                                 In segment CODE, align 4, keep-with-next
    338          void Init_Message(TRESOURCE* ContEx, char *init_text)
    339          {
   \                     Init_Message:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
    340            Resource_Ex = ContEx;
   \   00000004   94419FE5           LDR      R4,??Init_Message_0  ;; inp_desc
   \   00000008   2CD04DE2           SUB      SP,SP,#+44
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   500084E5           STR      R0,[R4, #+80]
    341          
    342            //Send composing
    343            if(((ContEx->entry_type == T_NORMAL)||(ContEx->entry_type == T_CONF_NODE))
    344               &&(ContEx->status < PRESENCE_OFFLINE))
   \   00000014   0810D0E5           LDRB     R1,[R0, #+8]
   \   00000018   0060A0E3           MOV      R6,#+0
   \   0000001C   000051E3           CMP      R1,#+0
   \   00000020   03005113           CMPNE    R1,#+3
   \   00000024   0E00001A           BNE      ??Init_Message_1
   \   00000028   0900D0E5           LDRB     R0,[R0, #+9]
   \   0000002C   060050E3           CMP      R0,#+6
   \   00000030   0B00002A           BCS      ??Init_Message_1
    345            {
    346              char is_gchat = Resource_Ex->entry_type== T_CONF_ROOT ? 1: 0;
   \   00000034   020051E3           CMP      R1,#+2
   \   00000038   0170A003           MOVEQ    R7,#+1
   \   0000003C   0070A013           MOVNE    R7,#+0
    347              IPC_MESSAGE_S *mess = malloc(sizeof(IPC_MESSAGE_S));
   \   00000040   0800A0E3           MOV      R0,#+8
   \   00000044   140000EF           SWI      +20
   \   00000048   0020A0E1           MOV      R2,R0
    348              mess->IsGroupChat = is_gchat;
   \   0000004C   0070C2E5           STRB     R7,[R2, #+0]
    349              mess->body = NULL;
   \   00000050   046082E5           STR      R6,[R2, #+4]
    350              SUBPROC((void*)SendComposing,Resource_Ex->full_name, mess);
   \   00000054   500094E5           LDR      R0,[R4, #+80]
   \   00000058   041090E5           LDR      R1,[R0, #+4]
   \   0000005C   40019FE5           LDR      R0,??Init_Message_0+0x4  ;; SendComposing
   \   00000060   710100EF           SWI      +369
    351            }
    352          
    353            patch_header(&inp_hdr);
   \                     ??Init_Message_1:
   \   00000064   B863C4E1           STRH     R6,[R4, #+56]
   \   00000068   1800A0E3           MOV      R0,#+24
   \   0000006C   BA03C4E1           STRH     R0,[R4, #+58]
   \   00000070   888100EF           SWI      +33160
   \   00000074   010040E2           SUB      R0,R0,#+1
   \   00000078   BC03C4E1           STRH     R0,[R4, #+60]
   \   0000007C   8A8100EF           SWI      +33162
   \   00000080   180080E2           ADD      R0,R0,#+24
   \   00000084   BE03C4E1           STRH     R0,[R4, #+62]
    354            patch_input(&inp_desc);
   \   00000088   B861C4E1           STRH     R6,[R4, #+24]
   \   0000008C   8A8100EF           SWI      +33162
   \   00000090   190080E2           ADD      R0,R0,#+25
   \   00000094   BA01C4E1           STRH     R0,[R4, #+26]
   \   00000098   888100EF           SWI      +33160
   \   0000009C   010040E2           SUB      R0,R0,#+1
   \   000000A0   BC01C4E1           STRH     R0,[R4, #+28]
   \   000000A4   898100EF           SWI      +33161
   \   000000A8   0060A0E1           MOV      R6,R0
   \   000000AC   8B8100EF           SWI      +33163
   \   000000B0   000046E0           SUB      R0,R6,R0
   \   000000B4   010040E2           SUB      R0,R0,#+1
   \   000000B8   BE01C4E1           STRH     R0,[R4, #+30]
    355            WSHDR * ws = AllocWS(MAX_MSG_LEN);
   \   000000BC   400DA0E3           MOV      R0,#+4096
   \   000000C0   250100EF           SWI      +293
   \   000000C4   0060A0E1           MOV      R6,R0
    356            if(init_text)
   \   000000C8   000055E3           CMP      R5,#+0
   \   000000CC   0F00000A           BEQ      ??Init_Message_2
    357            {
    358              if (Is_Smiles_Enabled && SmilesImgList)
   \   000000D0   ........           LDR      R0,??DataTable16  ;; Is_Smiles_Enabled
   \   000000D4   000090E5           LDR      R0,[R0, #+0]
   \   000000D8   000050E3           CMP      R0,#+0
   \   000000DC   0700000A           BEQ      ??Init_Message_3
   \   000000E0   ........           LDR      R0,??DataTable17  ;; SmilesImgList
   \   000000E4   000090E5           LDR      R0,[R0, #+0]
   \   000000E8   000050E3           CMP      R0,#+0
   \   000000EC   0300000A           BEQ      ??Init_Message_3
    359              {
    360                CharsToSmilesUNI(ws, init_text);
   \   000000F0   0510A0E1           MOV      R1,R5
   \   000000F4   0600A0E1           MOV      R0,R6
   \   000000F8   ........           BL       CharsToSmilesUNI
   \   000000FC   030000EA           B        ??Init_Message_2
    361              }
    362              else
    363                utf8_2ws(ws, init_text, MAX_MSG_LEN);
   \                     ??Init_Message_3:
   \   00000100   402DA0E3           MOV      R2,#+4096
   \   00000104   0510A0E1           MOV      R1,R5
   \   00000108   0600A0E1           MOV      R0,R6
   \   0000010C   E30100EF           SWI      +483
    364            }
    365            EDITCONTROL ec;
    366            void *ma=malloc_adr();
   \                     ??Init_Message_2:
   \   00000110   148000EF           SWI      +32788
   \   00000114   0070A0E1           MOV      R7,R0
    367            void *eq;
    368            extern const int FIRST_LETTER;
    369            PrepareEditControl(&ec);
   \   00000118   0D00A0E1           MOV      R0,SP
   \   0000011C   640100EF           SWI      +356
    370            eq=AllocEQueue(ma,mfree_adr());
   \   00000120   158000EF           SWI      +32789
   \   00000124   0010A0E1           MOV      R1,R0
   \   00000128   0700A0E1           MOV      R0,R7
   \   0000012C   630100EF           SWI      +355
   \   00000130   0050A0E1           MOV      R5,R0
    371            ConstructEditControl(&ec, ECT_NORMAL_TEXT, ECF_APPEND_EOL | ((FIRST_LETTER)?ECF_DEFAULT_BIG_LETTER:0), ws, MAX_MSG_LEN);
   \   00000134   6C009FE5           LDR      R0,??Init_Message_0+0x8  ;; FIRST_LETTER
   \   00000138   401DA0E3           MOV      R1,#+4096
   \   0000013C   000090E5           LDR      R0,[R0, #+0]
   \   00000140   02002DE9           PUSH     {R1}
   \   00000144   000050E3           CMP      R0,#+0
   \   00000148   400DA013           MOVNE    R0,#+4096
   \   0000014C   0630A0E1           MOV      R3,R6
   \   00000150   402080E3           ORR      R2,R0,#0x40
   \   00000154   0310A0E3           MOV      R1,#+3
   \   00000158   04008DE2           ADD      R0,SP,#+4
   \   0000015C   650100EF           SWI      +357
    372            AddEditControlToEditQend(eq,&ec,ma);
   \   00000160   0720A0E1           MOV      R2,R7
   \   00000164   04108DE2           ADD      R1,SP,#+4
   \   00000168   0500A0E1           MOV      R0,R5
   \   0000016C   660100EF           SWI      +358
    373            edmessage_id=CreateInputTextDialog(&inp_desc,&inp_hdr,eq,1,0);
   \   00000170   0000A0E3           MOV      R0,#+0
   \   00000174   01002DE9           PUSH     {R0}
   \   00000178   0130A0E3           MOV      R3,#+1
   \   0000017C   0520A0E1           MOV      R2,R5
   \   00000180   381084E2           ADD      R1,R4,#+56
   \   00000184   0400A0E1           MOV      R0,R4
   \   00000188   670100EF           SWI      +359
   \   0000018C   580084E5           STR      R0,[R4, #+88]
    374            FreeWS(ws);
   \   00000190   0600A0E1           MOV      R0,R6
   \   00000194   290100EF           SWI      +297
    375          }
   \   00000198   34D08DE2           ADD      SP,SP,#+52
   \   0000019C   F080BDE8           POP      {R4-R7,PC}       ;; return
   \                     ??Init_Message_0:
   \   000001A0   ........           DC32     inp_desc
   \   000001A4   ........           DC32     SendComposing
   \   000001A8   ........           DC32     FIRST_LETTER
    376          ////////////////////////////////////////////////////////////////////////////////
    377          DISP_MESSAGE* MessagesList = NULL;      // Корень списка
    378          unsigned int DispMessList_Count = 0;    // Количество сообщений
    379          unsigned int OLD_MessList_Count = 0;    // Отпарсенное количество сообщений
    380          unsigned int Cursor_Pos = 0;            // Позиция курсора в списке
    381          
    382          
    383          // Убить список сообщений

   \                                 In segment CODE, align 4, keep-with-next
    384          void KillDisp(DISP_MESSAGE* messtop)
    385          {
   \                     KillDisp:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    386            DISP_MESSAGE* cl=messtop;
    387            LockSched();
   \   00000008   460100EF           SWI      +326
    388            messtop = NULL;
    389            int cnt=0;
   \   0000000C   000054E3           CMP      R4,#+0
   \   00000010   0800000A           BEQ      ??KillDisp_0
    390            while(cl)
    391            {
    392              DISP_MESSAGE *p;
    393              if(cl->mess)FreeWS(cl->mess);
   \                     ??KillDisp_1:
   \   00000014   040094E5           LDR      R0,[R4, #+4]
   \   00000018   000050E3           CMP      R0,#+0
   \   0000001C   0000000A           BEQ      ??KillDisp_2
   \   00000020   290100EF           SWI      +297
    394              p=cl;
   \                     ??KillDisp_2:
   \   00000024   0400A0E1           MOV      R0,R4
    395              cl=cl->next;
   \   00000028   0C4094E5           LDR      R4,[R4, #+12]
    396              mfree(p);
   \   0000002C   150000EF           SWI      +21
    397              cnt++;
    398            }
   \   00000030   000054E3           CMP      R4,#+0
   \   00000034   F6FFFF1A           BNE      ??KillDisp_1
    399            DispMessList_Count = 0;
   \                     ??KillDisp_0:
   \   00000038   ........           LDR      R0,??DataTable18  ;; inp_desc
   \   0000003C   0010A0E3           MOV      R1,#+0
   \   00000040   601080E5           STR      R1,[R0, #+96]
    400            OLD_MessList_Count = 0;
   \   00000044   641080E5           STR      R1,[R0, #+100]
    401            UnlockSched();
   \   00000048   470100EF           SWI      +327
    402          }
   \   0000004C   1080BDE8           POP      {R4,PC}          ;; return

   \                                 In segment DATA_I, align 4, align-sorted
   \                     inp_desc:
   \   00000000                      DS8 56
   \   00000038                      REQUIRE `?<Initializer for inp_desc>`
   \                     inp_hdr:
   \   00000038                      DS8 20
   \   0000004C                      REQUIRE `?<Initializer for inp_hdr>`
    403          
    404          //===============================================================================================
    405          
    406          int CurrentPage=1;
    407          int CurrentMessage = 0;
    408          int CurrentMessage_Lines = 0;
    409          int lines_on_page;
    410          int MaxPages=1;
    411          unsigned short FontSize;
   \                     FontSize:
   \   0000004C                      DS8 2
   \   0000004E                      REQUIRE `?<Initializer for FontSize>`
   \   0000004E                      DS8 2
   \                     Resource_Ex:
   \   00000050                      DS8 4
   \   00000054                      REQUIRE `?<Initializer for Resource_Ex>`
   \                     Message_gui_ID:
   \   00000054                      DS8 4
   \   00000058                      REQUIRE `?<Initializer for Message_gui_ID>`
   \                     edmessage_id:
   \   00000058                      DS8 4
   \   0000005C                      REQUIRE `?<Initializer for edmessage_id>`
   \                     MessagesList:
   \   0000005C                      DS8 4
   \   00000060                      REQUIRE `?<Initializer for MessagesList>`
   \                     DispMessList_Count:
   \   00000060                      DS8 4
   \   00000064                      REQUIRE `?<Initializer for DispMessList_Count>`
   \                     OLD_MessList_Count:
   \   00000064                      DS8 4
   \   00000068                      REQUIRE `?<Initializer for OLD_MessList_Count>`
   \                     Cursor_Pos:
   \   00000068                      DS8 4
   \   0000006C                      REQUIRE `?<Initializer for Cursor_Pos>`
   \                     CurrentPage:
   \   0000006C                      DS8 4
   \   00000070                      REQUIRE `?<Initializer for CurrentPage>`
   \                     CurrentMessage:
   \   00000070                      DS8 4
   \   00000074                      REQUIRE `?<Initializer for CurrentMessage>`
   \                     CurrentMessage_Lines:
   \   00000074                      DS8 4
   \   00000078                      REQUIRE `?<Initializer for CurrentMessage_Lines>`
   \                     lines_on_page:
   \   00000078                      DS8 4
   \   0000007C                      REQUIRE `?<Initializer for lines_on_page>`
   \                     MaxPages:
   \   0000007C                      DS8 4
   \   00000080                      REQUIRE `?<Initializer for MaxPages>`
   \                     MsgList_Quit_Required:
   \   00000080                      DS8 1
   \   00000081                      REQUIRE `?<Initializer for MsgList_Quit_Required>`
   \                     Mess_was_sent:
   \   00000081                      DS8 1
   \   00000082                      REQUIRE `?<Initializer for Mess_was_sent>`
   \   00000082                      DS8 2
   \   00000084                      DS8 8
   \   0000008C                      REQUIRE `?<Initializer for sk>`

   \                                 In segment DATA_I, align 4, align-sorted
   \                     menu_sk:
   \   00000000                      DS8 24
   \   00000018                      REQUIRE `?<Initializer for menu_sk>`

   \                                 In segment DATA_I, align 4, align-sorted
   \                     menu_skt:
   \   00000000                      DS8 8
   \   00000008                      REQUIRE `?<Initializer for menu_skt>`
    412          // Обслуживание созданного GUI
    413          
    414          // Всякие посторонние расчёты :)

   \                                 In segment CODE, align 4, keep-with-next
    415          void Calc_Pages_Data()
    416          {
   \                     Calc_Pages_Data:
   \   00000000   10402DE9           PUSH     {R4,LR}
    417            MaxPages = sdiv(lines_on_page,DispMessList_Count);
   \   00000004   ........           LDR      R4,??DataTable18  ;; inp_desc
   \   00000008   601094E5           LDR      R1,[R4, #+96]
   \   0000000C   780094E5           LDR      R0,[R4, #+120]
   \   00000010   B80000EF           SWI      +184
    418            if(lines_on_page*MaxPages<DispMessList_Count)MaxPages++;
   \   00000014   781094E5           LDR      R1,[R4, #+120]
   \   00000018   602094E5           LDR      R2,[R4, #+96]
   \   0000001C   900101E0           MUL      R1,R0,R1
   \   00000020   020051E1           CMP      R1,R2
   \   00000024   01008032           ADDCC    R0,R0,#+1
   \   00000028   7C0084E5           STR      R0,[R4, #+124]
    419          }
   \   0000002C   1080BDE8           POP      {R4,PC}          ;; return
    420          
    421          // Всякие посторонние расчёты :)

   \                                 In segment CODE, align 4, keep-with-next
    422          void Calc_Pages_Data_1()
    423          {
    424            if((Cursor_Pos-1-(CurrentMessage_Lines)<=(CurrentPage-1)*lines_on_page) && CurrentPage>1)
   \                     Calc_Pages_Data_1:
   \   00000000   ........           LDR      R0,??DataTable18  ;; inp_desc
   \   00000004   10002DE9           PUSH     {R4}
   \   00000008   6C1090E5           LDR      R1,[R0, #+108]
   \   0000000C   783090E5           LDR      R3,[R0, #+120]
   \   00000010   744090E5           LDR      R4,[R0, #+116]
   \   00000014   012041E2           SUB      R2,R1,#+1
   \   00000018   93020CE0           MUL      R12,R3,R2
   \   0000001C   683090E5           LDR      R3,[R0, #+104]
   \   00000020   013043E2           SUB      R3,R3,#+1
   \   00000024   043043E0           SUB      R3,R3,R4
   \   00000028   03005CE1           CMP      R12,R3
   \   0000002C   0100003A           BCC      ??Calc_Pages_Data_1_0
   \   00000030   020051E3           CMP      R1,#+2
    425            {
    426              CurrentPage--;
   \   00000034   6C2080A5           STRGE    R2,[R0, #+108]
    427              //Cursor_Pos--;
    428              //ShowMSG(1,(int)"Q");
    429              
    430            }
    431            else
    432            {
    433              //char q[20];
    434              //sprintf(q,"Cur=%d > %d", Cursor_Pos-1-(CurrentMessage_Lines), (CurrentPage-1)*lines_on_page);
    435              //ShowMSG(1,(int)q);
    436            }
    437          }
   \                     ??Calc_Pages_Data_1_0:
   \   00000038   1000BDE8           POP      {R4}
   \   0000003C   1EFF2FE1           BX       LR               ;; return
    438          
    439          

   \                                 In segment CODE, align 4, keep-with-next
    440          void Calc_Pages_Data_2()
    441          {
    442            if(Cursor_Pos+1>CurrentPage*lines_on_page)
   \                     Calc_Pages_Data_2:
   \   00000000   ........           LDR      R0,??DataTable18  ;; inp_desc
   \   00000004   6C1090E5           LDR      R1,[R0, #+108]
   \   00000008   782090E5           LDR      R2,[R0, #+120]
   \   0000000C   920103E0           MUL      R3,R2,R1
   \   00000010   682090E5           LDR      R2,[R0, #+104]
   \   00000014   012082E2           ADD      R2,R2,#+1
   \   00000018   020053E1           CMP      R3,R2
    443            {
    444              CurrentPage++;
   \   0000001C   01108132           ADDCC    R1,R1,#+1
   \   00000020   6C108035           STRCC    R1,[R0, #+108]
    445              //Cursor_Pos++;
    446            }
    447          }
   \   00000024   1EFF2FE1           BX       LR               ;; return
    448          

   \                                 In segment CODE, align 4, keep-with-next
    449          void mGUI_onRedraw(GUI *data)
    450          {
   \                     mGUI_onRedraw:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
    451            if(Resource_Ex->total_msg_count!=OLD_MessList_Count)
   \   00000004   ........           LDR      R4,??DataTable18  ;; inp_desc
   \   00000008   08D04DE2           SUB      SP,SP,#+8
   \   0000000C   500094E5           LDR      R0,[R4, #+80]
   \   00000010   642094E5           LDR      R2,[R4, #+100]
   \   00000014   181090E5           LDR      R1,[R0, #+24]
   \   00000018   020051E1           CMP      R1,R2
   \   0000001C   0300000A           BEQ      ??mGUI_onRedraw_1
    452            {
    453              //KillDisp(MessagesList);
    454              ParseMessagesIntoList(Resource_Ex);
   \   00000020   ........           BL       ParseMessagesIntoList
    455              OLD_MessList_Count = Resource_Ex->total_msg_count;
   \   00000024   500094E5           LDR      R0,[R4, #+80]
   \   00000028   180090E5           LDR      R0,[R0, #+24]
   \   0000002C   640084E5           STR      R0,[R4, #+100]
    456            }
    457            // Расчёт количества строк на одной странице
    458            Calc_Pages_Data();
    459            // Заголовок окна
    460            DrawRectangle(0,SCR_START,ScreenW()-1,SCR_START+FontSize*2+1,0,
    461                             0, color(MESSAGEWIN_TITLE_BGCOLOR));
    462          
    463            DrawRectangle(0,SCR_START+FontSize+2,ScreenW()-1,ScreenH()-1,0,
    464                             0, color(MESSAGEWIN_BGCOLOR));
    465          
    466            // Делаем типо название окошка... :)
    467            WSHDR* ws_title = AllocWS(256);
    468            if (Resource_Ex->entry_type==T_CONF_NODE) utf8_2ws(ws_title, Resource_Ex->name, 256);
    469             else utf8_2ws(ws_title, Resource_Ex->full_name, 256);
    470            CutWSStringWidth(ws_title,ScreenW()-1, MESSAGEWIN_FONT);
   \                     ??mGUI_onRedraw_1:
   \   00000030   ........           LDR      R6,??DataTable31  ;; MESSAGEWIN_FONT
   \   00000034   ........           BL       Calc_Pages_Data
   \   00000038   888100EF           SWI      +33160
   \   0000003C   88139FE5           LDR      R1,??mGUI_onRedraw_2  ;; MESSAGEWIN_TITLE_BGCOLOR
   \   00000040   1920A0E3           MOV      R2,#+25
   \   00000044   02002DE9           PUSH     {R1}
    471            DrawString(ws_title,1,SCR_START+1,ScreenW()-1,SCR_START+FontSize+1,MESSAGEWIN_FONT,0,color(MESSAGEWIN_TITLE_FONT),0);
    472          
    473            DISP_MESSAGE * ml = MessagesList;
    474            int i_ctrl=1;
   \   00000048   0180A0E3           MOV      R8,#+1
    475            int kur = 0;
   \   0000004C   00A0A0E3           MOV      R10,#+0
   \   00000050   0010A0E3           MOV      R1,#+0
   \   00000054   02002DE9           PUSH     {R1}
   \   00000058   02002DE9           PUSH     {R1}
   \   0000005C   BC14D4E1           LDRH     R1,[R4, #+76]
   \   00000060   813082E0           ADD      R3,R2,R1, LSL #+1
   \   00000064   012040E2           SUB      R2,R0,#+1
   \   00000068   1810A0E3           MOV      R1,#+24
   \   0000006C   0000A0E3           MOV      R0,#+0
   \   00000070   B40100EF           SWI      +436
   \   00000074   898100EF           SWI      +33161
   \   00000078   0050A0E1           MOV      R5,R0
   \   0000007C   888100EF           SWI      +33160
   \   00000080   48139FE5           LDR      R1,??mGUI_onRedraw_2+0x4  ;; MESSAGEWIN_BGCOLOR
   \   00000084   013045E2           SUB      R3,R5,#+1
   \   00000088   02002DE9           PUSH     {R1}
   \   0000008C   012040E2           SUB      R2,R0,#+1
   \   00000090   0010A0E3           MOV      R1,#+0
   \   00000094   02002DE9           PUSH     {R1}
   \   00000098   02002DE9           PUSH     {R1}
   \   0000009C   BC04D4E1           LDRH     R0,[R4, #+76]
   \   000000A0   1A1080E2           ADD      R1,R0,#+26
   \   000000A4   0000A0E3           MOV      R0,#+0
   \   000000A8   B40100EF           SWI      +436
   \   000000AC   400FA0E3           MOV      R0,#+256
   \   000000B0   250100EF           SWI      +293
   \   000000B4   0050A0E1           MOV      R5,R0
   \   000000B8   500094E5           LDR      R0,[R4, #+80]
   \   000000BC   402FA0E3           MOV      R2,#+256
   \   000000C0   0810D0E5           LDRB     R1,[R0, #+8]
   \   000000C4   18D08DE2           ADD      SP,SP,#+24
   \   000000C8   030051E3           CMP      R1,#+3
   \   000000CC   00109005           LDREQ    R1,[R0, #+0]
   \   000000D0   04109015           LDRNE    R1,[R0, #+4]
   \   000000D4   0500A0E1           MOV      R0,R5
   \   000000D8   E30100EF           SWI      +483
   \   000000DC   888100EF           SWI      +33160
   \   000000E0   002096E5           LDR      R2,[R6, #+0]
   \   000000E4   011040E2           SUB      R1,R0,#+1
   \   000000E8   0500A0E1           MOV      R0,R5
   \   000000EC   ........           _BLF     CutWSStringWidth,??CutWSStringWidth??rA
   \   000000F0   888100EF           SWI      +33160
   \   000000F4   0010A0E3           MOV      R1,#+0
   \   000000F8   02002DE9           PUSH     {R1}
   \   000000FC   D0129FE5           LDR      R1,??mGUI_onRedraw_2+0x8  ;; MESSAGEWIN_TITLE_FONT
   \   00000100   013040E2           SUB      R3,R0,#+1
   \   00000104   02002DE9           PUSH     {R1}
   \   00000108   1920A0E3           MOV      R2,#+25
   \   0000010C   0500A0E1           MOV      R0,R5
   \   00000110   0010A0E3           MOV      R1,#+0
   \   00000114   02002DE9           PUSH     {R1}
   \   00000118   001096E5           LDR      R1,[R6, #+0]
   \   0000011C   02002DE9           PUSH     {R1}
   \   00000120   BC14D4E1           LDRH     R1,[R4, #+76]
   \   00000124   191081E2           ADD      R1,R1,#+25
   \   00000128   02002DE9           PUSH     {R1}
   \   0000012C   0110A0E3           MOV      R1,#+1
   \   00000130   4C0100EF           SWI      +332
   \   00000134   5C7094E5           LDR      R7,[R4, #+92]
   \   00000138   0000A0E3           MOV      R0,#+0
   \   0000013C   740084E5           STR      R0,[R4, #+116]
    476            RGBA MsgBgColor;
    477            RGBA MsgBg2Color;
    478            CurrentMessage_Lines = 0;
    479            int Y_pos = NULL; // Стартовая позиция текущей строки
   \   00000140   0090A0E1           MOV      R9,R0
   \   00000144   000057E3           CMP      R7,#+0
   \   00000148   14D08DE2           ADD      SP,SP,#+20
   \   0000014C   9800000A           BEQ      ??mGUI_onRedraw_3
    480            while(ml)
    481            {
    482              if((i_ctrl>(CurrentPage-1)*lines_on_page) && (i_ctrl<=CurrentPage*lines_on_page))
   \                     ??mGUI_onRedraw_4:
   \   00000150   780094E5           LDR      R0,[R4, #+120]
   \   00000154   6C1094E5           LDR      R1,[R4, #+108]
   \   00000158   012041E2           SUB      R2,R1,#+1
   \   0000015C   900202E0           MUL      R2,R0,R2
   \   00000160   080052E1           CMP      R2,R8
   \   00000164   8E0000AA           BGE      ??mGUI_onRedraw_5
   \   00000168   900101E0           MUL      R1,R0,R1
   \   0000016C   080051E1           CMP      R1,R8
   \   00000170   8B0000BA           BLT      ??mGUI_onRedraw_5
    483              {
    484                switch(ml->mtype)
   \   00000174   0000D7E5           LDRB     R0,[R7, #+0]
   \   00000178   010040E2           SUB      R0,R0,#+1
   \   0000017C   050050E3           CMP      R0,#+5
   \   00000180   1D00008A           BHI      ??mGUI_onRedraw_6
   \   00000184   011F8FE2           ADR      R1,??mGUI_onRedraw_0
   \   00000188   0010D1E7           LDRB     R1,[R1, R0]
   \   0000018C   01F18FE0           ADD      PC,PC,R1, LSL #+2
   \                     ??mGUI_onRedraw_0:
   \   00000190   01040B0B           DC8      +1,+4,+11,+11
   \   00000194   06090000           DC8      +6,+9,+0,+0
    485                {
    486                case MSG_ME:      MsgBgColor=MESSAGEWIN_MY_BGCOLOR; break;
   \                     ??mGUI_onRedraw_7:
   \   00000198   38129FE5           LDR      R1,??mGUI_onRedraw_2+0xC  ;; MESSAGEWIN_MY_BGCOLOR
   \                     ??mGUI_onRedraw_8:
   \   0000019C   0D00A0E1           MOV      R0,SP
   \   000001A0   0D0000EA           B        ??mGUI_onRedraw_9
    487                case MSG_CHAT:    MsgBgColor=MESSAGEWIN_CH_BGCOLOR;break;
   \                     ??mGUI_onRedraw_10:
   \   000001A4   30129FE5           LDR      R1,??mGUI_onRedraw_2+0x10  ;; MESSAGEWIN_CH_BGCOLOR
   \   000001A8   FBFFFFEA           B        ??mGUI_onRedraw_8
    488                case MSG_SYSTEM:  MsgBgColor=MESSAGEWIN_SYS_BGCOLOR;break;
   \                     ??mGUI_onRedraw_11:
   \   000001AC   2C129FE5           LDR      R1,??mGUI_onRedraw_2+0x14  ;; MESSAGEWIN_SYS_BGCOLOR
   \   000001B0   0D00A0E1           MOV      R0,SP
   \   000001B4   080000EA           B        ??mGUI_onRedraw_9
    489                case MSG_STATUS:  MsgBgColor=MESSAGEWIN_STATUS_BGCOLOR;break;
   \                     ??mGUI_onRedraw_12:
   \   000001B8   24129FE5           LDR      R1,??mGUI_onRedraw_2+0x18  ;; MESSAGEWIN_STATUS_BGCOLOR
   \   000001BC   F6FFFFEA           B        ??mGUI_onRedraw_8
    490                case MSG_NICKGCHAT:
    491                case MSG_GCHAT:   MsgBgColor=ml->log_mess_number %2==0? MESSAGEWIN_GCHAT_BGCOLOR_1 : MESSAGEWIN_GCHAT_BGCOLOR_2; break;
   \                     ??mGUI_onRedraw_13:
   \   000001C0   B200D7E1           LDRH     R0,[R7, #+2]
   \   000001C4   0010A0E1           MOV      R1,R0
   \   000001C8   A000A0E1           LSR      R0,R0,#+1
   \   000001CC   800051E0           SUBS     R0,R1,R0, LSL #+1
   \   000001D0   10129F05           LDREQ    R1,??mGUI_onRedraw_2+0x1C  ;; MESSAGEWIN_GCHAT_BGCOLOR_1
   \   000001D4   0D00A0E1           MOV      R0,SP
   \   000001D8   0C129F15           LDRNE    R1,??mGUI_onRedraw_2+0x20  ;; MESSAGEWIN_GCHAT_BGCOLOR_2
   \                     ??mGUI_onRedraw_9:
   \   000001DC   0020D1E5           LDRB     R2,[R1, #0]
   \   000001E0   0020C0E5           STRB     R2,[R0, #+0]
   \   000001E4   0120D1E5           LDRB     R2,[R1, #+1]
   \   000001E8   0120C0E5           STRB     R2,[R0, #+1]
   \   000001EC   0220D1E5           LDRB     R2,[R1, #+2]
   \   000001F0   0220C0E5           STRB     R2,[R0, #+2]
   \   000001F4   0320D1E5           LDRB     R2,[R1, #+3]
   \   000001F8   0320C0E5           STRB     R2,[R0, #+3]
    492                }
    493                MsgBg2Color=MsgBgColor;
   \                     ??mGUI_onRedraw_6:
   \   000001FC   0D10A0E1           MOV      R1,SP
   \   00000200   0020D1E5           LDRB     R2,[R1, #0]
   \   00000204   04008DE2           ADD      R0,SP,#+4
   \   00000208   0020C0E5           STRB     R2,[R0, #+0]
   \   0000020C   0120D1E5           LDRB     R2,[R1, #+1]
   \   00000210   0120C0E5           STRB     R2,[R0, #+1]
   \   00000214   0220D1E5           LDRB     R2,[R1, #+2]
   \   00000218   0220C0E5           STRB     R2,[R0, #+2]
   \   0000021C   0320D1E5           LDRB     R2,[R1, #+3]
   \   00000220   0320C0E5           STRB     R2,[R0, #+3]
    494                
    495                if(CurrentMessage == ml->log_mess_number)
   \   00000224   B210D7E1           LDRH     R1,[R7, #+2]
   \   00000228   700094E5           LDR      R0,[R4, #+112]
   \   0000022C   010050E1           CMP      R0,R1
    496                {
    497                  Cursor_Pos = i_ctrl;
   \   00000230   68808405           STREQ    R8,[R4, #+104]
    498                  kur = 1;
    499                }
    500                
    501                if(Cursor_Pos == i_ctrl)
   \   00000234   681094E5           LDR      R1,[R4, #+104]
   \   00000238   01A0A003           MOVEQ    R10,#+1
   \   0000023C   080051E1           CMP      R1,R8
   \   00000240   2B00001A           BNE      ??mGUI_onRedraw_14
    502                {
    503                  MsgBgColor = MESSAGEWIN_CURSOR_BGCOLOR;
   \   00000244   A4219FE5           LDR      R2,??mGUI_onRedraw_2+0x24  ;; MESSAGEWIN_CURSOR_BGCOLOR
   \   00000248   0D30A0E1           MOV      R3,SP
   \   0000024C   00B0D2E5           LDRB     R11,[R2, #0]
   \   00000250   00B0C3E5           STRB     R11,[R3, #+0]
   \   00000254   01B0D2E5           LDRB     R11,[R2, #+1]
   \   00000258   01B0C3E5           STRB     R11,[R3, #+1]
   \   0000025C   02B0D2E5           LDRB     R11,[R2, #+2]
   \   00000260   02B0C3E5           STRB     R11,[R3, #+2]
   \   00000264   03B0D2E5           LDRB     R11,[R2, #+3]
   \   00000268   03B0C3E5           STRB     R11,[R3, #+3]
    504                  
    505                  if(pod_mess)
   \   0000026C   80319FE5           LDR      R3,??mGUI_onRedraw_2+0x28  ;; pod_mess
   \   00000270   003093E5           LDR      R3,[R3, #+0]
   \   00000274   000053E3           CMP      R3,#+0
   \   00000278   0A00000A           BEQ      ??mGUI_onRedraw_15
    506                    MsgBg2Color= CURSOR_BORDER;
   \   0000027C   74319FE5           LDR      R3,??mGUI_onRedraw_2+0x2C  ;; CURSOR_BORDER
   \   00000280   04208DE2           ADD      R2,SP,#+4
   \   00000284   00B0D3E5           LDRB     R11,[R3, #0]
   \   00000288   00B0C2E5           STRB     R11,[R2, #+0]
   \   0000028C   01B0D3E5           LDRB     R11,[R3, #+1]
   \   00000290   01B0C2E5           STRB     R11,[R2, #+1]
   \   00000294   02B0D3E5           LDRB     R11,[R3, #+2]
   \   00000298   02B0C2E5           STRB     R11,[R2, #+2]
   \   0000029C   03B0D3E5           LDRB     R11,[R3, #+3]
   \   000002A0   03B0C2E5           STRB     R11,[R2, #+3]
   \   000002A4   080000EA           B        ??mGUI_onRedraw_16
    507                  else
    508                    MsgBg2Color=MESSAGEWIN_CURSOR_BGCOLOR;
   \                     ??mGUI_onRedraw_15:
   \   000002A8   00B0D2E5           LDRB     R11,[R2, #0]
   \   000002AC   04308DE2           ADD      R3,SP,#+4
   \   000002B0   00B0C3E5           STRB     R11,[R3, #+0]
   \   000002B4   01B0D2E5           LDRB     R11,[R2, #+1]
   \   000002B8   01B0C3E5           STRB     R11,[R3, #+1]
   \   000002BC   02B0D2E5           LDRB     R11,[R2, #+2]
   \   000002C0   02B0C3E5           STRB     R11,[R3, #+2]
   \   000002C4   03B0D2E5           LDRB     R11,[R2, #+3]
   \   000002C8   03B0C3E5           STRB     R11,[R3, #+3]
    509                  
    510                  DISP_MESSAGE *mln = ml->next;
   \                     ??mGUI_onRedraw_16:
   \   000002CC   0C2097E5           LDR      R2,[R7, #+12]
    511                  if(mln)
   \   000002D0   000052E3           CMP      R2,#+0
   \   000002D4   0300000A           BEQ      ??mGUI_onRedraw_17
    512                    if(CurrentMessage==mln->log_mess_number) Cursor_Pos++;  // Обновляем позицию курсора
   \   000002D8   B220D2E1           LDRH     R2,[R2, #+2]
   \   000002DC   020050E1           CMP      R0,R2
   \   000002E0   01008102           ADDEQ    R0,R1,#+1
   \   000002E4   68008405           STREQ    R0,[R4, #+104]
    513                  CurrentMessage_Lines++;
   \                     ??mGUI_onRedraw_17:
   \   000002E8   740094E5           LDR      R0,[R4, #+116]
   \   000002EC   010080E2           ADD      R0,R0,#+1
   \   000002F0   740084E5           STR      R0,[R4, #+116]
    514                }
    515                
    516                DrawRectangle(0, SCR_START + FontSize + 2 + Y_pos, ScreenW() - 1, SCR_START + FontSize + 2 + ml->line_height + Y_pos - kur, 0,
    517                                 color(MsgBg2Color), color(MsgBgColor));
   \                     ??mGUI_onRedraw_14:
   \   000002F4   888100EF           SWI      +33160
   \   000002F8   BC14D4E1           LDRH     R1,[R4, #+76]
   \   000002FC   0D20A0E1           MOV      R2,SP
   \   00000300   04002DE9           PUSH     {R2}
   \   00000304   091081E0           ADD      R1,R1,R9
   \   00000308   08208DE2           ADD      R2,SP,#+8
   \   0000030C   04002DE9           PUSH     {R2}
   \   00000310   0020A0E3           MOV      R2,#+0
   \   00000314   04002DE9           PUSH     {R2}
   \   00000318   082097E5           LDR      R2,[R7, #+8]
   \   0000031C   012082E0           ADD      R2,R2,R1
   \   00000320   1A2082E2           ADD      R2,R2,#+26
   \   00000324   0A3042E0           SUB      R3,R2,R10
   \   00000328   012040E2           SUB      R2,R0,#+1
   \   0000032C   1A1081E2           ADD      R1,R1,#+26
   \   00000330   0000A0E3           MOV      R0,#+0
   \   00000334   B40100EF           SWI      +436
    518          
    519                DrawString(ml->mess, MSG_START_X, SCR_START + FontSize + 2 + Y_pos, 
    520                          ScreenW()-1, SCR_START + FontSize + 2 + ml->line_height + Y_pos,
    521                          ml->mtype==MSG_NICKGCHAT?FONT_SMALL_BOLD:MESSAGEWIN_FONT, 0,
    522                          color(MESSAGEWIN_CHAT_FONT), 0);
   \   00000338   0000D7E5           LDRB     R0,[R7, #+0]
   \   0000033C   0CD08DE2           ADD      SP,SP,#+12
   \   00000340   040050E3           CMP      R0,#+4
   \   00000344   00B09615           LDRNE    R11,[R6, #+0]
   \   00000348   09B0A003           MOVEQ    R11,#+9
   \   0000034C   888100EF           SWI      +33160
   \   00000350   BC14D4E1           LDRH     R1,[R4, #+76]
   \   00000354   0020A0E3           MOV      R2,#+0
   \   00000358   04002DE9           PUSH     {R2}
   \   0000035C   98209FE5           LDR      R2,??mGUI_onRedraw_2+0x30  ;; MESSAGEWIN_CHAT_FONT
   \   00000360   091081E0           ADD      R1,R1,R9
   \   00000364   04002DE9           PUSH     {R2}
   \   00000368   013040E2           SUB      R3,R0,#+1
   \   0000036C   0020A0E3           MOV      R2,#+0
   \   00000370   04002DE9           PUSH     {R2}
   \   00000374   00082DE9           PUSH     {R11}
   \   00000378   082097E5           LDR      R2,[R7, #+8]
   \   0000037C   012082E0           ADD      R2,R2,R1
   \   00000380   1A2082E2           ADD      R2,R2,#+26
   \   00000384   04002DE9           PUSH     {R2}
   \   00000388   040097E5           LDR      R0,[R7, #+4]
   \   0000038C   1A2081E2           ADD      R2,R1,#+26
   \   00000390   0110A0E3           MOV      R1,#+1
   \   00000394   4C0100EF           SWI      +332
    523          
    524                Y_pos += ml->line_height;
   \   00000398   080097E5           LDR      R0,[R7, #+8]
   \   0000039C   14D08DE2           ADD      SP,SP,#+20
   \   000003A0   099080E0           ADD      R9,R0,R9
    525              }
    526              ml = ml->next;
   \                     ??mGUI_onRedraw_5:
   \   000003A4   0C7097E5           LDR      R7,[R7, #+12]
    527              i_ctrl++;
   \   000003A8   018088E2           ADD      R8,R8,#+1
    528            }
   \   000003AC   000057E3           CMP      R7,#+0
   \   000003B0   66FFFF1A           BNE      ??mGUI_onRedraw_4
    529            FreeWS(ws_title);
   \                     ??mGUI_onRedraw_3:
   \   000003B4   0500A0E1           MOV      R0,R5
   \   000003B8   290100EF           SWI      +297
    530            Resource_Ex->has_unread_msg =0; // Непрочитанных сообщений больше нет
   \   000003BC   500094E5           LDR      R0,[R4, #+80]
   \   000003C0   0010A0E3           MOV      R1,#+0
   \   000003C4   141080E5           STR      R1,[R0, #+20]
    531          }
   \   000003C8   F38FBDE8           POP      {R0,R1,R4-R11,PC}  ;; return
   \                     ??mGUI_onRedraw_2:
   \   000003CC   ........           DC32     MESSAGEWIN_TITLE_BGCOLOR
   \   000003D0   ........           DC32     MESSAGEWIN_BGCOLOR
   \   000003D4   ........           DC32     MESSAGEWIN_TITLE_FONT
   \   000003D8   ........           DC32     MESSAGEWIN_MY_BGCOLOR
   \   000003DC   ........           DC32     MESSAGEWIN_CH_BGCOLOR
   \   000003E0   ........           DC32     MESSAGEWIN_SYS_BGCOLOR
   \   000003E4   ........           DC32     MESSAGEWIN_STATUS_BGCOLOR
   \   000003E8   ........           DC32     MESSAGEWIN_GCHAT_BGCOLOR_1
   \   000003EC   ........           DC32     MESSAGEWIN_GCHAT_BGCOLOR_2
   \   000003F0   ........           DC32     MESSAGEWIN_CURSOR_BGCOLOR
   \   000003F4   ........           DC32     pod_mess
   \   000003F8   ........           DC32     CURSOR_BORDER
   \   000003FC   ........           DC32     MESSAGEWIN_CHAT_FONT
    532          

   \                                 In segment CODE, align 4, keep-with-next
    533          void mGUI_onCreate(GUI *data, void *(*malloc_adr)(int))
    534          {
    535            data->state=1;
   \                     mGUI_onCreate:
   \   00000000   0110A0E3           MOV      R1,#+1
   \   00000004   0C10C0E5           STRB     R1,[R0, #+12]
    536            MsgList_Quit_Required=0;
   \   00000008   08009FE5           LDR      R0,??mGUI_onCreate_0  ;; inp_desc + 128
   \   0000000C   0010A0E3           MOV      R1,#+0
   \   00000010   0010C0E5           STRB     R1,[R0, #+0]
    537          }
   \   00000014   1EFF2FE1           BX       LR               ;; return
   \                     ??mGUI_onCreate_0:
   \   00000018   ........           DC32     inp_desc + 128
    538          

   \                                 In segment CODE, align 4, keep-with-next
    539          void mGUI_onClose(GUI *data, void (*mfree_adr)(void *))
    540          {
   \                     mGUI_onClose:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    541            if (Is_Smiles_Enabled && SmilesImgList)
   \   00000008   ........           LDR      R0,??DataTable16  ;; Is_Smiles_Enabled
   \   0000000C   0050A0E3           MOV      R5,#+0
   \   00000010   000090E5           LDR      R0,[R0, #+0]
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   0500000A           BEQ      ??mGUI_onClose_0
   \   0000001C   ........           LDR      R0,??DataTable17  ;; SmilesImgList
   \   00000020   000090E5           LDR      R0,[R0, #+0]
   \   00000024   000050E3           CMP      R0,#+0
   \   00000028   0100000A           BEQ      ??mGUI_onClose_0
    542            {
    543              PNGTOP_DESC * pltop = PNG_TOP();
   \   0000002C   B98100EF           SWI      +33209
    544              pltop->dyn_pltop = NULL;
   \   00000030   085080E5           STR      R5,[R0, #+8]
    545            }
    546            KillDisp(MessagesList);
   \                     ??mGUI_onClose_0:
   \   00000034   ........           LDR      R0,??DataTable26  ;; inp_desc + 92
   \   00000038   000090E5           LDR      R0,[R0, #+0]
   \   0000003C   ........           BL       KillDisp
    547            data->state=0;
   \   00000040   0C50C4E5           STRB     R5,[R4, #+12]
    548          }
   \   00000044   3080BDE8           POP      {R4,R5,PC}       ;; return
    549          

   \                                 In segment CODE, align 4, keep-with-next
    550          void mGUI_onFocus(GUI *data, void *(*malloc_adr)(int), void (*mfree_adr)(void *))
    551          {
   \                     mGUI_onFocus:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    552            if (Is_Smiles_Enabled && SmilesImgList)
   \   00000008   ........           LDR      R0,??DataTable16  ;; Is_Smiles_Enabled
   \   0000000C   000090E5           LDR      R0,[R0, #+0]
   \   00000010   000050E3           CMP      R0,#+0
   \   00000014   0600000A           BEQ      ??mGUI_onFocus_0
   \   00000018   ........           LDR      R5,??DataTable17  ;; SmilesImgList
   \   0000001C   000095E5           LDR      R0,[R5, #+0]
   \   00000020   000050E3           CMP      R0,#+0
   \   00000024   0200000A           BEQ      ??mGUI_onFocus_0
    553            {
    554              PNGTOP_DESC * pltop = PNG_TOP();
   \   00000028   B98100EF           SWI      +33209
    555              pltop->dyn_pltop = SmilesImgList;
   \   0000002C   001095E5           LDR      R1,[R5, #+0]
   \   00000030   081080E5           STR      R1,[R0, #+8]
    556            }
    557            DisableIDLETMR();   // Отключаем таймер выхода по таймауту
   \                     ??mGUI_onFocus_0:
   \   00000034   7F0100EF           SWI      +383
    558            data->state=2;
   \   00000038   0200A0E3           MOV      R0,#+2
   \   0000003C   0C00C4E5           STRB     R0,[R4, #+12]
    559          #ifdef ELKA
    560            DisableIconBar(0);
   \   00000040   0000A0E3           MOV      R0,#+0
   \   00000044   3B0200EF           SWI      +571
    561            GBS_SendMessage(0x4209, 0x642C, 0, 0, 0);
   \   00000048   0000A0E3           MOV      R0,#+0
   \   0000004C   01002DE9           PUSH     {R0}
   \   00000050   0030A0E3           MOV      R3,#+0
   \   00000054   0020A0E1           MOV      R2,R0
   \   00000058   2C10A0E3           MOV      R1,#+44
   \   0000005C   641C81E3           ORR      R1,R1,#0x6400
   \   00000060   0900A0E3           MOV      R0,#+9
   \   00000064   420C80E3           ORR      R0,R0,#0x4200
   \   00000068   000100EF           SWI      +256
    562          #endif
    563          }
   \   0000006C   3180BDE8           POP      {R0,R4,R5,PC}    ;; return
    564          

   \                                 In segment CODE, align 4, keep-with-next
    565          void mGUI_onUnfocus(GUI *data, void (*mfree_adr)(void *))
    566          {
    567            if (data->state!=2) return;
   \                     mGUI_onUnfocus:
   \   00000000   0C10D0E5           LDRB     R1,[R0, #+12]
   \   00000004   020051E3           CMP      R1,#+2
    568            data->state=1;
   \   00000008   0110A003           MOVEQ    R1,#+1
   \   0000000C   0C10C005           STRBEQ   R1,[R0, #+12]
    569          }
   \   00000010   1EFF2FE1           BX       LR               ;; return
    570          

   \                                 In segment CODE, align 4, keep-with-next
    571          LOG_MESSAGE *GetCurMessage()
    572          {
    573            unsigned int i=0;
    574            LOG_MESSAGE* log =Resource_Ex->log;
   \                     GetCurMessage:
   \   00000000   ........           LDR      R2,??DataTable18  ;; inp_desc
   \   00000004   0010A0E3           MOV      R1,#+0
   \   00000008   500092E5           LDR      R0,[R2, #+80]
   \   0000000C   1C0090E5           LDR      R0,[R0, #+28]
   \   00000010   000000EA           B        ??GetCurMessage_0
    575            while(log)
    576            {
    577              i++;
    578              if(i==CurrentMessage)break;
    579              log = log->next;
   \                     ??GetCurMessage_1:
   \   00000014   0C0090E5           LDR      R0,[R0, #+12]
   \                     ??GetCurMessage_0:
   \   00000018   000050E3           CMP      R0,#+0
   \   0000001C   1EFF2F01           BXEQ     LR
   \   00000020   703092E5           LDR      R3,[R2, #+112]
   \   00000024   011081E2           ADD      R1,R1,#+1
   \   00000028   030051E1           CMP      R1,R3
   \   0000002C   F8FFFF1A           BNE      ??GetCurMessage_1
    580            }
    581            return log;
   \   00000030   1EFF2FE1           BX       LR               ;; return
    582          }
    583          

   \                                 In segment CODE, align 4, keep-with-next
    584          int mGUI_onKey(GUI *data, GUI_MSG *msg)
    585          {
   \                     mGUI_onKey:
   \   00000000   F24F2DE9           PUSH     {R1,R4-R11,LR}
    586            if(MsgList_Quit_Required)
   \   00000004   ........           LDR      R4,??DataTable32  ;; inp_desc
   \   00000008   8000D4E5           LDRB     R0,[R4, #+128]
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   0100000A           BEQ      ??mGUI_onKey_2
    587              return 1; //Происходит вызов GeneralFunc для тек. GUI -> закрытие GUI
   \                     ??mGUI_onKey_3:
   \   00000014   0100A0E3           MOV      R0,#+1
   \   00000018   F28FBDE8           POP      {R1,R4-R11,PC}
    588          
    589            if (KBD_LAYOUT)
   \                     ??mGUI_onKey_2:
   \   0000001C   00209DE5           LDR      R2,[SP, #+0]
   \   00000020   B8B49FE5           LDR      R11,??mGUI_onKey_4  ;; KBD_LAYOUT
   \   00000024   042092E5           LDR      R2,[R2, #+4]
   \   00000028   00B09BE5           LDR      R11,[R11, #+0]
   \   0000002C   500094E5           LDR      R0,[R4, #+80]
   \   00000030   7C6094E5           LDR      R6,[R4, #+124]
   \   00000034   6C1094E5           LDR      R1,[R4, #+108]
   \   00000038   0A70A0E3           MOV      R7,#+10
   \   0000003C   3E80A0E3           MOV      R8,#+62
   \   00000040   2090A0E3           MOV      R9,#+32
   \   00000044   3AA0A0E3           MOV      R10,#+58
   \   00000048   9330A0E3           MOV      R3,#+147
   \   0000004C   403F83E3           ORR      R3,R3,#0x100
   \   00000050   0050A0E3           MOV      R5,#+0
   \   00000054   00005BE3           CMP      R11,#+0
   \   00000058   04B092E5           LDR      R11,[R2, #+4]
   \   0000005C   9800000A           BEQ      ??mGUI_onKey_5
    590            {
    591              if (msg->gbsmsg->msg==KEY_DOWN)
   \   00000060   03005BE1           CMP      R11,R3
   \   00000064   EF00001A           BNE      ??mGUI_onKey_6
    592              {
    593                switch(msg->gbsmsg->submess)
   \   00000068   082092E5           LDR      R2,[R2, #+8]
   \   0000006C   042042E2           SUB      R2,R2,#+4
   \   00000070   3A0052E3           CMP      R2,#+58
   \   00000074   EB00008A           BHI      ??mGUI_onKey_6
   \   00000078   023F8FE2           ADR      R3,??mGUI_onKey_0
   \   0000007C   8220A0E1           MOV      R2,R2, LSL #+1
   \   00000080   F23093E1           LDRSH    R3,[R3, R2]
   \   00000084   03F18FE0           ADD      PC,PC,R3, LSL #+2
   \                     ??mGUI_onKey_0:
   \   00000088   E2FFE700E700       DC16     +65506,+231,+231,+231
   \              E700        
   \   00000090   E700E700E700       DC16     +231,+231,+231,+139
   \              8B00        
   \   00000098   E700E700E700       DC16     +231,+231,+231,+231
   \              E700        
   \   000000A0   E700E700E700       DC16     +231,+231,+231,+231
   \              E700        
   \   000000A8   E700E700E700       DC16     +231,+231,+231,+231
   \              E700        
   \   000000B0   E700E7002500       DC16     +231,+231,+37,+231
   \              E700        
   \   000000B8   E700E700E700       DC16     +231,+231,+231,+231
   \              E700        
   \   000000C0   E700E700E700       DC16     +231,+231,+231,+203
   \              CB00        
   \   000000C8   E700E700E700       DC16     +231,+231,+231,+231
   \              E700        
   \   000000D0   E700E700E700       DC16     +231,+231,+231,+231
   \              E700        
   \   000000D8   E700E700E700       DC16     +231,+231,+231,+231
   \              E700        
   \   000000E0   1D007E003F00       DC16     +29,+126,+63,+231
   \              E700        
   \   000000E8   E7002500E700       DC16     +231,+37,+231,+231
   \              E700        
   \   000000F0   5F008400E700       DC16     +95,+132,+231,+63
   \              3F00        
   \   000000F8   5F004B006C00       DC16     +95,+75,+108,+0
   \              0000        
    594                {
    595                case '0':
    596                  // Убить список сообщений
    597                  KillMsgList(Resource_Ex->log);
   \                     ??mGUI_onKey_7:
   \   00000100   1C0090E5           LDR      R0,[R0, #+28]
   \   00000104   ........           _BLF     KillMsgList,??KillMsgList??rA
    598                  Resource_Ex->log = NULL;
   \   00000108   500094E5           LDR      R0,[R4, #+80]
   \   0000010C   1C5080E5           STR      R5,[R0, #+28]
    599                  Resource_Ex->has_unread_msg=0;
   \   00000110   145080E5           STR      R5,[R0, #+20]
    600                  Resource_Ex->total_msg_count=0;
   \   00000114   185080E5           STR      R5,[R0, #+24]
    601                  return 1;
   \   00000118   0100A0E3           MOV      R0,#+1
   \   0000011C   F28FBDE8           POP      {R1,R4-R11,PC}
    602                  
    603          #ifndef NEWSGOLD
    604                case RED_BUTTON:
    605          #endif
    606                case RIGHT_SOFT:
    607                  return 1;
    608          
    609                case LEFT_SOFT:
    610                    break;
    611          
    612                case '5':
    613                case ENTER_BUTTON:
    614                  {
    615                    LOG_MESSAGE* log =GetCurMessage();
   \                     ??mGUI_onKey_8:
   \   00000120   ........           BL       GetCurMessage
    616                    if(log)
   \   00000124   000050E3           CMP      R0,#+0
   \   00000128   BE00000A           BEQ      ??mGUI_onKey_6
    617                    {
    618                      char *s=log->mess;
   \   0000012C   089090E5           LDR      R9,[R0, #+8]
    619                      unsigned int l = strlen(s);
   \   00000130   0900A0E1           MOV      R0,R9
   \   00000134   1B0000EF           SWI      +27
   \   00000138   00A0A0E1           MOV      R10,R0
    620                      char *init_text = malloc(l+3+1);
   \   0000013C   04B08AE2           ADD      R11,R10,#+4
   \   00000140   0B00A0E1           MOV      R0,R11
   \   00000144   140000EF           SWI      +20
   \   00000148   0060A0E1           MOV      R6,R0
    621                      zeromem(init_text,l+3+1);
   \   0000014C   0B10A0E1           MOV      R1,R11
   \   00000150   1D0100EF           SWI      +285
    622                      init_text[0] = '>';
   \   00000154   0080C6E5           STRB     R8,[R6, #+0]
    623                      init_text[1] = '>';
   \   00000158   0180C6E5           STRB     R8,[R6, #+1]
    624                      strcat(init_text, s);
   \   0000015C   0910A0E1           MOV      R1,R9
   \   00000160   0600A0E1           MOV      R0,R6
   \   00000164   170000EF           SWI      +23
    625                      init_text[2+ l] = '\n';
   \   00000168   06008AE0           ADD      R0,R10,R6
   \   0000016C   0270C0E5           STRB     R7,[R0, #+2]
    626                      init_text[3+ l] = '\0';
   \   00000170   0350C0E5           STRB     R5,[R0, #+3]
    627                      Init_Message(Resource_Ex, init_text);
   \   00000174   500094E5           LDR      R0,[R4, #+80]
   \   00000178   0610A0E1           MOV      R1,R6
   \   0000017C   ........           BL       Init_Message
    628                      mfree(init_text);
   \   00000180   0600A0E1           MOV      R0,R6
   \   00000184   A60000EA           B        ??mGUI_onKey_9
    629                    }
    630                  }
    631                  break;
    632                  
    633                case '2':
    634                case UP_BUTTON:
    635                  Calc_Pages_Data_1();
   \                     ??mGUI_onKey_10:
   \   00000188   ........           BL       Calc_Pages_Data_1
    636                  CurrentMessage_Lines = 0;
    637                  if (Cursor_Pos > 1) Cursor_Pos --;
   \   0000018C   681094E5           LDR      R1,[R4, #+104]
   \   00000190   745084E5           STR      R5,[R4, #+116]
   \   00000194   020051E3           CMP      R1,#+2
   \   00000198   01004122           SUBCS    R0,R1,#+1
    638                  if (CurrentMessage > 1) CurrentMessage --;
   \   0000019C   701094E5           LDR      R1,[R4, #+112]
   \   000001A0   68008425           STRCS    R0,[R4, #+104]
   \   000001A4   020051E3           CMP      R1,#+2
   \   000001A8   010041A2           SUBGE    R0,R1,#+1
   \   000001AC   700084A5           STRGE    R0,[R4, #+112]
    639                  REDRAW();
   \                     ??mGUI_onKey_11:
   \   000001B0   720100EF           SWI      +370
   \   000001B4   9B0000EA           B        ??mGUI_onKey_6
    640                  break;
    641          
    642                case LEFT_BUTTON: //страница вверх
    643                  {
    644                    if (CurrentPage>1)
   \                     ??mGUI_onKey_12:
   \   000001B8   020051E3           CMP      R1,#+2
   \   000001BC   0E0000BA           BLT      ??mGUI_onKey_13
    645                    {
    646                      int cp=CurrentPage;
   \   000001C0   0160A0E1           MOV      R6,R1
    647                      for(;;)
    648                      {
    649                        CurrentMessage_Lines = 0;
    650                        Cursor_Pos--;
   \                     ??mGUI_onKey_14:
   \   000001C4   680094E5           LDR      R0,[R4, #+104]
   \   000001C8   745084E5           STR      R5,[R4, #+116]
   \   000001CC   010040E2           SUB      R0,R0,#+1
   \   000001D0   680084E5           STR      R0,[R4, #+104]
    651                        CurrentMessage--;
   \   000001D4   700094E5           LDR      R0,[R4, #+112]
   \   000001D8   010040E2           SUB      R0,R0,#+1
   \   000001DC   700084E5           STR      R0,[R4, #+112]
    652                        Calc_Pages_Data_1();
   \   000001E0   ........           BL       Calc_Pages_Data_1
    653                        if (CurrentPage+1==cp || CurrentPage<1)
   \   000001E4   6C0094E5           LDR      R0,[R4, #+108]
   \   000001E8   011080E2           ADD      R1,R0,#+1
   \   000001EC   060051E1           CMP      R1,R6
   \   000001F0   0100000A           BEQ      ??mGUI_onKey_13
   \   000001F4   010050E3           CMP      R0,#+1
   \   000001F8   F1FFFFAA           BGE      ??mGUI_onKey_14
    654                          break;
    655                      }
    656                    }
    657                    Cursor_Pos=DispMessList_Count;
   \                     ??mGUI_onKey_13:
   \   000001FC   600094E5           LDR      R0,[R4, #+96]
   \   00000200   680084E5           STR      R0,[R4, #+104]
    658                    REDRAW();
   \   00000204   E9FFFFEA           B        ??mGUI_onKey_11
    659                  }
    660                  break;
    661                  
    662                case '8':
    663                case DOWN_BUTTON:
    664                  CurrentMessage_Lines = 0;
    665                  if (Cursor_Pos < DispMessList_Count)
   \                     ??mGUI_onKey_15:
   \   00000208   681094E5           LDR      R1,[R4, #+104]
   \   0000020C   602094E5           LDR      R2,[R4, #+96]
   \   00000210   745084E5           STR      R5,[R4, #+116]
   \   00000214   020051E1           CMP      R1,R2
    666                    Cursor_Pos ++;
   \   00000218   01108132           ADDCC    R1,R1,#+1
   \   0000021C   68108435           STRCC    R1,[R4, #+104]
    667                  if (CurrentMessage < Resource_Ex->total_msg_count)
   \   00000220   701094E5           LDR      R1,[R4, #+112]
   \   00000224   180090E5           LDR      R0,[R0, #+24]
   \   00000228   000051E1           CMP      R1,R0
    668                    CurrentMessage ++;
   \   0000022C   01008132           ADDCC    R0,R1,#+1
   \   00000230   70008435           STRCC    R0,[R4, #+112]
    669                  Calc_Pages_Data_2();
   \   00000234   ........           BL       Calc_Pages_Data_2
    670                  REDRAW();
   \                     ??mGUI_onKey_16:
   \   00000238   DCFFFFEA           B        ??mGUI_onKey_11
    671                  break;
    672          
    673                case RIGHT_BUTTON:
    674                  {
    675                    if (CurrentPage<MaxPages)
   \                     ??mGUI_onKey_17:
   \   0000023C   060051E1           CMP      R1,R6
   \   00000240   DAFFFFAA           BGE      ??mGUI_onKey_11
    676                    {
    677                      int cp=CurrentPage;
   \   00000244   0170A0E1           MOV      R7,R1
    678                      for(;;)
    679                      {
    680                        CurrentMessage_Lines = 0;
    681                        Cursor_Pos++;
   \                     ??mGUI_onKey_18:
   \   00000248   680094E5           LDR      R0,[R4, #+104]
   \   0000024C   745084E5           STR      R5,[R4, #+116]
   \   00000250   010080E2           ADD      R0,R0,#+1
   \   00000254   680084E5           STR      R0,[R4, #+104]
    682                        CurrentMessage++;
   \   00000258   700094E5           LDR      R0,[R4, #+112]
   \   0000025C   010080E2           ADD      R0,R0,#+1
   \   00000260   700084E5           STR      R0,[R4, #+112]
    683                        Calc_Pages_Data_2();
   \   00000264   ........           BL       Calc_Pages_Data_2
    684                        if (CurrentPage-1==cp || CurrentPage>=MaxPages)
   \   00000268   6C0094E5           LDR      R0,[R4, #+108]
   \   0000026C   011040E2           SUB      R1,R0,#+1
   \   00000270   070051E1           CMP      R1,R7
   \   00000274   CDFFFF0A           BEQ      ??mGUI_onKey_11
   \   00000278   060050E1           CMP      R0,R6
   \   0000027C   F1FFFFBA           BLT      ??mGUI_onKey_18
   \   00000280   CAFFFFEA           B        ??mGUI_onKey_11
    685                          break;
    686                      }
    687                    }
    688                    REDRAW();
    689                  }
    690                  break;
    691                  
    692                case '1': // в начало списка сообщений
    693                  CurrentMessage_Lines = 0;
   \                     ??mGUI_onKey_19:
   \   00000284   745084E5           STR      R5,[R4, #+116]
    694                  Cursor_Pos=1;
   \   00000288   0100A0E3           MOV      R0,#+1
   \   0000028C   680084E5           STR      R0,[R4, #+104]
    695                  CurrentMessage=1;
   \   00000290   700084E5           STR      R0,[R4, #+112]
    696                  CurrentPage=1;
   \   00000294   6C0084E5           STR      R0,[R4, #+108]
    697                  REDRAW();
   \   00000298   C4FFFFEA           B        ??mGUI_onKey_11
    698                  break;
    699          
    700                case '9': // в конец списка сообщений
    701                  CurrentMessage_Lines = 0;
    702                  Cursor_Pos=DispMessList_Count;
   \                     ??mGUI_onKey_20:
   \   0000029C   601094E5           LDR      R1,[R4, #+96]
   \   000002A0   745084E5           STR      R5,[R4, #+116]
   \   000002A4   681084E5           STR      R1,[R4, #+104]
    703                  CurrentMessage=Resource_Ex->total_msg_count;
   \   000002A8   180090E5           LDR      R0,[R0, #+24]
    704                  CurrentPage=MaxPages;
   \   000002AC   6C6084E5           STR      R6,[R4, #+108]
   \   000002B0   700084E5           STR      R0,[R4, #+112]
    705                  REDRAW();
   \   000002B4   BDFFFFEA           B        ??mGUI_onKey_11
    706                  break;
    707          
    708                case '#':
    709                  {
    710                    LOG_MESSAGE *msg = GetCurMessage();
    711                    if(msg)
    712                    {
    713                      if((msg->mtype==MSG_GCHAT)||(msg->mtype==MSG_NICKGCHAT))
    714                      {
    715                        unsigned int au_nick_len = strlen(msg->muc_author);
    716                        char *init_text = malloc(au_nick_len+3);
    717                        zeromem(init_text, au_nick_len+3);
    718                        strcpy(init_text, msg->muc_author);
    719                        init_text[au_nick_len]=':';
    720                        init_text[au_nick_len+1]=' ';
    721                        init_text[au_nick_len+2]='\0';
    722                        Init_Message(Resource_Ex, init_text);
    723                        mfree(init_text);
    724                      }
    725                    }
    726                  }
    727                  break;
    728                  
    729                case GREEN_BUTTON:
    730                  Init_Message(Resource_Ex, NULL);
   \                     ??mGUI_onKey_21:
   \   000002B8   0010A0E3           MOV      R1,#+0
   \   000002BC   ........           BL       Init_Message
   \   000002C0   580000EA           B        ??mGUI_onKey_6
    731                  break;
    732                }
    733              }
    734            }
    735            else
    736            {
    737              if (msg->gbsmsg->msg==KEY_DOWN)
   \                     ??mGUI_onKey_5:
   \   000002C4   03005BE1           CMP      R11,R3
   \   000002C8   5600001A           BNE      ??mGUI_onKey_6
    738              {
    739                switch(msg->gbsmsg->submess)
   \   000002CC   082092E5           LDR      R2,[R2, #+8]
   \   000002D0   012042E2           SUB      R2,R2,#+1
   \   000002D4   3D0052E3           CMP      R2,#+61
   \   000002D8   5200008A           BHI      ??mGUI_onKey_6
   \   000002DC   023F8FE2           ADR      R3,??mGUI_onKey_1
   \   000002E0   8220A0E1           MOV      R2,R2, LSL #+1
   \   000002E4   F23093E1           LDRSH    R3,[R3, R2]
   \   000002E8   03F18FE0           ADD      PC,PC,R3, LSL #+2
   \                     ??mGUI_onKey_1:
   \   000002EC   1E004E004E00       DC16     +30,+78,+78,+65353
   \              49FF        
   \   000002F4   4E004E004E00       DC16     +78,+78,+78,+78
   \              4E00        
   \   000002FC   4E004E00F2FF       DC16     +78,+78,+65522,+78
   \              4E00        
   \   00000304   4E004E004E00       DC16     +78,+78,+78,+78
   \              4E00        
   \   0000030C   4E004E004E00       DC16     +78,+78,+78,+78
   \              4E00        
   \   00000314   4E004E004E00       DC16     +78,+78,+78,+78
   \              4E00        
   \   0000031C   4E008CFF4E00       DC16     +78,+65420,+78,+78
   \              4E00        
   \   00000324   4E004E004E00       DC16     +78,+78,+78,+78
   \              4E00        
   \   0000032C   4E004E004E00       DC16     +78,+78,+78,+78
   \              4E00        
   \   00000334   4E004E004E00       DC16     +78,+78,+78,+78
   \              4E00        
   \   0000033C   4E004E004E00       DC16     +78,+78,+78,+78
   \              4E00        
   \   00000344   4E004E004E00       DC16     +78,+78,+78,+65412
   \              84FF        
   \   0000034C   E5FFA6FF4E00       DC16     +65509,+65446,+78,+32
   \              2000        
   \   00000354   8CFFD3FF4E00       DC16     +65420,+65491,+78,+65478
   \              C6FF        
   \   0000035C   EBFF4E00A6FF       DC16     +65515,+78,+65446,+65478
   \              C6FF        
   \   00000364   4E003200           DC16     +78,+50
    740                {
    741                case '0':
    742                  KillMsgList(Resource_Ex->log);
    743                  Resource_Ex->log = NULL;
    744                  Resource_Ex->has_unread_msg=0;
    745                  Resource_Ex->total_msg_count=0;
    746                  return 1;
    747          
    748          #ifndef NEWSGOLD
    749                case RED_BUTTON:
    750          #endif
    751                case RIGHT_SOFT:
    752                  return 1;
    753          
    754                case LEFT_SOFT:
    755                 Disp_Contact_Menu();
   \                     ??mGUI_onKey_22:
   \   00000368   ........           _BLF     Disp_Contact_Menu,??Disp_Contact_Menu??rA
   \   0000036C   2D0000EA           B        ??mGUI_onKey_6
    756                  break;
    757                  
    758                case '5':
    759                case ENTER_BUTTON:
    760                  {
    761                    LOG_MESSAGE* log =GetCurMessage();
    762                    if(log)
    763                    {
    764                      char *s=log->mess;
    765                      unsigned int l = strlen(s);
    766                      char *init_text = malloc(l+3+1);
    767                      zeromem(init_text,l+3+1);
    768                      init_text[0] = '>';
    769                      init_text[1] = '>';
    770                      strcat(init_text, s);
    771                      init_text[2+ l] = '\n';
    772                      init_text[3+ l] = '\0';
    773                      Init_Message(Resource_Ex, init_text);
    774                      mfree(init_text);
    775                    }
    776                  }
    777                  break;
    778                  
    779                case '2':
    780                case UP_BUTTON:
    781                  Calc_Pages_Data_1();
    782                  CurrentMessage_Lines = 0;
    783                  if (Cursor_Pos > 1) Cursor_Pos --;
    784                  if (CurrentMessage > 1) CurrentMessage --;
    785                  REDRAW();
    786                  break;
    787                  
    788                case '4': //страница вверх
    789                  {
    790                    if (CurrentPage>1)
   \                     ??mGUI_onKey_23:
   \   00000370   020051E3           CMP      R1,#+2
   \   00000374   A0FFFFBA           BLT      ??mGUI_onKey_13
    791                    {
    792                      int cp=CurrentPage;
   \   00000378   0160A0E1           MOV      R6,R1
    793                      for(;;)
    794                      {
    795                        CurrentMessage_Lines = 0;
    796                        Cursor_Pos--;
   \                     ??mGUI_onKey_24:
   \   0000037C   680094E5           LDR      R0,[R4, #+104]
   \   00000380   745084E5           STR      R5,[R4, #+116]
   \   00000384   010040E2           SUB      R0,R0,#+1
   \   00000388   680084E5           STR      R0,[R4, #+104]
    797                        CurrentMessage--;
   \   0000038C   700094E5           LDR      R0,[R4, #+112]
   \   00000390   010040E2           SUB      R0,R0,#+1
   \   00000394   700084E5           STR      R0,[R4, #+112]
    798                        Calc_Pages_Data_1();
   \   00000398   ........           BL       Calc_Pages_Data_1
    799                        if (CurrentPage+1==cp || CurrentPage<1)
   \   0000039C   6C0094E5           LDR      R0,[R4, #+108]
   \   000003A0   011080E2           ADD      R1,R0,#+1
   \   000003A4   060051E1           CMP      R1,R6
   \   000003A8   93FFFF0A           BEQ      ??mGUI_onKey_13
   \   000003AC   010050E3           CMP      R0,#+1
   \   000003B0   F1FFFFAA           BGE      ??mGUI_onKey_24
   \   000003B4   90FFFFEA           B        ??mGUI_onKey_13
    800                          break;
    801                      }
    802                    }
    803                    Cursor_Pos=DispMessList_Count;
    804                    REDRAW();
    805                  }
    806                  break;
    807                  
    808                case '8':
    809                case DOWN_BUTTON:
    810                  CurrentMessage_Lines = 0;
    811                  if (Cursor_Pos < DispMessList_Count) Cursor_Pos ++;
    812                  if (CurrentMessage < Resource_Ex->total_msg_count) CurrentMessage ++;
    813                  Calc_Pages_Data_2();
    814                  REDRAW();
    815                  break;
    816          
    817                case '6':
    818                  {
    819                    if (CurrentPage<MaxPages)
    820                    {
    821                      int cp=CurrentPage;
    822                      for(;;)
    823                      {
    824                        CurrentMessage_Lines = 0;
    825                        Cursor_Pos++;
    826                        CurrentMessage++;
    827                        Calc_Pages_Data_2();
    828                        if (CurrentPage-1==cp || CurrentPage>=MaxPages)
    829                          break;
    830                      }
    831                    }
    832                    REDRAW();
    833                  }
    834                  break;
    835                  
    836                case '1'://в начало списка сообщений
    837                  CurrentMessage_Lines = 0;
    838                  Cursor_Pos=1;
    839                  CurrentMessage=1;
    840                  CurrentPage=1;
    841                  REDRAW();
    842                  break;
    843          
    844                case '9'://в конец списка сообщений
    845                  CurrentMessage_Lines = 0;
    846                  Cursor_Pos=DispMessList_Count;
    847                  CurrentMessage=Resource_Ex->total_msg_count;
    848                  CurrentPage=MaxPages;
    849                  REDRAW();
    850                  break;
    851          
    852                case RIGHT_BUTTON:
    853                  {
    854                    LOG_MESSAGE *msg = GetCurMessage();
   \                     ??mGUI_onKey_25:
   \   000003B8   ........           BL       GetCurMessage
   \   000003BC   0060B0E1           MOVS     R6,R0
    855                    if(msg)
   \   000003C0   1800000A           BEQ      ??mGUI_onKey_6
    856                      if((msg->mtype==MSG_GCHAT)||(msg->mtype==MSG_NICKGCHAT))
   \   000003C4   0000D6E5           LDRB     R0,[R6, #+0]
   \   000003C8   030050E3           CMP      R0,#+3
   \   000003CC   04005013           CMPNE    R0,#+4
   \   000003D0   1400001A           BNE      ??mGUI_onKey_6
    857                      {
    858                        unsigned int au_nick_len = strlen(msg->muc_author);
   \   000003D4   040096E5           LDR      R0,[R6, #+4]
   \   000003D8   1B0000EF           SWI      +27
   \   000003DC   0080A0E1           MOV      R8,R0
    859                        char *init_text = malloc(au_nick_len+3);
   \   000003E0   03B088E2           ADD      R11,R8,#+3
   \   000003E4   0B00A0E1           MOV      R0,R11
   \   000003E8   140000EF           SWI      +20
   \   000003EC   0070A0E1           MOV      R7,R0
    860                        zeromem(init_text, au_nick_len+3);
   \   000003F0   0B10A0E1           MOV      R1,R11
   \   000003F4   1D0100EF           SWI      +285
    861                        strcpy(init_text, msg->muc_author);
   \   000003F8   041096E5           LDR      R1,[R6, #+4]
   \   000003FC   0700A0E1           MOV      R0,R7
   \   00000400   1A0000EF           SWI      +26
    862                        init_text[au_nick_len]=':';
   \   00000404   070088E0           ADD      R0,R8,R7
   \   00000408   00A0C0E5           STRB     R10,[R0, #+0]
    863                        init_text[au_nick_len+1]=' ';
   \   0000040C   0190C0E5           STRB     R9,[R0, #+1]
    864                        init_text[au_nick_len+2]='\0';
   \   00000410   0250C0E5           STRB     R5,[R0, #+2]
    865                        Init_Message(Resource_Ex, init_text);
   \   00000414   500094E5           LDR      R0,[R4, #+80]
   \   00000418   0710A0E1           MOV      R1,R7
   \   0000041C   ........           BL       Init_Message
    866                        mfree(init_text);
   \   00000420   0700A0E1           MOV      R0,R7
   \                     ??mGUI_onKey_9:
   \   00000424   150000EF           SWI      +21
    867                      }
    868                  }
    869                  break;
    870                  
    871                case GREEN_BUTTON:
    872                  Init_Message(Resource_Ex, NULL);
    873                  break;
    874                }
    875              }
    876            }
    877            if (msg->gbsmsg->msg==LONG_PRESS)
   \                     ??mGUI_onKey_6:
   \   00000428   00009DE5           LDR      R0,[SP, #+0]
   \   0000042C   9520A0E3           MOV      R2,#+149
   \   00000430   040090E5           LDR      R0,[R0, #+4]
   \   00000434   402F82E3           ORR      R2,R2,#0x100
   \   00000438   041090E5           LDR      R1,[R0, #+4]
   \   0000043C   020051E1           CMP      R1,R2
   \   00000440   2400001A           BNE      ??mGUI_onKey_26
    878            {
    879              switch (msg->gbsmsg->submess)
   \   00000444   080090E5           LDR      R0,[R0, #+8]
   \   00000448   320050E2           SUBS     R0,R0,#+50
   \   0000044C   0700000A           BEQ      ??mGUI_onKey_27
   \   00000450   060050E2           SUBS     R0,R0,#+6
   \   00000454   1100000A           BEQ      ??mGUI_onKey_28
   \   00000458   030050E2           SUBS     R0,R0,#+3
   \   0000045C   0300000A           BEQ      ??mGUI_onKey_27
   \   00000460   010050E2           SUBS     R0,R0,#+1
   \   00000464   0D00000A           BEQ      ??mGUI_onKey_28
   \   00000468   0000A0E3           MOV      R0,#+0
   \   0000046C   F28FBDE8           POP      {R1,R4-R11,PC}
    880              {
    881              case '2':
    882              case UP_BUTTON:
    883                Calc_Pages_Data_1();
   \                     ??mGUI_onKey_27:
   \   00000470   ........           BL       Calc_Pages_Data_1
    884                CurrentMessage_Lines = 0;
    885                if (Cursor_Pos > 1) Cursor_Pos --;
   \   00000474   680094E5           LDR      R0,[R4, #+104]
   \   00000478   745084E5           STR      R5,[R4, #+116]
   \   0000047C   020050E3           CMP      R0,#+2
   \   00000480   01004022           SUBCS    R0,R0,#+1
   \   00000484   68008425           STRCS    R0,[R4, #+104]
    886                if (CurrentMessage > 1) CurrentMessage --;
   \   00000488   700094E5           LDR      R0,[R4, #+112]
   \   0000048C   020050E3           CMP      R0,#+2
   \   00000490   0F0000BA           BLT      ??mGUI_onKey_29
   \   00000494   010040E2           SUB      R0,R0,#+1
   \   00000498   700084E5           STR      R0,[R4, #+112]
    887                REDRAW();
   \   0000049C   0C0000EA           B        ??mGUI_onKey_29
    888                break;
    889                
    890              case '8':
    891              case DOWN_BUTTON:
    892                CurrentMessage_Lines = 0;
    893                if (Cursor_Pos < DispMessList_Count) Cursor_Pos++;
   \                     ??mGUI_onKey_28:
   \   000004A0   680094E5           LDR      R0,[R4, #+104]
   \   000004A4   601094E5           LDR      R1,[R4, #+96]
   \   000004A8   745084E5           STR      R5,[R4, #+116]
   \   000004AC   010050E1           CMP      R0,R1
    894                if (CurrentMessage < Resource_Ex->total_msg_count) CurrentMessage++;
   \   000004B0   501094E5           LDR      R1,[R4, #+80]
   \   000004B4   01008032           ADDCC    R0,R0,#+1
   \   000004B8   68008435           STRCC    R0,[R4, #+104]
   \   000004BC   700094E5           LDR      R0,[R4, #+112]
   \   000004C0   181091E5           LDR      R1,[R1, #+24]
   \   000004C4   010050E1           CMP      R0,R1
   \   000004C8   01008032           ADDCC    R0,R0,#+1
   \   000004CC   70008435           STRCC    R0,[R4, #+112]
    895                Calc_Pages_Data_2();
   \   000004D0   ........           BL       Calc_Pages_Data_2
    896                REDRAW();
   \                     ??mGUI_onKey_29:
   \   000004D4   720100EF           SWI      +370
    897                break;
    898              }
    899            }
    900            return(0);
   \                     ??mGUI_onKey_26:
   \   000004D8   0000A0E3           MOV      R0,#+0
   \   000004DC   F28FBDE8           POP      {R1,R4-R11,PC}   ;; return
   \                     ??mGUI_onKey_4:
   \   000004E0   ........           DC32     KBD_LAYOUT
    901          }
    902          
    903          
    904          extern void kill_data(void *p, void (*func_p)(void *));
    905          
    906          // ГУЙ

   \                                 In segment CODE, align 4, keep-with-next
    907          int mGUI_method8(void){return(0);}
   \                     mGUI_method8:
   \   00000000   0000A0E3           MOV      R0,#+0
   \   00000004   1EFF2FE1           BX       LR               ;; return
    908          

   \                                 In segment CODE, align 4, keep-with-next
    909          int mGUI_method9(void){return(0);}
   \                     mGUI_method9:
   \   00000000   0000A0E3           MOV      R0,#+0
   \   00000004   1EFF2FE1           BX       LR               ;; return
    910          

   \                                 In segment DATA_C, align 4, align-sorted
    911          const void * const mgui_methods[11]={
    912            (void *)mGUI_onRedraw,  //Redraw
    913            (void *)mGUI_onCreate,  //Create
    914            (void *)mGUI_onClose,   //Close
    915            (void *)mGUI_onFocus,   //Focus
    916            (void *)mGUI_onUnfocus, //Unfocus
    917            (void *)mGUI_onKey,     //OnKey
    918            0,
    919            (void *)kill_data,      //onDestroy
    920            (void *)mGUI_method8,
    921            (void *)mGUI_method9,
    922            0
    923          };
    924          
    925          const RECT mCanvas={0,0,0,0};
   \                     mCanvas:
   \   00000000   000000000000       DC16 0, 0, 0, 0
   \              0000        
   \                     mgui_methods:
   \   00000008   ............       DC32 mGUI_onRedraw, mGUI_onCreate, mGUI_onClose, mGUI_onFocus
   \              ............
   \              ........    
   \   00000018   ............       DC32 mGUI_onUnfocus, mGUI_onKey, 0H, kill_data, mGUI_method8
   \              ....00000000
   \              ............
   \              ....        
   \   0000002C   ........0000       DC32 mGUI_method9, 0H
   \              0000        
    926          
    927          // Получить связанную структуру DISP_MESSAGE для отображения на экране

   \                                 In segment CODE, align 4, keep-with-next
    928          void ParseMessagesIntoList(TRESOURCE* ContEx)
    929          {
   \                     ParseMessagesIntoList:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000004   08D04DE2           SUB      SP,SP,#+8
    930            if(!ContEx)return;
   \   00000008   000050E3           CMP      R0,#+0
   \   0000000C   F38FBD08           POPEQ    {R0,R1,R4-R11,PC}
    931            int parsed_counter = 0; // Сколько уже было обработано (=OLD_MessList_Count)
   \   00000010   0020A0E3           MOV      R2,#+0
   \   00000014   00208DE5           STR      R2,[SP, #+0]
    932            LOG_MESSAGE* MessEx= ContEx->log;
   \   00000018   1C4090E5           LDR      R4,[R0, #+28]
    933            int cnt=0;
    934          
    935            // В какую область уложить строку (слева без MSG_START_X, справа без одного пикселя)
    936            int screen_width = ScreenW() - MSG_START_X - 1 ;
   \   0000001C   888100EF           SWI      +33160
   \   00000020   020040E2           SUB      R0,R0,#+2
   \   00000024   04008DE5           STR      R0,[SP, #+4]
    937          
    938            int line_width = 0; // Ширина текущей строки в пикселях
   \   00000028   ........           LDR      R0,??DataTable31  ;; MESSAGEWIN_FONT
   \   0000002C   0050A0E3           MOV      R5,#+0
   \   00000030   000090E5           LDR      R0,[R0, #+0]
    939            int line_height = GetFontYSIZE(MESSAGEWIN_FONT); // Высота текущей строки. Подгоняется под размер смайлов
   \   00000034   C50100EF           SWI      +453
   \   00000038   0060A0E1           MOV      R6,R0
    940            int symbol_width = 0;  // Ширина текущего символа в пикселях
    941            //  int chars;
    942            DISP_MESSAGE* Disp_Mess_Ex, *tmp;
    943            if(!MessEx)return;
   \   0000003C   000054E3           CMP      R4,#+0
   \   00000040   F38FBD08           POPEQ    {R0,R1,R4-R11,PC}
    944            LockSched();
   \   00000044   460100EF           SWI      +326
    945          
    946            WSHDR *temp_ws_1=NULL;
    947            WSHDR *temp_ws_2=NULL;
   \                     ??ParseMessagesIntoList_0:
   \   00000048   44129FE5           LDR      R1,??ParseMessagesIntoList_1  ;; inp_desc + 100
   \   0000004C   00009DE5           LDR      R0,[SP, #+0]
   \   00000050   001091E5           LDR      R1,[R1, #+0]
   \   00000054   010050E1           CMP      R0,R1
   \   00000058   2300003A           BCC      ??ParseMessagesIntoList_2
    948          
    949            // Цикл по всем сообщениям
    950            while(MessEx)
    951            {
    952              if(parsed_counter>=OLD_MessList_Count)
    953              {
    954                temp_ws_1 = AllocWS(strlen(MessEx->mess)*2);
   \   0000005C   080094E5           LDR      R0,[R4, #+8]
   \   00000060   1B0000EF           SWI      +27
   \   00000064   8000A0E1           LSL      R0,R0,#+1
   \   00000068   250100EF           SWI      +293
   \   0000006C   0070A0E1           MOV      R7,R0
   \   00000070   ........           LDR      R0,??DataTable29  ;; Is_Smiles_Enabled
   \   00000074   000090E5           LDR      R0,[R0, #+0]
   \   00000078   000050E3           CMP      R0,#+0
   \   0000007C   0700000A           BEQ      ??ParseMessagesIntoList_3
   \   00000080   ........           LDR      R0,??DataTable30  ;; SmilesImgList
   \   00000084   000090E5           LDR      R0,[R0, #+0]
   \   00000088   000050E3           CMP      R0,#+0
   \   0000008C   0300000A           BEQ      ??ParseMessagesIntoList_3
    955                if (Is_Smiles_Enabled && SmilesImgList)
    956                {
    957          	CharsToSmilesUNI(temp_ws_1, MessEx->mess); // Добавляем иконки смайлов в сообщение
   \   00000090   081094E5           LDR      R1,[R4, #+8]
   \   00000094   0700A0E1           MOV      R0,R7
   \   00000098   ........           BL       CharsToSmilesUNI
   \   0000009C   050000EA           B        ??ParseMessagesIntoList_4
    958                }
    959                else
    960                  utf8_2ws(temp_ws_1, MessEx->mess, strlen(MessEx->mess)*2);
   \                     ??ParseMessagesIntoList_3:
   \   000000A0   080094E5           LDR      R0,[R4, #+8]
   \   000000A4   1B0000EF           SWI      +27
   \   000000A8   081094E5           LDR      R1,[R4, #+8]
   \   000000AC   8020A0E1           LSL      R2,R0,#+1
   \   000000B0   0700A0E1           MOV      R0,R7
   \   000000B4   E30100EF           SWI      +483
    961          
    962                //temp_ws_2 = AllocWS(CHAR_ON_LINE*2); WTF?
    963                temp_ws_2 = AllocWS(200); //ИМХО, так лучше
   \                     ??ParseMessagesIntoList_4:
   \   000000B8   C800A0E3           MOV      R0,#+200
   \   000000BC   250100EF           SWI      +293
   \   000000C0   0080A0E1           MOV      R8,R0
    964          
    965                //char q[40];
    966                //sprintf(q,"UTF_len=%d, WSTR_len=%d", strlen(MessEx->mess),l);
    967                //ShowMSG(2,(int)q);
    968          
    969                cnt=0;
    970                for(int i = 1; i <= temp_ws_1->wsbody[0]; i++)
   \   000000C4   000097E5           LDR      R0,[R7, #+0]
   \   000000C8   0090A0E3           MOV      R9,#+0
   \   000000CC   B000D0E1           LDRH     R0,[R0, #+0]
   \   000000D0   01A0A0E3           MOV      R10,#+1
   \   000000D4   000050E3           CMP      R0,#+0
   \   000000D8   2900001A           BNE      ??ParseMessagesIntoList_5
    971                {
    972                  unsigned int symb = temp_ws_1->wsbody[i];
    973                  if ((symb==0x000A) || (symb==0x000D) || (symb==0x00A0)) //Перевод строки
    974          	{
    975          	L_ADD:
    976                    Disp_Mess_Ex = malloc(sizeof(DISP_MESSAGE));
    977                    Disp_Mess_Ex->mess = AllocWS(cnt);
    978                    wstrcpy(Disp_Mess_Ex->mess, temp_ws_2);
    979                    CutWSTR(temp_ws_2, 0);
    980                    Disp_Mess_Ex->mtype = MessEx->mtype;
    981                    Disp_Mess_Ex->log_mess_number = parsed_counter+1;
    982                    Disp_Mess_Ex->line_height = line_height;
    983                    if(!MessagesList)
    984                    {
    985                      MessagesList = Disp_Mess_Ex;
    986                      Disp_Mess_Ex->next=NULL;
    987                    }
    988                    else
    989                    {
    990                      tmp= MessagesList;
    991                      while(tmp->next)
    992                      {
    993                        tmp = tmp->next;
    994                      }
    995                      tmp->next = Disp_Mess_Ex;
    996                      Disp_Mess_Ex->next=NULL;
    997                    }
    998                    cnt=0;
    999                    DispMessList_Count++;
   1000                    line_width = 0;
   1001                    line_height = GetFontYSIZE(MESSAGEWIN_FONT);
   1002          	}
   1003          	else
   1004          	{
   1005                    if(MessEx->mtype==MSG_NICKGCHAT)symbol_width = GetSymbolWidth(symb,FONT_SMALL_BOLD);
   1006                      else symbol_width = GetSymbolWidth(symb,MESSAGEWIN_FONT);
   1007          	  line_width += symbol_width;
   1008          	  if (line_width > screen_width)
   1009          	  {
   1010          	    i--; //Повторить с текущим символом, сейчас не лезет
   1011          	    goto L_ADD; //Добавить строку
   1012          	  }
   1013          
   1014                    if (Is_Smiles_Enabled && SmilesImgList)
   1015                    {
   1016                      if (symb >= FIRST_UCS2_BITMAP && symb <= FIRST_UCS2_BITMAP + smiles_loaded) // Если код смайла
   1017                        if (line_height < symbol_width) // Будем надеяться, что смайлы квадратные ;)
   1018                          line_height = symbol_width; // Подгоняем высоту строки под размер смайла
   1019                    }
   1020          	  wsAppendChar(temp_ws_2, symb);
   1021          	  cnt ++;
   1022          	  if (i == temp_ws_1->wsbody[0]) goto L_ADD; //Последний символ, добавить и слинять ;)
   1023          	  if (line_width == screen_width) goto L_ADD; //Ровненько легли в строку, тоже добавить
   1024          	}
   1025                }
   1026                FreeWS(temp_ws_1);
   \                     ??ParseMessagesIntoList_6:
   \   000000DC   0700A0E1           MOV      R0,R7
   \   000000E0   290100EF           SWI      +297
   1027                FreeWS(temp_ws_2);
   \   000000E4   0800A0E1           MOV      R0,R8
   \   000000E8   290100EF           SWI      +297
   1028              }
   1029              MessEx = MessEx->next;
   \                     ??ParseMessagesIntoList_2:
   \   000000EC   0C4094E5           LDR      R4,[R4, #+12]
   1030              parsed_counter++;
   \   000000F0   00109DE5           LDR      R1,[SP, #+0]
   \   000000F4   000054E3           CMP      R4,#+0
   \   000000F8   011081E2           ADD      R1,R1,#+1
   \   000000FC   00108DE5           STR      R1,[SP, #+0]
   \   00000100   D0FFFF1A           BNE      ??ParseMessagesIntoList_0
   1031            }
   1032            UnlockSched();
   \   00000104   470100EF           SWI      +327
   1033          }
   \   00000108   F38FBDE8           POP      {R0,R1,R4-R11,PC}  ;; return
   \                     ??ParseMessagesIntoList_7:
   \   0000010C   ........           LDR      R1,??DataTable29  ;; Is_Smiles_Enabled
   \   00000110   001091E5           LDR      R1,[R1, #+0]
   \   00000114   000051E3           CMP      R1,#+0
   \   00000118   0E00000A           BEQ      ??ParseMessagesIntoList_8
   \   0000011C   ........           LDR      R1,??DataTable30  ;; SmilesImgList
   \   00000120   001091E5           LDR      R1,[R1, #+0]
   \   00000124   000051E3           CMP      R1,#+0
   \   00000128   0A00000A           BEQ      ??ParseMessagesIntoList_8
   \   0000012C   2A10A0E3           MOV      R1,#+42
   \   00000130   E11C81E3           ORR      R1,R1,#0xE100
   \   00000134   01005BE1           CMP      R11,R1
   \   00000138   0600003A           BCC      ??ParseMessagesIntoList_8
   \   0000013C   54219FE5           LDR      R2,??ParseMessagesIntoList_1+0x4  ;; smiles_loaded
   \   00000140   002092E5           LDR      R2,[R2, #+0]
   \   00000144   021081E0           ADD      R1,R1,R2
   \   00000148   0B0051E1           CMP      R1,R11
   \   0000014C   0100003A           BCC      ??ParseMessagesIntoList_8
   \   00000150   000056E1           CMP      R6,R0
   \   00000154   0060A0B1           MOVLT    R6,R0
   \                     ??ParseMessagesIntoList_8:
   \   00000158   0B10A0E1           MOV      R1,R11
   \   0000015C   0800A0E1           MOV      R0,R8
   \   00000160   1C0000EF           SWI      +28
   \   00000164   000097E5           LDR      R0,[R7, #+0]
   \   00000168   019089E2           ADD      R9,R9,#+1
   \   0000016C   B000D0E1           LDRH     R0,[R0, #+0]
   \   00000170   00005AE1           CMP      R10,R0
   \   00000174   04009D15           LDRNE    R0,[SP, #+4]
   \   00000178   00005511           CMPNE    R5,R0
   \   0000017C   0A00000A           BEQ      ??ParseMessagesIntoList_9
   \                     ??ParseMessagesIntoList_10:
   \   00000180   01A08AE2           ADD      R10,R10,#+1
   \                     ??ParseMessagesIntoList_5:
   \   00000184   000097E5           LDR      R0,[R7, #+0]
   \   00000188   B010D0E1           LDRH     R1,[R0, #+0]
   \   0000018C   0A0051E1           CMP      R1,R10
   \   00000190   D1FFFFBA           BLT      ??ParseMessagesIntoList_6
   \   00000194   8A0080E0           ADD      R0,R0,R10, LSL #+1
   \   00000198   B0B0D0E1           LDRH     R11,[R0, #+0]
   \   0000019C   0A005BE3           CMP      R11,#+10
   \   000001A0   0D005B13           CMPNE    R11,#+13
   \   000001A4   A0005B13           CMPNE    R11,#+160
   \   000001A8   2C00001A           BNE      ??ParseMessagesIntoList_11
   \                     ??ParseMessagesIntoList_9:
   \   000001AC   1000A0E3           MOV      R0,#+16
   \   000001B0   140000EF           SWI      +20
   \   000001B4   0050A0E1           MOV      R5,R0
   \   000001B8   0900A0E1           MOV      R0,R9
   \   000001BC   250100EF           SWI      +293
   \   000001C0   040085E5           STR      R0,[R5, #+4]
   \   000001C4   0810A0E1           MOV      R1,R8
   \   000001C8   1F0100EF           SWI      +287
   \   000001CC   0010A0E3           MOV      R1,#+0
   \   000001D0   0800A0E1           MOV      R0,R8
   \   000001D4   260100EF           SWI      +294
   \   000001D8   0000D4E5           LDRB     R0,[R4, #+0]
   \   000001DC   0000C5E5           STRB     R0,[R5, #+0]
   \   000001E0   00009DE5           LDR      R0,[SP, #+0]
   \   000001E4   010080E2           ADD      R0,R0,#+1
   \   000001E8   B200C5E1           STRH     R0,[R5, #+2]
   \   000001EC   ........           LDR      R0,??DataTable26  ;; inp_desc + 92
   \   000001F0   086085E5           STR      R6,[R5, #+8]
   \   000001F4   000090E5           LDR      R0,[R0, #+0]
   \   000001F8   000050E3           CMP      R0,#+0
   \   000001FC   ........           LDREQ    R0,??DataTable26  ;; inp_desc + 92
   \   00000200   00508005           STREQ    R5,[R0, #+0]
   \   00000204   0700000A           BEQ      ??ParseMessagesIntoList_12
   \   00000208   0C1090E5           LDR      R1,[R0, #+12]
   \   0000020C   000051E3           CMP      R1,#+0
   \   00000210   0300000A           BEQ      ??ParseMessagesIntoList_13
   \                     ??ParseMessagesIntoList_14:
   \   00000214   0C0090E5           LDR      R0,[R0, #+12]
   \   00000218   0C1090E5           LDR      R1,[R0, #+12]
   \   0000021C   000051E3           CMP      R1,#+0
   \   00000220   FBFFFF1A           BNE      ??ParseMessagesIntoList_14
   \                     ??ParseMessagesIntoList_13:
   \   00000224   0C5080E5           STR      R5,[R0, #+12]
   \                     ??ParseMessagesIntoList_12:
   \   00000228   6C109FE5           LDR      R1,??ParseMessagesIntoList_1+0x8  ;; inp_desc + 96
   \   0000022C   0000A0E3           MOV      R0,#+0
   \   00000230   0C0085E5           STR      R0,[R5, #+12]
   \   00000234   60009FE5           LDR      R0,??ParseMessagesIntoList_1+0x8  ;; inp_desc + 96
   \   00000238   001091E5           LDR      R1,[R1, #+0]
   \   0000023C   0090A0E3           MOV      R9,#+0
   \   00000240   011081E2           ADD      R1,R1,#+1
   \   00000244   001080E5           STR      R1,[R0, #+0]
   \   00000248   ........           LDR      R0,??DataTable31  ;; MESSAGEWIN_FONT
   \   0000024C   0950A0E1           MOV      R5,R9
   \   00000250   000090E5           LDR      R0,[R0, #+0]
   \   00000254   C50100EF           SWI      +453
   \   00000258   0060A0E1           MOV      R6,R0
   \   0000025C   C7FFFFEA           B        ??ParseMessagesIntoList_10
   \                     ??ParseMessagesIntoList_11:
   \   00000260   0000D4E5           LDRB     R0,[R4, #+0]
   \   00000264   040050E3           CMP      R0,#+4
   \   00000268   ........           LDRNE    R0,??DataTable31  ;; MESSAGEWIN_FONT
   \   0000026C   0910A003           MOVEQ    R1,#+9
   \   00000270   00109015           LDRNE    R1,[R0, #+0]
   \   00000274   0B00A0E1           MOV      R0,R11
   \   00000278   E10100EF           SWI      +481
   \   0000027C   04109DE5           LDR      R1,[SP, #+4]
   \   00000280   055080E0           ADD      R5,R0,R5
   \   00000284   050051E1           CMP      R1,R5
   \   00000288   9FFFFFAA           BGE      ??ParseMessagesIntoList_7
   \   0000028C   01A04AE2           SUB      R10,R10,#+1
   \   00000290   C5FFFFEA           B        ??ParseMessagesIntoList_9
   \                     ??ParseMessagesIntoList_1:
   \   00000294   ........           DC32     inp_desc + 100
   \   00000298   ........           DC32     smiles_loaded
   \   0000029C   ........           DC32     inp_desc + 96
   1034          
   1035          
   1036          // Отобразить список сообщений

   \                                 In segment CODE, align 4, keep-with-next
   1037          void Display_Message_List(TRESOURCE* ContEx)
   1038          {
   \                     Display_Message_List:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0060B0E1           MOVS     R6,R0
   1039            if(!ContEx)return;
   \   00000008   F080BD08           POPEQ    {R4-R7,PC}
   1040            // Инициализация
   1041            if (Is_Smiles_Enabled && SmilesImgList)
   \   0000000C   ........           LDR      R0,??DataTable29  ;; Is_Smiles_Enabled
   \   00000010   000090E5           LDR      R0,[R0, #+0]
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   0600000A           BEQ      ??Display_Message_List_0
   \   0000001C   ........           LDR      R4,??DataTable30  ;; SmilesImgList
   \   00000020   000094E5           LDR      R0,[R4, #+0]
   \   00000024   000050E3           CMP      R0,#+0
   \   00000028   0200000A           BEQ      ??Display_Message_List_0
   1042            {
   1043              /* The_ZeN: Это надо сделать обязательно до вызова парсера мессаг!
   1044                 Иначе будет брать размер смайлов из фула */
   1045              PNGTOP_DESC * pltop = PNG_TOP();
   \   0000002C   B98100EF           SWI      +33209
   1046              pltop->dyn_pltop = SmilesImgList; 
   \   00000030   001094E5           LDR      R1,[R4, #+0]
   \   00000034   081080E5           STR      R1,[R0, #+8]
   1047            }
   1048            OLD_MessList_Count = 0;
   1049            MessagesList = NULL;
   1050            DispMessList_Count = 0;
   1051            Resource_Ex = ContEx;
   1052            FontSize = GetFontYSIZE(MESSAGEWIN_FONT);
   \                     ??Display_Message_List_0:
   \   00000038   ........           LDR      R0,??DataTable31  ;; MESSAGEWIN_FONT
   \   0000003C   ........           LDR      R4,??DataTable32  ;; inp_desc
   \   00000040   000090E5           LDR      R0,[R0, #+0]
   \   00000044   0050A0E3           MOV      R5,#+0
   \   00000048   645084E5           STR      R5,[R4, #+100]
   \   0000004C   5C5084E5           STR      R5,[R4, #+92]
   \   00000050   605084E5           STR      R5,[R4, #+96]
   \   00000054   506084E5           STR      R6,[R4, #+80]
   \   00000058   C50100EF           SWI      +453
   \   0000005C   BC04C4E1           STRH     R0,[R4, #+76]
   1053            lines_on_page = sdiv(FontSize, ScreenH() - HIST_DISP_OFS - YDISP);
   \   00000060   898100EF           SWI      +33161
   \   00000064   261040E2           SUB      R1,R0,#+38
   \   00000068   BC04D4E1           LDRH     R0,[R4, #+76]
   \   0000006C   B80000EF           SWI      +184
   \   00000070   780084E5           STR      R0,[R4, #+120]
   1054            ParseMessagesIntoList(Resource_Ex);
   \   00000074   500094E5           LDR      R0,[R4, #+80]
   \   00000078   ........           BL       ParseMessagesIntoList
   1055            Calc_Pages_Data();
   \   0000007C   ........           BL       Calc_Pages_Data
   1056            CurrentPage = MaxPages;
   \   00000080   7C0094E5           LDR      R0,[R4, #+124]
   1057            OLD_MessList_Count = Resource_Ex->total_msg_count;
   1058            Cursor_Pos = DispMessList_Count;
   \   00000084   601094E5           LDR      R1,[R4, #+96]
   \   00000088   6C0084E5           STR      R0,[R4, #+108]
   \   0000008C   500094E5           LDR      R0,[R4, #+80]
   \   00000090   180090E5           LDR      R0,[R0, #+24]
   \   00000094   681084E5           STR      R1,[R4, #+104]
   \   00000098   640084E5           STR      R0,[R4, #+100]
   1059            CurrentMessage = OLD_MessList_Count;
   \   0000009C   700084E5           STR      R0,[R4, #+112]
   1060          
   1061            // Замутим гуй
   1062            GUI *mess_gui=malloc(sizeof(GUI));
   \   000000A0   3400A0E3           MOV      R0,#+52
   \   000000A4   140000EF           SWI      +20
   \   000000A8   0060A0E1           MOV      R6,R0
   1063            zeromem(mess_gui, sizeof(GUI));
   \   000000AC   3410A0E3           MOV      R1,#+52
   \   000000B0   1D0100EF           SWI      +285
   1064            patch_rect((RECT*)&mCanvas,0,0,ScreenW()-1,ScreenH()-1);
   \   000000B4   898100EF           SWI      +33161
   \   000000B8   0070A0E1           MOV      R7,R0
   \   000000BC   888100EF           SWI      +33160
   \   000000C0   3C209FE5           LDR      R2,??Display_Message_List_1  ;; mCanvas
   \   000000C4   011047E2           SUB      R1,R7,#+1
   \   000000C8   010040E2           SUB      R0,R0,#+1
   \   000000CC   005082E5           STR      R5,[R2, #+0]
   \   000000D0   B400C2E1           STRH     R0,[R2, #+4]
   \   000000D4   B610C2E1           STRH     R1,[R2, #+6]
   1065            mess_gui->canvas=(void *)(&mCanvas);
   \   000000D8   002086E5           STR      R2,[R6, #+0]
   1066            mess_gui->flag30=2;
   \   000000DC   0200A0E3           MOV      R0,#+2
   \   000000E0   300086E5           STR      R0,[R6, #+48]
   1067            mess_gui->methods=(void *)mgui_methods;
   \   000000E4   080082E2           ADD      R0,R2,#+8
   \   000000E8   040086E5           STR      R0,[R6, #+4]
   1068            mess_gui->item_ll.data_mfree=(void (*)(void *))mfree_adr();
   \   000000EC   158000EF           SWI      +32789
   \   000000F0   200086E5           STR      R0,[R6, #+32]
   1069            Message_gui_ID = CreateGUI(mess_gui);
   \   000000F4   0600A0E1           MOV      R0,R6
   \   000000F8   370100EF           SWI      +311
   \   000000FC   540084E5           STR      R0,[R4, #+84]
   1070          }
   \   00000100   F080BDE8           POP      {R4-R7,PC}       ;; return
   \                     ??Display_Message_List_1:
   \   00000104   ........           DC32     mCanvas

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable16:
   \   00000000   ........           DC32     Is_Smiles_Enabled

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable17:
   \   00000000   ........           DC32     SmilesImgList

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable18:
   \   00000000   ........           DC32     inp_desc

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable26:
   \   00000000   ........           DC32     inp_desc + 92

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable29:
   \   00000000   ........           DC32     Is_Smiles_Enabled

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable30:
   \   00000000   ........           DC32     SmilesImgList

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable31:
   \   00000000   ........           DC32     MESSAGEWIN_FONT

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable32:
   \   00000000   ........           DC32     inp_desc

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for inp_desc>`:
   \   00000000   01000000....       DC32 1, inp_onkey, inp_ghook, inp_locret, 0, menu_skt
   \              ............
   \              ........0000
   \              0000........
   \   00000018   000016008300       DC16 0, 22, 131, 153
   \              9900        
   \   00000020   040000006400       DC32 4, 100, 101, 0, 0, 1073741824
   \              000065000000
   \              000000000000
   \              000000000040
   \                     `?<Initializer for inp_hdr>`:
   \   00000038   000000000000       DC16 0, 0, 0, 0
   \              0000        
   \   00000040   00000000....       DC32 0H, `?<Constant "\\315\\356\\342\\356\\345...">`, 2147483647
   \              ....FFFFFF7F
   \                     `?<Initializer for FontSize>`:
   \   0000004C   0000               DC8 0, 0
   \   0000004E   0000               DC8 0, 0
   \                     `?<Initializer for Resource_Ex>`:
   \   00000050   00000000           DC32 0H
   \                     `?<Initializer for Message_gui_ID>`:
   \   00000054   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for edmessage_id>`:
   \   00000058   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for MessagesList>`:
   \   0000005C   00000000           DC32 0H
   \                     `?<Initializer for DispMessList_Count>`:
   \   00000060   00000000           DC32 0
   \                     `?<Initializer for OLD_MessList_Count>`:
   \   00000064   00000000           DC32 0
   \                     `?<Initializer for Cursor_Pos>`:
   \   00000068   00000000           DC32 0
   \                     `?<Initializer for CurrentPage>`:
   \   0000006C   01000000           DC32 1
   \                     `?<Initializer for CurrentMessage>`:
   \   00000070   00000000           DC32 0
   \                     `?<Initializer for CurrentMessage_Lines>`:
   \   00000074   00000000           DC32 0
   \                     `?<Initializer for lines_on_page>`:
   \   00000078   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for MaxPages>`:
   \   0000007C   01000000           DC32 1
   \                     `?<Initializer for MsgList_Quit_Required>`:
   \   00000080   00                 DC8 0
   \                     `?<Initializer for Mess_was_sent>`:
   \   00000081   00                 DC8 0
   \   00000082   0000               DC8 0, 0
   \                     `?<Initializer for sk>`:
   \   00000084   18000000           DC16 24, 0
   \   00000088   ........           DC32 `?<Constant "\\314\\345\\355\\376">`

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for menu_sk>`:
   \   00000000   18000000           DC16 24, 0
   \   00000004   ........           DC32 `?<Constant "\\302\\373\\341\\356\\360">`
   \   00000008   01000000           DC16 1, 0
   \   0000000C   ........           DC32 `?<Constant "\\315\\340\\347\\340\\344">`
   \   00000010   3D000000           DC16 61, 0
   \   00000014   FBC0FF7F           DC32 2147467515

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for menu_skt>`:
   \   00000000   ........0000       DC32 menu_sk, 0
   \              0000        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\314\\345\\355\\376">`:
   \   00000000   CCE5EDFE00         DC8 "\314\345\355\376"
   \   00000005   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   2000               DC8 " "

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "/message ">`:
   \   00000000   2F6D65737361       DC8 "/message "
   \              67652000    
   \   0000000A   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "/attention ">`:
   \   00000000   2F617474656E       DC8 "/attention "
   \              74696F6E2000

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "/topic ">`:
   \   00000000   2F746F706963       DC8 "/topic "
   \              2000        
   \   00000008   CDE5EBFCE7FF       DC8 "\315\345\353\374\347\377 \357\356\361\353\340\362\374 \357\363\361\362\356\345 \361\356\356\341\371\345\355\350\345!"
   \              20EFEEF1EBE0
   \              F2FC20EFF3F1
   \              F2EEE520F1EE
   \              EEE1F9E5EDE8
   \              E52100      
   \   00000029   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "/part">`:
   \   00000000   2F7061727400       DC8 "/part"
   \   00000006   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\315\\356\\342\\356\\345...">`:
   \   00000000   CDEEE2EEE52E       DC8 "\315\356\342\356\345..."
   \              2E2E00      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\315\\340\\347\\340\\344">`:
   \   00000000   CDE0E7E0E400       DC8 "\315\340\347\340\344"
   \   00000006   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\302\\373\\341\\356\\360">`:
   \   00000000   C2FBE1EEF000       DC8 "\302\373\341\356\360"
   \   00000006   0000               DC8 0, 0
   1071          //EOL,EOF

   Maximum stack usage in bytes:

     Function              CSTACK
     --------              ------
     Calc_Pages_Data           8
     Calc_Pages_Data_1         4
     Calc_Pages_Data_2         0
     CharsToSmilesUNI         36
     Display_Message_List     20
     GetCurMessage             0
     Init_Message             72
     KillDisp                  8
     ParseMessagesIntoList    44
     SmilesToCharsUNI         24
     inp_ghook                64
     inp_locret                0
     inp_onkey               140
     inp_redraw                0
     mGUI_method8              0
     mGUI_method9              0
     mGUI_onClose             12
     mGUI_onCreate             0
     mGUI_onFocus             16
     mGUI_onKey               40
     mGUI_onRedraw            68
     mGUI_onUnfocus            0


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     flag2                             4
     flag1                             4
     CharsToSmilesUNI                340
     SmilesToCharsUNI                148
     ec_message                       44
     ed_message_gui                    4
     inp_onkey                      1140
     inp_redraw                        4
     inp_ghook                       232
     inp_locret                        4
     Init_Message                    428
     KillDisp                         80
     inp_desc                        140
     menu_sk                          24
     menu_skt                          8
     Calc_Pages_Data                  48
     Calc_Pages_Data_1                64
     Calc_Pages_Data_2                40
     mGUI_onRedraw                  1024
     mGUI_onCreate                    28
     mGUI_onClose                     72
     mGUI_onFocus                    112
     mGUI_onUnfocus                   20
     GetCurMessage                    52
     mGUI_onKey                     1252
     mGUI_method8                      8
     mGUI_method9                      8
     mCanvas                          52
     ParseMessagesIntoList           672
     Display_Message_List            264
     ??DataTable16                     4
     ??DataTable17                     4
     ??DataTable18                     4
     ??DataTable26                     4
     ??DataTable29                     4
     ??DataTable30                     4
     ??DataTable31                     4
     ??DataTable32                     4
     ?<Initializer for inp_desc>     140
     ?<Initializer for menu_sk>       24
     ?<Initializer for menu_skt>       8
     ?<Constant "\314\345\355\376">    8
     ?<Constant " ">                   2
     ?<Constant "/message ">          12
     ?<Constant "/attention ">        12
     ?<Constant "/topic ">            44
     ?<Constant "/part">               8
     ?<Constant "\315\356\342\356\345...">
                                      12
     ?<Constant "\315\340\347\340\344">
                                       8
     ?<Constant "\302\373\341\356\360">
                                       8
      Others                         244

 
 6 292 bytes in segment CODE
   166 bytes in segment DATA_C
   172 bytes in segment DATA_I
   172 bytes in segment DATA_ID
    56 bytes in segment DATA_Z
    24 bytes in segment INITTAB
 
 6 072 bytes of CODE  memory (+ 244 bytes shared)
   338 bytes of CONST memory
   228 bytes of DATA  memory

Errors: none
Warnings: none
