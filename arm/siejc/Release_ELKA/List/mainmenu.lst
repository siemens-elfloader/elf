##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION    23/Feb/2011  16:38:13 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  C:\arm\siejc\mainmenu.c                              #
#    Command line    =  C:\arm\siejc\mainmenu.c -D NEWSGOLD -D ELKA          #
#                       --preprocess C:\arm\siejc\Release_ELKA\List\ -lC     #
#                       C:\arm\siejc\Release_ELKA\List\ -o                   #
#                       C:\arm\siejc\Release_ELKA\Obj\ -s9 --no_unroll       #
#                       --cpu_mode arm --endian little --cpu ARM926EJ-S      #
#                       --stack_align 4 --interwork -e --fpu None            #
#                       --dlib_config "C:\arm2\Embedded Workbench 4.0        #
#                       Evaluation\ARM\LIB\dl5tpainl8f.h" -I                 #
#                       "C:\arm2\Embedded Workbench 4.0                      #
#                       Evaluation\ARM\INC\" --inline_threshold=2            #
#    List file       =  C:\arm\siejc\Release_ELKA\List\mainmenu.lst          #
#    Object file     =  C:\arm\siejc\Release_ELKA\Obj\mainmenu.r79           #
#                                                                            #
#                                                                            #
##############################################################################

C:\arm\siejc\mainmenu.c
      1          #include "../inc/swilib.h"
      2          #include "main.h"
      3          #include "roster_icons.h"
      4          #include "mainmenu.h"
      5          #include "status_change.h"
      6          #include "bookmarks.h"
      7          #include "jabber_util.h"
      8          #include "MUC_Enter_UI.h"
      9          #include "JID_Enter_UI.h"
     10          #include "cont_menu.h"
     11          #include "revision.h"
     12          #include "lang.h"
     13          #include "clist_util.h"
     14          #include "string_util.h"
     15          #include "color.h"
     16          #include "rect_patcher.h"
     17          #include "moods.h"
     18          
     19          #define MAX_MMITEMS 15       // Максимальное количество пунктов меню
     20          
     21          extern int Is_Sounds_Enabled;
     22          extern int Is_Vibra_Enabled;
     23          extern char Display_Offline;
     24          extern int Is_Autostatus_Enabled;
     25          extern int Is_Smiles_Enabled;
     26          
     27          extern char My_Presence;
     28          
     29          extern const char VERSION_VERS[];
     30          
     31          #define MM_CONTACT     		1
     32          #define MM_STATUS    		2
     33          //#define MM_MUC     		3
     34          //#define MM_BOOKMARK      	4
     35          //#define MM_ADDCONTACT     	5
     36          #define MM_VIBRA_MODE       	6
     37          #define MM_SOUND_MODE      	7
     38          #define MM_OFFCONTACT_MODE      8
     39          #define MM_MOODS      		9
     40          #define MM_AUTOSTATUS_MODE  	10
     41          #define MM_OPEN_CONFIG  	11
     42          #define MM_OPEN_COLOR_CONFIG    12
     43          #define MM_ABOUT      		13
     44          #define MM_EXIT      		14
     45          #define MM_SMILE_MODE  		15
     46          

   \                                 In segment CODE, align 4, keep-with-next
     47          void AboutDlg(void)
     48          {
   \                     AboutDlg:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
     49            char msg_tpl[]=LG_COPYRIGHT;
   \   00000004   70409FE5           LDR      R4,??AboutDlg_0  ;; `?<Constant "Siemens natJabber Cli...">`
   \   00000008   44D04DE2           SUB      SP,SP,#+68
   \   0000000C   0D00A0E1           MOV      R0,SP
   \   00000010   4420A0E3           MOV      R2,#+68
   \                     ??AboutDlg_1:
   \   00000014   042052E2           SUBS     R2,R2,#+4
   \   00000018   021094E7           LDR      R1,[R4, R2]
   \   0000001C   021080E7           STR      R1,[R0, R2]
   \   00000020   FBFFFF1A           BNE      ??AboutDlg_1
     50            int l;
     51            char *msg = malloc(l=strlen(msg_tpl)+20+1);
   \   00000024   1B0000EF           SWI      +27
   \   00000028   155080E2           ADD      R5,R0,#+21
   \   0000002C   0500A0E1           MOV      R0,R5
   \   00000030   140000EF           SWI      +20
     52            snprintf(msg,l,msg_tpl, VERSION_VERS, __SVN_REVISION__, __DATE__);
   \   00000034   44309FE5           LDR      R3,??AboutDlg_0+0x4  ;; VERSION_VERS
   \   00000038   0060A0E1           MOV      R6,R0
   \   0000003C   440084E2           ADD      R0,R4,#+68
   \   00000040   01002DE9           PUSH     {R0}
   \   00000044   0510A0E1           MOV      R1,R5
   \   00000048   BE00A0E3           MOV      R0,#+190
   \   0000004C   B00E80E3           ORR      R0,R0,#0xB00
   \   00000050   01002DE9           PUSH     {R0}
   \   00000054   08208DE2           ADD      R2,SP,#+8
   \   00000058   0600A0E1           MOV      R0,R6
   \   0000005C   1B0100EF           SWI      +283
     53            ShowMSG(0,(int)msg);
   \   00000060   0610A0E1           MOV      R1,R6
   \   00000064   0000A0E3           MOV      R0,#+0
   \   00000068   480100EF           SWI      +328
     54            mfree(msg);
   \   0000006C   0600A0E1           MOV      R0,R6
   \   00000070   150000EF           SWI      +21
     55          };
   \   00000074   4CD08DE2           ADD      SP,SP,#+76
   \   00000078   7080BDE8           POP      {R4-R6,PC}       ;; return
   \                     ??AboutDlg_0:
   \   0000007C   ........           DC32     `?<Constant "Siemens natJabber Cli...">`
   \   00000080   ........           DC32     VERSION_VERS
     56          
     57          char MMenu_Contents[MAX_MMITEMS-1];
     58          int cmMS_ICONS[MAX_MMITEMS+1];
     59          int MainMenu_ID;
     60          
     61          //int Req_Close_Cont_Menu=0;
     62          HEADER_DESC menuhdr={0,0,131,21,NULL,(int)LG_MENU,LGP_NULL};
     63          int mmenusoftkeys[]={0,1,2};
     64          int icon_array[2];
     65          
     66          SOFTKEY_DESC mmenu_sk[]=
     67          {
     68            {0x0018,0x0000,(int)LG_SELECT},
     69            {0x0001,0x0000,(int)LG_BACK},
     70            {0x003D,0x0000,(int)LGP_DOIT_PIC}
     71          };
     72          
     73          SOFTKEYSTAB mmenu_skt=
     74          {
     75            mmenu_sk,0
     76          };
     77          
     78          void mmenu_ghook(void *data, int cmd);
     79          int mmenu_keyhook(void *data, GUI_MSG *msg);
     80          void menuitemhandler(void *data, int curitem, void *unk);
     81          
     82          MENU_DESC tmenu=
     83          {
     84            8,mmenu_keyhook,mmenu_ghook,NULL,
     85            mmenusoftkeys,
     86            &mmenu_skt,
     87            0x11,
     88            menuitemhandler,
     89            NULL, //menuitems,
     90            NULL, //menuprocs,
     91            MAX_MMITEMS
     92          };
     93          

   \                                 In segment CODE, align 4, keep-with-next
     94          void mmenu_ghook(void *data, int cmd)
     95          {
   \                     mmenu_ghook:
   \   00000000   00402DE9           PUSH     {LR}
     96            if (cmd==0x0A)
   \   00000004   0A0051E3           CMP      R1,#+10
   \   00000008   0080BD18           POPNE    {PC}
     97            {
     98              DisableIDLETMR();
   \   0000000C   7F0100EF           SWI      +383
     99            }
    100          }
   \   00000010   0080BDE8           POP      {PC}             ;; return
    101          
    102          /*
    103          Обработчик нажатий клавиш меню. Отсюда следует вызывать необходимые действия
    104          
    105          */
    106          

   \                                 In segment CODE, align 4, keep-with-next
    107          int mmenu_keyhook(void *data, GUI_MSG *msg)
    108          {
   \                     mmenu_keyhook:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0140A0E1           MOV      R4,R1
    109            int i=GetCurMenuItem(data);
   \   00000008   8F0100EF           SWI      +399
    110            if(msg->keys==0x18 || msg->keys==0x3D)
   \   0000000C   F210D4E1           LDRSH    R1,[R4, #+2]
   \   00000010   180051E3           CMP      R1,#+24
   \   00000014   3D005113           CMPNE    R1,#+61
   \   00000018   4E00001A           BNE      ??mmenu_keyhook_1
    111            {
    112              switch(MMenu_Contents[i])
   \   0000001C   ........           LDR      R4,??DataTable8  ;; menuhdr
   \   00000020   0110A0E3           MOV      R1,#+1
   \   00000024   040080E0           ADD      R0,R0,R4
   \   00000028   6000D0E5           LDRB     R0,[R0, #+96]
   \   0000002C   010040E2           SUB      R0,R0,#+1
   \   00000030   0E0050E3           CMP      R0,#+14
   \   00000034   4400008A           BHI      ??mmenu_keyhook_2
   \   00000038   013F8FE2           ADR      R3,??mmenu_keyhook_0
   \   0000003C   0030D3E7           LDRB     R3,[R3, R0]
   \   00000040   03F18FE0           ADD      PC,PC,R3, LSL #+2
   \                     ??mmenu_keyhook_0:
   \   00000044   03054141           DC8      +3,+5,+65,+65
   \   00000048   4107101B           DC8      +65,+7,+16,+27
   \   0000004C   3F222B2F           DC8      +63,+34,+43,+47
   \   00000050   31333600           DC8      +49,+51,+54,+0
    113              {
    114              case MM_CONTACT:
    115                {
    116                  Disp_Contact_Menu();
   \                     ??mmenu_keyhook_3:
   \   00000054   ........           _BLF     Disp_Contact_Menu,??Disp_Contact_Menu??rA
    117                  break;
   \   00000058   130000EA           B        ??mmenu_keyhook_4
    118                }
    119              case MM_STATUS:
    120                {
    121                ShowStatusSelectMenu();
   \                     ??mmenu_keyhook_5:
   \   0000005C   ........           _BLF     ShowStatusSelectMenu,??ShowStatusSelectMenu??rA
    122                break;
   \   00000060   110000EA           B        ??mmenu_keyhook_4
    123                }
    124            /*  case MM_MUC:
    125                {
    126                Disp_MUC_Enter_Dialog(NULL,NULL,NULL);
    127                break;
    128                }
    129              case MM_BOOKMARK:
    130                {
    131                Get_Bookmarks_List();
    132                GeneralFuncF1(1);
    133                break;
    134                }
    135              case MM_ADDCONTACT:
    136                {
    137          	Disp_JID_Enter_Dialog(NULL);
    138                break;
    139                }*/
    140              case MM_VIBRA_MODE:
    141                {
    142          	Is_Vibra_Enabled=!(Is_Vibra_Enabled);
   \                     ??mmenu_keyhook_6:
   \   00000064   ........           LDR      R0,??DataTable9  ;; Is_Vibra_Enabled
   \   00000068   003090E5           LDR      R3,[R0, #+0]
   \   0000006C   000053E3           CMP      R3,#+0
   \   00000070   0010A013           MOVNE    R1,#+0
   \   00000074   001080E5           STR      R1,[R0, #+0]
    143                  cmMS_ICONS[MM_VIBRA_MODE]=(int)icon_array[Is_Vibra_Enabled];
   \   00000078   010184E0           ADD      R0,R4,R1, LSL #+2
   \   0000007C   540090E5           LDR      R0,[R0, #+84]
   \   00000080   2C0084E5           STR      R0,[R4, #+44]
    144          	RefreshGUI();
   \   00000084   070000EA           B        ??mmenu_keyhook_7
    145                break;
    146                }
    147              case MM_SOUND_MODE:
    148                {
    149          	Is_Sounds_Enabled=!(Is_Sounds_Enabled);
   \                     ??mmenu_keyhook_8:
   \   00000088   ........           LDR      R0,??DataTable10  ;; Is_Sounds_Enabled
   \   0000008C   003090E5           LDR      R3,[R0, #+0]
   \   00000090   000053E3           CMP      R3,#+0
   \   00000094   0010A013           MOVNE    R1,#+0
   \   00000098   001080E5           STR      R1,[R0, #+0]
    150                  cmMS_ICONS[MM_SOUND_MODE]=(int)icon_array[Is_Sounds_Enabled];
   \   0000009C   010184E0           ADD      R0,R4,R1, LSL #+2
   \   000000A0   540090E5           LDR      R0,[R0, #+84]
   \   000000A4   300084E5           STR      R0,[R4, #+48]
    151          	RefreshGUI();
   \                     ??mmenu_keyhook_7:
   \   000000A8   960100EF           SWI      +406
   \                     ??mmenu_keyhook_4:
   \   000000AC   0000A0E3           MOV      R0,#+0
   \   000000B0   1080BDE8           POP      {R4,PC}
    152                break;
    153                }
    154              case MM_OFFCONTACT_MODE:
    155                {
    156          	CList_ToggleOfflineDisplay();
   \                     ??mmenu_keyhook_9:
   \   000000B4   ........           _BLF     CList_ToggleOfflineDisplay,??CList_ToggleOfflineDisplay??rA
    157                  cmMS_ICONS[MM_OFFCONTACT_MODE]=(int)icon_array[Display_Offline];
   \   000000B8   ........           LDR      R0,??DataTable11  ;; Display_Offline
   \   000000BC   0000D0E5           LDRB     R0,[R0, #+0]
   \   000000C0   000184E0           ADD      R0,R4,R0, LSL #+2
   \   000000C4   540090E5           LDR      R0,[R0, #+84]
   \   000000C8   340084E5           STR      R0,[R4, #+52]
    158          	RefreshGUI();
   \   000000CC   F5FFFFEA           B        ??mmenu_keyhook_7
    159                break;
    160                }
    161              case MM_AUTOSTATUS_MODE:
    162                {
    163                  Is_Autostatus_Enabled=!(Is_Autostatus_Enabled);
   \                     ??mmenu_keyhook_10:
   \   000000D0   ........           LDR      R0,??DataTable12  ;; Is_Autostatus_Enabled
   \   000000D4   003090E5           LDR      R3,[R0, #+0]
   \   000000D8   000053E3           CMP      R3,#+0
   \   000000DC   0010A013           MOVNE    R1,#+0
   \   000000E0   001080E5           STR      R1,[R0, #+0]
    164                  cmMS_ICONS[MM_AUTOSTATUS_MODE]=(int)icon_array[Is_Autostatus_Enabled];
   \   000000E4   010184E0           ADD      R0,R4,R1, LSL #+2
   \   000000E8   540090E5           LDR      R0,[R0, #+84]
   \   000000EC   3C0084E5           STR      R0,[R4, #+60]
    165          	RefreshGUI();
   \   000000F0   ECFFFFEA           B        ??mmenu_keyhook_7
    166          	break;
    167          	}
    168              case MM_OPEN_CONFIG:
    169                {
    170          	OpenSettings();
   \                     ??mmenu_keyhook_11:
   \   000000F4   ........           _BLF     OpenSettings,??OpenSettings??rA
    171          	GeneralFuncF1(1);
   \                     ??mmenu_keyhook_12:
   \   000000F8   0100A0E3           MOV      R0,#+1
   \   000000FC   3B0100EF           SWI      +315
    172                break;
   \   00000100   E9FFFFEA           B        ??mmenu_keyhook_4
    173                }
    174                
    175              case MM_OPEN_COLOR_CONFIG:
    176                {
    177                 ShowSelectColorMenu();
   \                     ??mmenu_keyhook_13:
   \   00000104   ........           _BLF     ShowSelectColorMenu,??ShowSelectColorMenu??rA
    178                  break;
   \   00000108   E7FFFFEA           B        ??mmenu_keyhook_4
    179                }
    180              case MM_ABOUT:
    181                {
    182                  AboutDlg();
   \                     ??mmenu_keyhook_14:
   \   0000010C   ........           BL       AboutDlg
    183                  break;
   \   00000110   E5FFFFEA           B        ??mmenu_keyhook_4
    184                }
    185              case MM_EXIT:
    186                {
    187          	QuitCallbackProc(0);
   \                     ??mmenu_keyhook_15:
   \   00000114   0000A0E3           MOV      R0,#+0
   \   00000118   ........           _BLF     QuitCallbackProc,??QuitCallbackProc??rA
    188                  GeneralFuncF1(1);
   \   0000011C   F5FFFFEA           B        ??mmenu_keyhook_12
    189                  break;
    190                }      
    191              case MM_SMILE_MODE:
    192                {
    193                  Is_Smiles_Enabled=!(Is_Smiles_Enabled);
   \                     ??mmenu_keyhook_16:
   \   00000120   ........           LDR      R0,??DataTable13  ;; Is_Smiles_Enabled
   \   00000124   003090E5           LDR      R3,[R0, #+0]
   \   00000128   000053E3           CMP      R3,#+0
   \   0000012C   0010A013           MOVNE    R1,#+0
   \   00000130   001080E5           STR      R1,[R0, #+0]
    194                  cmMS_ICONS[MM_SMILE_MODE]=(int)icon_array[Is_Smiles_Enabled];
   \   00000134   010184E0           ADD      R0,R4,R1, LSL #+2
   \   00000138   540090E5           LDR      R0,[R0, #+84]
   \   0000013C   500084E5           STR      R0,[R4, #+80]
    195          	RefreshGUI();
   \   00000140   D8FFFFEA           B        ??mmenu_keyhook_7
    196                  break;
    197                }
    198              case MM_MOODS:
    199                {
    200                  Show_Moods_Menu();
   \                     ??mmenu_keyhook_17:
   \   00000144   ........           _BLF     Show_Moods_Menu,??Show_Moods_Menu??rA
    201                  break;
   \   00000148   D7FFFFEA           B        ??mmenu_keyhook_4
    202                }
    203              default:
    204                {
    205                  MsgBoxError(1,(int)LG_UNKACTION);
   \                     ??mmenu_keyhook_2:
   \   0000014C   0C109FE5           LDR      R1,??mmenu_keyhook_18  ;; `?<Constant "\\304\\345\\351\\361\\362\\342\\350\\345 \\`
   \   00000150   0100A0E3           MOV      R0,#+1
   \   00000154   4E0000EF           SWI      +78
    206                }
    207              }
    208              return 0;
   \                     ??mmenu_keyhook_1:
   \   00000158   0000A0E3           MOV      R0,#+0
   \   0000015C   1080BDE8           POP      {R4,PC}          ;; return
   \                     ??mmenu_keyhook_18:
   \   00000160   ........           DC32     `?<Constant "\\304\\345\\351\\361\\362\\342\\350\\345 \\`
    209            }
    210            //  Req_Close_Cont_Menu = 1;
    211            return 0;
    212          }
    213          

   \                                 In segment CODE, align 4, keep-with-next
    214          void InitMMenuArray()
    215          {
    216            for(int i=0;i<MAX_MMITEMS;i++)MMenu_Contents[i]=0;
   \                     InitMMenuArray:
   \   00000000   0000A0E3           MOV      R0,#+0
   \   00000004   0020A0E3           MOV      R2,#+0
   \                     ??InitMMenuArray_0:
   \   00000008   ........           LDR      R1,??DataTable8  ;; menuhdr
   \   0000000C   011080E0           ADD      R1,R0,R1
   \   00000010   6020C1E5           STRB     R2,[R1, #+96]
   \   00000014   010080E2           ADD      R0,R0,#+1
   \   00000018   0F0050E3           CMP      R0,#+15
   \   0000001C   F9FFFFBA           BLT      ??InitMMenuArray_0
    217          }
   \   00000020   1EFF2FE1           BX       LR               ;; return
    218          
    219          /*
    220          Обработчик появления пунктов динамического меню
    221          Тут мы сами создаём каждый пункт, указывая для него иконку и текст.
    222          При создании мы опираемся на данные массива MMenu_Contents, в котором описано,
    223          какие пункты и в каком порядке необходимо создать.
    224          */

   \                                 In segment CODE, align 4, keep-with-next
    225          void menuitemhandler(void *data, int curitem, void *unk)
    226          {
   \                     menuitemhandler:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
    227            WSHDR *ws;
    228            char test_str[48];
    229            void *item=AllocMenuItem(data);
    230            strcpy(test_str,"(ошибка)");
   \   00000004   0C819FE5           LDR      R8,??menuitemhandler_1  ;; `?<Constant "\\312\\356\\355\\362\\340\\352\\362">`
    231          
    232            switch(MMenu_Contents[curitem])
   \   00000008   ........           LDR      R7,??DataTable8  ;; menuhdr
   \   0000000C   30D04DE2           SUB      SP,SP,#+48
   \   00000010   0040A0E1           MOV      R4,R0
   \   00000014   0150A0E1           MOV      R5,R1
   \   00000018   970100EF           SWI      +407
   \   0000001C   0060A0E1           MOV      R6,R0
   \   00000020   801088E2           ADD      R1,R8,#+128
   \   00000024   0D00A0E1           MOV      R0,SP
   \   00000028   1A0000EF           SWI      +26
   \   0000002C   070085E0           ADD      R0,R5,R7
   \   00000030   6000D0E5           LDRB     R0,[R0, #+96]
   \   00000034   010040E2           SUB      R0,R0,#+1
   \   00000038   0E0050E3           CMP      R0,#+14
   \   0000003C   1F00008A           BHI      ??menuitemhandler_2
   \   00000040   011F8FE2           ADR      R1,??menuitemhandler_0
   \   00000044   0010D1E7           LDRB     R1,[R1, R0]
   \   00000048   01F18FE0           ADD      PC,PC,R1, LSL #+2
   \                     ??menuitemhandler_0:
   \   0000004C   03051C1C           DC8      +3,+5,+28,+28
   \   00000050   1C07090B           DC8      +28,+7,+9,+11
   \   00000054   190D0F11           DC8      +25,+13,+15,+17
   \   00000058   13151700           DC8      +19,+21,+23,+0
    233            {
    234              case MM_CONTACT:
    235                {
    236                strcpy(test_str,LG_CONTACT);
   \                     ??menuitemhandler_3:
   \   0000005C   0810A0E1           MOV      R1,R8
   \   00000060   140000EA           B        ??menuitemhandler_4
    237                  break;
    238                }
    239              case MM_STATUS:
    240                {
    241                strcpy(test_str,LG_STATUS);
   \                     ??menuitemhandler_5:
   \   00000064   3C1088E2           ADD      R1,R8,#+60
   \   00000068   120000EA           B        ??menuitemhandler_4
    242                  break;
    243                }
    244            /*  case MM_MUC:
    245                {
    246                strcpy(test_str,LG_MUC);
    247                  break;
    248                }
    249              case MM_BOOKMARK:
    250                {
    251                strcpy(test_str,LG_BOOKMARK);
    252                  break;
    253                }
    254              case MM_ADDCONTACT:
    255                {
    256                strcpy(test_str,LG_ADDCONTACT);
    257                  break;
    258                }*/
    259              case MM_VIBRA_MODE:
    260                {
    261                strcpy(test_str,LG_MVIBRA);
   \                     ??menuitemhandler_6:
   \   0000006C   081088E2           ADD      R1,R8,#+8
   \   00000070   100000EA           B        ??menuitemhandler_4
    262                  break;
    263                }
    264              case MM_SOUND_MODE:
    265                {
    266                strcpy(test_str,LG_MSOUND);
   \                     ??menuitemhandler_7:
   \   00000074   141088E2           ADD      R1,R8,#+20
   \   00000078   0E0000EA           B        ??menuitemhandler_4
    267                  break;
    268                }
    269            case MM_OFFCONTACT_MODE:
    270                {
    271                strcpy(test_str,LG_MOFFLINE);
   \                     ??menuitemhandler_8:
   \   0000007C   201088E2           ADD      R1,R8,#+32
   \   00000080   0C0000EA           B        ??menuitemhandler_4
    272                  break;
    273                }
    274              case MM_AUTOSTATUS_MODE:
    275                {
    276                strcpy(test_str,LG_AUTOSTATUS);
   \                     ??menuitemhandler_9:
   \   00000084   301088E2           ADD      R1,R8,#+48
   \   00000088   0A0000EA           B        ??menuitemhandler_4
    277                  break;
    278                }
    279              case MM_OPEN_CONFIG:
    280                {
    281                strcpy(test_str,LG_SETTINGS);
   \                     ??menuitemhandler_10:
   \   0000008C   441088E2           ADD      R1,R8,#+68
   \   00000090   080000EA           B        ??menuitemhandler_4
    282                  break;
    283                }
    284              case MM_OPEN_COLOR_CONFIG:
    285                {
    286                strcpy(test_str,LG_COLOR);
   \                     ??menuitemhandler_11:
   \   00000094   501088E2           ADD      R1,R8,#+80
   \   00000098   060000EA           B        ??menuitemhandler_4
    287                  break;
    288                }
    289              case MM_ABOUT:
    290                {
    291                strcpy(test_str,LG_ABOUT);
   \                     ??menuitemhandler_12:
   \   0000009C   581088E2           ADD      R1,R8,#+88
   \   000000A0   040000EA           B        ??menuitemhandler_4
    292                  break;
    293                }
    294              case MM_EXIT:
    295                {
    296                strcpy(test_str,LG_EXIT);
   \                     ??menuitemhandler_13:
   \   000000A4   641088E2           ADD      R1,R8,#+100
   \   000000A8   020000EA           B        ??menuitemhandler_4
    297                  break;
    298                }
    299              case MM_SMILE_MODE:
    300                {
    301                strcpy(test_str,LG_SMILE);
   \                     ??menuitemhandler_14:
   \   000000AC   6C1088E2           ADD      R1,R8,#+108
   \   000000B0   000000EA           B        ??menuitemhandler_4
    302                  break;
    303                }
    304              case MM_MOODS:
    305                {
    306                strcpy(test_str,LG_MOODS);
   \                     ??menuitemhandler_15:
   \   000000B4   741088E2           ADD      R1,R8,#+116
   \                     ??menuitemhandler_4:
   \   000000B8   0D00A0E1           MOV      R0,SP
   \   000000BC   1A0000EF           SWI      +26
    307                  break;
    308                }
    309            }
    310          
    311            ws=AllocMenuWS(data,strlen(test_str));
   \                     ??menuitemhandler_2:
   \   000000C0   0D00A0E1           MOV      R0,SP
   \   000000C4   1B0000EF           SWI      +27
   \   000000C8   0010A0E1           MOV      R1,R0
   \   000000CC   0400A0E1           MOV      R0,R4
   \   000000D0   980100EF           SWI      +408
   \   000000D4   0080A0E1           MOV      R8,R0
    312            ascii2ws(ws, test_str);
   \   000000D8   0D10A0E1           MOV      R1,SP
   \   000000DC   ........           _BLF     ascii2ws,??ascii2ws??rA
    313          
    314            SetMenuItemIconArray(data,item,cmMS_ICONS+MMenu_Contents[curitem]);
   \   000000E0   070085E0           ADD      R0,R5,R7
   \   000000E4   6000D0E5           LDRB     R0,[R0, #+96]
   \   000000E8   0610A0E1           MOV      R1,R6
   \   000000EC   000187E0           ADD      R0,R7,R0, LSL #+2
   \   000000F0   142080E2           ADD      R2,R0,#+20
   \   000000F4   0400A0E1           MOV      R0,R4
   \   000000F8   990100EF           SWI      +409
    315            SetMenuItemText(data,item,ws,curitem);
   \   000000FC   0530A0E1           MOV      R3,R5
   \   00000100   0820A0E1           MOV      R2,R8
   \   00000104   0610A0E1           MOV      R1,R6
   \   00000108   0400A0E1           MOV      R0,R4
   \   0000010C   9A0100EF           SWI      +410
    316          };
   \   00000110   30D08DE2           ADD      SP,SP,#+48
   \   00000114   F081BDE8           POP      {R4-R8,PC}       ;; return
   \                     ??menuitemhandler_1:
   \   00000118   ........           DC32     `?<Constant "\\312\\356\\355\\362\\340\\352\\362">`

   \                                 In segment DATA_I, align 4, align-sorted
   \                     menuhdr:
   \   00000000                      DS8 20
   \   00000014                      REQUIRE `?<Initializer for menuhdr>`
   \                     cmMS_ICONS:
   \   00000014                      DS8 64
   \   00000054                      REQUIRE `?<Initializer for cmMS_ICONS>`
   \                     icon_array:
   \   00000054                      DS8 8
   \   0000005C                      REQUIRE `?<Initializer for icon_array>`
   \                     MainMenu_ID:
   \   0000005C                      DS8 4
   \   00000060                      REQUIRE `?<Initializer for MainMenu_ID>`
   \                     MMenu_Contents:
   \   00000060                      DS8 16
   \   00000070                      REQUIRE `?<Initializer for MMenu_Contents>`
   \                     tmenu:
   \   00000070                      DS8 44
   \   0000009C                      REQUIRE `?<Initializer for tmenu>`
    317          
    318          extern const char PATH_TO_PIC[128];
    319          char ICON_INFO[128];
   \                     ICON_INFO:
   \   0000009C                      DS8 128
   \   0000011C                      REQUIRE `?<Initializer for ICON_INFO>`
    320          char ICON_STATUS[128];
   \                     ICON_STATUS:
   \   0000011C                      DS8 128
   \   0000019C                      REQUIRE `?<Initializer for ICON_STATUS>`
    321          char ICON_MUCM[128];
   \                     ICON_MUCM:
   \   0000019C                      DS8 128
   \   0000021C                      REQUIRE `?<Initializer for ICON_MUCM>`
    322          char ICON_BOOKMARK[128];
   \                     ICON_BOOKMARK:
   \   0000021C                      DS8 128
   \   0000029C                      REQUIRE `?<Initializer for ICON_BOOKMARK>`
    323          char ICON_ADDCONT[128];
   \                     ICON_ADDCONT:
   \   0000029C                      DS8 128
   \   0000031C                      REQUIRE `?<Initializer for ICON_ADDCONT>`
    324          //char ICON_VIBRA[128];
    325          //char ICON_SOUND[128];
    326          //char ICON_OFFCONTACT[128];
    327          //char ICON_IPCSTSTUS[128];
    328          //char ICON_AUTOSTATUS[128];
    329          //char ICON_SMILE[128];
    330          //char ICON_MOODS[128];
    331          char ICON_SETTING[128];
   \                     ICON_SETTING:
   \   0000031C                      DS8 128
   \   0000039C                      REQUIRE `?<Initializer for ICON_SETTING>`
    332          char ICON_COLOR[128];
   \                     ICON_COLOR:
   \   0000039C                      DS8 128
   \   0000041C                      REQUIRE `?<Initializer for ICON_COLOR>`
    333          char ICON_ABOUT[128];
   \                     ICON_ABOUT:
   \   0000041C                      DS8 128
   \   0000049C                      REQUIRE `?<Initializer for ICON_ABOUT>`
    334          char ICON_EXIT[128];
   \                     ICON_EXIT:
   \   0000049C                      DS8 128
   \   0000051C                      REQUIRE `?<Initializer for ICON_EXIT>`

   \                                 In segment DATA_I, align 4, align-sorted
   \                     mmenusoftkeys:
   \   00000000                      DS8 12
   \   0000000C                      REQUIRE `?<Initializer for mmenusoftkeys>`

   \                                 In segment DATA_I, align 4, align-sorted
   \                     mmenu_sk:
   \   00000000                      DS8 24
   \   00000018                      REQUIRE `?<Initializer for mmenu_sk>`

   \                                 In segment DATA_I, align 4, align-sorted
   \                     mmenu_skt:
   \   00000000                      DS8 8
   \   00000008                      REQUIRE `?<Initializer for mmenu_skt>`
    335          

   \                                 In segment CODE, align 4, keep-with-next
    336          void Init_MMIcon_array()
    337          {
   \                     Init_MMIcon_array:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
    338            strcpy(ICON_INFO, PATH_TO_PIC);strcat(ICON_INFO, "info.png");
   \   00000004   ........           LDR      R4,??DataTable8  ;; menuhdr
   \   00000008   C8519FE5           LDR      R5,??Init_MMIcon_array_0  ;; PATH_TO_PIC
   \   0000000C   C8619FE5           LDR      R6,??Init_MMIcon_array_0+0x4  ;; `?<Constant "conference.png">`
   \   00000010   0510A0E1           MOV      R1,R5
   \   00000014   9C0084E2           ADD      R0,R4,#+156
   \   00000018   1A0000EF           SWI      +26
   \   0000001C   481086E2           ADD      R1,R6,#+72
   \   00000020   9C0084E2           ADD      R0,R4,#+156
   \   00000024   170000EF           SWI      +23
    339            strcpy(ICON_MUCM, PATH_TO_PIC);strcat(ICON_MUCM, "conference.png");
   \   00000028   677FA0E3           MOV      R7,#+412
   \   0000002C   0510A0E1           MOV      R1,R5
   \   00000030   040087E0           ADD      R0,R7,R4
   \   00000034   1A0000EF           SWI      +26
   \   00000038   0610A0E1           MOV      R1,R6
   \   0000003C   040087E0           ADD      R0,R7,R4
   \   00000040   170000EF           SWI      +23
    340            strcpy(ICON_BOOKMARK, PATH_TO_PIC);strcat(ICON_BOOKMARK, "conference.png");
   \   00000044   877FA0E3           MOV      R7,#+540
   \   00000048   0510A0E1           MOV      R1,R5
   \   0000004C   040087E0           ADD      R0,R7,R4
   \   00000050   1A0000EF           SWI      +26
   \   00000054   0610A0E1           MOV      R1,R6
   \   00000058   040087E0           ADD      R0,R7,R4
   \   0000005C   170000EF           SWI      +23
    341            strcpy(ICON_ADDCONT, PATH_TO_PIC);strcat(ICON_ADDCONT, "conference.png");
   \   00000060   A77FA0E3           MOV      R7,#+668
   \   00000064   0510A0E1           MOV      R1,R5
   \   00000068   040087E0           ADD      R0,R7,R4
   \   0000006C   1A0000EF           SWI      +26
   \   00000070   0610A0E1           MOV      R1,R6
   \   00000074   040087E0           ADD      R0,R7,R4
   \   00000078   170000EF           SWI      +23
    342          /* ICON_VIBRA
    343            ICON_SOUND
    344            ICON_OFFCONTACT
    345            ICON_IPCSTSTUS
    346            ICON_AUTOSTATUS
    347            ICON_SMILE
    348            ICON_MOODS*/
    349            strcpy(ICON_SETTING, PATH_TO_PIC);strcat(ICON_SETTING, "settings.png");
   \   0000007C   C77FA0E3           MOV      R7,#+796
   \   00000080   0510A0E1           MOV      R1,R5
   \   00000084   040087E0           ADD      R0,R7,R4
   \   00000088   1A0000EF           SWI      +26
   \   0000008C   101086E2           ADD      R1,R6,#+16
   \   00000090   040087E0           ADD      R0,R7,R4
   \   00000094   170000EF           SWI      +23
    350            strcpy(ICON_COLOR, PATH_TO_PIC);strcat(ICON_COLOR, "coloricon.png");
   \   00000098   E78FA0E3           MOV      R8,#+924
   \   0000009C   0510A0E1           MOV      R1,R5
   \   000000A0   040088E0           ADD      R0,R8,R4
   \   000000A4   1A0000EF           SWI      +26
   \   000000A8   201086E2           ADD      R1,R6,#+32
   \   000000AC   040088E0           ADD      R0,R8,R4
   \   000000B0   170000EF           SWI      +23
    351            strcpy(ICON_ABOUT, PATH_TO_PIC);strcat(ICON_ABOUT, "about.png");
   \   000000B4   409F87E2           ADD      R9,R7,#+256
   \   000000B8   0510A0E1           MOV      R1,R5
   \   000000BC   040089E0           ADD      R0,R9,R4
   \   000000C0   1A0000EF           SWI      +26
   \   000000C4   301086E2           ADD      R1,R6,#+48
   \   000000C8   040089E0           ADD      R0,R9,R4
   \   000000CC   170000EF           SWI      +23
    352            strcpy(ICON_EXIT, PATH_TO_PIC);strcat(ICON_EXIT, "exit.png");
   \   000000D0   60AF87E2           ADD      R10,R7,#+384
   \   000000D4   0510A0E1           MOV      R1,R5
   \   000000D8   04008AE0           ADD      R0,R10,R4
   \   000000DC   1A0000EF           SWI      +26
   \   000000E0   3C1086E2           ADD      R1,R6,#+60
   \   000000E4   04008AE0           ADD      R0,R10,R4
   \   000000E8   170000EF           SWI      +23
    353            Roster_getIconByStatus(ICON_STATUS, My_Presence);
   \   000000EC   EC009FE5           LDR      R0,??Init_MMIcon_array_0+0x8  ;; My_Presence
   \   000000F0   475FA0E3           MOV      R5,#+284
   \   000000F4   0010D0E5           LDRB     R1,[R0, #+0]
   \   000000F8   040085E0           ADD      R0,R5,R4
   \   000000FC   ........           _BLF     Roster_getIconByStatus,??Roster_getIconByStatus??rA
    354            
    355            for(int i=0;i<=MAX_MMITEMS;i++)cmMS_ICONS[i]=0;
   \   00000100   0000A0E3           MOV      R0,#+0
   \   00000104   0020A0E3           MOV      R2,#+0
   \                     ??Init_MMIcon_array_1:
   \   00000108   001184E0           ADD      R1,R4,R0, LSL #+2
   \   0000010C   142081E5           STR      R2,[R1, #+20]
   \   00000110   010080E2           ADD      R0,R0,#+1
   \   00000114   100050E3           CMP      R0,#+16
   \   00000118   FAFFFFBA           BLT      ??Init_MMIcon_array_1
    356          
    357            icon_array[1]=GetPicNByUnicodeSymbol(CBOX_CHECKED);
   \   0000011C   1600A0E3           MOV      R0,#+22
   \   00000120   E10C80E3           ORR      R0,R0,#0xE100
   \   00000124   E40100EF           SWI      +484
   \   00000128   580084E5           STR      R0,[R4, #+88]
    358            icon_array[0]=GetPicNByUnicodeSymbol(CBOX_UNCHECKED);
   \   0000012C   1700A0E3           MOV      R0,#+23
   \   00000130   E10C80E3           ORR      R0,R0,#0xE100
   \   00000134   E40100EF           SWI      +484
   \   00000138   540084E5           STR      R0,[R4, #+84]
    359            cmMS_ICONS[MM_VIBRA_MODE]=(int)icon_array[Is_Vibra_Enabled];
   \   0000013C   ........           LDR      R0,??DataTable9  ;; Is_Vibra_Enabled
    360            cmMS_ICONS[MM_SOUND_MODE]=(int)icon_array[Is_Sounds_Enabled];
    361            cmMS_ICONS[MM_OFFCONTACT_MODE]=(int)icon_array[Display_Offline];
    362            cmMS_ICONS[MM_AUTOSTATUS_MODE]=(int)icon_array[Is_Autostatus_Enabled];
    363            cmMS_ICONS[MM_SMILE_MODE]=(int)icon_array[Is_Smiles_Enabled];
    364          
    365            cmMS_ICONS[MM_CONTACT]=(int)ICON_INFO;
    366            cmMS_ICONS[MM_STATUS]=(int)ICON_STATUS;
    367           // cmMS_ICONS[MM_MUC]=(int)ICON_MUCM;
    368           // cmMS_ICONS[MM_BOOKMARK]=(int)ICON_BOOKMARK;
    369            //mMS_ICONS[MM_ADDCONTACT]=(int)ICON_ADDCONT;
    370            cmMS_ICONS[MM_OPEN_CONFIG]=(int)ICON_SETTING;
   \   00000140   041087E0           ADD      R1,R7,R4
   \   00000144   000090E5           LDR      R0,[R0, #+0]
   \   00000148   000184E0           ADD      R0,R4,R0, LSL #+2
   \   0000014C   540090E5           LDR      R0,[R0, #+84]
   \   00000150   2C0084E5           STR      R0,[R4, #+44]
   \   00000154   ........           LDR      R0,??DataTable10  ;; Is_Sounds_Enabled
   \   00000158   000090E5           LDR      R0,[R0, #+0]
   \   0000015C   000184E0           ADD      R0,R4,R0, LSL #+2
   \   00000160   540090E5           LDR      R0,[R0, #+84]
   \   00000164   300084E5           STR      R0,[R4, #+48]
   \   00000168   ........           LDR      R0,??DataTable11  ;; Display_Offline
   \   0000016C   0000D0E5           LDRB     R0,[R0, #+0]
   \   00000170   000184E0           ADD      R0,R4,R0, LSL #+2
   \   00000174   540090E5           LDR      R0,[R0, #+84]
   \   00000178   340084E5           STR      R0,[R4, #+52]
   \   0000017C   ........           LDR      R0,??DataTable12  ;; Is_Autostatus_Enabled
   \   00000180   000090E5           LDR      R0,[R0, #+0]
   \   00000184   000184E0           ADD      R0,R4,R0, LSL #+2
   \   00000188   540090E5           LDR      R0,[R0, #+84]
   \   0000018C   3C0084E5           STR      R0,[R4, #+60]
   \   00000190   ........           LDR      R0,??DataTable13  ;; Is_Smiles_Enabled
   \   00000194   000090E5           LDR      R0,[R0, #+0]
   \   00000198   000184E0           ADD      R0,R4,R0, LSL #+2
   \   0000019C   540090E5           LDR      R0,[R0, #+84]
   \   000001A0   401084E5           STR      R1,[R4, #+64]
   \   000001A4   500084E5           STR      R0,[R4, #+80]
   \   000001A8   9C0084E2           ADD      R0,R4,#+156
   \   000001AC   180084E5           STR      R0,[R4, #+24]
   \   000001B0   040085E0           ADD      R0,R5,R4
   \   000001B4   1C0084E5           STR      R0,[R4, #+28]
    371            cmMS_ICONS[MM_OPEN_COLOR_CONFIG]=(int)ICON_COLOR;
   \   000001B8   041088E0           ADD      R1,R8,R4
   \   000001BC   441084E5           STR      R1,[R4, #+68]
    372            cmMS_ICONS[MM_ABOUT]=(int)ICON_ABOUT;
   \   000001C0   041089E0           ADD      R1,R9,R4
   \   000001C4   481084E5           STR      R1,[R4, #+72]
    373            cmMS_ICONS[MM_EXIT]=(int)ICON_EXIT;
   \   000001C8   04108AE0           ADD      R1,R10,R4
   \   000001CC   4C1084E5           STR      R1,[R4, #+76]
    374            cmMS_ICONS[MM_MOODS]=(int)ICON_STATUS;
   \   000001D0   380084E5           STR      R0,[R4, #+56]
    375          }
   \   000001D4   F087BDE8           POP      {R4-R10,PC}      ;; return
   \                     ??Init_MMIcon_array_0:
   \   000001D8   ........           DC32     PATH_TO_PIC
   \   000001DC   ........           DC32     `?<Constant "conference.png">`
   \   000001E0   ........           DC32     My_Presence
    376          

   \                                 In segment CODE, align 4, keep-with-next
    377          void MM_Show()
    378          {
   \                     MM_Show:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
    379            extern const int AUTOSTATUS_ENABLED;
    380            extern JABBER_STATE Jabber_state; 
    381            int n_items=0;
    382            InitMMenuArray();
    383            Init_MMIcon_array();
    384            if(Jabber_state==JS_ONLINE)
   \   00000004   34419FE5           LDR      R4,??MM_Show_0   ;; menuhdr
   \   00000008   0050A0E3           MOV      R5,#+0
   \   0000000C   ........           BL       InitMMenuArray
   \   00000010   ........           BL       Init_MMIcon_array
   \   00000014   28019FE5           LDR      R0,??MM_Show_0+0x4  ;; Jabber_state
   \   00000018   0000D0E5           LDRB     R0,[R0, #+0]
   \   0000001C   0C0050E3           CMP      R0,#+12
   \   00000020   0600001A           BNE      ??MM_Show_1
    385            {  
    386            MMenu_Contents[n_items++]=MM_CONTACT;
   \   00000024   0100A0E3           MOV      R0,#+1
   \   00000028   6000C4E5           STRB     R0,[R4, #+96]
    387            MMenu_Contents[n_items++]=MM_STATUS;
   \   0000002C   0200A0E3           MOV      R0,#+2
   \   00000030   6100C4E5           STRB     R0,[R4, #+97]
    388            MMenu_Contents[n_items++]=MM_MOODS;
   \   00000034   0900A0E3           MOV      R0,#+9
   \   00000038   6200C4E5           STRB     R0,[R4, #+98]
   \   0000003C   0350A0E3           MOV      R5,#+3
    389            //MMenu_Contents[n_items++]=MM_MUC;
    390           // MMenu_Contents[n_items++]=MM_BOOKMARK;
    391           // MMenu_Contents[n_items++]=MM_ADDCONTACT;
    392            }
    393            MMenu_Contents[n_items++]=MM_VIBRA_MODE;
   \                     ??MM_Show_1:
   \   00000040   040085E0           ADD      R0,R5,R4
   \   00000044   0610A0E3           MOV      R1,#+6
   \   00000048   6010C0E5           STRB     R1,[R0, #+96]
   \   0000004C   010085E2           ADD      R0,R5,#+1
    394            MMenu_Contents[n_items++]=MM_SOUND_MODE;
   \   00000050   041080E0           ADD      R1,R0,R4
   \   00000054   0720A0E3           MOV      R2,#+7
   \   00000058   6020C1E5           STRB     R2,[R1, #+96]
   \   0000005C   010080E2           ADD      R0,R0,#+1
    395            MMenu_Contents[n_items++]=MM_OFFCONTACT_MODE;
   \   00000060   041080E0           ADD      R1,R0,R4
   \   00000064   0820A0E3           MOV      R2,#+8
   \   00000068   6020C1E5           STRB     R2,[R1, #+96]
    396            if(AUTOSTATUS_ENABLED) MMenu_Contents[n_items++]=MM_AUTOSTATUS_MODE;
   \   0000006C   D4109FE5           LDR      R1,??MM_Show_0+0x8  ;; AUTOSTATUS_ENABLED
   \   00000070   010080E2           ADD      R0,R0,#+1
   \   00000074   001091E5           LDR      R1,[R1, #+0]
   \   00000078   000051E3           CMP      R1,#+0
   \   0000007C   0300000A           BEQ      ??MM_Show_2
   \   00000080   041080E0           ADD      R1,R0,R4
   \   00000084   0A20A0E3           MOV      R2,#+10
   \   00000088   6020C1E5           STRB     R2,[R1, #+96]
   \   0000008C   010080E2           ADD      R0,R0,#+1
    397            MMenu_Contents[n_items++]=MM_SMILE_MODE;
   \                     ??MM_Show_2:
   \   00000090   041080E0           ADD      R1,R0,R4
   \   00000094   0F20A0E3           MOV      R2,#+15
   \   00000098   6020C1E5           STRB     R2,[R1, #+96]
   \   0000009C   010080E2           ADD      R0,R0,#+1
    398            MMenu_Contents[n_items++]=MM_OPEN_CONFIG;
   \   000000A0   041080E0           ADD      R1,R0,R4
   \   000000A4   0B20A0E3           MOV      R2,#+11
   \   000000A8   6020C1E5           STRB     R2,[R1, #+96]
   \   000000AC   010080E2           ADD      R0,R0,#+1
    399            MMenu_Contents[n_items++]=MM_OPEN_COLOR_CONFIG;
   \   000000B0   041080E0           ADD      R1,R0,R4
   \   000000B4   0C20A0E3           MOV      R2,#+12
   \   000000B8   6020C1E5           STRB     R2,[R1, #+96]
   \   000000BC   010080E2           ADD      R0,R0,#+1
    400            MMenu_Contents[n_items++]=MM_ABOUT;
   \   000000C0   041080E0           ADD      R1,R0,R4
   \   000000C4   0D20A0E3           MOV      R2,#+13
   \   000000C8   6020C1E5           STRB     R2,[R1, #+96]
   \   000000CC   010080E2           ADD      R0,R0,#+1
    401            MMenu_Contents[n_items++]=MM_EXIT;
   \   000000D0   041080E0           ADD      R1,R0,R4
   \   000000D4   0E20A0E3           MOV      R2,#+14
   \   000000D8   6020C1E5           STRB     R2,[R1, #+96]
   \   000000DC   015090E2           ADDS     R5,R0,#+1
    402          
    403            if(n_items)
   \   000000E0   7080BD08           POPEQ    {R4-R6,PC}
    404            {
    405              patch_rect(&menuhdr.rc,0,YDISP,ScreenW()-1,HeaderH()+YDISP);
   \   000000E4   8A8100EF           SWI      +33162
   \   000000E8   0060A0E1           MOV      R6,R0
   \   000000EC   888100EF           SWI      +33160
   \   000000F0   181086E2           ADD      R1,R6,#+24
   \   000000F4   010040E2           SUB      R0,R0,#+1
   \   000000F8   0020A0E3           MOV      R2,#+0
   \   000000FC   B020C4E1           STRH     R2,[R4, #+0]
   \   00000100   1820A0E3           MOV      R2,#+24
   \   00000104   B220C4E1           STRH     R2,[R4, #+2]
   \   00000108   B400C4E1           STRH     R0,[R4, #+4]
   \   0000010C   B610C4E1           STRH     R1,[R4, #+6]
    406              MainMenu_ID=CreateMenu(0,0,&tmenu,&menuhdr,0,n_items,0,0);
   \   00000110   0000A0E3           MOV      R0,#+0
   \   00000114   01002DE9           PUSH     {R0}
   \   00000118   01002DE9           PUSH     {R0}
   \   0000011C   20002DE9           PUSH     {R5}
   \   00000120   01002DE9           PUSH     {R0}
   \   00000124   0430A0E1           MOV      R3,R4
   \   00000128   702084E2           ADD      R2,R4,#+112
   \   0000012C   0010A0E3           MOV      R1,#+0
   \   00000130   520100EF           SWI      +338
   \   00000134   5C0084E5           STR      R0,[R4, #+92]
   \   00000138   10D08DE2           ADD      SP,SP,#+16
    407            }
    408          }
   \   0000013C   7080BDE8           POP      {R4-R6,PC}       ;; return
   \                     ??MM_Show_0:
   \   00000140   ........           DC32     menuhdr
   \   00000144   ........           DC32     Jabber_state
   \   00000148   ........           DC32     AUTOSTATUS_ENABLED

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable8:
   \   00000000   ........           DC32     menuhdr

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable9:
   \   00000000   ........           DC32     Is_Vibra_Enabled

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable10:
   \   00000000   ........           DC32     Is_Sounds_Enabled

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable11:
   \   00000000   ........           DC32     Display_Offline

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable12:
   \   00000000   ........           DC32     Is_Autostatus_Enabled

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable13:
   \   00000000   ........           DC32     Is_Smiles_Enabled

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for menuhdr>`:
   \   00000000   000000008300       DC16 0, 0, 131, 21
   \              1500        
   \   00000008   00000000....       DC32 0H, `?<Constant "\\314\\345\\355\\376">`, 2147483647
   \              ....FFFFFF7F
   \                     `?<Initializer for cmMS_ICONS>`:
   \   00000014   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000024   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000034   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000044   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \                     `?<Initializer for icon_array>`:
   \   00000054   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0000        
   \                     `?<Initializer for MainMenu_ID>`:
   \   0000005C   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for MMenu_Contents>`:
   \   00000060   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \                     `?<Initializer for tmenu>`:
   \   00000070   08000000....       DC32 8, mmenu_keyhook, mmenu_ghook, 0H, mmenusoftkeys, mmenu_skt, 17
   \              ............
   \              00000000....
   \              ............
   \              11000000    
   \   0000008C   ........0000       DC32 menuitemhandler, 0H, 0H, 15
   \              000000000000
   \              0F000000    
   \                     `?<Initializer for ICON_INFO>`:
   \   0000009C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000000AC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000000BC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000000CC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000000DC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000000EC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000000FC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000010C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \                     `?<Initializer for ICON_STATUS>`:
   \   0000011C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000012C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000013C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000014C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000015C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000016C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000017C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000018C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \                     `?<Initializer for ICON_MUCM>`:
   \   0000019C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000001AC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000001BC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000001CC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000001DC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000001EC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000001FC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000020C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \                     `?<Initializer for ICON_BOOKMARK>`:
   \   0000021C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000022C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000023C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000024C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000025C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000026C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000027C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000028C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \                     `?<Initializer for ICON_ADDCONT>`:
   \   0000029C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000002AC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000002BC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000002CC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000002DC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000002EC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000002FC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000030C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \                     `?<Initializer for ICON_SETTING>`:
   \   0000031C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000032C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000033C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000034C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000035C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000036C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000037C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000038C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \                     `?<Initializer for ICON_COLOR>`:
   \   0000039C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000003AC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000003BC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000003CC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000003DC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000003EC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000003FC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000040C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \                     `?<Initializer for ICON_ABOUT>`:
   \   0000041C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000042C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000043C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000044C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000045C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000046C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000047C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000048C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \                     `?<Initializer for ICON_EXIT>`:
   \   0000049C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000004AC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000004BC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000004CC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000004DC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000004EC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000004FC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000050C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for mmenusoftkeys>`:
   \   00000000   000000000100       DC32 0, 1, 2
   \              000002000000

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for mmenu_sk>`:
   \   00000000   18000000           DC16 24, 0
   \   00000004   ........           DC32 `?<Constant "\\302\\373\\341\\356\\360">`
   \   00000008   01000000           DC16 1, 0
   \   0000000C   ........           DC32 `?<Constant "\\315\\340\\347\\340\\344">`
   \   00000010   3D000000           DC16 61, 0
   \   00000014   FBC0FF7F           DC32 2147467515

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for mmenu_skt>`:
   \   00000000   ........0000       DC32 mmenu_sk, 0
   \              0000        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\312\\356\\355\\362\\340\\352\\362">`:
   \   00000000   CAEEEDF2E0EA       DC8 "\312\356\355\362\340\352\362"
   \              F200        
   \   00000008   D0E5E6E8EC20       DC8 "\320\345\346\350\354 \342\350\341\360\373"
   \              E2E8E1F0FB00
   \   00000014   D0E5E6E8EC20       DC8 "\320\345\346\350\354 \347\342\363\352\340"
   \              E7E2F3EAE000
   \   00000020   CEF4F42E20EA       DC8 "\316\364\364. \352\356\355\362\340\352\362\373"
   \              EEEDF2E0EAF2
   \              FB00        
   \   0000002E   0000               DC8 0, 0
   \   00000030   C0E2F2EEF1F2       DC8 "\300\342\362\356\361\362\340\362\363\361"
   \              E0F2F3F100  
   \   0000003B   00                 DC8 0
   \   0000003C   D1F2E0F2F3F1       DC8 "\321\362\340\362\363\361"
   \              00          
   \   00000043   00                 DC8 0
   \   00000044   CDE0F1F2F0EE       DC8 "\315\340\361\362\360\356\351\352\350"
   \              E9EAE800    
   \   0000004E   0000               DC8 0, 0
   \   00000050   D6E2E5F2E000       DC8 "\326\342\345\362\340"
   \   00000056   0000               DC8 0, 0
   \   00000058   CEE120FDEBFC       DC8 "\316\341 \375\353\374\364\345..."
   \              F4E52E2E2E00
   \   00000064   C2FBF5EEE400       DC8 "\302\373\365\356\344"
   \   0000006A   0000               DC8 0, 0
   \   0000006C   D1ECE0E9EBFB       DC8 "\321\354\340\351\353\373"
   \              00          
   \   00000073   00                 DC8 0
   \   00000074   CDE0F1F2F0EE       DC8 "\315\340\361\362\360\356\345\355\350\377"
   \              E5EDE8FF00  
   \   0000007F   00                 DC8 0
   \   00000080   28EEF8E8E1EA       DC8 "(\356\370\350\341\352\340)"
   \              E02900      
   \   00000089   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "conference.png">`:
   \   00000000   636F6E666572       DC8 "conference.png"
   \              656E63652E70
   \              6E6700      
   \   0000000F   00                 DC8 0
   \   00000010   73657474696E       DC8 "settings.png"
   \              67732E706E67
   \              00          
   \   0000001D   000000             DC8 0, 0, 0
   \   00000020   636F6C6F7269       DC8 "coloricon.png"
   \              636F6E2E706E
   \              6700        
   \   0000002E   0000               DC8 0, 0
   \   00000030   61626F75742E       DC8 "about.png"
   \              706E6700    
   \   0000003A   0000               DC8 0, 0
   \   0000003C   657869742E70       DC8 "exit.png"
   \              6E6700      
   \   00000045   000000             DC8 0, 0, 0
   \   00000048   696E666F2E70       DC8 "info.png"
   \              6E6700      
   \   00000051   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Siemens natJabber Cli...">`:
   \   00000000   5369656D656E       DC8 53H, 69H, 65H, 6DH, 65H, 6EH, 73H, 20H
   \              7320        
   \   00000008   6E61744A6162       DC8 6EH, 61H, 74H, 4AH, 61H, 62H, 62H, 65H
   \              6265        
   \   00000010   7220436C6965       DC8 72H, 20H, 43H, 6CH, 69H, 65H, 6EH, 74H
   \              6E74        
   \   00000018   0A2863294B69       DC8 0AH, 28H, 63H, 29H, 4BH, 69H, 62H, 61H
   \              6261        
   \   00000020   622C2041642C       DC8 62H, 2CH, 20H, 41H, 64H, 2CH, 20H, 42H
   \              2042        
   \   00000028   6F726D616E39       DC8 6FH, 72H, 6DH, 61H, 6EH, 39H, 39H, 0AH
   \              390A        
   \   00000030   257320722569       DC8 25H, 73H, 20H, 72H, 25H, 69H, 0AH, 43H
   \              0A43        
   \   00000038   6F6D70696C65       DC8 6FH, 6DH, 70H, 69H, 6CH, 65H, 64H, 20H
   \              6420        
   \   00000040   257300             DC8 25H, 73H, 0
   \   00000043   00                 DC8 0
   \   00000044   466562203233       DC8 "Feb 23 2011"
   \              203230313100

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\314\\345\\355\\376">`:
   \   00000000   CCE5EDFE00         DC8 "\314\345\355\376"
   \   00000005   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\302\\373\\341\\356\\360">`:
   \   00000000   C2FBE1EEF000       DC8 "\302\373\341\356\360"
   \   00000006   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\315\\340\\347\\340\\344">`:
   \   00000000   CDE0E7E0E400       DC8 "\315\340\347\340\344"
   \   00000006   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\304\\345\\351\\361\\362\\342\\350\\345 \\`:
   \   00000000   C4E5E9F1F2E2       DC8 "\304\345\351\361\362\342\350\345 \355\345\350\347\342\345\361\362\355\356 \350\353\350 \355\345 \357\356\344\344\345\360\346\350\342\340\345\362\361\377!"
   \              E8E520EDE5E8
   \              E7E2E5F1F2ED
   \              EE20E8EBE820
   \              EDE520EFEEE4
   \              E4E5F0E6E8E2
   \              E0E5F2F1FF21
   \              00          
   \   0000002B   00                 DC8 0
    409          //EOL,EOF

   Maximum stack usage in bytes:

     Function          CSTACK
     --------          ------
     AboutDlg             92
     InitMMenuArray        0
     Init_MMIcon_array    32
     MM_Show              32
     menuitemhandler      72
     mmenu_ghook           4
     mmenu_keyhook         8


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     AboutDlg                        132
     mmenu_ghook                      20
     mmenu_keyhook                   356
     InitMMenuArray                   36
     menuitemhandler                 284
     menuhdr                        1308
     mmenusoftkeys                    12
     mmenu_sk                         24
     mmenu_skt                         8
     Init_MMIcon_array               484
     MM_Show                         332
     ??DataTable8                      4
     ??DataTable9                      4
     ??DataTable10                     4
     ??DataTable11                     4
     ??DataTable12                     4
     ??DataTable13                     4
     ?<Initializer for menuhdr>     1308
     ?<Initializer for mmenusoftkeys>
                                      12
     ?<Initializer for mmenu_sk>      24
     ?<Initializer for mmenu_skt>      8
     ?<Constant "\312\356\355\362\340\352\362">
                                     140
     ?<Constant "conference.png">     84
     ?<Constant "Siemens natJabber Cli...">
                                      80
     ?<Constant "\314\345\355\376">    8
     ?<Constant "\302\373\341\356\360">
                                       8
     ?<Constant "\315\340\347\340\344">
                                       8
     ?<Constant "\304\345\351\361\362\342\350\345 \
                                      44
      Others                         148

 
 1 804 bytes in segment CODE
   372 bytes in segment DATA_C
 1 352 bytes in segment DATA_I
 1 352 bytes in segment DATA_ID
    12 bytes in segment INITTAB
 
 1 668 bytes of CODE  memory (+ 148 bytes shared)
 1 724 bytes of CONST memory
 1 352 bytes of DATA  memory

Errors: none
Warnings: none
