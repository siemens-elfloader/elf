##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION    23/Feb/2011  16:37:58 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  C:\arm\siejc\color.c                                 #
#    Command line    =  C:\arm\siejc\color.c -D NEWSGOLD -D ELKA             #
#                       --preprocess C:\arm\siejc\Release_ELKA\List\ -lC     #
#                       C:\arm\siejc\Release_ELKA\List\ -o                   #
#                       C:\arm\siejc\Release_ELKA\Obj\ -s9 --no_unroll       #
#                       --cpu_mode arm --endian little --cpu ARM926EJ-S      #
#                       --stack_align 4 --interwork -e --fpu None            #
#                       --dlib_config "C:\arm2\Embedded Workbench 4.0        #
#                       Evaluation\ARM\LIB\dl5tpainl8f.h" -I                 #
#                       "C:\arm2\Embedded Workbench 4.0                      #
#                       Evaluation\ARM\INC\" --inline_threshold=2            #
#    List file       =  C:\arm\siejc\Release_ELKA\List\color.lst             #
#    Object file     =  C:\arm\siejc\Release_ELKA\Obj\color.r79              #
#                                                                            #
#                                                                            #
##############################################################################

C:\arm\siejc\color.c
      1          #include "../inc/swilib.h"
      2          #include "color.h"
      3          #include "string_util.h"
      4          #include "lang.h"
      5          #include "rect_patcher.h"
      6          #include "conf_loader.h"
      7          
      8          extern const char color_PATH[];

   \                                 In segment DATA_Z, align 4, align-sorted
      9          char * cur_color_name;
   \                     cur_color_name:
   \   00000000                      DS8 4
     10          
     11          // Цвета
     12          

   \                                 In segment DATA_Z, align 4, align-sorted
     13          RGBA MAINBG_NOT_CONNECTED;
   \                     MAINBG_NOT_CONNECTED:
   \   00000000                      DS8 4

   \                                 In segment DATA_Z, align 4, align-sorted
     14          RGBA MAINBG_CONNECTED;
   \                     MAINBG_CONNECTED:
   \   00000000                      DS8 4

   \                                 In segment DATA_Z, align 4, align-sorted
     15          RGBA MAINBG_ERROR;
   \                     MAINBG_ERROR:
   \   00000000                      DS8 4

   \                                 In segment DATA_I, align 4, align-sorted
     16          RGBA MAINFONT_NOT_CONNECTED = {200, 200, 200, 100};
   \                     MAINFONT_NOT_CONNECTED:
   \   00000000                      DS8 4
   \   00000004                      REQUIRE `?<Initializer for MAINFONT_NOT_CONNECTED>`

   \                                 In segment DATA_Z, align 4, align-sorted
     17          RGBA MAINFONT_CONNECTED;
   \                     MAINFONT_CONNECTED:
   \   00000000                      DS8 4

   \                                 In segment DATA_Z, align 4, align-sorted
     18          RGBA MAINFONT_ERROR;
   \                     MAINFONT_ERROR:
   \   00000000                      DS8 4

   \                                 In segment DATA_Z, align 4, align-sorted
     19          RGBA MESSAGEWIN_BGCOLOR;
   \                     MESSAGEWIN_BGCOLOR:
   \   00000000                      DS8 4

   \                                 In segment DATA_Z, align 4, align-sorted
     20          RGBA MESSAGEWIN_TITLE_BGCOLOR;
   \                     MESSAGEWIN_TITLE_BGCOLOR:
   \   00000000                      DS8 4

   \                                 In segment DATA_Z, align 4, align-sorted
     21          RGBA MESSAGEWIN_TITLE_FONT;
   \                     MESSAGEWIN_TITLE_FONT:
   \   00000000                      DS8 4

   \                                 In segment DATA_Z, align 4, align-sorted
     22          RGBA MESSAGEWIN_MY_BGCOLOR;
   \                     MESSAGEWIN_MY_BGCOLOR:
   \   00000000                      DS8 4

   \                                 In segment DATA_Z, align 4, align-sorted
     23          RGBA MESSAGEWIN_CH_BGCOLOR;
   \                     MESSAGEWIN_CH_BGCOLOR:
   \   00000000                      DS8 4

   \                                 In segment DATA_Z, align 4, align-sorted
     24          RGBA MESSAGEWIN_GCHAT_BGCOLOR_1;
   \                     MESSAGEWIN_GCHAT_BGCOLOR_1:
   \   00000000                      DS8 4

   \                                 In segment DATA_Z, align 4, align-sorted
     25          RGBA MESSAGEWIN_CURSOR_BGCOLOR;
   \                     MESSAGEWIN_CURSOR_BGCOLOR:
   \   00000000                      DS8 4

   \                                 In segment DATA_Z, align 4, align-sorted
     26          RGBA MESSAGEWIN_GCHAT_BGCOLOR_2;
   \                     MESSAGEWIN_GCHAT_BGCOLOR_2:
   \   00000000                      DS8 4

   \                                 In segment DATA_Z, align 4, align-sorted
     27          RGBA MESSAGEWIN_SYS_BGCOLOR; 
   \                     MESSAGEWIN_SYS_BGCOLOR:
   \   00000000                      DS8 4

   \                                 In segment DATA_Z, align 4, align-sorted
     28          RGBA MESSAGEWIN_STATUS_BGCOLOR; 
   \                     MESSAGEWIN_STATUS_BGCOLOR:
   \   00000000                      DS8 4

   \                                 In segment DATA_Z, align 4, align-sorted
     29          RGBA MESSAGEWIN_CHAT_FONT;
   \                     MESSAGEWIN_CHAT_FONT:
   \   00000000                      DS8 4

   \                                 In segment DATA_Z, align 4, align-sorted
     30          RGBA CURSOR;
   \                     CURSOR:
   \   00000000                      DS8 4

   \                                 In segment DATA_Z, align 4, align-sorted
     31          RGBA CURSOR_BORDER;        
   \                     CURSOR_BORDER:
   \   00000000                      DS8 4

   \                                 In segment DATA_Z, align 4, align-sorted
     32          RGBA CLIST_F_COLOR_0;        
   \                     CLIST_F_COLOR_0:
   \   00000000                      DS8 4

   \                                 In segment DATA_Z, align 4, align-sorted
     33          RGBA CLIST_F_COLOR_1;        
   \                     CLIST_F_COLOR_1:
   \   00000000                      DS8 4

   \                                 In segment DATA_Z, align 4, align-sorted
     34          RGBA CONTACT_BG_0;         
   \                     CONTACT_BG_0:
   \   00000000                      DS8 4

   \                                 In segment DATA_Z, align 4, align-sorted
     35          RGBA CONTACT_BG_1;
   \                     CONTACT_BG_1:
   \   00000000                      DS8 4

   \                                 In segment DATA_Z, align 4, align-sorted
     36          RGBA lineColor;    
   \                     lineColor:
   \   00000000                      DS8 4

   \                                 In segment DATA_Z, align 4, align-sorted
     37          RGBA borderColor;
   \                     borderColor:
   \   00000000                      DS8 4

   \                                 In segment DATA_Z, align 4, align-sorted
     38          RGBA PRES_COLORS[PRES_COUNT];
   \                     PRES_COLORS:
   \   00000000                      DS8 48
     39          
     40          /* 
     41            Инициализация цветов.
     42            В параметр нужно передать буффер конфига цветов
     43          */

   \                                 In segment CODE, align 4, keep-with-next
     44          RGBA Char4ToRGBA(const char in[4])
     45          {
   \                     Char4ToRGBA:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
     46            RGBA result;
     47            result.r= in[0];
   \   00000008   0020D0E5           LDRB     R2,[R0, #+0]
     48            result.g= in[1];
     49            result.b= in[2];
     50            result.a= in[3];
     51            return result;
   \   0000000C   0D30A0E1           MOV      R3,SP
   \   00000010   0020CDE5           STRB     R2,[SP, #+0]
   \   00000014   0120D0E5           LDRB     R2,[R0, #+1]
   \   00000018   0120CDE5           STRB     R2,[SP, #+1]
   \   0000001C   0220D0E5           LDRB     R2,[R0, #+2]
   \   00000020   0220CDE5           STRB     R2,[SP, #+2]
   \   00000024   0300D0E5           LDRB     R0,[R0, #+3]
   \   00000028   0300CDE5           STRB     R0,[SP, #+3]
   \   0000002C   ........           _BLF     ??ldr32b_a,??rA??ldr32b_a
   \   00000030   0280BDE8           POP      {R1,PC}          ;; return
     52          }
     53          

   \                                 In segment CODE, align 4, keep-with-next
     54          void InitColor()
     55          {
     56            extern const char CURSOR_c[];
     57            CURSOR = Char4ToRGBA(CURSOR_c);
   \                     InitColor:
   \   00000000   24029FE5           LDR      R0,??InitColor_0  ;; CURSOR_c
   \   00000004   10402DE9           PUSH     {R4,LR}
     58          
     59            extern const char CURSOR_BORDER_c[];
     60            CURSOR_BORDER = Char4ToRGBA(CURSOR_BORDER_c);
     61            
     62            extern const char CLIST_F_COLOR_0_c[];
     63            CLIST_F_COLOR_0 = Char4ToRGBA(CLIST_F_COLOR_0_c);
     64            
     65            extern const char CLIST_F_COLOR_1_c[];
     66            CLIST_F_COLOR_1 = Char4ToRGBA(CLIST_F_COLOR_1_c);
     67            
     68            extern const char CONTACT_BG_0_c[];
     69            CONTACT_BG_0 = Char4ToRGBA(CONTACT_BG_0_c);
     70            
     71            extern const char CONTACT_BG_1_c[];
     72            CONTACT_BG_1 = Char4ToRGBA(CONTACT_BG_1_c);
     73            
     74          //  extern const char lineColor_c[];
     75          //  lineColor = Char4ToRGBA(lineColor_c);
     76            
     77          //  extern const char borderColor_c[];
     78          //  borderColor = Char4ToRGBA(borderColor_c);
     79            
     80            extern const char MAINBG_NOT_CONNECTED_c[];
     81            MAINBG_NOT_CONNECTED = Char4ToRGBA(MAINBG_NOT_CONNECTED_c);
     82            
     83            extern const char MAINBG_CONNECTED_c[];
     84            MAINBG_CONNECTED = Char4ToRGBA(MAINBG_CONNECTED_c);
     85            
     86            extern const char MAINBG_ERROR_c[];
     87            MAINBG_ERROR = Char4ToRGBA(MAINBG_ERROR_c);
     88            
     89            extern const char MAINFONT_CONNECTED_c[];
     90            MAINFONT_CONNECTED = Char4ToRGBA(MAINFONT_CONNECTED_c);
     91            
     92            extern const char MAINFONT_ERROR_c[];
     93            MAINFONT_ERROR = Char4ToRGBA(MAINFONT_ERROR_c);
     94            
     95            extern const char MESSAGEWIN_BGCOLOR_c[];
     96            MESSAGEWIN_BGCOLOR = Char4ToRGBA(MESSAGEWIN_BGCOLOR_c);
     97            
     98            extern const char MESSAGEWIN_CURSOR_BGCOLOR_c[];
     99            MESSAGEWIN_CURSOR_BGCOLOR = Char4ToRGBA(MESSAGEWIN_CURSOR_BGCOLOR_c);
    100            
    101            extern const char MESSAGEWIN_TITLE_BGCOLOR_c[];
    102            MESSAGEWIN_TITLE_BGCOLOR = Char4ToRGBA(MESSAGEWIN_TITLE_BGCOLOR_c);
    103            
    104            extern const char MESSAGEWIN_TITLE_FONT_c[];
    105            MESSAGEWIN_TITLE_FONT = Char4ToRGBA(MESSAGEWIN_TITLE_FONT_c);
    106            
    107            extern const char MESSAGEWIN_MY_BGCOLOR_c[];
    108            MESSAGEWIN_MY_BGCOLOR = Char4ToRGBA(MESSAGEWIN_MY_BGCOLOR_c);
    109            
    110            extern const char MESSAGEWIN_CH_BGCOLOR_c[];
    111            MESSAGEWIN_CH_BGCOLOR = Char4ToRGBA(MESSAGEWIN_CH_BGCOLOR_c);
    112            
    113            extern const char MESSAGEWIN_GCHAT_BGCOLOR_1_c[];
    114            MESSAGEWIN_GCHAT_BGCOLOR_1 = Char4ToRGBA(MESSAGEWIN_GCHAT_BGCOLOR_1_c);
    115            
    116            extern const char MESSAGEWIN_GCHAT_BGCOLOR_2_c[];
    117            MESSAGEWIN_GCHAT_BGCOLOR_2 = Char4ToRGBA(MESSAGEWIN_GCHAT_BGCOLOR_2_c);
    118            
    119            extern const char MESSAGEWIN_SYS_BGCOLOR_c[];
    120            MESSAGEWIN_SYS_BGCOLOR = Char4ToRGBA(MESSAGEWIN_SYS_BGCOLOR_c);
    121            
    122            extern const char MESSAGEWIN_STATUS_BGCOLOR_c[];
    123            MESSAGEWIN_STATUS_BGCOLOR = Char4ToRGBA(MESSAGEWIN_STATUS_BGCOLOR_c);
    124            
    125            extern const char MESSAGEWIN_CHAT_FONT_c[];
    126            MESSAGEWIN_CHAT_FONT = Char4ToRGBA(MESSAGEWIN_CHAT_FONT_c);
    127            
    128            extern const char OnlineColor_c[];
    129            PRES_COLORS[0] = Char4ToRGBA(OnlineColor_c);
   \   00000008   20429FE5           LDR      R4,??InitColor_0+0x4  ;; PRES_COLORS
   \   0000000C   ........           BL       Char4ToRGBA
   \   00000010   1C329FE5           LDR      R3,??InitColor_0+0x8  ;; CURSOR
   \   00000014   ........           _BLF     ??str32b_a,??rA??str32b_a
   \   00000018   18029FE5           LDR      R0,??InitColor_0+0xC  ;; CURSOR_BORDER_c
   \   0000001C   ........           BL       Char4ToRGBA
   \   00000020   14329FE5           LDR      R3,??InitColor_0+0x10  ;; CURSOR_BORDER
   \   00000024   ........           _BLF     ??str32b_a,??rA??str32b_a
   \   00000028   10029FE5           LDR      R0,??InitColor_0+0x14  ;; CLIST_F_COLOR_0_c
   \   0000002C   ........           BL       Char4ToRGBA
   \   00000030   0C329FE5           LDR      R3,??InitColor_0+0x18  ;; CLIST_F_COLOR_0
   \   00000034   ........           _BLF     ??str32b_a,??rA??str32b_a
   \   00000038   08029FE5           LDR      R0,??InitColor_0+0x1C  ;; CLIST_F_COLOR_1_c
   \   0000003C   ........           BL       Char4ToRGBA
   \   00000040   04329FE5           LDR      R3,??InitColor_0+0x20  ;; CLIST_F_COLOR_1
   \   00000044   ........           _BLF     ??str32b_a,??rA??str32b_a
   \   00000048   00029FE5           LDR      R0,??InitColor_0+0x24  ;; CONTACT_BG_0_c
   \   0000004C   ........           BL       Char4ToRGBA
   \   00000050   FC319FE5           LDR      R3,??InitColor_0+0x28  ;; CONTACT_BG_0
   \   00000054   ........           _BLF     ??str32b_a,??rA??str32b_a
   \   00000058   F8019FE5           LDR      R0,??InitColor_0+0x2C  ;; CONTACT_BG_1_c
   \   0000005C   ........           BL       Char4ToRGBA
   \   00000060   F4319FE5           LDR      R3,??InitColor_0+0x30  ;; CONTACT_BG_1
   \   00000064   ........           _BLF     ??str32b_a,??rA??str32b_a
   \   00000068   F0019FE5           LDR      R0,??InitColor_0+0x34  ;; MAINBG_NOT_CONNECTED_c
   \   0000006C   ........           BL       Char4ToRGBA
   \   00000070   EC319FE5           LDR      R3,??InitColor_0+0x38  ;; MAINBG_NOT_CONNECTED
   \   00000074   ........           _BLF     ??str32b_a,??rA??str32b_a
   \   00000078   E8019FE5           LDR      R0,??InitColor_0+0x3C  ;; MAINBG_CONNECTED_c
   \   0000007C   ........           BL       Char4ToRGBA
   \   00000080   E4319FE5           LDR      R3,??InitColor_0+0x40  ;; MAINBG_CONNECTED
   \   00000084   ........           _BLF     ??str32b_a,??rA??str32b_a
   \   00000088   E0019FE5           LDR      R0,??InitColor_0+0x44  ;; MAINBG_ERROR_c
   \   0000008C   ........           BL       Char4ToRGBA
   \   00000090   DC319FE5           LDR      R3,??InitColor_0+0x48  ;; MAINBG_ERROR
   \   00000094   ........           _BLF     ??str32b_a,??rA??str32b_a
   \   00000098   D8019FE5           LDR      R0,??InitColor_0+0x4C  ;; MAINFONT_CONNECTED_c
   \   0000009C   ........           BL       Char4ToRGBA
   \   000000A0   D4319FE5           LDR      R3,??InitColor_0+0x50  ;; MAINFONT_CONNECTED
   \   000000A4   ........           _BLF     ??str32b_a,??rA??str32b_a
   \   000000A8   D0019FE5           LDR      R0,??InitColor_0+0x54  ;; MAINFONT_ERROR_c
   \   000000AC   ........           BL       Char4ToRGBA
   \   000000B0   CC319FE5           LDR      R3,??InitColor_0+0x58  ;; MAINFONT_ERROR
   \   000000B4   ........           _BLF     ??str32b_a,??rA??str32b_a
   \   000000B8   C8019FE5           LDR      R0,??InitColor_0+0x5C  ;; MESSAGEWIN_BGCOLOR_c
   \   000000BC   ........           BL       Char4ToRGBA
   \   000000C0   C4319FE5           LDR      R3,??InitColor_0+0x60  ;; MESSAGEWIN_BGCOLOR
   \   000000C4   ........           _BLF     ??str32b_a,??rA??str32b_a
   \   000000C8   C0019FE5           LDR      R0,??InitColor_0+0x64  ;; MESSAGEWIN_CURSOR_BGCOLOR_c
   \   000000CC   ........           BL       Char4ToRGBA
   \   000000D0   BC319FE5           LDR      R3,??InitColor_0+0x68  ;; MESSAGEWIN_CURSOR_BGCOLOR
   \   000000D4   ........           _BLF     ??str32b_a,??rA??str32b_a
   \   000000D8   B8019FE5           LDR      R0,??InitColor_0+0x6C  ;; MESSAGEWIN_TITLE_BGCOLOR_c
   \   000000DC   ........           BL       Char4ToRGBA
   \   000000E0   B4319FE5           LDR      R3,??InitColor_0+0x70  ;; MESSAGEWIN_TITLE_BGCOLOR
   \   000000E4   ........           _BLF     ??str32b_a,??rA??str32b_a
   \   000000E8   B0019FE5           LDR      R0,??InitColor_0+0x74  ;; MESSAGEWIN_TITLE_FONT_c
   \   000000EC   ........           BL       Char4ToRGBA
   \   000000F0   AC319FE5           LDR      R3,??InitColor_0+0x78  ;; MESSAGEWIN_TITLE_FONT
   \   000000F4   ........           _BLF     ??str32b_a,??rA??str32b_a
   \   000000F8   A8019FE5           LDR      R0,??InitColor_0+0x7C  ;; MESSAGEWIN_MY_BGCOLOR_c
   \   000000FC   ........           BL       Char4ToRGBA
   \   00000100   A4319FE5           LDR      R3,??InitColor_0+0x80  ;; MESSAGEWIN_MY_BGCOLOR
   \   00000104   ........           _BLF     ??str32b_a,??rA??str32b_a
   \   00000108   A0019FE5           LDR      R0,??InitColor_0+0x84  ;; MESSAGEWIN_CH_BGCOLOR_c
   \   0000010C   ........           BL       Char4ToRGBA
   \   00000110   9C319FE5           LDR      R3,??InitColor_0+0x88  ;; MESSAGEWIN_CH_BGCOLOR
   \   00000114   ........           _BLF     ??str32b_a,??rA??str32b_a
   \   00000118   98019FE5           LDR      R0,??InitColor_0+0x8C  ;; MESSAGEWIN_GCHAT_BGCOLOR_1_c
   \   0000011C   ........           BL       Char4ToRGBA
   \   00000120   94319FE5           LDR      R3,??InitColor_0+0x90  ;; MESSAGEWIN_GCHAT_BGCOLOR_1
   \   00000124   ........           _BLF     ??str32b_a,??rA??str32b_a
   \   00000128   90019FE5           LDR      R0,??InitColor_0+0x94  ;; MESSAGEWIN_GCHAT_BGCOLOR_2_c
   \   0000012C   ........           BL       Char4ToRGBA
   \   00000130   8C319FE5           LDR      R3,??InitColor_0+0x98  ;; MESSAGEWIN_GCHAT_BGCOLOR_2
   \   00000134   ........           _BLF     ??str32b_a,??rA??str32b_a
   \   00000138   88019FE5           LDR      R0,??InitColor_0+0x9C  ;; MESSAGEWIN_SYS_BGCOLOR_c
   \   0000013C   ........           BL       Char4ToRGBA
   \   00000140   84319FE5           LDR      R3,??InitColor_0+0xA0  ;; MESSAGEWIN_SYS_BGCOLOR
   \   00000144   ........           _BLF     ??str32b_a,??rA??str32b_a
   \   00000148   80019FE5           LDR      R0,??InitColor_0+0xA4  ;; MESSAGEWIN_STATUS_BGCOLOR_c
   \   0000014C   ........           BL       Char4ToRGBA
   \   00000150   7C319FE5           LDR      R3,??InitColor_0+0xA8  ;; MESSAGEWIN_STATUS_BGCOLOR
   \   00000154   ........           _BLF     ??str32b_a,??rA??str32b_a
   \   00000158   78019FE5           LDR      R0,??InitColor_0+0xAC  ;; MESSAGEWIN_CHAT_FONT_c
   \   0000015C   ........           BL       Char4ToRGBA
   \   00000160   74319FE5           LDR      R3,??InitColor_0+0xB0  ;; MESSAGEWIN_CHAT_FONT
   \   00000164   ........           _BLF     ??str32b_a,??rA??str32b_a
   \   00000168   70019FE5           LDR      R0,??InitColor_0+0xB4  ;; OnlineColor_c
   \   0000016C   ........           BL       Char4ToRGBA
   \   00000170   0430A0E1           MOV      R3,R4
   \   00000174   ........           _BLF     ??str32b_a,??rA??str32b_a
    130          
    131            extern const char ChatColor_c[];
    132            PRES_COLORS[1] = Char4ToRGBA(ChatColor_c);
   \   00000178   64019FE5           LDR      R0,??InitColor_0+0xB8  ;; ChatColor_c
   \   0000017C   ........           BL       Char4ToRGBA
   \   00000180   043084E2           ADD      R3,R4,#+4
   \   00000184   ........           _BLF     ??str32b_a,??rA??str32b_a
    133          
    134            extern const char AwayColor_c[];
    135            PRES_COLORS[2] = Char4ToRGBA(AwayColor_c);
   \   00000188   58019FE5           LDR      R0,??InitColor_0+0xBC  ;; AwayColor_c
   \   0000018C   ........           BL       Char4ToRGBA
   \   00000190   083084E2           ADD      R3,R4,#+8
   \   00000194   ........           _BLF     ??str32b_a,??rA??str32b_a
    136          
    137            extern const char XAColor_c[];
    138            PRES_COLORS[3] = Char4ToRGBA(XAColor_c);
   \   00000198   4C019FE5           LDR      R0,??InitColor_0+0xC0  ;; XAColor_c
   \   0000019C   ........           BL       Char4ToRGBA
   \   000001A0   0C3084E2           ADD      R3,R4,#+12
   \   000001A4   ........           _BLF     ??str32b_a,??rA??str32b_a
    139          
    140            extern const char DNDColor_c[];
    141            PRES_COLORS[4] = Char4ToRGBA(DNDColor_c);
   \   000001A8   40019FE5           LDR      R0,??InitColor_0+0xC4  ;; DNDColor_c
   \   000001AC   ........           BL       Char4ToRGBA
   \   000001B0   103084E2           ADD      R3,R4,#+16
   \   000001B4   ........           _BLF     ??str32b_a,??rA??str32b_a
    142          
    143            extern const char InvisibleColor_c[];
    144            PRES_COLORS[5] = Char4ToRGBA(InvisibleColor_c);
   \   000001B8   34019FE5           LDR      R0,??InitColor_0+0xC8  ;; InvisibleColor_c
   \   000001BC   ........           BL       Char4ToRGBA
   \   000001C0   143084E2           ADD      R3,R4,#+20
   \   000001C4   ........           _BLF     ??str32b_a,??rA??str32b_a
    145          
    146            extern const char OfflineColor_c[];
    147            PRES_COLORS[6] = Char4ToRGBA(OfflineColor_c);
   \   000001C8   28019FE5           LDR      R0,??InitColor_0+0xCC  ;; OfflineColor_c
   \   000001CC   ........           BL       Char4ToRGBA
   \   000001D0   183084E2           ADD      R3,R4,#+24
   \   000001D4   ........           _BLF     ??str32b_a,??rA??str32b_a
    148          
    149            extern const char ErrorColor_c[];
    150            PRES_COLORS[7] = Char4ToRGBA(ErrorColor_c);
   \   000001D8   1C019FE5           LDR      R0,??InitColor_0+0xD0  ;; ErrorColor_c
   \   000001DC   ........           BL       Char4ToRGBA
   \   000001E0   1C3084E2           ADD      R3,R4,#+28
   \   000001E4   ........           _BLF     ??str32b_a,??rA??str32b_a
    151          
    152            extern const char SubscribeColor_c[];
    153            PRES_COLORS[8] = Char4ToRGBA(SubscribeColor_c);
   \   000001E8   10019FE5           LDR      R0,??InitColor_0+0xD4  ;; SubscribeColor_c
   \   000001EC   ........           BL       Char4ToRGBA
   \   000001F0   203084E2           ADD      R3,R4,#+32
   \   000001F4   ........           _BLF     ??str32b_a,??rA??str32b_a
    154          
    155            extern const char SubscribedColor_c[];
    156            PRES_COLORS[9] = Char4ToRGBA(SubscribedColor_c);
   \   000001F8   04019FE5           LDR      R0,??InitColor_0+0xD8  ;; SubscribedColor_c
   \   000001FC   ........           BL       Char4ToRGBA
   \   00000200   243084E2           ADD      R3,R4,#+36
   \   00000204   ........           _BLF     ??str32b_a,??rA??str32b_a
    157          
    158            extern const char UnsubscribeColor_c[];
    159            PRES_COLORS[10] = Char4ToRGBA(UnsubscribeColor_c);
   \   00000208   F8009FE5           LDR      R0,??InitColor_0+0xDC  ;; UnsubscribeColor_c
   \   0000020C   ........           BL       Char4ToRGBA
   \   00000210   283084E2           ADD      R3,R4,#+40
   \   00000214   ........           _BLF     ??str32b_a,??rA??str32b_a
    160          
    161            extern const char UnsubscribedColor_c[];
    162            PRES_COLORS[11] = Char4ToRGBA(UnsubscribedColor_c);
   \   00000218   EC009FE5           LDR      R0,??InitColor_0+0xE0  ;; UnsubscribedColor_c
   \   0000021C   ........           BL       Char4ToRGBA
   \   00000220   2C3084E2           ADD      R3,R4,#+44
   \   00000224   ........           _BLF     ??str32b_a,??rA??str32b_a
    163          }
   \   00000228   1080BDE8           POP      {R4,PC}          ;; return
   \                     ??InitColor_0:
   \   0000022C   ........           DC32     CURSOR_c
   \   00000230   ........           DC32     PRES_COLORS
   \   00000234   ........           DC32     CURSOR
   \   00000238   ........           DC32     CURSOR_BORDER_c
   \   0000023C   ........           DC32     CURSOR_BORDER
   \   00000240   ........           DC32     CLIST_F_COLOR_0_c
   \   00000244   ........           DC32     CLIST_F_COLOR_0
   \   00000248   ........           DC32     CLIST_F_COLOR_1_c
   \   0000024C   ........           DC32     CLIST_F_COLOR_1
   \   00000250   ........           DC32     CONTACT_BG_0_c
   \   00000254   ........           DC32     CONTACT_BG_0
   \   00000258   ........           DC32     CONTACT_BG_1_c
   \   0000025C   ........           DC32     CONTACT_BG_1
   \   00000260   ........           DC32     MAINBG_NOT_CONNECTED_c
   \   00000264   ........           DC32     MAINBG_NOT_CONNECTED
   \   00000268   ........           DC32     MAINBG_CONNECTED_c
   \   0000026C   ........           DC32     MAINBG_CONNECTED
   \   00000270   ........           DC32     MAINBG_ERROR_c
   \   00000274   ........           DC32     MAINBG_ERROR
   \   00000278   ........           DC32     MAINFONT_CONNECTED_c
   \   0000027C   ........           DC32     MAINFONT_CONNECTED
   \   00000280   ........           DC32     MAINFONT_ERROR_c
   \   00000284   ........           DC32     MAINFONT_ERROR
   \   00000288   ........           DC32     MESSAGEWIN_BGCOLOR_c
   \   0000028C   ........           DC32     MESSAGEWIN_BGCOLOR
   \   00000290   ........           DC32     MESSAGEWIN_CURSOR_BGCOLOR_c
   \   00000294   ........           DC32     MESSAGEWIN_CURSOR_BGCOLOR
   \   00000298   ........           DC32     MESSAGEWIN_TITLE_BGCOLOR_c
   \   0000029C   ........           DC32     MESSAGEWIN_TITLE_BGCOLOR
   \   000002A0   ........           DC32     MESSAGEWIN_TITLE_FONT_c
   \   000002A4   ........           DC32     MESSAGEWIN_TITLE_FONT
   \   000002A8   ........           DC32     MESSAGEWIN_MY_BGCOLOR_c
   \   000002AC   ........           DC32     MESSAGEWIN_MY_BGCOLOR
   \   000002B0   ........           DC32     MESSAGEWIN_CH_BGCOLOR_c
   \   000002B4   ........           DC32     MESSAGEWIN_CH_BGCOLOR
   \   000002B8   ........           DC32     MESSAGEWIN_GCHAT_BGCOLOR_1_c
   \   000002BC   ........           DC32     MESSAGEWIN_GCHAT_BGCOLOR_1
   \   000002C0   ........           DC32     MESSAGEWIN_GCHAT_BGCOLOR_2_c
   \   000002C4   ........           DC32     MESSAGEWIN_GCHAT_BGCOLOR_2
   \   000002C8   ........           DC32     MESSAGEWIN_SYS_BGCOLOR_c
   \   000002CC   ........           DC32     MESSAGEWIN_SYS_BGCOLOR
   \   000002D0   ........           DC32     MESSAGEWIN_STATUS_BGCOLOR_c
   \   000002D4   ........           DC32     MESSAGEWIN_STATUS_BGCOLOR
   \   000002D8   ........           DC32     MESSAGEWIN_CHAT_FONT_c
   \   000002DC   ........           DC32     MESSAGEWIN_CHAT_FONT
   \   000002E0   ........           DC32     OnlineColor_c
   \   000002E4   ........           DC32     ChatColor_c
   \   000002E8   ........           DC32     AwayColor_c
   \   000002EC   ........           DC32     XAColor_c
   \   000002F0   ........           DC32     DNDColor_c
   \   000002F4   ........           DC32     InvisibleColor_c
   \   000002F8   ........           DC32     OfflineColor_c
   \   000002FC   ........           DC32     ErrorColor_c
   \   00000300   ........           DC32     SubscribeColor_c
   \   00000304   ........           DC32     SubscribedColor_c
   \   00000308   ........           DC32     UnsubscribeColor_c
   \   0000030C   ........           DC32     UnsubscribedColor_c
    164          
    165          /* Меню выбора цветовой схемы */
    166          typedef struct
    167          {
    168            void * next;
    169            char cfgname[64];
    170            char fullpath[128];
    171          }SEL_COLOR;
    172          

   \                                 In segment CODE, align 4, keep-with-next
    173          int select_color_menu_onkey(void *gui, GUI_MSG *msg)
    174          {
   \                     select_color_menu_onkey:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0050A0E1           MOV      R5,R0
   \   00000008   0160A0E1           MOV      R6,R1
    175            SEL_COLOR * sbtop = MenuGetUserPointer(gui);
   \   0000000C   E00100EF           SWI      +480
   \   00000010   0040A0E1           MOV      R4,R0
    176            if (msg->keys==0x3D)
   \   00000014   F200D6E1           LDRSH    R0,[R6, #+2]
   \   00000018   3D0050E3           CMP      R0,#+61
   \   0000001C   1900001A           BNE      ??select_color_menu_onkey_0
    177            {
    178              int i=GetCurMenuItem(gui);
   \   00000020   0500A0E1           MOV      R0,R5
   \   00000024   8F0100EF           SWI      +399
    179              for (int n = 0; n != i; n ++)
   \   00000028   0010A0E3           MOV      R1,#+0
   \   0000002C   000050E3           CMP      R0,#+0
   \   00000030   0300000A           BEQ      ??select_color_menu_onkey_1
    180                sbtop = sbtop->next;
   \                     ??select_color_menu_onkey_2:
   \   00000034   004094E5           LDR      R4,[R4, #+0]
   \   00000038   011081E2           ADD      R1,R1,#+1
   \   0000003C   000051E1           CMP      R1,R0
   \   00000040   FBFFFF1A           BNE      ??select_color_menu_onkey_2
    181              if (sbtop)
   \                     ??select_color_menu_onkey_1:
   \   00000044   000054E3           CMP      R4,#+0
   \   00000048   0E00000A           BEQ      ??select_color_menu_onkey_0
    182              {
    183                if (cur_color_name) mfree(cur_color_name);
   \   0000004C   ........           LDR      R7,??DataTable7  ;; cur_color_name
   \   00000050   000097E5           LDR      R0,[R7, #+0]
   \   00000054   000050E3           CMP      R0,#+0
   \   00000058   0000000A           BEQ      ??select_color_menu_onkey_3
   \   0000005C   150000EF           SWI      +21
    184                cur_color_name = (char *)malloc(32);
   \                     ??select_color_menu_onkey_3:
   \   00000060   2000A0E3           MOV      R0,#+32
   \   00000064   140000EF           SWI      +20
   \   00000068   000087E5           STR      R0,[R7, #+0]
    185                strcpy(cur_color_name, sbtop->cfgname);
   \   0000006C   041084E2           ADD      R1,R4,#+4
   \   00000070   1A0000EF           SWI      +26
    186                if (InitColorSet(cur_color_name))
   \   00000074   000097E5           LDR      R0,[R7, #+0]
   \   00000078   ........           BL       InitColorSet
   \   0000007C   000050E3           CMP      R0,#+0
    187                  return (1);
   \   00000080   0100A013           MOVNE    R0,#+1
   \   00000084   F080BD18           POPNE    {R4-R7,PC}
    188              }
    189            }
    190            if (msg->keys==0x18)
   \                     ??select_color_menu_onkey_0:
   \   00000088   F200D6E1           LDRSH    R0,[R6, #+2]
   \   0000008C   180050E3           CMP      R0,#+24
   \   00000090   1900001A           BNE      ??select_color_menu_onkey_4
    191            {
    192              int i=GetCurMenuItem(gui);
   \   00000094   0500A0E1           MOV      R0,R5
   \   00000098   8F0100EF           SWI      +399
    193              for (int n = 0; n != i; n ++)
   \   0000009C   0010A0E3           MOV      R1,#+0
   \   000000A0   000050E3           CMP      R0,#+0
   \   000000A4   0300000A           BEQ      ??select_color_menu_onkey_5
    194                sbtop = sbtop->next;
   \                     ??select_color_menu_onkey_6:
   \   000000A8   004094E5           LDR      R4,[R4, #+0]
   \   000000AC   011081E2           ADD      R1,R1,#+1
   \   000000B0   000051E1           CMP      R1,R0
   \   000000B4   FBFFFF1A           BNE      ??select_color_menu_onkey_6
    195              if (sbtop)
   \                     ??select_color_menu_onkey_5:
   \   000000B8   000054E3           CMP      R4,#+0
   \   000000BC   0E00000A           BEQ      ??select_color_menu_onkey_4
    196              {
    197                int len = strlen(sbtop->fullpath);
   \   000000C0   440084E2           ADD      R0,R4,#+68
   \   000000C4   1B0000EF           SWI      +27
   \   000000C8   0050A0E1           MOV      R5,R0
    198                WSHDR * ws = AllocWS(len + 4);
   \   000000CC   040085E2           ADD      R0,R5,#+4
   \   000000D0   250100EF           SWI      +293
   \   000000D4   0060A0E1           MOV      R6,R0
    199                str_2ws(ws, sbtop->fullpath, len);
   \   000000D8   0520A0E1           MOV      R2,R5
   \   000000DC   441084E2           ADD      R1,R4,#+68
   \   000000E0   6C0100EF           SWI      +364
    200                ExecuteFile(ws, 0, 0);
   \   000000E4   0020A0E3           MOV      R2,#+0
   \   000000E8   0010A0E3           MOV      R1,#+0
   \   000000EC   0600A0E1           MOV      R0,R6
   \   000000F0   940000EF           SWI      +148
    201                FreeWS(ws);
   \   000000F4   0600A0E1           MOV      R0,R6
   \   000000F8   290100EF           SWI      +297
    202              }
    203            }
    204            return (0);
   \                     ??select_color_menu_onkey_4:
   \   000000FC   0000A0E3           MOV      R0,#+0
   \   00000100   F080BDE8           POP      {R4-R7,PC}       ;; return
    205          }
    206          

   \                                 In segment CODE, align 4, keep-with-next
    207          void select_color_menu_ghook(void *gui, int cmd)
    208          {
   \                     select_color_menu_ghook:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
    209            SEL_COLOR *sbtop = MenuGetUserPointer(gui);
   \   0000000C   E00100EF           SWI      +480
   \   00000010   0060A0E1           MOV      R6,R0
    210            if (cmd == TI_CMD_DESTROY)
   \   00000014   030055E3           CMP      R5,#+3
   \   00000018   0500001A           BNE      ??select_color_menu_ghook_0
    211            {
    212              while(sbtop)
   \                     ??select_color_menu_ghook_1:
   \   0000001C   000056E3           CMP      R6,#+0
   \   00000020   7080BD08           POPEQ    {R4-R6,PC}
    213              {
    214                SEL_COLOR *sb = sbtop;
   \   00000024   0600A0E1           MOV      R0,R6
    215                sbtop = sbtop->next;
   \   00000028   006096E5           LDR      R6,[R6, #+0]
    216                mfree(sb);
   \   0000002C   150000EF           SWI      +21
   \   00000030   F9FFFFEA           B        ??select_color_menu_ghook_1
    217              }    
    218            }
    219            if (cmd == TI_CMD_CREATE)
   \                     ??select_color_menu_ghook_0:
   \   00000034   020055E3           CMP      R5,#+2
   \   00000038   0F00001A           BNE      ??select_color_menu_ghook_2
    220            {
    221              int cur_it=0;
   \   0000003C   0050A0E3           MOV      R5,#+0
    222              SEL_COLOR *sb = sbtop;
   \   00000040   010000EA           B        ??select_color_menu_ghook_3
    223              while(sb)
    224              {
    225                if(!strcmp(sb->cfgname, cur_color_name)) break;
    226                sb = sb->next;
   \                     ??select_color_menu_ghook_4:
   \   00000044   006096E5           LDR      R6,[R6, #+0]
    227                cur_it++;
   \   00000048   015085E2           ADD      R5,R5,#+1
   \                     ??select_color_menu_ghook_3:
   \   0000004C   000056E3           CMP      R6,#+0
   \   00000050   0500000A           BEQ      ??select_color_menu_ghook_5
   \   00000054   ........           LDR      R0,??DataTable7  ;; cur_color_name
   \   00000058   001090E5           LDR      R1,[R0, #+0]
   \   0000005C   040086E2           ADD      R0,R6,#+4
   \   00000060   190000EF           SWI      +25
   \   00000064   000050E3           CMP      R0,#+0
   \   00000068   F5FFFF1A           BNE      ??select_color_menu_ghook_4
    228              }
    229              SetCursorToMenuItem(gui,cur_it);
   \                     ??select_color_menu_ghook_5:
   \   0000006C   0510A0E1           MOV      R1,R5
   \   00000070   0400A0E1           MOV      R0,R4
   \   00000074   C40100EF           SWI      +452
   \   00000078   7080BDE8           POP      {R4-R6,PC}
    230            }
    231            if (cmd == TI_CMD_FOCUS)
   \                     ??select_color_menu_ghook_2:
   \   0000007C   0A0055E3           CMP      R5,#+10
   \   00000080   7080BD18           POPNE    {R4-R6,PC}
    232            {
    233              DisableIDLETMR();
   \   00000084   7F0100EF           SWI      +383
    234            }
    235          }
   \   00000088   7080BDE8           POP      {R4-R6,PC}       ;; return
    236          
    237          extern int icon_array[2];
    238          

   \                                 In segment CODE, align 4, keep-with-next
    239          void select_color_menu_iconhndl(void *gui, int cur_item, void *user_pointer)
    240          {
   \                     select_color_menu_iconhndl:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0290A0E1           MOV      R9,R2
    241            SEL_COLOR * sbtop = user_pointer;
    242            WSHDR * ws;
    243            void * item = AllocMenuItem(gui);
   \   00000010   970100EF           SWI      +407
   \   00000014   0060A0E1           MOV      R6,R0
    244            for (int n = 0; n != cur_item; n ++)
   \   00000018   0000A0E3           MOV      R0,#+0
   \   0000001C   000055E3           CMP      R5,#+0
   \   00000020   0300000A           BEQ      ??select_color_menu_iconhndl_0
    245              sbtop = sbtop->next;
   \                     ??select_color_menu_iconhndl_1:
   \   00000024   009099E5           LDR      R9,[R9, #+0]
   \   00000028   010080E2           ADD      R0,R0,#+1
   \   0000002C   050050E1           CMP      R0,R5
   \   00000030   FBFFFF1A           BNE      ??select_color_menu_iconhndl_1
    246            if (sbtop)
   \                     ??select_color_menu_iconhndl_0:
   \   00000034   ........           LDR      R7,??DataTable5  ;; icon_array
   \   00000038   000059E3           CMP      R9,#+0
   \   0000003C   1100000A           BEQ      ??select_color_menu_iconhndl_2
    247            {
    248              int len = strlen(sbtop->cfgname);
   \   00000040   040089E2           ADD      R0,R9,#+4
   \   00000044   1B0000EF           SWI      +27
   \   00000048   00A0A0E1           MOV      R10,R0
    249              ws = AllocMenuWS(gui, len + 4);
   \   0000004C   04108AE2           ADD      R1,R10,#+4
   \   00000050   0400A0E1           MOV      R0,R4
   \   00000054   980100EF           SWI      +408
   \   00000058   0080A0E1           MOV      R8,R0
    250              str_2ws(ws, sbtop->cfgname, len);
   \   0000005C   0A20A0E1           MOV      R2,R10
   \   00000060   041089E2           ADD      R1,R9,#+4
   \   00000064   6C0100EF           SWI      +364
    251              SetMenuItemIconArray(gui, item, icon_array + (strcmp(sbtop->cfgname, cur_color_name)?1:0));
   \   00000068   ........           LDR      R0,??DataTable7  ;; cur_color_name
   \   0000006C   001090E5           LDR      R1,[R0, #+0]
   \   00000070   040089E2           ADD      R0,R9,#+4
   \   00000074   190000EF           SWI      +25
   \   00000078   000050E3           CMP      R0,#+0
   \   0000007C   0100A013           MOVNE    R0,#+1
   \   00000080   002187E0           ADD      R2,R7,R0, LSL #+2
   \   00000084   060000EA           B        ??select_color_menu_iconhndl_3
    252            }
    253            else
    254            {
    255              ws = AllocMenuWS(gui, 10);
   \                     ??select_color_menu_iconhndl_2:
   \   00000088   0A10A0E3           MOV      R1,#+10
   \   0000008C   0400A0E1           MOV      R0,R4
   \   00000090   980100EF           SWI      +408
    256              ascii2ws(ws, "Error");
   \   00000094   2C109FE5           LDR      R1,??select_color_menu_iconhndl_4  ;; `?<Constant "Error">`
   \   00000098   0080A0E1           MOV      R8,R0
   \   0000009C   ........           _BLF     ascii2ws,??ascii2ws??rA
    257              SetMenuItemIconArray(gui, item, icon_array);
   \   000000A0   0720A0E1           MOV      R2,R7
   \                     ??select_color_menu_iconhndl_3:
   \   000000A4   0610A0E1           MOV      R1,R6
   \   000000A8   0400A0E1           MOV      R0,R4
   \   000000AC   990100EF           SWI      +409
    258            }
    259            SetMenuItemText(gui, item, ws, cur_item);
   \   000000B0   0530A0E1           MOV      R3,R5
   \   000000B4   0820A0E1           MOV      R2,R8
   \   000000B8   0610A0E1           MOV      R1,R6
   \   000000BC   0400A0E1           MOV      R0,R4
   \   000000C0   9A0100EF           SWI      +410
    260          }
   \   000000C4   F087BDE8           POP      {R4-R10,PC}      ;; return
   \                     ??select_color_menu_iconhndl_4:
   \   000000C8   ........           DC32     `?<Constant "Error">`
    261          

   \                                 In segment DATA_I, align 4, align-sorted
    262          int select_color_menu_softkeys[]={0,1,2};
   \                     select_color_menu_softkeys:
   \   00000000                      DS8 12
   \   0000000C                      REQUIRE `?<Initializer for select_color_menu_softkeys>`
    263          

   \                                 In segment DATA_I, align 4, align-sorted
    264          SOFTKEY_DESC select_color_menu_sk[]=
   \                     select_color_menu_sk:
   \   00000000                      DS8 24
   \   00000018                      REQUIRE `?<Initializer for select_color_menu_sk>`
    265          {
    266            {0x0018,0x0000,(int)LG_EDIT},
    267            {0x0001,0x0000,(int)LG_BACK},
    268            {0x003D,0x0000,(int)LGP_DOIT_PIC}
    269          };
    270          

   \                                 In segment DATA_I, align 4, align-sorted
    271          SOFTKEYSTAB select_color_menu_skt=
   \                     select_color_menu_skt:
   \   00000000                      DS8 8
   \   00000008                      REQUIRE `?<Initializer for select_color_menu_skt>`
    272          {
    273            select_color_menu_sk,0
    274          };
    275          

   \                                 In segment DATA_I, align 4, align-sorted
    276          HEADER_DESC select_color_menu_header = {0, 0, 0, 0, NULL, (int)LG_COLOR, LGP_NULL};
   \                     select_color_menu_header:
   \   00000000                      DS8 20
   \   00000014                      REQUIRE `?<Initializer for select_color_menu_header>`
    277          
    278          MENU_DESC select_color_menu_struct=
   \                     select_color_menu_struct:
   \   00000014                      DS8 44
   \   00000040                      REQUIRE `?<Initializer for select_color_menu_struct>`
    279          {
    280            8, select_color_menu_onkey, select_color_menu_ghook, NULL,
    281            select_color_menu_softkeys,
    282            &select_color_menu_skt,
    283            0x11,
    284            select_color_menu_iconhndl,
    285            NULL,   //Items
    286            NULL,   //Procs
    287            0   //n
    288          };
    289          

   \                                 In segment CODE, align 4, keep-with-next
    290          void ShowSelectColorMenu()
    291          {
   \                     ShowSelectColorMenu:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
    292            unsigned int err;
    293            DIR_ENTRY de;
    294            SEL_COLOR *sbtop = NULL;
    295            SEL_COLOR *sb;
    296            int n_bcfg=0;
    297            char str[128];
    298            strcpy(str, color_PATH);
   \   00000004   ........           LDR      R6,??DataTable6  ;; color_PATH
   \   00000008   F3DF4DE2           SUB      SP,SP,#+972
   \   0000000C   0040A0E3           MOV      R4,#+0
   \   00000010   00408DE5           STR      R4,[SP, #+0]
   \   00000014   0050A0E3           MOV      R5,#+0
   \   00000018   0610A0E1           MOV      R1,R6
   \   0000001C   D30F8DE2           ADD      R0,SP,#+844
   \   00000020   1A0000EF           SWI      +26
    299            strcat(str, "*.bcfg");
   \   00000024   5C119FE5           LDR      R1,??ShowSelectColorMenu_0  ;; `?<Constant "*.bcfg">`
   \   00000028   D30F8DE2           ADD      R0,SP,#+844
   \   0000002C   170000EF           SWI      +23
    300            if (FindFirstFile(&de, str, &err))
   \   00000030   04208DE2           ADD      R2,SP,#+4
   \   00000034   D31F8DE2           ADD      R1,SP,#+844
   \   00000038   08008DE2           ADD      R0,SP,#+8
   \   0000003C   6B0000EF           SWI      +107
   \   00000040   000050E3           CMP      R0,#+0
   \   00000044   2C00000A           BEQ      ??ShowSelectColorMenu_1
    301            {
    302              do
    303              {
    304                if (!(de.file_attr & FA_DIRECTORY))
   \                     ??ShowSelectColorMenu_2:
   \   00000048   F403DDE1           LDRSH    R0,[SP, #+52]
   \   0000004C   100010E3           TST      R0,#0x10
   \   00000050   2400001A           BNE      ??ShowSelectColorMenu_3
    305                {
    306                  sb = malloc(sizeof(SEL_COLOR));
   \   00000054   C400A0E3           MOV      R0,#+196
   \   00000058   140000EF           SWI      +20
   \   0000005C   0070A0E1           MOV      R7,R0
    307                  strcpy(sb->fullpath, color_PATH);
   \   00000060   0610A0E1           MOV      R1,R6
   \   00000064   440087E2           ADD      R0,R7,#+68
   \   00000068   1A0000EF           SWI      +26
    308                  strcat(sb->fullpath, de.file_name);
   \   0000006C   BD108DE2           ADD      R1,SP,#+189
   \   00000070   440087E2           ADD      R0,R7,#+68
   \   00000074   170000EF           SWI      +23
    309                  strcpy(sb->cfgname, de.file_name);
   \   00000078   BD108DE2           ADD      R1,SP,#+189
   \   0000007C   040087E2           ADD      R0,R7,#+4
   \   00000080   1A0000EF           SWI      +26
    310                  sb->cfgname[strlen(de.file_name) - 5] = NULL;
   \   00000084   BD008DE2           ADD      R0,SP,#+189
   \   00000088   1B0000EF           SWI      +27
   \   0000008C   050040E2           SUB      R0,R0,#+5
   \   00000090   070080E0           ADD      R0,R0,R7
   \   00000094   0440C0E5           STRB     R4,[R0, #+4]
    311                  sb->next = NULL;
   \   00000098   004087E5           STR      R4,[R7, #+0]
    312                  if (sbtop)
   \   0000009C   00009DE5           LDR      R0,[SP, #+0]
   \   000000A0   000050E3           CMP      R0,#+0
   \   000000A4   0D00000A           BEQ      ??ShowSelectColorMenu_4
    313                  {
    314                    SEL_COLOR * sbr, * sbt;
    315                    sbr = (SEL_COLOR *)&sbtop;
   \   000000A8   0D80A0E1           MOV      R8,SP
    316                    sbt = sbtop;
   \   000000AC   0090A0E1           MOV      R9,R0
    317                    while(stricmp(sbt->cfgname, sb->cfgname) < 0)
   \                     ??ShowSelectColorMenu_5:
   \   000000B0   041087E2           ADD      R1,R7,#+4
   \   000000B4   040089E2           ADD      R0,R9,#+4
   \   000000B8   ........           _BLF     stricmp,??stricmp??rA
   \   000000BC   000050E3           CMP      R0,#+0
   \   000000C0   0300005A           BPL      ??ShowSelectColorMenu_6
    318                    {
    319                      sbr = sbt;
   \   000000C4   0980A0E1           MOV      R8,R9
    320                      sbt = sbt->next;
   \   000000C8   009099E5           LDR      R9,[R9, #+0]
    321                      if (!sbt) break;
   \   000000CC   000059E3           CMP      R9,#+0
   \   000000D0   F6FFFF1A           BNE      ??ShowSelectColorMenu_5
    322                    }
    323                    sb->next = sbt;
   \                     ??ShowSelectColorMenu_6:
   \   000000D4   009087E5           STR      R9,[R7, #+0]
    324                    sbr->next = sb;
   \   000000D8   007088E5           STR      R7,[R8, #+0]
   \   000000DC   000000EA           B        ??ShowSelectColorMenu_7
    325                  }
    326                  else
    327                  {
    328                    sbtop = sb;
   \                     ??ShowSelectColorMenu_4:
   \   000000E0   00708DE5           STR      R7,[SP, #+0]
    329                  }
    330                  n_bcfg++;
   \                     ??ShowSelectColorMenu_7:
   \   000000E4   015085E2           ADD      R5,R5,#+1
    331                }
    332              }
    333              while(FindNextFile(&de,&err));
   \                     ??ShowSelectColorMenu_3:
   \   000000E8   04108DE2           ADD      R1,SP,#+4
   \   000000EC   08008DE2           ADD      R0,SP,#+8
   \   000000F0   6C0000EF           SWI      +108
   \   000000F4   000050E3           CMP      R0,#+0
   \   000000F8   D2FFFF1A           BNE      ??ShowSelectColorMenu_2
    334            }
    335            FindClose(&de,&err);
    336            icon_array[0]=GetPicNByUnicodeSymbol(CBOX_CHECKED);
   \                     ??ShowSelectColorMenu_1:
   \   000000FC   ........           LDR      R6,??DataTable5  ;; icon_array
   \   00000100   04108DE2           ADD      R1,SP,#+4
   \   00000104   08008DE2           ADD      R0,SP,#+8
   \   00000108   6D0000EF           SWI      +109
   \   0000010C   1600A0E3           MOV      R0,#+22
   \   00000110   E10C80E3           ORR      R0,R0,#0xE100
   \   00000114   E40100EF           SWI      +484
   \   00000118   000086E5           STR      R0,[R6, #+0]
    337            icon_array[1]=GetPicNByUnicodeSymbol(CBOX_UNCHECKED);
   \   0000011C   1700A0E3           MOV      R0,#+23
   \   00000120   E10C80E3           ORR      R0,R0,#0xE100
   \   00000124   E40100EF           SWI      +484
   \   00000128   040086E5           STR      R0,[R6, #+4]
    338            patch_header(&select_color_menu_header);
   \   0000012C   58609FE5           LDR      R6,??ShowSelectColorMenu_0+0x4  ;; select_color_menu_header
   \   00000130   1800A0E3           MOV      R0,#+24
   \   00000134   B040C6E1           STRH     R4,[R6, #+0]
   \   00000138   B200C6E1           STRH     R0,[R6, #+2]
   \   0000013C   888100EF           SWI      +33160
   \   00000140   010040E2           SUB      R0,R0,#+1
   \   00000144   B400C6E1           STRH     R0,[R6, #+4]
   \   00000148   8A8100EF           SWI      +33162
   \   0000014C   180080E2           ADD      R0,R0,#+24
   \   00000150   B600C6E1           STRH     R0,[R6, #+6]
    339            CreateMenu(0, 0, &select_color_menu_struct, &select_color_menu_header, 0, n_bcfg, sbtop, 0);
   \   00000154   0000A0E3           MOV      R0,#+0
   \   00000158   01002DE9           PUSH     {R0}
   \   0000015C   04009DE5           LDR      R0,[SP, #+4]
   \   00000160   0630A0E1           MOV      R3,R6
   \   00000164   01002DE9           PUSH     {R0}
   \   00000168   20002DE9           PUSH     {R5}
   \   0000016C   142086E2           ADD      R2,R6,#+20
   \   00000170   0400A0E1           MOV      R0,R4
   \   00000174   01002DE9           PUSH     {R0}
   \   00000178   0010A0E1           MOV      R1,R0
   \   0000017C   520100EF           SWI      +338
    340          }
   \   00000180   F7DF8DE2           ADD      SP,SP,#+988
   \   00000184   F083BDE8           POP      {R4-R9,PC}       ;; return
   \                     ??ShowSelectColorMenu_0:
   \   00000188   ........           DC32     `?<Constant "*.bcfg">`
   \   0000018C   ........           DC32     select_color_menu_header
    341          

   \                                 In segment CODE, align 4, keep-with-next
    342          int InitColorSet(const char *fname) //1 - удачно, 0 - неполучилось...
    343          {
   \                     InitColorSet:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
    344            extern const char color_PATH[];
    345            extern char * cur_color_name;
    346            int result = 0;
    347            char * color_file = (char *)malloc(strlen(color_PATH) + strlen(fname) + 16);
   \   00000004   ........           LDR      R6,??DataTable6  ;; color_PATH
   \   00000008   0050A0E1           MOV      R5,R0
   \   0000000C   0600A0E1           MOV      R0,R6
   \   00000010   1B0000EF           SWI      +27
   \   00000014   0070A0E1           MOV      R7,R0
   \   00000018   0500A0E1           MOV      R0,R5
   \   0000001C   1B0000EF           SWI      +27
   \   00000020   070080E0           ADD      R0,R0,R7
   \   00000024   100080E2           ADD      R0,R0,#+16
   \   00000028   140000EF           SWI      +20
   \   0000002C   0070A0E1           MOV      R7,R0
    348            strcpy(color_file, color_PATH);
   \   00000030   0610A0E1           MOV      R1,R6
   \   00000034   1A0000EF           SWI      +26
    349            strcat(color_file, fname);
   \   00000038   0510A0E1           MOV      R1,R5
    350            strcat(color_file, ".bcfg");
   \   0000003C   D8509FE5           LDR      R5,??InitColorSet_0  ;; `?<Constant "default">`
   \   00000040   0040A0E3           MOV      R4,#+0
   \   00000044   0700A0E1           MOV      R0,R7
   \   00000048   170000EF           SWI      +23
   \   0000004C   301085E2           ADD      R1,R5,#+48
   \   00000050   0700A0E1           MOV      R0,R7
   \   00000054   170000EF           SWI      +23
    351            if (LoadColorSetData(color_file)<=0)
   \   00000058   0700A0E1           MOV      R0,R7
   \   0000005C   ........           _BLF     LoadColorSetData,??LoadColorSetData??rA
   \   00000060   010050E3           CMP      R0,#+1
   \   00000064   260000AA           BGE      ??InitColorSet_1
    352            {
    353              mfree(color_file);
   \   00000068   0700A0E1           MOV      R0,R7
   \   0000006C   150000EF           SWI      +21
    354              color_file = (char *)malloc(strlen(color_PATH) + 16);
   \   00000070   0600A0E1           MOV      R0,R6
   \   00000074   1B0000EF           SWI      +27
   \   00000078   100080E2           ADD      R0,R0,#+16
   \   0000007C   140000EF           SWI      +20
   \   00000080   0070A0E1           MOV      R7,R0
    355              strcpy(color_file, color_PATH);
   \   00000084   0610A0E1           MOV      R1,R6
   \   00000088   1A0000EF           SWI      +26
    356              strcat(color_file, "default.bcfg");
   \   0000008C   201085E2           ADD      R1,R5,#+32
   \   00000090   0700A0E1           MOV      R0,R7
   \   00000094   170000EF           SWI      +23
    357              if(LoadColorSetData(color_file)<=0)
   \   00000098   0700A0E1           MOV      R0,R7
   \   0000009C   ........           _BLF     LoadColorSetData,??LoadColorSetData??rA
   \   000000A0   010050E3           CMP      R0,#+1
   \   000000A4   0A0000AA           BGE      ??InitColorSet_2
    358              {
    359                if(SaveColorSetData(color_file))
   \   000000A8   0700A0E1           MOV      R0,R7
   \   000000AC   ........           _BLF     SaveColorSetData,??SaveColorSetData??rA
   \   000000B0   000050E3           CMP      R0,#+0
   \   000000B4   0700000A           BEQ      ??InitColorSet_3
    360                {
    361                   if(LoadColorSetData(color_file)>0)
   \   000000B8   0700A0E1           MOV      R0,R7
   \   000000BC   ........           _BLF     LoadColorSetData,??LoadColorSetData??rA
   \   000000C0   010050E3           CMP      R0,#+1
   \   000000C4   030000BA           BLT      ??InitColorSet_3
    362                   {
    363                     result = 1;
    364                     ShowMSG(1,(int)"Create default color.");
   \   000000C8   081085E2           ADD      R1,R5,#+8
   \   000000CC   0100A0E3           MOV      R0,#+1
   \   000000D0   480100EF           SWI      +328
    365                   }
    366                };
    367              } else result = 1;
   \                     ??InitColorSet_2:
   \   000000D4   0140A0E3           MOV      R4,#+1
    368              if (cur_color_name) mfree(cur_color_name);
   \                     ??InitColorSet_3:
   \   000000D8   ........           LDR      R6,??DataTable7  ;; cur_color_name
   \   000000DC   000096E5           LDR      R0,[R6, #+0]
   \   000000E0   000050E3           CMP      R0,#+0
   \   000000E4   0000000A           BEQ      ??InitColorSet_4
   \   000000E8   150000EF           SWI      +21
    369              cur_color_name = (char *)malloc(32);
   \                     ??InitColorSet_4:
   \   000000EC   2000A0E3           MOV      R0,#+32
   \   000000F0   140000EF           SWI      +20
   \   000000F4   000086E5           STR      R0,[R6, #+0]
    370              strcpy(cur_color_name, "default");
   \   000000F8   0510A0E1           MOV      R1,R5
   \   000000FC   1A0000EF           SWI      +26
   \   00000100   000000EA           B        ??InitColorSet_5
    371            } else result = 1;
   \                     ??InitColorSet_1:
   \   00000104   0140A0E3           MOV      R4,#+1
    372            mfree(color_file);
   \                     ??InitColorSet_5:
   \   00000108   0700A0E1           MOV      R0,R7
   \   0000010C   150000EF           SWI      +21
    373            InitColor();
   \   00000110   ........           BL       InitColor
    374            return (result);
   \   00000114   0400A0E1           MOV      R0,R4
   \   00000118   F080BDE8           POP      {R4-R7,PC}       ;; return
   \                     ??InitColorSet_0:
   \   0000011C   ........           DC32     `?<Constant "default">`
    375          }

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable5:
   \   00000000   ........           DC32     icon_array

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable6:
   \   00000000   ........           DC32     color_PATH

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable7:
   \   00000000   ........           DC32     cur_color_name

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for MAINFONT_NOT_CONNECTED>`:
   \   00000000   C8C8C864           DC8 200, 200, 200, 100

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for select_color_menu_softkeys>`:
   \   00000000   000000000100       DC32 0, 1, 2
   \              000002000000

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for select_color_menu_sk>`:
   \   00000000   18000000           DC16 24, 0
   \   00000004   ........           DC32 `?<Constant "\\310\\347\\354\\345\\355\\350\\362\\374">`
   \   00000008   01000000           DC16 1, 0
   \   0000000C   ........           DC32 `?<Constant "\\315\\340\\347\\340\\344">`
   \   00000010   3D000000           DC16 61, 0
   \   00000014   FBC0FF7F           DC32 2147467515

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for select_color_menu_skt>`:
   \   00000000   ........0000       DC32 select_color_menu_sk, 0
   \              0000        

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for select_color_menu_header>`:
   \   00000000   000000000000       DC16 0, 0, 0, 0
   \              0000        
   \   00000008   00000000....       DC32 0H, `?<Constant "\\326\\342\\345\\362\\340">`, 2147483647
   \              ....FFFFFF7F
   \                     `?<Initializer for select_color_menu_struct>`:
   \   00000014   08000000....       DC32 8, select_color_menu_onkey, select_color_menu_ghook, 0H
   \              ............
   \              00000000    
   \   00000024   ............       DC32 select_color_menu_softkeys, select_color_menu_skt, 17
   \              ....11000000
   \   00000030   ........0000       DC32 select_color_menu_iconhndl, 0H, 0H, 0
   \              000000000000
   \              00000000    

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "default">`:
   \   00000000   64656661756C       DC8 "default"
   \              7400        
   \   00000008   437265617465       DC8 "Create default color."
   \              206465666175
   \              6C7420636F6C
   \              6F722E00    
   \   0000001E   0000               DC8 0, 0
   \   00000020   64656661756C       DC8 "default.bcfg"
   \              742E62636667
   \              00          
   \   0000002D   000000             DC8 0, 0, 0
   \   00000030   2E6263666700       DC8 ".bcfg"
   \   00000036   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\326\\342\\345\\362\\340">`:
   \   00000000   D6E2E5F2E000       DC8 "\326\342\345\362\340"
   \   00000006   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\315\\340\\347\\340\\344">`:
   \   00000000   CDE0E7E0E400       DC8 "\315\340\347\340\344"
   \   00000006   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\310\\347\\354\\345\\355\\350\\362\\374">`:
   \   00000000   C8E7ECE5EDE8       DC8 "\310\347\354\345\355\350\362\374"
   \              F2FC00      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "*.bcfg">`:
   \   00000000   2A2E62636667       DC8 "*.bcfg"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Error">`:
   \   00000000   4572726F7200       DC8 "Error"
   \   00000006   0000               DC8 0, 0
    376          // EOL, EOF

   Maximum stack usage in bytes:

     Function                   CSTACK
     --------                   ------
     Char4ToRGBA                    8
     InitColor                      8
     InitColorSet                  20
     ShowSelectColorMenu         1016
     select_color_menu_ghook       16
     select_color_menu_iconhndl    32
     select_color_menu_onkey       20


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     cur_color_name                    4
     MAINBG_NOT_CONNECTED              4
     MAINBG_CONNECTED                  4
     MAINBG_ERROR                      4
     MAINFONT_NOT_CONNECTED            4
     MAINFONT_CONNECTED                4
     MAINFONT_ERROR                    4
     MESSAGEWIN_BGCOLOR                4
     MESSAGEWIN_TITLE_BGCOLOR          4
     MESSAGEWIN_TITLE_FONT             4
     MESSAGEWIN_MY_BGCOLOR             4
     MESSAGEWIN_CH_BGCOLOR             4
     MESSAGEWIN_GCHAT_BGCOLOR_1        4
     MESSAGEWIN_CURSOR_BGCOLOR         4
     MESSAGEWIN_GCHAT_BGCOLOR_2        4
     MESSAGEWIN_SYS_BGCOLOR            4
     MESSAGEWIN_STATUS_BGCOLOR         4
     MESSAGEWIN_CHAT_FONT              4
     CURSOR                            4
     CURSOR_BORDER                     4
     CLIST_F_COLOR_0                   4
     CLIST_F_COLOR_1                   4
     CONTACT_BG_0                      4
     CONTACT_BG_1                      4
     lineColor                         4
     borderColor                       4
     PRES_COLORS                      48
     Char4ToRGBA                      52
     InitColor                       784
     select_color_menu_onkey         260
     select_color_menu_ghook         140
     select_color_menu_iconhndl      204
     select_color_menu_softkeys       12
     select_color_menu_sk             24
     select_color_menu_skt             8
     select_color_menu_header         64
     ShowSelectColorMenu             400
     InitColorSet                    288
     ??DataTable5                      4
     ??DataTable6                      4
     ??DataTable7                      4
     ?<Initializer for MAINFONT_NOT_CONNECTED>
                                       4
     ?<Initializer for select_color_menu_softkeys>
                                      12
     ?<Initializer for select_color_menu_sk>
                                      24
     ?<Initializer for select_color_menu_skt>
                                       8
     ?<Initializer for select_color_menu_header>
                                      64
     ?<Constant "default">            56
     ?<Constant "\326\342\345\362\340">
                                       8
     ?<Constant "\315\340\347\340\344">
                                       8
     ?<Constant "\310\347\354\345\355\350\362\374">
                                      12
     ?<Constant "*.bcfg">              8
     ?<Constant "Error">               8
      Others                         124

 
 2 240 bytes in segment CODE
   100 bytes in segment DATA_C
   112 bytes in segment DATA_I
   112 bytes in segment DATA_ID
   148 bytes in segment DATA_Z
    24 bytes in segment INITTAB
 
 2 140 bytes of CODE  memory (+ 124 bytes shared)
   212 bytes of CONST memory
   260 bytes of DATA  memory

Errors: none
Warnings: none
