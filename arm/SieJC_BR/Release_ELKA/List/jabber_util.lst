##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION    15/Feb/2011  01:38:28 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  C:\arm\SieJC_BR\jabber_util.c                        #
#    Command line    =  C:\arm\SieJC_BR\jabber_util.c -D NEWSGOLD -D ELKA    #
#                       --preprocess C:\arm\SieJC_BR\Release_ELKA\List\ -lC  #
#                       C:\arm\SieJC_BR\Release_ELKA\List\ -o                #
#                       C:\arm\SieJC_BR\Release_ELKA\Obj\ -s9 --no_unroll    #
#                       --cpu_mode arm --endian little --cpu ARM926EJ-S      #
#                       --stack_align 4 --interwork -e --fpu None            #
#                       --dlib_config "C:\arm2\Embedded Workbench 4.0        #
#                       Evaluation\ARM\LIB\dl5tpainl8n.h" -I                 #
#                       "C:\arm2\Embedded Workbench 4.0                      #
#                       Evaluation\ARM\INC\" --inline_threshold=2            #
#    List file       =  C:\arm\SieJC_BR\Release_ELKA\List\jabber_util.lst    #
#    Object file     =  C:\arm\SieJC_BR\Release_ELKA\Obj\jabber_util.r79     #
#                                                                            #
#                                                                            #
##############################################################################

C:\arm\SieJC_BR\jabber_util.c
      1          #include "../inc/swilib.h"
      2          #include "history.h"
      3          #include "main.h"
      4          #include "clist_util.h"
      5          #include "revision.h"
      6          #include "jabber_util.h"
      7          #include "string_util.h"
      8          #include "xml_parser.h"
      9          #include "item_info.h"
     10          #include "vCard.h"
     11          #include "jabber.h"
     12          #include "bookmarks.h"
     13          #include "serial_dbg.h"
     14          #include "groups_util.h"
     15          #include "adv_login.h"
     16          #include "lang.h"
     17          
     18          extern const char JABBER_SERVER[];
     19          extern const char USERNAME[];
     20          extern const char PASSWORD[];
     21          extern const char RESOURCE[];
     22          extern const char CMP_DATE[];
     23          extern const char VERSION_NAME[];
     24          extern const char VERSION_VERS[];
     25          extern const char OS[];
     26          extern const int USE_SASL;
     27          extern const int DELIVERY_EVENTS;
     28          extern const int COMPOSING_EVENTS;
     29          extern const int USE_ATTENTION;
     30          extern const int DISPLAY_POPUPS;
     31          extern char My_JID_full[];
     32          extern char My_JID[];
     33          extern char logmsg[];
     34          
     35          extern GR_ITEM *GR_ROOT;
     36          extern CLIST* cltop;
     37          extern unsigned int NContacts;
     38          
     39          MUC_ITEM *muctop = NULL;
     40          

   \                                 In segment DATA_Z, align 4, align-sorted
     41          TTime intimes; //для idle
   \                     intimes:
   \   00000000                      DS8 8
     42          TDate indates;
   \                     indates:
   \   00000008                      DS8 8
     43          
     44          unsigned int m_num=0; // ид сообщения, любого!
   \                     m_num:
   \   00000010                      DS8 4
     45          
     46          extern JABBER_STATE Jabber_state;
     47          const char* PRESENCES[PRES_COUNT] = {"online",
     48                                               "chat",
     49                                               "away",
     50                                               "xa",
     51                                               "dnd",
     52                                               "invisible",
     53                                               "unavailable",
     54                                               "error",
     55                                               "subscribe",
     56                                               "subscribed",
     57                                               "unsubscribe",
     58                                               "unsubscribed"};
     59          
     60          
     61          
     62          #define AFFS_CNT 5
     63          #define ROLS_CNT 4
     64          
     65          const char* JABBER_AFFS[] = {"none", "outcast", "member", "admin", "owner"};
     66          const char* JABBER_ROLS[] = {"none", "visitor", "participant", "moderator"};
     67          
     68          ONLINEINFO OnlineInfo = {0,0,NULL};
     69          
     70          /**
     71            * Функция для отправки настроения
     72           **/
     73          // Context: HELPER

   \                                 In segment CODE, align 4, keep-with-next
     74          void Send_Mood(char *mood, char *text)
     75          {
   \                     Send_Mood:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   \   00000004   B3DF4DE2           SUB      SP,SP,#+716
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
     76            char *reply = malloc(1024);
   \   00000010   400EA0E3           MOV      R0,#+1024
   \   00000014   140000EF           SWI      +20
   \   00000018   0060A0E1           MOV      R6,R0
     77            char *_from = Mask_Special_Syms(My_JID_full);
   \   0000001C   ........           LDR      R0,??DataTable23  ;; My_JID_full
   \   00000020   ........           _BLF     Mask_Special_Syms,??Mask_Special_Syms??rA
     78            
     79            char mod0_t[]="<iq type='set' from='%s' id='SieJC_p%d'>"
     80              "<pubsub xmlns='http://jabber.org/protocol/pubsub'>"
     81                "<publish node='http://jabber.org/protocol/mood'>"
     82                  "<item><mood xmlns='http://jabber.org/protocol/mood'><%s/>";
   \   00000024   04119FE5           LDR      R1,??Send_Mood_0  ;; `?<Constant "<iq type=\\'set\\' from=\\'...">`
   \   00000028   0070A0E1           MOV      R7,R0
   \   0000002C   780F8DE2           ADD      R0,SP,#+480
   \   00000030   C430A0E3           MOV      R3,#+196
   \                     ??Send_Mood_1:
   \   00000034   043053E2           SUBS     R3,R3,#+4
   \   00000038   032091E7           LDR      R2,[R1, R3]
   \   0000003C   032080E7           STR      R2,[R0, R3]
   \   00000040   FBFFFF1A           BNE      ??Send_Mood_1
     83            char mod2_t[]="</mood></item></publish></pubsub></iq>";
   \   00000044   E8809FE5           LDR      R8,??Send_Mood_0+0x4  ;; `?<Constant "</mood></item></publi...">`
   \   00000048   A90F8DE2           ADD      R0,SP,#+676
   \   0000004C   0810A0E1           MOV      R1,R8
   \   00000050   0C52B1E8           LDM      R1!,{R2,R3,R9,R12,LR}
   \   00000054   0C52A0E8           STM      R0!,{R2,R3,R9,R12,LR}
   \   00000058   0C5291E8           LDM      R1,{R2,R3,R9,R12,LR}
     84            
     85            char modn_t[]="<iq type='set' from='%s' id='SieJC_p%d'>"
     86              "<pubsub xmlns='http://jabber.org/protocol/pubsub'>"
     87                "<publish node='http://jabber.org/protocol/mood'>"
     88                  "<item><mood xmlns='http://jabber.org/protocol/mood'/>"
     89                    "</item></publish></pubsub></iq>";  
   \   0000005C   D4109FE5           LDR      R1,??Send_Mood_0+0x8  ;; `?<Constant "<iq type=\\'set\\' from=\\'...">_1`
   \   00000060   0C5280E8           STM      R0,{R2,R3,R9,R12,LR}
   \   00000064   400F8DE2           ADD      R0,SP,#+256
   \   00000068   E030A0E3           MOV      R3,#+224
   \                     ??Send_Mood_2:
   \   0000006C   043053E2           SUBS     R3,R3,#+4
   \   00000070   032091E7           LDR      R2,[R1, R3]
   \   00000074   032080E7           STR      R2,[R0, R3]
   \   00000078   FBFFFF1A           BNE      ??Send_Mood_2
     90            if (mood) 
   \   0000007C   ........           LDR      R9,??DataTable37  ;; intimes
   \   00000080   000054E3           CMP      R4,#+0
   \   00000084   1600000A           BEQ      ??Send_Mood_3
     91             {
     92               sprintf(reply, mod0_t, _from, m_num, mood);
   \   00000088   10002DE9           PUSH     {R4}
   \   0000008C   103099E5           LDR      R3,[R9, #+16]
   \   00000090   0720A0E1           MOV      R2,R7
   \   00000094   791F8DE2           ADD      R1,SP,#+484
   \   00000098   0600A0E1           MOV      R0,R6
   \   0000009C   160000EF           SWI      +22
     93               if (strlen(text)>0) 
   \   000000A0   0500A0E1           MOV      R0,R5
   \   000000A4   1B0000EF           SWI      +27
   \   000000A8   000050E3           CMP      R0,#+0
   \   000000AC   04D08DE2           ADD      SP,SP,#+4
   \   000000B0   0700000A           BEQ      ??Send_Mood_4
     94               {
     95                 char s_t[256];
     96                 snprintf(s_t,256,"<text>%s</text>", text);
   \   000000B4   0530A0E1           MOV      R3,R5
   \   000000B8   282088E2           ADD      R2,R8,#+40
   \   000000BC   401FA0E3           MOV      R1,#+256
   \   000000C0   0D00A0E1           MOV      R0,SP
   \   000000C4   1B0100EF           SWI      +283
     97                 strcat(reply, s_t);
   \   000000C8   0D10A0E1           MOV      R1,SP
   \   000000CC   0600A0E1           MOV      R0,R6
   \   000000D0   170000EF           SWI      +23
     98               }
     99               strcat(reply, mod2_t);
   \                     ??Send_Mood_4:
   \   000000D4   A91F8DE2           ADD      R1,SP,#+676
   \   000000D8   0600A0E1           MOV      R0,R6
   \   000000DC   170000EF           SWI      +23
   \   000000E0   040000EA           B        ??Send_Mood_5
    100             }
    101            else sprintf(reply, modn_t,_from ,m_num);
   \                     ??Send_Mood_3:
   \   000000E4   103099E5           LDR      R3,[R9, #+16]
   \   000000E8   0720A0E1           MOV      R2,R7
   \   000000EC   401F8DE2           ADD      R1,SP,#+256
   \   000000F0   0600A0E1           MOV      R0,R6
   \   000000F4   160000EF           SWI      +22
    102            SUBPROC((void*)_sendandfree, reply);
   \                     ??Send_Mood_5:
   \   000000F8   ........           LDR      R0,??DataTable2  ;; _sendandfree
   \   000000FC   0610A0E1           MOV      R1,R6
   \   00000100   710100EF           SWI      +369
    103            m_num++;
   \   00000104   100099E5           LDR      R0,[R9, #+16]
   \   00000108   010080E2           ADD      R0,R0,#+1
   \   0000010C   100089E5           STR      R0,[R9, #+16]
    104            mfree(_from);
   \   00000110   0700A0E1           MOV      R0,R7
   \   00000114   150000EF           SWI      +21
    105            if (text) mfree(text);
   \   00000118   000055E3           CMP      R5,#+0
   \   0000011C   0100000A           BEQ      ??Send_Mood_6
   \   00000120   0500A0E1           MOV      R0,R5
   \   00000124   150000EF           SWI      +21
    106          }
   \                     ??Send_Mood_6:
   \   00000128   B3DF8DE2           ADD      SP,SP,#+716      ;; stack cleaning
   \   0000012C   F083BDE8           POP      {R4-R9,PC}       ;; return
   \                     ??Send_Mood_0:
   \   00000130   ........           DC32     `?<Constant "<iq type=\\'set\\' from=\\'...">`
   \   00000134   ........           DC32     `?<Constant "</mood></item></publi...">`
   \   00000138   ........           DC32     `?<Constant "<iq type=\\'set\\' from=\\'...">_1`
    107          
    108          /*
    109            Посылка стандартного Jabber Iq
    110          */
    111          //Context: HELPER

   \                                 In segment CODE, align 4, keep-with-next
    112          void SendIq(char* to, char* type, char* id, char* xmlns, char* payload)
    113          {
   \                     SendIq:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000004   A8D04DE2           SUB      SP,SP,#+168
   \   00000008   CC709DE5           LDR      R7,[SP, #+204]
    114            char* xmlq=malloc(1024);
    115            char *xmlq2=malloc(1024);
    116            char s_to[128];
    117            char s_id[40];
    118            if(id)
   \   0000000C   3CA19FE5           LDR      R10,??SendIq_0+0x4  ;; `?<Constant "id=\\'%s\\'">`
   \   00000010   0040A0E1           MOV      R4,R0
   \   00000014   0150A0E1           MOV      R5,R1
   \   00000018   02B0A0E1           MOV      R11,R2
   \   0000001C   0360A0E1           MOV      R6,R3
   \   00000020   400EA0E3           MOV      R0,#+1024
   \   00000024   140000EF           SWI      +20
   \   00000028   0080A0E1           MOV      R8,R0
   \   0000002C   400EA0E3           MOV      R0,#+1024
   \   00000030   140000EF           SWI      +20
   \   00000034   0090A0E1           MOV      R9,R0
   \   00000038   00005BE3           CMP      R11,#+0
   \   0000003C   0500000A           BEQ      ??SendIq_1
    119            {
    120              snprintf(s_id,40,"id='%s'", id);
   \   00000040   0B30A0E1           MOV      R3,R11
   \   00000044   0A20A0E1           MOV      R2,R10
   \   00000048   2810A0E3           MOV      R1,#+40
   \   0000004C   80008DE2           ADD      R0,SP,#+128
   \   00000050   1B0100EF           SWI      +283
   \   00000054   020000EA           B        ??SendIq_2
    121            }
    122            else
    123            {
    124              strcpy(s_id, "");
   \                     ??SendIq_1:
   \   00000058   3B1F8FE2           ADR      R1,??SendIq_0    ;; ""
   \   0000005C   80008DE2           ADD      R0,SP,#+128
   \   00000060   1A0000EF           SWI      +26
    125            }
    126            char *_from = Mask_Special_Syms(My_JID_full);
   \                     ??SendIq_2:
   \   00000064   ........           LDR      R0,??DataTable23  ;; My_JID_full
   \   00000068   ........           _BLF     Mask_Special_Syms,??Mask_Special_Syms??rA
    127            sprintf(xmlq, "<iq type='%s' %s from='%s'", type, s_id, _from);
   \   0000006C   01002DE9           PUSH     {R0}
   \   00000070   00B0A0E1           MOV      R11,R0
   \   00000074   84308DE2           ADD      R3,SP,#+132
   \   00000078   0520A0E1           MOV      R2,R5
   \   0000007C   08108AE2           ADD      R1,R10,#+8
   \   00000080   0800A0E1           MOV      R0,R8
   \   00000084   160000EF           SWI      +22
    128            mfree(_from);
   \   00000088   0B00A0E1           MOV      R0,R11
   \   0000008C   150000EF           SWI      +21
    129            if(to)
   \   00000090   000054E3           CMP      R4,#+0
   \   00000094   04D08DE2           ADD      SP,SP,#+4
   \   00000098   0C00000A           BEQ      ??SendIq_3
    130            {
    131              char *_to = Mask_Special_Syms(to);
   \   0000009C   0400A0E1           MOV      R0,R4
   \   000000A0   ........           _BLF     Mask_Special_Syms,??Mask_Special_Syms??rA
   \   000000A4   0040A0E1           MOV      R4,R0
    132              snprintf(s_to, 128, " to='%s'", _to);
   \   000000A8   0430A0E1           MOV      R3,R4
   \   000000AC   24208AE2           ADD      R2,R10,#+36
   \   000000B0   8010A0E3           MOV      R1,#+128
   \   000000B4   0D00A0E1           MOV      R0,SP
   \   000000B8   1B0100EF           SWI      +283
    133              strcat(xmlq, s_to);
   \   000000BC   0D10A0E1           MOV      R1,SP
   \   000000C0   0800A0E1           MOV      R0,R8
   \   000000C4   170000EF           SWI      +23
    134              mfree(_to);
   \   000000C8   0400A0E1           MOV      R0,R4
   \   000000CC   150000EF           SWI      +21
    135            }
    136            if(payload)
   \                     ??SendIq_3:
   \   000000D0   000057E3           CMP      R7,#+0
   \   000000D4   0800000A           BEQ      ??SendIq_4
    137            {
    138              strcat(xmlq, ">\r\n<query xmlns='%s'>\r\n%s\r\n</query>\r\n</iq>");
   \   000000D8   30108AE2           ADD      R1,R10,#+48
   \   000000DC   0800A0E1           MOV      R0,R8
   \   000000E0   170000EF           SWI      +23
    139              sprintf(xmlq2, xmlq, xmlns, payload);
   \   000000E4   0730A0E1           MOV      R3,R7
   \   000000E8   0620A0E1           MOV      R2,R6
   \   000000EC   0810A0E1           MOV      R1,R8
   \   000000F0   0900A0E1           MOV      R0,R9
   \   000000F4   160000EF           SWI      +22
   \   000000F8   060000EA           B        ??SendIq_5
    140            }
    141            else
    142            {
    143              strcat(xmlq, ">\r\n<query xmlns='%s'/>\r\n</iq>");
   \                     ??SendIq_4:
   \   000000FC   5C108AE2           ADD      R1,R10,#+92
   \   00000100   0800A0E1           MOV      R0,R8
   \   00000104   170000EF           SWI      +23
    144              sprintf(xmlq2, xmlq, xmlns);
   \   00000108   0620A0E1           MOV      R2,R6
   \   0000010C   0810A0E1           MOV      R1,R8
   \   00000110   0900A0E1           MOV      R0,R9
   \   00000114   160000EF           SWI      +22
    145            }
    146            sprintf(xmlq2, xmlq, xmlns, payload);
   \                     ??SendIq_5:
   \   00000118   0730A0E1           MOV      R3,R7
   \   0000011C   0620A0E1           MOV      R2,R6
   \   00000120   0810A0E1           MOV      R1,R8
   \   00000124   0900A0E1           MOV      R0,R9
   \   00000128   160000EF           SWI      +22
    147            SendAnswer(xmlq2);
   \   0000012C   0900A0E1           MOV      R0,R9
   \   00000130   ........           _BLF     SendAnswer,??SendAnswer??rA
    148          //  Log("IQ_OUT", xmlq2);
    149            mfree(xmlq2);
   \   00000134   0900A0E1           MOV      R0,R9
   \   00000138   150000EF           SWI      +21
    150            mfree(xmlq);
   \   0000013C   0800A0E1           MOV      R0,R8
   \   00000140   150000EF           SWI      +21
    151          }
   \   00000144   A8D08DE2           ADD      SP,SP,#+168
   \   00000148   F08FBDE8           POP      {R4-R11,PC}      ;; return
   \                     ??SendIq_0:
   \   0000014C   00000000           DC8      "",+0,+0,+0
   \   00000150   ........           DC32     `?<Constant "id=\\'%s\\'">`
    152          
    153          /*
    154            Послать приветствие, на него сервер высылает ответный stream.
    155            После этого можно общаться с сервером
    156          */
    157          // Context:HELPER

   \                                 In segment CODE, align 4, keep-with-next
    158          void Send_Welcome_Packet()
    159          {
    160          
    161            void Send_Welcome_Packet_SASL();
    162            if(USE_SASL)
   \                     Send_Welcome_Packet:
   \   00000000   7C009FE5           LDR      R0,??Send_Welcome_Packet_0  ;; USE_SASL
   \   00000004   30402DE9           PUSH     {R4,R5,LR}
   \   00000008   94D04DE2           SUB      SP,SP,#+148
   \   0000000C   000090E5           LDR      R0,[R0, #+0]
   \   00000010   000050E3           CMP      R0,#+0
   \   00000014   0200000A           BEQ      ??Send_Welcome_Packet_1
    163            {
    164              Send_Welcome_Packet_SASL();
   \   00000018   ........           _BLF     Send_Welcome_Packet_SASL,??Send_Welcome_Packet_SASL??rA
    165              return;
   \   0000001C   94D08DE2           ADD      SP,SP,#+148
   \   00000020   3080BDE8           POP      {R4,R5,PC}
    166            }
    167            char streamheader[]="<?xml version='1.0' encoding='UTF-8'?>\n"
    168              "<stream:stream to='%s' xmlns='jabber:client' xmlns:stream='http://etherx.jabber.org/streams' xml:lang='en'>";
   \                     ??Send_Welcome_Packet_1:
   \   00000024   5C409FE5           LDR      R4,??Send_Welcome_Packet_0+0x4  ;; `?<Constant "<?xml version=\\'1.0\\' e...">`
   \   00000028   0D00A0E1           MOV      R0,SP
   \   0000002C   9420A0E3           MOV      R2,#+148
   \                     ??Send_Welcome_Packet_2:
   \   00000030   042052E2           SUBS     R2,R2,#+4
   \   00000034   021094E7           LDR      R1,[R4, R2]
   \   00000038   021080E7           STR      R1,[R0, R2]
   \   0000003C   FBFFFF1A           BNE      ??Send_Welcome_Packet_2
    169            char* buf=malloc(256);
   \   00000040   400FA0E3           MOV      R0,#+256
   \   00000044   140000EF           SWI      +20
    170            sprintf(buf,streamheader,JABBER_SERVER);
   \   00000048   ........           LDR      R2,??DataTable7  ;; JABBER_SERVER
   \   0000004C   0050A0E1           MOV      R5,R0
   \   00000050   0D10A0E1           MOV      R1,SP
   \   00000054   160000EF           SWI      +22
    171            SendAnswer(buf);
   \   00000058   0500A0E1           MOV      R0,R5
   \   0000005C   ........           _BLF     SendAnswer,??SendAnswer??rA
    172            mfree(buf);
   \   00000060   0500A0E1           MOV      R0,R5
   \   00000064   150000EF           SWI      +21
    173            LockSched();
   \   00000068   460100EF           SWI      +326
    174            strcpy(logmsg,"Send Welcome");
   \   0000006C   ........           LDR      R0,??DataTable31  ;; logmsg
   \   00000070   941084E2           ADD      R1,R4,#+148
   \   00000074   1A0000EF           SWI      +26
    175            UnlockSched();
   \   00000078   470100EF           SWI      +327
    176          #ifdef LOG_ALL
    177            Log("CONN",logmsg);
    178          #endif
    179          }
   \   0000007C   94D08DE2           ADD      SP,SP,#+148
   \   00000080   3080BDE8           POP      {R4,R5,PC}       ;; return
   \                     ??Send_Welcome_Packet_0:
   \   00000084   ........           DC32     USE_SASL
   \   00000088   ........           DC32     `?<Constant "<?xml version=\\'1.0\\' e...">`
    180          /*
    181            Послать дисконнект
    182          */
    183          // Context:HELPER

   \                                 In segment CODE, align 4, keep-with-next
    184          void Send_Disconnect()
    185          {
   \                     Send_Disconnect:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
    186            char streamend[]="</stream:stream>";
   \   00000004   24409FE5           LDR      R4,??Send_Disconnect_0  ;; `?<Constant "</stream:stream>">`
   \   00000008   14D04DE2           SUB      SP,SP,#+20
   \   0000000C   2C5094E8           LDM      R4,{R2,R3,R5,R12,LR}
   \   00000010   0D00A0E1           MOV      R0,SP
   \   00000014   2C5080E8           STM      R0,{R2,R3,R5,R12,LR}
    187            SendAnswer(streamend);
   \   00000018   ........           _BLF     SendAnswer,??SendAnswer??rA
    188            strcpy(logmsg,"Send Disconnect");
   \   0000001C   ........           LDR      R0,??DataTable31  ;; logmsg
   \   00000020   141084E2           ADD      R1,R4,#+20
   \   00000024   1A0000EF           SWI      +26
    189          #ifdef LOG_ALL
    190            Log("CONN",logmsg);
    191          #endif
    192          }
   \   00000028   14D08DE2           ADD      SP,SP,#+20
   \   0000002C   3080BDE8           POP      {R4,R5,PC}       ;; return
   \                     ??Send_Disconnect_0:
   \   00000030   ........           DC32     `?<Constant "</stream:stream>">`
    193          
    194          // Константы Iq-запросов
    195          char auth_id[] = "SieJC_auth_req";
    196          char rost_id[] = "SieJC_rost_req";
    197          char vreq_id[] = "SieJC_vers_req";
    198          char priv_id[] = "SieJC_priv_req";
    199          char treq_id[] = "SieJC_time_req";
    200          char vcreq_id[] = "SieJC_vcard_req";
    201          char lastact_id[] = "SieJC_lastact_req";
    202          /*
    203            Авторизация на Jabber-сервере
    204            Самая тупая, без извращений.
    205          */
    206          //Context: HELPER

   \                                 In segment CODE, align 4, keep-with-next
    207          void Send_Auth()
    208          {
    209            sprintf(My_JID, "%s@%s",USERNAME, JABBER_SERVER);
   \                     Send_Auth:
   \   00000000   ........           LDR      R3,??DataTable7  ;; JABBER_SERVER
   \   00000004   F0402DE9           PUSH     {R4-R7,LR}
   \   00000008   ........           LDR      R4,??DataTable8  ;; My_JID
   \   0000000C   ........           LDR      R5,??DataTable9  ;; `?<Constant "%s@%s">`
   \   00000010   84609FE5           LDR      R6,??Send_Auth_0+0x4  ;; USERNAME
    210            sprintf(My_JID_full,"%s/%s",My_JID, RESOURCE);
   \   00000014   84709FE5           LDR      R7,??Send_Auth_0+0x8  ;; RESOURCE
   \   00000018   0620A0E1           MOV      R2,R6
   \   0000001C   0510A0E1           MOV      R1,R5
   \   00000020   0400A0E1           MOV      R0,R4
   \   00000024   160000EF           SWI      +22
   \   00000028   ........           LDR      R0,??DataTable23  ;; My_JID_full
   \   0000002C   0730A0E1           MOV      R3,R7
   \   00000030   0420A0E1           MOV      R2,R4
   \   00000034   081085E2           ADD      R1,R5,#+8
   \   00000038   160000EF           SWI      +22
    211            char* payload = malloc(256);
   \   0000003C   400FA0E3           MOV      R0,#+256
   \   00000040   140000EF           SWI      +20
    212            sprintf(payload,"<username>%s</username>\n<password>%s</password>\n<resource>%s</resource>",USERNAME, PASSWORD, RESOURCE);
   \   00000044   58309FE5           LDR      R3,??Send_Auth_0+0xC  ;; PASSWORD
   \   00000048   0040A0E1           MOV      R4,R0
   \   0000004C   80002DE9           PUSH     {R7}
   \   00000050   0620A0E1           MOV      R2,R6
   \   00000054   101085E2           ADD      R1,R5,#+16
   \   00000058   160000EF           SWI      +22
    213            SendIq(NULL, IQTYPE_SET, auth_id, IQ_AUTH, payload);
   \   0000005C   ........           LDR      R2,??DataTable11  ;; auth_id
   \   00000060   0400A0E1           MOV      R0,R4
   \   00000064   01002DE9           PUSH     {R0}
   \   00000068   583085E2           ADD      R3,R5,#+88
   \   0000006C   091F8FE2           ADR      R1,??Send_Auth_0  ;; "set"
   \   00000070   0000A0E3           MOV      R0,#+0
   \   00000074   ........           BL       SendIq
    214            mfree(payload);
   \   00000078   0400A0E1           MOV      R0,R4
   \   0000007C   150000EF           SWI      +21
    215            LockSched();
   \   00000080   460100EF           SWI      +326
    216            strcpy(logmsg,"Send auth");
   \   00000084   ........           LDR      R0,??DataTable31  ;; logmsg
   \   00000088   681085E2           ADD      R1,R5,#+104
   \   0000008C   1A0000EF           SWI      +26
    217            UnlockSched();
   \   00000090   470100EF           SWI      +327
    218          }
   \   00000094   F380BDE8           POP      {R0,R1,R4-R7,PC}  ;; return
   \                     ??Send_Auth_0:
   \   00000098   73657400           DC8      "set"
   \   0000009C   ........           DC32     USERNAME
   \   000000A0   ........           DC32     RESOURCE
   \   000000A4   ........           DC32     PASSWORD
    219          
    220          //Context: HELPER

   \                                 In segment CODE, align 4, keep-with-next
    221          void _senddicoinforequest(char *dest_jid)
    222          {
    223            char discoid[]="SieJC_discoinfo";
   \                     _senddicoinforequest:
   \   00000000   68109FE5           LDR      R1,??_senddicoinforequest_0  ;; `?<Constant "SieJC_discoinfo">`
   \   00000004   30402DE9           PUSH     {R4,R5,LR}
   \   00000008   3CD04DE2           SUB      SP,SP,#+60
   \   0000000C   0C5091E8           LDM      R1,{R2,R3,R12,LR}
    224            char typ[]=IQTYPE_GET;
   \   00000010   5C109FE5           LDR      R1,??_senddicoinforequest_0+0x4  ;; `?<Constant "get">`
   \   00000014   0040A0E1           MOV      R4,R0
   \   00000018   04008DE2           ADD      R0,SP,#+4
   \   0000001C   0C5080E8           STM      R0,{R2,R3,R12,LR}
   \   00000020   002091E5           LDR      R2,[R1, #0]
    225            char iqd[]=DISCO_INFO;
   \   00000024   4C109FE5           LDR      R1,??_senddicoinforequest_0+0x8  ;; `?<Constant "http://jabber.org/pro...">_4`
   \   00000028   0D00A0E1           MOV      R0,SP
   \   0000002C   002080E5           STR      R2,[R0, #+0]
   \   00000030   2C50B1E8           LDM      R1!,{R2,R3,R5,R12,LR}
   \   00000034   14008DE2           ADD      R0,SP,#+20
   \   00000038   2C50A0E8           STM      R0!,{R2,R3,R5,R12,LR}
   \   0000003C   2C5091E8           LDM      R1,{R2,R3,R5,R12,LR}
   \   00000040   2C5080E8           STM      R0,{R2,R3,R5,R12,LR}
    226            SendIq(dest_jid, typ, discoid, iqd, NULL);
   \   00000044   0000A0E3           MOV      R0,#+0
   \   00000048   01002DE9           PUSH     {R0}
   \   0000004C   18308DE2           ADD      R3,SP,#+24
   \   00000050   08208DE2           ADD      R2,SP,#+8
   \   00000054   04108DE2           ADD      R1,SP,#+4
   \   00000058   0400A0E1           MOV      R0,R4
   \   0000005C   ........           BL       SendIq
    227            mfree(dest_jid);
   \   00000060   0400A0E1           MOV      R0,R4
   \   00000064   150000EF           SWI      +21
    228          }
   \   00000068   40D08DE2           ADD      SP,SP,#+64
   \   0000006C   3080BDE8           POP      {R4,R5,PC}       ;; return
   \                     ??_senddicoinforequest_0:
   \   00000070   ........           DC32     `?<Constant "SieJC_discoinfo">`
   \   00000074   ........           DC32     `?<Constant "get">`
   \   00000078   ........           DC32     `?<Constant "http://jabber.org/pro...">_4`
    229          
    230          

   \                                 In segment CODE, align 4, keep-with-next
    231          void Send_DiscoInfo_Request(char *dest_jid)
    232          {
   \                     Send_DiscoInfo_Request:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    233            char *to=malloc(128);
   \   00000008   8000A0E3           MOV      R0,#+128
   \   0000000C   140000EF           SWI      +20
   \   00000010   0050A0E1           MOV      R5,R0
    234            strcpy(to, dest_jid);
   \   00000014   0410A0E1           MOV      R1,R4
   \   00000018   1A0000EF           SWI      +26
    235            SUBPROC((void*)_senddicoinforequest,to);
   \   0000001C   08009FE5           LDR      R0,??Send_DiscoInfo_Request_0  ;; _senddicoinforequest
   \   00000020   0510A0E1           MOV      R1,R5
   \   00000024   710100EF           SWI      +369
    236          }
   \   00000028   3080BDE8           POP      {R4,R5,PC}       ;; return
   \                     ??Send_DiscoInfo_Request_0:
   \   0000002C   ........           DC32     _senddicoinforequest
    237          
    238          //Context: HELPER

   \                                 In segment CODE, align 4, keep-with-next
    239          void _sendversionrequest(char *dest_jid)
    240          {
    241            char typ[]=IQTYPE_GET;
   \                     _sendversionrequest:
   \   00000000   50109FE5           LDR      R1,??_sendversionrequest_0  ;; `?<Constant "get">_1`
   \   00000004   30402DE9           PUSH     {R4,R5,LR}
   \   00000008   18D04DE2           SUB      SP,SP,#+24
   \   0000000C   002091E5           LDR      R2,[R1, #0]
    242            char iq_v[]=IQ_VERSION;
   \   00000010   44109FE5           LDR      R1,??_sendversionrequest_0+0x4  ;; `?<Constant "jabber:iq:version">_1`
   \   00000014   0040A0E1           MOV      R4,R0
   \   00000018   0D00A0E1           MOV      R0,SP
   \   0000001C   002080E5           STR      R2,[R0, #+0]
   \   00000020   2C5091E8           LDM      R1,{R2,R3,R5,R12,LR}
   \   00000024   04008DE2           ADD      R0,SP,#+4
   \   00000028   2C5080E8           STM      R0,{R2,R3,R5,R12,LR}
    243          
    244            SendIq(dest_jid, typ, vreq_id, iq_v, NULL);
   \   0000002C   2C209FE5           LDR      R2,??_sendversionrequest_0+0x8  ;; auth_id + 32
   \   00000030   0000A0E3           MOV      R0,#+0
   \   00000034   01002DE9           PUSH     {R0}
   \   00000038   08308DE2           ADD      R3,SP,#+8
   \   0000003C   04108DE2           ADD      R1,SP,#+4
   \   00000040   0400A0E1           MOV      R0,R4
   \   00000044   ........           BL       SendIq
    245            mfree(dest_jid);
   \   00000048   0400A0E1           MOV      R0,R4
   \   0000004C   150000EF           SWI      +21
    246          }
   \   00000050   1CD08DE2           ADD      SP,SP,#+28
   \   00000054   3080BDE8           POP      {R4,R5,PC}       ;; return
   \                     ??_sendversionrequest_0:
   \   00000058   ........           DC32     `?<Constant "get">_1`
   \   0000005C   ........           DC32     `?<Constant "jabber:iq:version">_1`
   \   00000060   ........           DC32     auth_id + 32
    247          
    248          // Послать запрос о версии пользователю с указанным JID

   \                                 In segment CODE, align 4, keep-with-next
    249          void Send_Version_Request(char *dest_jid)
    250          {
   \                     Send_Version_Request:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    251            char *to=malloc(128);
   \   00000008   8000A0E3           MOV      R0,#+128
   \   0000000C   140000EF           SWI      +20
   \   00000010   0050A0E1           MOV      R5,R0
    252            strcpy(to, dest_jid);
   \   00000014   0410A0E1           MOV      R1,R4
   \   00000018   1A0000EF           SWI      +26
    253            SUBPROC((void*)_sendversionrequest,to);
   \   0000001C   08009FE5           LDR      R0,??Send_Version_Request_0  ;; _sendversionrequest
   \   00000020   0510A0E1           MOV      R1,R5
   \   00000024   710100EF           SWI      +369
    254          }
   \   00000028   3080BDE8           POP      {R4,R5,PC}       ;; return
   \                     ??Send_Version_Request_0:
   \   0000002C   ........           DC32     _sendversionrequest
    255          //Context: HELPER
    256          

   \                                 In segment CODE, align 4, keep-with-next
    257          void _sendtimerequest(char *dest_jid)
    258          {
    259            char typ[]=IQTYPE_GET;
   \                     _sendtimerequest:
   \   00000000   50109FE5           LDR      R1,??_sendtimerequest_0  ;; `?<Constant "get">_2`
   \   00000004   10402DE9           PUSH     {R4,LR}
   \   00000008   14D04DE2           SUB      SP,SP,#+20
   \   0000000C   002091E5           LDR      R2,[R1, #0]
    260            char iq_v[]=IQ_TIME;
   \   00000010   44109FE5           LDR      R1,??_sendtimerequest_0+0x4  ;; `?<Constant "jabber:iq:time">_1`
   \   00000014   0040A0E1           MOV      R4,R0
   \   00000018   0D00A0E1           MOV      R0,SP
   \   0000001C   002080E5           STR      R2,[R0, #+0]
   \   00000020   0C5091E8           LDM      R1,{R2,R3,R12,LR}
   \   00000024   04008DE2           ADD      R0,SP,#+4
   \   00000028   0C5080E8           STM      R0,{R2,R3,R12,LR}
    261            SendIq(dest_jid, typ, treq_id, iq_v, NULL);
   \   0000002C   2C209FE5           LDR      R2,??_sendtimerequest_0+0x8  ;; auth_id + 64
   \   00000030   0000A0E3           MOV      R0,#+0
   \   00000034   01002DE9           PUSH     {R0}
   \   00000038   08308DE2           ADD      R3,SP,#+8
   \   0000003C   04108DE2           ADD      R1,SP,#+4
   \   00000040   0400A0E1           MOV      R0,R4
   \   00000044   ........           BL       SendIq
    262            mfree(dest_jid);
   \   00000048   0400A0E1           MOV      R0,R4
   \   0000004C   150000EF           SWI      +21
    263          }
   \   00000050   18D08DE2           ADD      SP,SP,#+24
   \   00000054   1080BDE8           POP      {R4,PC}          ;; return
   \                     ??_sendtimerequest_0:
   \   00000058   ........           DC32     `?<Constant "get">_2`
   \   0000005C   ........           DC32     `?<Constant "jabber:iq:time">_1`
   \   00000060   ........           DC32     auth_id + 64
    264          
    265          // Послать запрос о локальном времени клиента пользователю с указанным JID

   \                                 In segment CODE, align 4, keep-with-next
    266          void Send_Time_Request(char *dest_jid)
    267          {
   \                     Send_Time_Request:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    268            char *to=malloc(128);
   \   00000008   8000A0E3           MOV      R0,#+128
   \   0000000C   140000EF           SWI      +20
   \   00000010   0050A0E1           MOV      R5,R0
    269            strcpy(to, dest_jid);
   \   00000014   0410A0E1           MOV      R1,R4
   \   00000018   1A0000EF           SWI      +26
    270            SUBPROC((void*)_sendtimerequest,to);
   \   0000001C   08009FE5           LDR      R0,??Send_Time_Request_0  ;; _sendtimerequest
   \   00000020   0510A0E1           MOV      R1,R5
   \   00000024   710100EF           SWI      +369
    271          }
   \   00000028   3080BDE8           POP      {R4,R5,PC}       ;; return
   \                     ??Send_Time_Request_0:
   \   0000002C   ........           DC32     _sendtimerequest
    272          

   \                                 In segment CODE, align 4, keep-with-next
    273          void _sendvcardrequest(char *to)
    274          {
   \                     _sendvcardrequest:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    275            char* xmlq=malloc(1024);
   \   00000008   400EA0E3           MOV      R0,#+1024
   \   0000000C   140000EF           SWI      +20
   \   00000010   0050A0E1           MOV      R5,R0
    276            sprintf(xmlq, "<iq to='%s' type='get' id='%s'>\r\n<vCard xmlns='vcard-temp'/>\r\n</iq>", Mask_Special_Syms(to), vcreq_id);
   \   00000014   0400A0E1           MOV      R0,R4
   \   00000018   ........           _BLF     Mask_Special_Syms,??Mask_Special_Syms??rA
   \   0000001C   28309FE5           LDR      R3,??_sendvcardrequest_0  ;; auth_id + 80
   \   00000020   28109FE5           LDR      R1,??_sendvcardrequest_0+0x4  ;; `?<Constant "<iq to=\\'%s\\' type=\\'get...">`
   \   00000024   0020A0E1           MOV      R2,R0
   \   00000028   0500A0E1           MOV      R0,R5
   \   0000002C   160000EF           SWI      +22
    277            SendAnswer(xmlq);
   \   00000030   0500A0E1           MOV      R0,R5
   \   00000034   ........           _BLF     SendAnswer,??SendAnswer??rA
    278            mfree(xmlq);
   \   00000038   0500A0E1           MOV      R0,R5
   \   0000003C   150000EF           SWI      +21
    279            mfree(to);
   \   00000040   0400A0E1           MOV      R0,R4
   \   00000044   150000EF           SWI      +21
    280          }
   \   00000048   3080BDE8           POP      {R4,R5,PC}       ;; return
   \                     ??_sendvcardrequest_0:
   \   0000004C   ........           DC32     auth_id + 80
   \   00000050   ........           DC32     `?<Constant "<iq to=\\'%s\\' type=\\'get...">`
    281          
    282          // Послать запрос о версии vcard

   \                                 In segment CODE, align 4, keep-with-next
    283          void Send_Vcard_Request(char *dest_jid)
    284          {
   \                     Send_Vcard_Request:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    285            char *to=malloc(128);
   \   00000008   8000A0E3           MOV      R0,#+128
   \   0000000C   140000EF           SWI      +20
   \   00000010   0050A0E1           MOV      R5,R0
    286            strcpy(to, dest_jid);
   \   00000014   0410A0E1           MOV      R1,R4
   \   00000018   1A0000EF           SWI      +26
    287            SUBPROC((void*)_sendvcardrequest,to);
   \   0000001C   08009FE5           LDR      R0,??Send_Vcard_Request_0  ;; _sendvcardrequest
   \   00000020   0510A0E1           MOV      R1,R5
   \   00000024   710100EF           SWI      +369
    288          }
   \   00000028   3080BDE8           POP      {R4,R5,PC}       ;; return
   \                     ??Send_Vcard_Request_0:
   \   0000002C   ........           DC32     _sendvcardrequest
    289          

   \                                 In segment CODE, align 4, keep-with-next
    290          void _sendlastactivrequest(char *dest_jid)
    291          {
    292            char typ[]=IQTYPE_GET;
   \                     _sendlastactivrequest:
   \   00000000   50109FE5           LDR      R1,??_sendlastactivrequest_0  ;; `?<Constant "get">_3`
   \   00000004   10402DE9           PUSH     {R4,LR}
   \   00000008   14D04DE2           SUB      SP,SP,#+20
   \   0000000C   002091E5           LDR      R2,[R1, #0]
    293            char iq_v[]=IQ_IDLE;
   \   00000010   44109FE5           LDR      R1,??_sendlastactivrequest_0+0x4  ;; `?<Constant "jabber:iq:last">_1`
   \   00000014   0040A0E1           MOV      R4,R0
   \   00000018   0D00A0E1           MOV      R0,SP
   \   0000001C   002080E5           STR      R2,[R0, #+0]
   \   00000020   0C5091E8           LDM      R1,{R2,R3,R12,LR}
   \   00000024   04008DE2           ADD      R0,SP,#+4
   \   00000028   0C5080E8           STM      R0,{R2,R3,R12,LR}
    294            SendIq(dest_jid, typ, lastact_id, iq_v, NULL);
   \   0000002C   2C209FE5           LDR      R2,??_sendlastactivrequest_0+0x8  ;; auth_id + 96
   \   00000030   0000A0E3           MOV      R0,#+0
   \   00000034   01002DE9           PUSH     {R0}
   \   00000038   08308DE2           ADD      R3,SP,#+8
   \   0000003C   04108DE2           ADD      R1,SP,#+4
   \   00000040   0400A0E1           MOV      R0,R4
   \   00000044   ........           BL       SendIq
    295            mfree(dest_jid);
   \   00000048   0400A0E1           MOV      R0,R4
   \   0000004C   150000EF           SWI      +21
    296          }
   \   00000050   18D08DE2           ADD      SP,SP,#+24
   \   00000054   1080BDE8           POP      {R4,PC}          ;; return
   \                     ??_sendlastactivrequest_0:
   \   00000058   ........           DC32     `?<Constant "get">_3`
   \   0000005C   ........           DC32     `?<Constant "jabber:iq:last">_1`
   \   00000060   ........           DC32     auth_id + 96
    297          

   \                                 In segment CODE, align 4, keep-with-next
    298          void Send_LastActivity_Request(char *dest_jid)
    299          {
   \                     Send_LastActivity_Request:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    300            char *to=malloc(128);
   \   00000008   8000A0E3           MOV      R0,#+128
   \   0000000C   140000EF           SWI      +20
   \   00000010   0050A0E1           MOV      R5,R0
    301            strcpy(to, dest_jid);
   \   00000014   0410A0E1           MOV      R1,R4
   \   00000018   1A0000EF           SWI      +26
    302            SUBPROC((void*)_sendlastactivrequest,to);
   \   0000001C   08009FE5           LDR      R0,??Send_LastActivity_Request_0  ;; _sendlastactivrequest
   \   00000020   0510A0E1           MOV      R1,R5
   \   00000024   710100EF           SWI      +369
    303          }
   \   00000028   3080BDE8           POP      {R4,R5,PC}       ;; return
   \                     ??Send_LastActivity_Request_0:
   \   0000002C   ........           DC32     _sendlastactivrequest
    304          
    305          // Сгенерировать ver= исходя из текущих возможностей клиента
    306          // Возвращаемую строку необходимо освобождать!

   \                                 In segment CODE, align 4, keep-with-next
    307          char *Generate_Caps()
    308          {
    309            char answer[400];
    310            sprintf(answer, "client/mobile//SieJC %s:%i"
    311              "<%s"
    312              "<%s"
    313              "<%s"
    314              "<%s"
    315              "<%s"
    316              "<%s", VERSION_VERS, __SVN_REVISION__, DISCO_INFO, XMLNS_MUC, IQ_IDLE, IQ_TIME, IQ_VERSION, JABBER_URN_PING);
   \                     Generate_Caps:
   \   00000000   ........           LDR      R0,??DataTable53  ;; `?<Constant "<feature var=\\'urn:xmp...">`
   \   00000004   ........           LDR      R2,??DataTable43  ;; VERSION_VERS
   \   00000008   30402DE9           PUSH     {R4,R5,LR}
   \   0000000C   91DF4DE2           SUB      SP,SP,#+580
   \   00000010   651F80E2           ADD      R1,R0,#+404
   \   00000014   02002DE9           PUSH     {R1}
   \   00000018   D630A0E3           MOV      R3,#+214
   \   0000001C   A03E83E3           ORR      R3,R3,#0xA00
   \   00000020   601F80E2           ADD      R1,R0,#+384
   \   00000024   02002DE9           PUSH     {R1}
   \   00000028   5C1F80E2           ADD      R1,R0,#+368
   \   0000002C   02002DE9           PUSH     {R1}
   \   00000030   581F80E2           ADD      R1,R0,#+352
   \   00000034   02002DE9           PUSH     {R1}
   \   00000038   501F80E2           ADD      R1,R0,#+320
   \   0000003C   02002DE9           PUSH     {R1}
   \   00000040   461F80E2           ADD      R1,R0,#+280
   \   00000044   02002DE9           PUSH     {R1}
   \   00000048   E81080E2           ADD      R1,R0,#+232
   \   0000004C   18008DE2           ADD      R0,SP,#+24
   \   00000050   160000EF           SWI      +22
    317                
    318            if(DELIVERY_EVENTS)
   \   00000054   ........           LDR      R0,??DataTable49  ;; DELIVERY_EVENTS
   \   00000058   000090E5           LDR      R0,[R0, #+0]
   \   0000005C   18D08DE2           ADD      SP,SP,#+24
   \   00000060   000050E3           CMP      R0,#+0
   \   00000064   0600000A           BEQ      ??Generate_Caps_0
    319            {
    320              char xevents_feature[]="<"JABBER_XMPP_RECEIPTS;
   \   00000068   F8109FE5           LDR      R1,??Generate_Caps_1  ;; `?<Constant "<urn:xmpp:receipts">`
   \   0000006C   8C0F8DE2           ADD      R0,SP,#+560
   \   00000070   3C1091E8           LDM      R1,{R2-R5,R12}
    321              strcat(answer, xevents_feature);
   \   00000074   8C1F8DE2           ADD      R1,SP,#+560
   \   00000078   3C1080E8           STM      R0,{R2-R5,R12}
   \   0000007C   0D00A0E1           MOV      R0,SP
   \   00000080   170000EF           SWI      +23
    322            }
    323          
    324            if(COMPOSING_EVENTS)
   \                     ??Generate_Caps_0:
   \   00000084   ........           LDR      R0,??DataTable51  ;; COMPOSING_EVENTS
   \   00000088   000090E5           LDR      R0,[R0, #+0]
   \   0000008C   000050E3           CMP      R0,#+0
   \   00000090   0800000A           BEQ      ??Generate_Caps_2
    325            {
    326              char xevents_feature[]="<"XMLNS_CHATSTATES;
   \   00000094   D0109FE5           LDR      R1,??Generate_Caps_1+0x4  ;; `?<Constant "<http://jabber.org/pr...">`
   \   00000098   7C0F8DE2           ADD      R0,SP,#+496
   \   0000009C   3C10B1E8           LDM      R1!,{R2-R5,R12}
   \   000000A0   3C10A0E8           STM      R0!,{R2-R5,R12}
   \   000000A4   3C1091E8           LDM      R1,{R2-R5,R12}
    327              strcat(answer, xevents_feature);
   \   000000A8   7C1F8DE2           ADD      R1,SP,#+496
   \   000000AC   3C1080E8           STM      R0,{R2-R5,R12}
   \   000000B0   0D00A0E1           MOV      R0,SP
   \   000000B4   170000EF           SWI      +23
    328            }
    329          
    330            if(USE_ATTENTION)
   \                     ??Generate_Caps_2:
   \   000000B8   ........           LDR      R0,??DataTable50  ;; USE_ATTENTION
   \   000000BC   000090E5           LDR      R0,[R0, #+0]
   \   000000C0   000050E3           CMP      R0,#+0
   \   000000C4   0600000A           BEQ      ??Generate_Caps_3
    331            {
    332              char xevents_feature[]="<"JABBER_URN_ATTENTION;
   \   000000C8   A0109FE5           LDR      R1,??Generate_Caps_1+0x8  ;; `?<Constant "<urn:xmpp:attention:0">`
   \   000000CC   860F8DE2           ADD      R0,SP,#+536
   \   000000D0   3C5091E8           LDM      R1,{R2-R5,R12,LR}
    333              strcat(answer, xevents_feature);
   \   000000D4   861F8DE2           ADD      R1,SP,#+536
   \   000000D8   3C5080E8           STM      R0,{R2-R5,R12,LR}
   \   000000DC   0D00A0E1           MOV      R0,SP
   \   000000E0   170000EF           SWI      +23
    334            }
    335                
    336            SHA_CTX ctx;
    337            char *hash2 = malloc(256);
   \                     ??Generate_Caps_3:
   \   000000E4   400FA0E3           MOV      R0,#+256
   \   000000E8   140000EF           SWI      +20
   \   000000EC   0040A0E1           MOV      R4,R0
    338            zeromem(hash2,256);
   \   000000F0   401FA0E3           MOV      R1,#+256
   \   000000F4   1D0100EF           SWI      +285
    339            SHA1_Init(&ctx);
   \   000000F8   640F8DE2           ADD      R0,SP,#+400
   \   000000FC   BC0100EF           SWI      +444
    340            SHA1_Update(&ctx, answer, strlen(answer));
   \   00000100   0D00A0E1           MOV      R0,SP
   \   00000104   1B0000EF           SWI      +27
   \   00000108   0020A0E1           MOV      R2,R0
   \   0000010C   0D10A0E1           MOV      R1,SP
   \   00000110   640F8DE2           ADD      R0,SP,#+400
   \   00000114   BD0100EF           SWI      +445
    341            SHA1_Final(hash2,&ctx);
   \   00000118   641F8DE2           ADD      R1,SP,#+400
   \   0000011C   0400A0E1           MOV      R0,R4
   \   00000120   BE0100EF           SWI      +446
    342            char *Result_Resp = malloc(256);
   \   00000124   400FA0E3           MOV      R0,#+256
   \   00000128   140000EF           SWI      +20
   \   0000012C   0050A0E1           MOV      R5,R0
    343            zeromem(Result_Resp, 256);
   \   00000130   401FA0E3           MOV      R1,#+256
   \   00000134   1D0100EF           SWI      +285
    344            Base64Encode(hash2, strlen(hash2),Result_Resp, 256);
   \   00000138   0400A0E1           MOV      R0,R4
   \   0000013C   1B0000EF           SWI      +27
   \   00000140   0010A0E1           MOV      R1,R0
   \   00000144   403FA0E3           MOV      R3,#+256
   \   00000148   0520A0E1           MOV      R2,R5
   \   0000014C   0400A0E1           MOV      R0,R4
   \   00000150   440200EF           SWI      +580
    345            mfree(hash2);
   \   00000154   0400A0E1           MOV      R0,R4
   \   00000158   150000EF           SWI      +21
    346            return Result_Resp;
   \   0000015C   0500A0E1           MOV      R0,R5
   \   00000160   91DF8DE2           ADD      SP,SP,#+580
   \   00000164   3080BDE8           POP      {R4,R5,PC}       ;; return
   \                     ??Generate_Caps_1:
   \   00000168   ........           DC32     `?<Constant "<urn:xmpp:receipts">`
   \   0000016C   ........           DC32     `?<Constant "<http://jabber.org/pr...">`
   \   00000170   ........           DC32     `?<Constant "<urn:xmpp:attention:0">`
    347          }
    348          
    349          /*
    350            Послать своё присутствие (в частности, после этого на нас вываливаются
    351            присутствия остальных, а мы появляемся в ресурсах своего контакта)
    352          
    353          */
    354          // Context: HELPER

   \                                 In segment CODE, align 4, keep-with-next
    355          void Send_Presence(PRESENCE_INFO *pr_info)
    356          {
   \                     Send_Presence:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000004   A3DF4DE2           SUB      SP,SP,#+652
    357            extern char My_Presence;
    358            My_Presence = pr_info->status;
    359          
    360            OnlineInfo.status = pr_info->status;
   \   00000008   ........           LDR      R5,??DataTable56  ;; OnlineInfo
   \   0000000C   0040A0E1           MOV      R4,R0
   \   00000010   0210D4E5           LDRB     R1,[R4, #+2]
   \   00000014   58039FE5           LDR      R0,??Send_Presence_0  ;; My_Presence
   \   00000018   0010C0E5           STRB     R1,[R0, #+0]
   \   0000001C   0200D4E5           LDRB     R0,[R4, #+2]
   \   00000020   0000C5E5           STRB     R0,[R5, #+0]
    361            OnlineInfo.priority = pr_info->priority;
   \   00000024   F000D4E1           LDRSH    R0,[R4, #+0]
   \   00000028   B200C5E1           STRH     R0,[R5, #+2]
    362            if(OnlineInfo.txt)mfree(OnlineInfo.txt);
   \   0000002C   040095E5           LDR      R0,[R5, #+4]
   \   00000030   000050E3           CMP      R0,#+0
   \   00000034   0000000A           BEQ      ??Send_Presence_1
   \   00000038   150000EF           SWI      +21
    363            if(pr_info->message)
   \                     ??Send_Presence_1:
   \   0000003C   040094E5           LDR      R0,[R4, #+4]
   \   00000040   000050E3           CMP      R0,#+0
   \   00000044   0600000A           BEQ      ??Send_Presence_2
    364            {
    365              OnlineInfo.txt = malloc(strlen(pr_info->message)+1);
   \   00000048   1B0000EF           SWI      +27
   \   0000004C   010080E2           ADD      R0,R0,#+1
   \   00000050   140000EF           SWI      +20
   \   00000054   040085E5           STR      R0,[R5, #+4]
    366              strcpy(OnlineInfo.txt, pr_info->message);
   \   00000058   041094E5           LDR      R1,[R4, #+4]
   \   0000005C   1A0000EF           SWI      +26
   \   00000060   000000EA           B        ??Send_Presence_3
    367            }else OnlineInfo.txt = NULL;
   \                     ??Send_Presence_2:
   \   00000064   040085E5           STR      R0,[R5, #+4]
    368          
    369            //<c xmlns='http://jabber.org/protocol/caps' node='VERSION_NAME' ver='VERSION_VERS __SVN_REVISION__' />
    370          
    371            // Генерируем капс исходя из включённых фич
    372            char *caps = Generate_Caps();
   \                     ??Send_Presence_3:
   \   00000068   ........           BL       Generate_Caps
   \   0000006C   0060A0E1           MOV      R6,R0
    373          
    374            char* presence = malloc(1024);
   \   00000070   400EA0E3           MOV      R0,#+1024
   \   00000074   140000EF           SWI      +20
   \   00000078   0070A0E1           MOV      R7,R0
    375            if(pr_info->status!=PRESENCE_OFFLINE)
   \   0000007C   0200D4E5           LDRB     R0,[R4, #+2]
   \   00000080   D680A0E3           MOV      R8,#+214
   \   00000084   A08E88E3           ORR      R8,R8,#0xA00
   \   00000088   060050E3           CMP      R0,#+6
   \   0000008C   3B00000A           BEQ      ??Send_Presence_4
    376            {
    377            if(pr_info->status!=PRESENCE_INVISIBLE)
   \   00000090   050050E3           CMP      R0,#+5
   \   00000094   3700000A           BEQ      ??Send_Presence_5
    378            {
    379              if(pr_info->message)
   \   00000098   043094E5           LDR      R3,[R4, #+4]
   \   0000009C   000053E3           CMP      R3,#+0
   \   000000A0   1A00000A           BEQ      ??Send_Presence_6
    380              {
    381                char presence_template[]="<presence><priority>%d</priority><show>%s</show><status>%s</status><c xmlns='http://jabber.org/protocol/caps' node='%s %s-r%d' ver='%s' /></presence>"; //по идее для инвиз/оффлайн не надо отправлять инфо
   \   000000A4   CC129FE5           LDR      R1,??Send_Presence_0+0x4  ;; `?<Constant "<presence><priority>%...">`
   \   000000A8   20008DE2           ADD      R0,SP,#+32
   \   000000AC   9890A0E3           MOV      R9,#+152
   \                     ??Send_Presence_7:
   \   000000B0   049059E2           SUBS     R9,R9,#+4
   \   000000B4   092091E7           LDR      R2,[R1, R9]
   \   000000B8   092080E7           STR      R2,[R0, R9]
   \   000000BC   FBFFFF1A           BNE      ??Send_Presence_7
    382                snprintf(presence,1024,presence_template, pr_info->priority, PRESENCES[pr_info->status], pr_info->message, VERSION_NAME, VERSION_VERS, __SVN_REVISION__, caps);
   \   000000C0   0600A0E1           MOV      R0,R6
   \   000000C4   01002DE9           PUSH     {R0}
   \   000000C8   401EA0E3           MOV      R1,#+1024
   \   000000CC   0800A0E1           MOV      R0,R8
   \   000000D0   01002DE9           PUSH     {R0}
   \   000000D4   ........           LDR      R0,??DataTable43  ;; VERSION_VERS
   \   000000D8   01002DE9           PUSH     {R0}
   \   000000DC   ........           LDR      R0,??DataTable44  ;; VERSION_NAME
   \   000000E0   01002DE9           PUSH     {R0}
   \   000000E4   08002DE9           PUSH     {R3}
   \   000000E8   0200D4E5           LDRB     R0,[R4, #+2]
   \   000000EC   000185E0           ADD      R0,R5,R0, LSL #+2
   \   000000F0   0C0090E5           LDR      R0,[R0, #+12]
   \   000000F4   01002DE9           PUSH     {R0}
   \   000000F8   F030D4E1           LDRSH    R3,[R4, #+0]
   \   000000FC   38208DE2           ADD      R2,SP,#+56
   \   00000100   0700A0E1           MOV      R0,R7
   \   00000104   1B0100EF           SWI      +283
   \   00000108   18D08DE2           ADD      SP,SP,#+24
   \   0000010C   340000EA           B        ??Send_Presence_8
    383              }
    384              else
    385              {
    386                char presence_template[]="<presence><priority>%d</priority><show>%s</show><c xmlns='http://jabber.org/protocol/caps' node='%s %s-r%d' ver='%s' /></presence>";//по идее для инвиз/оффлайн не надо отправлять инфо
   \                     ??Send_Presence_6:
   \   00000110   64129FE5           LDR      R1,??Send_Presence_0+0x8  ;; `?<Constant "<presence><priority>%...">_1`
   \   00000114   530F8DE2           ADD      R0,SP,#+332
   \   00000118   8430A0E3           MOV      R3,#+132
   \                     ??Send_Presence_9:
   \   0000011C   043053E2           SUBS     R3,R3,#+4
   \   00000120   032091E7           LDR      R2,[R1, R3]
   \   00000124   032080E7           STR      R2,[R0, R3]
   \   00000128   FBFFFF1A           BNE      ??Send_Presence_9
    387                snprintf(presence,1024,presence_template, pr_info->priority, PRESENCES[pr_info->status], VERSION_NAME, VERSION_VERS, __SVN_REVISION__, caps);
   \   0000012C   0600A0E1           MOV      R0,R6
   \   00000130   01002DE9           PUSH     {R0}
   \   00000134   401EA0E3           MOV      R1,#+1024
   \   00000138   0800A0E1           MOV      R0,R8
   \   0000013C   01002DE9           PUSH     {R0}
   \   00000140   ........           LDR      R0,??DataTable43  ;; VERSION_VERS
   \   00000144   01002DE9           PUSH     {R0}
   \   00000148   ........           LDR      R0,??DataTable44  ;; VERSION_NAME
   \   0000014C   01002DE9           PUSH     {R0}
   \   00000150   0200D4E5           LDRB     R0,[R4, #+2]
   \   00000154   000185E0           ADD      R0,R5,R0, LSL #+2
   \   00000158   0C0090E5           LDR      R0,[R0, #+12]
   \   0000015C   01002DE9           PUSH     {R0}
   \   00000160   F030D4E1           LDRSH    R3,[R4, #+0]
   \   00000164   582F8DE2           ADD      R2,SP,#+352
   \   00000168   0700A0E1           MOV      R0,R7
   \   0000016C   1B0100EF           SWI      +283
   \   00000170   14D08DE2           ADD      SP,SP,#+20
   \   00000174   1A0000EA           B        ??Send_Presence_8
    388              }
    389            }
    390            else
    391            {
    392                char presence_template[]="<presence type='invisible'/>";
   \                     ??Send_Presence_5:
   \   00000178   00029FE5           LDR      R0,??Send_Presence_0+0xC  ;; `?<Constant "<presence type=\\'invis...">`
   \   0000017C   100000EA           B        ??Send_Presence_10
    393                strcpy(presence,presence_template);
    394            }
    395            }
    396            else
    397            {
    398              if(pr_info->message)
   \                     ??Send_Presence_4:
   \   00000180   043094E5           LDR      R3,[R4, #+4]
   \   00000184   000053E3           CMP      R3,#+0
   \   00000188   0C00000A           BEQ      ??Send_Presence_11
    399              {
    400                char presence_template[]="<presence type='unavailable'><status>%s</status></presence>";
   \   0000018C   F0019FE5           LDR      R0,??Send_Presence_0+0x10  ;; `?<Constant "<presence type=\\'unava...">`
   \   00000190   941F8DE2           ADD      R1,SP,#+592
   \   00000194   045EB0E8           LDM      R0!,{R2,R9-R12,LR}
   \   00000198   045EA1E8           STM      R1!,{R2,R9-R12,LR}
   \   0000019C   045EB0E8           LDM      R0!,{R2,R9-R12,LR}
   \   000001A0   045EA1E8           STM      R1!,{R2,R9-R12,LR}
   \   000001A4   040690E8           LDM      R0,{R2,R9,R10}
    401                snprintf(presence,1024,presence_template, pr_info->message);
   \   000001A8   0700A0E1           MOV      R0,R7
   \   000001AC   040681E8           STM      R1,{R2,R9,R10}
   \   000001B0   401EA0E3           MOV      R1,#+1024
   \   000001B4   942F8DE2           ADD      R2,SP,#+592
   \   000001B8   1B0100EF           SWI      +283
   \   000001BC   080000EA           B        ??Send_Presence_8
    402              }
    403              else
    404              {
    405                char presence_template[]="<presence type='unavailable'/>";
   \                     ??Send_Presence_11:
   \   000001C0   C0019FE5           LDR      R0,??Send_Presence_0+0x14  ;; `?<Constant "<presence type=\\'unava...">_1`
   \                     ??Send_Presence_10:
   \   000001C4   0D10A0E1           MOV      R1,SP
   \   000001C8   0C5EB0E8           LDM      R0!,{R2,R3,R9-R12,LR}
   \   000001CC   0C5EA1E8           STM      R1!,{R2,R3,R9-R12,LR}
   \   000001D0   040090E8           LDM      R0,{R2}
    406                strcpy(presence,presence_template);
   \   000001D4   0700A0E1           MOV      R0,R7
   \   000001D8   040081E8           STM      R1,{R2}
   \   000001DC   0D10A0E1           MOV      R1,SP
   \   000001E0   1A0000EF           SWI      +26
    407              }
    408            }
    409            SendAnswer(presence);
   \                     ??Send_Presence_8:
   \   000001E4   0700A0E1           MOV      R0,R7
   \   000001E8   ........           _BLF     SendAnswer,??SendAnswer??rA
    410          
    411          // MUC support
    412            MUC_ITEM* m_ex = muctop;
   \   000001EC   089095E5           LDR      R9,[R5, #+8]
   \   000001F0   000059E3           CMP      R9,#+0
   \   000001F4   4900000A           BEQ      ??Send_Presence_12
    413            while(m_ex)
    414            {
    415              char *_to = Mask_Special_Syms(m_ex->conf_jid);
   \                     ??Send_Presence_13:
   \   000001F8   000099E5           LDR      R0,[R9, #+0]
   \   000001FC   ........           _BLF     Mask_Special_Syms,??Mask_Special_Syms??rA
   \   00000200   00A0A0E1           MOV      R10,R0
    416              char *_from = Mask_Special_Syms(My_JID_full);
   \   00000204   ........           LDR      R0,??DataTable23  ;; My_JID_full
   \   00000208   ........           _BLF     Mask_Special_Syms,??Mask_Special_Syms??rA
   \   0000020C   00B0A0E1           MOV      R11,R0
    417              if(pr_info->message)
   \   00000210   040094E5           LDR      R0,[R4, #+4]
   \   00000214   000050E3           CMP      R0,#+0
   \   00000218   1C00000A           BEQ      ??Send_Presence_14
    418              {
    419                char presence_template[]="<presence from='%s' to='%s'><show>%s</show><status>%s</status><c xmlns='http://jabber.org/protocol/caps' node='%s %s-r%d' ver='%s' /></presence>";//по идее для инвиз/оффлайн не надо отправлять инфо
   \   0000021C   68219FE5           LDR      R2,??Send_Presence_0+0x18  ;; `?<Constant "<presence from=\\'%s\\' t...">`
   \   00000220   B8108DE2           ADD      R1,SP,#+184
   \   00000224   94C0A0E3           MOV      R12,#+148
   \                     ??Send_Presence_15:
   \   00000228   04C05CE2           SUBS     R12,R12,#+4
   \   0000022C   0C3092E7           LDR      R3,[R2, R12]
   \   00000230   0C3081E7           STR      R3,[R1, R12]
   \   00000234   FBFFFF1A           BNE      ??Send_Presence_15
    420                snprintf(presence,1024,presence_template, _from, _to, PRESENCES[pr_info->status], pr_info->message, VERSION_NAME, VERSION_VERS, __SVN_REVISION__, caps);
   \   00000238   0610A0E1           MOV      R1,R6
   \   0000023C   02002DE9           PUSH     {R1}
   \   00000240   0B30A0E1           MOV      R3,R11
   \   00000244   0810A0E1           MOV      R1,R8
   \   00000248   02002DE9           PUSH     {R1}
   \   0000024C   ........           LDR      R1,??DataTable43  ;; VERSION_VERS
   \   00000250   02002DE9           PUSH     {R1}
   \   00000254   ........           LDR      R1,??DataTable44  ;; VERSION_NAME
   \   00000258   02002DE9           PUSH     {R1}
   \   0000025C   01002DE9           PUSH     {R0}
   \   00000260   0200D4E5           LDRB     R0,[R4, #+2]
   \   00000264   401EA0E3           MOV      R1,#+1024
   \   00000268   000185E0           ADD      R0,R5,R0, LSL #+2
   \   0000026C   0C0090E5           LDR      R0,[R0, #+12]
   \   00000270   01002DE9           PUSH     {R0}
   \   00000274   0A00A0E1           MOV      R0,R10
   \   00000278   01002DE9           PUSH     {R0}
   \   0000027C   D4208DE2           ADD      R2,SP,#+212
   \   00000280   0700A0E1           MOV      R0,R7
   \   00000284   1B0100EF           SWI      +283
   \   00000288   1CD08DE2           ADD      SP,SP,#+28
   \   0000028C   1A0000EA           B        ??Send_Presence_16
    421              }
    422              else
    423              {
    424                char presence_template[]="<presence from='%s' to='%s'><show>%s</show><c xmlns='http://jabber.org/protocol/caps' node='%s %s-r%d' ver='%s' /></presence>";//по идее для инвиз/оффлайн не надо отправлять инфо
   \                     ??Send_Presence_14:
   \   00000290   F8109FE5           LDR      R1,??Send_Presence_0+0x1C  ;; `?<Constant "<presence from=\\'%s\\' t...">_1`
   \   00000294   740F8DE2           ADD      R0,SP,#+464
   \   00000298   8030A0E3           MOV      R3,#+128
   \                     ??Send_Presence_17:
   \   0000029C   043053E2           SUBS     R3,R3,#+4
   \   000002A0   032091E7           LDR      R2,[R1, R3]
   \   000002A4   032080E7           STR      R2,[R0, R3]
   \   000002A8   FBFFFF1A           BNE      ??Send_Presence_17
    425                snprintf(presence,1024,presence_template, _from, _to, PRESENCES[pr_info->status], VERSION_NAME, VERSION_VERS, __SVN_REVISION__, caps);
   \   000002AC   0600A0E1           MOV      R0,R6
   \   000002B0   01002DE9           PUSH     {R0}
   \   000002B4   0B30A0E1           MOV      R3,R11
   \   000002B8   401EA0E3           MOV      R1,#+1024
   \   000002BC   0800A0E1           MOV      R0,R8
   \   000002C0   01002DE9           PUSH     {R0}
   \   000002C4   ........           LDR      R0,??DataTable43  ;; VERSION_VERS
   \   000002C8   01002DE9           PUSH     {R0}
   \   000002CC   ........           LDR      R0,??DataTable44  ;; VERSION_NAME
   \   000002D0   01002DE9           PUSH     {R0}
   \   000002D4   0200D4E5           LDRB     R0,[R4, #+2]
   \   000002D8   000185E0           ADD      R0,R5,R0, LSL #+2
   \   000002DC   0C0090E5           LDR      R0,[R0, #+12]
   \   000002E0   01002DE9           PUSH     {R0}
   \   000002E4   0A00A0E1           MOV      R0,R10
   \   000002E8   01002DE9           PUSH     {R0}
   \   000002EC   7A2F8DE2           ADD      R2,SP,#+488
   \   000002F0   0700A0E1           MOV      R0,R7
   \   000002F4   1B0100EF           SWI      +283
   \   000002F8   18D08DE2           ADD      SP,SP,#+24
    426              }
    427              mfree(_to);
   \                     ??Send_Presence_16:
   \   000002FC   0A00A0E1           MOV      R0,R10
   \   00000300   150000EF           SWI      +21
    428              mfree(_from);
   \   00000304   0B00A0E1           MOV      R0,R11
   \   00000308   150000EF           SWI      +21
    429              SendAnswer(presence);
   \   0000030C   0700A0E1           MOV      R0,R7
   \   00000310   ........           _BLF     SendAnswer,??SendAnswer??rA
    430              m_ex=m_ex->next;
   \   00000314   089099E5           LDR      R9,[R9, #+8]
    431            };
   \   00000318   000059E3           CMP      R9,#+0
   \   0000031C   B5FFFF1A           BNE      ??Send_Presence_13
    432            mfree(caps);
   \                     ??Send_Presence_12:
   \   00000320   0600A0E1           MOV      R0,R6
   \   00000324   150000EF           SWI      +21
    433            mfree(presence);
   \   00000328   0700A0E1           MOV      R0,R7
   \   0000032C   150000EF           SWI      +21
    434            if(pr_info->message)mfree(pr_info->message);
   \   00000330   040094E5           LDR      R0,[R4, #+4]
   \   00000334   000050E3           CMP      R0,#+0
   \   00000338   0000000A           BEQ      ??Send_Presence_18
   \   0000033C   150000EF           SWI      +21
    435            if(pr_info->status==PRESENCE_OFFLINE)
   \                     ??Send_Presence_18:
   \   00000340   0200D4E5           LDRB     R0,[R4, #+2]
   \   00000344   060050E3           CMP      R0,#+6
   \   00000348   0000001A           BNE      ??Send_Presence_19
    436            {
    437              Send_Disconnect();
   \   0000034C   ........           BL       Send_Disconnect
    438            }
    439            mfree(pr_info);
   \                     ??Send_Presence_19:
   \   00000350   0400A0E1           MOV      R0,R4
   \   00000354   150000EF           SWI      +21
    440            LockSched();
   \   00000358   460100EF           SWI      +326
    441            strcpy(logmsg,"Send presence");
   \   0000035C   30109FE5           LDR      R1,??Send_Presence_0+0x20  ;; `?<Constant "<presence type=\\'invis...">` + 32
   \   00000360   ........           LDR      R0,??DataTable31  ;; logmsg
   \   00000364   1A0000EF           SWI      +26
    442            UnlockSched();
   \   00000368   470100EF           SWI      +327
    443          }
   \   0000036C   A3DF8DE2           ADD      SP,SP,#+652
   \   00000370   F08FBDE8           POP      {R4-R11,PC}      ;; return
   \                     ??Send_Presence_0:
   \   00000374   ........           DC32     My_Presence
   \   00000378   ........           DC32     `?<Constant "<presence><priority>%...">`
   \   0000037C   ........           DC32     `?<Constant "<presence><priority>%...">_1`
   \   00000380   ........           DC32     `?<Constant "<presence type=\\'invis...">`
   \   00000384   ........           DC32     `?<Constant "<presence type=\\'unava...">`
   \   00000388   ........           DC32     `?<Constant "<presence type=\\'unava...">_1`
   \   0000038C   ........           DC32     `?<Constant "<presence from=\\'%s\\' t...">`
   \   00000390   ........           DC32     `?<Constant "<presence from=\\'%s\\' t...">_1`
   \   00000394   ........           DC32     `?<Constant "<presence type=\\'invis...">` + 32
    444          

   \                                 In segment CODE, align 4, keep-with-next
    445          void Send_ShortPresence(char *to,char type)
    446          {
   \                     Send_ShortPresence:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   \   00000004   0150A0E1           MOV      R5,R1
    447            char pr_templ[] = "<presence to='%s' type='%s'/>";
   \   00000008   58109FE5           LDR      R1,??Send_ShortPresence_0  ;; `?<Constant "<presence to=\\'%s\\' typ...">`
   \   0000000C   20D04DE2           SUB      SP,SP,#+32
   \   00000010   CC5391E8           LDM      R1,{R2,R3,R6-R9,R12,LR}
   \   00000014   0040A0E1           MOV      R4,R0
   \   00000018   0D00A0E1           MOV      R0,SP
   \   0000001C   CC5380E8           STM      R0,{R2,R3,R6-R9,R12,LR}
    448            char* pr=malloc(1024);
   \   00000020   400EA0E3           MOV      R0,#+1024
   \   00000024   140000EF           SWI      +20
   \   00000028   0060A0E1           MOV      R6,R0
    449            sprintf(pr, pr_templ,Mask_Special_Syms(to),PRESENCES[type]);
   \   0000002C   0400A0E1           MOV      R0,R4
   \   00000030   ........           _BLF     Mask_Special_Syms,??Mask_Special_Syms??rA
   \   00000034   ........           LDR      R1,??DataTable62  ;; OnlineInfo
   \   00000038   0020A0E1           MOV      R2,R0
   \   0000003C   051181E0           ADD      R1,R1,R5, LSL #+2
   \   00000040   0C3091E5           LDR      R3,[R1, #+12]
   \   00000044   0D10A0E1           MOV      R1,SP
   \   00000048   0600A0E1           MOV      R0,R6
   \   0000004C   160000EF           SWI      +22
    450            SendAnswer(pr);
   \   00000050   0600A0E1           MOV      R0,R6
   \   00000054   ........           _BLF     SendAnswer,??SendAnswer??rA
    451            mfree(pr);
   \   00000058   0600A0E1           MOV      R0,R6
   \   0000005C   150000EF           SWI      +21
    452          }
   \   00000060   20D08DE2           ADD      SP,SP,#+32
   \   00000064   F083BDE8           POP      {R4-R9,PC}       ;; return
   \                     ??Send_ShortPresence_0:
   \   00000068   ........           DC32     `?<Constant "<presence to=\\'%s\\' typ...">`
    453          
    454          /*
    455            Послать запрос ростера
    456          */
    457          // Context: HELPER

   \                                 In segment CODE, align 4, keep-with-next
    458          void Send_Roster_Query()
    459          {
   \                     Send_Roster_Query:
   \   00000000   10402DE9           PUSH     {R4,LR}
    460            SendIq(NULL, IQTYPE_GET, rost_id, IQ_ROSTER, NULL);
   \   00000004   ........           LDR      R4,??DataTable53  ;; `?<Constant "<feature var=\\'urn:xmp...">`
   \   00000008   2C209FE5           LDR      R2,??Send_Roster_Query_0+0x4  ;; auth_id + 16
   \   0000000C   0000A0E3           MOV      R0,#+0
   \   00000010   01002DE9           PUSH     {R0}
   \   00000014   693F84E2           ADD      R3,R4,#+420
   \   00000018   061F8FE2           ADR      R1,??Send_Roster_Query_0  ;; "get"
   \   0000001C   ........           BL       SendIq
    461            LockSched();
   \   00000020   460100EF           SWI      +326
    462            strcpy(logmsg,"Send roster Q");
   \   00000024   ........           LDR      R0,??DataTable31  ;; logmsg
   \   00000028   6E1F84E2           ADD      R1,R4,#+440
   \   0000002C   1A0000EF           SWI      +26
    463            UnlockSched();
   \   00000030   470100EF           SWI      +327
    464          }
   \   00000034   1180BDE8           POP      {R0,R4,PC}       ;; return
   \                     ??Send_Roster_Query_0:
   \   00000038   67657400           DC8      "get"
   \   0000003C   ........           DC32     auth_id + 16
    465          
    466          // Context: HELPER

   \                                 In segment CODE, align 4, keep-with-next
    467          void SendMessage(char* jid, IPC_MESSAGE_S *mess)
    468          {
   \                     SendMessage:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
    469          /*
    470            <message to='romeo@montague.net' id='message22'>
    471                <body>Art thou not Romeo, and a Montague?</body>
    472                <request xmlns='urn:xmpp:receipts'/>
    473            </message>
    474          */
    475          
    476            char *_jid = Mask_Special_Syms(jid);
    477            char mes_template[]="<message to='%s' id='SieJC_%d' type='%s'><body>%s</body>";
   \   00000004   ........           LDR      R6,??DataTable41  ;; `?<Constant "<message to=\\'%s\\' id=\\'...">`
   \   00000008   3CD04DE2           SUB      SP,SP,#+60
   \   0000000C   0140A0E1           MOV      R4,R1
   \   00000010   ........           _BLF     Mask_Special_Syms,??Mask_Special_Syms??rA
   \   00000014   0050A0E1           MOV      R5,R0
   \   00000018   0D00A0E1           MOV      R0,SP
   \   0000001C   0610A0E1           MOV      R1,R6
   \   00000020   8C57B1E8           LDM      R1!,{R2,R3,R7-R10,R12,LR}
   \   00000024   8C57A0E8           STM      R0!,{R2,R3,R7-R10,R12,LR}
   \   00000028   8C5391E8           LDM      R1,{R2,R3,R7-R9,R12,LR}
   \   0000002C   8C5380E8           STM      R0,{R2,R3,R7-R9,R12,LR}
    478            char* msg_buf = malloc(MAX_MSG_LEN*2+200);
    479            if(mess->IsGroupChat)
   \   00000030   ........           LDR      R8,??DataTable46  ;; intimes
   \   00000034   C800A0E3           MOV      R0,#+200
   \   00000038   800D80E3           ORR      R0,R0,#0x2000
   \   0000003C   140000EF           SWI      +20
   \   00000040   0070A0E1           MOV      R7,R0
   \   00000044   0000D4E5           LDRB     R0,[R4, #+0]
    480            {
    481               sprintf(msg_buf, mes_template, _jid, m_num, MSGSTR_GCHAT, mess->body);
    482            }else sprintf(msg_buf, mes_template, _jid, m_num, MSGSTR_CHAT, mess->body);
   \   00000048   0520A0E1           MOV      R2,R5
   \   0000004C   000050E3           CMP      R0,#+0
   \   00000050   040094E5           LDR      R0,[R4, #+4]
   \   00000054   01002DE9           PUSH     {R0}
   \   00000058   44008612           ADDNE    R0,R6,#+68
   \   0000005C   3C008602           ADDEQ    R0,R6,#+60
   \   00000060   01002DE9           PUSH     {R0}
   \   00000064   103098E5           LDR      R3,[R8, #+16]
   \   00000068   08108DE2           ADD      R1,SP,#+8
   \   0000006C   0700A0E1           MOV      R0,R7
   \   00000070   160000EF           SWI      +22
    483            if (DELIVERY_EVENTS && !mess->IsGroupChat) strcat(msg_buf,"<request xmlns='urn:xmpp:receipts'/>"); //В конференции не посылается
   \   00000074   ........           LDR      R0,??DataTable49  ;; DELIVERY_EVENTS
   \   00000078   08D08DE2           ADD      SP,SP,#+8
   \   0000007C   000090E5           LDR      R0,[R0, #+0]
   \   00000080   000050E3           CMP      R0,#+0
   \   00000084   0500000A           BEQ      ??SendMessage_0
   \   00000088   0000D4E5           LDRB     R0,[R4, #+0]
   \   0000008C   000050E3           CMP      R0,#+0
   \   00000090   0200001A           BNE      ??SendMessage_0
   \   00000094   501086E2           ADD      R1,R6,#+80
   \   00000098   0700A0E1           MOV      R0,R7
   \   0000009C   170000EF           SWI      +23
    484            if (COMPOSING_EVENTS && !mess->IsGroupChat) strcat(msg_buf,"<active xmlns='http://jabber.org/protocol/chatstates'/>");
   \                     ??SendMessage_0:
   \   000000A0   ........           LDR      R0,??DataTable51  ;; COMPOSING_EVENTS
   \   000000A4   000090E5           LDR      R0,[R0, #+0]
   \   000000A8   000050E3           CMP      R0,#+0
   \   000000AC   0500000A           BEQ      ??SendMessage_1
   \   000000B0   0000D4E5           LDRB     R0,[R4, #+0]
   \   000000B4   000050E3           CMP      R0,#+0
   \   000000B8   0200001A           BNE      ??SendMessage_1
   \   000000BC   781086E2           ADD      R1,R6,#+120
   \   000000C0   0700A0E1           MOV      R0,R7
   \   000000C4   170000EF           SWI      +23
    485            strcat(msg_buf,"</message>");
   \                     ??SendMessage_1:
   \   000000C8   B01086E2           ADD      R1,R6,#+176
   \   000000CC   0700A0E1           MOV      R0,R7
   \   000000D0   170000EF           SWI      +23
    486            mfree(mess->body);
   \   000000D4   040094E5           LDR      R0,[R4, #+4]
   \   000000D8   150000EF           SWI      +21
    487            mfree(mess);
   \   000000DC   0400A0E1           MOV      R0,R4
   \   000000E0   150000EF           SWI      +21
    488            mfree(_jid);
   \   000000E4   0500A0E1           MOV      R0,R5
   \   000000E8   150000EF           SWI      +21
    489          #ifdef LOG_ALL
    490            LockSched();
    491            Log("MESS_OUT", msg_buf);
    492            UnlockSched();
    493          #endif
    494            SendAnswer(msg_buf);
   \   000000EC   0700A0E1           MOV      R0,R7
   \   000000F0   ........           _BLF     SendAnswer,??SendAnswer??rA
    495            mfree(msg_buf);
   \   000000F4   0700A0E1           MOV      R0,R7
   \   000000F8   150000EF           SWI      +21
    496            m_num++;
   \   000000FC   100098E5           LDR      R0,[R8, #+16]
    497            GetDateTime(&indates, &intimes);
   \   00000100   0810A0E1           MOV      R1,R8
   \   00000104   010080E2           ADD      R0,R0,#+1
   \   00000108   100088E5           STR      R0,[R8, #+16]
   \   0000010C   080088E2           ADD      R0,R8,#+8
   \   00000110   B40000EF           SWI      +180
    498          }
   \   00000114   3CD08DE2           ADD      SP,SP,#+60
   \   00000118   F087BDE8           POP      {R4-R10,PC}      ;; return
    499          
    500           // Context: HELPER

   \                                 In segment CODE, align 4, keep-with-next
    501          void SendComposing(char* jid, IPC_MESSAGE_S *mess)
    502          {
   \                     SendComposing:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0140A0E1           MOV      R4,R1
    503            /*
    504            <message 
    505              from='bernardo@shakespeare.lit/pda'
    506              to='francisco@shakespeare.lit/elsinore'
    507              type='chat'>
    508            <composing xmlns='http://jabber.org/protocol/chatstates'/>
    509          </message>
    510          */
    511            extern const int COMPOSING_EVENTS;
    512            if(!COMPOSING_EVENTS)return;
   \   00000008   ........           LDR      R1,??DataTable51  ;; COMPOSING_EVENTS
   \   0000000C   70D04DE2           SUB      SP,SP,#+112
   \   00000010   001091E5           LDR      R1,[R1, #+0]
   \   00000014   000051E3           CMP      R1,#+0
   \   00000018   2400000A           BEQ      ??SendComposing_0
    513            char* _jid = Mask_Special_Syms(jid);
   \   0000001C   ........           _BLF     Mask_Special_Syms,??Mask_Special_Syms??rA
    514            const char mes_template[]="<message to='%s' id='SieJC_%d' type='%s'><composing xmlns='http://jabber.org/protocol/chatstates'/></message>";
   \   00000020   90109FE5           LDR      R1,??SendComposing_1  ;; `?<Constant "<message to=\\'%s\\' id=\\'...">_1`
   \   00000024   0050A0E1           MOV      R5,R0
   \   00000028   0D00A0E1           MOV      R0,SP
   \   0000002C   7030A0E3           MOV      R3,#+112
   \                     ??SendComposing_2:
   \   00000030   043053E2           SUBS     R3,R3,#+4
   \   00000034   032091E7           LDR      R2,[R1, R3]
   \   00000038   032080E7           STR      R2,[R0, R3]
   \   0000003C   FBFFFF1A           BNE      ??SendComposing_2
    515            char* msg_buf = malloc(MAX_MSG_LEN*2+200);
    516            if(mess->IsGroupChat)
   \   00000040   ........           LDR      R6,??DataTable37  ;; intimes
   \   00000044   C800A0E3           MOV      R0,#+200
   \   00000048   800D80E3           ORR      R0,R0,#0x2000
   \   0000004C   140000EF           SWI      +20
   \   00000050   0010D4E5           LDRB     R1,[R4, #+0]
   \   00000054   0070A0E1           MOV      R7,R0
   \   00000058   ........           LDR      R0,??DataTable41  ;; `?<Constant "<message to=\\'%s\\' id=\\'...">`
   \   0000005C   000051E3           CMP      R1,#+0
    517            {
    518               sprintf(msg_buf, mes_template, _jid, m_num, MSGSTR_GCHAT);
   \   00000060   44008012           ADDNE    R0,R0,#+68
    519            }else sprintf(msg_buf, mes_template, _jid, m_num, MSGSTR_CHAT);
   \   00000064   3C008002           ADDEQ    R0,R0,#+60
   \   00000068   01002DE9           PUSH     {R0}
   \   0000006C   103096E5           LDR      R3,[R6, #+16]
   \   00000070   0520A0E1           MOV      R2,R5
   \   00000074   04108DE2           ADD      R1,SP,#+4
   \   00000078   0700A0E1           MOV      R0,R7
   \   0000007C   160000EF           SWI      +22
   \   00000080   04D08DE2           ADD      SP,SP,#+4
    520          
    521            mfree(_jid);
   \   00000084   0500A0E1           MOV      R0,R5
   \   00000088   150000EF           SWI      +21
    522            SendAnswer(msg_buf);
   \   0000008C   0700A0E1           MOV      R0,R7
   \   00000090   ........           _BLF     SendAnswer,??SendAnswer??rA
    523            mfree(mess);
   \   00000094   0400A0E1           MOV      R0,R4
   \   00000098   150000EF           SWI      +21
    524            mfree(msg_buf);
   \   0000009C   0700A0E1           MOV      R0,R7
   \   000000A0   150000EF           SWI      +21
    525            m_num++;
   \   000000A4   100096E5           LDR      R0,[R6, #+16]
   \   000000A8   010080E2           ADD      R0,R0,#+1
   \   000000AC   100086E5           STR      R0,[R6, #+16]
    526          }
   \                     ??SendComposing_0:
   \   000000B0   70D08DE2           ADD      SP,SP,#+112      ;; stack cleaning
   \   000000B4   F080BDE8           POP      {R4-R7,PC}       ;; return
   \                     ??SendComposing_1:
   \   000000B8   ........           DC32     `?<Constant "<message to=\\'%s\\' id=\\'...">_1`
    527          
    528           // Context: HELPER

   \                                 In segment CODE, align 4, keep-with-next
    529          void CancelComposing(char* jid, IPC_MESSAGE_S *mess)
    530          {
   \                     CancelComposing:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0140A0E1           MOV      R4,R1
    531            /*
    532            <message 
    533              from='juliet@capulet.com/balcony'
    534              to='romeo@shakespeare.lit/orchard'
    535              type='chat'>
    536            <thread>act2scene2chat1</thread>
    537            <active xmlns='http://jabber.org/protocol/chatstates'/>
    538          </message>
    539            */
    540            if(!COMPOSING_EVENTS)return;
   \   00000008   ........           LDR      R1,??DataTable51  ;; COMPOSING_EVENTS
   \   0000000C   6CD04DE2           SUB      SP,SP,#+108
   \   00000010   001091E5           LDR      R1,[R1, #+0]
   \   00000014   000051E3           CMP      R1,#+0
   \   00000018   2400000A           BEQ      ??CancelComposing_0
    541            char* _jid= Mask_Special_Syms(jid);
   \   0000001C   ........           _BLF     Mask_Special_Syms,??Mask_Special_Syms??rA
    542            const char mes_template[]="<message to='%s' id='SieJC_%d' type='%s'><active xmlns='http://jabber.org/protocol/chatstates'/></message>";
   \   00000020   90109FE5           LDR      R1,??CancelComposing_1  ;; `?<Constant "<message to=\\'%s\\' id=\\'...">_2`
   \   00000024   0050A0E1           MOV      R5,R0
   \   00000028   0D00A0E1           MOV      R0,SP
   \   0000002C   6C30A0E3           MOV      R3,#+108
   \                     ??CancelComposing_2:
   \   00000030   043053E2           SUBS     R3,R3,#+4
   \   00000034   032091E7           LDR      R2,[R1, R3]
   \   00000038   032080E7           STR      R2,[R0, R3]
   \   0000003C   FBFFFF1A           BNE      ??CancelComposing_2
    543            char* msg_buf = malloc(MAX_MSG_LEN*2+200);
    544            if(mess->IsGroupChat)
   \   00000040   ........           LDR      R6,??DataTable40  ;; intimes
   \   00000044   C800A0E3           MOV      R0,#+200
   \   00000048   800D80E3           ORR      R0,R0,#0x2000
   \   0000004C   140000EF           SWI      +20
   \   00000050   0010D4E5           LDRB     R1,[R4, #+0]
   \   00000054   0070A0E1           MOV      R7,R0
   \   00000058   ........           LDR      R0,??DataTable41  ;; `?<Constant "<message to=\\'%s\\' id=\\'...">`
   \   0000005C   000051E3           CMP      R1,#+0
    545            {
    546               sprintf(msg_buf, mes_template, _jid, m_num, MSGSTR_GCHAT);
   \   00000060   44008012           ADDNE    R0,R0,#+68
    547            }else sprintf(msg_buf, mes_template, _jid, m_num, MSGSTR_CHAT);
   \   00000064   3C008002           ADDEQ    R0,R0,#+60
   \   00000068   01002DE9           PUSH     {R0}
   \   0000006C   103096E5           LDR      R3,[R6, #+16]
   \   00000070   0520A0E1           MOV      R2,R5
   \   00000074   04108DE2           ADD      R1,SP,#+4
   \   00000078   0700A0E1           MOV      R0,R7
   \   0000007C   160000EF           SWI      +22
   \   00000080   04D08DE2           ADD      SP,SP,#+4
    548            mfree(_jid);
   \   00000084   0500A0E1           MOV      R0,R5
   \   00000088   150000EF           SWI      +21
    549            SendAnswer(msg_buf);
   \   0000008C   0700A0E1           MOV      R0,R7
   \   00000090   ........           _BLF     SendAnswer,??SendAnswer??rA
    550            mfree(msg_buf);
   \   00000094   0700A0E1           MOV      R0,R7
   \   00000098   150000EF           SWI      +21
    551            mfree(mess);
   \   0000009C   0400A0E1           MOV      R0,R4
   \   000000A0   150000EF           SWI      +21
    552            m_num++;
   \   000000A4   100096E5           LDR      R0,[R6, #+16]
   \   000000A8   010080E2           ADD      R0,R0,#+1
   \   000000AC   100086E5           STR      R0,[R6, #+16]
    553          }
   \                     ??CancelComposing_0:
   \   000000B0   6CD08DE2           ADD      SP,SP,#+108      ;; stack cleaning
   \   000000B4   F080BDE8           POP      {R4-R7,PC}       ;; return
   \                     ??CancelComposing_1:
   \   000000B8   ........           DC32     `?<Constant "<message to=\\'%s\\' id=\\'...">_2`
    554          
    555          // Context: HELPER

   \                                 In segment CODE, align 4, keep-with-next
    556          void Report_VersionInfo(char* id, char *to)
    557          {
   \                     Report_VersionInfo:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   C8D04DE2           SUB      SP,SP,#+200
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
    558            char answer[200];
    559            char *ph_model = Get_Phone_Info(PI_MODEL);
    560            char *ph_sw = Get_Phone_Info(PI_SW_NUMBER);
    561            sprintf(answer, "<name>%s</name><version>%s-r%d (%s)</version><os>SIE-%s/%s %s</os>", VERSION_NAME, VERSION_VERS, __SVN_REVISION__, CMP_DATE, ph_model, ph_sw, OS);
   \   00000010   ........           LDR      R7,??DataTable53  ;; `?<Constant "<feature var=\\'urn:xmp...">`
   \   00000014   0900A0E3           MOV      R0,#+9
   \   00000018   D50100EF           SWI      +469
   \   0000001C   0060A0E1           MOV      R6,R0
   \   00000020   0700A0E3           MOV      R0,#+7
   \   00000024   D50100EF           SWI      +469
   \   00000028   64109FE5           LDR      R1,??Report_VersionInfo_0  ;; OS
   \   0000002C   ........           LDR      R3,??DataTable43  ;; VERSION_VERS
   \   00000030   ........           LDR      R2,??DataTable44  ;; VERSION_NAME
   \   00000034   02002DE9           PUSH     {R1}
   \   00000038   01002DE9           PUSH     {R0}
   \   0000003C   54009FE5           LDR      R0,??Report_VersionInfo_0+0x4  ;; CMP_DATE
   \   00000040   40002DE9           PUSH     {R6}
   \   00000044   01002DE9           PUSH     {R0}
   \   00000048   721F87E2           ADD      R1,R7,#+456
   \   0000004C   D600A0E3           MOV      R0,#+214
   \   00000050   A00E80E3           ORR      R0,R0,#0xA00
   \   00000054   01002DE9           PUSH     {R0}
   \   00000058   14008DE2           ADD      R0,SP,#+20
   \   0000005C   160000EF           SWI      +22
    562            SendIq(to, IQTYPE_RES, id, IQ_VERSION, answer);
   \   00000060   14008DE2           ADD      R0,SP,#+20
   \   00000064   01002DE9           PUSH     {R0}
   \   00000068   603F87E2           ADD      R3,R7,#+384
   \   0000006C   0420A0E1           MOV      R2,R4
   \   00000070   831F87E2           ADD      R1,R7,#+524
   \   00000074   0500A0E1           MOV      R0,R5
   \   00000078   ........           BL       SendIq
    563          
    564            mfree(id);
   \   0000007C   0400A0E1           MOV      R0,R4
   \   00000080   150000EF           SWI      +21
    565            mfree(to);
   \   00000084   0500A0E1           MOV      R0,R5
   \   00000088   150000EF           SWI      +21
    566          }
   \   0000008C   E0D08DE2           ADD      SP,SP,#+224
   \   00000090   F080BDE8           POP      {R4-R7,PC}       ;; return
   \                     ??Report_VersionInfo_0:
   \   00000094   ........           DC32     OS
   \   00000098   ........           DC32     CMP_DATE
    567          

   \                                 In segment CODE, align 4, keep-with-next
    568          void Report_TimeInfo(char* id, char *to)
    569          {
   \                     Report_TimeInfo:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   50DF4DE2           SUB      SP,SP,#+320
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
    570          /*
    571            <utc>20070910T17:58:35</utc>
    572            <tz>MDT</tz>
    573            <display>Tue Sep 10 15:58:35 2007</display>");
    574          */
    575            char answer[200];
    576            TTime reqt;
    577            TDate reqd;
    578            const char *TimeZone[24]={"+00:00","+01:00","+02:00","+03:00","+04:00","+05:00","+06:00","+07:00","+08:00",
    579            "+09:00","+10:00","+11:00","+12:00","-01:00","-02:00","-03:00","-04:00","-05:00","-06:00","-07:00",
    580            "-08:00","-09:00","-10:00","-11:00"};
   \   00000010   E0109FE5           LDR      R1,??Report_TimeInfo_0  ;; `?<Constant {&"+00:00", &"+01:00", &"+02:00", &`
   \   00000014   E0008DE2           ADD      R0,SP,#+224
   \   00000018   6030A0E3           MOV      R3,#+96
   \                     ??Report_TimeInfo_1:
   \   0000001C   043053E2           SUBS     R3,R3,#+4
   \   00000020   032091E7           LDR      R2,[R1, R3]
   \   00000024   032080E7           STR      R2,[R0, R3]
   \   00000028   FBFFFF1A           BNE      ??Report_TimeInfo_1
    581          //  const signed int TimeZoneNum[24]={'0','1','2','3','4','5','6','7','8','9','10','11','12','-1','-2','-3','-4','-5','-6','-7','-8','-9','-10','-11'};
    582            extern const int MY_DEF_ZONE;
    583            char timzone[6];
    584            GetDateTime(&reqd, &reqt);
   \   0000002C   08108DE2           ADD      R1,SP,#+8
    585            strcpy(timzone, TimeZone[MY_DEF_ZONE]);
    586            sprintf(answer, "<utc>%04d%02d%02dT%02d:%02d:%02d</utc><tz>%s</tz><display>%02d-%02d-%04d %02d:%02d:%02d</display>",reqd.year,reqd.month,reqd.day,reqt.hour,reqt.min,reqt.sec, timzone,reqd.day,reqd.month,reqd.year,reqt.hour,reqt.min,reqt.sec);
   \   00000030   ........           LDR      R6,??DataTable53  ;; `?<Constant "<feature var=\\'urn:xmp...">`
   \   00000034   0D00A0E1           MOV      R0,SP
   \   00000038   B40000EF           SWI      +180
   \   0000003C   B8009FE5           LDR      R0,??Report_TimeInfo_0+0x4  ;; MY_DEF_ZONE
   \   00000040   E0108DE2           ADD      R1,SP,#+224
   \   00000044   000090E5           LDR      R0,[R0, #+0]
   \   00000048   001191E7           LDR      R1,[R1, +R0, LSL #+2]
   \   0000004C   10008DE2           ADD      R0,SP,#+16
   \   00000050   1A0000EF           SWI      +26
   \   00000054   0A20DDE5           LDRB     R2,[SP, #+10]
   \   00000058   0500DDE5           LDRB     R0,[SP, #+5]
   \   0000005C   0430DDE5           LDRB     R3,[SP, #+4]
   \   00000060   0910DDE5           LDRB     R1,[SP, #+9]
   \   00000064   08C0DDE5           LDRB     R12,[SP, #+8]
   \   00000068   02E0A0E1           MOV      LR,R2
   \   0000006C   00402DE9           PUSH     {LR}
   \   00000070   01E0A0E1           MOV      LR,R1
   \   00000074   00402DE9           PUSH     {LR}
   \   00000078   0CE0A0E1           MOV      LR,R12
   \   0000007C   00402DE9           PUSH     {LR}
   \   00000080   0CE09DE5           LDR      LR,[SP, #+12]
   \   00000084   00402DE9           PUSH     {LR}
   \   00000088   03E0A0E1           MOV      LR,R3
   \   0000008C   00402DE9           PUSH     {LR}
   \   00000090   00E0A0E1           MOV      LR,R0
   \   00000094   00402DE9           PUSH     {LR}
   \   00000098   28E08DE2           ADD      LR,SP,#+40
   \   0000009C   00402DE9           PUSH     {LR}
   \   000000A0   04002DE9           PUSH     {R2}
   \   000000A4   02002DE9           PUSH     {R1}
   \   000000A8   00102DE9           PUSH     {R12}
   \   000000AC   01002DE9           PUSH     {R0}
   \   000000B0   2C209DE5           LDR      R2,[SP, #+44]
   \   000000B4   851F86E2           ADD      R1,R6,#+532
   \   000000B8   44008DE2           ADD      R0,SP,#+68
   \   000000BC   160000EF           SWI      +22
   \   000000C0   2CD08DE2           ADD      SP,SP,#+44
    587            SendIq(to, IQTYPE_RES, id, IQ_TIME, answer);
   \   000000C4   18008DE2           ADD      R0,SP,#+24
   \   000000C8   01002DE9           PUSH     {R0}
   \   000000CC   5C3F86E2           ADD      R3,R6,#+368
   \   000000D0   0420A0E1           MOV      R2,R4
   \   000000D4   831F86E2           ADD      R1,R6,#+524
   \   000000D8   0500A0E1           MOV      R0,R5
   \   000000DC   ........           BL       SendIq
    588            mfree(id);
   \   000000E0   0400A0E1           MOV      R0,R4
   \   000000E4   150000EF           SWI      +21
    589            mfree(to);
   \   000000E8   0500A0E1           MOV      R0,R5
   \   000000EC   150000EF           SWI      +21
    590          };
   \   000000F0   51DF8DE2           ADD      SP,SP,#+324
   \   000000F4   7080BDE8           POP      {R4-R6,PC}       ;; return
   \                     ??Report_TimeInfo_0:
   \   000000F8   ........           DC32     `?<Constant {&"+00:00", &"+01:00", &"+02:00", &`
   \   000000FC   ........           DC32     MY_DEF_ZONE
    591          

   \                                 In segment CODE, align 4, keep-with-next
    592          void Report_IDLEInfo(char* id, char *to)
    593          {
   \                     Report_IDLEInfo:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
    594          /*
    595             <iq from='' to='' id='' type=''>
    596              <query xmlns='jabber:iq:last' seconds=''/>
    597             </iq>
    598          */
    599            char* xmlql=malloc(1024);
   \   0000000C   400EA0E3           MOV      R0,#+1024
   \   00000010   140000EF           SWI      +20
   \   00000014   0060A0E1           MOV      R6,R0
    600            sprintf(xmlql, "<iq type='result' id='%s' from='%s' to='%s'>\r\n<query xmlns='jabber:iq:last' seconds='%d'/>\r\n</iq>", id, Mask_Special_Syms(My_JID_full), Mask_Special_Syms(to),GetIDLETime(intimes, indates));
   \   00000018   ........           LDR      R0,??DataTable46  ;; intimes
   \   0000001C   082090E5           LDR      R2,[R0, #+8]
   \   00000020   0C3090E5           LDR      R3,[R0, #+12]
   \   00000024   030090E8           LDM      R0,{R0,R1}
   \   00000028   ........           _BLF     GetIDLETime,??GetIDLETime??rA
   \   0000002C   0070A0E1           MOV      R7,R0
   \   00000030   0500A0E1           MOV      R0,R5
   \   00000034   ........           _BLF     Mask_Special_Syms,??Mask_Special_Syms??rA
   \   00000038   0080A0E1           MOV      R8,R0
   \   0000003C   ........           LDR      R0,??DataTable67  ;; My_JID_full
   \   00000040   ........           _BLF     Mask_Special_Syms,??Mask_Special_Syms??rA
   \   00000044   38109FE5           LDR      R1,??Report_IDLEInfo_0  ;; `?<Constant "<iq type=\\'result\\' id=...">`
   \   00000048   80002DE9           PUSH     {R7}
   \   0000004C   00012DE9           PUSH     {R8}
   \   00000050   0030A0E1           MOV      R3,R0
   \   00000054   0420A0E1           MOV      R2,R4
   \   00000058   0600A0E1           MOV      R0,R6
   \   0000005C   160000EF           SWI      +22
    601            SendAnswer(xmlql);
   \   00000060   0600A0E1           MOV      R0,R6
   \   00000064   ........           _BLF     SendAnswer,??SendAnswer??rA
    602            mfree(xmlql);
   \   00000068   0600A0E1           MOV      R0,R6
   \   0000006C   150000EF           SWI      +21
    603            mfree(to);
   \   00000070   0500A0E1           MOV      R0,R5
   \   00000074   150000EF           SWI      +21
    604            mfree(id);
   \   00000078   0400A0E1           MOV      R0,R4
   \   0000007C   150000EF           SWI      +21
    605          }
   \   00000080   F381BDE8           POP      {R0,R1,R4-R8,PC}  ;; return
   \                     ??Report_IDLEInfo_0:
   \   00000084   ........           DC32     `?<Constant "<iq type=\\'result\\' id=...">`
    606          
    607          // Context: HELPER

   \                                 In segment CODE, align 4, keep-with-next
    608          void Report_DiscoInfo(char* id, char *to)
    609          {
   \                     Report_DiscoInfo:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
    610            char answer[400];
    611            sprintf(answer, "<identity category='client' type='phone'/>"
    612                              "<feature var='%s'/>"
    613                              "<feature var='%s'/>"
    614                              "<feature var='%s'/>"
    615                              "<feature var='%s'/>"
    616                              "<feature var='%s'/>"
    617                              "<feature var='%s'/>", DISCO_INFO, IQ_VERSION, XMLNS_MUC, IQ_TIME, IQ_IDLE,JABBER_URN_PING);
   \   00000004   ........           LDR      R7,??DataTable53  ;; `?<Constant "<feature var=\\'urn:xmp...">`
   \   00000008   85DF4DE2           SUB      SP,SP,#+532
   \   0000000C   0040A0E1           MOV      R4,R0
   \   00000010   650F87E2           ADD      R0,R7,#+404
   \   00000014   01002DE9           PUSH     {R0}
   \   00000018   0150A0E1           MOV      R5,R1
   \   0000001C   466FA0E3           MOV      R6,#+280
   \   00000020   603F87E2           ADD      R3,R7,#+384
   \   00000024   580F87E2           ADD      R0,R7,#+352
   \   00000028   01002DE9           PUSH     {R0}
   \   0000002C   072086E0           ADD      R2,R6,R7
   \   00000030   9E1F87E2           ADD      R1,R7,#+632
   \   00000034   5C0F87E2           ADD      R0,R7,#+368
   \   00000038   01002DE9           PUSH     {R0}
   \   0000003C   500F87E2           ADD      R0,R7,#+320
   \   00000040   01002DE9           PUSH     {R0}
   \   00000044   10008DE2           ADD      R0,SP,#+16
   \   00000048   160000EF           SWI      +22
    618            if(DELIVERY_EVENTS)
   \   0000004C   ........           LDR      R0,??DataTable49  ;; DELIVERY_EVENTS
   \   00000050   000090E5           LDR      R0,[R0, #+0]
   \   00000054   10D08DE2           ADD      SP,SP,#+16
   \   00000058   000050E3           CMP      R0,#+0
   \   0000005C   0800000A           BEQ      ??Report_DiscoInfo_0
    619            {
    620              char xevents_feature[]="<feature var='urn:xmpp:receipts'/>";
   \   00000060   7C0F8DE2           ADD      R0,SP,#+496
   \   00000064   0710A0E1           MOV      R1,R7
   \   00000068   0C51B1E8           LDM      R1!,{R2,R3,R8,R12,LR}
   \   0000006C   0C51A0E8           STM      R0!,{R2,R3,R8,R12,LR}
   \   00000070   0C5091E8           LDM      R1,{R2,R3,R12,LR}
    621              strcat(answer, xevents_feature);
   \   00000074   7C1F8DE2           ADD      R1,SP,#+496
   \   00000078   0C5080E8           STM      R0,{R2,R3,R12,LR}
   \   0000007C   0D00A0E1           MOV      R0,SP
   \   00000080   170000EF           SWI      +23
    622            }
    623          
    624            if(USE_ATTENTION)
   \                     ??Report_DiscoInfo_0:
   \   00000084   ........           LDR      R0,??DataTable50  ;; USE_ATTENTION
   \   00000088   000090E5           LDR      R0,[R0, #+0]
   \   0000008C   000050E3           CMP      R0,#+0
   \   00000090   0800000A           BEQ      ??Report_DiscoInfo_1
    625            {
    626              char xevents_feature[]="<feature var='"JABBER_URN_ATTENTION"'/>";
   \   00000094   84109FE5           LDR      R1,??Report_DiscoInfo_2  ;; `?<Constant "<feature var=\\'urn:xmp...">_1`
   \   00000098   720F8DE2           ADD      R0,SP,#+456
   \   0000009C   0C51B1E8           LDM      R1!,{R2,R3,R8,R12,LR}
   \   000000A0   0C51A0E8           STM      R0!,{R2,R3,R8,R12,LR}
   \   000000A4   0C5191E8           LDM      R1,{R2,R3,R8,R12,LR}
    627              strcat(answer, xevents_feature);
   \   000000A8   721F8DE2           ADD      R1,SP,#+456
   \   000000AC   0C5180E8           STM      R0,{R2,R3,R8,R12,LR}
   \   000000B0   0D00A0E1           MOV      R0,SP
   \   000000B4   170000EF           SWI      +23
    628            }
    629          
    630            if(COMPOSING_EVENTS)
   \                     ??Report_DiscoInfo_1:
   \   000000B8   ........           LDR      R0,??DataTable51  ;; COMPOSING_EVENTS
   \   000000BC   000090E5           LDR      R0,[R0, #+0]
   \   000000C0   000050E3           CMP      R0,#+0
   \   000000C4   0800000A           BEQ      ??Report_DiscoInfo_3
    631            {
    632              char xevents_feature[]="<feature var='http://jabber.org/protocol/chatstates'/>";
   \   000000C8   54109FE5           LDR      R1,??Report_DiscoInfo_2+0x4  ;; `?<Constant "<feature var=\\'http://...">`
   \   000000CC   640F8DE2           ADD      R0,SP,#+400
   \   000000D0   0C57B1E8           LDM      R1!,{R2,R3,R8-R10,R12,LR}
   \   000000D4   0C57A0E8           STM      R0!,{R2,R3,R8-R10,R12,LR}
   \   000000D8   0C5791E8           LDM      R1,{R2,R3,R8-R10,R12,LR}
    633              strcat(answer, xevents_feature);
   \   000000DC   641F8DE2           ADD      R1,SP,#+400
   \   000000E0   0C5780E8           STM      R0,{R2,R3,R8-R10,R12,LR}
   \   000000E4   0D00A0E1           MOV      R0,SP
   \   000000E8   170000EF           SWI      +23
    634            }
    635            //  ShowMSG(0,(int)to);
    636            SendIq(to, IQTYPE_RES, id, DISCO_INFO, answer);
   \                     ??Report_DiscoInfo_3:
   \   000000EC   0D00A0E1           MOV      R0,SP
   \   000000F0   01002DE9           PUSH     {R0}
   \   000000F4   073086E0           ADD      R3,R6,R7
   \   000000F8   0420A0E1           MOV      R2,R4
   \   000000FC   831F87E2           ADD      R1,R7,#+524
   \   00000100   0500A0E1           MOV      R0,R5
   \   00000104   ........           BL       SendIq
    637          
    638            mfree(id);
   \   00000108   0400A0E1           MOV      R0,R4
   \   0000010C   150000EF           SWI      +21
    639            mfree(to);
   \   00000110   0500A0E1           MOV      R0,R5
   \   00000114   150000EF           SWI      +21
    640          }
   \   00000118   86DF8DE2           ADD      SP,SP,#+536
   \   0000011C   F087BDE8           POP      {R4-R10,PC}      ;; return
   \                     ??Report_DiscoInfo_2:
   \   00000120   ........           DC32     `?<Constant "<feature var=\\'urn:xmp...">_1`
   \   00000124   ........           DC32     `?<Constant "<feature var=\\'http://...">`
    641          

   \                                 In segment CODE, align 4, keep-with-next
    642          void Report_PING(char* id, char *to)
    643          {
   \                     Report_PING:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   30D04DE2           SUB      SP,SP,#+48
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
    644          /*
    645            <iq from='juliet@capulet.lit/balcony' to='capulet.lit' id='s2c1' type='result'/>
    646          */
    647            char* xmlql=malloc(1024);
   \   00000010   400EA0E3           MOV      R0,#+1024
   \   00000014   140000EF           SWI      +20
    648            const char xmlql_tmpl[]="<iq type='result' id='%s' from='%s' to='%s'/>";
   \   00000018   68109FE5           LDR      R1,??Report_PING_0  ;; `?<Constant "<iq type=\\'result\\' id=...">_1`
   \   0000001C   0060A0E1           MOV      R6,R0
   \   00000020   8C51B1E8           LDM      R1!,{R2,R3,R7,R8,R12,LR}
   \   00000024   0D00A0E1           MOV      R0,SP
   \   00000028   8C51A0E8           STM      R0!,{R2,R3,R7,R8,R12,LR}
   \   0000002C   8C5191E8           LDM      R1,{R2,R3,R7,R8,R12,LR}
   \   00000030   8C5180E8           STM      R0,{R2,R3,R7,R8,R12,LR}
    649            sprintf(xmlql, xmlql_tmpl, id, Mask_Special_Syms(My_JID_full), Mask_Special_Syms(to));
   \   00000034   0500A0E1           MOV      R0,R5
   \   00000038   ........           _BLF     Mask_Special_Syms,??Mask_Special_Syms??rA
   \   0000003C   0070A0E1           MOV      R7,R0
   \   00000040   ........           LDR      R0,??DataTable67  ;; My_JID_full
   \   00000044   ........           _BLF     Mask_Special_Syms,??Mask_Special_Syms??rA
   \   00000048   80002DE9           PUSH     {R7}
   \   0000004C   0030A0E1           MOV      R3,R0
   \   00000050   0420A0E1           MOV      R2,R4
   \   00000054   04108DE2           ADD      R1,SP,#+4
   \   00000058   0600A0E1           MOV      R0,R6
   \   0000005C   160000EF           SWI      +22
    650            SendAnswer(xmlql);
   \   00000060   0600A0E1           MOV      R0,R6
   \   00000064   ........           _BLF     SendAnswer,??SendAnswer??rA
    651            mfree(xmlql);
   \   00000068   0600A0E1           MOV      R0,R6
   \   0000006C   150000EF           SWI      +21
    652            mfree(to);
   \   00000070   0500A0E1           MOV      R0,R5
   \   00000074   150000EF           SWI      +21
    653            mfree(id);
   \   00000078   0400A0E1           MOV      R0,R4
   \   0000007C   150000EF           SWI      +21
    654          }
   \   00000080   34D08DE2           ADD      SP,SP,#+52
   \   00000084   F081BDE8           POP      {R4-R8,PC}       ;; return
   \                     ??Report_PING_0:
   \   00000088   ........           DC32     `?<Constant "<iq type=\\'result\\' id=...">_1`
    655          

   \                                 In segment CODE, align 4, keep-with-next
    656          JABBER_SUBSCRIPTION GetSubscrType(char* subs)
    657          {
   \                     GetSubscrType:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040B0E1           MOVS     R4,R0
    658            if(!subs)return SUB_NONE;
   \   00000008   1600000A           BEQ      ??GetSubscrType_0
    659            if(!strcmp(subs,"none"))return SUB_NONE;
   \   0000000C   ........           LDR      R5,??DataTable53  ;; `?<Constant "<feature var=\\'urn:xmp...">`
   \   00000010   D81085E2           ADD      R1,R5,#+216
   \   00000014   190000EF           SWI      +25
   \   00000018   000050E3           CMP      R0,#+0
   \   0000001C   3080BD08           POPEQ    {R4,R5,PC}
    660            if(!strcmp(subs,"both"))return SUB_BOTH;
   \   00000020   C61F85E2           ADD      R1,R5,#+792
   \   00000024   0400A0E1           MOV      R0,R4
   \   00000028   190000EF           SWI      +25
   \   0000002C   000050E3           CMP      R0,#+0
   \   00000030   0300A003           MOVEQ    R0,#+3
   \   00000034   3080BD08           POPEQ    {R4,R5,PC}
    661            if(!strcmp(subs,"to"))return SUB_TO;
   \   00000038   0C1F8FE2           ADR      R1,??GetSubscrType_1  ;; "to"
   \   0000003C   0400A0E1           MOV      R0,R4
   \   00000040   190000EF           SWI      +25
   \   00000044   000050E3           CMP      R0,#+0
   \   00000048   0100A003           MOVEQ    R0,#+1
   \   0000004C   3080BD08           POPEQ    {R4,R5,PC}
    662            if(!strcmp(subs,"from"))return SUB_FROM;
   \   00000050   C81F85E2           ADD      R1,R5,#+800
   \   00000054   0400A0E1           MOV      R0,R4
   \   00000058   190000EF           SWI      +25
   \   0000005C   000050E3           CMP      R0,#+0
   \   00000060   0200A003           MOVEQ    R0,#+2
   \   00000064   3080BD08           POPEQ    {R4,R5,PC}
    663          
    664            return SUB_NONE;
   \                     ??GetSubscrType_0:
   \   00000068   0000A0E3           MOV      R0,#+0
   \   0000006C   3080BDE8           POP      {R4,R5,PC}       ;; return
   \                     ??GetSubscrType_1:
   \   00000070   746F0000           DC8      "to",+0
    665          }
    666          

   \                                 In segment CODE, align 4, keep-with-next
    667          char* Get_Resource_Name_By_FullJID(char* full_jid)
    668          {
   \                     Get_Resource_Name_By_FullJID:
   \   00000000   00402DE9           PUSH     {LR}
    669            char* pre_res = strstr(full_jid, "/");
   \   00000004   041F8FE2           ADR      R1,??Get_Resource_Name_By_FullJID_0  ;; "/"
   \   00000008   180100EF           SWI      +280
    670            char* res_name = pre_res==NULL ? NULL : pre_res +1;
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   0080BD08           POPEQ    {PC}
   \   00000014   010080E2           ADD      R0,R0,#+1
    671            return res_name;
   \   00000018   0080BDE8           POP      {PC}             ;; return
   \                     ??Get_Resource_Name_By_FullJID_0:
   \   0000001C   2F000000           DC8      "/",+0,+0
    672          }
    673          
    674          //Context: HELPER

   \                                 In segment CODE, align 4, keep-with-next
    675          void Send_Initial_Presence_Helper()
    676          {
   \                     Send_Initial_Presence_Helper:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
    677          //  OnlineInfo
    678          //  char *message = ANSI2UTF8(ansi_msg, strlen(ansi_msg));
    679            PRESENCE_INFO *pr_info = malloc(sizeof(PRESENCE_INFO));
   \   00000008   0800A0E3           MOV      R0,#+8
   \   0000000C   140000EF           SWI      +20
   \   00000010   0040A0E1           MOV      R4,R0
    680            pr_info->priority = OnlineInfo.priority;
   \   00000014   ........           LDR      R0,??DataTable56  ;; OnlineInfo
   \   00000018   F210D0E1           LDRSH    R1,[R0, #+2]
   \   0000001C   B010C4E1           STRH     R1,[R4, #+0]
    681            pr_info->status=OnlineInfo.status;
   \   00000020   0000D0E5           LDRB     R0,[R0, #+0]
   \   00000024   0200C4E5           STRB     R0,[R4, #+2]
    682            /*if(OnlineInfo.txt)
    683            {
    684              pr_info->message = malloc(strlen(OnlineInfo.txt)+1);
    685              strcpy(pr_info->message,OnlineInfo.txt);
    686            }else pr_info->message = NULL;*/
    687            WSHDR *ws = AllocWS(256);
   \   00000028   400FA0E3           MOV      R0,#+256
   \   0000002C   250100EF           SWI      +293
   \   00000030   0050A0E1           MOV      R5,R0
    688            char *msg = malloc(256);
   \   00000034   400FA0E3           MOV      R0,#+256
   \   00000038   140000EF           SWI      +20
    689            int len;
    690            extern const char DEFTEX_ONLINE[256];
    691            ascii2ws(ws,  DEFTEX_ONLINE);
   \   0000003C   68109FE5           LDR      R1,??Send_Initial_Presence_Helper_0  ;; DEFTEX_ONLINE
   \   00000040   0060A0E1           MOV      R6,R0
   \   00000044   0500A0E1           MOV      R0,R5
   \   00000048   ........           _BLF     ascii2ws,??ascii2ws??rA
    692            ws_2utf8(ws, msg, &len, wstrlen(ws)*2+1);
   \   0000004C   0500A0E1           MOV      R0,R5
   \   00000050   230100EF           SWI      +291
   \   00000054   0110A0E3           MOV      R1,#+1
   \   00000058   803081E0           ADD      R3,R1,R0, LSL #+1
   \   0000005C   0D20A0E1           MOV      R2,SP
   \   00000060   0610A0E1           MOV      R1,R6
   \   00000064   0500A0E1           MOV      R0,R5
   \   00000068   E20100EF           SWI      +482
    693            msg = realloc(msg, len+1);
   \   0000006C   00009DE5           LDR      R0,[SP, #+0]
   \   00000070   011080E2           ADD      R1,R0,#+1
   \   00000074   0600A0E1           MOV      R0,R6
   \   00000078   BA0000EF           SWI      +186
    694            msg[len]='\0';
   \   0000007C   00109DE5           LDR      R1,[SP, #+0]
   \   00000080   0020A0E3           MOV      R2,#+0
   \   00000084   0020C1E7           STRB     R2,[R1, +R0]
    695            pr_info->message=msg;
   \   00000088   040084E5           STR      R0,[R4, #+4]
    696            FreeWS(ws);
   \   0000008C   0500A0E1           MOV      R0,R5
   \   00000090   290100EF           SWI      +297
    697            Send_Presence(pr_info);
   \   00000094   0400A0E1           MOV      R0,R4
   \   00000098   ........           BL       Send_Presence
    698            Jabber_state = JS_ONLINE;
   \   0000009C   ........           LDR      R0,??DataTable55  ;; Jabber_state
   \   000000A0   0C10A0E3           MOV      R1,#+12
   \   000000A4   0010C0E5           STRB     R1,[R0, #+0]
    699          }
   \   000000A8   7180BDE8           POP      {R0,R4-R6,PC}    ;; return
   \                     ??Send_Initial_Presence_Helper_0:
   \   000000AC   ........           DC32     DEFTEX_ONLINE
    700          
    701          //Context: HELPER

   \                                 In segment CODE, align 4, keep-with-next
    702          void _enterconference(MUC_ENTER_PARAM *param)
    703          {
   \                     _enterconference:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
    704            char *magic_ex = malloc(1024);
    705            strcpy(magic_ex, "<presence from='%s' to='%s/%s'><x xmlns='http://jabber.org/protocol/muc'><history maxstanzas='%d'/>");
   \   00000004   40619FE5           LDR      R6,??_enterconference_0  ;; `?<Constant "<presence from=\\'%s\\' t...">_2`
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   400EA0E3           MOV      R0,#+1024
   \   00000010   140000EF           SWI      +20
   \   00000014   0050A0E1           MOV      R5,R0
   \   00000018   0610A0E1           MOV      R1,R6
   \   0000001C   1A0000EF           SWI      +26
    706            if(param->pass)
   \   00000020   080094E5           LDR      R0,[R4, #+8]
   \   00000024   000050E3           CMP      R0,#+0
   \   00000028   0E00000A           BEQ      ??_enterconference_1
    707            {
    708              char *_room_pass = Mask_Special_Syms(param->pass);
   \   0000002C   ........           _BLF     Mask_Special_Syms,??Mask_Special_Syms??rA
   \   00000030   0070A0E1           MOV      R7,R0
    709              char *pass_str = malloc(128);
   \   00000034   8000A0E3           MOV      R0,#+128
   \   00000038   140000EF           SWI      +20
   \   0000003C   0080A0E1           MOV      R8,R0
    710              sprintf(pass_str,"<password>%s</password>", _room_pass);
   \   00000040   0720A0E1           MOV      R2,R7
   \   00000044   641086E2           ADD      R1,R6,#+100
   \   00000048   160000EF           SWI      +22
    711              strcat(magic_ex, pass_str);
   \   0000004C   0810A0E1           MOV      R1,R8
   \   00000050   0500A0E1           MOV      R0,R5
   \   00000054   170000EF           SWI      +23
    712              mfree(pass_str);
   \   00000058   0800A0E1           MOV      R0,R8
   \   0000005C   150000EF           SWI      +21
    713              mfree(_room_pass);
   \   00000060   0700A0E1           MOV      R0,R7
   \   00000064   150000EF           SWI      +21
    714            }
    715            strcat(magic_ex, "</x><show>%s</show><status>%s</status></presence>");
    716            char* magic = malloc(1024);
    717            char *stext;
    718            extern char empty_str[];
    719            if(OnlineInfo.txt){stext= OnlineInfo.txt;}else{stext = empty_str;}
   \                     ??_enterconference_1:
   \   00000068   ........           LDR      R7,??DataTable56  ;; OnlineInfo
   \   0000006C   7C1086E2           ADD      R1,R6,#+124
   \   00000070   0500A0E1           MOV      R0,R5
   \   00000074   170000EF           SWI      +23
   \   00000078   400EA0E3           MOV      R0,#+1024
   \   0000007C   140000EF           SWI      +20
   \   00000080   04B097E5           LDR      R11,[R7, #+4]
   \   00000084   0060A0E1           MOV      R6,R0
    720            char *_from = Mask_Special_Syms(My_JID_full);
   \   00000088   ........           LDR      R0,??DataTable67  ;; My_JID_full
   \   0000008C   00005BE3           CMP      R11,#+0
   \   00000090   B8B09F05           LDREQ    R11,??_enterconference_0+0x4  ;; empty_str
   \   00000094   ........           _BLF     Mask_Special_Syms,??Mask_Special_Syms??rA
   \   00000098   0080A0E1           MOV      R8,R0
    721            char *_room_name = Mask_Special_Syms(param->room_name);
   \   0000009C   040094E5           LDR      R0,[R4, #+4]
   \   000000A0   ........           _BLF     Mask_Special_Syms,??Mask_Special_Syms??rA
   \   000000A4   0090A0E1           MOV      R9,R0
    722            char *_room_nick = Mask_Special_Syms(param->room_nick);
   \   000000A8   000094E5           LDR      R0,[R4, #+0]
   \   000000AC   ........           _BLF     Mask_Special_Syms,??Mask_Special_Syms??rA
   \   000000B0   00A0A0E1           MOV      R10,R0
    723            sprintf(magic,magic_ex, _from, _room_name,_room_nick, param->mess_num, PRESENCES[OnlineInfo.status], stext);
   \   000000B4   00082DE9           PUSH     {R11}
   \   000000B8   0000D7E5           LDRB     R0,[R7, #+0]
   \   000000BC   0930A0E1           MOV      R3,R9
   \   000000C0   0820A0E1           MOV      R2,R8
   \   000000C4   000187E0           ADD      R0,R7,R0, LSL #+2
   \   000000C8   0C0090E5           LDR      R0,[R0, #+12]
   \   000000CC   0510A0E1           MOV      R1,R5
   \   000000D0   01002DE9           PUSH     {R0}
   \   000000D4   0C0094E5           LDR      R0,[R4, #+12]
   \   000000D8   01002DE9           PUSH     {R0}
   \   000000DC   0A00A0E1           MOV      R0,R10
   \   000000E0   01002DE9           PUSH     {R0}
   \   000000E4   0600A0E1           MOV      R0,R6
   \   000000E8   160000EF           SWI      +22
    724            mfree(_from);
   \   000000EC   0800A0E1           MOV      R0,R8
   \   000000F0   150000EF           SWI      +21
    725            mfree(_room_name);
   \   000000F4   0900A0E1           MOV      R0,R9
   \   000000F8   150000EF           SWI      +21
    726            mfree(_room_nick);
   \   000000FC   0A00A0E1           MOV      R0,R10
   \   00000100   150000EF           SWI      +21
    727            mfree(magic_ex);
   \   00000104   0500A0E1           MOV      R0,R5
   \   00000108   150000EF           SWI      +21
    728            SendAnswer(magic);
   \   0000010C   0600A0E1           MOV      R0,R6
   \   00000110   ........           _BLF     SendAnswer,??SendAnswer??rA
    729            mfree(magic);
   \   00000114   0600A0E1           MOV      R0,R6
   \   00000118   150000EF           SWI      +21
    730            mfree(param->room_nick);
   \   0000011C   000094E5           LDR      R0,[R4, #+0]
   \   00000120   150000EF           SWI      +21
    731            mfree(param->room_name);
   \   00000124   040094E5           LDR      R0,[R4, #+4]
   \   00000128   150000EF           SWI      +21
    732            if(param->pass)mfree(param->pass);
   \   0000012C   080094E5           LDR      R0,[R4, #+8]
   \   00000130   10D08DE2           ADD      SP,SP,#+16
   \   00000134   000050E3           CMP      R0,#+0
   \   00000138   0000000A           BEQ      ??_enterconference_2
   \   0000013C   150000EF           SWI      +21
    733            mfree(param);
   \                     ??_enterconference_2:
   \   00000140   0400A0E1           MOV      R0,R4
   \   00000144   150000EF           SWI      +21
    734          }
   \   00000148   F08FBDE8           POP      {R4-R11,PC}      ;; return
   \                     ??_enterconference_0:
   \   0000014C   ........           DC32     `?<Constant "<presence from=\\'%s\\' t...">_2`
   \   00000150   ........           DC32     empty_str
    735          
    736          
    737          // Входит в конференцию
    738          // Все имена в UTF-8 :)

   \                                 In segment CODE, align 4, keep-with-next
    739          void Enter_Conference(char *room, char *roomnick, char *roompass, char N_messages)
    740          {
   \                     Enter_Conference:
   \   00000000   F84F2DE9           PUSH     {R3-R11,LR}
    741          
    742            // Смотрим, есть ли такая конфа в списке конференций
    743            // Если есть, тогда мы должны просто поменять ник в ней
    744            char IsAlreadyInList = 0;
    745            MUC_ITEM* m_ex = muctop;
   \   00000004   ........           LDR      R8,??DataTable62  ;; OnlineInfo
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   089098E5           LDR      R9,[R8, #+8]
   \   00000010   0150A0E1           MOV      R5,R1
   \   00000014   0260A0E1           MOV      R6,R2
   \   00000018   0070A0E3           MOV      R7,#+0
   \   0000001C   00A0A0E3           MOV      R10,#+0
    746            if(muctop)
   \   00000020   000059E3           CMP      R9,#+0
   \   00000024   0A00000A           BEQ      ??Enter_Conference_0
   \   00000028   000000EA           B        ??Enter_Conference_1
    747            {
    748              while(m_ex)
    749              {
    750                if(stristr(m_ex->conf_jid, room)==m_ex->conf_jid)
    751                {
    752                  IsAlreadyInList=1;
    753                  break;
    754                }
    755                m_ex=m_ex->next;
   \                     ??Enter_Conference_2:
   \   0000002C   089099E5           LDR      R9,[R9, #+8]
   \                     ??Enter_Conference_1:
   \   00000030   000059E3           CMP      R9,#+0
   \   00000034   0600000A           BEQ      ??Enter_Conference_0
   \   00000038   000099E5           LDR      R0,[R9, #+0]
   \   0000003C   0410A0E1           MOV      R1,R4
   \   00000040   ........           _BLF     stristr,??stristr??rA
   \   00000044   001099E5           LDR      R1,[R9, #+0]
   \   00000048   010050E1           CMP      R0,R1
   \   0000004C   F6FFFF1A           BNE      ??Enter_Conference_2
   \   00000050   01A0A0E3           MOV      R10,#+1
    756              };
    757            }
    758          
    759            CLIST* Conference = CList_FindContactByJID(room);
   \                     ??Enter_Conference_0:
   \   00000054   0400A0E1           MOV      R0,R4
   \   00000058   ........           _BLF     CList_FindContactByJID,??CList_FindContactByJID??rA
    760            if(!IsAlreadyInList)
   \   0000005C   0A10B0E1           MOVS     R1,R10
    761            {
    762              // Добавляем контакт конференции в ростер
    763              if(!Conference)
   \   00000060   00005003           CMPEQ    R0,#+0
   \   00000064   0800001A           BNE      ??Enter_Conference_3
    764              {
    765                CList_AddContact(room,room, SUB_BOTH, 0, 129);
   \   00000068   8100A0E3           MOV      R0,#+129
   \   0000006C   01002DE9           PUSH     {R0}
   \   00000070   0030A0E3           MOV      R3,#+0
   \   00000074   0320A0E3           MOV      R2,#+3
   \   00000078   0410A0E1           MOV      R1,R4
   \   0000007C   0400A0E1           MOV      R0,R4
   \   00000080   ........           _BLF     CList_AddContact,??CList_AddContact??rA
   \   00000084   04D08DE2           ADD      SP,SP,#+4
   \   00000088   0D0000EA           B        ??Enter_Conference_4
    766              }
    767          //    else  // Конфа могла остаться от предыдущего входа/выхода
    768          //    {
    769          //      Conference->res_list->status=PRESENCE_ONLINE;
    770          //    }
    771            }
    772            if((Conference)&&(m_ex))
   \                     ??Enter_Conference_3:
   \   0000008C   000050E3           CMP      R0,#+0
   \   00000090   00005913           CMPNE    R9,#+0
    773              if(Conference->res_list)
   \   00000094   0C009015           LDRNE    R0,[R0, #+12]
   \   00000098   00005013           CMPNE    R0,#+0
   \   0000009C   0800000A           BEQ      ??Enter_Conference_4
    774                if((Conference->res_list->status==PRESENCE_ONLINE)&&(!strcmp(Get_Resource_Name_By_FullJID(m_ex->conf_jid),roomnick))) return; //Уже там, и нечего перезаходить
   \   000000A0   0900D0E5           LDRB     R0,[R0, #+9]
   \   000000A4   000050E3           CMP      R0,#+0
   \   000000A8   0500001A           BNE      ??Enter_Conference_4
   \   000000AC   000099E5           LDR      R0,[R9, #+0]
   \   000000B0   ........           BL       Get_Resource_Name_By_FullJID
   \   000000B4   0510A0E1           MOV      R1,R5
   \   000000B8   190000EF           SWI      +25
   \   000000BC   000050E3           CMP      R0,#+0
   \   000000C0   F18FBD08           POPEQ    {R0,R4-R11,PC}
    775          
    776            // Готовим структуру для передачи в HELPER
    777            MUC_ENTER_PARAM* par = malloc(sizeof(MUC_ENTER_PARAM));
   \                     ??Enter_Conference_4:
   \   000000C4   1000A0E3           MOV      R0,#+16
   \   000000C8   140000EF           SWI      +20
   \   000000CC   00B0A0E1           MOV      R11,R0
    778          //  par->room_nick =ANSI2UTF8(roomnick, strlen(roomnick)*2);
    779          //  par->room_name = ANSI2UTF8(room, strlen(room)*2);
    780          
    781            par->room_nick =malloc(strlen(roomnick)*2);
   \   000000D0   0500A0E1           MOV      R0,R5
   \   000000D4   1B0000EF           SWI      +27
   \   000000D8   8000A0E1           LSL      R0,R0,#+1
   \   000000DC   140000EF           SWI      +20
   \   000000E0   00008BE5           STR      R0,[R11, #+0]
    782            par->room_name = malloc(strlen(room)*2);
   \   000000E4   0400A0E1           MOV      R0,R4
   \   000000E8   1B0000EF           SWI      +27
   \   000000EC   8000A0E1           LSL      R0,R0,#+1
   \   000000F0   140000EF           SWI      +20
   \   000000F4   04008BE5           STR      R0,[R11, #+4]
    783            strcpy(par->room_nick, roomnick);
   \   000000F8   00009BE5           LDR      R0,[R11, #+0]
   \   000000FC   0510A0E1           MOV      R1,R5
   \   00000100   1A0000EF           SWI      +26
    784            strcpy(par->room_name, room);
   \   00000104   04009BE5           LDR      R0,[R11, #+4]
   \   00000108   0410A0E1           MOV      R1,R4
   \   0000010C   1A0000EF           SWI      +26
    785            if(roompass)
   \   00000110   000056E3           CMP      R6,#+0
   \   00000114   0700000A           BEQ      ??Enter_Conference_5
    786            {
    787              par->pass = malloc(strlen(roompass)*2);
   \   00000118   0600A0E1           MOV      R0,R6
   \   0000011C   1B0000EF           SWI      +27
   \   00000120   8000A0E1           LSL      R0,R0,#+1
   \   00000124   140000EF           SWI      +20
   \   00000128   08008BE5           STR      R0,[R11, #+8]
    788              strcpy(par->pass, roompass);
   \   0000012C   0610A0E1           MOV      R1,R6
   \   00000130   1A0000EF           SWI      +26
   \   00000134   000000EA           B        ??Enter_Conference_6
    789            }
    790            else par->pass = NULL;
   \                     ??Enter_Conference_5:
   \   00000138   08708BE5           STR      R7,[R11, #+8]
    791            
    792            if(!IsAlreadyInList)
    793            {
    794              par->mess_num=N_messages;
    795            }
    796            else par->mess_num=0;   // Нах еще раз запрашивать историю
    797            SUBPROC((void*)_enterconference, par);
    798          
    799            if(!IsAlreadyInList)
   \                     ??Enter_Conference_6:
   \   0000013C   ........           LDR      R4,??DataTable59  ;; `?<Constant "%s@%s">`
   \   00000140   0A00B0E1           MOVS     R0,R10
   \   00000144   0000DD05           LDRBEQ   R0,[SP, #+0]
   \   00000148   0B10A0E1           MOV      R1,R11
   \   0000014C   0000A013           MOVNE    R0,#+0
   \   00000150   0C008BE5           STR      R0,[R11, #+12]
   \   00000154   D0009FE5           LDR      R0,??Enter_Conference_7  ;; _enterconference
   \   00000158   710100EF           SWI      +369
   \   0000015C   00005AE3           CMP      R10,#+0
   \   00000160   1D00001A           BNE      ??Enter_Conference_8
    800            {
    801              // Регистрируем конференцию в списке конференций
    802              MUC_ITEM* mi = malloc(sizeof(MUC_ITEM));
   \   00000164   0C00A0E3           MOV      R0,#+12
   \   00000168   140000EF           SWI      +20
   \   0000016C   0050A0E1           MOV      R5,R0
    803              mi->conf_jid = malloc(strlen(par->room_name)*2+strlen(par->room_nick)*2+2);
   \   00000170   04009BE5           LDR      R0,[R11, #+4]
   \   00000174   1B0000EF           SWI      +27
   \   00000178   0060A0E1           MOV      R6,R0
   \   0000017C   00009BE5           LDR      R0,[R11, #+0]
   \   00000180   1B0000EF           SWI      +27
   \   00000184   060080E0           ADD      R0,R0,R6
   \   00000188   0210A0E3           MOV      R1,#+2
   \   0000018C   800081E0           ADD      R0,R1,R0, LSL #+1
   \   00000190   140000EF           SWI      +20
   \   00000194   000085E5           STR      R0,[R5, #+0]
    804              sprintf(mi->conf_jid, "%s/%s", par->room_name, par->room_nick);
   \   00000198   00309BE5           LDR      R3,[R11, #+0]
   \   0000019C   04209BE5           LDR      R2,[R11, #+4]
   \   000001A0   081084E2           ADD      R1,R4,#+8
   \   000001A4   160000EF           SWI      +22
    805              mi->muctema=NULL;
   \   000001A8   047085E5           STR      R7,[R5, #+4]
    806              mi->next=NULL;
   \   000001AC   087085E5           STR      R7,[R5, #+8]
    807              m_ex = muctop;
   \   000001B0   089098E5           LDR      R9,[R8, #+8]
    808              if(muctop)
   \   000001B4   000059E3           CMP      R9,#+0
   \   000001B8   0200001A           BNE      ??Enter_Conference_9
    809              {
    810                while(m_ex->next){m_ex=m_ex->next;};
    811                m_ex->next = mi;
    812              }
    813              else
    814              {
    815                muctop = mi;
   \   000001BC   085088E5           STR      R5,[R8, #+8]
   \   000001C0   F18FBDE8           POP      {R0,R4-R11,PC}
    816              }
   \                     ??Enter_Conference_10:
   \   000001C4   0090A0E1           MOV      R9,R0
   \                     ??Enter_Conference_9:
   \   000001C8   080099E5           LDR      R0,[R9, #+8]
   \   000001CC   000050E3           CMP      R0,#+0
   \   000001D0   FBFFFF1A           BNE      ??Enter_Conference_10
   \   000001D4   085089E5           STR      R5,[R9, #+8]
   \   000001D8   F18FBDE8           POP      {R0,R4-R11,PC}
    817            }
    818            else
    819            {
    820              // m_ex - текущий элемент
    821              int len = strlen(par->room_name)+strlen(par->room_nick)+2;
   \                     ??Enter_Conference_8:
   \   000001DC   04009BE5           LDR      R0,[R11, #+4]
   \   000001E0   1B0000EF           SWI      +27
   \   000001E4   0050A0E1           MOV      R5,R0
   \   000001E8   00009BE5           LDR      R0,[R11, #+0]
   \   000001EC   1B0000EF           SWI      +27
   \   000001F0   050080E0           ADD      R0,R0,R5
   \   000001F4   025080E2           ADD      R5,R0,#+2
    822              m_ex->conf_jid = realloc(m_ex->conf_jid, len);
   \   000001F8   000099E5           LDR      R0,[R9, #+0]
   \   000001FC   0510A0E1           MOV      R1,R5
   \   00000200   BA0000EF           SWI      +186
   \   00000204   000089E5           STR      R0,[R9, #+0]
    823              snprintf(m_ex->conf_jid, len, "%s/%s", par->room_name, par->room_nick);
   \   00000208   00009BE5           LDR      R0,[R11, #+0]
   \   0000020C   082084E2           ADD      R2,R4,#+8
   \   00000210   01002DE9           PUSH     {R0}
   \   00000214   04309BE5           LDR      R3,[R11, #+4]
   \   00000218   000099E5           LDR      R0,[R9, #+0]
   \   0000021C   0510A0E1           MOV      R1,R5
   \   00000220   1B0100EF           SWI      +283
   \   00000224   04D08DE2           ADD      SP,SP,#+4
   \   00000228   F18FBDE8           POP      {R0,R4-R11,PC}   ;; return
   \                     ??Enter_Conference_7:
   \   0000022C   ........           DC32     _enterconference
    824            }
    825          }
    826          
    827          
    828          //Context: HELPER

   \                                 In segment CODE, align 4, keep-with-next
    829          void _leaveconference(char *conf_jid)
    830          {
   \                     _leaveconference:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
    831            extern const char DEFTEX_MUCOFFLINE[];
    832            if(strlen(DEFTEX_MUCOFFLINE))
   \   00000004   18519FE5           LDR      R5,??_leaveconference_0  ;; DEFTEX_MUCOFFLINE
   \   00000008   54D04DE2           SUB      SP,SP,#+84
   \   0000000C   0040A0E1           MOV      R4,R0
   \   00000010   0500A0E1           MOV      R0,R5
   \   00000014   1B0000EF           SWI      +27
   \   00000018   000050E3           CMP      R0,#+0
   \   0000001C   3900000A           BEQ      ??_leaveconference_1
    833            {
    834            char pr_templ[] = "<presence from='%s' to='%s' type='unavailable'><status>%s</status></presence>";
   \   00000020   00119FE5           LDR      R1,??_leaveconference_0+0x4  ;; `?<Constant "<presence from=\\'%s\\' t...">_3`
   \   00000024   04008DE2           ADD      R0,SP,#+4
   \   00000028   5030A0E3           MOV      R3,#+80
   \                     ??_leaveconference_2:
   \   0000002C   043053E2           SUBS     R3,R3,#+4
   \   00000030   032091E7           LDR      R2,[R1, R3]
   \   00000034   032080E7           STR      R2,[R0, R3]
   \   00000038   FBFFFF1A           BNE      ??_leaveconference_2
    835            char* pr=malloc(1024);
   \   0000003C   400EA0E3           MOV      R0,#+1024
   \   00000040   140000EF           SWI      +20
   \   00000044   0060A0E1           MOV      R6,R0
    836            char *msg = malloc(256);
   \   00000048   400FA0E3           MOV      R0,#+256
   \   0000004C   140000EF           SWI      +20
   \   00000050   0080A0E1           MOV      R8,R0
    837            WSHDR *ws = AllocWS(256);
   \   00000054   400FA0E3           MOV      R0,#+256
   \   00000058   250100EF           SWI      +293
   \   0000005C   0070A0E1           MOV      R7,R0
    838            int len;
    839            ascii2ws(ws, DEFTEX_MUCOFFLINE);
   \   00000060   0510A0E1           MOV      R1,R5
   \   00000064   ........           _BLF     ascii2ws,??ascii2ws??rA
    840            ws_2utf8(ws, msg, &len, wstrlen(ws)*2+1);
   \   00000068   0700A0E1           MOV      R0,R7
   \   0000006C   230100EF           SWI      +291
   \   00000070   0110A0E3           MOV      R1,#+1
   \   00000074   803081E0           ADD      R3,R1,R0, LSL #+1
   \   00000078   0D20A0E1           MOV      R2,SP
   \   0000007C   0810A0E1           MOV      R1,R8
   \   00000080   0700A0E1           MOV      R0,R7
   \   00000084   E20100EF           SWI      +482
    841            msg=realloc(msg, len+1);
   \   00000088   00009DE5           LDR      R0,[SP, #+0]
   \   0000008C   011080E2           ADD      R1,R0,#+1
   \   00000090   0800A0E1           MOV      R0,R8
   \   00000094   BA0000EF           SWI      +186
   \   00000098   0050A0E1           MOV      R5,R0
    842            msg[len]='\0';
   \   0000009C   00009DE5           LDR      R0,[SP, #+0]
   \   000000A0   0010A0E3           MOV      R1,#+0
   \   000000A4   0510C0E7           STRB     R1,[R0, +R5]
    843            sprintf(pr, pr_templ, Mask_Special_Syms(My_JID_full), Mask_Special_Syms(conf_jid), Mask_Special_Syms(msg));
   \   000000A8   0500A0E1           MOV      R0,R5
   \   000000AC   ........           _BLF     Mask_Special_Syms,??Mask_Special_Syms??rA
   \   000000B0   0080A0E1           MOV      R8,R0
   \   000000B4   0400A0E1           MOV      R0,R4
   \   000000B8   ........           _BLF     Mask_Special_Syms,??Mask_Special_Syms??rA
   \   000000BC   0090A0E1           MOV      R9,R0
   \   000000C0   ........           LDR      R0,??DataTable67  ;; My_JID_full
   \   000000C4   ........           _BLF     Mask_Special_Syms,??Mask_Special_Syms??rA
   \   000000C8   0020A0E1           MOV      R2,R0
   \   000000CC   00012DE9           PUSH     {R8}
   \   000000D0   0930A0E1           MOV      R3,R9
   \   000000D4   08108DE2           ADD      R1,SP,#+8
   \   000000D8   0600A0E1           MOV      R0,R6
   \   000000DC   160000EF           SWI      +22
    844            SendAnswer(pr);
   \   000000E0   0600A0E1           MOV      R0,R6
   \   000000E4   ........           _BLF     SendAnswer,??SendAnswer??rA
    845            FreeWS(ws);
   \   000000E8   0700A0E1           MOV      R0,R7
   \   000000EC   290100EF           SWI      +297
    846            mfree(msg);
   \   000000F0   0500A0E1           MOV      R0,R5
   \   000000F4   150000EF           SWI      +21
    847            mfree(pr);
   \   000000F8   0600A0E1           MOV      R0,R6
   \   000000FC   150000EF           SWI      +21
   \   00000100   04D08DE2           ADD      SP,SP,#+4
   \   00000104   020000EA           B        ??_leaveconference_3
    848            } else Send_ShortPresence(conf_jid,PRESENCE_OFFLINE);
   \                     ??_leaveconference_1:
   \   00000108   0610A0E3           MOV      R1,#+6
   \   0000010C   0400A0E1           MOV      R0,R4
   \   00000110   ........           BL       Send_ShortPresence
    849            mfree(conf_jid);
   \                     ??_leaveconference_3:
   \   00000114   0400A0E1           MOV      R0,R4
   \   00000118   150000EF           SWI      +21
    850          }
   \   0000011C   54D08DE2           ADD      SP,SP,#+84
   \   00000120   F083BDE8           POP      {R4-R9,PC}       ;; return
   \                     ??_leaveconference_0:
   \   00000124   ........           DC32     DEFTEX_MUCOFFLINE
   \   00000128   ........           DC32     `?<Constant "<presence from=\\'%s\\' t...">_3`
    851          
    852          // Выходит из конференции

   \                                 In segment CODE, align 4, keep-with-next
    853          void Send_Leave_Conference(char* room)
    854          {
   \                     Send_Leave_Conference:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    855                char* cj = malloc(strlen(room)*2+1);
   \   00000008   1B0000EF           SWI      +27
   \   0000000C   0110A0E3           MOV      R1,#+1
   \   00000010   800081E0           ADD      R0,R1,R0, LSL #+1
   \   00000014   140000EF           SWI      +20
   \   00000018   0050A0E1           MOV      R5,R0
    856                strcpy(cj, room);
   \   0000001C   0410A0E1           MOV      R1,R4
   \   00000020   1A0000EF           SWI      +26
    857                SUBPROC((void*)_leaveconference, cj);
   \   00000024   08009FE5           LDR      R0,??Send_Leave_Conference_0  ;; _leaveconference
   \   00000028   0510A0E1           MOV      R1,R5
   \   0000002C   710100EF           SWI      +369
    858          }
   \   00000030   3080BDE8           POP      {R4,R5,PC}       ;; return
   \                     ??Send_Leave_Conference_0:
   \   00000034   ........           DC32     _leaveconference
    859          

   \                                 In segment CODE, align 4, keep-with-next
    860          void Leave_Conference(char* room)
    861          {
   \                     Leave_Conference:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
    862            // Ищем экземпляр контакта в списке для конференций
    863            MUC_ITEM* m_ex = CList_FindMUCByJID(room);
    864          
    865            MUC_ITEM* m_ex2 = muctop;
   \   00000004   ........           LDR      R5,??DataTable62  ;; OnlineInfo
   \   00000008   ........           _BLF     CList_FindMUCByJID,??CList_FindMUCByJID??rA
   \   0000000C   0040A0E1           MOV      R4,R0
   \   00000010   080095E5           LDR      R0,[R5, #+8]
   \   00000014   0060A0E1           MOV      R6,R0
    866            if(muctop==m_ex && muctop!=NULL)
   \   00000018   040050E1           CMP      R0,R4
   \   0000001C   0D00001A           BNE      ??Leave_Conference_0
   \   00000020   000050E3           CMP      R0,#+0
   \   00000024   0B00000A           BEQ      ??Leave_Conference_0
    867            {
    868              mfree(m_ex->conf_jid);
   \   00000028   000094E5           LDR      R0,[R4, #+0]
   \   0000002C   150000EF           SWI      +21
    869              if(m_ex->muctema)mfree(m_ex->muctema);
   \   00000030   040094E5           LDR      R0,[R4, #+4]
   \   00000034   000050E3           CMP      R0,#+0
   \   00000038   0000000A           BEQ      ??Leave_Conference_1
   \   0000003C   150000EF           SWI      +21
    870              muctop=m_ex->next;
   \                     ??Leave_Conference_1:
   \   00000040   080094E5           LDR      R0,[R4, #+8]
   \   00000044   080085E5           STR      R0,[R5, #+8]
    871              mfree(m_ex);
   \   00000048   0400A0E1           MOV      R0,R4
   \   0000004C   150000EF           SWI      +21
   \   00000050   020000EA           B        ??Leave_Conference_2
    872            }
    873            while(m_ex2)
    874            {
    875              if(m_ex2->next==m_ex)
    876              {
    877                m_ex2->next = m_ex->next;   // Выбиваем из цепочки
    878                mfree(m_ex->conf_jid);
    879                mfree(m_ex);
    880                break;
    881              }
    882              m_ex2 = m_ex2->next;
   \                     ??Leave_Conference_3:
   \   00000054   0060A0E1           MOV      R6,R0
   \                     ??Leave_Conference_0:
   \   00000058   000056E3           CMP      R6,#+0
   \   0000005C   0800000A           BEQ      ??Leave_Conference_4
   \                     ??Leave_Conference_2:
   \   00000060   080096E5           LDR      R0,[R6, #+8]
   \   00000064   040050E1           CMP      R0,R4
   \   00000068   F9FFFF1A           BNE      ??Leave_Conference_3
   \   0000006C   080094E5           LDR      R0,[R4, #+8]
   \   00000070   080086E5           STR      R0,[R6, #+8]
   \   00000074   000094E5           LDR      R0,[R4, #+0]
   \   00000078   150000EF           SWI      +21
   \   0000007C   0400A0E1           MOV      R0,R4
   \   00000080   150000EF           SWI      +21
    883            }
    884            ShowMSG(1,(int)LG_MUCEXITDONE);
   \                     ??Leave_Conference_4:
   \   00000084   08109FE5           LDR      R1,??Leave_Conference_5  ;; `?<Constant "\\302\\373\\365\\356\\344 \\350\\347 MUC `
   \   00000088   0100A0E3           MOV      R0,#+1
   \   0000008C   480100EF           SWI      +328
    885          }
   \   00000090   7080BDE8           POP      {R4-R6,PC}       ;; return
   \                     ??Leave_Conference_5:
   \   00000094   ........           DC32     `?<Constant "\\302\\373\\365\\356\\344 \\350\\347 MUC `
    886          
    887          
    888          // Уничтожить список комнат

   \                                 In segment CODE, align 4, keep-with-next
    889          void MUCList_Destroy()
    890          {
   \                     MUCList_Destroy:
   \   00000000   10402DE9           PUSH     {R4,LR}
    891            LockSched();
   \   00000004   460100EF           SWI      +326
    892            MUC_ITEM* cl=muctop;
   \   00000008   ........           LDR      R0,??DataTable62  ;; OnlineInfo
    893            muctop=NULL;
   \   0000000C   0010A0E3           MOV      R1,#+0
   \   00000010   084090E5           LDR      R4,[R0, #+8]
   \   00000014   081080E5           STR      R1,[R0, #+8]
   \   00000018   000054E3           CMP      R4,#+0
   \   0000001C   0A00000A           BEQ      ??MUCList_Destroy_0
    894            while(cl)
    895            {
    896              MUC_ITEM *p;
    897              mfree(cl->conf_jid);
   \                     ??MUCList_Destroy_1:
   \   00000020   000094E5           LDR      R0,[R4, #+0]
   \   00000024   150000EF           SWI      +21
    898              if(cl->muctema)mfree(cl->muctema);
   \   00000028   040094E5           LDR      R0,[R4, #+4]
   \   0000002C   000050E3           CMP      R0,#+0
   \   00000030   0000000A           BEQ      ??MUCList_Destroy_2
   \   00000034   150000EF           SWI      +21
    899              p=cl;
   \                     ??MUCList_Destroy_2:
   \   00000038   0400A0E1           MOV      R0,R4
    900              cl=(MUC_ITEM*)(cl->next);
   \   0000003C   084094E5           LDR      R4,[R4, #+8]
    901              mfree(p);
   \   00000040   150000EF           SWI      +21
    902              p=NULL;
    903            }
   \   00000044   000054E3           CMP      R4,#+0
   \   00000048   F4FFFF1A           BNE      ??MUCList_Destroy_1
    904            UnlockSched();
   \                     ??MUCList_Destroy_0:
   \   0000004C   470100EF           SWI      +327
    905          }
   \   00000050   1080BDE8           POP      {R4,PC}          ;; return
    906          
    907          
    908          
    909          // Для вызова таймером

   \                                 In segment CODE, align 4, keep-with-next
    910          void Send_Presence_MMIStub()
    911          {
    912            SUBPROC((void*)Send_Initial_Presence_Helper);
   \                     Send_Presence_MMIStub:
   \   00000000   ........           LDR      R0,??DataTable63  ;; Send_Initial_Presence_Helper
   \   00000004   00402DE9           PUSH     {LR}
   \   00000008   710100EF           SWI      +369
    913          }
   \   0000000C   0080BDE8           POP      {PC}             ;; return
    914          
    915          
    916          // Изменяет имя контакта в ростере

   \                                 In segment CODE, align 4, keep-with-next
    917          void ChangeRoster(XMLNode* items)
    918          {
    919            XMLNode* rostEx = items;
    920            CLIST* Cont_Ex;
    921            char *name;
    922            char* w_subscr;
    923            char aname[]="jid";  // Затрахали Tool Internal Error
   \                     ChangeRoster:
   \   00000000   20119FE5           LDR      R1,??ChangeRoster_0  ;; `?<Constant "jid">`
   \   00000004   F0472DE9           PUSH     {R4-R10,LR}
   \   00000008   14D04DE2           SUB      SP,SP,#+20
   \   0000000C   002091E5           LDR      R2,[R1, #0]
    924            char asub[]="subscribe";
   \   00000010   14119FE5           LDR      R1,??ChangeRoster_0+0x4  ;; `?<Constant "subscribe">_1`
   \   00000014   0050A0E1           MOV      R5,R0
   \   00000018   0D00A0E1           MOV      R0,SP
   \   0000001C   002080E5           STR      R2,[R0, #+0]
   \   00000020   1C0091E8           LDM      R1,{R2-R4}
    925            char aask[]="ask";
   \   00000024   04119FE5           LDR      R1,??ChangeRoster_0+0x8  ;; `?<Constant "ask">`
   \   00000028   08008DE2           ADD      R0,SP,#+8
   \   0000002C   1C0080E8           STM      R0,{R2-R4}
   \   00000030   002091E5           LDR      R2,[R1, #0]
   \   00000034   04008DE2           ADD      R0,SP,#+4
   \   00000038   002080E5           STR      R2,[R0, #+0]
   \   0000003C   000055E3           CMP      R5,#+0
   \   00000040   3600000A           BEQ      ??ChangeRoster_1
    926            char* jid;
    927            int gr_id;
    928            char w_subscr_flag;
    929            while(rostEx)
    930            {
    931              jid = XML_Get_Attr_Value(aname,rostEx->attr);
    932              JABBER_SUBSCRIPTION r_subscr=GetSubscrType(XML_Get_Attr_Value("subscription",rostEx->attr));
   \                     ??ChangeRoster_2:
   \   00000044   ........           LDR      R9,??DataTable65  ;; `?<Constant "<feature var=\\'urn:xmp...">`
   \   00000048   0C1095E5           LDR      R1,[R5, #+12]
   \   0000004C   0D00A0E1           MOV      R0,SP
   \   00000050   ........           _BLF     XML_Get_Attr_Value,??XML_Get_Attr_Value??rA
   \   00000054   0C1095E5           LDR      R1,[R5, #+12]
   \   00000058   0040A0E1           MOV      R4,R0
   \   0000005C   CA0F89E2           ADD      R0,R9,#+808
   \   00000060   ........           _BLF     XML_Get_Attr_Value,??XML_Get_Attr_Value??rA
   \   00000064   ........           BL       GetSubscrType
    933              name = XML_Get_Attr_Value("name",rostEx->attr);
   \   00000068   0C1095E5           LDR      R1,[R5, #+12]
   \   0000006C   0060A0E1           MOV      R6,R0
   \   00000070   CE0F89E2           ADD      R0,R9,#+824
   \   00000074   ........           _BLF     XML_Get_Attr_Value,??XML_Get_Attr_Value??rA
    934              w_subscr = XML_Get_Attr_Value(aask,rostEx->attr);
   \   00000078   0C1095E5           LDR      R1,[R5, #+12]
   \   0000007C   0070A0E1           MOV      R7,R0
   \   00000080   04008DE2           ADD      R0,SP,#+4
   \   00000084   ........           _BLF     XML_Get_Attr_Value,??XML_Get_Attr_Value??rA
    935              if(w_subscr)
   \   00000088   0080A0E3           MOV      R8,#+0
   \   0000008C   000050E3           CMP      R0,#+0
   \   00000090   0300000A           BEQ      ??ChangeRoster_3
    936              {
    937                w_subscr_flag = !strcmp(w_subscr, asub) ? 1: 0;
   \   00000094   08108DE2           ADD      R1,SP,#+8
   \   00000098   190000EF           SWI      +25
   \   0000009C   000050E3           CMP      R0,#+0
   \   000000A0   0180A003           MOVEQ    R8,#+1
    938              }
    939              else
    940              {
    941                w_subscr_flag = 0;
    942              }
    943              XMLNode *group = XML_Get_Child_Node_By_Name(rostEx, "group");
   \                     ??ChangeRoster_3:
   \   000000A4   D01F89E2           ADD      R1,R9,#+832
   \   000000A8   0500A0E1           MOV      R0,R5
   \   000000AC   ........           _BLF     XML_Get_Child_Node_By_Name,??XML_Get_Child_Node_By_Name??rA
   \   000000B0   0090B0E1           MOVS     R9,R0
    944              if(group)
   \   000000B4   0700000A           BEQ      ??ChangeRoster_4
    945              {
    946                if(!(gr_id = GetGroupID(group->value)))
   \   000000B8   100099E5           LDR      R0,[R9, #+16]
   \   000000BC   ........           _BLF     GetGroupID,??GetGroupID??rA
   \   000000C0   00A0B0E1           MOVS     R10,R0
   \   000000C4   0400001A           BNE      ??ChangeRoster_5
    947                {
    948                  gr_id = AddGroup(group->value);
   \   000000C8   100099E5           LDR      R0,[R9, #+16]
   \   000000CC   ........           _BLF     AddGroup,??AddGroup??rA
   \   000000D0   00A0A0E1           MOV      R10,R0
   \   000000D4   000000EA           B        ??ChangeRoster_5
    949                }
    950              }
    951              else gr_id = 0;
   \                     ??ChangeRoster_4:
   \   000000D8   00A0A0E3           MOV      R10,#+0
    952              Cont_Ex = CList_FindContactByJID(jid);
   \                     ??ChangeRoster_5:
   \   000000DC   0400A0E1           MOV      R0,R4
   \   000000E0   ........           _BLF     CList_FindContactByJID,??CList_FindContactByJID??rA
    953              if(Cont_Ex)
   \   000000E4   FFA00AE2           AND      R10,R10,#0xFF
   \   000000E8   00042DE9           PUSH     {R10}
   \   000000EC   000050E3           CMP      R0,#+0
   \   000000F0   0830A0E1           MOV      R3,R8
   \   000000F4   0620A0E1           MOV      R2,R6
   \   000000F8   0710A0E1           MOV      R1,R7
   \   000000FC   0100000A           BEQ      ??ChangeRoster_6
    954              {
    955                CList_ChangeContactParams(Cont_Ex,name,r_subscr, w_subscr_flag,gr_id);
   \   00000100   ........           _BLF     CList_ChangeContactParams,??CList_ChangeContactParams??rA
   \   00000104   010000EA           B        ??ChangeRoster_7
    956              }
    957              else
    958              { //если контакта нету надо добавить его в контактлист.
    959               CList_AddContact(jid, name,r_subscr, w_subscr_flag, gr_id);
   \                     ??ChangeRoster_6:
   \   00000108   0400A0E1           MOV      R0,R4
   \   0000010C   ........           _BLF     CList_AddContact,??CList_AddContact??rA
   \                     ??ChangeRoster_7:
   \   00000110   04D08DE2           ADD      SP,SP,#+4
    960              }
    961              rostEx=rostEx->next;
   \   00000114   005095E5           LDR      R5,[R5, #+0]
    962            }
   \   00000118   000055E3           CMP      R5,#+0
   \   0000011C   C8FFFF1A           BNE      ??ChangeRoster_2
    963          }
   \                     ??ChangeRoster_1:
   \   00000120   14D08DE2           ADD      SP,SP,#+20       ;; stack cleaning
   \   00000124   F087BDE8           POP      {R4-R10,PC}      ;; return
   \                     ??ChangeRoster_0:
   \   00000128   ........           DC32     `?<Constant "jid">`
   \   0000012C   ........           DC32     `?<Constant "subscribe">_1`
   \   00000130   ........           DC32     `?<Constant "ask">`
    964          

   \                                 In segment CODE, align 4, keep-with-next
    965          void FillRoster(XMLNode* items)
    966          {
   \                     FillRoster:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
    967            XMLNode* rostEx = items;
   \   00000008   0040B0E1           MOVS     R4,R0
   \   0000000C   0050A0E3           MOV      R5,#+0
   \   00000010   3000000A           BEQ      ??FillRoster_0
   \   00000014   946F8FE2           ADR      R6,??FillRoster_1  ;; "ask"
    968            int i=0;
    969            char* name;
    970            char* w_subscr;
    971            char w_subscr_flag;
    972            while(rostEx)
    973            {
    974              JABBER_SUBSCRIPTION r_subscr=GetSubscrType(XML_Get_Attr_Value("subscription",rostEx->attr));
   \                     ??FillRoster_2:
   \   00000018   ........           LDR      R10,??DataTable65  ;; `?<Constant "<feature var=\\'urn:xmp...">`
   \   0000001C   0C1094E5           LDR      R1,[R4, #+12]
   \   00000020   CA0F8AE2           ADD      R0,R10,#+808
   \   00000024   ........           _BLF     XML_Get_Attr_Value,??XML_Get_Attr_Value??rA
   \   00000028   ........           BL       GetSubscrType
    975              name = XML_Get_Attr_Value("name",rostEx->attr);
   \   0000002C   0C1094E5           LDR      R1,[R4, #+12]
   \   00000030   0070A0E1           MOV      R7,R0
   \   00000034   CE0F8AE2           ADD      R0,R10,#+824
   \   00000038   ........           _BLF     XML_Get_Attr_Value,??XML_Get_Attr_Value??rA
    976              w_subscr = XML_Get_Attr_Value("ask",rostEx->attr);
   \   0000003C   0C1094E5           LDR      R1,[R4, #+12]
   \   00000040   0080A0E1           MOV      R8,R0
   \   00000044   0600A0E1           MOV      R0,R6
   \   00000048   ........           _BLF     XML_Get_Attr_Value,??XML_Get_Attr_Value??rA
    977              if(w_subscr)
   \   0000004C   000050E3           CMP      R0,#+0
   \   00000050   0400000A           BEQ      ??FillRoster_3
    978              {
    979                w_subscr_flag = !strcmp(w_subscr, "subscribe") ? 1: 0;
   \   00000054   CC108AE2           ADD      R1,R10,#+204
   \   00000058   190000EF           SWI      +25
   \   0000005C   000050E3           CMP      R0,#+0
   \   00000060   0190A003           MOVEQ    R9,#+1
   \   00000064   0000000A           BEQ      ??FillRoster_4
    980              }
    981              else
    982              {
    983                w_subscr_flag = 0;
   \                     ??FillRoster_3:
   \   00000068   0090A0E3           MOV      R9,#+0
    984              }
    985              // Получаем группу контакта, заносим в список групп
    986              XMLNode *group = XML_Get_Child_Node_By_Name(rostEx, "group");
   \                     ??FillRoster_4:
   \   0000006C   D01F8AE2           ADD      R1,R10,#+832
   \   00000070   0400A0E1           MOV      R0,R4
   \   00000074   ........           _BLF     XML_Get_Child_Node_By_Name,??XML_Get_Child_Node_By_Name??rA
   \   00000078   00B0B0E1           MOVS     R11,R0
    987              int gr_id;
    988              if(group)
   \   0000007C   0700000A           BEQ      ??FillRoster_5
    989              {
    990                if(!(gr_id = GetGroupID(group->value)))
   \   00000080   10009BE5           LDR      R0,[R11, #+16]
   \   00000084   ........           _BLF     GetGroupID,??GetGroupID??rA
   \   00000088   00A0B0E1           MOVS     R10,R0
   \   0000008C   0400001A           BNE      ??FillRoster_6
    991                {
    992                  gr_id = AddGroup(group->value);
   \   00000090   10009BE5           LDR      R0,[R11, #+16]
   \   00000094   ........           _BLF     AddGroup,??AddGroup??rA
   \   00000098   00A0A0E1           MOV      R10,R0
   \   0000009C   000000EA           B        ??FillRoster_6
    993                }
    994              }
    995              else gr_id = 0;
   \                     ??FillRoster_5:
   \   000000A0   00A0A0E3           MOV      R10,#+0
    996          
    997              CList_AddContact(XML_Get_Attr_Value("jid",rostEx->attr),
    998                                    name,
    999                                    r_subscr,
   1000                                    w_subscr_flag,
   1001                                    gr_id
   1002                                    );
   \                     ??FillRoster_6:
   \   000000A4   0C1094E5           LDR      R1,[R4, #+12]
   \   000000A8   700F8FE2           ADR      R0,??FillRoster_1+0x4  ;; "jid"
   \   000000AC   ........           _BLF     XML_Get_Attr_Value,??XML_Get_Attr_Value??rA
   \   000000B0   FFA00AE2           AND      R10,R10,#0xFF
   \   000000B4   00042DE9           PUSH     {R10}
   \   000000B8   0930A0E1           MOV      R3,R9
   \   000000BC   0720A0E1           MOV      R2,R7
   \   000000C0   0810A0E1           MOV      R1,R8
   \   000000C4   ........           _BLF     CList_AddContact,??CList_AddContact??rA
   1003             //if(name)mfree(name);
   1004          
   1005             rostEx=rostEx->next;
   \   000000C8   004094E5           LDR      R4,[R4, #+0]
   1006             i++;
   1007            }
   \   000000CC   04D08DE2           ADD      SP,SP,#+4
   \   000000D0   000054E3           CMP      R4,#+0
   \   000000D4   CFFFFF1A           BNE      ??FillRoster_2
   1008          
   1009            // Получение ростера закончено. Размечаем группы
   1010            GR_ITEM *tmp_gpointer=GR_ROOT;
   1011            CLIST *tmp_cpointer=cltop;
   \                     ??FillRoster_0:
   \   000000D8   ........           LDR      R0,??DataTable73  ;; cltop
   1012            int cur_gid=-1, this_grid;   // Текущий обрабатываемый GID
   \   000000DC   ........           LDR      R8,??DataTable67  ;; My_JID_full
   \   000000E0   004090E5           LDR      R4,[R0, #+0]
   \   000000E4   0510E0E1           MVN      R1,R5
   \   000000E8   00108DE5           STR      R1,[SP, #+0]
   \   000000EC   1C0094E5           LDR      R0,[R4, #+28]
   \   000000F0   000050E3           CMP      R0,#+0
   \   000000F4   F18FBD08           POPEQ    {R0,R4-R11,PC}
   1013          
   1014          
   1015            // Цикл по всем контактам
   1016            while(tmp_cpointer->next)
   1017            {
   1018              this_grid = ((CLIST*)tmp_cpointer->next)->group;
   \                     ??FillRoster_7:
   \   000000F8   1C0094E5           LDR      R0,[R4, #+28]
   \   000000FC   1670D0E5           LDRB     R7,[R0, #+22]
   1019              // Получаем текущую группу
   1020              if(cur_gid!=this_grid)
   \   00000100   00009DE5           LDR      R0,[SP, #+0]
   \   00000104   070050E1           CMP      R0,R7
   \   00000108   5200000A           BEQ      ??FillRoster_8
   1021              {
   1022                tmp_gpointer = GetGroupByID(this_grid);
   \   0000010C   0700A0E1           MOV      R0,R7
   \   00000110   ........           _BLF     GetGroupByID,??GetGroupByID??rA
   \   00000114   0060A0E1           MOV      R6,R0
   1023                cur_gid = this_grid;
   \   00000118   00708DE5           STR      R7,[SP, #+0]
   1024                // Создаём псевдоконтакт, вставляем его
   1025                CLIST *gr_pscontact = malloc(sizeof(CLIST));
   \   0000011C   2000A0E3           MOV      R0,#+32
   \   00000120   140000EF           SWI      +20
   \   00000124   0070A0E1           MOV      R7,R0
   1026                gr_pscontact->name = malloc(strlen(tmp_gpointer->name)+1);
   \   00000128   000096E5           LDR      R0,[R6, #+0]
   \   0000012C   1B0000EF           SWI      +27
   \   00000130   010080E2           ADD      R0,R0,#+1
   \   00000134   140000EF           SWI      +20
   \   00000138   100087E5           STR      R0,[R7, #+16]
   1027                gr_pscontact->JID = malloc(strlen(tmp_gpointer->name)+2+(strlen(My_JID_full)));
   \   0000013C   000096E5           LDR      R0,[R6, #+0]
   \   00000140   1B0000EF           SWI      +27
   \   00000144   0090A0E1           MOV      R9,R0
   \   00000148   0800A0E1           MOV      R0,R8
   \   0000014C   1B0000EF           SWI      +27
   \   00000150   000089E0           ADD      R0,R9,R0
   \   00000154   020080E2           ADD      R0,R0,#+2
   \   00000158   140000EF           SWI      +20
   \   0000015C   000087E5           STR      R0,[R7, #+0]
   1028                strcpy(gr_pscontact->name, tmp_gpointer->name);
   \   00000160   001096E5           LDR      R1,[R6, #+0]
   \   00000164   100097E5           LDR      R0,[R7, #+16]
   1029                strcpy(gr_pscontact->JID, tmp_gpointer->name);
   1030                strcat(gr_pscontact->JID, "@"); //присвоим группе несущемтвуюший JID, чтоб не сбивала с толку.
   \   00000168   419F8FE2           ADR      R9,??FillRoster_1+0x8  ;; "@"
   \   0000016C   1A0000EF           SWI      +26
   \   00000170   001096E5           LDR      R1,[R6, #+0]
   \   00000174   000097E5           LDR      R0,[R7, #+0]
   \   00000178   1A0000EF           SWI      +26
   \   0000017C   000097E5           LDR      R0,[R7, #+0]
   \   00000180   0910A0E1           MOV      R1,R9
   \   00000184   170000EF           SWI      +23
   1031                strcat(gr_pscontact->JID, My_JID_full);//но ресурс и контакт должны совпадать
   \   00000188   000097E5           LDR      R0,[R7, #+0]
   \   0000018C   0810A0E1           MOV      R1,R8
   \   00000190   170000EF           SWI      +23
   1032                gr_pscontact->subscription = SUB_BOTH;
   \   00000194   0300A0E3           MOV      R0,#+3
   \   00000198   1400C7E5           STRB     R0,[R7, #+20]
   1033                gr_pscontact->wants_subscription = 0;
   \   0000019C   1550C7E5           STRB     R5,[R7, #+21]
   1034                gr_pscontact->group = cur_gid;
   \   000001A0   00009DE5           LDR      R0,[SP, #+0]
   \   000001A4   1600C7E5           STRB     R0,[R7, #+22]
   1035                gr_pscontact->IsVisible = 1;
   \   000001A8   0100A0E3           MOV      R0,#+1
   \   000001AC   0400C7E5           STRB     R0,[R7, #+4]
   1036                gr_pscontact->ResourceCount=1;
   \   000001B0   080087E5           STR      R0,[R7, #+8]
   1037                gr_pscontact->next=tmp_cpointer->next;  // Вставляем между текущим и следующим
   \   000001B4   1C0094E5           LDR      R0,[R4, #+28]
   \   000001B8   1C0087E5           STR      R0,[R7, #+28]
   1038                gr_pscontact->vcard=NULL; //У группы нет vCard. И никогда не будет.
   \   000001BC   185087E5           STR      R5,[R7, #+24]
   1039                tmp_cpointer->next = gr_pscontact;
   \   000001C0   1C7084E5           STR      R7,[R4, #+28]
   1040          
   1041                // Cоздаём ещё и псевдоресурс
   1042                TRESOURCE* ResEx = malloc(sizeof(TRESOURCE));
   \   000001C4   3000A0E3           MOV      R0,#+48
   \   000001C8   140000EF           SWI      +20
   \   000001CC   00A0A0E1           MOV      R10,R0
   1043                ResEx->vcard = NULL;
   \   000001D0   28508AE5           STR      R5,[R10, #+40]
   1044                ResEx->log=NULL;
   \   000001D4   1C508AE5           STR      R5,[R10, #+28]
   1045                ResEx->next=NULL;
   \   000001D8   2C508AE5           STR      R5,[R10, #+44]
   1046                ResEx->status_msg=NULL;
   \   000001DC   0C508AE5           STR      R5,[R10, #+12]
   1047                ResEx->muc_privs.real_jid=NULL;
   \   000001E0   24508AE5           STR      R5,[R10, #+36]
   1048                ResEx->status = PRESENCE_ONLINE;
   \   000001E4   0950CAE5           STRB     R5,[R10, #+9]
   1049                ResEx->has_unread_msg=0;
   \   000001E8   14508AE5           STR      R5,[R10, #+20]
   1050                ResEx->total_msg_count=0;
   \   000001EC   18508AE5           STR      R5,[R10, #+24]
   1051                ResEx->entry_type=T_GROUP;
   \   000001F0   0500A0E3           MOV      R0,#+5
   \   000001F4   0800CAE5           STRB     R0,[R10, #+8]
   1052                ResEx->name = NULL;
   \   000001F8   00508AE5           STR      R5,[R10, #+0]
   1053                ResEx->full_name = malloc(strlen(tmp_gpointer->name)+2+(strlen(My_JID_full)));
   \   000001FC   000096E5           LDR      R0,[R6, #+0]
   \   00000200   1B0000EF           SWI      +27
   \   00000204   00B0A0E1           MOV      R11,R0
   \   00000208   0800A0E1           MOV      R0,R8
   \   0000020C   1B0000EF           SWI      +27
   \   00000210   00008BE0           ADD      R0,R11,R0
   \   00000214   020080E2           ADD      R0,R0,#+2
   \   00000218   140000EF           SWI      +20
   \   0000021C   04008AE5           STR      R0,[R10, #+4]
   1054                strcpy(ResEx->full_name, tmp_gpointer->name);
   \   00000220   001096E5           LDR      R1,[R6, #+0]
   \   00000224   1A0000EF           SWI      +26
   1055                strcat(ResEx->full_name, "@");
   \   00000228   04009AE5           LDR      R0,[R10, #+4]
   \   0000022C   0910A0E1           MOV      R1,R9
   \   00000230   170000EF           SWI      +23
   1056                strcat(ResEx->full_name, My_JID_full);
   \   00000234   04009AE5           LDR      R0,[R10, #+4]
   \   00000238   0810A0E1           MOV      R1,R8
   \   0000023C   170000EF           SWI      +23
   1057                // Коннектим ресурс к группе
   1058                gr_pscontact->res_list = ResEx;
   1059                NContacts++;
   \   00000240   30009FE5           LDR      R0,??FillRoster_1+0xC  ;; NContacts
   \   00000244   0CA087E5           STR      R10,[R7, #+12]
   \   00000248   001090E5           LDR      R1,[R0, #+0]
   \   0000024C   011081E2           ADD      R1,R1,#+1
   \   00000250   001080E5           STR      R1,[R0, #+0]
   1060                tmp_cpointer = tmp_cpointer->next;
   \   00000254   1C4094E5           LDR      R4,[R4, #+28]
   1061              }
   1062              tmp_cpointer = tmp_cpointer->next;
   \                     ??FillRoster_8:
   \   00000258   1C4094E5           LDR      R4,[R4, #+28]
   1063            }
   \   0000025C   1C0094E5           LDR      R0,[R4, #+28]
   \   00000260   000050E3           CMP      R0,#+0
   \   00000264   A3FFFF1A           BNE      ??FillRoster_7
   1064          
   1065          }
   \   00000268   F18FBDE8           POP      {R0,R4-R11,PC}   ;; return
   \                     ??FillRoster_1:
   \   0000026C   61736B00           DC8      "ask"
   \   00000270   6A696400           DC8      "jid"
   \   00000274   40000000           DC8      "@",+0,+0
   \   00000278   ........           DC32     NContacts
   1066          
   1067          /*
   1068          <iq from='siepatchdb@conference.jabber.ru/Adder' to='kibab612@jabber.ru/SieJC' id='stoat_173' type='get'>
   1069            <query xmlns='jabber:iq:time'/>
   1070          </iq>
   1071          */
   1072          
   1073          /*
   1074            <iq to='sender' type='error'>
   1075            <error type='cancel'>
   1076              <feature-not-implemented xmlns='urn:ietf:params:xml:ns:xmpp-stanzas'/>
   1077            </error>
   1078            </iq>
   1079          */
   1080          
   1081          

   \                                 In segment CODE, align 4, keep-with-next
   1082          void Send_Feature_Not_Implemented(char *to, char *id)
   1083          {
   \                     Send_Feature_Not_Implemented:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   8CD04DE2           SUB      SP,SP,#+140
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
   1084            if(!to || !id)return;
   \   00000010   000054E3           CMP      R4,#+0
   \   00000014   00005513           CMPNE    R5,#+0
   \   00000018   1600000A           BEQ      ??Send_Feature_Not_Implemented_0
   1085            char err_tpl[]="<iq to='%s' id='%s' type='error'>"
   1086                           "<error type='cancel'>"
   1087                              "<feature-not-implemented xmlns='urn:ietf:params:xml:ns:xmpp-stanzas'/>"
   1088                            "</error>"
   1089                           "</iq>";
   \   0000001C   5C109FE5           LDR      R1,??Send_Feature_Not_Implemented_1  ;; `?<Constant "<iq to=\\'%s\\' id=\\'%s\\' t...">`
   \   00000020   0D00A0E1           MOV      R0,SP
   \   00000024   8C30A0E3           MOV      R3,#+140
   \                     ??Send_Feature_Not_Implemented_2:
   \   00000028   043053E2           SUBS     R3,R3,#+4
   \   0000002C   032091E7           LDR      R2,[R1, R3]
   \   00000030   032080E7           STR      R2,[R0, R3]
   \   00000034   FBFFFF1A           BNE      ??Send_Feature_Not_Implemented_2
   1090            char *m=malloc(1024);
   \   00000038   400EA0E3           MOV      R0,#+1024
   \   0000003C   140000EF           SWI      +20
   \   00000040   0060A0E1           MOV      R6,R0
   1091            zeromem(m,1024);
   \   00000044   401EA0E3           MOV      R1,#+1024
   \   00000048   1D0100EF           SWI      +285
   1092            snprintf(m,1023,err_tpl,to,id);
   \   0000004C   20002DE9           PUSH     {R5}
   \   00000050   0430A0E1           MOV      R3,R4
   \   00000054   04208DE2           ADD      R2,SP,#+4
   \   00000058   FF10A0E3           MOV      R1,#+255
   \   0000005C   C01F81E3           ORR      R1,R1,#0x300
   \   00000060   0600A0E1           MOV      R0,R6
   \   00000064   1B0100EF           SWI      +283
   1093            SUBPROC((void*)_sendandfree,m);
   \   00000068   ........           LDR      R0,??DataTable68  ;; _sendandfree
   \   0000006C   0610A0E1           MOV      R1,R6
   \   00000070   710100EF           SWI      +369
   1094          }
   \   00000074   04D08DE2           ADD      SP,SP,#+4
   \                     ??Send_Feature_Not_Implemented_0:
   \   00000078   8CD08DE2           ADD      SP,SP,#+140      ;; stack cleaning
   \   0000007C   7080BDE8           POP      {R4-R6,PC}       ;; return
   \                     ??Send_Feature_Not_Implemented_1:
   \   00000080   ........           DC32     `?<Constant "<iq to=\\'%s\\' id=\\'%s\\' t...">`
   1095          
   1096          /*
   1097           Обработка входящих Iq-запросов
   1098          */

   \                                 In segment CODE, align 4, keep-with-next
   1099          void Process_Iq_Request(XMLNode* nodeEx)
   1100          {
   1101            char* iqtype = NULL;
   1102            char* id = NULL;
   1103            char *from = NULL;
   1104            char gget[]=IQTYPE_GET;
   \                     Process_Iq_Request:
   \   00000000   741B9FE5           LDR      R1,??Process_Iq_Request_1  ;; `?<Constant "get">_5`
   \   00000004   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000008   9CD04DE2           SUB      SP,SP,#+156
   \   0000000C   002091E5           LDR      R2,[R1, #0]
   1105            char gres[]=IQTYPE_RES;
   \   00000010   681B9FE5           LDR      R1,??Process_Iq_Request_1+0x4  ;; `?<Constant "result">_1`
   \   00000014   0040A0E1           MOV      R4,R0
   \   00000018   0C008DE2           ADD      R0,SP,#+12
   \   0000001C   002080E5           STR      R2,[R0, #+0]
   \   00000020   0C0091E8           LDM      R1,{R2,R3}
   1106            char gerr[]=IQTYPE_ERR;
   \   00000024   581B9FE5           LDR      R1,??Process_Iq_Request_1+0x8  ;; `?<Constant "error">_1`
   \   00000028   20008DE2           ADD      R0,SP,#+32
   \   0000002C   0C0080E8           STM      R0,{R2,R3}
   \   00000030   0C0091E8           LDM      R1,{R2,R3}
   1107            char gset[]=IQTYPE_SET;
   \   00000034   4C1B9FE5           LDR      R1,??Process_Iq_Request_1+0xC  ;; `?<Constant "set">_1`
   \   00000038   28008DE2           ADD      R0,SP,#+40
   \   0000003C   0C0080E8           STM      R0,{R2,R3}
   \   00000040   002091E5           LDR      R2,[R1, #0]
   1108            const char iq_version[]=IQ_VERSION;
   \   00000044   401B9FE5           LDR      R1,??Process_Iq_Request_1+0x10  ;; `?<Constant "jabber:iq:version">_2`
   \   00000048   10008DE2           ADD      R0,SP,#+16
   \   0000004C   002080E5           STR      R2,[R0, #+0]
   \   00000050   EC0091E8           LDM      R1,{R2,R3,R5-R7}
   1109            const char disco_info[]=DISCO_INFO;
   \   00000054   341B9FE5           LDR      R1,??Process_Iq_Request_1+0x14  ;; `?<Constant "http://jabber.org/pro...">_5`
   \   00000058   88008DE2           ADD      R0,SP,#+136
   \   0000005C   EC0080E8           STM      R0,{R2,R3,R5-R7}
   \   00000060   EC00B1E8           LDM      R1!,{R2,R3,R5-R7}
   \   00000064   60008DE2           ADD      R0,SP,#+96
   \   00000068   EC00A0E8           STM      R0!,{R2,R3,R5-R7}
   \   0000006C   EC0091E8           LDM      R1,{R2,R3,R5-R7}
   \   00000070   EC0080E8           STM      R0,{R2,R3,R5-R7}
   1110          
   1111            iqtype = XML_Get_Attr_Value("type",nodeEx->attr);
   \   00000074   0C1094E5           LDR      R1,[R4, #+12]
   \   00000078   ........           LDR      R5,??DataTable69  ;; `?<Constant "<feature var=\\'urn:xmp...">`
   \   0000007C   D20F85E2           ADD      R0,R5,#+840
   \   00000080   ........           _BLF     XML_Get_Attr_Value,??XML_Get_Attr_Value??rA
   1112            from = XML_Get_Attr_Value("from",nodeEx->attr);
   \   00000084   0C1094E5           LDR      R1,[R4, #+12]
   \   00000088   0060A0E1           MOV      R6,R0
   \   0000008C   C80F85E2           ADD      R0,R5,#+800
   \   00000090   ........           _BLF     XML_Get_Attr_Value,??XML_Get_Attr_Value??rA
   1113            id = XML_Get_Attr_Value("id",nodeEx->attr);
   \   00000094   0C1094E5           LDR      R1,[R4, #+12]
   \   00000098   00B0A0E1           MOV      R11,R0
   \   0000009C   DE0F8FE2           ADR      R0,??Process_Iq_Request_2  ;; "id"
   \   000000A0   ........           _BLF     XML_Get_Attr_Value,??XML_Get_Attr_Value??rA
   \   000000A4   0070A0E1           MOV      R7,R0
   1114          
   1115          // Проверяем наличие обязательных атрибутов
   1116          if(!iqtype) return;
   \   000000A8   000056E3           CMP      R6,#+0
   \   000000AC   B002000A           BEQ      ??Process_Iq_Request_3
   \   000000B0   D48FA0E3           MOV      R8,#+848
   \   000000B4   D69FA0E3           MOV      R9,#+856
   \   000000B8   0610A0E1           MOV      R1,R6
   \   000000BC   0C008DE2           ADD      R0,SP,#+12
   1117          
   1118          if(!strcmp(gget,iqtype)) // Iq type = get
   \   000000C0   190000EF           SWI      +25
   \   000000C4   000050E3           CMP      R0,#+0
   \   000000C8   9A00001A           BNE      ??Process_Iq_Request_4
   1119          {
   1120            XMLNode* query;
   1121            char* q_type;
   1122            if(query = XML_Get_Child_Node_By_Name(nodeEx, "query"))
   \   000000CC   051089E0           ADD      R1,R9,R5
   \   000000D0   0400A0E1           MOV      R0,R4
   \   000000D4   ........           _BLF     XML_Get_Child_Node_By_Name,??XML_Get_Child_Node_By_Name??rA
   \   000000D8   000050E3           CMP      R0,#+0
   \   000000DC   6F00000A           BEQ      ??Process_Iq_Request_5
   1123            if(q_type = XML_Get_Attr_Value("xmlns", query->attr))
   \   000000E0   0C1090E5           LDR      R1,[R0, #+12]
   \   000000E4   050088E0           ADD      R0,R8,R5
   \   000000E8   ........           _BLF     XML_Get_Attr_Value,??XML_Get_Attr_Value??rA
   \   000000EC   00A0B0E1           MOVS     R10,R0
   \   000000F0   6A00000A           BEQ      ??Process_Iq_Request_5
   1124            {
   1125            // Тут мы знаем XMLNS поступившего запроса
   1126            if(!strcmp(q_type,iq_version))
   \   000000F4   88108DE2           ADD      R1,SP,#+136
   \   000000F8   190000EF           SWI      +25
   \   000000FC   000050E3           CMP      R0,#+0
   \   00000100   1400001A           BNE      ??Process_Iq_Request_6
   1127            {
   1128              // jabber:iq:version
   1129              if(from)
   \   00000104   00005BE3           CMP      R11,#+0
   \   00000108   1200000A           BEQ      ??Process_Iq_Request_6
   1130              {
   1131                  // Создаем переменные, чтобы в них записать данные
   1132                  // и безопасно уничтожить в HELPER
   1133          
   1134                char* loc_id = NULL;
   \   0000010C   0040A0E3           MOV      R4,#+0
   1135                if(id)
   \   00000110   000057E3           CMP      R7,#+0
   \   00000114   0600000A           BEQ      ??Process_Iq_Request_7
   1136                  {
   1137                    loc_id=malloc(strlen(id)+1);
   \   00000118   0700A0E1           MOV      R0,R7
   \   0000011C   1B0000EF           SWI      +27
   \   00000120   010080E2           ADD      R0,R0,#+1
   \   00000124   140000EF           SWI      +20
   \   00000128   0040A0E1           MOV      R4,R0
   1138                    strcpy(loc_id,id);
   \   0000012C   0710A0E1           MOV      R1,R7
   \   00000130   1A0000EF           SWI      +26
   1139                  }
   1140                  char* loc_from=malloc(strlen(from)+1);
   \                     ??Process_Iq_Request_7:
   \   00000134   0B00A0E1           MOV      R0,R11
   \   00000138   1B0000EF           SWI      +27
   \   0000013C   010080E2           ADD      R0,R0,#+1
   \   00000140   140000EF           SWI      +20
   \   00000144   0050A0E1           MOV      R5,R0
   1141                  strcpy(loc_from,from);
   \   00000148   0B10A0E1           MOV      R1,R11
   \   0000014C   1A0000EF           SWI      +26
   1142                  SUBPROC((void*)Report_VersionInfo,loc_id, loc_from);
   \   00000150   3C0A9FE5           LDR      R0,??Process_Iq_Request_1+0x18  ;; Report_VersionInfo
   \   00000154   180000EA           B        ??Process_Iq_Request_8
   1143                  return;
   1144              }
   1145            } //end version
   1146          
   1147            if(!strcmp(q_type,IQ_TIME))
   \                     ??Process_Iq_Request_6:
   \   00000158   5C1F85E2           ADD      R1,R5,#+368
   \   0000015C   0A00A0E1           MOV      R0,R10
   \   00000160   190000EF           SWI      +25
   \   00000164   000050E3           CMP      R0,#+0
   \   00000168   1800001A           BNE      ??Process_Iq_Request_9
   1148            {
   1149              // jabber:iq:time
   1150              if(from)
   \   0000016C   00005BE3           CMP      R11,#+0
   \   00000170   1600000A           BEQ      ??Process_Iq_Request_9
   1151              {
   1152                  // Создаем переменные, чтобы в них записать данные
   1153                  // и безопасно уничтожить в HELPER
   1154          
   1155                char* loc_id = NULL;
   \   00000174   0040A0E3           MOV      R4,#+0
   1156                if(id)
   \   00000178   000057E3           CMP      R7,#+0
   \   0000017C   0600000A           BEQ      ??Process_Iq_Request_10
   1157                  {
   1158                    loc_id=malloc(strlen(id)+1);
   \   00000180   0700A0E1           MOV      R0,R7
   \   00000184   1B0000EF           SWI      +27
   \   00000188   010080E2           ADD      R0,R0,#+1
   \   0000018C   140000EF           SWI      +20
   \   00000190   0040A0E1           MOV      R4,R0
   1159                    strcpy(loc_id,id);
   \   00000194   0710A0E1           MOV      R1,R7
   \   00000198   1A0000EF           SWI      +26
   1160                  }
   1161                  char* loc_from=malloc(strlen(from)+1);
   \                     ??Process_Iq_Request_10:
   \   0000019C   0B00A0E1           MOV      R0,R11
   \   000001A0   1B0000EF           SWI      +27
   \   000001A4   010080E2           ADD      R0,R0,#+1
   \   000001A8   140000EF           SWI      +20
   \   000001AC   0050A0E1           MOV      R5,R0
   1162                  strcpy(loc_from,from);
   \   000001B0   0B10A0E1           MOV      R1,R11
   \   000001B4   1A0000EF           SWI      +26
   1163                  SUBPROC((void*)Report_TimeInfo,loc_id, loc_from);
   \   000001B8   D8099FE5           LDR      R0,??Process_Iq_Request_1+0x1C  ;; Report_TimeInfo
   \                     ??Process_Iq_Request_8:
   \   000001BC   0520A0E1           MOV      R2,R5
   \   000001C0   0410A0E1           MOV      R1,R4
   \   000001C4   710100EF           SWI      +369
   \                     ??Process_Iq_Request_11:
   \   000001C8   9CD08DE2           ADD      SP,SP,#+156
   \   000001CC   F08FBDE8           POP      {R4-R11,PC}
   1164                  return;
   1165              }
   1166            }
   1167          
   1168            if(!strcmp(q_type,IQ_IDLE))    // jabber:iq:last
   \                     ??Process_Iq_Request_9:
   \   000001D0   581F85E2           ADD      R1,R5,#+352
   \   000001D4   0A00A0E1           MOV      R0,R10
   \   000001D8   190000EF           SWI      +25
   \   000001DC   000050E3           CMP      R0,#+0
   \   000001E0   1400001A           BNE      ??Process_Iq_Request_12
   1169            {
   1170              if(from)
   \   000001E4   00005BE3           CMP      R11,#+0
   \   000001E8   1200000A           BEQ      ??Process_Iq_Request_12
   1171              {
   1172                char* loc_id = NULL;
   \   000001EC   0040A0E3           MOV      R4,#+0
   1173                if(id)
   \   000001F0   000057E3           CMP      R7,#+0
   \   000001F4   0600000A           BEQ      ??Process_Iq_Request_13
   1174                  {
   1175                    loc_id=malloc(strlen(id)+1);
   \   000001F8   0700A0E1           MOV      R0,R7
   \   000001FC   1B0000EF           SWI      +27
   \   00000200   010080E2           ADD      R0,R0,#+1
   \   00000204   140000EF           SWI      +20
   \   00000208   0040A0E1           MOV      R4,R0
   1176                    strcpy(loc_id,id);
   \   0000020C   0710A0E1           MOV      R1,R7
   \   00000210   1A0000EF           SWI      +26
   1177                  }
   1178                  char* loc_from=malloc(strlen(from)+1);
   \                     ??Process_Iq_Request_13:
   \   00000214   0B00A0E1           MOV      R0,R11
   \   00000218   1B0000EF           SWI      +27
   \   0000021C   010080E2           ADD      R0,R0,#+1
   \   00000220   140000EF           SWI      +20
   \   00000224   0050A0E1           MOV      R5,R0
   1179                  strcpy(loc_from,from);
   \   00000228   0B10A0E1           MOV      R1,R11
   \   0000022C   1A0000EF           SWI      +26
   1180                  SUBPROC((void*)Report_IDLEInfo, loc_id, loc_from);
   \   00000230   64099FE5           LDR      R0,??Process_Iq_Request_1+0x20  ;; Report_IDLEInfo
   \   00000234   E0FFFFEA           B        ??Process_Iq_Request_8
   1181                  return;
   1182              }
   1183            } //end jabber:iq:last
   1184          
   1185            //entity caps
   1186            if(!strcmp(q_type,disco_info))
   \                     ??Process_Iq_Request_12:
   \   00000238   60108DE2           ADD      R1,SP,#+96
   \   0000023C   0A00A0E1           MOV      R0,R10
   \   00000240   190000EF           SWI      +25
   \   00000244   000050E3           CMP      R0,#+0
   \   00000248   1400001A           BNE      ??Process_Iq_Request_5
   1187            {
   1188              // http://jabber.org/protocol/disco#info
   1189              if(from)
   \   0000024C   00005BE3           CMP      R11,#+0
   \   00000250   1200000A           BEQ      ??Process_Iq_Request_5
   1190              {
   1191                  // Создаем переменные, чтобы в них записать данные
   1192                  // и безопасно уничтожить в HELPER
   1193          
   1194                char* loc_id = NULL;
   \   00000254   0040A0E3           MOV      R4,#+0
   1195                if(id)
   \   00000258   000057E3           CMP      R7,#+0
   \   0000025C   0600000A           BEQ      ??Process_Iq_Request_14
   1196                  {
   1197                    loc_id=malloc(strlen(id)+1);
   \   00000260   0700A0E1           MOV      R0,R7
   \   00000264   1B0000EF           SWI      +27
   \   00000268   010080E2           ADD      R0,R0,#+1
   \   0000026C   140000EF           SWI      +20
   \   00000270   0040A0E1           MOV      R4,R0
   1198                    strcpy(loc_id,id);
   \   00000274   0710A0E1           MOV      R1,R7
   \   00000278   1A0000EF           SWI      +26
   1199                  }
   1200                  char* loc_from=malloc(strlen(from)+1);
   \                     ??Process_Iq_Request_14:
   \   0000027C   0B00A0E1           MOV      R0,R11
   \   00000280   1B0000EF           SWI      +27
   \   00000284   010080E2           ADD      R0,R0,#+1
   \   00000288   140000EF           SWI      +20
   \   0000028C   0050A0E1           MOV      R5,R0
   1201                  strcpy(loc_from,from);
   \   00000290   0B10A0E1           MOV      R1,R11
   \   00000294   1A0000EF           SWI      +26
   1202                  SUBPROC((void*)Report_DiscoInfo,loc_id, loc_from);
   \   00000298   00099FE5           LDR      R0,??Process_Iq_Request_1+0x24  ;; Report_DiscoInfo
   \   0000029C   C6FFFFEA           B        ??Process_Iq_Request_8
   1203                  return;
   1204              }
   1205            }
   1206           } //end "query" 
   1207           
   1208             if(query = XML_Get_Child_Node_By_Name(nodeEx, "ping"))
   \                     ??Process_Iq_Request_5:
   \   000002A0   D81F85E2           ADD      R1,R5,#+864
   \   000002A4   0400A0E1           MOV      R0,R4
   \   000002A8   ........           _BLF     XML_Get_Child_Node_By_Name,??XML_Get_Child_Node_By_Name??rA
   \   000002AC   000050E3           CMP      R0,#+0
   \   000002B0   1D00000A           BEQ      ??Process_Iq_Request_15
   1209              if (q_type = XML_Get_Attr_Value("xmlns", query->attr))
   \   000002B4   0C1090E5           LDR      R1,[R0, #+12]
   \   000002B8   050088E0           ADD      R0,R8,R5
   \   000002BC   ........           _BLF     XML_Get_Attr_Value,??XML_Get_Attr_Value??rA
   \   000002C0   00A0B0E1           MOVS     R10,R0
   \   000002C4   1800000A           BEQ      ??Process_Iq_Request_15
   1210            if(!strcmp(q_type,JABBER_URN_PING))    // urn:xmpp:ping
   \   000002C8   651F85E2           ADD      R1,R5,#+404
   \   000002CC   190000EF           SWI      +25
   \   000002D0   000050E3           CMP      R0,#+0
   \   000002D4   1400001A           BNE      ??Process_Iq_Request_15
   1211            {
   1212              if(from)
   \   000002D8   00005BE3           CMP      R11,#+0
   \   000002DC   1200000A           BEQ      ??Process_Iq_Request_15
   1213              {
   1214                char* loc_id = NULL;
   \   000002E0   0040A0E3           MOV      R4,#+0
   1215                if(id)
   \   000002E4   000057E3           CMP      R7,#+0
   \   000002E8   0600000A           BEQ      ??Process_Iq_Request_16
   1216                  {
   1217                    loc_id=malloc(strlen(id)+1);
   \   000002EC   0700A0E1           MOV      R0,R7
   \   000002F0   1B0000EF           SWI      +27
   \   000002F4   010080E2           ADD      R0,R0,#+1
   \   000002F8   140000EF           SWI      +20
   \   000002FC   0040A0E1           MOV      R4,R0
   1218                    strcpy(loc_id,id);
   \   00000300   0710A0E1           MOV      R1,R7
   \   00000304   1A0000EF           SWI      +26
   1219                  }
   1220                  char* loc_from=malloc(strlen(from)+1);
   \                     ??Process_Iq_Request_16:
   \   00000308   0B00A0E1           MOV      R0,R11
   \   0000030C   1B0000EF           SWI      +27
   \   00000310   010080E2           ADD      R0,R0,#+1
   \   00000314   140000EF           SWI      +20
   \   00000318   0050A0E1           MOV      R5,R0
   1221                  strcpy(loc_from,from);
   \   0000031C   0B10A0E1           MOV      R1,R11
   \   00000320   1A0000EF           SWI      +26
   1222                  SUBPROC((void*)Report_PING, loc_id, loc_from);
   \   00000324   78089FE5           LDR      R0,??Process_Iq_Request_1+0x28  ;; Report_PING
   \   00000328   A3FFFFEA           B        ??Process_Iq_Request_8
   1223                  return;
   1224              }
   1225            } //end ping
   1226          
   1227            // Ни один обработчик не подошёл, отправляем ошибку.
   1228            Send_Feature_Not_Implemented(from, id);
   \                     ??Process_Iq_Request_15:
   \   0000032C   0710A0E1           MOV      R1,R7
   \   00000330   0B00A0E1           MOV      R0,R11
   \   00000334   ........           BL       Send_Feature_Not_Implemented
   \                     ??Process_Iq_Request_4:
   \   00000338   ........           LDR      R10,??DataTable70  ;; auth_id
   \   0000033C   0610A0E1           MOV      R1,R6
   \   00000340   20008DE2           ADD      R0,SP,#+32
   1229          }
   1230          
   1231          
   1232          // Обработка  Iq type = result
   1233          if(!strcmp(gres,iqtype))
   \   00000344   190000EF           SWI      +25
   \   00000348   000050E3           CMP      R0,#+0
   \   0000034C   6001001A           BNE      ??Process_Iq_Request_17
   1234          {
   1235            char bind_id[]="SieJC_bind_req";
   \   00000350   50189FE5           LDR      R1,??Process_Iq_Request_1+0x2C  ;; `?<Constant "SieJC_bind_req">`
   \   00000354   30008DE2           ADD      R0,SP,#+48
   \   00000358   0C5091E8           LDM      R1,{R2,R3,R12,LR}
   1236            char sess_id[]="SieJC_sess_req";
   \   0000035C   48189FE5           LDR      R1,??Process_Iq_Request_1+0x30  ;; `?<Constant "SieJC_sess_req">`
   \   00000360   0C5080E8           STM      R0,{R2,R3,R12,LR}
   \   00000364   0C5091E8           LDM      R1,{R2,R3,R12,LR}
   1237            char disco_id[]="SieJC_discoinfo";
   \   00000368   40189FE5           LDR      R1,??Process_Iq_Request_1+0x34  ;; `?<Constant "SieJC_discoinfo">_1`
   \   0000036C   40008DE2           ADD      R0,SP,#+64
   \   00000370   0C5080E8           STM      R0,{R2,R3,R12,LR}
   \   00000374   0C5091E8           LDM      R1,{R2,R3,R12,LR}
   \   00000378   50008DE2           ADD      R0,SP,#+80
   \   0000037C   0C5080E8           STM      R0,{R2,R3,R12,LR}
   1238          
   1239            if(!strcmp(id, bind_id))
   \   00000380   30108DE2           ADD      R1,SP,#+48
   \   00000384   0700A0E1           MOV      R0,R7
   \   00000388   190000EF           SWI      +25
   \   0000038C   000050E3           CMP      R0,#+0
   \   00000390   0400001A           BNE      ??Process_Iq_Request_18
   1240            {
   1241              Jabber_state = JS_SASL_SESS_INIT_ACK;
   \   00000394   ........           LDR      R0,??DataTable79  ;; Jabber_state
   \   00000398   0910A0E3           MOV      R1,#+9
   \   0000039C   0010C0E5           STRB     R1,[R0, #+0]
   1242              SASL_Init_Session();
   \   000003A0   ........           _BLF     SASL_Init_Session,??SASL_Init_Session??rA
   1243              return;
   \   000003A4   87FFFFEA           B        ??Process_Iq_Request_11
   1244            }
   1245          
   1246            if(!strcmp(id,auth_id) || !strcmp(id, sess_id))   // Авторизация либо конец инициализации сессии
   \                     ??Process_Iq_Request_18:
   \   000003A8   0A10A0E1           MOV      R1,R10
   \   000003AC   0700A0E1           MOV      R0,R7
   \   000003B0   190000EF           SWI      +25
   \   000003B4   000050E3           CMP      R0,#+0
   \   000003B8   0400000A           BEQ      ??Process_Iq_Request_19
   \   000003BC   40108DE2           ADD      R1,SP,#+64
   \   000003C0   0700A0E1           MOV      R0,R7
   \   000003C4   190000EF           SWI      +25
   \   000003C8   000050E3           CMP      R0,#+0
   \   000003CC   1300001A           BNE      ??Process_Iq_Request_20
   1247            {
   1248              Jabber_state = JS_AUTH_OK;
   \                     ??Process_Iq_Request_19:
   \   000003D0   ........           LDR      R0,??DataTable79  ;; Jabber_state
   \   000003D4   0A10A0E3           MOV      R1,#+10
   \   000003D8   0010C0E5           STRB     R1,[R0, #+0]
   1249              if(!cltop)
   \   000003DC   ........           LDR      R0,??DataTable73  ;; cltop
   \   000003E0   000090E5           LDR      R0,[R0, #+0]
   \   000003E4   000050E3           CMP      R0,#+0
   \   000003E8   0900001A           BNE      ??Process_Iq_Request_21
   1250              {
   1251                CList_AddContact(My_JID, "(Me)", SUB_BOTH,0,0);
   \   000003EC   01002DE9           PUSH     {R0}
   \   000003F0   0030A0E3           MOV      R3,#+0
   \   000003F4   0320A0E3           MOV      R2,#+3
   \   000003F8   ........           LDR      R0,??DataTable74  ;; My_JID
   \   000003FC   DA1F85E2           ADD      R1,R5,#+872
   \   00000400   ........           _BLF     CList_AddContact,??CList_AddContact??rA
   1252                SUBPROC((void*)Send_Roster_Query);
   \   00000404   A8079FE5           LDR      R0,??Process_Iq_Request_1+0x38  ;; Send_Roster_Query
   \   00000408   710100EF           SWI      +369
   \   0000040C   04D08DE2           ADD      SP,SP,#+4
   \   00000410   6CFFFFEA           B        ??Process_Iq_Request_11
   1253              }
   1254              else Send_Presence_MMIStub();
   \                     ??Process_Iq_Request_21:
   \   00000414   ........           LDR      R0,??DataTable75  ;; Send_Initial_Presence_Helper
   \   00000418   D40100EA           B        ??Process_Iq_Request_22
   \                     ??Process_Iq_Request_2:
   \   0000041C   69640000           DC8      "id",+0
   1255              return;
   1256            }
   1257          
   1258            if(!strcmp(id,rost_id))   // Запрос ростера
   \                     ??Process_Iq_Request_20:
   \   00000420   10108AE2           ADD      R1,R10,#+16
   \   00000424   0700A0E1           MOV      R0,R7
   \   00000428   190000EF           SWI      +25
   \   0000042C   000050E3           CMP      R0,#+0
   \   00000430   1700001A           BNE      ??Process_Iq_Request_23
   1259            {
   1260              XMLNode* query;
   1261              if(!(query = XML_Get_Child_Node_By_Name(nodeEx, "query")))return;
   \   00000434   051089E0           ADD      R1,R9,R5
   \   00000438   0400A0E1           MOV      R0,R4
   \   0000043C   ........           _BLF     XML_Get_Child_Node_By_Name,??XML_Get_Child_Node_By_Name??rA
   \   00000440   00008DE5           STR      R0,[SP, #+0]
   \   00000444   000050E3           CMP      R0,#+0
   \   00000448   C901000A           BEQ      ??Process_Iq_Request_3
   \   0000044C   040080E2           ADD      R0,R0,#+4
   \   00000450   081090E5           LDR      R1,[R0, #+8]
   \   00000454   050088E0           ADD      R0,R8,R5
   1262              char* q_type = XML_Get_Attr_Value("xmlns", query->attr);
   \   00000458   ........           _BLF     XML_Get_Attr_Value,??XML_Get_Attr_Value??rA
   1263              if(!q_type)return;
   \   0000045C   000050E3           CMP      R0,#+0
   \   00000460   C301000A           BEQ      ??Process_Iq_Request_3
   1264              if(!strcmp(q_type,IQ_ROSTER))
   \   00000464   691F85E2           ADD      R1,R5,#+420
   \   00000468   190000EF           SWI      +25
   \   0000046C   000050E3           CMP      R0,#+0
   \   00000470   0700001A           BNE      ??Process_Iq_Request_23
   1265              {
   1266                // jabber:iq:roster
   1267                FillRoster(query->subnode);
   \   00000474   00009DE5           LDR      R0,[SP, #+0]
   \   00000478   040090E5           LDR      R0,[R0, #+4]
   \   0000047C   ........           BL       FillRoster
   1268                  // Через секунду запросим презенсы
   1269                extern GBSTMR TMR_Send_Presence;
   1270                GBS_StartTimerProc(&TMR_Send_Presence, TMR_SECOND*1, Send_Presence_MMIStub);
   \   00000480   30279FE5           LDR      R2,??Process_Iq_Request_1+0x3C  ;; Send_Presence_MMIStub
   \   00000484   30079FE5           LDR      R0,??Process_Iq_Request_1+0x40  ;; TMR_Send_Presence
   \   00000488   D810A0E3           MOV      R1,#+216
   \   0000048C   4D0000EF           SWI      +77
   1271                return;
   \   00000490   4CFFFFEA           B        ??Process_Iq_Request_11
   1272              }
   1273            }
   1274          
   1275            if(!strcmp(id,vreq_id))   // Запрос версии (ответ)
   \                     ??Process_Iq_Request_23:
   \   00000494   20108AE2           ADD      R1,R10,#+32
   \   00000498   0700A0E1           MOV      R0,R7
   \   0000049C   190000EF           SWI      +25
   \   000004A0   000050E3           CMP      R0,#+0
   \   000004A4   3600001A           BNE      ??Process_Iq_Request_24
   1276            {
   1277              XMLNode* query;
   1278              if(!(query = XML_Get_Child_Node_By_Name(nodeEx, "query")))return;
   \   000004A8   051089E0           ADD      R1,R9,R5
   \   000004AC   0400A0E1           MOV      R0,R4
   \   000004B0   ........           _BLF     XML_Get_Child_Node_By_Name,??XML_Get_Child_Node_By_Name??rA
   \   000004B4   00008DE5           STR      R0,[SP, #+0]
   \   000004B8   000050E3           CMP      R0,#+0
   \   000004BC   AC01000A           BEQ      ??Process_Iq_Request_3
   1279              char* q_type = XML_Get_Attr_Value("xmlns", query->attr);
   \   000004C0   0C1090E5           LDR      R1,[R0, #+12]
   \   000004C4   050088E0           ADD      R0,R8,R5
   \   000004C8   ........           _BLF     XML_Get_Attr_Value,??XML_Get_Attr_Value??rA
   1280              if(!q_type)return;
   \   000004CC   000050E3           CMP      R0,#+0
   \   000004D0   A701000A           BEQ      ??Process_Iq_Request_3
   1281              if(!strcmp(q_type,IQ_VERSION))
   \   000004D4   601F85E2           ADD      R1,R5,#+384
   \   000004D8   190000EF           SWI      +25
   \   000004DC   000050E3           CMP      R0,#+0
   \   000004E0   2700001A           BNE      ??Process_Iq_Request_24
   1282              {
   1283                char no_os[]="(no data)";
   \   000004E4   D4169FE5           LDR      R1,??Process_Iq_Request_1+0x44  ;; `?<Constant "(no data)">`
   \   000004E8   14008DE2           ADD      R0,SP,#+20
   \   000004EC   1C0091E8           LDM      R1,{R2-R4}
   1284                char* vers_os_str;
   1285                XMLNode *cl_name=XML_Get_Child_Node_By_Name(query, "name");
   \   000004F0   CE1F85E2           ADD      R1,R5,#+824
   \   000004F4   1C0080E8           STM      R0,{R2-R4}
   \   000004F8   00009DE5           LDR      R0,[SP, #+0]
   \   000004FC   ........           _BLF     XML_Get_Child_Node_By_Name,??XML_Get_Child_Node_By_Name??rA
   \   00000500   0040A0E1           MOV      R4,R0
   1286                XMLNode *cl_version=XML_Get_Child_Node_By_Name(query, "version");
   \   00000504   00009DE5           LDR      R0,[SP, #+0]
   \   00000508   DC1F85E2           ADD      R1,R5,#+880
   \   0000050C   ........           _BLF     XML_Get_Child_Node_By_Name,??XML_Get_Child_Node_By_Name??rA
   \   00000510   0060A0E1           MOV      R6,R0
   1287                XMLNode *cl_os=XML_Get_Child_Node_By_Name(query, "os");
   \   00000514   00009DE5           LDR      R0,[SP, #+0]
   \   00000518   EA1F8FE2           ADR      R1,??Process_Iq_Request_25  ;; "os"
   \   0000051C   ........           _BLF     XML_Get_Child_Node_By_Name,??XML_Get_Child_Node_By_Name??rA
   1288                if(cl_os)
   \   00000520   000050E3           CMP      R0,#+0
   1289                {
   1290                  vers_os_str = cl_os->value;
   \   00000524   10709015           LDRNE    R7,[R0, #+16]
   1291                }
   1292                else
   1293                {
   1294                  vers_os_str=no_os;
   1295                }
   1296                //Формируем сообщение
   1297                char *reply=malloc(512);
   \   00000528   800FA0E3           MOV      R0,#+512
   \   0000052C   14708D02           ADDEQ    R7,SP,#+20
   \   00000530   140000EF           SWI      +20
   \   00000534   0080A0E1           MOV      R8,R0
   1298                snprintf(reply, 512,LG_VERINFO,cl_name->value, cl_version->value, vers_os_str);
   \   00000538   80002DE9           PUSH     {R7}
   \   0000053C   100096E5           LDR      R0,[R6, #+16]
   \   00000540   DE2F85E2           ADD      R2,R5,#+888
   \   00000544   01002DE9           PUSH     {R0}
   \   00000548   103094E5           LDR      R3,[R4, #+16]
   \   0000054C   801FA0E3           MOV      R1,#+512
   \   00000550   0800A0E1           MOV      R0,R8
   \                     ??Process_Iq_Request_26:
   \   00000554   1B0100EF           SWI      +283
   1299                CList_AddMessage(from, MSG_SYSTEM, reply);
   \   00000558   0820A0E1           MOV      R2,R8
   \   0000055C   0410A0E3           MOV      R1,#+4
   \   00000560   0B00A0E1           MOV      R0,R11
   \   00000564   ........           _BLF     CList_AddMessage,??CList_AddMessage??rA
   1300                ShowMSG(0,(int)reply);
   \   00000568   0810A0E1           MOV      R1,R8
   \   0000056C   0000A0E3           MOV      R0,#+0
   \   00000570   480100EF           SWI      +328
   1301                mfree(reply);
   \   00000574   0800A0E1           MOV      R0,R8
   \   00000578   150000EF           SWI      +21
   1302                return;
   \   0000057C   08D08DE2           ADD      SP,SP,#+8
   \   00000580   10FFFFEA           B        ??Process_Iq_Request_11
   1303              }
   1304            }
   1305          
   1306              if(!strcmp(id,lastact_id))   // Запрос IDLE (ответ)
   \                     ??Process_Iq_Request_24:
   \   00000584   60108AE2           ADD      R1,R10,#+96
   \   00000588   0700A0E1           MOV      R0,R7
   \   0000058C   190000EF           SWI      +25
   \   00000590   000050E3           CMP      R0,#+0
   \   00000594   4400001A           BNE      ??Process_Iq_Request_27
   1307            {
   1308              XMLNode* query;
   1309              if(!(query = XML_Get_Child_Node_By_Name(nodeEx, "query")))return;
   \   00000598   051089E0           ADD      R1,R9,R5
   \   0000059C   0400A0E1           MOV      R0,R4
   \   000005A0   ........           _BLF     XML_Get_Child_Node_By_Name,??XML_Get_Child_Node_By_Name??rA
   \   000005A4   00008DE5           STR      R0,[SP, #+0]
   \   000005A8   000050E3           CMP      R0,#+0
   \   000005AC   7001000A           BEQ      ??Process_Iq_Request_3
   1310              char* q_type = XML_Get_Attr_Value("xmlns", query->attr);
   \   000005B0   0C1090E5           LDR      R1,[R0, #+12]
   \   000005B4   050088E0           ADD      R0,R8,R5
   \   000005B8   ........           _BLF     XML_Get_Attr_Value,??XML_Get_Attr_Value??rA
   1311              if(!q_type)return;
   \   000005BC   000050E3           CMP      R0,#+0
   \   000005C0   6B01000A           BEQ      ??Process_Iq_Request_3
   1312              if(!strcmp(q_type,IQ_IDLE))
   \   000005C4   581F85E2           ADD      R1,R5,#+352
   \   000005C8   190000EF           SWI      +25
   \   000005CC   000050E3           CMP      R0,#+0
   \   000005D0   3500001A           BNE      ??Process_Iq_Request_27
   1313              {
   1314                char *cl_sec=XML_Get_Attr_Value("seconds", query->attr);
   \   000005D4   00009DE5           LDR      R0,[SP, #+0]
   \   000005D8   0C1090E5           LDR      R1,[R0, #+12]
   \   000005DC   E80F85E2           ADD      R0,R5,#+928
   \   000005E0   ........           _BLF     XML_Get_Attr_Value,??XML_Get_Attr_Value??rA
   \   000005E4   0060A0E1           MOV      R6,R0
   1315                //Формируем сообщение
   1316                char *reply=malloc(512);
   \   000005E8   800FA0E3           MOV      R0,#+512
   \   000005EC   140000EF           SWI      +20
   1317                unsigned int nsec, nmin, nhr, nd;
   1318                extern const char percent_d[];
   1319                sscanf(cl_sec, percent_d, &nsec);
   \   000005F0   ........           LDR      R1,??DataTable85  ;; percent_d
   \   000005F4   0040A0E1           MOV      R4,R0
   \   000005F8   04208DE2           ADD      R2,SP,#+4
   \   000005FC   0600A0E1           MOV      R0,R6
   \   00000600   F50100EF           SWI      +501
   1320                nmin = udiv(60, nsec);
   \   00000604   04109DE5           LDR      R1,[SP, #+4]
   \   00000608   3C00A0E3           MOV      R0,#+60
   \   0000060C   BC0000EF           SWI      +188
   1321                nsec -= nmin*60;
   \   00000610   04109DE5           LDR      R1,[SP, #+4]
   \   00000614   0060A0E1           MOV      R6,R0
   \   00000618   3C20A0E3           MOV      R2,#+60
   \   0000061C   920603E0           MUL      R3,R2,R6
   1322                nhr = udiv(60, nmin);
   \   00000620   3C00A0E3           MOV      R0,#+60
   \   00000624   031041E0           SUB      R1,R1,R3
   \   00000628   04108DE5           STR      R1,[SP, #+4]
   \   0000062C   0610A0E1           MOV      R1,R6
   \   00000630   BC0000EF           SWI      +188
   \   00000634   0070A0E1           MOV      R7,R0
   1323                nmin -= nhr*60;
   1324                nd = udiv(24, nhr);
   \   00000638   0710A0E1           MOV      R1,R7
   \   0000063C   1800A0E3           MOV      R0,#+24
   \   00000640   BC0000EF           SWI      +188
   \   00000644   0030A0E1           MOV      R3,R0
   1325                nhr -= nd*24;
   1326                snprintf(reply, 512,LG_LASTACTIVMSG, nd, nhr, nmin, nsec);
   \   00000648   04009DE5           LDR      R0,[SP, #+4]
   \   0000064C   EA2F85E2           ADD      R2,R5,#+936
   \   00000650   01002DE9           PUSH     {R0}
   \   00000654   3C00A0E3           MOV      R0,#+60
   \   00000658   900701E0           MUL      R1,R0,R7
   \   0000065C   010046E0           SUB      R0,R6,R1
   \   00000660   01002DE9           PUSH     {R0}
   \   00000664   1800A0E3           MOV      R0,#+24
   \   00000668   900301E0           MUL      R1,R0,R3
   \   0000066C   010047E0           SUB      R0,R7,R1
   \   00000670   01002DE9           PUSH     {R0}
   \   00000674   801FA0E3           MOV      R1,#+512
   \   00000678   0400A0E1           MOV      R0,R4
   \   0000067C   1B0100EF           SWI      +283
   1327                CList_AddMessage(from, MSG_SYSTEM, reply);
   \   00000680   0420A0E1           MOV      R2,R4
   \   00000684   0410A0E3           MOV      R1,#+4
   \   00000688   0B00A0E1           MOV      R0,R11
   \   0000068C   ........           _BLF     CList_AddMessage,??CList_AddMessage??rA
   1328                ShowMSG(0,(int)reply);
   \   00000690   0410A0E1           MOV      R1,R4
   \   00000694   0000A0E3           MOV      R0,#+0
   \   00000698   480100EF           SWI      +328
   1329                mfree(reply);
   \   0000069C   0400A0E1           MOV      R0,R4
   \   000006A0   150000EF           SWI      +21
   1330                return;
   \   000006A4   0CD08DE2           ADD      SP,SP,#+12
   \   000006A8   C6FEFFEA           B        ??Process_Iq_Request_11
   1331              }
   1332            }//end lastactiv
   1333          
   1334              if(!strcmp(id,treq_id))   // Запрос TIME (ответ)
   \                     ??Process_Iq_Request_27:
   \   000006AC   40108AE2           ADD      R1,R10,#+64
   \   000006B0   0700A0E1           MOV      R0,R7
   \   000006B4   190000EF           SWI      +25
   \   000006B8   000050E3           CMP      R0,#+0
   \   000006BC   2C00001A           BNE      ??Process_Iq_Request_28
   1335            {
   1336              XMLNode* query;
   1337              if(!(query = XML_Get_Child_Node_By_Name(nodeEx, "query")))return;
   \   000006C0   051089E0           ADD      R1,R9,R5
   \   000006C4   0400A0E1           MOV      R0,R4
   \   000006C8   ........           _BLF     XML_Get_Child_Node_By_Name,??XML_Get_Child_Node_By_Name??rA
   \   000006CC   00008DE5           STR      R0,[SP, #+0]
   \   000006D0   000050E3           CMP      R0,#+0
   \   000006D4   2601000A           BEQ      ??Process_Iq_Request_3
   1338              char* q_type = XML_Get_Attr_Value("xmlns", query->attr);
   \   000006D8   0C1090E5           LDR      R1,[R0, #+12]
   \   000006DC   050088E0           ADD      R0,R8,R5
   \   000006E0   ........           _BLF     XML_Get_Attr_Value,??XML_Get_Attr_Value??rA
   1339              if(!q_type)return;
   \   000006E4   000050E3           CMP      R0,#+0
   \   000006E8   2101000A           BEQ      ??Process_Iq_Request_3
   1340              if(!strcmp(q_type,IQ_TIME))
   \   000006EC   5C1F85E2           ADD      R1,R5,#+368
   \   000006F0   190000EF           SWI      +25
   \   000006F4   000050E3           CMP      R0,#+0
   \   000006F8   1D00001A           BNE      ??Process_Iq_Request_28
   1341              {
   1342                char no_display[]="(no data)";
   \   000006FC   C0149FE5           LDR      R1,??Process_Iq_Request_1+0x48  ;; `?<Constant "(no data)">_1`
   \   00000700   14008DE2           ADD      R0,SP,#+20
   \   00000704   1C0091E8           LDM      R1,{R2-R4}
   1343                char* display_str;
   1344                char* tz_str;
   1345                XMLNode *cl_utc=XML_Get_Child_Node_By_Name(query, "utc");
   \   00000708   6F1F8FE2           ADR      R1,??Process_Iq_Request_25+0x4  ;; "utc"
   \   0000070C   1C0080E8           STM      R0,{R2-R4}
   \   00000710   00009DE5           LDR      R0,[SP, #+0]
   \   00000714   ........           _BLF     XML_Get_Child_Node_By_Name,??XML_Get_Child_Node_By_Name??rA
   \   00000718   0040A0E1           MOV      R4,R0
   1346                XMLNode *cl_tz=XML_Get_Child_Node_By_Name(query, "tz");
   \   0000071C   00009DE5           LDR      R0,[SP, #+0]
   \   00000720   6A1F8FE2           ADR      R1,??Process_Iq_Request_25+0x8  ;; "tz"
   \   00000724   ........           _BLF     XML_Get_Child_Node_By_Name,??XML_Get_Child_Node_By_Name??rA
   \   00000728   0060A0E1           MOV      R6,R0
   1347                XMLNode *cl_display=XML_Get_Child_Node_By_Name(query, "display");
   \   0000072C   00009DE5           LDR      R0,[SP, #+0]
   \   00000730   F31F85E2           ADD      R1,R5,#+972
   \   00000734   ........           _BLF     XML_Get_Child_Node_By_Name,??XML_Get_Child_Node_By_Name??rA
   1348                if(cl_display)
   \   00000738   000050E3           CMP      R0,#+0
   1349                {
   1350                  display_str = cl_display->value;
   \   0000073C   10709015           LDRNE    R7,[R0, #+16]
   1351                }
   1352                else
   1353                {
   1354                  display_str=no_display;
   1355                }
   1356                if(cl_tz)
   1357                {
   1358                  tz_str = cl_tz->value;
   1359                }
   1360                else
   1361                {
   1362                  tz_str=no_display;
   1363                }
   1364                //Формируем сообщение
   1365                char *reply=malloc(512);
   \   00000740   800FA0E3           MOV      R0,#+512
   \   00000744   14708D02           ADDEQ    R7,SP,#+20
   \   00000748   000056E3           CMP      R6,#+0
   \   0000074C   10609615           LDRNE    R6,[R6, #+16]
   \   00000750   14608D02           ADDEQ    R6,SP,#+20
   \   00000754   140000EF           SWI      +20
   \   00000758   0080A0E1           MOV      R8,R0
   1366                snprintf(reply, 512,LG_TIMEINFO,cl_utc->value, tz_str, display_str);
   \   0000075C   80002DE9           PUSH     {R7}
   \   00000760   40002DE9           PUSH     {R6}
   \   00000764   103094E5           LDR      R3,[R4, #+16]
   \   00000768   F52F85E2           ADD      R2,R5,#+980
   \   0000076C   801FA0E3           MOV      R1,#+512
   \   00000770   77FFFFEA           B        ??Process_Iq_Request_26
   1367                CList_AddMessage(from, MSG_SYSTEM, reply);
   1368                ShowMSG(0,(int)reply);
   1369                mfree(reply);
   1370                return;
   1371              }
   1372            }
   1373            if(!strcmp(id,vcreq_id))   // Запрос vcard (ответ)
   \                     ??Process_Iq_Request_28:
   \   00000774   50108AE2           ADD      R1,R10,#+80
   \   00000778   0700A0E1           MOV      R0,R7
   \   0000077C   190000EF           SWI      +25
   \   00000780   000050E3           CMP      R0,#+0
   \   00000784   1100001A           BNE      ??Process_Iq_Request_29
   1374            {
   1375              XMLNode* vcard;
   1376              if(!(vcard = XML_Get_Child_Node_By_Name(nodeEx, "vCard")))return;
   \   00000788   FE1F85E2           ADD      R1,R5,#+1016
   \   0000078C   0400A0E1           MOV      R0,R4
   \   00000790   ........           _BLF     XML_Get_Child_Node_By_Name,??XML_Get_Child_Node_By_Name??rA
   \   00000794   00008DE5           STR      R0,[SP, #+0]
   \   00000798   000050E3           CMP      R0,#+0
   \   0000079C   F400000A           BEQ      ??Process_Iq_Request_3
   1377              char* v_type = XML_Get_Attr_Value("xmlns", vcard->attr);
   \   000007A0   0C1090E5           LDR      R1,[R0, #+12]
   \   000007A4   050088E0           ADD      R0,R8,R5
   \   000007A8   ........           _BLF     XML_Get_Attr_Value,??XML_Get_Attr_Value??rA
   1378              if(!v_type)return;
   \   000007AC   000050E3           CMP      R0,#+0
   \   000007B0   EF00000A           BEQ      ??Process_Iq_Request_3
   1379              if(!strcmp(v_type,"vcard-temp"))Process_vCard(from, vcard);
   \   000007B4   401E85E2           ADD      R1,R5,#+1024
   \   000007B8   190000EF           SWI      +25
   \   000007BC   000050E3           CMP      R0,#+0
   \   000007C0   0200001A           BNE      ??Process_Iq_Request_29
   \   000007C4   00109DE5           LDR      R1,[SP, #+0]
   \   000007C8   0B00A0E1           MOV      R0,R11
   \   000007CC   ........           _BLF     Process_vCard,??Process_vCard??rA
   1380            }
   1381          /////////////////
   1382            if(!strcmp(id,disco_id))   // Запрос диско (ответ)
   \                     ??Process_Iq_Request_29:
   \   000007D0   50108DE2           ADD      R1,SP,#+80
   \   000007D4   0700A0E1           MOV      R0,R7
   \   000007D8   190000EF           SWI      +25
   \   000007DC   000050E3           CMP      R0,#+0
   \   000007E0   1100001A           BNE      ??Process_Iq_Request_30
   1383            {
   1384              XMLNode* query;
   1385              if(!(query = XML_Get_Child_Node_By_Name(nodeEx, "query")))return;
   \   000007E4   051089E0           ADD      R1,R9,R5
   \   000007E8   0400A0E1           MOV      R0,R4
   \   000007EC   ........           _BLF     XML_Get_Child_Node_By_Name,??XML_Get_Child_Node_By_Name??rA
   \   000007F0   00008DE5           STR      R0,[SP, #+0]
   \   000007F4   000050E3           CMP      R0,#+0
   \   000007F8   DD00000A           BEQ      ??Process_Iq_Request_3
   1386              char* q_type = XML_Get_Attr_Value("xmlns", query->attr);
   \   000007FC   0C1090E5           LDR      R1,[R0, #+12]
   \   00000800   050088E0           ADD      R0,R8,R5
   \   00000804   ........           _BLF     XML_Get_Attr_Value,??XML_Get_Attr_Value??rA
   1387              if(!q_type)return;
   \   00000808   000050E3           CMP      R0,#+0
   \   0000080C   D800000A           BEQ      ??Process_Iq_Request_3
   1388              if(!strcmp(q_type,DISCO_INFO))
   \   00000810   461F85E2           ADD      R1,R5,#+280
   \   00000814   190000EF           SWI      +25
   \   00000818   000050E3           CMP      R0,#+0
   \   0000081C   0200001A           BNE      ??Process_Iq_Request_30
   1389              {
   1390                Disp_From_Disco(from, query);
   \   00000820   00109DE5           LDR      R1,[SP, #+0]
   \   00000824   0B00A0E1           MOV      R0,R11
   \   00000828   ........           _BLF     Disp_From_Disco,??Disp_From_Disco??rA
   1391              }
   1392            }
   1393          /////////////////
   1394            if(!strcmp(id,priv_id))
   \                     ??Process_Iq_Request_30:
   \   0000082C   30108AE2           ADD      R1,R10,#+48
   \   00000830   0700A0E1           MOV      R0,R7
   \   00000834   190000EF           SWI      +25
   \   00000838   000050E3           CMP      R0,#+0
   \   0000083C   2400001A           BNE      ??Process_Iq_Request_17
   1395            {
   1396              XMLNode* query;
   1397              if(!(query = XML_Get_Child_Node_By_Name(nodeEx, "query")))return;
   \   00000840   051089E0           ADD      R1,R9,R5
   \   00000844   0400A0E1           MOV      R0,R4
   \   00000848   ........           _BLF     XML_Get_Child_Node_By_Name,??XML_Get_Child_Node_By_Name??rA
   \   0000084C   00B0B0E1           MOVS     R11,R0
   \   00000850   C700000A           BEQ      ??Process_Iq_Request_3
   1398              char* q_type = XML_Get_Attr_Value("xmlns", query->attr);
   \   00000854   0C109BE5           LDR      R1,[R11, #+12]
   \   00000858   050088E0           ADD      R0,R8,R5
   \   0000085C   ........           _BLF     XML_Get_Attr_Value,??XML_Get_Attr_Value??rA
   1399              if(!q_type)return;
   \   00000860   000050E3           CMP      R0,#+0
   \   00000864   C200000A           BEQ      ??Process_Iq_Request_3
   1400              if(!strcmp(q_type,IQ_PRIVATE))
   \   00000868   D81088E2           ADD      R1,R8,#+216
   \   0000086C   051081E0           ADD      R1,R1,R5
   \   00000870   190000EF           SWI      +25
   \   00000874   000050E3           CMP      R0,#+0
   \   00000878   1500001A           BNE      ??Process_Iq_Request_17
   1401              {
   1402                XMLNode *bm = XML_Get_Child_Node_By_Name(query, "storage");
   \   0000087C   BC0088E2           ADD      R0,R8,#+188
   \   00000880   051080E0           ADD      R1,R0,R5
   \   00000884   0B00A0E1           MOV      R0,R11
   \   00000888   ........           _BLF     XML_Get_Child_Node_By_Name,??XML_Get_Child_Node_By_Name??rA
   \   0000088C   0040B0E1           MOVS     R4,R0
   1403                if(!bm)return;
   \   00000890   B700000A           BEQ      ??Process_Iq_Request_3
   1404                char *xmlns = XML_Get_Attr_Value("xmlns", bm->attr);
   \   00000894   0C1094E5           LDR      R1,[R4, #+12]
   \   00000898   050088E0           ADD      R0,R8,R5
   \   0000089C   ........           _BLF     XML_Get_Attr_Value,??XML_Get_Attr_Value??rA
   1405                if(!xmlns)return;
   \   000008A0   000050E3           CMP      R0,#+0
   \   000008A4   B200000A           BEQ      ??Process_Iq_Request_3
   1406                if(!strcmp(xmlns, XMLNS_BOOKMARKS))Process_Bookmarks_Storage(bm);
   \   000008A8   C41088E2           ADD      R1,R8,#+196
   \   000008AC   051081E0           ADD      R1,R1,R5
   \   000008B0   190000EF           SWI      +25
   \   000008B4   000050E3           CMP      R0,#+0
   \   000008B8   AD00001A           BNE      ??Process_Iq_Request_3
   \   000008BC   0400A0E1           MOV      R0,R4
   \   000008C0   ........           _BLF     Process_Bookmarks_Storage,??Process_Bookmarks_Storage??rA
   \   000008C4   3FFEFFEA           B        ??Process_Iq_Request_11
   \                     ??Process_Iq_Request_25:
   \   000008C8   6F730000           DC8      "os",+0
   \   000008CC   75746300           DC8      "utc"
   \   000008D0   747A0000           DC8      "tz",+0
   1407                return;
   1408              }
   1409            }
   1410          }
   1411          // Обработка  Iq type = set
   1412          if(!strcmp(gset,iqtype))
   \                     ??Process_Iq_Request_17:
   \   000008D4   0610A0E1           MOV      R1,R6
   \   000008D8   10008DE2           ADD      R0,SP,#+16
   \   000008DC   190000EF           SWI      +25
   \   000008E0   000050E3           CMP      R0,#+0
   \   000008E4   1100001A           BNE      ??Process_Iq_Request_31
   1413          {
   1414              XMLNode* query;
   1415              if(!(query = XML_Get_Child_Node_By_Name(nodeEx, "query")))return;
   \   000008E8   051089E0           ADD      R1,R9,R5
   \   000008EC   0400A0E1           MOV      R0,R4
   \   000008F0   ........           _BLF     XML_Get_Child_Node_By_Name,??XML_Get_Child_Node_By_Name??rA
   \   000008F4   000050E3           CMP      R0,#+0
   \   000008F8   9D00000A           BEQ      ??Process_Iq_Request_3
   1416              char* q_type = XML_Get_Attr_Value("xmlns", query->attr);
   \   000008FC   049080E2           ADD      R9,R0,#+4
   \   00000900   081099E5           LDR      R1,[R9, #+8]
   \   00000904   050088E0           ADD      R0,R8,R5
   \   00000908   ........           _BLF     XML_Get_Attr_Value,??XML_Get_Attr_Value??rA
   1417              if(!q_type)return;
   \   0000090C   000050E3           CMP      R0,#+0
   \   00000910   9700000A           BEQ      ??Process_Iq_Request_3
   1418          
   1419              if(!strcmp(q_type,IQ_ROSTER))
   \   00000914   691F85E2           ADD      R1,R5,#+420
   \   00000918   190000EF           SWI      +25
   \   0000091C   000050E3           CMP      R0,#+0
   \   00000920   0200001A           BNE      ??Process_Iq_Request_31
   1420              {
   1421                // jabber:iq:roster
   1422                ChangeRoster(query->subnode);
   \   00000924   000099E5           LDR      R0,[R9, #+0]
   \   00000928   ........           BL       ChangeRoster
   1423                return;
   \   0000092C   25FEFFEA           B        ??Process_Iq_Request_11
   1424              }
   1425          }
   1426          
   1427          if(!strcmp(gerr,iqtype)) // Iq type = error
   \                     ??Process_Iq_Request_31:
   \   00000930   0610A0E1           MOV      R1,R6
   \   00000934   28008DE2           ADD      R0,SP,#+40
   \   00000938   190000EF           SWI      +25
   \   0000093C   000050E3           CMP      R0,#+0
   \   00000940   8B00001A           BNE      ??Process_Iq_Request_3
   1428          {
   1429          
   1430            // Анализируем ошибку
   1431            XMLNode* error = XML_Get_Child_Node_By_Name(nodeEx, "error");
   \   00000944   C41085E2           ADD      R1,R5,#+196
   \   00000948   0400A0E1           MOV      R0,R4
   \   0000094C   ........           _BLF     XML_Get_Child_Node_By_Name,??XML_Get_Child_Node_By_Name??rA
   1432            if(!error)return;
   \   00000950   000050E3           CMP      R0,#+0
   \   00000954   8600000A           BEQ      ??Process_Iq_Request_3
   1433            char* errcode = XML_Get_Attr_Value("code", error->attr);
   \   00000958   0C1090E5           LDR      R1,[R0, #+12]
   1434          //  Jabber_state = JS_ERROR;
   1435            if(errcode)
   \   0000095C   ........           LDR      R6,??DataTable77  ;; logmsg
   \   00000960   EC0088E2           ADD      R0,R8,#+236
   \   00000964   050080E0           ADD      R0,R0,R5
   \   00000968   ........           _BLF     XML_Get_Attr_Value,??XML_Get_Attr_Value??rA
   \   0000096C   0040B0E1           MOVS     R4,R0
   \   00000970   6E00000A           BEQ      ??Process_Iq_Request_32
   1436            {
   1437              int errcode_n=0;
   \   00000974   0010A0E3           MOV      R1,#+0
   \   00000978   00108DE5           STR      R1,[SP, #+0]
   1438              extern const char percent_d[];
   1439              sscanf(errcode,percent_d,&errcode_n);
   \   0000097C   ........           LDR      R1,??DataTable85  ;; percent_d
   \   00000980   0D20A0E1           MOV      R2,SP
   \   00000984   F50100EF           SWI      +501
   1440              {
   1441              switch (errcode_n)
   \   00000988   00009DE5           LDR      R0,[SP, #+0]
   \   0000098C   2E0040E2           SUB      R0,R0,#+46
   \   00000990   400F40E2           SUB      R0,R0,#+256
   \   00000994   CA0050E3           CMP      R0,#+202
   \   00000998   5D00008A           BHI      ??Process_Iq_Request_33
   \   0000099C   011F8FE2           ADR      R1,??Process_Iq_Request_0
   \   000009A0   0010D1E7           LDRB     R1,[R1, R0]
   \   000009A4   01F18FE0           ADD      PC,PC,R1, LSL #+2
   \                     ??Process_Iq_Request_0:
   \   000009A8   325A5A5A           DC8      +50,+90,+90,+90
   \   000009AC   5A5A5A5A           DC8      +90,+90,+90,+90
   \   000009B0   5A5A5A5A           DC8      +90,+90,+90,+90
   \   000009B4   5A5A5A5A           DC8      +90,+90,+90,+90
   \   000009B8   5A5A5A5A           DC8      +90,+90,+90,+90
   \   000009BC   5A5A5A5A           DC8      +90,+90,+90,+90
   \   000009C0   5A5A5A5A           DC8      +90,+90,+90,+90
   \   000009C4   5A5A5A5A           DC8      +90,+90,+90,+90
   \   000009C8   5A5A5A5A           DC8      +90,+90,+90,+90
   \   000009CC   5A5A5A5A           DC8      +90,+90,+90,+90
   \   000009D0   5A5A5A5A           DC8      +90,+90,+90,+90
   \   000009D4   5A5A5A5A           DC8      +90,+90,+90,+90
   \   000009D8   5A5A5A5A           DC8      +90,+90,+90,+90
   \   000009DC   5A5A5A5A           DC8      +90,+90,+90,+90
   \   000009E0   5A5A5A5A           DC8      +90,+90,+90,+90
   \   000009E4   5A5A5A5A           DC8      +90,+90,+90,+90
   \   000009E8   5A5A5A5A           DC8      +90,+90,+90,+90
   \   000009EC   5A5A5A5A           DC8      +90,+90,+90,+90
   \   000009F0   5A5A5A5A           DC8      +90,+90,+90,+90
   \   000009F4   5A5A5A5A           DC8      +90,+90,+90,+90
   \   000009F8   5A5A5A5A           DC8      +90,+90,+90,+90
   \   000009FC   5A5A5A5A           DC8      +90,+90,+90,+90
   \   00000A00   5A5A5A5A           DC8      +90,+90,+90,+90
   \   00000A04   5A5A5A5A           DC8      +90,+90,+90,+90
   \   00000A08   5A5A3739           DC8      +90,+90,+55,+57
   \   00000A0C   3C3E4042           DC8      +60,+62,+64,+66
   \   00000A10   47494B4D           DC8      +71,+73,+75,+77
   \   00000A14   5A5A5A5A           DC8      +90,+90,+90,+90
   \   00000A18   5A5A5A5A           DC8      +90,+90,+90,+90
   \   00000A1C   5A5A5A5A           DC8      +90,+90,+90,+90
   \   00000A20   5A5A5A5A           DC8      +90,+90,+90,+90
   \   00000A24   5A5A5A5A           DC8      +90,+90,+90,+90
   \   00000A28   5A5A5A5A           DC8      +90,+90,+90,+90
   \   00000A2C   5A5A5A5A           DC8      +90,+90,+90,+90
   \   00000A30   5A5A5A5A           DC8      +90,+90,+90,+90
   \   00000A34   5A5A5A5A           DC8      +90,+90,+90,+90
   \   00000A38   5A5A5A5A           DC8      +90,+90,+90,+90
   \   00000A3C   5A5A5A5A           DC8      +90,+90,+90,+90
   \   00000A40   5A5A5A5A           DC8      +90,+90,+90,+90
   \   00000A44   5A5A5A5A           DC8      +90,+90,+90,+90
   \   00000A48   5A5A5A5A           DC8      +90,+90,+90,+90
   \   00000A4C   5A5A5A5A           DC8      +90,+90,+90,+90
   \   00000A50   5A5A5A5A           DC8      +90,+90,+90,+90
   \   00000A54   5A5A5A5A           DC8      +90,+90,+90,+90
   \   00000A58   5A5A5A5A           DC8      +90,+90,+90,+90
   \   00000A5C   5A5A5A5A           DC8      +90,+90,+90,+90
   \   00000A60   5A5A5A5A           DC8      +90,+90,+90,+90
   \   00000A64   5A5A5A5A           DC8      +90,+90,+90,+90
   \   00000A68   5A5A5A5A           DC8      +90,+90,+90,+90
   \   00000A6C   5A5A4F51           DC8      +90,+90,+79,+81
   \   00000A70   53555800           DC8      +83,+85,+88,+0
   1442                {
   1443                case JABBER_ERROR_REDIRECT: sprintf(logmsg,LG_JABBER_ERROR_REDIRECT); break;
   \                     ??Process_Iq_Request_34:
   \   00000A74   F40088E2           ADD      R0,R8,#+244
   \                     ??Process_Iq_Request_35:
   \   00000A78   051080E0           ADD      R1,R0,R5
   \                     ??Process_Iq_Request_36:
   \   00000A7C   0600A0E1           MOV      R0,R6
   \   00000A80   160000EF           SWI      +22
   \   00000A84   260000EA           B        ??Process_Iq_Request_37
   1444                case JABBER_ERROR_BAD_REQUEST: sprintf(logmsg,LG_JABBER_ERROR_BAD_REQUEST); break;
   \                     ??Process_Iq_Request_38:
   \   00000A88   451E85E2           ADD      R1,R5,#+1104
   \   00000A8C   FAFFFFEA           B        ??Process_Iq_Request_36
   1445                case JABBER_ERROR_UNAUTHORIZED: sprintf(logmsg,LG_JABBER_ERROR_UNAUTHORIZED); break;
   \                     ??Process_Iq_Request_39:
   \   00000A90   430F88E2           ADD      R0,R8,#+268
   \                     ??Process_Iq_Request_40:
   \   00000A94   051080E0           ADD      R1,R0,R5
   \                     ??Process_Iq_Request_41:
   \   00000A98   F7FFFFEA           B        ??Process_Iq_Request_36
   1446                case JABBER_ERROR_PAYMENT_REQUIRED: sprintf(logmsg,LG_JABBER_ERROR_PAYMENT_REQUIRED); break;
   \                     ??Process_Iq_Request_42:
   \   00000A9C   470F88E2           ADD      R0,R8,#+284
   \   00000AA0   F4FFFFEA           B        ??Process_Iq_Request_35
   1447                case JABBER_ERROR_FORBIDDEN: sprintf(logmsg,LG_JABBER_ERROR_FORBIDDEN); break;
   \                     ??Process_Iq_Request_43:
   \   00000AA4   481E85E2           ADD      R1,R5,#+1152
   \   00000AA8   F3FFFFEA           B        ??Process_Iq_Request_36
   1448                case JABBER_ERROR_NOT_FOUND: sprintf(logmsg,LG_JABBER_ERROR_NOT_FOUND); break;
   \                     ??Process_Iq_Request_44:
   \   00000AAC   4F0F88E2           ADD      R0,R8,#+316
   \   00000AB0   F0FFFFEA           B        ??Process_Iq_Request_35
   1449                case JABBER_ERROR_NOT_ALLOWED: sprintf(logmsg,LG_JABBER_ERROR_NOT_ALLOWED); break;
   \                     ??Process_Iq_Request_45:
   \   00000AB4   520F88E2           ADD      R0,R8,#+328
   \                     ??Process_Iq_Request_46:
   \   00000AB8   051080E0           ADD      R1,R0,R5
   \   00000ABC   0600A0E1           MOV      R0,R6
   \   00000AC0   160000EF           SWI      +22
   \   00000AC4   160000EA           B        ??Process_Iq_Request_37
   1450                case JABBER_ERROR_NOT_ACCEPTABLE: sprintf(logmsg,LG_JABBER_ERROR_NOT_ACCEPTABLE); break;
   \                     ??Process_Iq_Request_47:
   \   00000AC8   550F88E2           ADD      R0,R8,#+340
   \   00000ACC   E9FFFFEA           B        ??Process_Iq_Request_35
   1451                case JABBER_ERROR_REGISTRATION_REQUIRED: sprintf(logmsg,LG_JABBER_ERROR_REGISTRATION_REQUIRED); break;
   \                     ??Process_Iq_Request_48:
   \   00000AD0   590F88E2           ADD      R0,R8,#+356
   \   00000AD4   EEFFFFEA           B        ??Process_Iq_Request_40
   1452                case JABBER_ERROR_REQUEST_TIMEOUT: sprintf(logmsg,LG_JABBER_ERROR_REQUEST_TIMEOUT); break;
   \                     ??Process_Iq_Request_49:
   \   00000AD8   5F0F88E2           ADD      R0,R8,#+380
   \   00000ADC   E5FFFFEA           B        ??Process_Iq_Request_35
   1453                case JABBER_ERROR_CONFLICT: sprintf(logmsg,LG_JABBER_ERROR_CONFLICT); break;
   \                     ??Process_Iq_Request_50:
   \   00000AE0   630F88E2           ADD      R0,R8,#+396
   \   00000AE4   F3FFFFEA           B        ??Process_Iq_Request_46
   1454                case JABBER_ERROR_INTERNAL_SERVER_ERROR: sprintf(logmsg,LG_JABBER_ERROR_INTERNAL_SERVER_ERROR); break;
   \                     ??Process_Iq_Request_51:
   \   00000AE8   660F88E2           ADD      R0,R8,#+408
   \   00000AEC   E1FFFFEA           B        ??Process_Iq_Request_35
   1455                case JABBER_ERROR_NOT_IMPLEMENTED: sprintf(logmsg,LG_JABBER_ERROR_NOT_IMPLEMENTED); break;
   \                     ??Process_Iq_Request_52:
   \   00000AF0   501E85E2           ADD      R1,R5,#+1280
   \   00000AF4   E0FFFFEA           B        ??Process_Iq_Request_36
   1456                case JABBER_ERROR_REMOTE_SERVER_ERROR: sprintf(logmsg,LG_JABBER_ERROR_REMOTE_SERVER_ERROR); break;
   \                     ??Process_Iq_Request_53:
   \   00000AF8   511E85E2           ADD      R1,R5,#+1296
   \   00000AFC   DEFFFFEA           B        ??Process_Iq_Request_36
   1457                case JABBER_ERROR_SERVICE_UNAVAILABLE: sprintf(logmsg,LG_JABBER_ERROR_SERVICE_UNAVAILABLE); break;
   \                     ??Process_Iq_Request_54:
   \   00000B00   750F88E2           ADD      R0,R8,#+468
   \   00000B04   051080E0           ADD      R1,R0,R5
   \   00000B08   DBFFFFEA           B        ??Process_Iq_Request_36
   1458                case JABBER_ERROR_REMOTE_SERVER_TIMEOUT: sprintf(logmsg,LG_JABBER_ERROR_REMOTE_SERVER_TIMEOUT); break;
   \                     ??Process_Iq_Request_55:
   \   00000B0C   7A0F88E2           ADD      R0,R8,#+488
   \   00000B10   D8FFFFEA           B        ??Process_Iq_Request_35
   1459                default:sprintf(logmsg,"ERR:%s",errcode);
   \                     ??Process_Iq_Request_33:
   \   00000B14   0420A0E1           MOV      R2,R4
   \   00000B18   551E85E2           ADD      R1,R5,#+1360
   \   00000B1C   0600A0E1           MOV      R0,R6
   \   00000B20   160000EF           SWI      +22
   1460                }
   1461                MsgBoxError(1,(int)logmsg);
   \                     ??Process_Iq_Request_37:
   \   00000B24   0610A0E1           MOV      R1,R6
   \   00000B28   0100A0E3           MOV      R0,#+1
   \   00000B2C   4E0000EF           SWI      +78
   1462              }
   1463            }
   1464            
   1465            if(!strcmp(id,auth_id))
   \                     ??Process_Iq_Request_32:
   \   00000B30   0A10A0E1           MOV      R1,R10
   \   00000B34   0700A0E1           MOV      R0,R7
   \   00000B38   190000EF           SWI      +25
   \   00000B3C   000050E3           CMP      R0,#+0
   \   00000B40   0B00001A           BNE      ??Process_Iq_Request_3
   1466            {
   1467              Jabber_state = JS_AUTH_ERROR;
   \   00000B44   ........           LDR      R0,??DataTable79  ;; Jabber_state
   \   00000B48   0B10A0E3           MOV      R1,#+11
   \   00000B4C   0010C0E5           STRB     R1,[R0, #+0]
   1468              strcat(logmsg,"\nAuth error!");
   \   00000B50   820F88E2           ADD      R0,R8,#+520
   \   00000B54   051080E0           ADD      R1,R0,R5
   \   00000B58   0600A0E1           MOV      R0,R6
   \   00000B5C   170000EF           SWI      +23
   1469              MsgBoxError(1,(int)logmsg);
   \   00000B60   0610A0E1           MOV      R1,R6
   \   00000B64   0100A0E3           MOV      R0,#+1
   \   00000B68   4E0000EF           SWI      +78
   1470              extern void end_socket(void);
   1471              SUBPROC((void*)end_socket);
   \   00000B6C   54009FE5           LDR      R0,??Process_Iq_Request_1+0x4C  ;; end_socket
   \                     ??Process_Iq_Request_22:
   \   00000B70   710100EF           SWI      +369
   \                     ??Process_Iq_Request_3:
   \   00000B74   9CD08DE2           ADD      SP,SP,#+156      ;; stack cleaning
   \   00000B78   F08FBDE8           POP      {R4-R11,PC}      ;; return
   \                     ??Process_Iq_Request_1:
   \   00000B7C   ........           DC32     `?<Constant "get">_5`
   \   00000B80   ........           DC32     `?<Constant "result">_1`
   \   00000B84   ........           DC32     `?<Constant "error">_1`
   \   00000B88   ........           DC32     `?<Constant "set">_1`
   \   00000B8C   ........           DC32     `?<Constant "jabber:iq:version">_2`
   \   00000B90   ........           DC32     `?<Constant "http://jabber.org/pro...">_5`
   \   00000B94   ........           DC32     Report_VersionInfo
   \   00000B98   ........           DC32     Report_TimeInfo
   \   00000B9C   ........           DC32     Report_IDLEInfo
   \   00000BA0   ........           DC32     Report_DiscoInfo
   \   00000BA4   ........           DC32     Report_PING
   \   00000BA8   ........           DC32     `?<Constant "SieJC_bind_req">`
   \   00000BAC   ........           DC32     `?<Constant "SieJC_sess_req">`
   \   00000BB0   ........           DC32     `?<Constant "SieJC_discoinfo">_1`
   \   00000BB4   ........           DC32     Send_Roster_Query
   \   00000BB8   ........           DC32     Send_Presence_MMIStub
   \   00000BBC   ........           DC32     TMR_Send_Presence
   \   00000BC0   ........           DC32     `?<Constant "(no data)">`
   \   00000BC4   ........           DC32     `?<Constant "(no data)">_1`
   \   00000BC8   ........           DC32     end_socket
   1472            }
   1473          }
   1474          }
   1475          /*
   1476          Презенсы :)
   1477          */

   \                                 In segment CODE, align 4, keep-with-next
   1478          void Process_Presence_Change(XMLNode* node)
   1479           {
   1480            // Иар заебал
   1481             extern const char percent_d[];
   1482          char loc_actor[]="actor";
   \                     Process_Presence_Change:
   \   00000000   78179FE5           LDR      R1,??Process_Presence_Change_0  ;; `?<Constant "actor">`
   \   00000004   F14F2DE9           PUSH     {R0,R4-R11,LR}
   1483          char loc_jid[]="jid";
   1484          char loc_reason[]="reason";
   1485          char loc_xmlns[]="xmlns";
   1486          char loc_x[]="x";
   1487          int priority = 0;
   1488          
   1489            CONF_DATA priv;
   1490            char Req_Set_Role=0;
   1491            char *real_jid = NULL;
   1492            char* from = XML_Get_Attr_Value("from",node->attr);
   \   00000008   ........           LDR      R5,??DataTable87  ;; `?<Constant "<feature var=\\'urn:xmp...">`
   \   0000000C   6CD04DE2           SUB      SP,SP,#+108
   \   00000010   0C0091E8           LDM      R1,{R2,R3}
   \   00000014   68179FE5           LDR      R1,??Process_Presence_Change_0+0x4  ;; `?<Constant "jid">_2`
   \   00000018   34008DE2           ADD      R0,SP,#+52
   \   0000001C   0C0080E8           STM      R0,{R2,R3}
   \   00000020   002091E5           LDR      R2,[R1, #0]
   \   00000024   5C179FE5           LDR      R1,??Process_Presence_Change_0+0x8  ;; `?<Constant "reason">`
   \   00000028   20008DE2           ADD      R0,SP,#+32
   \   0000002C   002080E5           STR      R2,[R0, #+0]
   \   00000030   0C0091E8           LDM      R1,{R2,R3}
   \   00000034   50179FE5           LDR      R1,??Process_Presence_Change_0+0xC  ;; `?<Constant "xmlns">_2`
   \   00000038   3C008DE2           ADD      R0,SP,#+60
   \   0000003C   0C0080E8           STM      R0,{R2,R3}
   \   00000040   0C0091E8           LDM      R1,{R2,R3}
   \   00000044   44179FE5           LDR      R1,??Process_Presence_Change_0+0x10  ;; `?<Constant "x">_1`
   \   00000048   2C008DE2           ADD      R0,SP,#+44
   \   0000004C   0C0080E8           STM      R0,{R2,R3}
   \   00000050   0020D1E5           LDRB     R2,[R1, #0]
   \   00000054   1C008DE2           ADD      R0,SP,#+28
   \   00000058   00A0A0E3           MOV      R10,#+0
   \   0000005C   0020C0E5           STRB     R2,[R0, #+0]
   \   00000060   0120D1E5           LDRB     R2,[R1, #+1]
   \   00000064   0010A0E3           MOV      R1,#+0
   \   00000068   24108DE5           STR      R1,[SP, #+36]
   \   0000006C   0120C0E5           STRB     R2,[R0, #+1]
   \   00000070   6C009DE5           LDR      R0,[SP, #+108]
   \   00000074   0140A0E1           MOV      R4,R1
   \   00000078   0C1090E5           LDR      R1,[R0, #+12]
   \   0000007C   C80F85E2           ADD      R0,R5,#+800
   \   00000080   ........           _BLF     XML_Get_Attr_Value,??XML_Get_Attr_Value??rA
   \   00000084   04008DE5           STR      R0,[SP, #+4]
   1493            if(!from)return;
   \   00000088   000050E3           CMP      R0,#+0
   \   0000008C   B901000A           BEQ      ??Process_Presence_Change_1
   1494          
   1495            char status;
   1496            char* msg=NULL;
   \   00000090   0010A0E3           MOV      R1,#+0
   \   00000094   08108DE5           STR      R1,[SP, #+8]
   1497            char* pr_type = XML_Get_Attr_Value("type",node->attr);
   \   00000098   6C009DE5           LDR      R0,[SP, #+108]
   \   0000009C   0C1090E5           LDR      R1,[R0, #+12]
   \   000000A0   D20F85E2           ADD      R0,R5,#+840
   \   000000A4   ........           _BLF     XML_Get_Attr_Value,??XML_Get_Attr_Value??rA
   \   000000A8   000050E3           CMP      R0,#+0
   \   000000AC   0200000A           BEQ      ??Process_Presence_Change_2
   1498            if(pr_type)
   1499            {
   1500              status = GetPresenceIndex(pr_type);
   \   000000B0   ........           BL       GetPresenceIndex
   \   000000B4   FF6000E2           AND      R6,R0,#0xFF
   \   000000B8   1F0000EA           B        ??Process_Presence_Change_3
   1501            }
   1502            else
   1503            {
   1504              XMLNode* status_node = XML_Get_Child_Node_By_Name(node,"show");
   \                     ??Process_Presence_Change_2:
   \   000000BC   6800A0E3           MOV      R0,#+104
   \   000000C0   500E80E3           ORR      R0,R0,#0x500
   \   000000C4   051080E0           ADD      R1,R0,R5
   \   000000C8   6C009DE5           LDR      R0,[SP, #+108]
   \   000000CC   ........           _BLF     XML_Get_Child_Node_By_Name,??XML_Get_Child_Node_By_Name??rA
   1505              if(!status_node)
   \   000000D0   000050E3           CMP      R0,#+0
   \   000000D4   0400001A           BNE      ??Process_Presence_Change_4
   1506              {
   1507                status = PRESENCE_ONLINE;
   1508                extern const char sndOnline[64];
   1509                //Play(sndOnline);
   1510                SUBPROC((void *)Play, sndOnline);
   \   000000D8   B4169FE5           LDR      R1,??Process_Presence_Change_0+0x14  ;; sndOnline
   \   000000DC   ........           LDR      R0,??DataTable93  ;; Play
   \   000000E0   0060A0E3           MOV      R6,#+0
   \   000000E4   710100EF           SWI      +369
   \   000000E8   020000EA           B        ??Process_Presence_Change_5
   1511              }
   1512              else
   1513              {
   1514                status = GetPresenceIndex(status_node->value);
   \                     ??Process_Presence_Change_4:
   \   000000EC   100090E5           LDR      R0,[R0, #+16]
   \   000000F0   ........           BL       GetPresenceIndex
   \   000000F4   FF6000E2           AND      R6,R0,#0xFF
   1515              }
   1516          
   1517              XMLNode* statusmsg_node = XML_Get_Child_Node_By_Name(node,"status");
   \                     ??Process_Presence_Change_5:
   \   000000F8   6C009DE5           LDR      R0,[SP, #+108]
   \   000000FC   571E85E2           ADD      R1,R5,#+1392
   \   00000100   ........           _BLF     XML_Get_Child_Node_By_Name,??XML_Get_Child_Node_By_Name??rA
   1518              if(statusmsg_node)msg = statusmsg_node->value;
   \   00000104   000050E3           CMP      R0,#+0
   \   00000108   10009015           LDRNE    R0,[R0, #+16]
   \   0000010C   08008D15           STRNE    R0,[SP, #+8]
   1519          
   1520              XMLNode* prio_node = XML_Get_Child_Node_By_Name(node,"priority");
   \   00000110   7800A0E3           MOV      R0,#+120
   \   00000114   500E80E3           ORR      R0,R0,#0x500
   \   00000118   051080E0           ADD      R1,R0,R5
   \   0000011C   6C009DE5           LDR      R0,[SP, #+108]
   \   00000120   ........           _BLF     XML_Get_Child_Node_By_Name,??XML_Get_Child_Node_By_Name??rA
   1521              if(prio_node)
   \   00000124   000050E3           CMP      R0,#+0
   \   00000128   0300000A           BEQ      ??Process_Presence_Change_3
   1522               sscanf(prio_node->value,percent_d,&priority);
   \   0000012C   ........           LDR      R1,??DataTable85  ;; percent_d
   \   00000130   100090E5           LDR      R0,[R0, #+16]
   \   00000134   24208DE2           ADD      R2,SP,#+36
   \   00000138   F50100EF           SWI      +501
   \                     ??Process_Presence_Change_3:
   \   0000013C   6C009DE5           LDR      R0,[SP, #+108]
   \   00000140   503F85E2           ADD      R3,R5,#+320
   \   00000144   2C208DE2           ADD      R2,SP,#+44
   \   00000148   1C108DE2           ADD      R1,SP,#+28
   1523            }
   1524          
   1525             // Предусматриваем случай, что послано нам что-то от конференции. Это важно.
   1526             XMLNode *x_node;
   1527          
   1528              if(x_node = XML_Get_Child_Node_By_Name_And_Attr(node,loc_x, loc_xmlns, XMLNS_MUC)) // Послано от конференции
   \   0000014C   ........           _BLF     XML_Get_Child_Node_By_Name_And_Attr,??XML_Get_Child_Node_By_Name_And_Attr??rA
   \   00000150   000050E3           CMP      R0,#+0
   \   00000154   2600000A           BEQ      ??Process_Presence_Change_6
   1529              {
   1530                CLIST* Conference = CList_FindContactByJID(from);
   \   00000158   04009DE5           LDR      R0,[SP, #+4]
   \   0000015C   ........           _BLF     CList_FindContactByJID,??CList_FindContactByJID??rA
   \   00000160   0070A0E1           MOV      R7,R0
   1531                // Получаем дочерний узел error (ибо нацелены на обработку именно ошибок)
   1532                XMLNode* err_node = XML_Get_Child_Node_By_Name(node,"error");
   \   00000164   6C009DE5           LDR      R0,[SP, #+108]
   \   00000168   C41085E2           ADD      R1,R5,#+196
   \   0000016C   ........           _BLF     XML_Get_Child_Node_By_Name,??XML_Get_Child_Node_By_Name??rA
   \   00000170   0080B0E1           MOVS     R8,R0
   1533                if(err_node)  // Есть ошибка!
   \   00000174   1E00000A           BEQ      ??Process_Presence_Change_6
   1534                {
   1535                  // Хочу текст ошибки
   1536                  XMLNode* err_desc = XML_Get_Child_Node_By_Name(err_node,"text");
   \   00000178   8400A0E3           MOV      R0,#+132
   \   0000017C   500E80E3           ORR      R0,R0,#0x500
   \   00000180   051080E0           ADD      R1,R0,R5
   \   00000184   0800A0E1           MOV      R0,R8
   \   00000188   ........           _BLF     XML_Get_Child_Node_By_Name,??XML_Get_Child_Node_By_Name??rA
   \   0000018C   0090B0E1           MOVS     R9,R0
   1537                  if(err_desc)
   \   00000190   0900000A           BEQ      ??Process_Presence_Change_7
   1538                  {
   1539                    if(err_desc->value)msg = err_desc->value;
   \   00000194   101099E5           LDR      R1,[R9, #+16]
   1540                    MsgBoxError(1,(int)err_desc->value);
   \   00000198   0100A0E3           MOV      R0,#+1
   \   0000019C   000051E3           CMP      R1,#+0
   \   000001A0   08108D15           STRNE    R1,[SP, #+8]
   \   000001A4   4E0000EF           SWI      +78
   1541                    CList_AddSystemMessage(Conference->JID,PRESENCE_OFFLINE, err_desc->value);
   \   000001A8   102099E5           LDR      R2,[R9, #+16]
   \   000001AC   000097E5           LDR      R0,[R7, #+0]
   \   000001B0   0610A0E3           MOV      R1,#+6
   \   000001B4   ........           _BLF     CList_AddSystemMessage,??CList_AddSystemMessage??rA
   \   000001B8   0D0000EA           B        ??Process_Presence_Change_6
   1542                  }
   1543                  else
   1544                  {
   1545                    char q[40];
   1546                    char *code = XML_Get_Attr_Value("code",err_node->attr);
   \                     ??Process_Presence_Change_7:
   \   000001BC   0C1098E5           LDR      R1,[R8, #+12]
   \   000001C0   3C00A0E3           MOV      R0,#+60
   \   000001C4   400E80E3           ORR      R0,R0,#0x400
   \   000001C8   050080E0           ADD      R0,R0,R5
   \   000001CC   ........           _BLF     XML_Get_Attr_Value,??XML_Get_Attr_Value??rA
   \   000001D0   0020A0E1           MOV      R2,R0
   1547                    sprintf(q,"ERR %s",code);
   \   000001D4   8C00A0E3           MOV      R0,#+140
   \   000001D8   500E80E3           ORR      R0,R0,#0x500
   \   000001DC   051080E0           ADD      R1,R0,R5
   \   000001E0   44008DE2           ADD      R0,SP,#+68
   \   000001E4   160000EF           SWI      +22
   1548                    MsgBoxError(1,(int)q);
   \   000001E8   44108DE2           ADD      R1,SP,#+68
   \   000001EC   0100A0E3           MOV      R0,#+1
   \   000001F0   4E0000EF           SWI      +78
   1549                  }
   1550                }
   1551              }
   1552          
   1553          
   1554          #define MAX_STATUS_LEN 512
   1555          static char r[MAX_STATUS_LEN];       // Статик, чтобы не убило её при завершении процедуры
   1556          
   1557              if(x_node = XML_Get_Child_Node_By_Name_And_Attr(node,loc_x, loc_xmlns, XMLNS_MUC_USER)) // Послано от конференции в пользователя
   \                     ??Process_Presence_Change_6:
   \   000001F4   6C009DE5           LDR      R0,[SP, #+108]
   \   000001F8   733E85E2           ADD      R3,R5,#+1840
   \   000001FC   2C208DE2           ADD      R2,SP,#+44
   \   00000200   1C108DE2           ADD      R1,SP,#+28
   \   00000204   ........           _BLF     XML_Get_Child_Node_By_Name_And_Attr,??XML_Get_Child_Node_By_Name_And_Attr??rA
   \   00000208   18008DE5           STR      R0,[SP, #+24]
   \   0000020C   000050E3           CMP      R0,#+0
   \   00000210   3F01000A           BEQ      ??Process_Presence_Change_8
   1558              {
   1559          
   1560                // Получим экземпляр конфы, в которой всё происходит
   1561                CLIST* Conference = CList_FindContactByJID(from);
   \   00000214   04009DE5           LDR      R0,[SP, #+4]
   \   00000218   ........           _BLF     CList_FindContactByJID,??CList_FindContactByJID??rA
   \   0000021C   0070B0E1           MOVS     R7,R0
   1562                if(!Conference)
   \   00000220   5401000A           BEQ      ??Process_Presence_Change_1
   1563                {
   1564                  return;
   1565                }
   1566                if (!CList_FindMUCByJID(Conference->JID)) return; //нету такой конференции, значит мы ёё несоздавали
   \   00000224   000097E5           LDR      R0,[R7, #+0]
   \   00000228   ........           _BLF     CList_FindMUCByJID,??CList_FindMUCByJID??rA
   \   0000022C   000050E3           CMP      R0,#+0
   \   00000230   5001000A           BEQ      ??Process_Presence_Change_1
   1567                char* nick = Get_Resource_Name_By_FullJID(from);
   \   00000234   04009DE5           LDR      R0,[SP, #+4]
   1568          
   1569                // Тут можно обрабатывать события входа/выхода в конфу
   1570                // Ибо сообщается, кто вошёл (модер ли, админ...)
   1571                XMLNode* item = XML_Get_Child_Node_By_Name(x_node,"item");
   1572                if(status!=PRESENCE_OFFLINE) // Вход с любым статусом
   \   00000238   ........           LDR      R9,??DataTable94  ;; OnlineInfo
   \   0000023C   ........           BL       Get_Resource_Name_By_FullJID
   \   00000240   0080A0E1           MOV      R8,R0
   \   00000244   9400A0E3           MOV      R0,#+148
   \   00000248   500E80E3           ORR      R0,R0,#0x500
   \   0000024C   051080E0           ADD      R1,R0,R5
   \   00000250   18009DE5           LDR      R0,[SP, #+24]
   \   00000254   ........           _BLF     XML_Get_Child_Node_By_Name,??XML_Get_Child_Node_By_Name??rA
   \   00000258   0C008DE5           STR      R0,[SP, #+12]
   \   0000025C   060056E3           CMP      R6,#+6
   \   00000260   8D00000A           BEQ      ??Process_Presence_Change_9
   1573                {
   1574                  TRESOURCE* ResEx = CList_IsResourceInList(from);
   \   00000264   04009DE5           LDR      R0,[SP, #+4]
   \   00000268   ........           _BLF     CList_IsResourceInList,??CList_IsResourceInList??rA
   \   0000026C   00008DE5           STR      R0,[SP, #+0]
   1575                  char* affiliation = XML_Get_Attr_Value("affiliation", item->attr);
   \   00000270   0C009DE5           LDR      R0,[SP, #+12]
   \   00000274   0C1090E5           LDR      R1,[R0, #+12]
   \   00000278   9C00A0E3           MOV      R0,#+156
   \   0000027C   500E80E3           ORR      R0,R0,#0x500
   \   00000280   050080E0           ADD      R0,R0,R5
   \   00000284   ........           _BLF     XML_Get_Attr_Value,??XML_Get_Attr_Value??rA
   \   00000288   00A0A0E1           MOV      R10,R0
   1576                  char* role =  XML_Get_Attr_Value("role", item->attr);
   \   0000028C   0C009DE5           LDR      R0,[SP, #+12]
   \   00000290   0C1090E5           LDR      R1,[R0, #+12]
   \   00000294   A800A0E3           MOV      R0,#+168
   \   00000298   500E80E3           ORR      R0,R0,#0x500
   \   0000029C   050080E0           ADD      R0,R0,R5
   \   000002A0   ........           _BLF     XML_Get_Attr_Value,??XML_Get_Attr_Value??rA
   \   000002A4   00B0A0E1           MOV      R11,R0
   1577                  real_jid = XML_Get_Attr_Value(loc_jid, item->attr);
   \   000002A8   0C009DE5           LDR      R0,[SP, #+12]
   \   000002AC   0C1090E5           LDR      R1,[R0, #+12]
   \   000002B0   20008DE2           ADD      R0,SP,#+32
   \   000002B4   ........           _BLF     XML_Get_Attr_Value,??XML_Get_Attr_Value??rA
   \   000002B8   0040A0E1           MOV      R4,R0
   1578                  priv.aff = (JABBER_GC_AFFILIATION)GetAffRoleIndex(affiliation);
   \   000002BC   0A00A0E1           MOV      R0,R10
   \   000002C0   ........           BL       GetAffRoleIndex
   \   000002C4   1000CDE5           STRB     R0,[SP, #+16]
   1579                  priv.role = (JABBER_GC_ROLE)GetAffRoleIndex(role);
   \   000002C8   0B00A0E1           MOV      R0,R11
   \   000002CC   ........           BL       GetAffRoleIndex
   \   000002D0   1100CDE5           STRB     R0,[SP, #+17]
   1580          
   1581                  if(ResEx)
   \   000002D4   00209DE5           LDR      R2,[SP, #+0]
   \   000002D8   610EA0E3           MOV      R0,#+1552
   \   000002DC   1C1080E2           ADD      R1,R0,#+28
   \   000002E0   000052E3           CMP      R2,#+0
   \   000002E4   4100000A           BEQ      ??Process_Presence_Change_10
   1582                  {
   1583          
   1584                  if(ResEx->status!=PRESENCE_OFFLINE)
   \   000002E8   0920D2E5           LDRB     R2,[R2, #+9]
   \   000002EC   060052E3           CMP      R2,#+6
   \   000002F0   2C00000A           BEQ      ??Process_Presence_Change_11
   1585                  {
   1586                    if(!(ResEx->muc_privs.aff==priv.aff && ResEx->muc_privs.role==priv.role))
   \   000002F4   00009DE5           LDR      R0,[SP, #+0]
   \   000002F8   00109DE5           LDR      R1,[SP, #+0]
   \   000002FC   2100D0E5           LDRB     R0,[R0, #+33]
   \   00000300   2010D1E5           LDRB     R1,[R1, #+32]
   \   00000304   1120DDE5           LDRB     R2,[SP, #+17]
   \   00000308   1030DDE5           LDRB     R3,[SP, #+16]
   \   0000030C   030051E1           CMP      R1,R3
   \   00000310   02005001           CMPEQ    R0,R2
   \   00000314   0C00000A           BEQ      ??Process_Presence_Change_12
   1587                    {
   1588                      sprintf(r, "%s is now %s and %s [%d->%d, %d->%d]", nick, affiliation, role, ResEx->muc_privs.aff, priv.aff, ResEx->muc_privs.role, priv.role);
   \   00000318   04002DE9           PUSH     {R2}
   \   0000031C   01002DE9           PUSH     {R0}
   \   00000320   0300A0E1           MOV      R0,R3
   \   00000324   01002DE9           PUSH     {R0}
   \   00000328   02002DE9           PUSH     {R1}
   \   0000032C   00082DE9           PUSH     {R11}
   \   00000330   0A30A0E1           MOV      R3,R10
   \   00000334   0820A0E1           MOV      R2,R8
   \   00000338   5B1E85E2           ADD      R1,R5,#+1456
   \   0000033C   3C0089E2           ADD      R0,R9,#+60
   \   00000340   160000EF           SWI      +22
   1589                      Req_Set_Role = 1;
   \   00000344   14D08DE2           ADD      SP,SP,#+20
   \   00000348   260000EA           B        ??Process_Presence_Change_13
   1590                    }
   \                     ??Process_Presence_Change_12:
   \   0000034C   060189E0           ADD      R0,R9,R6, LSL #+2
   \   00000350   0C3090E5           LDR      R3,[R0, #+12]
   \   00000354   08009DE5           LDR      R0,[SP, #+8]
   \   00000358   000050E3           CMP      R0,#+0
   \   0000035C   0A00000A           BEQ      ??Process_Presence_Change_14
   1591                    else
   1592                    {
   1593                      if(msg)
   1594                      {
   1595                        snprintf(r, MAX_STATUS_LEN, "%s changed status to %s (%s)", nick, PRESENCES[status], msg);
   \   00000360   01002DE9           PUSH     {R0}
   \   00000364   08002DE9           PUSH     {R3}
   \   00000368   801FA0E3           MOV      R1,#+512
   \   0000036C   D800A0E3           MOV      R0,#+216
   \   00000370   500E80E3           ORR      R0,R0,#0x500
   \   00000374   0830A0E1           MOV      R3,R8
   \   00000378   052080E0           ADD      R2,R0,R5
   \   0000037C   3C0089E2           ADD      R0,R9,#+60
   \   00000380   1B0100EF           SWI      +283
   \                     ??Process_Presence_Change_15:
   \   00000384   08D08DE2           ADD      SP,SP,#+8        ;; stack cleaning
   \   00000388   160000EA           B        ??Process_Presence_Change_13
   1596                      }
   1597                      else
   1598                      {
   1599                        sprintf(r, "%s changed status to %s", nick, PRESENCES[status]);
   \                     ??Process_Presence_Change_14:
   \   0000038C   0820A0E1           MOV      R2,R8
   \   00000390   F800A0E3           MOV      R0,#+248
   \   00000394   500E80E3           ORR      R0,R0,#0x500
   \   00000398   051080E0           ADD      R1,R0,R5
   \   0000039C   3C0089E2           ADD      R0,R9,#+60
   \   000003A0   160000EF           SWI      +22
   \   000003A4   0F0000EA           B        ??Process_Presence_Change_13
   1600                      }
   1601                    }
   1602                  }
   1603                  else if(real_jid)  //если знаем реальный jid, выводим его
   \                     ??Process_Presence_Change_11:
   \   000003A8   00082DE9           PUSH     {R11}
   \   000003AC   000054E3           CMP      R4,#+0
   \   000003B0   0600000A           BEQ      ??Process_Presence_Change_16
   1604                  {
   1605                    sprintf(r, "%s (%s) joined as %s and %s", nick, real_jid, affiliation, role);
   \   000003B4   00042DE9           PUSH     {R10}
   \   000003B8   0430A0E1           MOV      R3,R4
   \   000003BC   0820A0E1           MOV      R2,R8
   \   000003C0   051080E0           ADD      R1,R0,R5
   \   000003C4   3C0089E2           ADD      R0,R9,#+60
   \   000003C8   160000EF           SWI      +22
   1606                    Req_Set_Role = 1;
   \   000003CC   ECFFFFEA           B        ??Process_Presence_Change_15
   1607                  }
   1608                  else
   1609                    sprintf(r, "%s joined as %s and %s", nick, affiliation, role);
   \                     ??Process_Presence_Change_16:
   \   000003D0   0A30A0E1           MOV      R3,R10
   \   000003D4   0820A0E1           MOV      R2,R8
   \   000003D8   051081E0           ADD      R1,R1,R5
   \   000003DC   3C0089E2           ADD      R0,R9,#+60
   \   000003E0   160000EF           SWI      +22
   \   000003E4   04D08DE2           ADD      SP,SP,#+4
   1610                    Req_Set_Role = 1;
   \                     ??Process_Presence_Change_13:
   \   000003E8   01A0A0E3           MOV      R10,#+1
   \   000003EC   120000EA           B        ??Process_Presence_Change_17
   1611          
   1612                  }
   1613                  else 
   1614                  {
   1615                    if(real_jid)
   \                     ??Process_Presence_Change_10:
   \   000003F0   00082DE9           PUSH     {R11}
   \   000003F4   000054E3           CMP      R4,#+0
   \   000003F8   0800000A           BEQ      ??Process_Presence_Change_18
   1616                  {
   1617                    sprintf(r, "%s (%s) joined as %s and %s", nick, real_jid, affiliation, role);
   \   000003FC   00042DE9           PUSH     {R10}
   \   00000400   0430A0E1           MOV      R3,R4
   \   00000404   0820A0E1           MOV      R2,R8
   \   00000408   051080E0           ADD      R1,R0,R5
   \   0000040C   3C0089E2           ADD      R0,R9,#+60
   \   00000410   160000EF           SWI      +22
   1618                    Req_Set_Role = 1;
   \   00000414   01A0A0E3           MOV      R10,#+1
   \   00000418   08D08DE2           ADD      SP,SP,#+8
   \   0000041C   060000EA           B        ??Process_Presence_Change_17
   1619                  }
   1620                  else
   1621                  {
   1622                    sprintf(r, "%s joined as %s and %s", nick, affiliation, role);
   \                     ??Process_Presence_Change_18:
   \   00000420   0A30A0E1           MOV      R3,R10
   \   00000424   0820A0E1           MOV      R2,R8
   \   00000428   051081E0           ADD      R1,R1,R5
   \   0000042C   3C0089E2           ADD      R0,R9,#+60
   \   00000430   160000EF           SWI      +22
   1623                    Req_Set_Role = 1;
   \   00000434   01A0A0E3           MOV      R10,#+1
   \   00000438   04D08DE2           ADD      SP,SP,#+4
   1624                  }
   1625                  };
   1626          
   1627                  char* my_nick = Get_Resource_Name_By_FullJID(CList_FindMUCByJID(Conference->JID)->conf_jid);
   \                     ??Process_Presence_Change_17:
   \   0000043C   000097E5           LDR      R0,[R7, #+0]
   \   00000440   ........           _BLF     CList_FindMUCByJID,??CList_FindMUCByJID??rA
   \   00000444   000090E5           LDR      R0,[R0, #+0]
   \   00000448   ........           BL       Get_Resource_Name_By_FullJID
   1628                  if ((!strcmp(nick,my_nick))&&(Conference->res_list->status==PRESENCE_OFFLINE)) //если ето мы, входим в нее.
   \   0000044C   0010A0E1           MOV      R1,R0
   \   00000450   0800A0E1           MOV      R0,R8
   \   00000454   190000EF           SWI      +25
   \   00000458   000050E3           CMP      R0,#+0
   \   0000045C   0A00001A           BNE      ??Process_Presence_Change_19
   \   00000460   0C0097E5           LDR      R0,[R7, #+12]
   \   00000464   0910D0E5           LDRB     R1,[R0, #+9]
   \   00000468   060051E3           CMP      R1,#+6
   \   0000046C   0600001A           BNE      ??Process_Presence_Change_19
   1629                  {
   1630                    Conference->res_list->status=PRESENCE_ONLINE;
   \   00000470   0010A0E3           MOV      R1,#+0
   \   00000474   0910C0E5           STRB     R1,[R0, #+9]
   1631                    ShowMSG(1,(int)LG_MUCCROK);
   \   00000478   4400A0E3           MOV      R0,#+68
   \   0000047C   600E80E3           ORR      R0,R0,#0x600
   \   00000480   051080E0           ADD      R1,R0,R5
   \   00000484   0100A0E3           MOV      R0,#+1
   \   00000488   480100EF           SWI      +328
   1632                  };
   1633                  CList_AddSystemMessage(Conference->JID,PRESENCE_ONLINE, r);
   \                     ??Process_Presence_Change_19:
   \   0000048C   000097E5           LDR      R0,[R7, #+0]
   \   00000490   3C2089E2           ADD      R2,R9,#+60
   \   00000494   0010A0E3           MOV      R1,#+0
   \   00000498   ........           _BLF     CList_AddSystemMessage,??CList_AddSystemMessage??rA
   1634                }
   1635          
   1636          
   1637                if(status==PRESENCE_OFFLINE) // Выход
   \                     ??Process_Presence_Change_9:
   \   0000049C   060056E3           CMP      R6,#+6
   \   000004A0   2A00001A           BNE      ??Process_Presence_Change_20
   1638                {
   1639                  XMLNode* statusmsg_node = XML_Get_Child_Node_By_Name(node,"status");
   \   000004A4   6C009DE5           LDR      R0,[SP, #+108]
   \   000004A8   571E85E2           ADD      R1,R5,#+1392
   \   000004AC   ........           _BLF     XML_Get_Child_Node_By_Name,??XML_Get_Child_Node_By_Name??rA
   1640                  if (!statusmsg_node)
   \   000004B0   661EA0E3           MOV      R1,#+1632
   \   000004B4   000050E3           CMP      R0,#+0
   1641                    sprintf(r, "%s left us", nick);
   \   000004B8   0820A001           MOVEQ    R2,R8
   \   000004BC   0800000A           BEQ      ??Process_Presence_Change_21
   1642                  else 
   1643                  {
   1644                   if(statusmsg_node->value) sprintf(r, "%s left us (%s)", nick, statusmsg_node->value);
   \   000004C0   103090E5           LDR      R3,[R0, #+16]
   \   000004C4   0820A0E1           MOV      R2,R8
   \   000004C8   000053E3           CMP      R3,#+0
   \   000004CC   0400000A           BEQ      ??Process_Presence_Change_21
   \   000004D0   0C0081E3           ORR      R0,R1,#0xC
   \   000004D4   051080E0           ADD      R1,R0,R5
   \   000004D8   3C0089E2           ADD      R0,R9,#+60
   \   000004DC   160000EF           SWI      +22
   \   000004E0   020000EA           B        ??Process_Presence_Change_22
   1645                   else sprintf(r, "%s left us", nick);
   \                     ??Process_Presence_Change_21:
   \   000004E4   051081E0           ADD      R1,R1,R5
   \   000004E8   3C0089E2           ADD      R0,R9,#+60
   \   000004EC   160000EF           SWI      +22
   1646                  }
   1647          
   1648                  char* my_nick = Get_Resource_Name_By_FullJID(CList_FindMUCByJID(Conference->JID)->conf_jid);
   \                     ??Process_Presence_Change_22:
   \   000004F0   000097E5           LDR      R0,[R7, #+0]
   \   000004F4   ........           _BLF     CList_FindMUCByJID,??CList_FindMUCByJID??rA
   \   000004F8   000090E5           LDR      R0,[R0, #+0]
   \   000004FC   ........           BL       Get_Resource_Name_By_FullJID
   1649                  if (!strcmp(nick,my_nick)) //если ето мы, удаляем конфу.
   \   00000500   0010A0E1           MOV      R1,R0
   \   00000504   0800A0E1           MOV      R0,R8
   \   00000508   190000EF           SWI      +25
   \   0000050C   000050E3           CMP      R0,#+0
   \   00000510   0300001A           BNE      ??Process_Presence_Change_23
   1650                  {
   1651                    Leave_Conference(Conference->JID);
   \   00000514   000097E5           LDR      R0,[R7, #+0]
   \   00000518   ........           BL       Leave_Conference
   1652                    CList_MakeAllResourcesOFFLINE(Conference);
   \   0000051C   0700A0E1           MOV      R0,R7
   \   00000520   ........           _BLF     CList_MakeAllResourcesOFFLINE,??CList_MakeAllResourcesOFFLINE??rA
   1653                  };
   1654                  extern const char sndOffline[64];
   1655                  //Play(sndOffline);
   1656                  SUBPROC((void *)Play, sndOffline);
   \                     ??Process_Presence_Change_23:
   \   00000524   6C129FE5           LDR      R1,??Process_Presence_Change_0+0x18  ;; sndOffline
   \   00000528   ........           LDR      R0,??DataTable93  ;; Play
   1657                  CList_AddSystemMessage(Conference->JID,PRESENCE_OFFLINE, r);
   1658                  priv.role = ROLE_NONE;
   1659                  priv.aff  = AFFILIATION_NONE;
   1660                  Req_Set_Role = 1;
   \   0000052C   01A0A0E3           MOV      R10,#+1
   \   00000530   710100EF           SWI      +369
   \   00000534   000097E5           LDR      R0,[R7, #+0]
   \   00000538   3C2089E2           ADD      R2,R9,#+60
   \   0000053C   0610A0E3           MOV      R1,#+6
   \   00000540   ........           _BLF     CList_AddSystemMessage,??CList_AddSystemMessage??rA
   \   00000544   0010A0E3           MOV      R1,#+0
   \   00000548   1110CDE5           STRB     R1,[SP, #+17]
   \   0000054C   1010CDE5           STRB     R1,[SP, #+16]
   1661                }
   1662          
   1663          
   1664                // Получаем дочерний узел статуса
   1665                XMLNode* sstatus = XML_Get_Child_Node_By_Name(x_node,"status");
   \                     ??Process_Presence_Change_20:
   \   00000550   18009DE5           LDR      R0,[SP, #+24]
   \   00000554   571E85E2           ADD      R1,R5,#+1392
   \   00000558   ........           _BLF     XML_Get_Child_Node_By_Name,??XML_Get_Child_Node_By_Name??rA
   1666                if(sstatus)  // Есть статус!
   \   0000055C   000050E3           CMP      R0,#+0
   \   00000560   6B00000A           BEQ      ??Process_Presence_Change_8
   1667                {
   1668                  // Получаем код статуса
   1669                  char* st_code=XML_Get_Attr_Value("code", sstatus->attr);
   \   00000564   0C1090E5           LDR      R1,[R0, #+12]
   \   00000568   3C00A0E3           MOV      R0,#+60
   \   0000056C   400E80E3           ORR      R0,R0,#0x400
   \   00000570   050080E0           ADD      R0,R0,R5
   \   00000574   ........           _BLF     XML_Get_Attr_Value,??XML_Get_Attr_Value??rA
   \   00000578   00B0A0E1           MOV      R11,R0
   1670                  int errcode_n=0;
   \   0000057C   0010A0E3           MOV      R1,#+0
   \   00000580   00108DE5           STR      R1,[SP, #+0]
   1671                  extern const char percent_d[];
   1672                  sscanf(st_code,percent_d,&errcode_n);
   \   00000584   ........           LDR      R1,??DataTable85  ;; percent_d
   \   00000588   0D20A0E1           MOV      R2,SP
   \   0000058C   F50100EF           SWI      +501
   1673                  // Разные коды статусов - разное варенье:)
   1674                  switch (errcode_n)
   \   00000590   00009DE5           LDR      R0,[SP, #+0]
   \   00000594   C90050E2           SUBS     R0,R0,#+201
   \   00000598   2000000A           BEQ      ??Process_Presence_Change_24
   \   0000059C   640050E2           SUBS     R0,R0,#+100
   \   000005A0   0D00000A           BEQ      ??Process_Presence_Change_25
   \   000005A4   020050E2           SUBS     R0,R0,#+2
   \   000005A8   1100000A           BEQ      ??Process_Presence_Change_26
   \   000005AC   040050E2           SUBS     R0,R0,#+4
   \   000005B0   0200000A           BEQ      ??Process_Presence_Change_27
   \   000005B4   0F0050E2           SUBS     R0,R0,#+15
   \   000005B8   0A00000A           BEQ      ??Process_Presence_Change_28
   \   000005BC   1A0000EA           B        ??Process_Presence_Change_29
   1675                  {
   1676                   case MUCST_KICKED:  sprintf(r, LG_MUCST_R_KICK,nick); break; // Сообщение о кике
   \                     ??Process_Presence_Change_27:
   \   000005C0   0820A0E1           MOV      R2,R8
   \   000005C4   7C00A0E3           MOV      R0,#+124
   \                     ??Process_Presence_Change_30:
   \   000005C8   600E80E3           ORR      R0,R0,#0x600
   \   000005CC   051080E0           ADD      R1,R0,R5
   \   000005D0   3C0089E2           ADD      R0,R9,#+60
   \   000005D4   160000EF           SWI      +22
   \   000005D8   1A0000EA           B        ??Process_Presence_Change_31
   1677                   case MUCST_BANNED: sprintf(r, LG_MUCST_R_BAN, nick); break;// Сообщение о бане
   \                     ??Process_Presence_Change_25:
   \   000005DC   0820A0E1           MOV      R2,R8
   \   000005E0   8C00A0E3           MOV      R0,#+140
   \   000005E4   F7FFFFEA           B        ??Process_Presence_Change_30
   1678                   case MUCST_KICKED_MEMB_ONLY: sprintf(r, LG_MUCST_R_KICK_MEMB_ONLY, nick); break; // Сообщение о кике из мембер-онли румы
   \                     ??Process_Presence_Change_28:
   \   000005E8   0820A0E1           MOV      R2,R8
   \   000005EC   9C00A0E3           MOV      R0,#+156
   \   000005F0   F4FFFFEA           B        ??Process_Presence_Change_30
   1679                   case MUCST_CHNICK: sprintf(r, LG_MUCST_R_CHNICK, nick,  XML_Get_Attr_Value("nick", item->attr)); break; // Сообщение о смене ника
   \                     ??Process_Presence_Change_26:
   \   000005F4   0C009DE5           LDR      R0,[SP, #+12]
   \   000005F8   0C1090E5           LDR      R1,[R0, #+12]
   \   000005FC   E400A0E3           MOV      R0,#+228
   \   00000600   600E80E3           ORR      R0,R0,#0x600
   \   00000604   050080E0           ADD      R0,R0,R5
   \   00000608   ........           _BLF     XML_Get_Attr_Value,??XML_Get_Attr_Value??rA
   \   0000060C   0030A0E1           MOV      R3,R0
   \   00000610   0820A0E1           MOV      R2,R8
   \   00000614   CC00A0E3           MOV      R0,#+204
   \   00000618   600E80E3           ORR      R0,R0,#0x600
   \   0000061C   060000EA           B        ??Process_Presence_Change_32
   1680                   case MUCST_MUCCREATED: sprintf(r, LG_MUCST_MUCCREATED, nick); break; // Сообщение о бане
   \                     ??Process_Presence_Change_24:
   \   00000620   0820A0E1           MOV      R2,R8
   \   00000624   EC00A0E3           MOV      R0,#+236
   \   00000628   E6FFFFEA           B        ??Process_Presence_Change_30
   1681                   default: sprintf(r,"%s - [unknow action(%s)]",nick, st_code);
   \                     ??Process_Presence_Change_29:
   \   0000062C   0B30A0E1           MOV      R3,R11
   \   00000630   0820A0E1           MOV      R2,R8
   \   00000634   0800A0E3           MOV      R0,#+8
   \   00000638   700E80E3           ORR      R0,R0,#0x700
   \                     ??Process_Presence_Change_32:
   \   0000063C   051080E0           ADD      R1,R0,R5
   \   00000640   3C0089E2           ADD      R0,R9,#+60
   \   00000644   160000EF           SWI      +22
   1682                  }
   1683                  XMLNode* item = XML_Get_Child_Node_By_Name(x_node,"item");
   \                     ??Process_Presence_Change_31:
   \   00000648   9400A0E3           MOV      R0,#+148
   \   0000064C   500E80E3           ORR      R0,R0,#0x500
   \   00000650   051080E0           ADD      R1,R0,R5
   \   00000654   18009DE5           LDR      R0,[SP, #+24]
   \   00000658   ........           _BLF     XML_Get_Child_Node_By_Name,??XML_Get_Child_Node_By_Name??rA
   \   0000065C   0080B0E1           MOVS     R8,R0
   1684                  if(item)
   \   00000660   1D00000A           BEQ      ??Process_Presence_Change_33
   1685                  {
   1686                    XMLNode* actor = XML_Get_Child_Node_By_Name(item,loc_actor); // Вдруг сервис был настолько любезен, что соообщил исполнителя
   \   00000664   34108DE2           ADD      R1,SP,#+52
   \   00000668   ........           _BLF     XML_Get_Child_Node_By_Name,??XML_Get_Child_Node_By_Name??rA
   1687                    if(actor)strcat(r, XML_Get_Attr_Value(loc_jid, actor->attr));
   \   0000066C   000050E3           CMP      R0,#+0
   \   00000670   0500000A           BEQ      ??Process_Presence_Change_34
   \   00000674   0C1090E5           LDR      R1,[R0, #+12]
   \   00000678   20008DE2           ADD      R0,SP,#+32
   \   0000067C   ........           _BLF     XML_Get_Attr_Value,??XML_Get_Attr_Value??rA
   \   00000680   0010A0E1           MOV      R1,R0
   \   00000684   3C0089E2           ADD      R0,R9,#+60
   \   00000688   170000EF           SWI      +23
   1688          
   1689                    XMLNode* reason = XML_Get_Child_Node_By_Name(item,loc_reason); // А вдруг нам даже сказали, за что?
   \                     ??Process_Presence_Change_34:
   \   0000068C   3C108DE2           ADD      R1,SP,#+60
   \   00000690   0800A0E1           MOV      R0,R8
   \   00000694   ........           _BLF     XML_Get_Child_Node_By_Name,??XML_Get_Child_Node_By_Name??rA
   \   00000698   0080B0E1           MOVS     R8,R0
   1690                    if(reason)
   \   0000069C   0E00000A           BEQ      ??Process_Presence_Change_33
   1691                    {
   1692                      strcat(r, "; Reason: ");
   \   000006A0   2400A0E3           MOV      R0,#+36
   \   000006A4   700E80E3           ORR      R0,R0,#0x700
   \   000006A8   051080E0           ADD      R1,R0,R5
   \   000006AC   3C0089E2           ADD      R0,R9,#+60
   \   000006B0   170000EF           SWI      +23
   1693                      int l = strlen(r);
   \   000006B4   3C0089E2           ADD      R0,R9,#+60
   \   000006B8   1B0000EF           SWI      +27
   \   000006BC   FF10A0E3           MOV      R1,#+255
   \   000006C0   401F81E3           ORR      R1,R1,#0x100
   \   000006C4   002041E0           SUB      R2,R1,R0
   \   000006C8   010052E3           CMP      R2,#+1
   \   000006CC   020000BA           BLT      ??Process_Presence_Change_33
   1694                      if(MAX_STATUS_LEN-l-1>0)strncat(r, reason->value, MAX_STATUS_LEN-l-1);
   \   000006D0   101098E5           LDR      R1,[R8, #+16]
   \   000006D4   3C0089E2           ADD      R0,R9,#+60
   \   000006D8   140100EF           SWI      +276
   1695                    }
   1696                  }
   1697                  char *ansi_r = convUTF8_to_ANSI_STR(r);
   \                     ??Process_Presence_Change_33:
   \   000006DC   3C0089E2           ADD      R0,R9,#+60
   \   000006E0   ........           _BLF     convUTF8_to_ANSI_STR,??convUTF8_to_ANSI_STR??rA
   \   000006E4   0050A0E1           MOV      R5,R0
   1698                  MsgBoxError(1,(int)ansi_r);
   \   000006E8   0510A0E1           MOV      R1,R5
   \   000006EC   0100A0E3           MOV      R0,#+1
   \   000006F0   4E0000EF           SWI      +78
   1699                  mfree(ansi_r);
   \   000006F4   0500A0E1           MOV      R0,R5
   \   000006F8   150000EF           SWI      +21
   1700                  CList_AddSystemMessage(Conference->JID,status, r);
   \   000006FC   000097E5           LDR      R0,[R7, #+0]
   \   00000700   3C2089E2           ADD      R2,R9,#+60
   \   00000704   0610A0E1           MOV      R1,R6
   \   00000708   ........           _BLF     CList_AddSystemMessage,??CList_AddSystemMessage??rA
   1701                  msg = r;
   \   0000070C   3C1089E2           ADD      R1,R9,#+60
   \   00000710   08108DE5           STR      R1,[SP, #+8]
   1702                }
   1703          
   1704              }
   1705          
   1706            TRESOURCE *ResEx = CList_AddResourceWithPresence(from, status, msg, priority);
   \                     ??Process_Presence_Change_8:
   \   00000714   24309DE5           LDR      R3,[SP, #+36]
   \   00000718   04009DE5           LDR      R0,[SP, #+4]
   \   0000071C   08209DE5           LDR      R2,[SP, #+8]
   \   00000720   0338A0E1           MOV      R3,R3, LSL #+16
   \   00000724   4338A0E1           MOV      R3,R3, ASR #+16
   \   00000728   0610A0E1           MOV      R1,R6
   \   0000072C   ........           _BLF     CList_AddResourceWithPresence,??CList_AddResourceWithPresence??rA
   \   00000730   0050A0E1           MOV      R5,R0
   1707            if(Req_Set_Role) CList_MUC_SetRole(from, priv);
   \   00000734   00005AE3           CMP      R10,#+0
   \   00000738   0500000A           BEQ      ??Process_Presence_Change_35
   \   0000073C   10008DE2           ADD      R0,SP,#+16
   \   00000740   030090E8           LDM      R0,{R0,R1}
   \   00000744   0120A0E1           MOV      R2,R1
   \   00000748   0010A0E1           MOV      R1,R0
   \   0000074C   04009DE5           LDR      R0,[SP, #+4]
   \   00000750   ........           _BLF     CList_MUC_SetRole,??CList_MUC_SetRole??rA
   1708            if(real_jid)
   \                     ??Process_Presence_Change_35:
   \   00000754   000054E3           CMP      R4,#+0
   \   00000758   0600000A           BEQ      ??Process_Presence_Change_1
   1709            {
   1710              ResEx->muc_privs.real_jid = malloc(strlen(real_jid)+1);
   \   0000075C   0400A0E1           MOV      R0,R4
   \   00000760   1B0000EF           SWI      +27
   \   00000764   010080E2           ADD      R0,R0,#+1
   \   00000768   140000EF           SWI      +20
   \   0000076C   240085E5           STR      R0,[R5, #+36]
   1711              strcpy(ResEx->muc_privs.real_jid, real_jid);
   \   00000770   0410A0E1           MOV      R1,R4
   \   00000774   1A0000EF           SWI      +26
   \                     ??Process_Presence_Change_1:
   \   00000778   70D08DE2           ADD      SP,SP,#+112      ;; stack cleaning
   \   0000077C   F08FBDE8           POP      {R4-R11,PC}      ;; return
   \                     ??Process_Presence_Change_0:
   \   00000780   ........           DC32     `?<Constant "actor">`
   \   00000784   ........           DC32     `?<Constant "jid">_2`
   \   00000788   ........           DC32     `?<Constant "reason">`
   \   0000078C   ........           DC32     `?<Constant "xmlns">_2`
   \   00000790   ........           DC32     `?<Constant "x">_1`
   \   00000794   ........           DC32     sndOnline
   \   00000798   ........           DC32     sndOffline
   1712            }
   1713          }

   \                                 In segment DATA_I, align 4, align-sorted
   \                     OnlineInfo:
   \   00000000                      DS8 8
   \   00000008                      REQUIRE `?<Initializer for OnlineInfo>`
   \                     muctop:
   \   00000008                      DS8 4
   \   0000000C                      REQUIRE `?<Initializer for muctop>`
   \                     PRESENCES:
   \   0000000C                      DS8 48
   \   0000003C                      REQUIRE `?<Initializer for PRESENCES>`
   \   0000003C                      DS8 512
   \   0000023C                      REQUIRE `?<Initializer for r>`

   \                                 In segment DATA_I, align 4, align-sorted
   \                     JABBER_AFFS:
   \   00000000                      DS8 20
   \   00000014                      REQUIRE `?<Initializer for JABBER_AFFS>`
   \                     JABBER_ROLS:
   \   00000014                      DS8 16
   \   00000024                      REQUIRE `?<Initializer for JABBER_ROLS>`

   \                                 In segment DATA_I, align 4, align-sorted
   \                     auth_id:
   \   00000000                      DS8 16
   \   00000010                      REQUIRE `?<Initializer for auth_id>`
   \                     rost_id:
   \   00000010                      DS8 16
   \   00000020                      REQUIRE `?<Initializer for rost_id>`
   \                     vreq_id:
   \   00000020                      DS8 16
   \   00000030                      REQUIRE `?<Initializer for vreq_id>`
   \                     priv_id:
   \   00000030                      DS8 16
   \   00000040                      REQUIRE `?<Initializer for priv_id>`
   \                     treq_id:
   \   00000040                      DS8 16
   \   00000050                      REQUIRE `?<Initializer for treq_id>`
   \                     vcreq_id:
   \   00000050                      DS8 16
   \   00000060                      REQUIRE `?<Initializer for vcreq_id>`
   \                     lastact_id:
   \   00000060                      DS8 20
   \   00000074                      REQUIRE `?<Initializer for lastact_id>`
   1714          

   \                                 In segment CODE, align 4, keep-with-next
   1715          MESS_TYPE Get_Message_Type(char* mess_type_str)
   1716          {
   1717            char m_chat[]=MSGSTR_CHAT;
   \                     Get_Message_Type:
   \   00000000   68109FE5           LDR      R1,??Get_Message_Type_0  ;; `?<Constant "chat">_1`
   \   00000004   10402DE9           PUSH     {R4,LR}
   \   00000008   14D04DE2           SUB      SP,SP,#+20
   \   0000000C   0C0091E8           LDM      R1,{R2,R3}
   1718            char m_gchat[]=MSGSTR_GCHAT;
   \   00000010   5C109FE5           LDR      R1,??Get_Message_Type_0+0x4  ;; `?<Constant "groupchat">_1`
   \   00000014   0040A0E1           MOV      R4,R0
   \   00000018   0D00A0E1           MOV      R0,SP
   \   0000001C   0C0080E8           STM      R0,{R2,R3}
   \   00000020   0C1091E8           LDM      R1,{R2,R3,R12}
   \   00000024   08008DE2           ADD      R0,SP,#+8
   \   00000028   0C1080E8           STM      R0,{R2,R3,R12}
   1719            if(!mess_type_str)return MSG_NORMAL;
   \   0000002C   000054E3           CMP      R4,#+0
   \   00000030   0B00000A           BEQ      ??Get_Message_Type_1
   1720            if(!strcmp(mess_type_str,m_chat ))return MSG_CHAT;
   \   00000034   0D10A0E1           MOV      R1,SP
   \   00000038   0400A0E1           MOV      R0,R4
   \   0000003C   190000EF           SWI      +25
   \   00000040   000050E3           CMP      R0,#+0
   \   00000044   0200A003           MOVEQ    R0,#+2
   \   00000048   0600000A           BEQ      ??Get_Message_Type_2
   1721            if(!strcmp(mess_type_str,m_gchat ))return MSG_GCHAT;
   \   0000004C   08108DE2           ADD      R1,SP,#+8
   \   00000050   0400A0E1           MOV      R0,R4
   \   00000054   190000EF           SWI      +25
   \   00000058   000050E3           CMP      R0,#+0
   \   0000005C   0300A003           MOVEQ    R0,#+3
   \   00000060   0000000A           BEQ      ??Get_Message_Type_2
   1722            return MSG_NORMAL;
   \                     ??Get_Message_Type_1:
   \   00000064   0000A0E3           MOV      R0,#+0
   \                     ??Get_Message_Type_2:
   \   00000068   14D08DE2           ADD      SP,SP,#+20       ;; stack cleaning
   \   0000006C   1080BDE8           POP      {R4,PC}          ;; return
   \                     ??Get_Message_Type_0:
   \   00000070   ........           DC32     `?<Constant "chat">_1`
   \   00000074   ........           DC32     `?<Constant "groupchat">_1`
   1723          }
   1724          
   1725          //Context: HELPER

   \                                 In segment CODE, align 4, keep-with-next
   1726          void _mucadmincmd(char* room, char* iq_payload)
   1727          {
   \                     _mucadmincmd:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   10D04DE2           SUB      SP,SP,#+16
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
   1728            //char* to, char* type, char* id, char* xmlns, char* payload
   1729            char admin_iqid[]="SieJC_adm";
   \   00000010   4C109FE5           LDR      R1,??_mucadmincmd_0  ;; `?<Constant "SieJC_adm">`
   \   00000014   04008DE2           ADD      R0,SP,#+4
   \   00000018   0C1091E8           LDM      R1,{R2,R3,R12}
   1730            char iqtypeset[]=IQTYPE_SET;
   \   0000001C   0D10A0E1           MOV      R1,SP
   \   00000020   0C1080E8           STM      R0,{R2,R3,R12}
   \   00000024   3C009FE5           LDR      R0,??_mucadmincmd_0+0x4  ;; `?<Constant "set">_2`
   \   00000028   002090E5           LDR      R2,[R0, #0]
   1731            SendIq(room, iqtypeset, admin_iqid, XMLNS_MUC_ADMIN, iq_payload);
   \   0000002C   043080E2           ADD      R3,R0,#+4
   \   00000030   002081E5           STR      R2,[R1, #+0]
   \   00000034   0510A0E1           MOV      R1,R5
   \   00000038   02002DE9           PUSH     {R1}
   \   0000003C   08208DE2           ADD      R2,SP,#+8
   \   00000040   0400A0E1           MOV      R0,R4
   \   00000044   04108DE2           ADD      R1,SP,#+4
   \   00000048   ........           BL       SendIq
   1732            mfree(iq_payload);
   \   0000004C   0500A0E1           MOV      R0,R5
   \   00000050   150000EF           SWI      +21
   1733            mfree(room);
   \   00000054   0400A0E1           MOV      R0,R4
   \   00000058   150000EF           SWI      +21
   1734          }
   \   0000005C   14D08DE2           ADD      SP,SP,#+20
   \   00000060   3080BDE8           POP      {R4,R5,PC}       ;; return
   \                     ??_mucadmincmd_0:
   \   00000064   ........           DC32     `?<Constant "SieJC_adm">`
   \   00000068   ........           DC32     `?<Constant "set">_2`
   1735          
   1736          // Исполнение административных команд

   \                                 In segment CODE, align 4, keep-with-next
   1737          void MUC_Admin_Command(char* room_name, char* room_jid, MUC_ADMIN cmd, char* reason)
   1738          {
   \                     MUC_Admin_Command:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000004   70D04DE2           SUB      SP,SP,#+112
   \   00000008   0080A0E1           MOV      R8,R0
   \   0000000C   0160A0E1           MOV      R6,R1
   \   00000010   0270A0E1           MOV      R7,R2
   \   00000014   0340A0E1           MOV      R4,R3
   1739            char* payload = malloc(1024);
   \   00000018   400EA0E3           MOV      R0,#+1024
   \   0000001C   140000EF           SWI      +20
   \   00000020   0050A0E1           MOV      R5,R0
   1740            char *_room_name = Mask_Special_Syms(room_name);
   \   00000024   0800A0E1           MOV      R0,R8
   \   00000028   ........           _BLF     Mask_Special_Syms,??Mask_Special_Syms??rA
   1741            char payload_tpl[]="<item nick='%s' %s='%s'><reason>%s</reason></item>";
   \   0000002C   68119FE5           LDR      R1,??MUC_Admin_Command_1  ;; `?<Constant "<item nick=\\'%s\\' %s=\\'%...">`
   \   00000030   0080A0E1           MOV      R8,R0
   \   00000034   0C5EB1E8           LDM      R1!,{R2,R3,R9-R12,LR}
   \   00000038   3C008DE2           ADD      R0,SP,#+60
   \   0000003C   0C5EA0E8           STM      R0!,{R2,R3,R9-R12,LR}
   \   00000040   0C5691E8           LDM      R1,{R2,R3,R9,R10,R12,LR}
   1742            char it[20];
   1743            char val[20];
   1744            char aff[]="affiliation";
   \   00000044   54119FE5           LDR      R1,??MUC_Admin_Command_1+0x4  ;; `?<Constant "affiliation">_1`
   \   00000048   0C5680E8           STM      R0,{R2,R3,R9,R10,R12,LR}
   \   0000004C   0C0291E8           LDM      R1,{R2,R3,R9}
   1745            char role[]="role";
   \   00000050   4C119FE5           LDR      R1,??MUC_Admin_Command_1+0x8  ;; `?<Constant "role">_1`
   \   00000054   30008DE2           ADD      R0,SP,#+48
   \   00000058   0C0280E8           STM      R0,{R2,R3,R9}
   \   0000005C   0C0091E8           LDM      R1,{R2,R3}
   1746            switch(cmd)
   \   00000060   ........           LDR      R9,??DataTable95  ;; JABBER_AFFS
   \   00000064   0D00A0E1           MOV      R0,SP
   \   00000068   0C0080E8           STM      R0,{R2,R3}
   \   0000006C   090057E3           CMP      R7,#+9
   \   00000070   3300008A           BHI      ??MUC_Admin_Command_2
   \   00000074   010F8FE2           ADR      R0,??MUC_Admin_Command_0
   \   00000078   0700D0E7           LDRB     R0,[R0, R7]
   \   0000007C   00F18FE0           ADD      PC,PC,R0, LSL #+2
   \                     ??MUC_Admin_Command_0:
   \   00000080   022A070C           DC8      +2,+42,+7,+12
   \   00000084   11161B0C           DC8      +17,+22,+27,+12
   \   00000088   20250000           DC8      +32,+37,+0,+0
   1747            {
   1748            case ADM_KICK:
   1749              {
   1750                strcpy(it,role);
   \                     ??MUC_Admin_Command_3:
   \   0000008C   0D10A0E1           MOV      R1,SP
   \   00000090   08008DE2           ADD      R0,SP,#+8
   \   00000094   1A0000EF           SWI      +26
   1751                strcpy(val,JABBER_ROLS[ROLE_NONE]);
   \   00000098   141099E5           LDR      R1,[R9, #+20]
   \   0000009C   260000EA           B        ??MUC_Admin_Command_4
   1752                break;
   1753              }
   1754            case ADM_VOICE_REMOVE:
   1755              {
   1756                strcpy(it,role);
   \                     ??MUC_Admin_Command_5:
   \   000000A0   0D10A0E1           MOV      R1,SP
   \   000000A4   08008DE2           ADD      R0,SP,#+8
   \   000000A8   1A0000EF           SWI      +26
   1757                strcpy(val,JABBER_ROLS[ROLE_VISITOR]);
   \   000000AC   181099E5           LDR      R1,[R9, #+24]
   \   000000B0   210000EA           B        ??MUC_Admin_Command_4
   1758                break;
   1759              }
   1760            case ADM_VOICE_GRANT:
   1761              {
   1762                strcpy(it,role);
   \                     ??MUC_Admin_Command_6:
   \   000000B4   0D10A0E1           MOV      R1,SP
   \   000000B8   08008DE2           ADD      R0,SP,#+8
   \   000000BC   1A0000EF           SWI      +26
   1763                strcpy(val,JABBER_ROLS[ROLE_PARTICIPANT]);
   \   000000C0   1C1099E5           LDR      R1,[R9, #+28]
   \   000000C4   1C0000EA           B        ??MUC_Admin_Command_4
   1764                break;
   1765              }
   1766          
   1767            case ADM_PARTICIPANT:
   1768              {
   1769                strcpy(it,aff);
   \                     ??MUC_Admin_Command_7:
   \   000000C8   30108DE2           ADD      R1,SP,#+48
   \   000000CC   08008DE2           ADD      R0,SP,#+8
   \   000000D0   1A0000EF           SWI      +26
   1770                strcpy(val,JABBER_AFFS[AFFILIATION_NONE]);
   \   000000D4   001099E5           LDR      R1,[R9, #+0]
   \   000000D8   170000EA           B        ??MUC_Admin_Command_4
   1771                break;
   1772              }
   1773          
   1774            case ADM_MEMBER:
   1775              {
   1776                strcpy(it,aff);
   \                     ??MUC_Admin_Command_8:
   \   000000DC   30108DE2           ADD      R1,SP,#+48
   \   000000E0   08008DE2           ADD      R0,SP,#+8
   \   000000E4   1A0000EF           SWI      +26
   1777                strcpy(val,JABBER_AFFS[AFFILIATION_MEMBER]);
   \   000000E8   081099E5           LDR      R1,[R9, #+8]
   \   000000EC   120000EA           B        ??MUC_Admin_Command_4
   1778                break;
   1779              }
   1780          
   1781            case ADM_MODERATOR:
   1782              {
   1783                strcpy(it,role);
   \                     ??MUC_Admin_Command_9:
   \   000000F0   0D10A0E1           MOV      R1,SP
   \   000000F4   08008DE2           ADD      R0,SP,#+8
   \   000000F8   1A0000EF           SWI      +26
   1784                strcpy(val,JABBER_ROLS[ROLE_MODERATOR]);
   \   000000FC   201099E5           LDR      R1,[R9, #+32]
   \   00000100   0D0000EA           B        ??MUC_Admin_Command_4
   1785                break;
   1786              }
   1787           case ADM_MODERATOR_REMOVE:
   1788              {
   1789                strcpy(it,role);
   1790                strcpy(val,JABBER_ROLS[ROLE_PARTICIPANT]);
   1791                break;
   1792              }
   1793          
   1794            case ADM_ADMIN:
   1795              {
   1796                strcpy(it,aff);
   \                     ??MUC_Admin_Command_10:
   \   00000104   30108DE2           ADD      R1,SP,#+48
   \   00000108   08008DE2           ADD      R0,SP,#+8
   \   0000010C   1A0000EF           SWI      +26
   1797                strcpy(val,JABBER_AFFS[AFFILIATION_ADMIN]);
   \   00000110   0C1099E5           LDR      R1,[R9, #+12]
   \   00000114   080000EA           B        ??MUC_Admin_Command_4
   1798                break;
   1799              }
   1800          
   1801            case ADM_OWNER:
   1802              {
   1803                strcpy(it,aff);
   \                     ??MUC_Admin_Command_11:
   \   00000118   30108DE2           ADD      R1,SP,#+48
   \   0000011C   08008DE2           ADD      R0,SP,#+8
   \   00000120   1A0000EF           SWI      +26
   1804                strcpy(val,JABBER_AFFS[AFFILIATION_OWNER]);
   \   00000124   101099E5           LDR      R1,[R9, #+16]
   \   00000128   030000EA           B        ??MUC_Admin_Command_4
   1805                break;
   1806              }
   1807          
   1808            case ADM_BAN:
   1809              {
   1810                strcpy(it,aff);
   \                     ??MUC_Admin_Command_12:
   \   0000012C   30108DE2           ADD      R1,SP,#+48
   \   00000130   08008DE2           ADD      R0,SP,#+8
   \   00000134   1A0000EF           SWI      +26
   1811                strcpy(val,JABBER_AFFS[AFFILIATION_OUTCAST]);
   \   00000138   041099E5           LDR      R1,[R9, #+4]
   \                     ??MUC_Admin_Command_4:
   \   0000013C   1C008DE2           ADD      R0,SP,#+28
   \   00000140   1A0000EF           SWI      +26
   1812                break;
   1813              }
   1814          
   1815            }
   1816          
   1817            char *_room_jid = Mask_Special_Syms(room_jid);
   \                     ??MUC_Admin_Command_2:
   \   00000144   0600A0E1           MOV      R0,R6
   \   00000148   ........           _BLF     Mask_Special_Syms,??Mask_Special_Syms??rA
   \   0000014C   0060A0E1           MOV      R6,R0
   1818            snprintf(payload, 1023, payload_tpl, _room_jid, it, val, reason);
   \   00000150   10002DE9           PUSH     {R4}
   \   00000154   20008DE2           ADD      R0,SP,#+32
   \   00000158   01002DE9           PUSH     {R0}
   \   0000015C   0630A0E1           MOV      R3,R6
   \   00000160   FF10A0E3           MOV      R1,#+255
   \   00000164   C01F81E3           ORR      R1,R1,#0x300
   \   00000168   10008DE2           ADD      R0,SP,#+16
   \   0000016C   01002DE9           PUSH     {R0}
   \   00000170   48208DE2           ADD      R2,SP,#+72
   \   00000174   0500A0E1           MOV      R0,R5
   \   00000178   1B0100EF           SWI      +283
   1819            mfree(_room_jid);
   \   0000017C   0600A0E1           MOV      R0,R6
   \   00000180   150000EF           SWI      +21
   1820            SUBPROC((void*)_mucadmincmd, _room_name, payload);
   \   00000184   1C009FE5           LDR      R0,??MUC_Admin_Command_1+0xC  ;; _mucadmincmd
   \   00000188   0520A0E1           MOV      R2,R5
   \   0000018C   0810A0E1           MOV      R1,R8
   \   00000190   710100EF           SWI      +369
   1821          }
   \   00000194   7CD08DE2           ADD      SP,SP,#+124
   \   00000198   F08FBDE8           POP      {R4-R11,PC}      ;; return
   \                     ??MUC_Admin_Command_1:
   \   0000019C   ........           DC32     `?<Constant "<item nick=\\'%s\\' %s=\\'%...">`
   \   000001A0   ........           DC32     `?<Constant "affiliation">_1`
   \   000001A4   ........           DC32     `?<Constant "role">_1`
   \   000001A8   ........           DC32     _mucadmincmd
   1822          
   1823          static void Report_Delivery(char *mess_id, char *to)
   1824          {
   1825          /*
   1826          RECV:
   1827            <message
   1828              from='kingrichard@royalty.england.lit/throne'
   1829              id='richard2-4.1.247'
   1830              to='northumberland@shakespeare.lit/westminster'>
   1831            <received xmlns='urn:xmpp:receipts'/>
   1832          </message>
   1833          */
   1834            char notif_tpl[]="<message to='%s' from='%s' id='%s'><received xmlns='urn:xmpp:receipts'/></message>";
   1835            char *ans = malloc(256);
   1836            char *_from = Mask_Special_Syms(My_JID_full);
   1837            snprintf(ans,256,notif_tpl, Mask_Special_Syms(to), _from, mess_id);
   1838            SUBPROC((void*)_sendandfree,ans);
   1839            mfree(_from);
   1840          }
   1841          
   1842          /*
   1843          Входящие сообщения
   1844          */

   \                                 In segment CODE, align 4, keep-with-next
   1845          void Process_Incoming_Message(XMLNode* nodeEx)
   1846          {
   1847            char Is_subj=0;
   1848            char from[]="from";
   \                     Process_Incoming_Message:
   \   00000000   A8149FE5           LDR      R1,??Process_Incoming_Message_0  ;; `?<Constant "from">_1`
   \   00000004   F0472DE9           PUSH     {R4-R10,LR}
   \   00000008   6CD04DE2           SUB      SP,SP,#+108
   \   0000000C   0C0091E8           LDM      R1,{R2,R3}
   1849            char c_xmlns[]="xmlns";
   \   00000010   9C149FE5           LDR      R1,??Process_Incoming_Message_0+0x4  ;; `?<Constant "xmlns">`
   1850            char c_id[]="id";
   1851          
   1852            // Если включено обслуживание запросов о получении...
   1853            
   1854              XMLNode* xnode = XML_Get_Child_Node_By_Name(nodeEx,"x");
   1855              if(xnode)
   \   00000014   ........           LDR      R6,??DataTable87  ;; `?<Constant "<feature var=\\'urn:xmp...">`
   \   00000018   0040A0E1           MOV      R4,R0
   \   0000001C   0D00A0E1           MOV      R0,SP
   \   00000020   0C0080E8           STM      R0,{R2,R3}
   \   00000024   0C0091E8           LDM      R1,{R2,R3}
   \   00000028   88149FE5           LDR      R1,??Process_Incoming_Message_0+0x8  ;; `?<Constant "id">`
   \   0000002C   08008DE2           ADD      R0,SP,#+8
   \   00000030   0C0080E8           STM      R0,{R2,R3}
   \   00000034   0020D1E5           LDRB     R2,[R1, #0]
   \   00000038   10008DE2           ADD      R0,SP,#+16
   \   0000003C   0050A0E3           MOV      R5,#+0
   \   00000040   0020C0E5           STRB     R2,[R0, #+0]
   \   00000044   0120D1E5           LDRB     R2,[R1, #+1]
   \   00000048   0120C0E5           STRB     R2,[R0, #+1]
   \   0000004C   0220D1E5           LDRB     R2,[R1, #+2]
   \   00000050   F21F8FE2           ADR      R1,??Process_Incoming_Message_1  ;; "x"
   \   00000054   0220C0E5           STRB     R2,[R0, #+2]
   \   00000058   0400A0E1           MOV      R0,R4
   \   0000005C   ........           _BLF     XML_Get_Child_Node_By_Name,??XML_Get_Child_Node_By_Name??rA
   \   00000060   0070B0E1           MOVS     R7,R0
   \   00000064   2100000A           BEQ      ??Process_Incoming_Message_2
   1856              {
   1857                char *xmlns = XML_Get_Attr_Value(c_xmlns,xnode->attr);
   \   00000068   0C1097E5           LDR      R1,[R7, #+12]
   \   0000006C   08008DE2           ADD      R0,SP,#+8
   \   00000070   ........           _BLF     XML_Get_Attr_Value,??XML_Get_Attr_Value??rA
   1858                if(xmlns)
   \   00000074   000050E3           CMP      R0,#+0
   \   00000078   1C00000A           BEQ      ??Process_Incoming_Message_2
   1859                {
   1860                if(!strcmp(xmlns,XMLNS_MUC_USER)) //обработка invite
   \   0000007C   731E86E2           ADD      R1,R6,#+1840
   \   00000080   190000EF           SWI      +25
   \   00000084   000050E3           CMP      R0,#+0
   \   00000088   1800001A           BNE      ??Process_Incoming_Message_2
   1861                {
   1862                 XMLNode *invite =  XML_Get_Child_Node_By_Name(xnode,"invite");
   1863                 if(invite)
   \   0000008C   241086E2           ADD      R1,R6,#+36
   \   00000090   0700A0E1           MOV      R0,R7
   \   00000094   ........           _BLF     XML_Get_Child_Node_By_Name,??XML_Get_Child_Node_By_Name??rA
   \   00000098   000050E3           CMP      R0,#+0
   \   0000009C   1300000A           BEQ      ??Process_Incoming_Message_2
   1864                 {
   1865                  MUC_ITEM* muct = CList_FindMUCByJID(XML_Get_Attr_Value(from,nodeEx->attr)); 
   1866                  if(!muct) //если еще нетты такой конфы то добавим в список muctop, а вдруг зайдем
   \   000000A0   0C1094E5           LDR      R1,[R4, #+12]
   \   000000A4   0D00A0E1           MOV      R0,SP
   \   000000A8   ........           _BLF     XML_Get_Attr_Value,??XML_Get_Attr_Value??rA
   \   000000AC   ........           _BLF     CList_FindMUCByJID,??CList_FindMUCByJID??rA
   \   000000B0   000050E3           CMP      R0,#+0
   \   000000B4   0D00001A           BNE      ??Process_Incoming_Message_2
   1867                  {
   1868                    CList_AddContact(XML_Get_Attr_Value(from,nodeEx->attr),XML_Get_Attr_Value(from,nodeEx->attr), SUB_BOTH, 0, 129);
   \   000000B8   0C1094E5           LDR      R1,[R4, #+12]
   \   000000BC   0D00A0E1           MOV      R0,SP
   \   000000C0   ........           _BLF     XML_Get_Attr_Value,??XML_Get_Attr_Value??rA
   \   000000C4   0C1094E5           LDR      R1,[R4, #+12]
   \   000000C8   0070A0E1           MOV      R7,R0
   \   000000CC   0D00A0E1           MOV      R0,SP
   \   000000D0   ........           _BLF     XML_Get_Attr_Value,??XML_Get_Attr_Value??rA
   \   000000D4   8110A0E3           MOV      R1,#+129
   \   000000D8   02002DE9           PUSH     {R1}
   \   000000DC   0030A0E3           MOV      R3,#+0
   \   000000E0   0320A0E3           MOV      R2,#+3
   \   000000E4   0710A0E1           MOV      R1,R7
   \   000000E8   ........           _BLF     CList_AddContact,??CList_AddContact??rA
   \   000000EC   04D08DE2           ADD      SP,SP,#+4
   1869                  }
   1870                 }
   1871                } //end invite
   1872          
   1873               }
   1874              }
   1875          
   1876            //обработка attention xep-0224
   1877             XMLNode *attention =  XML_Get_Child_Node_By_Name(nodeEx,"attention");
   \                     ??Process_Incoming_Message_2:
   \   000000F0   2C1086E2           ADD      R1,R6,#+44
   \   000000F4   0400A0E1           MOV      R0,R4
   \   000000F8   ........           _BLF     XML_Get_Child_Node_By_Name,??XML_Get_Child_Node_By_Name??rA
   1878             if(attention && USE_ATTENTION)
   \   000000FC   000050E3           CMP      R0,#+0
   \   00000100   0E00000A           BEQ      ??Process_Incoming_Message_3
   \   00000104   ........           LDR      R1,??DataTable88  ;; USE_ATTENTION
   \   00000108   001091E5           LDR      R1,[R1, #+0]
   \   0000010C   000051E3           CMP      R1,#+0
   \   00000110   0A00000A           BEQ      ??Process_Incoming_Message_3
   1879             {
   1880               char *xmlnsa = XML_Get_Attr_Value(c_xmlns,attention->attr);
   \   00000114   0C1090E5           LDR      R1,[R0, #+12]
   \   00000118   08008DE2           ADD      R0,SP,#+8
   \   0000011C   ........           _BLF     XML_Get_Attr_Value,??XML_Get_Attr_Value??rA
   1881               if (xmlnsa)
   \   00000120   000050E3           CMP      R0,#+0
   \   00000124   0500000A           BEQ      ??Process_Incoming_Message_3
   1882                 if(!strcmp(xmlnsa,JABBER_URN_ATTENTION)) 
   \   00000128   381086E2           ADD      R1,R6,#+56
   \   0000012C   190000EF           SWI      +25
   \   00000130   000050E3           CMP      R0,#+0
   \   00000134   0100001A           BNE      ??Process_Incoming_Message_3
   1883                 {
   1884                   //ShowMSG(1,(int)"Agtung!");
   1885                   Vibrate(2);
   \   00000138   0200A0E3           MOV      R0,#+2
   \   0000013C   ........           _BLF     Vibrate,??Vibrate??rA
   1886                 }
   1887             } //end attention
   1888          
   1889              // delivery
   1890              if(DELIVERY_EVENTS)
   \                     ??Process_Incoming_Message_3:
   \   00000140   ........           LDR      R0,??DataTable89  ;; DELIVERY_EVENTS
   \   00000144   000090E5           LDR      R0,[R0, #+0]
   \   00000148   000050E3           CMP      R0,#+0
   \   0000014C   4500000A           BEQ      ??Process_Incoming_Message_4
   1891              {
   1892              xnode = XML_Get_Child_Node_By_Name(nodeEx,"request");
   \   00000150   501086E2           ADD      R1,R6,#+80
   \   00000154   0400A0E1           MOV      R0,R4
   \   00000158   ........           _BLF     XML_Get_Child_Node_By_Name,??XML_Get_Child_Node_By_Name??rA
   1893              if(xnode)
   \   0000015C   000050E3           CMP      R0,#+0
   \   00000160   2E00000A           BEQ      ??Process_Incoming_Message_5
   1894                {
   1895                char *xmlns = XML_Get_Attr_Value(c_xmlns,xnode->attr);
   \   00000164   0C1090E5           LDR      R1,[R0, #+12]
   \   00000168   08008DE2           ADD      R0,SP,#+8
   \   0000016C   ........           _BLF     XML_Get_Attr_Value,??XML_Get_Attr_Value??rA
   1896                if(xmlns)
   \   00000170   000050E3           CMP      R0,#+0
   \   00000174   2900000A           BEQ      ??Process_Incoming_Message_5
   1897                 {
   1898                 if(!strcmp(xmlns,"urn:xmpp:receipts"))
   \   00000178   581086E2           ADD      R1,R6,#+88
   \   0000017C   190000EF           SWI      +25
   \   00000180   000050E3           CMP      R0,#+0
   \   00000184   2500001A           BNE      ??Process_Incoming_Message_5
   1899                  {
   1900                    char *id = XML_Get_Attr_Value(c_id, nodeEx->attr);
   \   00000188   0C1094E5           LDR      R1,[R4, #+12]
   \   0000018C   10008DE2           ADD      R0,SP,#+16
   \   00000190   ........           _BLF     XML_Get_Attr_Value,??XML_Get_Attr_Value??rA
   \   00000194   0070B0E1           MOVS     R7,R0
   1901                    if(id)Report_Delivery(id, XML_Get_Attr_Value(from,nodeEx->attr));
   \   00000198   2000000A           BEQ      ??Process_Incoming_Message_5
   \   0000019C   0C1094E5           LDR      R1,[R4, #+12]
   \   000001A0   0D00A0E1           MOV      R0,SP
   \   000001A4   ........           _BLF     XML_Get_Attr_Value,??XML_Get_Attr_Value??rA
   \   000001A8   0C139FE5           LDR      R1,??Process_Incoming_Message_0+0xC  ;; `?<Constant "<message to=\\'%s\\' from...">`
   \   000001AC   0080A0E1           MOV      R8,R0
   \   000001B0   18008DE2           ADD      R0,SP,#+24
   \   000001B4   5430A0E3           MOV      R3,#+84
   \                     ??Process_Incoming_Message_6:
   \   000001B8   043053E2           SUBS     R3,R3,#+4
   \   000001BC   032091E7           LDR      R2,[R1, R3]
   \   000001C0   032080E7           STR      R2,[R0, R3]
   \   000001C4   FBFFFF1A           BNE      ??Process_Incoming_Message_6
   \   000001C8   400FA0E3           MOV      R0,#+256
   \   000001CC   140000EF           SWI      +20
   \   000001D0   0090A0E1           MOV      R9,R0
   \   000001D4   ........           LDR      R0,??DataTable90  ;; My_JID_full
   \   000001D8   ........           _BLF     Mask_Special_Syms,??Mask_Special_Syms??rA
   \   000001DC   00A0A0E1           MOV      R10,R0
   \   000001E0   0800A0E1           MOV      R0,R8
   \   000001E4   ........           _BLF     Mask_Special_Syms,??Mask_Special_Syms??rA
   \   000001E8   0030A0E1           MOV      R3,R0
   \   000001EC   80002DE9           PUSH     {R7}
   \   000001F0   0A00A0E1           MOV      R0,R10
   \   000001F4   01002DE9           PUSH     {R0}
   \   000001F8   20208DE2           ADD      R2,SP,#+32
   \   000001FC   401FA0E3           MOV      R1,#+256
   \   00000200   0900A0E1           MOV      R0,R9
   \   00000204   1B0100EF           SWI      +283
   \   00000208   ........           LDR      R0,??DataTable91  ;; _sendandfree
   \   0000020C   0910A0E1           MOV      R1,R9
   \   00000210   710100EF           SWI      +369
   \   00000214   0A00A0E1           MOV      R0,R10
   \   00000218   150000EF           SWI      +21
   \   0000021C   08D08DE2           ADD      SP,SP,#+8
   1902                  }
   1903                 }
   1904                }
   1905              xnode = XML_Get_Child_Node_By_Name(nodeEx,"received");
   \                     ??Process_Incoming_Message_5:
   \   00000220   6C1086E2           ADD      R1,R6,#+108
   \   00000224   0400A0E1           MOV      R0,R4
   \   00000228   ........           _BLF     XML_Get_Child_Node_By_Name,??XML_Get_Child_Node_By_Name??rA
   \   0000022C   0070B0E1           MOVS     R7,R0
   1906              if(xnode)
   \   00000230   0C00000A           BEQ      ??Process_Incoming_Message_4
   1907              {
   1908                char *xmlns = XML_Get_Attr_Value(c_xmlns,xnode->attr);
   \   00000234   0C1090E5           LDR      R1,[R0, #+12]
   \   00000238   08008DE2           ADD      R0,SP,#+8
   \   0000023C   ........           _BLF     XML_Get_Attr_Value,??XML_Get_Attr_Value??rA
   1909                if(xmlns)
   \   00000240   000050E3           CMP      R0,#+0
   \   00000244   0700000A           BEQ      ??Process_Incoming_Message_4
   1910                if(!strcmp(xmlns,"urn:xmpp:receipts"))
   \   00000248   581086E2           ADD      R1,R6,#+88
   \   0000024C   190000EF           SWI      +25
   \   00000250   000050E3           CMP      R0,#+0
   \   00000254   0300001A           BNE      ??Process_Incoming_Message_4
   1911                {
   1912                  TRESOURCE* Res_ex = CList_IsResourceInList(XML_Get_Attr_Value(from,nodeEx->attr));
   \   00000258   0C1094E5           LDR      R1,[R4, #+12]
   \   0000025C   0D00A0E1           MOV      R0,SP
   \   00000260   ........           _BLF     XML_Get_Attr_Value,??XML_Get_Attr_Value??rA
   \   00000264   ........           _BLF     CList_IsResourceInList,??CList_IsResourceInList??rA
   1913                  if(Res_ex)
   1914                  if((Res_ex->entry_type == T_NORMAL)||(Res_ex->entry_type == T_CONF_NODE))
   1915                  {
   1916                    //Пришло уведомление что наше сообщение получено, и как ето отобразить?
   1917                    // ShowMSG(1,(int)Res_ex->name);
   1918                  }
   1919                }
   1920              }
   1921              }
   1922              // composing
   1923              if(COMPOSING_EVENTS)
   \                     ??Process_Incoming_Message_4:
   \   00000268   ........           LDR      R0,??DataTable92  ;; COMPOSING_EVENTS
   \   0000026C   000090E5           LDR      R0,[R0, #+0]
   \   00000270   000050E3           CMP      R0,#+0
   \   00000274   3400000A           BEQ      ??Process_Incoming_Message_7
   1924              {
   1925              xnode = XML_Get_Child_Node_By_Name(nodeEx,"composing");
   \   00000278   781086E2           ADD      R1,R6,#+120
   \   0000027C   0400A0E1           MOV      R0,R4
   \   00000280   ........           _BLF     XML_Get_Child_Node_By_Name,??XML_Get_Child_Node_By_Name??rA
   1926              if(xnode)
   \   00000284   000050E3           CMP      R0,#+0
   \   00000288   1400000A           BEQ      ??Process_Incoming_Message_8
   1927              {
   1928                char *xmlns = XML_Get_Attr_Value(c_xmlns,xnode->attr);
   \   0000028C   0C1090E5           LDR      R1,[R0, #+12]
   \   00000290   08008DE2           ADD      R0,SP,#+8
   \   00000294   ........           _BLF     XML_Get_Attr_Value,??XML_Get_Attr_Value??rA
   1929                if(xmlns)
   \   00000298   000050E3           CMP      R0,#+0
   \   0000029C   0F00000A           BEQ      ??Process_Incoming_Message_8
   1930                if(!strcmp(xmlns,"http://jabber.org/protocol/chatstates"))
   \   000002A0   841086E2           ADD      R1,R6,#+132
   \   000002A4   190000EF           SWI      +25
   \   000002A8   000050E3           CMP      R0,#+0
   \   000002AC   0B00001A           BNE      ??Process_Incoming_Message_8
   1931                {
   1932                  TRESOURCE* Res_ex = CList_IsResourceInList(XML_Get_Attr_Value(from,nodeEx->attr));
   \   000002B0   0C1094E5           LDR      R1,[R4, #+12]
   \   000002B4   0D00A0E1           MOV      R0,SP
   \   000002B8   ........           _BLF     XML_Get_Attr_Value,??XML_Get_Attr_Value??rA
   \   000002BC   ........           _BLF     CList_IsResourceInList,??CList_IsResourceInList??rA
   1933                  if(Res_ex)
   \   000002C0   000050E3           CMP      R0,#+0
   \   000002C4   0500000A           BEQ      ??Process_Incoming_Message_8
   1934                  if((Res_ex->entry_type == T_NORMAL)||(Res_ex->entry_type == T_CONF_NODE))
   \   000002C8   0810D0E5           LDRB     R1,[R0, #+8]
   \   000002CC   000051E3           CMP      R1,#+0
   \   000002D0   03005113           CMPNE    R1,#+3
   \   000002D4   0100001A           BNE      ??Process_Incoming_Message_8
   1935                  CList_ChangeComposingStatus(Res_ex, 1);
   \   000002D8   0110A0E3           MOV      R1,#+1
   \   000002DC   ........           _BLF     CList_ChangeComposingStatus,??CList_ChangeComposingStatus??rA
   1936                }
   1937              }
   1938              xnode = XML_Get_Child_Node_By_Name(nodeEx,"active");
   \                     ??Process_Incoming_Message_8:
   \   000002E0   AC1086E2           ADD      R1,R6,#+172
   \   000002E4   0400A0E1           MOV      R0,R4
   \   000002E8   ........           _BLF     XML_Get_Child_Node_By_Name,??XML_Get_Child_Node_By_Name??rA
   \   000002EC   0070B0E1           MOVS     R7,R0
   1939              if(xnode)
   \   000002F0   1500000A           BEQ      ??Process_Incoming_Message_7
   1940              {
   1941                char *xmlns = XML_Get_Attr_Value(c_xmlns,xnode->attr);
   \   000002F4   0C1090E5           LDR      R1,[R0, #+12]
   \   000002F8   08008DE2           ADD      R0,SP,#+8
   \   000002FC   ........           _BLF     XML_Get_Attr_Value,??XML_Get_Attr_Value??rA
   1942                if(xmlns)
   \   00000300   000050E3           CMP      R0,#+0
   \   00000304   1000000A           BEQ      ??Process_Incoming_Message_7
   1943                if(!strcmp(xmlns,"http://jabber.org/protocol/chatstates"))
   \   00000308   841086E2           ADD      R1,R6,#+132
   \   0000030C   190000EF           SWI      +25
   \   00000310   000050E3           CMP      R0,#+0
   \   00000314   0C00001A           BNE      ??Process_Incoming_Message_7
   1944                {
   1945                  TRESOURCE* Res_ex = CList_IsResourceInList(XML_Get_Attr_Value(from,nodeEx->attr));
   \   00000318   0C1094E5           LDR      R1,[R4, #+12]
   \   0000031C   0D00A0E1           MOV      R0,SP
   \   00000320   ........           _BLF     XML_Get_Attr_Value,??XML_Get_Attr_Value??rA
   \   00000324   ........           _BLF     CList_IsResourceInList,??CList_IsResourceInList??rA
   1946                  if(Res_ex)
   \   00000328   000050E3           CMP      R0,#+0
   \   0000032C   0600000A           BEQ      ??Process_Incoming_Message_7
   1947                  if((Res_ex->entry_type == T_NORMAL)||(Res_ex->entry_type == T_CONF_NODE))
   \   00000330   0810D0E5           LDRB     R1,[R0, #+8]
   \   00000334   000051E3           CMP      R1,#+0
   \   00000338   0200000A           BEQ      ??Process_Incoming_Message_9
   \   0000033C   030051E3           CMP      R1,#+3
   \   00000340   0100001A           BNE      ??Process_Incoming_Message_7
   1948                  CList_ChangeComposingStatus(Res_ex, 0);
   \   00000344   0010A0E3           MOV      R1,#+0
   \                     ??Process_Incoming_Message_9:
   \   00000348   ........           _BLF     CList_ChangeComposingStatus,??CList_ChangeComposingStatus??rA
   1949                }
   1950              }
   1951              }
   1952          
   1953            XMLNode* msgnode = XML_Get_Child_Node_By_Name(nodeEx,"body");
   \                     ??Process_Incoming_Message_7:
   \   0000034C   B41086E2           ADD      R1,R6,#+180
   \   00000350   0400A0E1           MOV      R0,R4
   \   00000354   ........           _BLF     XML_Get_Child_Node_By_Name,??XML_Get_Child_Node_By_Name??rA
   \   00000358   0070A0E1           MOV      R7,R0
   1954            XMLNode* msgnodes = XML_Get_Child_Node_By_Name(nodeEx,"subject");  
   \   0000035C   BC1086E2           ADD      R1,R6,#+188
   \   00000360   0400A0E1           MOV      R0,R4
   \   00000364   ........           _BLF     XML_Get_Child_Node_By_Name,??XML_Get_Child_Node_By_Name??rA
   \   00000368   0080A0E1           MOV      R8,R0
   1955            if(!msgnode)
   \   0000036C   000057E3           CMP      R7,#+0
   1956            {
   1957              msgnode = msgnodes;
   \   00000370   0870A001           MOVEQ    R7,R8
   1958              Is_subj = 1;
   \   00000374   0150A003           MOVEQ    R5,#+1
   1959            }
   1960            if(msgnodes) //если есть тема, обработаем...
   \   00000378   000058E3           CMP      R8,#+0
   \   0000037C   1300000A           BEQ      ??Process_Incoming_Message_10
   1961            {
   1962              MUC_ITEM* TmpMUC = CList_FindMUCByJID(CList_FindContactByJID(XML_Get_Attr_Value(from,nodeEx->attr))->JID);
   \   00000380   0C1094E5           LDR      R1,[R4, #+12]
   \   00000384   0D00A0E1           MOV      R0,SP
   \   00000388   ........           _BLF     XML_Get_Attr_Value,??XML_Get_Attr_Value??rA
   \   0000038C   ........           _BLF     CList_FindContactByJID,??CList_FindContactByJID??rA
   \   00000390   000090E5           LDR      R0,[R0, #+0]
   \   00000394   ........           _BLF     CList_FindMUCByJID,??CList_FindMUCByJID??rA
   \   00000398   0090B0E1           MOVS     R9,R0
   1963                if(TmpMUC)
   \   0000039C   0B00000A           BEQ      ??Process_Incoming_Message_10
   1964                {
   1965                 if(TmpMUC->muctema) mfree(TmpMUC->muctema);
   \   000003A0   040099E5           LDR      R0,[R9, #+4]
   \   000003A4   000050E3           CMP      R0,#+0
   \   000003A8   0000000A           BEQ      ??Process_Incoming_Message_11
   \   000003AC   150000EF           SWI      +21
   1966                 TmpMUC->muctema = malloc(strlen(msgnodes->value)*2+1);
   \                     ??Process_Incoming_Message_11:
   \   000003B0   100098E5           LDR      R0,[R8, #+16]
   \   000003B4   1B0000EF           SWI      +27
   \   000003B8   0110A0E3           MOV      R1,#+1
   \   000003BC   800081E0           ADD      R0,R1,R0, LSL #+1
   \   000003C0   140000EF           SWI      +20
   \   000003C4   040089E5           STR      R0,[R9, #+4]
   1967                 strcpy(TmpMUC->muctema ,msgnodes->value);
   \   000003C8   101098E5           LDR      R1,[R8, #+16]
   \   000003CC   1A0000EF           SWI      +26
   1968                }
   1969            }
   1970            if(msgnode)
   \                     ??Process_Incoming_Message_10:
   \   000003D0   000057E3           CMP      R7,#+0
   1971            if(msgnode->value)
   \   000003D4   10009715           LDRNE    R0,[R7, #+16]
   \   000003D8   00005013           CMPNE    R0,#+0
   \   000003DC   3100000A           BEQ      ??Process_Incoming_Message_12
   1972            {
   1973              MESS_TYPE msgtype = Get_Message_Type(XML_Get_Attr_Value("type",nodeEx->attr));
   \   000003E0   0C1094E5           LDR      R1,[R4, #+12]
   1974          
   1975              // Не показываем попапы для групчата, ибо достаёт трындец как
   1976              if(msgtype!=MSG_GCHAT)
   \   000003E4   ........           LDR      R9,??DataTable93  ;; Play
   \   000003E8   D20F86E2           ADD      R0,R6,#+840
   \   000003EC   ........           _BLF     XML_Get_Attr_Value,??XML_Get_Attr_Value??rA
   \   000003F0   ........           BL       Get_Message_Type
   \   000003F4   0080A0E1           MOV      R8,R0
   \   000003F8   030050E3           CMP      R0,#+3
   \   000003FC   1C00000A           BEQ      ??Process_Incoming_Message_13
   1977              {
   1978                if(DISPLAY_POPUPS)
   \   00000400   B8009FE5           LDR      R0,??Process_Incoming_Message_0+0x10  ;; DISPLAY_POPUPS
   \   00000404   000090E5           LDR      R0,[R0, #+0]
   \   00000408   000050E3           CMP      R0,#+0
   \   0000040C   1600000A           BEQ      ??Process_Incoming_Message_14
   1979                {
   1980                  char* m = malloc(128+5+strlen(msgnode->value));
   \   00000410   100097E5           LDR      R0,[R7, #+16]
   \   00000414   1B0000EF           SWI      +27
   \   00000418   850080E2           ADD      R0,R0,#+133
   \   0000041C   000000EA           B        ??Process_Incoming_Message_15
   \                     ??Process_Incoming_Message_1:
   \   00000420   78000000           DC8      "x",+0,+0
   \                     ??Process_Incoming_Message_15:
   \   00000424   140000EF           SWI      +20
   1981                  sprintf(m,"%s: %s", XML_Get_Attr_Value(from,nodeEx->attr), msgnode->value);
   \   00000428   0C1094E5           LDR      R1,[R4, #+12]
   \   0000042C   00A0A0E1           MOV      R10,R0
   \   00000430   0D00A0E1           MOV      R0,SP
   \   00000434   ........           _BLF     XML_Get_Attr_Value,??XML_Get_Attr_Value??rA
   \   00000438   103097E5           LDR      R3,[R7, #+16]
   \   0000043C   0020A0E1           MOV      R2,R0
   \   00000440   E01086E2           ADD      R1,R6,#+224
   \   00000444   0A00A0E1           MOV      R0,R10
   \   00000448   160000EF           SWI      +22
   1982                  //char *ansi_m=convUTF8_to_ANSI_STR(m);
   1983                  char *ansi_m = m;
   1984                  utf82win(ansi_m, ansi_m);
   \   0000044C   0A10A0E1           MOV      R1,R10
   \   00000450   0A00A0E1           MOV      R0,R10
   \   00000454   ........           _BLF     utf82win,??utf82win??rA
   1985                  ShowMSG(1,(int)ansi_m);
   \   00000458   0A10A0E1           MOV      R1,R10
   \   0000045C   0100A0E3           MOV      R0,#+1
   \   00000460   480100EF           SWI      +328
   1986                  mfree(m);
   \   00000464   0A00A0E1           MOV      R0,R10
   \   00000468   150000EF           SWI      +21
   1987                  //mfree(ansi_m);
   1988                }
   1989                extern const char sndPM[];
   1990                SUBPROC((void *)Play,sndPM);
   \                     ??Process_Incoming_Message_14:
   \   0000046C   50109FE5           LDR      R1,??Process_Incoming_Message_0+0x14  ;; sndPM
   \   00000470   000000EA           B        ??Process_Incoming_Message_16
   1991              }
   1992                else
   1993                  {
   1994                    extern const char sndConf[];
   1995                    SUBPROC((void *)Play,sndConf);
   \                     ??Process_Incoming_Message_13:
   \   00000474   4C109FE5           LDR      R1,??Process_Incoming_Message_0+0x18  ;; sndConf
   \                     ??Process_Incoming_Message_16:
   \   00000478   0900A0E1           MOV      R0,R9
   \   0000047C   710100EF           SWI      +369
   1996                  }
   1997              if(Is_subj)
   1998              {
   1999                msgtype = MSG_SUBJECT;
   2000              }
   2001              CList_AddMessage(XML_Get_Attr_Value(from,nodeEx->attr), msgtype, msgnode->value);
   \   00000480   0C1094E5           LDR      R1,[R4, #+12]
   \   00000484   000055E3           CMP      R5,#+0
   \   00000488   0680A013           MOVNE    R8,#+6
   \   0000048C   0D00A0E1           MOV      R0,SP
   \   00000490   ........           _BLF     XML_Get_Attr_Value,??XML_Get_Attr_Value??rA
   \   00000494   102097E5           LDR      R2,[R7, #+16]
   \   00000498   0810A0E1           MOV      R1,R8
   \   0000049C   ........           _BLF     CList_AddMessage,??CList_AddMessage??rA
   2002          
   2003              extern volatile int vibra_count;
   2004              Vibrate(1);
   \   000004A0   0100A0E3           MOV      R0,#+1
   \   000004A4   ........           _BLF     Vibrate,??Vibrate??rA
   2005            }
   2006          }
   \                     ??Process_Incoming_Message_12:
   \   000004A8   6CD08DE2           ADD      SP,SP,#+108      ;; stack cleaning
   \   000004AC   F087BDE8           POP      {R4-R10,PC}      ;; return
   \                     ??Process_Incoming_Message_0:
   \   000004B0   ........           DC32     `?<Constant "from">_1`
   \   000004B4   ........           DC32     `?<Constant "xmlns">`
   \   000004B8   ........           DC32     `?<Constant "id">`
   \   000004BC   ........           DC32     `?<Constant "<message to=\\'%s\\' from...">`
   \   000004C0   ........           DC32     DISPLAY_POPUPS
   \   000004C4   ........           DC32     sndPM
   \   000004C8   ........           DC32     sndConf
   2007          
   2008          /*
   2009          Получить внутренний номер данного типа присутствия по строке с присутсвием
   2010          */

   \                                 In segment CODE, align 4, keep-with-next
   2011          unsigned short GetPresenceIndex(char* presence_str)
   2012          {
   \                     GetPresenceIndex:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040B0E1           MOVS     R4,R0
   2013            if(!presence_str)return 0;
   \   00000008   0100001A           BNE      ??GetPresenceIndex_0
   \                     ??GetPresenceIndex_1:
   \   0000000C   0000A0E3           MOV      R0,#+0
   \   00000010   3080BDE8           POP      {R4,R5,PC}
   2014            for(int i=0;i<PRES_COUNT;i++)
   \                     ??GetPresenceIndex_0:
   \   00000014   0050A0E3           MOV      R5,#+0
   \   00000018   020000EA           B        ??GetPresenceIndex_2
   \                     ??GetPresenceIndex_3:
   \   0000001C   015085E2           ADD      R5,R5,#+1
   \   00000020   0C0055E3           CMP      R5,#+12
   \   00000024   F8FFFFAA           BGE      ??GetPresenceIndex_1
   2015            {
   2016              if(!strcmp(presence_str, PRESENCES[i]))return i;
   \                     ??GetPresenceIndex_2:
   \   00000028   ........           LDR      R0,??DataTable94  ;; OnlineInfo
   \   0000002C   050180E0           ADD      R0,R0,R5, LSL #+2
   \   00000030   0C1090E5           LDR      R1,[R0, #+12]
   \   00000034   0400A0E1           MOV      R0,R4
   \   00000038   190000EF           SWI      +25
   \   0000003C   000050E3           CMP      R0,#+0
   \   00000040   F5FFFF1A           BNE      ??GetPresenceIndex_3
   \   00000044   0508A0E1           MOV      R0,R5, LSL #+16
   \   00000048   2008A0E1           MOV      R0,R0, LSR #+16
   \   0000004C   3080BDE8           POP      {R4,R5,PC}       ;; return
   2017            }
   2018            return 0;
   2019          }
   2020          
   2021          /*
   2022          Получить внутренний номер данного типа роли/полномочий по строке с присутсвием
   2023          */

   \                                 In segment CODE, align 4, keep-with-next
   2024          unsigned short GetAffRoleIndex(char* str)
   2025          {
   \                     GetAffRoleIndex:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040B0E1           MOVS     R4,R0
   2026            if(!str)return 0;
   \   00000008   0100001A           BNE      ??GetAffRoleIndex_0
   \                     ??GetAffRoleIndex_1:
   \   0000000C   0000A0E3           MOV      R0,#+0
   \   00000010   7080BDE8           POP      {R4-R6,PC}       ;; return
   2027            int i;
   2028            for(i=0;i<AFFS_CNT;i++)
   \                     ??GetAffRoleIndex_0:
   \   00000014   ........           LDR      R6,??DataTable95  ;; JABBER_AFFS
   \   00000018   0050A0E3           MOV      R5,#+0
   2029            {
   2030              if(!strcmp(str, JABBER_AFFS[i]))return i;
   \                     ??GetAffRoleIndex_2:
   \   0000001C   0400A0E1           MOV      R0,R4
   \   00000020   051196E7           LDR      R1,[R6, +R5, LSL #+2]
   \   00000024   190000EF           SWI      +25
   \   00000028   000050E3           CMP      R0,#+0
   \   0000002C   0200001A           BNE      ??GetAffRoleIndex_3
   \                     ??GetAffRoleIndex_4:
   \   00000030   0508A0E1           MOV      R0,R5, LSL #+16
   \   00000034   2008A0E1           MOV      R0,R0, LSR #+16
   \   00000038   7080BDE8           POP      {R4-R6,PC}
   2031            }
   \                     ??GetAffRoleIndex_3:
   \   0000003C   015085E2           ADD      R5,R5,#+1
   \   00000040   050055E3           CMP      R5,#+5
   \   00000044   F4FFFFBA           BLT      ??GetAffRoleIndex_2
   2032            for(i=0;i<ROLS_CNT;i++)
   \   00000048   0050A0E3           MOV      R5,#+0
   2033            {
   2034              if(!strcmp(str, JABBER_ROLS[i]))return i;
   \                     ??GetAffRoleIndex_5:
   \   0000004C   050186E0           ADD      R0,R6,R5, LSL #+2
   \   00000050   141090E5           LDR      R1,[R0, #+20]
   \   00000054   0400A0E1           MOV      R0,R4
   \   00000058   190000EF           SWI      +25
   \   0000005C   000050E3           CMP      R0,#+0
   \   00000060   F2FFFF0A           BEQ      ??GetAffRoleIndex_4
   2035            }
   \   00000064   015085E2           ADD      R5,R5,#+1
   \   00000068   040055E3           CMP      R5,#+4
   \   0000006C   E6FFFFAA           BGE      ??GetAffRoleIndex_1
   \   00000070   F5FFFFEA           B        ??GetAffRoleIndex_5
   2036          
   2037            return 0;
   2038          }
   2039          
   2040          
   2041          //Context:HELPER

   \                                 In segment CODE, align 4, keep-with-next
   2042          void _sendandfree(char *str)
   2043          {
   \                     _sendandfree:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   2044            SendAnswer(str);
   \   00000008   ........           _BLF     SendAnswer,??SendAnswer??rA
   2045            mfree(str);
   \   0000000C   0400A0E1           MOV      R0,R4
   \   00000010   150000EF           SWI      +21
   2046          }
   \   00000014   1080BDE8           POP      {R4,PC}          ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   ........           DC32     _sendandfree

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable7:
   \   00000000   ........           DC32     JABBER_SERVER

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable8:
   \   00000000   ........           DC32     My_JID

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable9:
   \   00000000   ........           DC32     `?<Constant "%s@%s">`

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable11:
   \   00000000   ........           DC32     auth_id

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable23:
   \   00000000   ........           DC32     My_JID_full

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable31:
   \   00000000   ........           DC32     logmsg

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable37:
   \   00000000   ........           DC32     intimes

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable40:
   \   00000000   ........           DC32     intimes

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable41:
   \   00000000   ........           DC32     `?<Constant "<message to=\\'%s\\' id=\\'...">`

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable43:
   \   00000000   ........           DC32     VERSION_VERS

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable44:
   \   00000000   ........           DC32     VERSION_NAME

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable46:
   \   00000000   ........           DC32     intimes

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable49:
   \   00000000   ........           DC32     DELIVERY_EVENTS

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable50:
   \   00000000   ........           DC32     USE_ATTENTION

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable51:
   \   00000000   ........           DC32     COMPOSING_EVENTS

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable53:
   \   00000000   ........           DC32     `?<Constant "<feature var=\\'urn:xmp...">`

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable55:
   \   00000000   ........           DC32     Jabber_state

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable56:
   \   00000000   ........           DC32     OnlineInfo

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable59:
   \   00000000   ........           DC32     `?<Constant "%s@%s">`

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable62:
   \   00000000   ........           DC32     OnlineInfo

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable63:
   \   00000000   ........           DC32     Send_Initial_Presence_Helper

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable65:
   \   00000000   ........           DC32     `?<Constant "<feature var=\\'urn:xmp...">`

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable67:
   \   00000000   ........           DC32     My_JID_full

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable68:
   \   00000000   ........           DC32     _sendandfree

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable69:
   \   00000000   ........           DC32     `?<Constant "<feature var=\\'urn:xmp...">`

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable70:
   \   00000000   ........           DC32     auth_id

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable73:
   \   00000000   ........           DC32     cltop

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable74:
   \   00000000   ........           DC32     My_JID

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable75:
   \   00000000   ........           DC32     Send_Initial_Presence_Helper

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable77:
   \   00000000   ........           DC32     logmsg

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable79:
   \   00000000   ........           DC32     Jabber_state

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable85:
   \   00000000   ........           DC32     percent_d

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable87:
   \   00000000   ........           DC32     `?<Constant "<feature var=\\'urn:xmp...">`

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable88:
   \   00000000   ........           DC32     USE_ATTENTION

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable89:
   \   00000000   ........           DC32     DELIVERY_EVENTS

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable90:
   \   00000000   ........           DC32     My_JID_full

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable91:
   \   00000000   ........           DC32     _sendandfree

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable92:
   \   00000000   ........           DC32     COMPOSING_EVENTS

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable93:
   \   00000000   ........           DC32     Play

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable94:
   \   00000000   ........           DC32     OnlineInfo

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable95:
   \   00000000   ........           DC32     JABBER_AFFS

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for OnlineInfo>`:
   \   00000000   0000               DC8 0, 0
   \   00000002   0000               DC16 0
   \   00000004   00000000           DC32 0H
   \                     `?<Initializer for muctop>`:
   \   00000008   00000000           DC32 0H
   \                     `?<Initializer for PRESENCES>`:
   \   0000000C   ............       DC32 `?<Constant "online">`, `?<Constant "chat">`, `?<Constant "away">`
   \              ............
   \   00000018   ............       DC32 `?<Constant "xa">`, `?<Constant "dnd">`, `?<Constant "invisible">`
   \              ............
   \   00000024   ............       DC32 `?<Constant "unavailable">`, `?<Constant "error">`
   \              ....        
   \   0000002C   ............       DC32 `?<Constant "subscribe">`, `?<Constant "subscribed">`
   \              ....        
   \   00000034   ............       DC32 `?<Constant "unsubscribe">`, `?<Constant "unsubscribed">`
   \              ....        
   \                     `?<Initializer for r>`:
   \   0000003C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000004C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000005C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000006C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000007C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000008C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000009C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000000AC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000000BC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000000CC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000000DC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000000EC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000000FC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000010C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000011C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000012C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000013C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000014C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000015C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000016C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000017C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000018C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000019C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000001AC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000001BC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000001CC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000001DC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000001EC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000001FC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000020C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000021C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000022C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for JABBER_AFFS>`:
   \   00000000   ............       DC32 `?<Constant "none">`, `?<Constant "outcast">`
   \              ....        
   \   00000008   ............       DC32 `?<Constant "member">`, `?<Constant "admin">`
   \              ....        
   \   00000010   ........           DC32 `?<Constant "owner">`
   \                     `?<Initializer for JABBER_ROLS>`:
   \   00000014   ............       DC32 `?<Constant "none">`, `?<Constant "visitor">`
   \              ....        
   \   0000001C   ............       DC32 `?<Constant "participant">`, `?<Constant "moderator">`
   \              ....        

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for auth_id>`:
   \   00000000   5369654A435F       DC8 "SieJC_auth_req"
   \              617574685F72
   \              657100      
   \   0000000F   00                 DC8 0
   \                     `?<Initializer for rost_id>`:
   \   00000010   5369654A435F       DC8 "SieJC_rost_req"
   \              726F73745F72
   \              657100      
   \   0000001F   00                 DC8 0
   \                     `?<Initializer for vreq_id>`:
   \   00000020   5369654A435F       DC8 "SieJC_vers_req"
   \              766572735F72
   \              657100      
   \   0000002F   00                 DC8 0
   \                     `?<Initializer for priv_id>`:
   \   00000030   5369654A435F       DC8 "SieJC_priv_req"
   \              707269765F72
   \              657100      
   \   0000003F   00                 DC8 0
   \                     `?<Initializer for treq_id>`:
   \   00000040   5369654A435F       DC8 "SieJC_time_req"
   \              74696D655F72
   \              657100      
   \   0000004F   00                 DC8 0
   \                     `?<Initializer for vcreq_id>`:
   \   00000050   5369654A435F       DC8 "SieJC_vcard_req"
   \              76636172645F
   \              72657100    
   \                     `?<Initializer for lastact_id>`:
   \   00000060   5369654A435F       DC8 "SieJC_lastact_req"
   \              6C6173746163
   \              745F72657100
   \   00000072   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "owner">`:
   \   00000000   6F776E657200       DC8 "owner"
   \   00000006   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "xmlns">`:
   \   00000000   786D6C6E7300       DC8 "xmlns"
   \   00000006   0000               DC8 0, 0

   \                                 In segment DATA_C, align 1, align-sorted
   \                     `?<Constant "id">`:
   \   00000000   696400             DC8 "id"

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   7800               DC8 "x"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "<feature var=\\'urn:xmp...">`:
   \   00000000   3C6665617475       DC8 "<feature var='urn:xmpp:receipts'/>"
   \              726520766172
   \              3D2775726E3A
   \              786D70703A72
   \              656365697074
   \              73272F3E00  
   \   00000023   00                 DC8 0
   \   00000024   696E76697465       DC8 "invite"
   \              00          
   \   0000002B   00                 DC8 0
   \   0000002C   617474656E74       DC8 "attention"
   \              696F6E00    
   \   00000036   0000               DC8 0, 0
   \   00000038   75726E3A786D       DC8 "urn:xmpp:attention:0"
   \              70703A617474
   \              656E74696F6E
   \              3A3000      
   \   0000004D   000000             DC8 0, 0, 0
   \   00000050   726571756573       DC8 "request"
   \              7400        
   \   00000058   75726E3A786D       DC8 "urn:xmpp:receipts"
   \              70703A726563
   \              656970747300
   \   0000006A   0000               DC8 0, 0
   \   0000006C   726563656976       DC8 "received"
   \              656400      
   \   00000075   000000             DC8 0, 0, 0
   \   00000078   636F6D706F73       DC8 "composing"
   \              696E6700    
   \   00000082   0000               DC8 0, 0
   \   00000084   687474703A2F       DC8 "http://jabber.org/protocol/chatstates"
   \              2F6A61626265
   \              722E6F72672F
   \              70726F746F63
   \              6F6C2F636861
   \              747374617465
   \              7300        
   \   000000AA   0000               DC8 0, 0
   \   000000AC   616374697665       DC8 "active"
   \              00          
   \   000000B3   00                 DC8 0
   \   000000B4   626F647900         DC8 "body"
   \   000000B9   000000             DC8 0, 0, 0
   \   000000BC   7375626A6563       DC8 "subject"
   \              7400        
   \                     `?<Constant "error">`:
   \   000000C4   6572726F7200       DC8 "error"
   \   000000CA   0000               DC8 0, 0
   \                     `?<Constant "subscribe">`:
   \   000000CC   737562736372       DC8 "subscribe"
   \              69626500    
   \   000000D6   0000               DC8 0, 0
   \                     `?<Constant "none">`:
   \   000000D8   6E6F6E6500         DC8 "none"
   \   000000DD   000000             DC8 0, 0, 0
   \   000000E0   25733A202573       DC8 "%s: %s"
   \              00          
   \   000000E7   00                 DC8 0
   \   000000E8   636C69656E74       DC8 "client/mobile//SieJC %s:%i<%s<%s<%s<%s<%s<%s"
   \              2F6D6F62696C
   \              652F2F536965
   \              4A432025733A
   \              25693C25733C
   \              25733C25733C
   \              25733C25733C
   \              257300      
   \   00000115   000000             DC8 0, 0, 0
   \   00000118   687474703A2F       DC8 "http://jabber.org/protocol/disco#info"
   \              2F6A61626265
   \              722E6F72672F
   \              70726F746F63
   \              6F6C2F646973
   \              636F23696E66
   \              6F00        
   \   0000013E   0000               DC8 0, 0
   \   00000140   687474703A2F       DC8 "http://jabber.org/protocol/muc"
   \              2F6A61626265
   \              722E6F72672F
   \              70726F746F63
   \              6F6C2F6D7563
   \              00          
   \   0000015F   00                 DC8 0
   \   00000160   6A6162626572       DC8 "jabber:iq:last"
   \              3A69713A6C61
   \              737400      
   \   0000016F   00                 DC8 0
   \   00000170   6A6162626572       DC8 "jabber:iq:time"
   \              3A69713A7469
   \              6D6500      
   \   0000017F   00                 DC8 0
   \   00000180   6A6162626572       DC8 "jabber:iq:version"
   \              3A69713A7665
   \              7273696F6E00
   \   00000192   0000               DC8 0, 0
   \   00000194   75726E3A786D       DC8 "urn:xmpp:ping"
   \              70703A70696E
   \              6700        
   \   000001A2   0000               DC8 0, 0
   \   000001A4   6A6162626572       DC8 "jabber:iq:roster"
   \              3A69713A726F
   \              7374657200  
   \   000001B5   000000             DC8 0, 0, 0
   \   000001B8   53656E642072       DC8 "Send roster Q"
   \              6F7374657220
   \              5100        
   \   000001C6   0000               DC8 0, 0
   \   000001C8   3C6E616D653E       DC8 3CH, 6EH, 61H, 6DH, 65H, 3EH, 25H, 73H
   \              2573        
   \   000001D0   3C2F6E616D65       DC8 3CH, 2FH, 6EH, 61H, 6DH, 65H, 3EH, 3CH
   \              3E3C        
   \   000001D8   76657273696F       DC8 76H, 65H, 72H, 73H, 69H, 6FH, 6EH, 3EH
   \              6E3E        
   \   000001E0   25732D722564       DC8 25H, 73H, 2DH, 72H, 25H, 64H, 20H, 28H
   \              2028        
   \   000001E8   2573293C2F76       DC8 25H, 73H, 29H, 3CH, 2FH, 76H, 65H, 72H
   \              6572        
   \   000001F0   73696F6E3E3C       DC8 73H, 69H, 6FH, 6EH, 3EH, 3CH, 6FH, 73H
   \              6F73        
   \   000001F8   3E5349452D25       DC8 3EH, 53H, 49H, 45H, 2DH, 25H, 73H, 2FH
   \              732F        
   \   00000200   25732025733C       DC8 25H, 73H, 20H, 25H, 73H, 3CH, 2FH, 6FH
   \              2F6F        
   \   00000208   733E00             DC8 73H, 3EH, 0
   \   0000020B   00                 DC8 0
   \   0000020C   726573756C74       DC8 "result"
   \              00          
   \   00000213   00                 DC8 0
   \   00000214   3C7574633E25       DC8 3CH, 75H, 74H, 63H, 3EH, 25H, 30H, 34H
   \              3034        
   \   0000021C   642530326425       DC8 64H, 25H, 30H, 32H, 64H, 25H, 30H, 32H
   \              3032        
   \   00000224   645425303264       DC8 64H, 54H, 25H, 30H, 32H, 64H, 3AH, 25H
   \              3A25        
   \   0000022C   3032643A2530       DC8 30H, 32H, 64H, 3AH, 25H, 30H, 32H, 64H
   \              3264        
   \   00000234   3C2F7574633E       DC8 3CH, 2FH, 75H, 74H, 63H, 3EH, 3CH, 74H
   \              3C74        
   \   0000023C   7A3E25733C2F       DC8 7AH, 3EH, 25H, 73H, 3CH, 2FH, 74H, 7AH
   \              747A        
   \   00000244   3E3C64697370       DC8 3EH, 3CH, 64H, 69H, 73H, 70H, 6CH, 61H
   \              6C61        
   \   0000024C   793E25303264       DC8 79H, 3EH, 25H, 30H, 32H, 64H, 2DH, 25H
   \              2D25        
   \   00000254   3032642D2530       DC8 30H, 32H, 64H, 2DH, 25H, 30H, 34H, 64H
   \              3464        
   \   0000025C   20253032643A       DC8 20H, 25H, 30H, 32H, 64H, 3AH, 25H, 30H
   \              2530        
   \   00000264   32643A253032       DC8 32H, 64H, 3AH, 25H, 30H, 32H, 64H, 3CH
   \              643C        
   \   0000026C   2F646973706C       DC8 2FH, 64H, 69H, 73H, 70H, 6CH, 61H, 79H
   \              6179        
   \   00000274   3E00               DC8 3EH, 0
   \   00000276   0000               DC8 0, 0
   \   00000278   3C6964656E74       DC8 3CH, 69H, 64H, 65H, 6EH, 74H, 69H, 74H
   \              6974        
   \   00000280   792063617465       DC8 79H, 20H, 63H, 61H, 74H, 65H, 67H, 6FH
   \              676F        
   \   00000288   72793D27636C       DC8 72H, 79H, 3DH, 27H, 63H, 6CH, 69H, 65H
   \              6965        
   \   00000290   6E7427207479       DC8 6EH, 74H, 27H, 20H, 74H, 79H, 70H, 65H
   \              7065        
   \   00000298   3D2770686F6E       DC8 3DH, 27H, 70H, 68H, 6FH, 6EH, 65H, 27H
   \              6527        
   \   000002A0   2F3E3C666561       DC8 2FH, 3EH, 3CH, 66H, 65H, 61H, 74H, 75H
   \              7475        
   \   000002A8   726520766172       DC8 72H, 65H, 20H, 76H, 61H, 72H, 3DH, 27H
   \              3D27        
   \   000002B0   2573272F3E3C       DC8 25H, 73H, 27H, 2FH, 3EH, 3CH, 66H, 65H
   \              6665        
   \   000002B8   617475726520       DC8 61H, 74H, 75H, 72H, 65H, 20H, 76H, 61H
   \              7661        
   \   000002C0   723D27257327       DC8 72H, 3DH, 27H, 25H, 73H, 27H, 2FH, 3EH
   \              2F3E        
   \   000002C8   3C6665617475       DC8 3CH, 66H, 65H, 61H, 74H, 75H, 72H, 65H
   \              7265        
   \   000002D0   207661723D27       DC8 20H, 76H, 61H, 72H, 3DH, 27H, 25H, 73H
   \              2573        
   \   000002D8   272F3E3C6665       DC8 27H, 2FH, 3EH, 3CH, 66H, 65H, 61H, 74H
   \              6174        
   \   000002E0   757265207661       DC8 75H, 72H, 65H, 20H, 76H, 61H, 72H, 3DH
   \              723D        
   \   000002E8   272573272F3E       DC8 27H, 25H, 73H, 27H, 2FH, 3EH, 3CH, 66H
   \              3C66        
   \   000002F0   656174757265       DC8 65H, 61H, 74H, 75H, 72H, 65H, 20H, 76H
   \              2076        
   \   000002F8   61723D272573       DC8 61H, 72H, 3DH, 27H, 25H, 73H, 27H, 2FH
   \              272F        
   \   00000300   3E3C66656174       DC8 3EH, 3CH, 66H, 65H, 61H, 74H, 75H, 72H
   \              7572        
   \   00000308   65207661723D       DC8 65H, 20H, 76H, 61H, 72H, 3DH, 27H, 25H
   \              2725        
   \   00000310   73272F3E00         DC8 73H, 27H, 2FH, 3EH, 0
   \   00000315   000000             DC8 0, 0, 0
   \   00000318   626F746800         DC8 "both"
   \   0000031D   000000             DC8 0, 0, 0
   \   00000320   66726F6D00         DC8 "from"
   \   00000325   000000             DC8 0, 0, 0
   \   00000328   737562736372       DC8 "subscription"
   \              697074696F6E
   \              00          
   \   00000335   000000             DC8 0, 0, 0
   \   00000338   6E616D6500         DC8 "name"
   \   0000033D   000000             DC8 0, 0, 0
   \   00000340   67726F757000       DC8 "group"
   \   00000346   0000               DC8 0, 0
   \   00000348   7479706500         DC8 "type"
   \   0000034D   000000             DC8 0, 0, 0
   \   00000350   786D6C6E7300       DC8 "xmlns"
   \   00000356   0000               DC8 0, 0
   \   00000358   717565727900       DC8 "query"
   \   0000035E   0000               DC8 0, 0
   \   00000360   70696E6700         DC8 "ping"
   \   00000365   000000             DC8 0, 0, 0
   \   00000368   284D652900         DC8 "(Me)"
   \   0000036D   000000             DC8 0, 0, 0
   \   00000370   76657273696F       DC8 "version"
   \              6E00        
   \   00000378   56657273696F       DC8 "Version Info:\012Name:%s\012Version:%s\012OS:%s"
   \              6E20496E666F
   \              3A0A4E616D65
   \              3A25730A5665
   \              7273696F6E3A
   \              25730A4F533A
   \              257300      
   \   0000039F   00                 DC8 0
   \   000003A0   7365636F6E64       DC8 "seconds"
   \              7300        
   \   000003A8   49444C453A20       DC8 "IDLE: %d d. %d hr. %d min. %d sec."
   \              256420642E20
   \              25642068722E
   \              202564206D69
   \              6E2E20256420
   \              7365632E00  
   \   000003CB   00                 DC8 0
   \   000003CC   646973706C61       DC8 "display"
   \              7900        
   \   000003D4   54696D652049       DC8 "Time Info:\012UTC:%s\012Time Zone:%s\012:>%s"
   \              6E666F3A0A55
   \              54433A25730A
   \              54696D65205A
   \              6F6E653A2573
   \              0A3A3E257300
   \   000003F8   764361726400       DC8 "vCard"
   \   000003FE   0000               DC8 0, 0
   \   00000400   76636172642D       DC8 "vcard-temp"
   \              74656D7000  
   \   0000040B   00                 DC8 0
   \   0000040C   73746F726167       DC8 "storage"
   \              6500        
   \   00000414   73746F726167       DC8 "storage:bookmarks"
   \              653A626F6F6B
   \              6D61726B7300
   \   00000426   0000               DC8 0, 0
   \   00000428   6A6162626572       DC8 "jabber:iq:private"
   \              3A69713A7072
   \              697661746500
   \   0000043A   0000               DC8 0, 0
   \   0000043C   636F646500         DC8 "code"
   \   00000441   000000             DC8 0, 0, 0
   \   00000444   526564697265       DC8 "Redirect"
   \              637400      
   \   0000044D   000000             DC8 0, 0, 0
   \   00000450   426164207265       DC8 "Bad request"
   \              717565737400
   \   0000045C   556E61757468       DC8 "Unauthorized"
   \              6F72697A6564
   \              00          
   \   00000469   000000             DC8 0, 0, 0
   \   0000046C   5061796D656E       DC8 "Payment required"
   \              742072657175
   \              6972656400  
   \   0000047D   000000             DC8 0, 0, 0
   \   00000480   466F72626964       DC8 "Forbidden"
   \              64656E00    
   \   0000048A   0000               DC8 0, 0
   \   0000048C   4E6F7420666F       DC8 "Not fonud"
   \              6E756400    
   \   00000496   0000               DC8 0, 0
   \   00000498   4E6F7420616C       DC8 "Not allowed"
   \              6C6F77656400
   \   000004A4   4E6F74206163       DC8 "Not acceptable"
   \              636570746162
   \              6C6500      
   \   000004B3   00                 DC8 0
   \   000004B4   526567697374       DC8 "Registration required"
   \              726174696F6E
   \              207265717569
   \              72656400    
   \   000004CA   0000               DC8 0, 0
   \   000004CC   526571756573       DC8 "Request timeout"
   \              742074696D65
   \              6F757400    
   \   000004DC   436F6E666C69       DC8 "Conflict"
   \              637400      
   \   000004E5   000000             DC8 0, 0, 0
   \   000004E8   496E7465726E       DC8 "Internal server error"
   \              616C20736572
   \              766572206572
   \              726F7200    
   \   000004FE   0000               DC8 0, 0
   \   00000500   4E6F74206D70       DC8 "Not mplemented"
   \              6C656D656E74
   \              656400      
   \   0000050F   00                 DC8 0
   \   00000510   52656D6F7465       DC8 "Remote server error"
   \              207365727665
   \              72206572726F
   \              7200        
   \   00000524   536572766963       DC8 "Service unavailable"
   \              6520756E6176
   \              61696C61626C
   \              6500        
   \   00000538   52656D6F7465       DC8 "Remote server timeout"
   \              207365727665
   \              722074696D65
   \              6F757400    
   \   0000054E   0000               DC8 0, 0
   \   00000550   4552523A2573       DC8 "ERR:%s"
   \              00          
   \   00000557   00                 DC8 0
   \   00000558   0A4175746820       DC8 "\012Auth error!"
   \              6572726F7221
   \              00          
   \   00000565   000000             DC8 0, 0, 0
   \   00000568   73686F7700         DC8 "show"
   \   0000056D   000000             DC8 0, 0, 0
   \   00000570   737461747573       DC8 "status"
   \              00          
   \   00000577   00                 DC8 0
   \   00000578   7072696F7269       DC8 "priority"
   \              747900      
   \   00000581   000000             DC8 0, 0, 0
   \   00000584   7465787400         DC8 "text"
   \   00000589   000000             DC8 0, 0, 0
   \   0000058C   455252202573       DC8 "ERR %s"
   \              00          
   \   00000593   00                 DC8 0
   \   00000594   6974656D00         DC8 "item"
   \   00000599   000000             DC8 0, 0, 0
   \   0000059C   616666696C69       DC8 "affiliation"
   \              6174696F6E00
   \   000005A8   726F6C6500         DC8 "role"
   \   000005AD   000000             DC8 0, 0, 0
   \   000005B0   257320697320       DC8 "%s is now %s and %s [%d->%d, %d->%d]"
   \              6E6F77202573
   \              20616E642025
   \              73205B25642D
   \              3E25642C2025
   \              642D3E25645D
   \              00          
   \   000005D5   000000             DC8 0, 0, 0
   \   000005D8   257320636861       DC8 "%s changed status to %s (%s)"
   \              6E6765642073
   \              746174757320
   \              746F20257320
   \              2825732900  
   \   000005F5   000000             DC8 0, 0, 0
   \   000005F8   257320636861       DC8 "%s changed status to %s"
   \              6E6765642073
   \              746174757320
   \              746F20257300
   \   00000610   257320282573       DC8 "%s (%s) joined as %s and %s"
   \              29206A6F696E
   \              656420617320
   \              257320616E64
   \              20257300    
   \   0000062C   2573206A6F69       DC8 "%s joined as %s and %s"
   \              6E6564206173
   \              20257320616E
   \              6420257300  
   \   00000643   00                 DC8 0
   \   00000644   CAEEEDF4E5F0       DC8 "\312\356\355\364\345\360\345\355\366\350\377 \361\356\347\344\340\355\340 \363\361\357\345\370\355\356"
   \              E5EDF6E8FF20
   \              F1EEE7E4E0ED
   \              E020F3F1EFE5
   \              F8EDEE00    
   \   00000660   2573206C6566       DC8 "%s left us"
   \              7420757300  
   \   0000066B   00                 DC8 0
   \   0000066C   2573206C6566       DC8 "%s left us (%s)"
   \              742075732028
   \              25732900    
   \   0000067C   257320776173       DC8 "%s was kicked!"
   \              206B69636B65
   \              642100      
   \   0000068B   00                 DC8 0
   \   0000068C   257320776173       DC8 "%s was BANNED! "
   \              2042414E4E45
   \              44212000    
   \   0000069C   257320776173       DC8 "%s was kicked, because room became member-only!"
   \              206B69636B65
   \              642C20626563
   \              617573652072
   \              6F6F6D206265
   \              63616D65206D
   \              656D6265722D
   \              6F6E6C792100
   \   000006CC   257320697320       DC8 "%s is now known as %s"
   \              6E6F77206B6E
   \              6F776E206173
   \              20257300    
   \   000006E2   0000               DC8 0, 0
   \   000006E4   6E69636B00         DC8 "nick"
   \   000006E9   000000             DC8 0, 0, 0
   \   000006EC   4E6577204D55       DC8 "New MUC crated. Owner-%s"
   \              432063726174
   \              65642E204F77
   \              6E65722D2573
   \              00          
   \   00000705   000000             DC8 0, 0, 0
   \   00000708   2573202D205B       DC8 "%s - [unknow action(%s)]"
   \              756E6B6E6F77
   \              20616374696F
   \              6E282573295D
   \              00          
   \   00000721   000000             DC8 0, 0, 0
   \   00000724   3B2052656173       DC8 "; Reason: "
   \              6F6E3A2000  
   \   0000072F   00                 DC8 0
   \   00000730   687474703A2F       DC8 "http://jabber.org/protocol/muc#user"
   \              2F6A61626265
   \              722E6F72672F
   \              70726F746F63
   \              6F6C2F6D7563
   \              237573657200

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "online">`:
   \   00000000   6F6E6C696E65       DC8 "online"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "<message to=\\'%s\\' id=\\'...">`:
   \   00000000   3C6D65737361       DC8 3CH, 6DH, 65H, 73H, 73H, 61H, 67H, 65H
   \              6765        
   \   00000008   20746F3D2725       DC8 20H, 74H, 6FH, 3DH, 27H, 25H, 73H, 27H
   \              7327        
   \   00000010   2069643D2753       DC8 20H, 69H, 64H, 3DH, 27H, 53H, 69H, 65H
   \              6965        
   \   00000018   4A435F256427       DC8 4AH, 43H, 5FH, 25H, 64H, 27H, 20H, 74H
   \              2074        
   \   00000020   7970653D2725       DC8 79H, 70H, 65H, 3DH, 27H, 25H, 73H, 27H
   \              7327        
   \   00000028   3E3C626F6479       DC8 3EH, 3CH, 62H, 6FH, 64H, 79H, 3EH, 25H
   \              3E25        
   \   00000030   733C2F626F64       DC8 73H, 3CH, 2FH, 62H, 6FH, 64H, 79H, 3EH
   \              793E        
   \   00000038   00                 DC8 0
   \   00000039   000000             DC8 0, 0, 0
   \                     `?<Constant "chat">`:
   \   0000003C   6368617400         DC8 "chat"
   \   00000041   000000             DC8 0, 0, 0
   \   00000044   67726F757063       DC8 "groupchat"
   \              68617400    
   \   0000004E   0000               DC8 0, 0
   \   00000050   3C7265717565       DC8 "<request xmlns='urn:xmpp:receipts'/>"
   \              737420786D6C
   \              6E733D277572
   \              6E3A786D7070
   \              3A7265636569
   \              707473272F3E
   \              00          
   \   00000075   000000             DC8 0, 0, 0
   \   00000078   3C6163746976       DC8 3CH, 61H, 63H, 74H, 69H, 76H, 65H, 20H
   \              6520        
   \   00000080   786D6C6E733D       DC8 78H, 6DH, 6CH, 6EH, 73H, 3DH, 27H, 68H
   \              2768        
   \   00000088   7474703A2F2F       DC8 74H, 74H, 70H, 3AH, 2FH, 2FH, 6AH, 61H
   \              6A61        
   \   00000090   626265722E6F       DC8 62H, 62H, 65H, 72H, 2EH, 6FH, 72H, 67H
   \              7267        
   \   00000098   2F70726F746F       DC8 2FH, 70H, 72H, 6FH, 74H, 6FH, 63H, 6FH
   \              636F        
   \   000000A0   6C2F63686174       DC8 6CH, 2FH, 63H, 68H, 61H, 74H, 73H, 74H
   \              7374        
   \   000000A8   61746573272F       DC8 61H, 74H, 65H, 73H, 27H, 2FH, 3EH, 0
   \              3E00        
   \   000000B0   3C2F6D657373       DC8 "</message>"
   \              6167653E00  
   \   000000BB   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "away">`:
   \   00000000   6177617900         DC8 "away"
   \   00000005   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 1, align-sorted
   \                     `?<Constant "xa">`:
   \   00000000   786100             DC8 "xa"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "dnd">`:
   \   00000000   646E6400           DC8 "dnd"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "invisible">`:
   \   00000000   696E76697369       DC8 "invisible"
   \              626C6500    
   \   0000000A   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "unavailable">`:
   \   00000000   756E61766169       DC8 "unavailable"
   \              6C61626C6500

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "subscribed">`:
   \   00000000   737562736372       DC8 "subscribed"
   \              6962656400  
   \   0000000B   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "unsubscribe">`:
   \   00000000   756E73756273       DC8 "unsubscribe"
   \              637269626500

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "unsubscribed">`:
   \   00000000   756E73756273       DC8 "unsubscribed"
   \              637269626564
   \              00          
   \   0000000D   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "outcast">`:
   \   00000000   6F7574636173       DC8 "outcast"
   \              7400        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "member">`:
   \   00000000   6D656D626572       DC8 "member"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "admin">`:
   \   00000000   61646D696E00       DC8 "admin"
   \   00000006   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "<iq to=\\'%s\\' type=\\'get...">`:
   \   00000000   3C697120746F       DC8 3CH, 69H, 71H, 20H, 74H, 6FH, 3DH, 27H
   \              3D27        
   \   00000008   257327207479       DC8 25H, 73H, 27H, 20H, 74H, 79H, 70H, 65H
   \              7065        
   \   00000010   3D2767657427       DC8 3DH, 27H, 67H, 65H, 74H, 27H, 20H, 69H
   \              2069        
   \   00000018   643D27257327       DC8 64H, 3DH, 27H, 25H, 73H, 27H, 3EH, 0DH
   \              3E0D        
   \   00000020   0A3C76436172       DC8 0AH, 3CH, 76H, 43H, 61H, 72H, 64H, 20H
   \              6420        
   \   00000028   786D6C6E733D       DC8 78H, 6DH, 6CH, 6EH, 73H, 3DH, 27H, 76H
   \              2776        
   \   00000030   636172642D74       DC8 63H, 61H, 72H, 64H, 2DH, 74H, 65H, 6DH
   \              656D        
   \   00000038   70272F3E0D0A       DC8 70H, 27H, 2FH, 3EH, 0DH, 0AH, 3CH, 2FH
   \              3C2F        
   \   00000040   69713E00           DC8 69H, 71H, 3EH, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "visitor">`:
   \   00000000   76697369746F       DC8 "visitor"
   \              7200        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "participant">`:
   \   00000000   706172746963       DC8 "participant"
   \              6970616E7400

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "moderator">`:
   \   00000000   6D6F64657261       DC8 "moderator"
   \              746F7200    
   \   0000000A   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "<iq type=\\'set\\' from=\\'...">`:
   \   00000000   3C6971207479       DC8 3CH, 69H, 71H, 20H, 74H, 79H, 70H, 65H
   \              7065        
   \   00000008   3D2773657427       DC8 3DH, 27H, 73H, 65H, 74H, 27H, 20H, 66H
   \              2066        
   \   00000010   726F6D3D2725       DC8 72H, 6FH, 6DH, 3DH, 27H, 25H, 73H, 27H
   \              7327        
   \   00000018   2069643D2753       DC8 20H, 69H, 64H, 3DH, 27H, 53H, 69H, 65H
   \              6965        
   \   00000020   4A435F702564       DC8 4AH, 43H, 5FH, 70H, 25H, 64H, 27H, 3EH
   \              273E        
   \   00000028   3C7075627375       DC8 3CH, 70H, 75H, 62H, 73H, 75H, 62H, 20H
   \              6220        
   \   00000030   786D6C6E733D       DC8 78H, 6DH, 6CH, 6EH, 73H, 3DH, 27H, 68H
   \              2768        
   \   00000038   7474703A2F2F       DC8 74H, 74H, 70H, 3AH, 2FH, 2FH, 6AH, 61H
   \              6A61        
   \   00000040   626265722E6F       DC8 62H, 62H, 65H, 72H, 2EH, 6FH, 72H, 67H
   \              7267        
   \   00000048   2F70726F746F       DC8 2FH, 70H, 72H, 6FH, 74H, 6FH, 63H, 6FH
   \              636F        
   \   00000050   6C2F70756273       DC8 6CH, 2FH, 70H, 75H, 62H, 73H, 75H, 62H
   \              7562        
   \   00000058   273E3C707562       DC8 27H, 3EH, 3CH, 70H, 75H, 62H, 6CH, 69H
   \              6C69        
   \   00000060   7368206E6F64       DC8 73H, 68H, 20H, 6EH, 6FH, 64H, 65H, 3DH
   \              653D        
   \   00000068   27687474703A       DC8 27H, 68H, 74H, 74H, 70H, 3AH, 2FH, 2FH
   \              2F2F        
   \   00000070   6A6162626572       DC8 6AH, 61H, 62H, 62H, 65H, 72H, 2EH, 6FH
   \              2E6F        
   \   00000078   72672F70726F       DC8 72H, 67H, 2FH, 70H, 72H, 6FH, 74H, 6FH
   \              746F        
   \   00000080   636F6C2F6D6F       DC8 63H, 6FH, 6CH, 2FH, 6DH, 6FH, 6FH, 64H
   \              6F64        
   \   00000088   273E3C697465       DC8 27H, 3EH, 3CH, 69H, 74H, 65H, 6DH, 3EH
   \              6D3E        
   \   00000090   3C6D6F6F6420       DC8 3CH, 6DH, 6FH, 6FH, 64H, 20H, 78H, 6DH
   \              786D        
   \   00000098   6C6E733D2768       DC8 6CH, 6EH, 73H, 3DH, 27H, 68H, 74H, 74H
   \              7474        
   \   000000A0   703A2F2F6A61       DC8 70H, 3AH, 2FH, 2FH, 6AH, 61H, 62H, 62H
   \              6262        
   \   000000A8   65722E6F7267       DC8 65H, 72H, 2EH, 6FH, 72H, 67H, 2FH, 70H
   \              2F70        
   \   000000B0   726F746F636F       DC8 72H, 6FH, 74H, 6FH, 63H, 6FH, 6CH, 2FH
   \              6C2F        
   \   000000B8   6D6F6F64273E       DC8 6DH, 6FH, 6FH, 64H, 27H, 3EH, 3CH, 25H
   \              3C25        
   \   000000C0   732F3E00           DC8 73H, 2FH, 3EH, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "</mood></item></publi...">`:
   \   00000000   3C2F6D6F6F64       DC8 "</mood></item></publish></pubsub></iq>"
   \              3E3C2F697465
   \              6D3E3C2F7075
   \              626C6973683E
   \              3C2F70756273
   \              75623E3C2F69
   \              713E00      
   \   00000027   00                 DC8 0
   \   00000028   3C746578743E       DC8 "<text>%s</text>"
   \              25733C2F7465
   \              78743E00    

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "<iq type=\\'set\\' from=\\'...">_1`:
   \   00000000   3C6971207479       DC8 3CH, 69H, 71H, 20H, 74H, 79H, 70H, 65H
   \              7065        
   \   00000008   3D2773657427       DC8 3DH, 27H, 73H, 65H, 74H, 27H, 20H, 66H
   \              2066        
   \   00000010   726F6D3D2725       DC8 72H, 6FH, 6DH, 3DH, 27H, 25H, 73H, 27H
   \              7327        
   \   00000018   2069643D2753       DC8 20H, 69H, 64H, 3DH, 27H, 53H, 69H, 65H
   \              6965        
   \   00000020   4A435F702564       DC8 4AH, 43H, 5FH, 70H, 25H, 64H, 27H, 3EH
   \              273E        
   \   00000028   3C7075627375       DC8 3CH, 70H, 75H, 62H, 73H, 75H, 62H, 20H
   \              6220        
   \   00000030   786D6C6E733D       DC8 78H, 6DH, 6CH, 6EH, 73H, 3DH, 27H, 68H
   \              2768        
   \   00000038   7474703A2F2F       DC8 74H, 74H, 70H, 3AH, 2FH, 2FH, 6AH, 61H
   \              6A61        
   \   00000040   626265722E6F       DC8 62H, 62H, 65H, 72H, 2EH, 6FH, 72H, 67H
   \              7267        
   \   00000048   2F70726F746F       DC8 2FH, 70H, 72H, 6FH, 74H, 6FH, 63H, 6FH
   \              636F        
   \   00000050   6C2F70756273       DC8 6CH, 2FH, 70H, 75H, 62H, 73H, 75H, 62H
   \              7562        
   \   00000058   273E3C707562       DC8 27H, 3EH, 3CH, 70H, 75H, 62H, 6CH, 69H
   \              6C69        
   \   00000060   7368206E6F64       DC8 73H, 68H, 20H, 6EH, 6FH, 64H, 65H, 3DH
   \              653D        
   \   00000068   27687474703A       DC8 27H, 68H, 74H, 74H, 70H, 3AH, 2FH, 2FH
   \              2F2F        
   \   00000070   6A6162626572       DC8 6AH, 61H, 62H, 62H, 65H, 72H, 2EH, 6FH
   \              2E6F        
   \   00000078   72672F70726F       DC8 72H, 67H, 2FH, 70H, 72H, 6FH, 74H, 6FH
   \              746F        
   \   00000080   636F6C2F6D6F       DC8 63H, 6FH, 6CH, 2FH, 6DH, 6FH, 6FH, 64H
   \              6F64        
   \   00000088   273E3C697465       DC8 27H, 3EH, 3CH, 69H, 74H, 65H, 6DH, 3EH
   \              6D3E        
   \   00000090   3C6D6F6F6420       DC8 3CH, 6DH, 6FH, 6FH, 64H, 20H, 78H, 6DH
   \              786D        
   \   00000098   6C6E733D2768       DC8 6CH, 6EH, 73H, 3DH, 27H, 68H, 74H, 74H
   \              7474        
   \   000000A0   703A2F2F6A61       DC8 70H, 3AH, 2FH, 2FH, 6AH, 61H, 62H, 62H
   \              6262        
   \   000000A8   65722E6F7267       DC8 65H, 72H, 2EH, 6FH, 72H, 67H, 2FH, 70H
   \              2F70        
   \   000000B0   726F746F636F       DC8 72H, 6FH, 74H, 6FH, 63H, 6FH, 6CH, 2FH
   \              6C2F        
   \   000000B8   6D6F6F64272F       DC8 6DH, 6FH, 6FH, 64H, 27H, 2FH, 3EH, 3CH
   \              3E3C        
   \   000000C0   2F6974656D3E       DC8 2FH, 69H, 74H, 65H, 6DH, 3EH, 3CH, 2FH
   \              3C2F        
   \   000000C8   7075626C6973       DC8 70H, 75H, 62H, 6CH, 69H, 73H, 68H, 3EH
   \              683E        
   \   000000D0   3C2F70756273       DC8 3CH, 2FH, 70H, 75H, 62H, 73H, 75H, 62H
   \              7562        
   \   000000D8   3E3C2F69713E       DC8 3EH, 3CH, 2FH, 69H, 71H, 3EH, 0
   \              00          
   \   000000DF   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "id=\\'%s\\'">`:
   \   00000000   69643D272573       DC8 "id='%s'"
   \              2700        
   \   00000008   3C6971207479       DC8 "<iq type='%s' %s from='%s'"
   \              70653D272573
   \              272025732066
   \              726F6D3D2725
   \              732700      
   \   00000023   00                 DC8 0
   \   00000024   20746F3D2725       DC8 " to='%s'"
   \              732700      
   \   0000002D   000000             DC8 0, 0, 0
   \   00000030   3E0D0A3C7175       DC8 ">\015\012<query xmlns='%s'>\015\012%s\015\012</query>\015\012</iq>"
   \              65727920786D
   \              6C6E733D2725
   \              73273E0D0A25
   \              730D0A3C2F71
   \              756572793E0D
   \              0A3C2F69713E
   \              00          
   \   0000005B   00                 DC8 0
   \   0000005C   3E0D0A3C7175       DC8 ">\015\012<query xmlns='%s'/>\015\012</iq>"
   \              65727920786D
   \              6C6E733D2725
   \              73272F3E0D0A
   \              3C2F69713E00
   \   0000007A   0000               DC8 0, 0

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   00                 DC8 ""

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "<?xml version=\\'1.0\\' e...">`:
   \   00000000   3C3F786D6C20       DC8 3CH, 3FH, 78H, 6DH, 6CH, 20H, 76H, 65H
   \              7665        
   \   00000008   7273696F6E3D       DC8 72H, 73H, 69H, 6FH, 6EH, 3DH, 27H, 31H
   \              2731        
   \   00000010   2E302720656E       DC8 2EH, 30H, 27H, 20H, 65H, 6EH, 63H, 6FH
   \              636F        
   \   00000018   64696E673D27       DC8 64H, 69H, 6EH, 67H, 3DH, 27H, 55H, 54H
   \              5554        
   \   00000020   462D38273F3E       DC8 46H, 2DH, 38H, 27H, 3FH, 3EH, 0AH, 3CH
   \              0A3C        
   \   00000028   73747265616D       DC8 73H, 74H, 72H, 65H, 61H, 6DH, 3AH, 73H
   \              3A73        
   \   00000030   747265616D20       DC8 74H, 72H, 65H, 61H, 6DH, 20H, 74H, 6FH
   \              746F        
   \   00000038   3D2725732720       DC8 3DH, 27H, 25H, 73H, 27H, 20H, 78H, 6DH
   \              786D        
   \   00000040   6C6E733D276A       DC8 6CH, 6EH, 73H, 3DH, 27H, 6AH, 61H, 62H
   \              6162        
   \   00000048   6265723A636C       DC8 62H, 65H, 72H, 3AH, 63H, 6CH, 69H, 65H
   \              6965        
   \   00000050   6E742720786D       DC8 6EH, 74H, 27H, 20H, 78H, 6DH, 6CH, 6EH
   \              6C6E        
   \   00000058   733A73747265       DC8 73H, 3AH, 73H, 74H, 72H, 65H, 61H, 6DH
   \              616D        
   \   00000060   3D2768747470       DC8 3DH, 27H, 68H, 74H, 74H, 70H, 3AH, 2FH
   \              3A2F        
   \   00000068   2F6574686572       DC8 2FH, 65H, 74H, 68H, 65H, 72H, 78H, 2EH
   \              782E        
   \   00000070   6A6162626572       DC8 6AH, 61H, 62H, 62H, 65H, 72H, 2EH, 6FH
   \              2E6F        
   \   00000078   72672F737472       DC8 72H, 67H, 2FH, 73H, 74H, 72H, 65H, 61H
   \              6561        
   \   00000080   6D732720786D       DC8 6DH, 73H, 27H, 20H, 78H, 6DH, 6CH, 3AH
   \              6C3A        
   \   00000088   6C616E673D27       DC8 6CH, 61H, 6EH, 67H, 3DH, 27H, 65H, 6EH
   \              656E        
   \   00000090   273E00             DC8 27H, 3EH, 0
   \   00000093   00                 DC8 0
   \   00000094   53656E642057       DC8 "Send Welcome"
   \              656C636F6D65
   \              00          
   \   000000A1   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "</stream:stream>">`:
   \   00000000   3C2F73747265       DC8 "</stream:stream>"
   \              616D3A737472
   \              65616D3E00  
   \   00000011   000000             DC8 0, 0, 0
   \   00000014   53656E642044       DC8 "Send Disconnect"
   \              6973636F6E6E
   \              65637400    

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "%s@%s">`:
   \   00000000   257340257300       DC8 "%s@%s"
   \   00000006   0000               DC8 0, 0
   \   00000008   25732F257300       DC8 "%s/%s"
   \   0000000E   0000               DC8 0, 0
   \   00000010   3C757365726E       DC8 3CH, 75H, 73H, 65H, 72H, 6EH, 61H, 6DH
   \              616D        
   \   00000018   653E25733C2F       DC8 65H, 3EH, 25H, 73H, 3CH, 2FH, 75H, 73H
   \              7573        
   \   00000020   65726E616D65       DC8 65H, 72H, 6EH, 61H, 6DH, 65H, 3EH, 0AH
   \              3E0A        
   \   00000028   3C7061737377       DC8 3CH, 70H, 61H, 73H, 73H, 77H, 6FH, 72H
   \              6F72        
   \   00000030   643E25733C2F       DC8 64H, 3EH, 25H, 73H, 3CH, 2FH, 70H, 61H
   \              7061        
   \   00000038   7373776F7264       DC8 73H, 73H, 77H, 6FH, 72H, 64H, 3EH, 0AH
   \              3E0A        
   \   00000040   3C7265736F75       DC8 3CH, 72H, 65H, 73H, 6FH, 75H, 72H, 63H
   \              7263        
   \   00000048   653E25733C2F       DC8 65H, 3EH, 25H, 73H, 3CH, 2FH, 72H, 65H
   \              7265        
   \   00000050   736F75726365       DC8 73H, 6FH, 75H, 72H, 63H, 65H, 3EH, 0
   \              3E00        
   \   00000058   6A6162626572       DC8 "jabber:iq:auth"
   \              3A69713A6175
   \              746800      
   \   00000067   00                 DC8 0
   \   00000068   53656E642061       DC8 "Send auth"
   \              75746800    
   \   00000072   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \   00000000   73657400           DC8 "set"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "SieJC_discoinfo">`:
   \   00000000   5369654A435F       DC8 "SieJC_discoinfo"
   \              646973636F69
   \              6E666F00    

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "get">`:
   \   00000000   67657400           DC8 "get"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "http://jabber.org/pro...">_4`:
   \   00000000   687474703A2F       DC8 "http://jabber.org/protocol/disco#info"
   \              2F6A61626265
   \              722E6F72672F
   \              70726F746F63
   \              6F6C2F646973
   \              636F23696E66
   \              6F00        
   \   00000026   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "get">_1`:
   \   00000000   67657400           DC8 "get"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "jabber:iq:version">_1`:
   \   00000000   6A6162626572       DC8 "jabber:iq:version"
   \              3A69713A7665
   \              7273696F6E00
   \   00000012   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "get">_2`:
   \   00000000   67657400           DC8 "get"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "jabber:iq:time">_1`:
   \   00000000   6A6162626572       DC8 "jabber:iq:time"
   \              3A69713A7469
   \              6D6500      
   \   0000000F   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "get">_3`:
   \   00000000   67657400           DC8 "get"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "jabber:iq:last">_1`:
   \   00000000   6A6162626572       DC8 "jabber:iq:last"
   \              3A69713A6C61
   \              737400      
   \   0000000F   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "<urn:xmpp:receipts">`:
   \   00000000   3C75726E3A78       DC8 "<urn:xmpp:receipts"
   \              6D70703A7265
   \              636569707473
   \              00          
   \   00000013   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "<http://jabber.org/pr...">`:
   \   00000000   3C687474703A       DC8 "<http://jabber.org/protocol/chatstates"
   \              2F2F6A616262
   \              65722E6F7267
   \              2F70726F746F
   \              636F6C2F6368
   \              617473746174
   \              657300      
   \   00000027   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "<urn:xmpp:attention:0">`:
   \   00000000   3C75726E3A78       DC8 "<urn:xmpp:attention:0"
   \              6D70703A6174
   \              74656E74696F
   \              6E3A3000    
   \   00000016   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "<presence><priority>%...">`:
   \   00000000   3C7072657365       DC8 3CH, 70H, 72H, 65H, 73H, 65H, 6EH, 63H
   \              6E63        
   \   00000008   653E3C707269       DC8 65H, 3EH, 3CH, 70H, 72H, 69H, 6FH, 72H
   \              6F72        
   \   00000010   6974793E2564       DC8 69H, 74H, 79H, 3EH, 25H, 64H, 3CH, 2FH
   \              3C2F        
   \   00000018   7072696F7269       DC8 70H, 72H, 69H, 6FH, 72H, 69H, 74H, 79H
   \              7479        
   \   00000020   3E3C73686F77       DC8 3EH, 3CH, 73H, 68H, 6FH, 77H, 3EH, 25H
   \              3E25        
   \   00000028   733C2F73686F       DC8 73H, 3CH, 2FH, 73H, 68H, 6FH, 77H, 3EH
   \              773E        
   \   00000030   3C7374617475       DC8 3CH, 73H, 74H, 61H, 74H, 75H, 73H, 3EH
   \              733E        
   \   00000038   25733C2F7374       DC8 25H, 73H, 3CH, 2FH, 73H, 74H, 61H, 74H
   \              6174        
   \   00000040   75733E3C6320       DC8 75H, 73H, 3EH, 3CH, 63H, 20H, 78H, 6DH
   \              786D        
   \   00000048   6C6E733D2768       DC8 6CH, 6EH, 73H, 3DH, 27H, 68H, 74H, 74H
   \              7474        
   \   00000050   703A2F2F6A61       DC8 70H, 3AH, 2FH, 2FH, 6AH, 61H, 62H, 62H
   \              6262        
   \   00000058   65722E6F7267       DC8 65H, 72H, 2EH, 6FH, 72H, 67H, 2FH, 70H
   \              2F70        
   \   00000060   726F746F636F       DC8 72H, 6FH, 74H, 6FH, 63H, 6FH, 6CH, 2FH
   \              6C2F        
   \   00000068   636170732720       DC8 63H, 61H, 70H, 73H, 27H, 20H, 6EH, 6FH
   \              6E6F        
   \   00000070   64653D272573       DC8 64H, 65H, 3DH, 27H, 25H, 73H, 20H, 25H
   \              2025        
   \   00000078   732D72256427       DC8 73H, 2DH, 72H, 25H, 64H, 27H, 20H, 76H
   \              2076        
   \   00000080   65723D272573       DC8 65H, 72H, 3DH, 27H, 25H, 73H, 27H, 20H
   \              2720        
   \   00000088   2F3E3C2F7072       DC8 2FH, 3EH, 3CH, 2FH, 70H, 72H, 65H, 73H
   \              6573        
   \   00000090   656E63653E00       DC8 65H, 6EH, 63H, 65H, 3EH, 0
   \   00000096   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "<presence><priority>%...">_1`:
   \   00000000   3C7072657365       DC8 3CH, 70H, 72H, 65H, 73H, 65H, 6EH, 63H
   \              6E63        
   \   00000008   653E3C707269       DC8 65H, 3EH, 3CH, 70H, 72H, 69H, 6FH, 72H
   \              6F72        
   \   00000010   6974793E2564       DC8 69H, 74H, 79H, 3EH, 25H, 64H, 3CH, 2FH
   \              3C2F        
   \   00000018   7072696F7269       DC8 70H, 72H, 69H, 6FH, 72H, 69H, 74H, 79H
   \              7479        
   \   00000020   3E3C73686F77       DC8 3EH, 3CH, 73H, 68H, 6FH, 77H, 3EH, 25H
   \              3E25        
   \   00000028   733C2F73686F       DC8 73H, 3CH, 2FH, 73H, 68H, 6FH, 77H, 3EH
   \              773E        
   \   00000030   3C6320786D6C       DC8 3CH, 63H, 20H, 78H, 6DH, 6CH, 6EH, 73H
   \              6E73        
   \   00000038   3D2768747470       DC8 3DH, 27H, 68H, 74H, 74H, 70H, 3AH, 2FH
   \              3A2F        
   \   00000040   2F6A61626265       DC8 2FH, 6AH, 61H, 62H, 62H, 65H, 72H, 2EH
   \              722E        
   \   00000048   6F72672F7072       DC8 6FH, 72H, 67H, 2FH, 70H, 72H, 6FH, 74H
   \              6F74        
   \   00000050   6F636F6C2F63       DC8 6FH, 63H, 6FH, 6CH, 2FH, 63H, 61H, 70H
   \              6170        
   \   00000058   7327206E6F64       DC8 73H, 27H, 20H, 6EH, 6FH, 64H, 65H, 3DH
   \              653D        
   \   00000060   272573202573       DC8 27H, 25H, 73H, 20H, 25H, 73H, 2DH, 72H
   \              2D72        
   \   00000068   256427207665       DC8 25H, 64H, 27H, 20H, 76H, 65H, 72H, 3DH
   \              723D        
   \   00000070   27257327202F       DC8 27H, 25H, 73H, 27H, 20H, 2FH, 3EH, 3CH
   \              3E3C        
   \   00000078   2F7072657365       DC8 2FH, 70H, 72H, 65H, 73H, 65H, 6EH, 63H
   \              6E63        
   \   00000080   653E00             DC8 65H, 3EH, 0
   \   00000083   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "<presence type=\\'invis...">`:
   \   00000000   3C7072657365       DC8 "<presence type='invisible'/>"
   \              6E6365207479
   \              70653D27696E
   \              76697369626C
   \              65272F3E00  
   \   0000001D   000000             DC8 0, 0, 0
   \   00000020   53656E642070       DC8 "Send presence"
   \              726573656E63
   \              6500        
   \   0000002E   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "<presence type=\\'unava...">`:
   \   00000000   3C7072657365       DC8 3CH, 70H, 72H, 65H, 73H, 65H, 6EH, 63H
   \              6E63        
   \   00000008   652074797065       DC8 65H, 20H, 74H, 79H, 70H, 65H, 3DH, 27H
   \              3D27        
   \   00000010   756E61766169       DC8 75H, 6EH, 61H, 76H, 61H, 69H, 6CH, 61H
   \              6C61        
   \   00000018   626C65273E3C       DC8 62H, 6CH, 65H, 27H, 3EH, 3CH, 73H, 74H
   \              7374        
   \   00000020   617475733E25       DC8 61H, 74H, 75H, 73H, 3EH, 25H, 73H, 3CH
   \              733C        
   \   00000028   2F7374617475       DC8 2FH, 73H, 74H, 61H, 74H, 75H, 73H, 3EH
   \              733E        
   \   00000030   3C2F70726573       DC8 3CH, 2FH, 70H, 72H, 65H, 73H, 65H, 6EH
   \              656E        
   \   00000038   63653E00           DC8 63H, 65H, 3EH, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "<presence type=\\'unava...">_1`:
   \   00000000   3C7072657365       DC8 "<presence type='unavailable'/>"
   \              6E6365207479
   \              70653D27756E
   \              617661696C61
   \              626C65272F3E
   \              00          
   \   0000001F   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "<presence from=\\'%s\\' t...">`:
   \   00000000   3C7072657365       DC8 3CH, 70H, 72H, 65H, 73H, 65H, 6EH, 63H
   \              6E63        
   \   00000008   652066726F6D       DC8 65H, 20H, 66H, 72H, 6FH, 6DH, 3DH, 27H
   \              3D27        
   \   00000010   25732720746F       DC8 25H, 73H, 27H, 20H, 74H, 6FH, 3DH, 27H
   \              3D27        
   \   00000018   2573273E3C73       DC8 25H, 73H, 27H, 3EH, 3CH, 73H, 68H, 6FH
   \              686F        
   \   00000020   773E25733C2F       DC8 77H, 3EH, 25H, 73H, 3CH, 2FH, 73H, 68H
   \              7368        
   \   00000028   6F773E3C7374       DC8 6FH, 77H, 3EH, 3CH, 73H, 74H, 61H, 74H
   \              6174        
   \   00000030   75733E25733C       DC8 75H, 73H, 3EH, 25H, 73H, 3CH, 2FH, 73H
   \              2F73        
   \   00000038   74617475733E       DC8 74H, 61H, 74H, 75H, 73H, 3EH, 3CH, 63H
   \              3C63        
   \   00000040   20786D6C6E73       DC8 20H, 78H, 6DH, 6CH, 6EH, 73H, 3DH, 27H
   \              3D27        
   \   00000048   687474703A2F       DC8 68H, 74H, 74H, 70H, 3AH, 2FH, 2FH, 6AH
   \              2F6A        
   \   00000050   61626265722E       DC8 61H, 62H, 62H, 65H, 72H, 2EH, 6FH, 72H
   \              6F72        
   \   00000058   672F70726F74       DC8 67H, 2FH, 70H, 72H, 6FH, 74H, 6FH, 63H
   \              6F63        
   \   00000060   6F6C2F636170       DC8 6FH, 6CH, 2FH, 63H, 61H, 70H, 73H, 27H
   \              7327        
   \   00000068   206E6F64653D       DC8 20H, 6EH, 6FH, 64H, 65H, 3DH, 27H, 25H
   \              2725        
   \   00000070   732025732D72       DC8 73H, 20H, 25H, 73H, 2DH, 72H, 25H, 64H
   \              2564        
   \   00000078   27207665723D       DC8 27H, 20H, 76H, 65H, 72H, 3DH, 27H, 25H
   \              2725        
   \   00000080   7327202F3E3C       DC8 73H, 27H, 20H, 2FH, 3EH, 3CH, 2FH, 70H
   \              2F70        
   \   00000088   726573656E63       DC8 72H, 65H, 73H, 65H, 6EH, 63H, 65H, 3EH
   \              653E        
   \   00000090   00                 DC8 0
   \   00000091   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "<presence from=\\'%s\\' t...">_1`:
   \   00000000   3C7072657365       DC8 3CH, 70H, 72H, 65H, 73H, 65H, 6EH, 63H
   \              6E63        
   \   00000008   652066726F6D       DC8 65H, 20H, 66H, 72H, 6FH, 6DH, 3DH, 27H
   \              3D27        
   \   00000010   25732720746F       DC8 25H, 73H, 27H, 20H, 74H, 6FH, 3DH, 27H
   \              3D27        
   \   00000018   2573273E3C73       DC8 25H, 73H, 27H, 3EH, 3CH, 73H, 68H, 6FH
   \              686F        
   \   00000020   773E25733C2F       DC8 77H, 3EH, 25H, 73H, 3CH, 2FH, 73H, 68H
   \              7368        
   \   00000028   6F773E3C6320       DC8 6FH, 77H, 3EH, 3CH, 63H, 20H, 78H, 6DH
   \              786D        
   \   00000030   6C6E733D2768       DC8 6CH, 6EH, 73H, 3DH, 27H, 68H, 74H, 74H
   \              7474        
   \   00000038   703A2F2F6A61       DC8 70H, 3AH, 2FH, 2FH, 6AH, 61H, 62H, 62H
   \              6262        
   \   00000040   65722E6F7267       DC8 65H, 72H, 2EH, 6FH, 72H, 67H, 2FH, 70H
   \              2F70        
   \   00000048   726F746F636F       DC8 72H, 6FH, 74H, 6FH, 63H, 6FH, 6CH, 2FH
   \              6C2F        
   \   00000050   636170732720       DC8 63H, 61H, 70H, 73H, 27H, 20H, 6EH, 6FH
   \              6E6F        
   \   00000058   64653D272573       DC8 64H, 65H, 3DH, 27H, 25H, 73H, 20H, 25H
   \              2025        
   \   00000060   732D72256427       DC8 73H, 2DH, 72H, 25H, 64H, 27H, 20H, 76H
   \              2076        
   \   00000068   65723D272573       DC8 65H, 72H, 3DH, 27H, 25H, 73H, 27H, 20H
   \              2720        
   \   00000070   2F3E3C2F7072       DC8 2FH, 3EH, 3CH, 2FH, 70H, 72H, 65H, 73H
   \              6573        
   \   00000078   656E63653E00       DC8 65H, 6EH, 63H, 65H, 3EH, 0
   \   0000007E   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "<presence to=\\'%s\\' typ...">`:
   \   00000000   3C7072657365       DC8 "<presence to='%s' type='%s'/>"
   \              6E636520746F
   \              3D2725732720
   \              747970653D27
   \              2573272F3E00
   \   0000001E   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \   00000000   67657400           DC8 "get"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "<message to=\\'%s\\' id=\\'...">_1`:
   \   00000000   3C6D65737361       DC8 3CH, 6DH, 65H, 73H, 73H, 61H, 67H, 65H
   \              6765        
   \   00000008   20746F3D2725       DC8 20H, 74H, 6FH, 3DH, 27H, 25H, 73H, 27H
   \              7327        
   \   00000010   2069643D2753       DC8 20H, 69H, 64H, 3DH, 27H, 53H, 69H, 65H
   \              6965        
   \   00000018   4A435F256427       DC8 4AH, 43H, 5FH, 25H, 64H, 27H, 20H, 74H
   \              2074        
   \   00000020   7970653D2725       DC8 79H, 70H, 65H, 3DH, 27H, 25H, 73H, 27H
   \              7327        
   \   00000028   3E3C636F6D70       DC8 3EH, 3CH, 63H, 6FH, 6DH, 70H, 6FH, 73H
   \              6F73        
   \   00000030   696E6720786D       DC8 69H, 6EH, 67H, 20H, 78H, 6DH, 6CH, 6EH
   \              6C6E        
   \   00000038   733D27687474       DC8 73H, 3DH, 27H, 68H, 74H, 74H, 70H, 3AH
   \              703A        
   \   00000040   2F2F6A616262       DC8 2FH, 2FH, 6AH, 61H, 62H, 62H, 65H, 72H
   \              6572        
   \   00000048   2E6F72672F70       DC8 2EH, 6FH, 72H, 67H, 2FH, 70H, 72H, 6FH
   \              726F        
   \   00000050   746F636F6C2F       DC8 74H, 6FH, 63H, 6FH, 6CH, 2FH, 63H, 68H
   \              6368        
   \   00000058   617473746174       DC8 61H, 74H, 73H, 74H, 61H, 74H, 65H, 73H
   \              6573        
   \   00000060   272F3E3C2F6D       DC8 27H, 2FH, 3EH, 3CH, 2FH, 6DH, 65H, 73H
   \              6573        
   \   00000068   736167653E00       DC8 73H, 61H, 67H, 65H, 3EH, 0
   \   0000006E   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "<message to=\\'%s\\' id=\\'...">_2`:
   \   00000000   3C6D65737361       DC8 3CH, 6DH, 65H, 73H, 73H, 61H, 67H, 65H
   \              6765        
   \   00000008   20746F3D2725       DC8 20H, 74H, 6FH, 3DH, 27H, 25H, 73H, 27H
   \              7327        
   \   00000010   2069643D2753       DC8 20H, 69H, 64H, 3DH, 27H, 53H, 69H, 65H
   \              6965        
   \   00000018   4A435F256427       DC8 4AH, 43H, 5FH, 25H, 64H, 27H, 20H, 74H
   \              2074        
   \   00000020   7970653D2725       DC8 79H, 70H, 65H, 3DH, 27H, 25H, 73H, 27H
   \              7327        
   \   00000028   3E3C61637469       DC8 3EH, 3CH, 61H, 63H, 74H, 69H, 76H, 65H
   \              7665        
   \   00000030   20786D6C6E73       DC8 20H, 78H, 6DH, 6CH, 6EH, 73H, 3DH, 27H
   \              3D27        
   \   00000038   687474703A2F       DC8 68H, 74H, 74H, 70H, 3AH, 2FH, 2FH, 6AH
   \              2F6A        
   \   00000040   61626265722E       DC8 61H, 62H, 62H, 65H, 72H, 2EH, 6FH, 72H
   \              6F72        
   \   00000048   672F70726F74       DC8 67H, 2FH, 70H, 72H, 6FH, 74H, 6FH, 63H
   \              6F63        
   \   00000050   6F6C2F636861       DC8 6FH, 6CH, 2FH, 63H, 68H, 61H, 74H, 73H
   \              7473        
   \   00000058   746174657327       DC8 74H, 61H, 74H, 65H, 73H, 27H, 2FH, 3EH
   \              2F3E        
   \   00000060   3C2F6D657373       DC8 3CH, 2FH, 6DH, 65H, 73H, 73H, 61H, 67H
   \              6167        
   \   00000068   653E00             DC8 65H, 3EH, 0
   \   0000006B   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "+00:00">`:
   \   00000000   2B30303A3030       DC8 "+00:00"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "+01:00">`:
   \   00000000   2B30313A3030       DC8 "+01:00"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "+02:00">`:
   \   00000000   2B30323A3030       DC8 "+02:00"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "+03:00">`:
   \   00000000   2B30333A3030       DC8 "+03:00"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "+04:00">`:
   \   00000000   2B30343A3030       DC8 "+04:00"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "+05:00">`:
   \   00000000   2B30353A3030       DC8 "+05:00"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "+06:00">`:
   \   00000000   2B30363A3030       DC8 "+06:00"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "+07:00">`:
   \   00000000   2B30373A3030       DC8 "+07:00"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "+08:00">`:
   \   00000000   2B30383A3030       DC8 "+08:00"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "+09:00">`:
   \   00000000   2B30393A3030       DC8 "+09:00"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "+10:00">`:
   \   00000000   2B31303A3030       DC8 "+10:00"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "+11:00">`:
   \   00000000   2B31313A3030       DC8 "+11:00"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "+12:00">`:
   \   00000000   2B31323A3030       DC8 "+12:00"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "-01:00">`:
   \   00000000   2D30313A3030       DC8 "-01:00"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "-02:00">`:
   \   00000000   2D30323A3030       DC8 "-02:00"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "-03:00">`:
   \   00000000   2D30333A3030       DC8 "-03:00"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "-04:00">`:
   \   00000000   2D30343A3030       DC8 "-04:00"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "-05:00">`:
   \   00000000   2D30353A3030       DC8 "-05:00"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "-06:00">`:
   \   00000000   2D30363A3030       DC8 "-06:00"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "-07:00">`:
   \   00000000   2D30373A3030       DC8 "-07:00"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "-08:00">`:
   \   00000000   2D30383A3030       DC8 "-08:00"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "-09:00">`:
   \   00000000   2D30393A3030       DC8 "-09:00"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "-10:00">`:
   \   00000000   2D31303A3030       DC8 "-10:00"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "-11:00">`:
   \   00000000   2D31313A3030       DC8 "-11:00"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant {&"+00:00", &"+01:00", &"+02:00", &`:
   \   00000000   ............       DC32 `?<Constant "+00:00">`, `?<Constant "+01:00">`
   \              ....        
   \   00000008   ............       DC32 `?<Constant "+02:00">`, `?<Constant "+03:00">`
   \              ....        
   \   00000010   ............       DC32 `?<Constant "+04:00">`, `?<Constant "+05:00">`
   \              ....        
   \   00000018   ............       DC32 `?<Constant "+06:00">`, `?<Constant "+07:00">`
   \              ....        
   \   00000020   ............       DC32 `?<Constant "+08:00">`, `?<Constant "+09:00">`
   \              ....        
   \   00000028   ............       DC32 `?<Constant "+10:00">`, `?<Constant "+11:00">`
   \              ....        
   \   00000030   ............       DC32 `?<Constant "+12:00">`, `?<Constant "-01:00">`
   \              ....        
   \   00000038   ............       DC32 `?<Constant "-02:00">`, `?<Constant "-03:00">`
   \              ....        
   \   00000040   ............       DC32 `?<Constant "-04:00">`, `?<Constant "-05:00">`
   \              ....        
   \   00000048   ............       DC32 `?<Constant "-06:00">`, `?<Constant "-07:00">`
   \              ....        
   \   00000050   ............       DC32 `?<Constant "-08:00">`, `?<Constant "-09:00">`
   \              ....        
   \   00000058   ............       DC32 `?<Constant "-10:00">`, `?<Constant "-11:00">`
   \              ....        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "<iq type=\\'result\\' id=...">`:
   \   00000000   3C6971207479       DC8 3CH, 69H, 71H, 20H, 74H, 79H, 70H, 65H
   \              7065        
   \   00000008   3D2772657375       DC8 3DH, 27H, 72H, 65H, 73H, 75H, 6CH, 74H
   \              6C74        
   \   00000010   272069643D27       DC8 27H, 20H, 69H, 64H, 3DH, 27H, 25H, 73H
   \              2573        
   \   00000018   272066726F6D       DC8 27H, 20H, 66H, 72H, 6FH, 6DH, 3DH, 27H
   \              3D27        
   \   00000020   25732720746F       DC8 25H, 73H, 27H, 20H, 74H, 6FH, 3DH, 27H
   \              3D27        
   \   00000028   2573273E0D0A       DC8 25H, 73H, 27H, 3EH, 0DH, 0AH, 3CH, 71H
   \              3C71        
   \   00000030   756572792078       DC8 75H, 65H, 72H, 79H, 20H, 78H, 6DH, 6CH
   \              6D6C        
   \   00000038   6E733D276A61       DC8 6EH, 73H, 3DH, 27H, 6AH, 61H, 62H, 62H
   \              6262        
   \   00000040   65723A69713A       DC8 65H, 72H, 3AH, 69H, 71H, 3AH, 6CH, 61H
   \              6C61        
   \   00000048   737427207365       DC8 73H, 74H, 27H, 20H, 73H, 65H, 63H, 6FH
   \              636F        
   \   00000050   6E64733D2725       DC8 6EH, 64H, 73H, 3DH, 27H, 25H, 64H, 27H
   \              6427        
   \   00000058   2F3E0D0A3C2F       DC8 2FH, 3EH, 0DH, 0AH, 3CH, 2FH, 69H, 71H
   \              6971        
   \   00000060   3E00               DC8 3EH, 0
   \   00000062   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "<feature var=\\'urn:xmp...">_1`:
   \   00000000   3C6665617475       DC8 "<feature var='urn:xmpp:attention:0'/>"
   \              726520766172
   \              3D2775726E3A
   \              786D70703A61
   \              7474656E7469
   \              6F6E3A30272F
   \              3E00        
   \   00000026   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "<feature var=\\'http://...">`:
   \   00000000   3C6665617475       DC8 3CH, 66H, 65H, 61H, 74H, 75H, 72H, 65H
   \              7265        
   \   00000008   207661723D27       DC8 20H, 76H, 61H, 72H, 3DH, 27H, 68H, 74H
   \              6874        
   \   00000010   74703A2F2F6A       DC8 74H, 70H, 3AH, 2FH, 2FH, 6AH, 61H, 62H
   \              6162        
   \   00000018   6265722E6F72       DC8 62H, 65H, 72H, 2EH, 6FH, 72H, 67H, 2FH
   \              672F        
   \   00000020   70726F746F63       DC8 70H, 72H, 6FH, 74H, 6FH, 63H, 6FH, 6CH
   \              6F6C        
   \   00000028   2F6368617473       DC8 2FH, 63H, 68H, 61H, 74H, 73H, 74H, 61H
   \              7461        
   \   00000030   746573272F3E       DC8 74H, 65H, 73H, 27H, 2FH, 3EH, 0
   \              00          
   \   00000037   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "<iq type=\\'result\\' id=...">_1`:
   \   00000000   3C6971207479       DC8 "<iq type='result' id='%s' from='%s' to='%s'/>"
   \              70653D277265
   \              73756C742720
   \              69643D272573
   \              272066726F6D
   \              3D2725732720
   \              746F3D272573
   \              272F3E00    
   \   0000002E   0000               DC8 0, 0

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   746F00             DC8 "to"

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   2F00               DC8 "/"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "<presence from=\\'%s\\' t...">_2`:
   \   00000000   3C7072657365       DC8 3CH, 70H, 72H, 65H, 73H, 65H, 6EH, 63H
   \              6E63        
   \   00000008   652066726F6D       DC8 65H, 20H, 66H, 72H, 6FH, 6DH, 3DH, 27H
   \              3D27        
   \   00000010   25732720746F       DC8 25H, 73H, 27H, 20H, 74H, 6FH, 3DH, 27H
   \              3D27        
   \   00000018   25732F257327       DC8 25H, 73H, 2FH, 25H, 73H, 27H, 3EH, 3CH
   \              3E3C        
   \   00000020   7820786D6C6E       DC8 78H, 20H, 78H, 6DH, 6CH, 6EH, 73H, 3DH
   \              733D        
   \   00000028   27687474703A       DC8 27H, 68H, 74H, 74H, 70H, 3AH, 2FH, 2FH
   \              2F2F        
   \   00000030   6A6162626572       DC8 6AH, 61H, 62H, 62H, 65H, 72H, 2EH, 6FH
   \              2E6F        
   \   00000038   72672F70726F       DC8 72H, 67H, 2FH, 70H, 72H, 6FH, 74H, 6FH
   \              746F        
   \   00000040   636F6C2F6D75       DC8 63H, 6FH, 6CH, 2FH, 6DH, 75H, 63H, 27H
   \              6327        
   \   00000048   3E3C68697374       DC8 3EH, 3CH, 68H, 69H, 73H, 74H, 6FH, 72H
   \              6F72        
   \   00000050   79206D617873       DC8 79H, 20H, 6DH, 61H, 78H, 73H, 74H, 61H
   \              7461        
   \   00000058   6E7A61733D27       DC8 6EH, 7AH, 61H, 73H, 3DH, 27H, 25H, 64H
   \              2564        
   \   00000060   272F3E00           DC8 27H, 2FH, 3EH, 0
   \   00000064   3C7061737377       DC8 "<password>%s</password>"
   \              6F72643E2573
   \              3C2F70617373
   \              776F72643E00
   \   0000007C   3C2F783E3C73       DC8 "</x><show>%s</show><status>%s</status></presence>"
   \              686F773E2573
   \              3C2F73686F77
   \              3E3C73746174
   \              75733E25733C
   \              2F7374617475
   \              733E3C2F7072
   \              6573656E6365
   \              3E00        
   \   000000AE   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "<presence from=\\'%s\\' t...">_3`:
   \   00000000   3C7072657365       DC8 3CH, 70H, 72H, 65H, 73H, 65H, 6EH, 63H
   \              6E63        
   \   00000008   652066726F6D       DC8 65H, 20H, 66H, 72H, 6FH, 6DH, 3DH, 27H
   \              3D27        
   \   00000010   25732720746F       DC8 25H, 73H, 27H, 20H, 74H, 6FH, 3DH, 27H
   \              3D27        
   \   00000018   257327207479       DC8 25H, 73H, 27H, 20H, 74H, 79H, 70H, 65H
   \              7065        
   \   00000020   3D27756E6176       DC8 3DH, 27H, 75H, 6EH, 61H, 76H, 61H, 69H
   \              6169        
   \   00000028   6C61626C6527       DC8 6CH, 61H, 62H, 6CH, 65H, 27H, 3EH, 3CH
   \              3E3C        
   \   00000030   737461747573       DC8 73H, 74H, 61H, 74H, 75H, 73H, 3EH, 25H
   \              3E25        
   \   00000038   733C2F737461       DC8 73H, 3CH, 2FH, 73H, 74H, 61H, 74H, 75H
   \              7475        
   \   00000040   733E3C2F7072       DC8 73H, 3EH, 3CH, 2FH, 70H, 72H, 65H, 73H
   \              6573        
   \   00000048   656E63653E00       DC8 65H, 6EH, 63H, 65H, 3EH, 0
   \   0000004E   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\302\\373\\365\\356\\344 \\350\\347 MUC `:
   \   00000000   C2FBF5EEE420       DC8 "\302\373\365\356\344 \350\347 MUC \342\373\357\356\353\355\345\355!"
   \              E8E7204D5543
   \              20E2FBEFEEEB
   \              EDE5ED2100  
   \   00000017   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "jid">`:
   \   00000000   6A696400           DC8 "jid"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "subscribe">_1`:
   \   00000000   737562736372       DC8 "subscribe"
   \              69626500    
   \   0000000A   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "ask">`:
   \   00000000   61736B00           DC8 "ask"

   \                                 In segment DATA_C, align 4, align-sorted
   \   00000000   61736B00           DC8 "ask"

   \                                 In segment DATA_C, align 4, align-sorted
   \   00000000   6A696400           DC8 "jid"

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   4000               DC8 "@"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "<iq to=\\'%s\\' id=\\'%s\\' t...">`:
   \   00000000   3C697120746F       DC8 3CH, 69H, 71H, 20H, 74H, 6FH, 3DH, 27H
   \              3D27        
   \   00000008   257327206964       DC8 25H, 73H, 27H, 20H, 69H, 64H, 3DH, 27H
   \              3D27        
   \   00000010   257327207479       DC8 25H, 73H, 27H, 20H, 74H, 79H, 70H, 65H
   \              7065        
   \   00000018   3D276572726F       DC8 3DH, 27H, 65H, 72H, 72H, 6FH, 72H, 27H
   \              7227        
   \   00000020   3E3C6572726F       DC8 3EH, 3CH, 65H, 72H, 72H, 6FH, 72H, 20H
   \              7220        
   \   00000028   747970653D27       DC8 74H, 79H, 70H, 65H, 3DH, 27H, 63H, 61H
   \              6361        
   \   00000030   6E63656C273E       DC8 6EH, 63H, 65H, 6CH, 27H, 3EH, 3CH, 66H
   \              3C66        
   \   00000038   656174757265       DC8 65H, 61H, 74H, 75H, 72H, 65H, 2DH, 6EH
   \              2D6E        
   \   00000040   6F742D696D70       DC8 6FH, 74H, 2DH, 69H, 6DH, 70H, 6CH, 65H
   \              6C65        
   \   00000048   6D656E746564       DC8 6DH, 65H, 6EH, 74H, 65H, 64H, 20H, 78H
   \              2078        
   \   00000050   6D6C6E733D27       DC8 6DH, 6CH, 6EH, 73H, 3DH, 27H, 75H, 72H
   \              7572        
   \   00000058   6E3A69657466       DC8 6EH, 3AH, 69H, 65H, 74H, 66H, 3AH, 70H
   \              3A70        
   \   00000060   6172616D733A       DC8 61H, 72H, 61H, 6DH, 73H, 3AH, 78H, 6DH
   \              786D        
   \   00000068   6C3A6E733A78       DC8 6CH, 3AH, 6EH, 73H, 3AH, 78H, 6DH, 70H
   \              6D70        
   \   00000070   702D7374616E       DC8 70H, 2DH, 73H, 74H, 61H, 6EH, 7AH, 61H
   \              7A61        
   \   00000078   73272F3E3C2F       DC8 73H, 27H, 2FH, 3EH, 3CH, 2FH, 65H, 72H
   \              6572        
   \   00000080   726F723E3C2F       DC8 72H, 6FH, 72H, 3EH, 3CH, 2FH, 69H, 71H
   \              6971        
   \   00000088   3E00               DC8 3EH, 0
   \   0000008A   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "get">_5`:
   \   00000000   67657400           DC8 "get"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "result">_1`:
   \   00000000   726573756C74       DC8 "result"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "error">_1`:
   \   00000000   6572726F7200       DC8 "error"
   \   00000006   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "set">_1`:
   \   00000000   73657400           DC8 "set"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "jabber:iq:version">_2`:
   \   00000000   6A6162626572       DC8 "jabber:iq:version"
   \              3A69713A7665
   \              7273696F6E00
   \   00000012   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "http://jabber.org/pro...">_5`:
   \   00000000   687474703A2F       DC8 "http://jabber.org/protocol/disco#info"
   \              2F6A61626265
   \              722E6F72672F
   \              70726F746F63
   \              6F6C2F646973
   \              636F23696E66
   \              6F00        
   \   00000026   0000               DC8 0, 0

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   696400             DC8 "id"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "SieJC_bind_req">`:
   \   00000000   5369654A435F       DC8 "SieJC_bind_req"
   \              62696E645F72
   \              657100      
   \   0000000F   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "SieJC_sess_req">`:
   \   00000000   5369654A435F       DC8 "SieJC_sess_req"
   \              736573735F72
   \              657100      
   \   0000000F   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "SieJC_discoinfo">_1`:
   \   00000000   5369654A435F       DC8 "SieJC_discoinfo"
   \              646973636F69
   \              6E666F00    

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "(no data)">`:
   \   00000000   286E6F206461       DC8 "(no data)"
   \              74612900    
   \   0000000A   0000               DC8 0, 0

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   6F7300             DC8 "os"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "(no data)">_1`:
   \   00000000   286E6F206461       DC8 "(no data)"
   \              74612900    
   \   0000000A   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \   00000000   75746300           DC8 "utc"

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   747A00             DC8 "tz"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "actor">`:
   \   00000000   6163746F7200       DC8 "actor"
   \   00000006   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "jid">_2`:
   \   00000000   6A696400           DC8 "jid"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "reason">`:
   \   00000000   726561736F6E       DC8 "reason"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "xmlns">_2`:
   \   00000000   786D6C6E7300       DC8 "xmlns"
   \   00000006   0000               DC8 0, 0

   \                                 In segment DATA_C, align 1, align-sorted
   \                     `?<Constant "x">_1`:
   \   00000000   7800               DC8 "x"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "chat">_1`:
   \   00000000   6368617400         DC8 "chat"
   \   00000005   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "groupchat">_1`:
   \   00000000   67726F757063       DC8 "groupchat"
   \              68617400    
   \   0000000A   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "SieJC_adm">`:
   \   00000000   5369654A435F       DC8 "SieJC_adm"
   \              61646D00    
   \   0000000A   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "set">_2`:
   \   00000000   73657400           DC8 "set"
   \   00000004   687474703A2F       DC8 "http://jabber.org/protocol/muc#admin"
   \              2F6A61626265
   \              722E6F72672F
   \              70726F746F63
   \              6F6C2F6D7563
   \              2361646D696E
   \              00          
   \   00000029   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "<item nick=\\'%s\\' %s=\\'%...">`:
   \   00000000   3C6974656D20       DC8 3CH, 69H, 74H, 65H, 6DH, 20H, 6EH, 69H
   \              6E69        
   \   00000008   636B3D272573       DC8 63H, 6BH, 3DH, 27H, 25H, 73H, 27H, 20H
   \              2720        
   \   00000010   25733D272573       DC8 25H, 73H, 3DH, 27H, 25H, 73H, 27H, 3EH
   \              273E        
   \   00000018   3C726561736F       DC8 3CH, 72H, 65H, 61H, 73H, 6FH, 6EH, 3EH
   \              6E3E        
   \   00000020   25733C2F7265       DC8 25H, 73H, 3CH, 2FH, 72H, 65H, 61H, 73H
   \              6173        
   \   00000028   6F6E3E3C2F69       DC8 6FH, 6EH, 3EH, 3CH, 2FH, 69H, 74H, 65H
   \              7465        
   \   00000030   6D3E00             DC8 6DH, 3EH, 0
   \   00000033   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "affiliation">_1`:
   \   00000000   616666696C69       DC8 "affiliation"
   \              6174696F6E00

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "role">_1`:
   \   00000000   726F6C6500         DC8 "role"
   \   00000005   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "<message to=\\'%s\\' from...">`:
   \   00000000   3C6D65737361       DC8 3CH, 6DH, 65H, 73H, 73H, 61H, 67H, 65H
   \              6765        
   \   00000008   20746F3D2725       DC8 20H, 74H, 6FH, 3DH, 27H, 25H, 73H, 27H
   \              7327        
   \   00000010   2066726F6D3D       DC8 20H, 66H, 72H, 6FH, 6DH, 3DH, 27H, 25H
   \              2725        
   \   00000018   73272069643D       DC8 73H, 27H, 20H, 69H, 64H, 3DH, 27H, 25H
   \              2725        
   \   00000020   73273E3C7265       DC8 73H, 27H, 3EH, 3CH, 72H, 65H, 63H, 65H
   \              6365        
   \   00000028   697665642078       DC8 69H, 76H, 65H, 64H, 20H, 78H, 6DH, 6CH
   \              6D6C        
   \   00000030   6E733D277572       DC8 6EH, 73H, 3DH, 27H, 75H, 72H, 6EH, 3AH
   \              6E3A        
   \   00000038   786D70703A72       DC8 78H, 6DH, 70H, 70H, 3AH, 72H, 65H, 63H
   \              6563        
   \   00000040   656970747327       DC8 65H, 69H, 70H, 74H, 73H, 27H, 2FH, 3EH
   \              2F3E        
   \   00000048   3C2F6D657373       DC8 3CH, 2FH, 6DH, 65H, 73H, 73H, 61H, 67H
   \              6167        
   \   00000050   653E00             DC8 65H, 3EH, 0
   \   00000053   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "from">_1`:
   \   00000000   66726F6D00         DC8 "from"
   \   00000005   000000             DC8 0, 0, 0
   2047          // EOL,EOF

   Maximum stack usage in bytes:

     Function                     CSTACK
     --------                     ------
     CancelComposing                132
     ChangeRoster                    56
     Enter_Conference                44
     FillRoster                      44
     Generate_Caps                  616
     GetAffRoleIndex                 16
     GetPresenceIndex                12
     GetSubscrType                   12
     Get_Message_Type                28
     Get_Resource_Name_By_FullJID     4
     Leave_Conference                16
     MUCList_Destroy                  8
     MUC_Admin_Command              160
     Process_Incoming_Message       148
     Process_Iq_Request             204
     Process_Presence_Change        168
     Report_DiscoInfo               580
     Report_IDLEInfo                 32
     Report_PING                     76
     Report_TimeInfo                380
     Report_VersionInfo             244
     SendComposing                  136
     SendIq                         208
     SendMessage                    100
     Send_Auth                       28
     Send_DiscoInfo_Request          12
     Send_Disconnect                 32
     Send_Feature_Not_Implemented   160
     Send_Initial_Presence_Helper    20
     Send_LastActivity_Request       12
     Send_Leave_Conference           12
     Send_Mood                      748
     Send_Presence                  716
     Send_Presence_MMIStub            4
     Send_Roster_Query               12
     Send_ShortPresence              60
     Send_Time_Request               12
     Send_Vcard_Request              12
     Send_Version_Request            12
     Send_Welcome_Packet            160
     _enterconference                52
     _leaveconference               116
     _mucadmincmd                    32
     _sendandfree                     8
     _senddicoinforequest            76
     _sendlastactivrequest           32
     _sendtimerequest                32
     _sendvcardrequest               12
     _sendversionrequest             40


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     intimes                          20
     Send_Mood                       316
     SendIq                          340
     Send_Welcome_Packet             140
     Send_Disconnect                  52
     Send_Auth                       168
     _senddicoinforequest            124
     Send_DiscoInfo_Request           48
     _sendversionrequest             100
     Send_Version_Request             48
     _sendtimerequest                100
     Send_Time_Request                48
     _sendvcardrequest                84
     Send_Vcard_Request               48
     _sendlastactivrequest           100
     Send_LastActivity_Request        48
     Generate_Caps                   372
     Send_Presence                   920
     Send_ShortPresence              108
     Send_Roster_Query                64
     SendMessage                     284
     SendComposing                   188
     CancelComposing                 188
     Report_VersionInfo              156
     Report_TimeInfo                 256
     Report_IDLEInfo                 136
     Report_DiscoInfo                296
     Report_PING                     140
     GetSubscrType                   116
     Get_Resource_Name_By_FullJID     32
     Send_Initial_Presence_Helper    176
     _enterconference                340
     Enter_Conference                560
     _leaveconference                300
     Send_Leave_Conference            56
     Leave_Conference                152
     MUCList_Destroy                  84
     Send_Presence_MMIStub            16
     ChangeRoster                    308
     FillRoster                      636
     Send_Feature_Not_Implemented    132
     Process_Iq_Request             3020
     Process_Presence_Change        1948
     OnlineInfo                      572
     JABBER_AFFS                      36
     auth_id                         116
     Get_Message_Type                120
     _mucadmincmd                    108
     MUC_Admin_Command               428
     Process_Incoming_Message       1228
     GetPresenceIndex                 80
     GetAffRoleIndex                 116
     _sendandfree                     24
     ??DataTable2                      4
     ??DataTable7                      4
     ??DataTable8                      4
     ??DataTable9                      4
     ??DataTable11                     4
     ??DataTable23                     4
     ??DataTable31                     4
     ??DataTable37                     4
     ??DataTable40                     4
     ??DataTable41                     4
     ??DataTable43                     4
     ??DataTable44                     4
     ??DataTable46                     4
     ??DataTable49                     4
     ??DataTable50                     4
     ??DataTable51                     4
     ??DataTable53                     4
     ??DataTable55                     4
     ??DataTable56                     4
     ??DataTable59                     4
     ??DataTable62                     4
     ??DataTable63                     4
     ??DataTable65                     4
     ??DataTable67                     4
     ??DataTable68                     4
     ??DataTable69                     4
     ??DataTable70                     4
     ??DataTable73                     4
     ??DataTable74                     4
     ??DataTable75                     4
     ??DataTable77                     4
     ??DataTable79                     4
     ??DataTable85                     4
     ??DataTable87                     4
     ??DataTable88                     4
     ??DataTable89                     4
     ??DataTable90                     4
     ??DataTable91                     4
     ??DataTable92                     4
     ??DataTable93                     4
     ??DataTable94                     4
     ??DataTable95                     4
     ?<Initializer for OnlineInfo>   572
     ?<Initializer for JABBER_AFFS>   36
     ?<Initializer for auth_id>      116
     ?<Constant "owner">               8
     ?<Constant "xmlns">               8
     ?<Constant "id">                  3
     ?<Constant "x">                   2
     ?<Constant "<feature var=\'urn:xmp...">
                                    1876
     ?<Constant "online">              8
     ?<Constant "<message to=\'%s\' id=\'...">
                                     188
     ?<Constant "away">                8
     ?<Constant "xa">                  3
     ?<Constant "dnd">                 4
     ?<Constant "invisible">          12
     ?<Constant "unavailable">        12
     ?<Constant "subscribed">         12
     ?<Constant "unsubscribe">        12
     ?<Constant "unsubscribed">       16
     ?<Constant "outcast">             8
     ?<Constant "member">              8
     ?<Constant "admin">               8
     ?<Constant "<iq to=\'%s\' type=\'get...">
                                      68
     ?<Constant "visitor">             8
     ?<Constant "participant">        12
     ?<Constant "moderator">          12
     ?<Constant "<iq type=\'set\' from=\'...">
                                     196
     ?<Constant "</mood></item></publi...">
                                      56
     ?<Constant "<iq type=\'set\' from=\'...">_1
                                     224
     ?<Constant "id=\'%s\'">         124
     ?<Constant "">                    1
     ?<Constant "<?xml version=\'1.0\' e...">
                                     164
     ?<Constant "</stream:stream>">   36
     ?<Constant "%s@%s">             116
     ?<Constant "set">                 4
     ?<Constant "SieJC_discoinfo">    16
     ?<Constant "get">                 4
     ?<Constant "http://jabber.org/pro...">_4
                                      40
     ?<Constant "get">_1               4
     ?<Constant "jabber:iq:version">_1
                                      20
     ?<Constant "get">_2               4
     ?<Constant "jabber:iq:time">_1   16
     ?<Constant "get">_3               4
     ?<Constant "jabber:iq:last">_1   16
     ?<Constant "<urn:xmpp:receipts">
                                      20
     ?<Constant "<http://jabber.org/pr...">
                                      40
     ?<Constant "<urn:xmpp:attention:0">
                                      24
     ?<Constant "<presence><priority>%...">
                                     152
     ?<Constant "<presence><priority>%...">_1
                                     132
     ?<Constant "<presence type=\'invis...">
                                      48
     ?<Constant "<presence type=\'unava...">
                                      60
     ?<Constant "<presence type=\'unava...">_1
                                      32
     ?<Constant "<presence from=\'%s\' t...">
                                     148
     ?<Constant "<presence from=\'%s\' t...">_1
                                     128
     ?<Constant "<presence to=\'%s\' typ...">
                                      32
     ?<Constant "get">_4               4
     ?<Constant "<message to=\'%s\' id=\'...">_1
                                     112
     ?<Constant "<message to=\'%s\' id=\'...">_2
                                     108
     ?<Constant "+00:00">              8
     ?<Constant "+01:00">              8
     ?<Constant "+02:00">              8
     ?<Constant "+03:00">              8
     ?<Constant "+04:00">              8
     ?<Constant "+05:00">              8
     ?<Constant "+06:00">              8
     ?<Constant "+07:00">              8
     ?<Constant "+08:00">              8
     ?<Constant "+09:00">              8
     ?<Constant "+10:00">              8
     ?<Constant "+11:00">              8
     ?<Constant "+12:00">              8
     ?<Constant "-01:00">              8
     ?<Constant "-02:00">              8
     ?<Constant "-03:00">              8
     ?<Constant "-04:00">              8
     ?<Constant "-05:00">              8
     ?<Constant "-06:00">              8
     ?<Constant "-07:00">              8
     ?<Constant "-08:00">              8
     ?<Constant "-09:00">              8
     ?<Constant "-10:00">              8
     ?<Constant "-11:00">              8
     ?<Constant {&"+00:00", &"+01:00", &"+02:00", &
                                      96
     ?<Constant "<iq type=\'result\' id=...">
                                     100
     ?<Constant "<feature var=\'urn:xmp...">_1
                                      40
     ?<Constant "<feature var=\'http://...">
                                      56
     ?<Constant "<iq type=\'result\' id=...">_1
                                      48
     ?<Constant "to">                  3
     ?<Constant "/">                   2
     ?<Constant "<presence from=\'%s\' t...">_2
                                     176
     ?<Constant "<presence from=\'%s\' t...">_3
                                      80
     ?<Constant "\302\373\365\356\344 \350\347 MUC
                                      24
     ?<Constant "jid">                 4
     ?<Constant "subscribe">_1        12
     ?<Constant "ask">                 4
     ?<Constant "ask">_1               4
     ?<Constant "jid">_1               4
     ?<Constant "@">                   2
     ?<Constant "<iq to=\'%s\' id=\'%s\' t...">
                                     140
     ?<Constant "get">_5               4
     ?<Constant "result">_1            8
     ?<Constant "error">_1             8
     ?<Constant "set">_1               4
     ?<Constant "jabber:iq:version">_2
                                      20
     ?<Constant "http://jabber.org/pro...">_5
                                      40
     ?<Constant "id">_1                3
     ?<Constant "SieJC_bind_req">     16
     ?<Constant "SieJC_sess_req">     16
     ?<Constant "SieJC_discoinfo">_1
                                      16
     ?<Constant "(no data)">          12
     ?<Constant "os">                  3
     ?<Constant "(no data)">_1        12
     ?<Constant "utc">                 4
     ?<Constant "tz">                  3
     ?<Constant "actor">               8
     ?<Constant "jid">_2               4
     ?<Constant "reason">              8
     ?<Constant "xmlns">_2             8
     ?<Constant "x">_1                 2
     ?<Constant "chat">_1              8
     ?<Constant "groupchat">_1        12
     ?<Constant "SieJC_adm">          12
     ?<Constant "set">_2              44
     ?<Constant "<item nick=\'%s\' %s=\'%...">
                                      52
     ?<Constant "affiliation">_1      12
     ?<Constant "role">_1              8
     ?<Constant "<message to=\'%s\' from...">
                                      84
     ?<Constant "from">_1              8
      Others                         580

 
 15 576 bytes in segment CODE
  5 807 bytes in segment DATA_C
    724 bytes in segment DATA_I
    724 bytes in segment DATA_ID
     20 bytes in segment DATA_Z
     24 bytes in segment INITTAB
 
 15 020 bytes of CODE  memory (+ 580 bytes shared)
  6 531 bytes of CONST memory
    744 bytes of DATA  memory

Errors: none
Warnings: none
