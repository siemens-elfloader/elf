##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION    15/Feb/2011  01:38:34 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  C:\arm\SieJC_BR\vCard.c                              #
#    Command line    =  C:\arm\SieJC_BR\vCard.c -D NEWSGOLD -D ELKA          #
#                       --preprocess C:\arm\SieJC_BR\Release_ELKA\List\ -lC  #
#                       C:\arm\SieJC_BR\Release_ELKA\List\ -o                #
#                       C:\arm\SieJC_BR\Release_ELKA\Obj\ -s9 --no_unroll    #
#                       --cpu_mode arm --endian little --cpu ARM926EJ-S      #
#                       --stack_align 4 --interwork -e --fpu None            #
#                       --dlib_config "C:\arm2\Embedded Workbench 4.0        #
#                       Evaluation\ARM\LIB\dl5tpainl8n.h" -I                 #
#                       "C:\arm2\Embedded Workbench 4.0                      #
#                       Evaluation\ARM\INC\" --inline_threshold=2            #
#    List file       =  C:\arm\SieJC_BR\Release_ELKA\List\vCard.lst          #
#    Object file     =  C:\arm\SieJC_BR\Release_ELKA\Obj\vCard.r79           #
#                                                                            #
#                                                                            #
##############################################################################

C:\arm\SieJC_BR\vCard.c
      1          #include "../inc/swilib.h"
      2          #include "main.h"
      3          #include "clist_util.h"
      4          #include "xml_parser.h"
      5          #include "siejc_ipc.h"
      6          #include "history.h"
      7          #include "lang.h"
      8          #include "string_util.h"
      9          #include "jabber_util.h"
     10          #include "vCard.h"
     11          #include "rect_patcher.h"
     12          
     13          #define N_VCARD_FIELDS 51
     14          

   \                                 In segment DATA_I, align 4, align-sorted
     15          char *vcard_index[N_VCARD_FIELDS] =
   \                     vcard_index:
   \   00000000                      DS8 204
   \   000000CC                      REQUIRE `?<Initializer for vcard_index>`
     16          {
     17            "JABBERID",
     18            "FN",
     19            
     20            "N/FAMILY",
     21            "N/GIVEN",
     22            "N/MIDDLE",
     23            "N/PREFIX",
     24            "N/SUFFIX",
     25          
     26            "NICKNAME",
     27            "BDAY",
     28            "GENDER",
     29          
     30            "ORG/ORGNAME",
     31            "ORG/ORGUNIT",
     32            "TITLE",
     33            "ROLE",
     34          
     35            "EMAIL/USERID",
     36            "EMAIL/HOME",
     37            "EMAIL/WORK",
     38            "EMAIL/INTERNET",
     39            "EMAIL/PREF",
     40            "EMAIL/X400",
     41          
     42            "TEL/HOME",
     43            "TEL/WORK",
     44            "TEL/VOICE",
     45            "TEL/FAX",
     46            "TEL/PAGER",
     47            "TEL/MSG",
     48            "TEL/CELL",
     49            "TEL/VIDEO",
     50            "TEL/BBS",
     51            "TEL/MODEM",
     52            "TEL/ISDN",
     53            "TEL/PCS",
     54            "TEL/PREF",
     55            "TEL/NUMBER",
     56          
     57            "ADR/HOME",
     58            "ADR/WORK",
     59            "ADR/POSTAL",
     60            "ADR/PARCEL",
     61            "ADR/DOM",
     62            "ADR/PREF",
     63            "ADR/POBOX",
     64            "ADR/EXTADD",
     65            "ADR/STREET",
     66            "ADR/LOCALITY",
     67            "ADR/REGION",
     68            "ADR/PCODE",
     69            "ADR/CTRY",
     70              
     71            "URL",
     72          
     73            "DESC",
     74            "TZ",
     75          
     76            "!PHOTO" // Сюда мы пишем путь к аватаре
     77          };
     78          
     79          char *vcard_names[N_VCARD_FIELDS] =
     80          {
     81            LG_VCARD_JABBERID,
     82            LG_VCARD_FN,
     83            LG_VCARD_N_FAMILY,
     84            LG_VCARD_N_GIVEN,
     85            LG_VCARD_N_MIDDLE,
     86            LG_VCARD_N_PREFIX,
     87            LG_VCARD_N_SUFFIX,
     88            LG_VCARD_NICKNAME,
     89            LG_VCARD_BDAY,
     90            LG_VCARD_GENDER,
     91          
     92            LG_VCARD_ORGNAME,
     93            LG_VCARD_ORGUNIT,
     94            LG_VCARD_TITLE,
     95            LG_VCARD_ROLE,
     96          
     97            LG_VCARD_EMAIL,
     98            LG_VCARD_EMAIL_HOME,
     99            LG_VCARD_EMAIL_WORK,
    100            LG_VCARD_EMAIL_INTERNET,
    101            LG_VCARD_EMAIL_PREF,
    102            LG_VCARD_EMAIL_X400,
    103            
    104            LG_VCARD_TEL_HOME,
    105            LG_VCARD_TEL_WORK,
    106            LG_VCARD_TEL_VOICE,
    107            LG_VCARD_TEL_FAX,
    108            LG_VCARD_TEL_PAGER,
    109            LG_VCARD_TEL_MSG,
    110            LG_VCARD_TEL_CELL,
    111            LG_VCARD_TEL_VIDEO,
    112            LG_VCARD_TEL_BBS,
    113            LG_VCARD_TEL_MODEM,
    114            LG_VCARD_TEL_ISDN,
    115            LG_VCARD_TEL_PCS,
    116            LG_VCARD_TEL_PREF,
    117            LG_VCARD_TEL_NUMBER,
    118          
    119            LG_VCARD_ADR_HOME,
    120            LG_VCARD_ADR_WORK,
    121            LG_VCARD_ADR_POSTAL,
    122            LG_VCARD_ADR_PARCEL,
    123            LG_VCARD_ADR_DOM,
    124            LG_VCARD_ADR_PREF,
    125            LG_VCARD_ADR_POBOX,
    126            LG_VCARD_ADR_EXTADD,
    127            LG_VCARD_ADR_STREET,
    128            LG_VCARD_ADR_LOCALITY,
    129            LG_VCARD_ADR_REGION,
    130            LG_VCARD_ADR_PCODE,
    131            LG_VCARD_ADR_CTRY,
    132          
    133            LG_VCARD_URL,
    134          
    135            LG_VCARD_DESC,
    136            LG_VCARD_TZ,
    137          
    138            LG_VCARD_AVATAR
    139          };
    140          
    141          // Служебная функция, заполняет структуру vCard

   \                                 In segment CODE, align 4, keep-with-next
    142          void Add_vCard_Value(VCARD dest, char *par_name, char *val)
    143          {
   \                     Add_vCard_Value:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0260A0E1           MOV      R6,R2
    144            int field_id = 0;
   \   00000010   0070A0E3           MOV      R7,#+0
   \   00000014   020000EA           B        ??Add_vCard_Value_0
    145            while (field_id<N_VCARD_FIELDS && strcmp(par_name, vcard_index[field_id]))
    146              field_id++;
   \                     ??Add_vCard_Value_1:
   \   00000018   017087E2           ADD      R7,R7,#+1
   \   0000001C   330057E3           CMP      R7,#+51
   \   00000020   F080BDA8           POPGE    {R4-R7,PC}
   \                     ??Add_vCard_Value_0:
   \   00000024   ........           LDR      R0,??DataTable1  ;; vcard_index
   \   00000028   071190E7           LDR      R1,[R0, +R7, LSL #+2]
   \   0000002C   0500A0E1           MOV      R0,R5
   \   00000030   190000EF           SWI      +25
   \   00000034   000050E3           CMP      R0,#+0
   \   00000038   F6FFFF1A           BNE      ??Add_vCard_Value_1
    147            if (field_id<N_VCARD_FIELDS)
    148            {
    149              if (!dest[field_id])
   \   0000003C   070194E7           LDR      R0,[R4, +R7, LSL #+2]
   \   00000040   000050E3           CMP      R0,#+0
   \   00000044   0400001A           BNE      ??Add_vCard_Value_2
    150                dest[field_id] = malloc(strlen(val)+1);
   \   00000048   0600A0E1           MOV      R0,R6
   \   0000004C   1B0000EF           SWI      +27
   \   00000050   010080E2           ADD      R0,R0,#+1
   \   00000054   140000EF           SWI      +20
   \   00000058   070184E7           STR      R0,[R4, +R7, LSL #+2]
    151              strcpy(dest[field_id], val);
   \                     ??Add_vCard_Value_2:
   \   0000005C   070194E7           LDR      R0,[R4, +R7, LSL #+2]
   \   00000060   0610A0E1           MOV      R1,R6
   \   00000064   1A0000EF           SWI      +26
    152            }
    153          }
   \   00000068   F080BDE8           POP      {R4-R7,PC}       ;; return
    154          

   \                                 In segment CODE, align 4, keep-with-next
    155          char *Get_VCard_Value(VCARD src, char *par_name)
    156          {
   \                     Get_VCard_Value:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
    157            int field_id = 0;
   \   0000000C   0060A0E3           MOV      R6,#+0
   \                     ??Get_VCard_Value_0:
   \   00000010   ........           LDR      R0,??DataTable1  ;; vcard_index
   \   00000014   061190E7           LDR      R1,[R0, +R6, LSL #+2]
   \   00000018   0500A0E1           MOV      R0,R5
   \   0000001C   190000EF           SWI      +25
   \   00000020   000050E3           CMP      R0,#+0
   \   00000024   0400000A           BEQ      ??Get_VCard_Value_1
    158            while (field_id<N_VCARD_FIELDS && strcmp(par_name, vcard_index[field_id]))
    159              field_id++;
   \   00000028   016086E2           ADD      R6,R6,#+1
   \   0000002C   330056E3           CMP      R6,#+51
   \   00000030   F6FFFFBA           BLT      ??Get_VCard_Value_0
    160            if (field_id<N_VCARD_FIELDS)
    161            {
    162              return src[field_id];
    163            }
    164            return NULL;
   \   00000034   0000A0E3           MOV      R0,#+0
   \   00000038   7080BDE8           POP      {R4-R6,PC}
   \                     ??Get_VCard_Value_1:
   \   0000003C   060194E7           LDR      R0,[R4, +R6, LSL #+2]
   \   00000040   7080BDE8           POP      {R4-R6,PC}       ;; return
    165          }
    166          

   \                                 In segment CODE, align 4, keep-with-next
    167          VCARD Create_vCard()
    168          {
   \                     Create_vCard:
   \   00000000   10402DE9           PUSH     {R4,LR}
    169            VCARD tmp = malloc(4*N_VCARD_FIELDS);
   \   00000004   CC00A0E3           MOV      R0,#+204
   \   00000008   140000EF           SWI      +20
   \   0000000C   0040A0E1           MOV      R4,R0
    170            zeromem(tmp, 4*N_VCARD_FIELDS);
   \   00000010   CC10A0E3           MOV      R1,#+204
   \   00000014   1D0100EF           SWI      +285
    171            return tmp;
   \   00000018   0400A0E1           MOV      R0,R4
   \   0000001C   1080BDE8           POP      {R4,PC}          ;; return
    172          }
    173          

   \                                 In segment CODE, align 4, keep-with-next
    174          void Free_vCard(VCARD vcard)
    175          {
   \                     Free_vCard:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040B0E1           MOVS     R4,R0
    176            if (!vcard)
   \   00000008   3080BD08           POPEQ    {R4,R5,PC}
    177              return;
    178            for (int i=0; i<N_VCARD_FIELDS; i++)
   \   0000000C   0050A0E3           MOV      R5,#+0
    179              if (vcard[i])
   \                     ??Free_vCard_0:
   \   00000010   050194E7           LDR      R0,[R4, +R5, LSL #+2]
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   0000000A           BEQ      ??Free_vCard_1
    180                mfree(vcard[i]);
   \   0000001C   150000EF           SWI      +21
   \                     ??Free_vCard_1:
   \   00000020   015085E2           ADD      R5,R5,#+1
   \   00000024   330055E3           CMP      R5,#+51
   \   00000028   F8FFFFBA           BLT      ??Free_vCard_0
    181            mfree(vcard);
   \   0000002C   0400A0E1           MOV      R0,R4
   \   00000030   150000EF           SWI      +21
    182          }
   \   00000034   3080BDE8           POP      {R4,R5,PC}       ;; return
    183          
    184          
    185          //==============================   AVATAR   ================================
    186          
    187          extern const char DEFAULT_DISC[128];
    188          extern const char ipc_my_name[32];
    189          extern const char PATH_TO_AVATARS[128];

   \                                 In segment DATA_C, align 1, align-sorted
    190          const char _slash[2] = "\\";
   \                     _slash:
   \   00000000   5C00               DC8 "\\"
    191          

   \                                 In segment CODE, align 4, keep-with-next
    192          void Get_Avatar_Path(char *path, char *jid)
    193          {
   \                     Get_Avatar_Path:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
    194            strcpy(path, PATH_TO_AVATARS);
   \   00000010   B4109FE5           LDR      R1,??Get_Avatar_Path_0  ;; PATH_TO_AVATARS
   \   00000014   1A0000EF           SWI      +26
    195            TRESOURCE *ResEx = CList_IsResourceInList(jid);
   \   00000018   0500A0E1           MOV      R0,R5
   \   0000001C   ........           _BLF     CList_IsResourceInList,??CList_IsResourceInList??rA
   \   00000020   0060A0E1           MOV      R6,R0
    196            CLIST *ClEx = CList_FindContactByJID(jid);
   \   00000024   0500A0E1           MOV      R0,R5
   \   00000028   ........           _BLF     CList_FindContactByJID,??CList_FindContactByJID??rA
   \   0000002C   0050A0E1           MOV      R5,R0
    197            unsigned int err;
    198            if (ResEx)
   \   00000030   000056E3           CMP      R6,#+0
   \   00000034   7180BD08           POPEQ    {R0,R4-R6,PC}
    199            {
    200              if (ResEx->entry_type==T_CONF_NODE)
   \   00000038   0810D6E5           LDRB     R1,[R6, #+8]
   \   0000003C   000095E5           LDR      R0,[R5, #+0]
   \   00000040   030051E3           CMP      R1,#+3
   \   00000044   1800001A           BNE      ??Get_Avatar_Path_1
    201              {
    202                char *s1, *s2;
    203                s1 = utf82filename(ClEx->JID);
   \   00000048   ........           _BLF     utf82filename,??utf82filename??rA
   \   0000004C   0050A0E1           MOV      R5,R0
    204                strcat(path, s1);
   \   00000050   0510A0E1           MOV      R1,R5
   \   00000054   0400A0E1           MOV      R0,R4
   \   00000058   170000EF           SWI      +23
    205                if (!isdir(path, &err))
   \   0000005C   0D10A0E1           MOV      R1,SP
   \   00000060   0400A0E1           MOV      R0,R4
   \   00000064   910000EF           SWI      +145
   \   00000068   000050E3           CMP      R0,#+0
   \   0000006C   0200001A           BNE      ??Get_Avatar_Path_2
    206                  mkdir(path, &err);
   \   00000070   0D10A0E1           MOV      R1,SP
   \   00000074   0400A0E1           MOV      R0,R4
   \   00000078   100000EF           SWI      +16
    207                strcat(path, _slash);
   \                     ??Get_Avatar_Path_2:
   \   0000007C   4C109FE5           LDR      R1,??Get_Avatar_Path_0+0x4  ;; _slash
   \   00000080   0400A0E1           MOV      R0,R4
   \   00000084   170000EF           SWI      +23
    208                s2 = utf82filename(ResEx->name);
   \   00000088   000096E5           LDR      R0,[R6, #+0]
   \   0000008C   ........           _BLF     utf82filename,??utf82filename??rA
   \   00000090   0060A0E1           MOV      R6,R0
    209                strcat(path, s2);
   \   00000094   0610A0E1           MOV      R1,R6
   \   00000098   0400A0E1           MOV      R0,R4
   \   0000009C   170000EF           SWI      +23
    210                mfree(s1);
   \   000000A0   0500A0E1           MOV      R0,R5
   \   000000A4   150000EF           SWI      +21
    211                mfree(s2);
   \   000000A8   040000EA           B        ??Get_Avatar_Path_3
    212              }
    213              else
    214              {
    215                char *s1;
    216                s1 = utf82filename(ClEx->JID);
   \                     ??Get_Avatar_Path_1:
   \   000000AC   ........           _BLF     utf82filename,??utf82filename??rA
    217                strcat(path, ClEx->JID);
   \   000000B0   001095E5           LDR      R1,[R5, #+0]
   \   000000B4   0060A0E1           MOV      R6,R0
   \   000000B8   0400A0E1           MOV      R0,R4
   \   000000BC   170000EF           SWI      +23
    218                mfree(s1);
   \                     ??Get_Avatar_Path_3:
   \   000000C0   0600A0E1           MOV      R0,R6
   \   000000C4   150000EF           SWI      +21
    219              }
    220            }
    221          }
   \   000000C8   7180BDE8           POP      {R0,R4-R6,PC}    ;; return
   \                     ??Get_Avatar_Path_0:
   \   000000CC   ........           DC32     PATH_TO_AVATARS
   \   000000D0   ........           DC32     _slash
    222          

   \                                 In segment CODE, align 4, keep-with-next
    223          void vCard_Photo_Display(char *path)
    224          {
   \                     vCard_Photo_Display:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    225            WSHDR *fp = AllocWS(128);
   \   00000008   8000A0E3           MOV      R0,#+128
   \   0000000C   250100EF           SWI      +293
   \   00000010   0050A0E1           MOV      R5,R0
    226            str_2ws(fp,path,128);
   \   00000014   8020A0E3           MOV      R2,#+128
   \   00000018   0410A0E1           MOV      R1,R4
   \   0000001C   6C0100EF           SWI      +364
    227            ExecuteFile(fp, NULL, NULL);
   \   00000020   0020A0E3           MOV      R2,#+0
   \   00000024   0010A0E3           MOV      R1,#+0
   \   00000028   0500A0E1           MOV      R0,R5
   \   0000002C   940000EF           SWI      +148
    228            FreeWS(fp);
   \   00000030   0500A0E1           MOV      R0,R5
   \   00000034   290100EF           SWI      +297
    229          }
   \   00000038   3080BDE8           POP      {R4,R5,PC}       ;; return
    230          
    231          //Context:HELPER

   \                                 In segment CODE, align 4, keep-with-next
    232          void DecodePhoto(char *path, void *data)
    233          {
   \                     DecodePhoto:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   0CD04DE2           SUB      SP,SP,#+12
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
    234            char *buf = malloc(strlen(data));
   \   00000010   0500A0E1           MOV      R0,R5
   \   00000014   1B0000EF           SWI      +27
   \   00000018   140000EF           SWI      +20
   \   0000001C   0060A0E1           MOV      R6,R0
    235            zeromem(buf, strlen(data));
   \   00000020   0500A0E1           MOV      R0,R5
   \   00000024   1B0000EF           SWI      +27
   \   00000028   0010A0E1           MOV      R1,R0
   \   0000002C   0600A0E1           MOV      R0,R6
   \   00000030   1D0100EF           SWI      +285
    236            int unk5 = 0;
   \   00000034   0010A0E3           MOV      R1,#+0
   \   00000038   08108DE5           STR      R1,[SP, #+8]
    237            int binlen = Base64Decode(data,strlen(data), buf, strlen(data), NULL, &unk5);  
   \   0000003C   0500A0E1           MOV      R0,R5
   \   00000040   1B0000EF           SWI      +27
   \   00000044   0070A0E1           MOV      R7,R0
   \   00000048   0500A0E1           MOV      R0,R5
   \   0000004C   1B0000EF           SWI      +27
   \   00000050   08108DE2           ADD      R1,SP,#+8
   \   00000054   02002DE9           PUSH     {R1}
   \   00000058   0730A0E1           MOV      R3,R7
   \   0000005C   0620A0E1           MOV      R2,R6
    238            unsigned int ec = 0;
   \   00000060   0080A0E3           MOV      R8,#+0
   \   00000064   0010A0E3           MOV      R1,#+0
   \   00000068   02002DE9           PUSH     {R1}
   \   0000006C   0010A0E1           MOV      R1,R0
   \   00000070   0500A0E1           MOV      R0,R5
   \   00000074   450200EF           SWI      +581
   \   00000078   0070A0E1           MOV      R7,R0
   \   0000007C   08808DE5           STR      R8,[SP, #+8]
    239            unlink(path, &ec);
   \   00000080   08108DE2           ADD      R1,SP,#+8
   \   00000084   0400A0E1           MOV      R0,R4
   \   00000088   6B0100EF           SWI      +363
    240            ec=0;   // похеру, чем закончится удаление.
   \   0000008C   08808DE5           STR      R8,[SP, #+8]
    241            volatile int f = fopen(path, A_ReadWrite +A_Create+ A_Append + A_BIN, P_READ+ P_WRITE, &ec);
   \   00000090   08308DE2           ADD      R3,SP,#+8
   \   00000094   602FA0E3           MOV      R2,#+384
   \   00000098   0A10A0E3           MOV      R1,#+10
   \   0000009C   811C81E3           ORR      R1,R1,#0x8100
   \   000000A0   0400A0E1           MOV      R0,R4
   \   000000A4   0A0000EF           SWI      +10
   \   000000A8   0C008DE5           STR      R0,[SP, #+12]
    242            if(!ec)
   \   000000AC   08009DE5           LDR      R0,[SP, #+8]
   \   000000B0   08D08DE2           ADD      SP,SP,#+8
   \   000000B4   000050E3           CMP      R0,#+0
   \   000000B8   0800001A           BNE      ??DecodePhoto_0
    243            {
    244              fwrite(f, buf, binlen, &ec);
   \   000000BC   04009DE5           LDR      R0,[SP, #+4]
   \   000000C0   0D30A0E1           MOV      R3,SP
   \   000000C4   0720A0E1           MOV      R2,R7
   \   000000C8   0610A0E1           MOV      R1,R6
   \   000000CC   0C0000EF           SWI      +12
    245              fclose(f, &ec);
   \   000000D0   04009DE5           LDR      R0,[SP, #+4]
   \   000000D4   0D10A0E1           MOV      R1,SP
   \   000000D8   0D0000EF           SWI      +13
   \   000000DC   040000EA           B        ??DecodePhoto_1
    246            }
    247            else
    248            {
    249              LockSched();
   \                     ??DecodePhoto_0:
   \   000000E0   460100EF           SWI      +326
    250              MsgBoxError(1,(int)path);
   \   000000E4   0410A0E1           MOV      R1,R4
   \   000000E8   0100A0E3           MOV      R0,#+1
   \   000000EC   4E0000EF           SWI      +78
    251              UnlockSched();
   \   000000F0   470100EF           SWI      +327
    252            }
    253          
    254            /* // Теперь только по запросу
    255            // Display
    256            if(Saved_OK)
    257            {
    258              //WSHDR *fp = AllocWS(128);
    259              //str_2ws(fp,full_path,128);
    260              //ExecuteFile(fp, NULL, NULL);
    261              //FreeWS(fp);
    262              char *fp = malloc(128);
    263              strcpy(fp, path);
    264          
    265              vcard_ipc.name_to=ipc_my_name;
    266              vcard_ipc.name_from=ipc_my_name;
    267              vcard_ipc.data=fp;
    268              GBS_SendMessage(MMI_CEPID,MSG_IPC,IPC_AVATAR_DECODE_OK,&vcard_ipc);
    269            }
    270            */
    271          
    272            // Cleanup
    273            mfree(buf);
   \                     ??DecodePhoto_1:
   \   000000F4   0600A0E1           MOV      R0,R6
   \   000000F8   150000EF           SWI      +21
    274            mfree(data);
   \   000000FC   0500A0E1           MOV      R0,R5
   \   00000100   150000EF           SWI      +21
    275            mfree(path);
   \   00000104   0400A0E1           MOV      R0,R4
   \   00000108   150000EF           SWI      +21
    276          }
   \   0000010C   F781BDE8           POP      {R0-R2,R4-R8,PC}  ;; return
    277          
    278          // Сохранение фотографии

   \                                 In segment CODE, align 4, keep-with-next
    279          void SavePhoto(VCARD vcard, char *jid, XMLNode *photonode)
    280          {
   \                     SavePhoto:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
    281            // Prepare path
    282            char ph_path[128];
    283            Get_Avatar_Path(ph_path, jid);
    284            char extension[]=".jpg";
   \   00000004   ........           LDR      R6,??DataTable3  ;; `?<Constant ".jpg">`
   \   00000008   88D04DE2           SUB      SP,SP,#+136
   \   0000000C   0040A0E1           MOV      R4,R0
   \   00000010   0250A0E1           MOV      R5,R2
   \   00000014   08008DE2           ADD      R0,SP,#+8
   \   00000018   ........           BL       Get_Avatar_Path
   \   0000001C   0C0096E8           LDM      R6,{R2,R3}
   \   00000020   0D00A0E1           MOV      R0,SP
   \   00000024   0C0080E8           STM      R0,{R2,R3}
    285            XMLNode *ph_node = XML_Get_Child_Node_By_Name(photonode, "TYPE");
   \   00000028   441086E2           ADD      R1,R6,#+68
   \   0000002C   0500A0E1           MOV      R0,R5
   \   00000030   ........           _BLF     XML_Get_Child_Node_By_Name,??XML_Get_Child_Node_By_Name??rA
    286            if(ph_node)
   \   00000034   000050E3           CMP      R0,#+0
   \   00000038   1400000A           BEQ      ??SavePhoto_0
    287            {
    288              char *ph_node_val = ph_node->value;
   \   0000003C   107090E5           LDR      R7,[R0, #+16]
    289              if(!strcmp(ph_node_val, "image/jpeg"))
   \   00000040   081086E2           ADD      R1,R6,#+8
   \   00000044   0700A0E1           MOV      R0,R7
   \   00000048   190000EF           SWI      +25
   \   0000004C   000050E3           CMP      R0,#+0
    290              {
    291                strcpy(extension,".jpg");
   \   00000050   4C108602           ADDEQ    R1,R6,#+76
   \   00000054   0B00000A           BEQ      ??SavePhoto_1
    292              }
    293              else if(!strcmp(ph_node_val, "image/png"))
   \   00000058   701086E2           ADD      R1,R6,#+112
   \   0000005C   0700A0E1           MOV      R0,R7
   \   00000060   190000EF           SWI      +25
   \   00000064   000050E3           CMP      R0,#+0
    294              {
    295                strcpy(extension,".png");
   \   00000068   54108602           ADDEQ    R1,R6,#+84
   \   0000006C   0500000A           BEQ      ??SavePhoto_1
    296              }
    297              else if(!strcmp(ph_node_val, "image/gif"))
   \   00000070   641086E2           ADD      R1,R6,#+100
   \   00000074   0700A0E1           MOV      R0,R7
   \   00000078   190000EF           SWI      +25
   \   0000007C   000050E3           CMP      R0,#+0
   \   00000080   0200001A           BNE      ??SavePhoto_0
    298              {
    299                strcpy(extension,".gif");
   \   00000084   5C1086E2           ADD      R1,R6,#+92
   \                     ??SavePhoto_1:
   \   00000088   0D00A0E1           MOV      R0,SP
   \   0000008C   1A0000EF           SWI      +26
    300              }
    301            }
    302            char *full_path = malloc(128);
   \                     ??SavePhoto_0:
   \   00000090   8000A0E3           MOV      R0,#+128
   \   00000094   140000EF           SWI      +20
   \   00000098   0070A0E1           MOV      R7,R0
    303            strcpy(full_path, ph_path);
   \   0000009C   08108DE2           ADD      R1,SP,#+8
   \   000000A0   1A0000EF           SWI      +26
    304            strcat(full_path, extension);
   \   000000A4   0D10A0E1           MOV      R1,SP
   \   000000A8   0700A0E1           MOV      R0,R7
   \   000000AC   170000EF           SWI      +23
    305            Add_vCard_Value(vcard, "!PHOTO", full_path);
   \   000000B0   0720A0E1           MOV      R2,R7
   \   000000B4   301086E2           ADD      R1,R6,#+48
   \   000000B8   0400A0E1           MOV      R0,R4
   \   000000BC   ........           BL       Add_vCard_Value
    306          
    307            // Decode & write
    308            XMLNode *binval = XML_Get_Child_Node_By_Name(photonode, "BINVAL");
   \   000000C0   141086E2           ADD      R1,R6,#+20
   \   000000C4   0500A0E1           MOV      R0,R5
   \   000000C8   ........           _BLF     XML_Get_Child_Node_By_Name,??XML_Get_Child_Node_By_Name??rA
   \   000000CC   0040A0E1           MOV      R4,R0
    309            int ln = strlen(binval->value);
   \   000000D0   100094E5           LDR      R0,[R4, #+16]
   \   000000D4   1B0000EF           SWI      +27
   \   000000D8   0050A0E1           MOV      R5,R0
    310            char *buf = malloc(ln+1);
   \   000000DC   010085E2           ADD      R0,R5,#+1
   \   000000E0   140000EF           SWI      +20
    311            memcpy(buf, binval->value, ln);
   \   000000E4   101094E5           LDR      R1,[R4, #+16]
   \   000000E8   0060A0E1           MOV      R6,R0
   \   000000EC   0520A0E1           MOV      R2,R5
   \   000000F0   1E0100EF           SWI      +286
    312            buf[ln+1]='=';
   \   000000F4   060085E0           ADD      R0,R5,R6
   \   000000F8   3D10A0E3           MOV      R1,#+61
   \   000000FC   0110C0E5           STRB     R1,[R0, #+1]
    313            SUBPROC((void*)DecodePhoto, full_path, buf);
   \   00000100   10009FE5           LDR      R0,??SavePhoto_2  ;; DecodePhoto
   \   00000104   0620A0E1           MOV      R2,R6
   \   00000108   0710A0E1           MOV      R1,R7
   \   0000010C   710100EF           SWI      +369
    314          }
   \   00000110   88D08DE2           ADD      SP,SP,#+136
   \   00000114   F080BDE8           POP      {R4-R7,PC}       ;; return
   \                     ??SavePhoto_2:
   \   00000118   ........           DC32     DecodePhoto
    315          
    316          // Обработчик vCard

   \                                 In segment CODE, align 4, keep-with-next
    317          void Process_vCard(char *from, XMLNode *vCard)
    318          {
   \                     Process_vCard:
   \   00000000   F24F2DE9           PUSH     {R1,R4-R11,LR}
   \   00000004   40DF4DE2           SUB      SP,SP,#+256
   \   00000008   0040A0E1           MOV      R4,R0
    319            int Use_Resource = 0;
   \   0000000C   0050A0E3           MOV      R5,#+0
    320            TRESOURCE *ResEx = CList_IsResourceInList(from);
   \   00000010   ........           _BLF     CList_IsResourceInList,??CList_IsResourceInList??rA
   \   00000014   0060A0E1           MOV      R6,R0
    321            if (ResEx->entry_type==T_CONF_NODE) // Если конференция - используем ресурс
   \   00000018   0800D6E5           LDRB     R0,[R6, #+8]
   \   0000001C   030050E3           CMP      R0,#+3
    322              Use_Resource = 1;
   \   00000020   0150A003           MOVEQ    R5,#+1
    323            CLIST *ClEx = CList_FindContactByJID(from);
   \   00000024   0400A0E1           MOV      R0,R4
   \   00000028   ........           _BLF     CList_FindContactByJID,??CList_FindContactByJID??rA
   \   0000002C   0070A0E1           MOV      R7,R0
    324          
    325            VCARD vcard;
    326            if (Use_Resource)
   \   00000030   000055E3           CMP      R5,#+0
    327              vcard = ResEx->vcard;
   \   00000034   28809615           LDRNE    R8,[R6, #+40]
    328            else
    329              vcard = ClEx->vcard;
   \   00000038   18809705           LDREQ    R8,[R7, #+24]
    330            if (!vcard)
   \   0000003C   000058E3           CMP      R8,#+0
   \   00000040   0100001A           BNE      ??Process_vCard_0
    331              vcard = Create_vCard();
   \   00000044   ........           BL       Create_vCard
   \   00000048   0080A0E1           MOV      R8,R0
    332          
    333            // Обходим все присланные ноды vCard
    334            char field_name[256];
    335            XMLNode *vCard_Node = vCard->subnode;
   \                     ??Process_vCard_0:
   \   0000004C   00019DE5           LDR      R0,[SP, #+256]
   \   00000050   ECA09FE5           LDR      R10,??Process_vCard_1  ;; `?<Constant "%s/%s">`
   \   00000054   049090E5           LDR      R9,[R0, #+4]
   \   00000058   000059E3           CMP      R9,#+0
   \   0000005C   2600000A           BEQ      ??Process_vCard_2
    336            XMLNode *vCard_NodeL2;
    337            while(vCard_Node)
    338            {
    339              //if(vCard_Node->name && vCard_Node->value) // сюда не попадает Photo, и слава Богу
    340              //  Add_vCard_Value(vcard, vCard_Node->name, vCard_Node->value);
    341              if (vCard_Node->name)
   \                     ??Process_vCard_3:
   \   00000060   081099E5           LDR      R1,[R9, #+8]
   \   00000064   000051E3           CMP      R1,#+0
   \   00000068   2000000A           BEQ      ??Process_vCard_4
    342              {
    343                if (vCard_Node->value)
   \   0000006C   102099E5           LDR      R2,[R9, #+16]
   \   00000070   000052E3           CMP      R2,#+0
   \   00000074   0100000A           BEQ      ??Process_vCard_5
    344                  Add_vCard_Value(vcard, vCard_Node->name, vCard_Node->value);
   \   00000078   0800A0E1           MOV      R0,R8
   \   0000007C   ........           BL       Add_vCard_Value
    345                if (strcmp(vCard_Node->name, "PHOTO") && strcmp(vCard_Node->name, "PHOTO")) // Не дай бог нам залезть в аватары...
   \                     ??Process_vCard_5:
   \   00000080   080099E5           LDR      R0,[R9, #+8]
   \   00000084   08108AE2           ADD      R1,R10,#+8
   \   00000088   190000EF           SWI      +25
   \   0000008C   000050E3           CMP      R0,#+0
   \   00000090   1600000A           BEQ      ??Process_vCard_4
   \   00000094   080099E5           LDR      R0,[R9, #+8]
   \   00000098   08108AE2           ADD      R1,R10,#+8
   \   0000009C   190000EF           SWI      +25
   \   000000A0   000050E3           CMP      R0,#+0
    346                {
    347                  vCard_NodeL2 = vCard_Node->subnode;
   \   000000A4   04B09915           LDRNE    R11,[R9, #+4]
   \   000000A8   00005B13           CMPNE    R11,#+0
   \   000000AC   0F00000A           BEQ      ??Process_vCard_4
    348                  while (vCard_NodeL2) // Обрабатываем поля второй вложенности
    349                  {
    350                    if (vCard_NodeL2->name && vCard_NodeL2->value)
   \                     ??Process_vCard_6:
   \   000000B0   08309BE5           LDR      R3,[R11, #+8]
   \   000000B4   000053E3           CMP      R3,#+0
   \   000000B8   10009B15           LDRNE    R0,[R11, #+16]
   \   000000BC   00005013           CMPNE    R0,#+0
   \   000000C0   0700000A           BEQ      ??Process_vCard_7
    351                    {
    352                      sprintf(field_name, "%s/%s", vCard_Node->name, vCard_NodeL2->name);
   \   000000C4   082099E5           LDR      R2,[R9, #+8]
   \   000000C8   0A10A0E1           MOV      R1,R10
   \   000000CC   0D00A0E1           MOV      R0,SP
   \   000000D0   160000EF           SWI      +22
    353                      Add_vCard_Value(vcard, field_name, vCard_NodeL2->value);
   \   000000D4   10209BE5           LDR      R2,[R11, #+16]
   \   000000D8   0D10A0E1           MOV      R1,SP
   \   000000DC   0800A0E1           MOV      R0,R8
   \   000000E0   ........           BL       Add_vCard_Value
    354                    }
    355          
    356                    vCard_NodeL2 = vCard_NodeL2->next;
   \                     ??Process_vCard_7:
   \   000000E4   00B09BE5           LDR      R11,[R11, #+0]
    357                  }
   \   000000E8   00005BE3           CMP      R11,#+0
   \   000000EC   EFFFFF1A           BNE      ??Process_vCard_6
    358                }
    359              }
    360          
    361              vCard_Node = vCard_Node->next;
   \                     ??Process_vCard_4:
   \   000000F0   009099E5           LDR      R9,[R9, #+0]
    362            }
   \   000000F4   000059E3           CMP      R9,#+0
   \   000000F8   D8FFFF1A           BNE      ??Process_vCard_3
    363          
    364            // Save photo :))
    365            XMLNode *photo = XML_Get_Child_Node_By_Name(vCard,"PHOTO");
   \                     ??Process_vCard_2:
   \   000000FC   00019DE5           LDR      R0,[SP, #+256]
   \   00000100   08108AE2           ADD      R1,R10,#+8
   \   00000104   ........           _BLF     XML_Get_Child_Node_By_Name,??XML_Get_Child_Node_By_Name??rA
    366            if(photo)
   \   00000108   000050E3           CMP      R0,#+0
    367              if(photo->subnode)SavePhoto(vcard, from, photo);
   \   0000010C   04109015           LDRNE    R1,[R0, #+4]
   \   00000110   00005113           CMPNE    R1,#+0
   \   00000114   0300000A           BEQ      ??Process_vCard_8
   \   00000118   0020A0E1           MOV      R2,R0
   \   0000011C   0410A0E1           MOV      R1,R4
   \   00000120   0800A0E1           MOV      R0,R8
   \   00000124   ........           BL       SavePhoto
    368          
    369            // Показываем vCard
    370          
    371            if (Use_Resource)
   \                     ??Process_vCard_8:
   \   00000128   000055E3           CMP      R5,#+0
    372              ResEx->vcard = vcard;
   \   0000012C   28808615           STRNE    R8,[R6, #+40]
    373            else
    374              ClEx->vcard = vcard;
   \   00000130   18808705           STREQ    R8,[R7, #+24]
    375          
    376            Show_vCard(from);
   \   00000134   0400A0E1           MOV      R0,R4
   \   00000138   ........           BL       Show_vCard
    377          }
   \   0000013C   41DF8DE2           ADD      SP,SP,#+260
   \   00000140   F08FBDE8           POP      {R4-R11,PC}      ;; return
   \                     ??Process_vCard_1:
   \   00000144   ........           DC32     `?<Constant "%s/%s">`
    378          

   \                                 In segment CODE, align 4, keep-with-next
    379          int Show_vCard2(char *jid)
    380          {
   \                     Show_vCard2:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    381            CLIST *ClEx = CList_FindContactByJID(jid);
   \   00000008   ........           _BLF     CList_FindContactByJID,??CList_FindContactByJID??rA
    382            if (!ClEx)
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   0100001A           BNE      ??Show_vCard2_0
    383              return 0;
   \                     ??Show_vCard2_1:
   \   00000014   0000A0E3           MOV      R0,#+0
   \   00000018   F08FBDE8           POP      {R4-R11,PC}
    384            VCARD vcard = ClEx->vcard;
   \                     ??Show_vCard2_0:
   \   0000001C   185090E5           LDR      R5,[R0, #+24]
    385            if (!vcard) // Если не нашли - ищем в ресурсе (для конференции)
   \   00000020   000055E3           CMP      R5,#+0
   \   00000024   0400001A           BNE      ??Show_vCard2_2
    386            {
    387              TRESOURCE *ResEx = CList_IsResourceInList(jid);
   \   00000028   0400A0E1           MOV      R0,R4
   \   0000002C   ........           _BLF     CList_IsResourceInList,??CList_IsResourceInList??rA
    388              if (ResEx)
   \   00000030   000050E3           CMP      R0,#+0
   \   00000034   F08FBD08           POPEQ    {R4-R11,PC}
    389                vcard = ResEx->vcard;
   \   00000038   285090E5           LDR      R5,[R0, #+40]
    390            }
    391            if (vcard)
   \                     ??Show_vCard2_2:
   \   0000003C   000055E3           CMP      R5,#+0
   \   00000040   F3FFFF0A           BEQ      ??Show_vCard2_1
    392            {
    393              char *result = malloc(1024);
    394              int result_len = 1024;
    395              strcpy(result, "VCard:\n");
   \   00000044   EC809FE5           LDR      R8,??Show_vCard2_3  ;; `?<Constant "VCard:\\n">`
   \   00000048   400EA0E3           MOV      R0,#+1024
   \   0000004C   140000EF           SWI      +20
   \   00000050   0060A0E1           MOV      R6,R0
   \   00000054   407EA0E3           MOV      R7,#+1024
   \   00000058   0810A0E1           MOV      R1,R8
   \   0000005C   1A0000EF           SWI      +26
    396              char *param_pair = malloc(2048);
   \   00000060   800EA0E3           MOV      R0,#+2048
   \   00000064   140000EF           SWI      +20
   \   00000068   0090A0E1           MOV      R9,R0
    397              for (int i=0; i<N_VCARD_FIELDS; i++)
   \   0000006C   00A0A0E3           MOV      R10,#+0
    398                if (vcard[i])
   \                     ??Show_vCard2_4:
   \   00000070   0A0195E7           LDR      R0,[R5, +R10, LSL #+2]
   \   00000074   000050E3           CMP      R0,#+0
   \   00000078   2100000A           BEQ      ??Show_vCard2_5
    399                {
    400                  char *parname = ANSI2UTF8(vcard_names[i], 1024);
   \   0000007C   B8009FE5           LDR      R0,??Show_vCard2_3+0x4  ;; vcinfo_desc
   \   00000080   401EA0E3           MOV      R1,#+1024
   \   00000084   0A0180E0           ADD      R0,R0,R10, LSL #+2
   \   00000088   4C0090E5           LDR      R0,[R0, #+76]
   \   0000008C   ........           _BLF     ANSI2UTF8,??ANSI2UTF8??rA
   \   00000090   00B0A0E1           MOV      R11,R0
    401                  snprintf(param_pair, 2048, "%s: %s\n", parname+1 /* +1 - Фиг знает что, но помогает */, vcard[i]);
   \   00000094   0A0195E7           LDR      R0,[R5, +R10, LSL #+2]
   \   00000098   01308BE2           ADD      R3,R11,#+1
   \   0000009C   01002DE9           PUSH     {R0}
   \   000000A0   082088E2           ADD      R2,R8,#+8
   \   000000A4   801EA0E3           MOV      R1,#+2048
   \   000000A8   0900A0E1           MOV      R0,R9
   \   000000AC   1B0100EF           SWI      +283
    402                  mfree(parname);
   \   000000B0   0B00A0E1           MOV      R0,R11
   \   000000B4   150000EF           SWI      +21
    403                  unsigned int real_result_len, parpair_len;
    404                  real_result_len = strlen(result);
   \   000000B8   0600A0E1           MOV      R0,R6
   \   000000BC   1B0000EF           SWI      +27
   \   000000C0   00B0A0E1           MOV      R11,R0
    405                  parpair_len = strlen(param_pair);
   \   000000C4   0900A0E1           MOV      R0,R9
   \   000000C8   1B0000EF           SWI      +27
   \   000000CC   0BB080E0           ADD      R11,R0,R11
   \   000000D0   0B0057E1           CMP      R7,R11
   \   000000D4   04D08DE2           ADD      SP,SP,#+4
   \   000000D8   0600002A           BCS      ??Show_vCard2_6
    406                  while(real_result_len+parpair_len>result_len)
    407                  {
    408                    result_len += 1024;
   \                     ??Show_vCard2_7:
   \   000000DC   407E87E2           ADD      R7,R7,#+1024
    409                    result = realloc(result, result_len);
   \   000000E0   0710A0E1           MOV      R1,R7
   \   000000E4   0600A0E1           MOV      R0,R6
   \   000000E8   BA0000EF           SWI      +186
   \   000000EC   0060A0E1           MOV      R6,R0
    410                  }
   \   000000F0   0B0057E1           CMP      R7,R11
   \   000000F4   F8FFFF3A           BCC      ??Show_vCard2_7
    411                  strcat(result,param_pair);
   \                     ??Show_vCard2_6:
   \   000000F8   0910A0E1           MOV      R1,R9
   \   000000FC   0600A0E1           MOV      R0,R6
   \   00000100   170000EF           SWI      +23
    412                }
   \                     ??Show_vCard2_5:
   \   00000104   01A08AE2           ADD      R10,R10,#+1
   \   00000108   33005AE3           CMP      R10,#+51
   \   0000010C   D7FFFFBA           BLT      ??Show_vCard2_4
    413              CList_AddMessage(jid, MSG_SYSTEM, result);
   \   00000110   0620A0E1           MOV      R2,R6
   \   00000114   0410A0E3           MOV      R1,#+4
   \   00000118   0400A0E1           MOV      R0,R4
   \   0000011C   ........           _BLF     CList_AddMessage,??CList_AddMessage??rA
    414              mfree(param_pair);
   \   00000120   0900A0E1           MOV      R0,R9
   \   00000124   150000EF           SWI      +21
    415              mfree(result);
   \   00000128   0600A0E1           MOV      R0,R6
   \   0000012C   150000EF           SWI      +21
    416              return 1;
   \   00000130   0100A0E3           MOV      R0,#+1
   \   00000134   F08FBDE8           POP      {R4-R11,PC}      ;; return
   \                     ??Show_vCard2_3:
   \   00000138   ........           DC32     `?<Constant "VCard:\\n">`
   \   0000013C   ........           DC32     vcinfo_desc
    417            }
    418            return 0;
    419          }
    420          
    421          //====================   GUI   ========================
    422          
    423          typedef struct
    424          {
    425            char *jid;
    426            int update_pos;
    427            int photo_show_pos;
    428          } VCARD_VIEW_DESC;
    429          

   \                                 In segment CODE, align 4, keep-with-next
    430          int vcinfo_onkey(GUI *gui, GUI_MSG *msg)
    431          {
   \                     vcinfo_onkey:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0050A0E1           MOV      R5,R0
   \   00000008   0170A0E1           MOV      R7,R1
    432            VCARD_VIEW_DESC *desc = EDIT_GetUserPointer(gui);
   \   0000000C   DF0100EF           SWI      +479
   \   00000010   0040B0E1           MOVS     R4,R0
    433            if (desc)
   \   00000014   3200000A           BEQ      ??vcinfo_onkey_0
    434            {
    435              if (msg->gbsmsg->msg==KEY_DOWN && msg->gbsmsg->submess==ENTER_BUTTON && EDIT_GetFocus(gui)==desc->update_pos)
   \   00000018   040097E5           LDR      R0,[R7, #+4]
   \   0000001C   9360A0E3           MOV      R6,#+147
   \   00000020   041090E5           LDR      R1,[R0, #+4]
   \   00000024   406F86E3           ORR      R6,R6,#0x100
   \   00000028   060051E1           CMP      R1,R6
   \   0000002C   08009005           LDREQ    R0,[R0, #+8]
   \   00000030   1A005003           CMPEQ    R0,#+26
   \   00000034   1B00001A           BNE      ??vcinfo_onkey_1
   \   00000038   0500A0E1           MOV      R0,R5
   \   0000003C   820100EF           SWI      +386
   \   00000040   041094E5           LDR      R1,[R4, #+4]
   \   00000044   010050E1           CMP      R0,R1
   \   00000048   1600001A           BNE      ??vcinfo_onkey_1
    436              {
    437                CLIST *ClEx = CList_FindContactByJID(desc->jid);
   \   0000004C   000094E5           LDR      R0,[R4, #+0]
   \   00000050   ........           _BLF     CList_FindContactByJID,??CList_FindContactByJID??rA
   \   00000054   0050B0E1           MOVS     R5,R0
    438                if (ClEx)
   \   00000058   1000000A           BEQ      ??vcinfo_onkey_2
    439                {
    440                  if (ClEx->vcard)
   \   0000005C   180095E5           LDR      R0,[R5, #+24]
   \   00000060   0060A0E3           MOV      R6,#+0
   \   00000064   000050E3           CMP      R0,#+0
   \   00000068   0200000A           BEQ      ??vcinfo_onkey_3
    441                  {
    442                    Free_vCard(ClEx->vcard);
   \   0000006C   ........           BL       Free_vCard
    443                    ClEx->vcard = NULL;
   \   00000070   186085E5           STR      R6,[R5, #+24]
    444                    Send_Vcard_Request(desc->jid);
   \   00000074   070000EA           B        ??vcinfo_onkey_4
    445                  }
    446                  else // Если не нашли - ищем в ресурсе (для конференции)
    447                  {
    448                    TRESOURCE *ResEx = CList_IsResourceInList(desc->jid);
   \                     ??vcinfo_onkey_3:
   \   00000078   000094E5           LDR      R0,[R4, #+0]
   \   0000007C   ........           _BLF     CList_IsResourceInList,??CList_IsResourceInList??rA
   \   00000080   0050B0E1           MOVS     R5,R0
    449                    if (ResEx)
    450                      if (ResEx->vcard)
   \   00000084   28009515           LDRNE    R0,[R5, #+40]
   \   00000088   00005013           CMPNE    R0,#+0
   \   0000008C   0300000A           BEQ      ??vcinfo_onkey_2
    451                      {
    452                        Free_vCard(ResEx->vcard);
   \   00000090   ........           BL       Free_vCard
    453                        ResEx->vcard = NULL;
   \   00000094   286085E5           STR      R6,[R5, #+40]
    454                        Send_Vcard_Request(desc->jid);
   \                     ??vcinfo_onkey_4:
   \   00000098   000094E5           LDR      R0,[R4, #+0]
   \   0000009C   ........           _BLF     Send_Vcard_Request,??Send_Vcard_Request??rA
    455                      }
    456                  }
    457                }
    458                return (1); //Exit
   \                     ??vcinfo_onkey_2:
   \   000000A0   0100A0E3           MOV      R0,#+1
   \   000000A4   F080BDE8           POP      {R4-R7,PC}       ;; return
    459              }
    460              if (msg->gbsmsg->msg==KEY_DOWN && msg->gbsmsg->submess==ENTER_BUTTON && EDIT_GetFocus(gui)==desc->photo_show_pos)
   \                     ??vcinfo_onkey_1:
   \   000000A8   040097E5           LDR      R0,[R7, #+4]
   \   000000AC   041090E5           LDR      R1,[R0, #+4]
   \   000000B0   060051E1           CMP      R1,R6
   \   000000B4   08009005           LDREQ    R0,[R0, #+8]
   \   000000B8   1A005003           CMPEQ    R0,#+26
   \   000000BC   0800001A           BNE      ??vcinfo_onkey_0
   \   000000C0   0500A0E1           MOV      R0,R5
   \   000000C4   820100EF           SWI      +386
   \   000000C8   081094E5           LDR      R1,[R4, #+8]
   \   000000CC   010050E1           CMP      R0,R1
   \   000000D0   0300001A           BNE      ??vcinfo_onkey_0
    461              {
    462                CLIST *ClEx = CList_FindContactByJID(desc->jid);
   \   000000D4   000094E5           LDR      R0,[R4, #+0]
   \   000000D8   ........           _BLF     CList_FindContactByJID,??CList_FindContactByJID??rA
    463                if (!ClEx)
   \   000000DC   000050E3           CMP      R0,#+0
   \   000000E0   0100001A           BNE      ??vcinfo_onkey_5
    464                  return 0;
   \                     ??vcinfo_onkey_0:
   \   000000E4   0000A0E3           MOV      R0,#+0
   \   000000E8   F080BDE8           POP      {R4-R7,PC}
    465                VCARD vcard = ClEx->vcard;
   \                     ??vcinfo_onkey_5:
   \   000000EC   185090E5           LDR      R5,[R0, #+24]
    466                if (!vcard) // Если не нашли - ищем в ресурсе (для конференции)
   \   000000F0   000055E3           CMP      R5,#+0
   \   000000F4   0300001A           BNE      ??vcinfo_onkey_6
    467                {
    468                  TRESOURCE *ResEx = CList_IsResourceInList(desc->jid);
   \   000000F8   000094E5           LDR      R0,[R4, #+0]
   \   000000FC   ........           _BLF     CList_IsResourceInList,??CList_IsResourceInList??rA
    469                  if (ResEx)
   \   00000100   000050E3           CMP      R0,#+0
    470                    vcard = ResEx->vcard;
   \   00000104   28509015           LDRNE    R5,[R0, #+40]
    471                }
    472                vCard_Photo_Display(Get_VCard_Value(vcard, "!PHOTO"));
   \                     ??vcinfo_onkey_6:
   \   00000108   10109FE5           LDR      R1,??vcinfo_onkey_7  ;; `?<Constant ".jpg">` + 48
   \   0000010C   0500A0E1           MOV      R0,R5
   \   00000110   ........           BL       Get_VCard_Value
   \   00000114   ........           BL       vCard_Photo_Display
   \   00000118   0000A0E3           MOV      R0,#+0
   \   0000011C   F080BDE8           POP      {R4-R7,PC}
   \                     ??vcinfo_onkey_7:
   \   00000120   ........           DC32     `?<Constant ".jpg">` + 48
    473              }
    474            }
    475            return(0); //Do standart keys
    476          }
    477          

   \                                 In segment CODE, align 4, keep-with-next
    478          void vcinfo_ghook(GUI *gui, int cmd)
    479          {
   \                     vcinfo_ghook:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
    480            if (cmd==TI_CMD_CREATE)
    481            {
    482              //Called after onCreate
    483            }
    484          
    485            if (cmd==TI_CMD_DESTROY)
   \   00000004   030051E3           CMP      R1,#+3
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0900001A           BNE      ??vcinfo_ghook_0
    486            {
    487              // onDestroy
    488              VCARD_VIEW_DESC *desc = EDIT_GetUserPointer(gui);
   \   00000010   DF0100EF           SWI      +479
   \   00000014   0040B0E1           MOVS     R4,R0
    489              if (desc)
   \   00000018   3080BD08           POPEQ    {R4,R5,PC}
    490              {
    491                if (desc->jid)
   \   0000001C   000094E5           LDR      R0,[R4, #+0]
   \   00000020   000050E3           CMP      R0,#+0
   \   00000024   0000000A           BEQ      ??vcinfo_ghook_1
    492                  mfree(desc->jid);
   \   00000028   150000EF           SWI      +21
    493                mfree(desc);
   \                     ??vcinfo_ghook_1:
   \   0000002C   0400A0E1           MOV      R0,R4
   \   00000030   150000EF           SWI      +21
   \   00000034   3080BDE8           POP      {R4,R5,PC}
    494              }
    495            }
    496          
    497            if(cmd==TI_CMD_FOCUS)
   \                     ??vcinfo_ghook_0:
   \   00000038   0A0051E3           CMP      R1,#+10
   \   0000003C   0100001A           BNE      ??vcinfo_ghook_2
    498            {
    499              DisableIDLETMR();   // Отключаем таймер выхода по таймауту
   \   00000040   7F0100EF           SWI      +383
   \   00000044   3080BDE8           POP      {R4,R5,PC}
    500            }
    501          
    502            if (cmd==TI_CMD_SUBFOCUS_CHANGE)
   \                     ??vcinfo_ghook_2:
   \   00000048   0C0051E3           CMP      R1,#+12
   \   0000004C   3080BD18           POPNE    {R4,R5,PC}
    503            {
    504              if (EDIT_GetFocus(gui)>EDIT_GetUnFocus(gui)) // Если идем сверху вниз
   \   00000050   830100EF           SWI      +387
   \   00000054   0050A0E1           MOV      R5,R0
   \   00000058   0400A0E1           MOV      R0,R4
   \   0000005C   820100EF           SWI      +386
   \   00000060   000055E1           CMP      R5,R0
   \   00000064   3080BDA8           POPGE    {R4,R5,PC}
    505                EDIT_SetCursorPos(gui, 1); // То ставим курсор в начало
   \   00000068   0110A0E3           MOV      R1,#+1
   \   0000006C   0400A0E1           MOV      R0,R4
   \   00000070   D40100EF           SWI      +468
    506            }
    507          }
   \   00000074   3080BDE8           POP      {R4,R5,PC}       ;; return

   \                                 In segment DATA_I, align 4, align-sorted
    508          
    509          extern void inp_locret(void);
    510          
    511          SOFTKEY_DESC vcinfo_sk[]=
    512          {
    513            {0x0018,0x0000,(int)LG_UPDATE},
    514            {0x0001,0x0000,(int)LG_BACK},
    515            {0x003D,0x0000,(int)LGP_DOIT_PIC}
    516          };
    517          
    518          SOFTKEYSTAB vcinfo_skt=
    519          {
    520            vcinfo_sk,0
    521          };
    522          
    523          INPUTDIA_DESC vcinfo_desc=
   \                     vcinfo_desc:
   \   00000000                      DS8 56
   \   00000038                      REQUIRE `?<Initializer for vcinfo_desc>`
    524          {
    525            1,
    526            vcinfo_onkey,
    527            vcinfo_ghook,
    528            (void *)inp_locret,
    529            0,
    530            &vcinfo_skt,
    531            {0,0,0,0},
    532            4,
    533            100,
    534            101,
    535            0,
    536            0,
    537            0x40000000// Поменять софт-кнопки
    538          };
    539          
    540          HEADER_DESC vcinfo_hdr={0,0,0,0,NULL,(int)"vCard",LGP_NULL};
   \                     vcinfo_hdr:
   \   00000038                      DS8 20
   \   0000004C                      REQUIRE `?<Initializer for vcinfo_hdr>`
   \                     vcard_names:
   \   0000004C                      DS8 204
   \   00000118                      REQUIRE `?<Initializer for vcard_names>`

   \                                 In segment DATA_I, align 4, align-sorted
   \                     vcinfo_sk:
   \   00000000                      DS8 24
   \   00000018                      REQUIRE `?<Initializer for vcinfo_sk>`

   \                                 In segment DATA_I, align 4, align-sorted
   \                     vcinfo_skt:
   \   00000000                      DS8 8
   \   00000008                      REQUIRE `?<Initializer for vcinfo_skt>`
    541          
    542          extern const char percent_s[];
    543          

   \                                 In segment CODE, align 4, keep-with-next
    544          int Show_vCard(char *jid)
    545          {
   \                     Show_vCard:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   \   00000004   2CD04DE2           SUB      SP,SP,#+44
   \   00000008   0070A0E1           MOV      R7,R0
    546          #define MAX_VCARD_LINE_LEN 1024
    547            CLIST *ClEx = CList_FindContactByJID(jid);
   \   0000000C   ........           _BLF     CList_FindContactByJID,??CList_FindContactByJID??rA
    548            if (!ClEx)
   \   00000010   000050E3           CMP      R0,#+0
   \   00000014   0200001A           BNE      ??Show_vCard_0
    549              return 0;
   \                     ??Show_vCard_1:
   \   00000018   0000A0E3           MOV      R0,#+0
   \   0000001C   2CD08DE2           ADD      SP,SP,#+44
   \   00000020   F087BDE8           POP      {R4-R10,PC}
    550            VCARD vcard = ClEx->vcard;
   \                     ??Show_vCard_0:
   \   00000024   186090E5           LDR      R6,[R0, #+24]
    551            if (!vcard) // Если не нашли - ищем в ресурсе (для конференции)
   \   00000028   000056E3           CMP      R6,#+0
   \   0000002C   0400001A           BNE      ??Show_vCard_2
    552            {
    553              TRESOURCE *ResEx = CList_IsResourceInList(jid);
   \   00000030   0700A0E1           MOV      R0,R7
   \   00000034   ........           _BLF     CList_IsResourceInList,??CList_IsResourceInList??rA
    554              if (ResEx)
   \   00000038   000050E3           CMP      R0,#+0
   \   0000003C   8800000A           BEQ      ??Show_vCard_3
    555                vcard = ResEx->vcard;
   \   00000040   286090E5           LDR      R6,[R0, #+40]
    556            }
    557            if (vcard)
   \                     ??Show_vCard_2:
   \   00000044   000056E3           CMP      R6,#+0
   \   00000048   F2FFFF0A           BEQ      ??Show_vCard_1
    558            {
    559              WSHDR* ws_info = AllocWS(MAX_VCARD_LINE_LEN);
    560          
    561              VCARD_VIEW_DESC *view_desc = malloc(sizeof(VCARD_VIEW_DESC));
    562              view_desc->jid = malloc(strlen(jid)+1);
    563              strcpy(view_desc->jid, jid);
    564          
    565              EDITCONTROL ec;
    566              void *ma=malloc_adr();
    567              void *eq;
    568              PrepareEditControl(&ec);
    569              eq=AllocEQueue(ma,mfree_adr());
    570          
    571              for (int i=0; i<N_VCARD_FIELDS; i++)
   \   0000004C   18829FE5           LDR      R8,??Show_vCard_4  ;; vcinfo_desc
   \   00000050   400EA0E3           MOV      R0,#+1024
   \   00000054   250100EF           SWI      +293
   \   00000058   0040A0E1           MOV      R4,R0
   \   0000005C   0C00A0E3           MOV      R0,#+12
   \   00000060   140000EF           SWI      +20
   \   00000064   0050A0E1           MOV      R5,R0
   \   00000068   0700A0E1           MOV      R0,R7
   \   0000006C   1B0000EF           SWI      +27
   \   00000070   010080E2           ADD      R0,R0,#+1
   \   00000074   140000EF           SWI      +20
   \   00000078   000085E5           STR      R0,[R5, #+0]
   \   0000007C   0710A0E1           MOV      R1,R7
   \   00000080   1A0000EF           SWI      +26
   \   00000084   148000EF           SWI      +32788
   \   00000088   0090A0E1           MOV      R9,R0
   \   0000008C   0D00A0E1           MOV      R0,SP
   \   00000090   640100EF           SWI      +356
   \   00000094   158000EF           SWI      +32789
   \   00000098   0010A0E1           MOV      R1,R0
   \   0000009C   0900A0E1           MOV      R0,R9
   \   000000A0   630100EF           SWI      +355
   \   000000A4   0070A0E1           MOV      R7,R0
   \   000000A8   00A0A0E3           MOV      R10,#+0
    572              {
    573                if (vcard[i])
   \                     ??Show_vCard_5:
   \   000000AC   0A0196E7           LDR      R0,[R6, +R10, LSL #+2]
   \   000000B0   000050E3           CMP      R0,#+0
   \   000000B4   1E00000A           BEQ      ??Show_vCard_6
    574                {
    575                  ascii2ws(ws_info, vcard_names[i]);
   \   000000B8   0A0188E0           ADD      R0,R8,R10, LSL #+2
   \   000000BC   4C1090E5           LDR      R1,[R0, #+76]
   \   000000C0   0400A0E1           MOV      R0,R4
   \   000000C4   ........           _BLF     ascii2ws,??ascii2ws??rA
    576                  ConstructEditControl(&ec, ECT_HEADER, ECF_APPEND_EOL, ws_info, MAX_VCARD_LINE_LEN);
   \   000000C8   400EA0E3           MOV      R0,#+1024
   \   000000CC   01002DE9           PUSH     {R0}
   \   000000D0   0430A0E1           MOV      R3,R4
   \   000000D4   4020A0E3           MOV      R2,#+64
   \   000000D8   0110A0E3           MOV      R1,#+1
   \   000000DC   04008DE2           ADD      R0,SP,#+4
   \   000000E0   650100EF           SWI      +357
    577                  AddEditControlToEditQend(eq,&ec,ma);
   \   000000E4   0920A0E1           MOV      R2,R9
   \   000000E8   04108DE2           ADD      R1,SP,#+4
   \   000000EC   0700A0E1           MOV      R0,R7
   \   000000F0   660100EF           SWI      +358
    578                  utf8_2ws(ws_info, vcard[i], MAX_VCARD_LINE_LEN);
   \   000000F4   0A1196E7           LDR      R1,[R6, +R10, LSL #+2]
   \   000000F8   402EA0E3           MOV      R2,#+1024
   \   000000FC   0400A0E1           MOV      R0,R4
   \   00000100   E30100EF           SWI      +483
    579                  ConstructEditControl(&ec, ECT_NORMAL_TEXT, ECF_APPEND_EOL, ws_info, MAX_VCARD_LINE_LEN);
   \   00000104   400EA0E3           MOV      R0,#+1024
   \   00000108   01002DE9           PUSH     {R0}
   \   0000010C   0430A0E1           MOV      R3,R4
   \   00000110   4020A0E3           MOV      R2,#+64
   \   00000114   0310A0E3           MOV      R1,#+3
   \   00000118   08008DE2           ADD      R0,SP,#+8
   \   0000011C   650100EF           SWI      +357
    580                  AddEditControlToEditQend(eq,&ec,ma);
   \   00000120   0920A0E1           MOV      R2,R9
   \   00000124   08108DE2           ADD      R1,SP,#+8
   \   00000128   0700A0E1           MOV      R0,R7
   \   0000012C   660100EF           SWI      +358
   \   00000130   08D08DE2           ADD      SP,SP,#+8
    581                }
    582              }
   \                     ??Show_vCard_6:
   \   00000134   01A08AE2           ADD      R10,R10,#+1
   \   00000138   33005AE3           CMP      R10,#+51
   \   0000013C   DAFFFFBA           BLT      ??Show_vCard_5
    583          
    584              ascii2ws(ws_info, LG_UPDATE);
   \   00000140   ........           LDR      R10,??DataTable3  ;; `?<Constant ".jpg">`
   \   00000144   0400A0E1           MOV      R0,R4
   \   00000148   38108AE2           ADD      R1,R10,#+56
   \   0000014C   ........           _BLF     ascii2ws,??ascii2ws??rA
    585              ConstructEditControl(&ec, ECT_LINK, ECF_APPEND_EOL, ws_info, MAX_VCARD_LINE_LEN);
   \   00000150   400EA0E3           MOV      R0,#+1024
   \   00000154   01002DE9           PUSH     {R0}
   \   00000158   0430A0E1           MOV      R3,R4
   \   0000015C   4020A0E3           MOV      R2,#+64
   \   00000160   0910A0E3           MOV      R1,#+9
   \   00000164   04008DE2           ADD      R0,SP,#+4
   \   00000168   650100EF           SWI      +357
    586              view_desc->update_pos = AddEditControlToEditQend(eq,&ec,ma);
   \   0000016C   0920A0E1           MOV      R2,R9
   \   00000170   04108DE2           ADD      R1,SP,#+4
   \   00000174   0700A0E1           MOV      R0,R7
   \   00000178   660100EF           SWI      +358
   \   0000017C   040085E5           STR      R0,[R5, #+4]
    587          
    588              if (Get_VCard_Value(vcard, "!PHOTO"))
   \   00000180   30108AE2           ADD      R1,R10,#+48
   \   00000184   0600A0E1           MOV      R0,R6
   \   00000188   ........           BL       Get_VCard_Value
   \   0000018C   000050E3           CMP      R0,#+0
   \   00000190   04D08DE2           ADD      SP,SP,#+4
   \   00000194   0F00000A           BEQ      ??Show_vCard_7
    589              {
    590                ascii2ws(ws_info, LG_SHOW_AVATAR);
   \   00000198   1C108AE2           ADD      R1,R10,#+28
   \   0000019C   0400A0E1           MOV      R0,R4
   \   000001A0   ........           _BLF     ascii2ws,??ascii2ws??rA
    591                ConstructEditControl(&ec, ECT_LINK, ECF_APPEND_EOL, ws_info, MAX_VCARD_LINE_LEN);
   \   000001A4   400EA0E3           MOV      R0,#+1024
   \   000001A8   01002DE9           PUSH     {R0}
   \   000001AC   0430A0E1           MOV      R3,R4
   \   000001B0   4020A0E3           MOV      R2,#+64
   \   000001B4   0910A0E3           MOV      R1,#+9
   \   000001B8   04008DE2           ADD      R0,SP,#+4
   \   000001BC   650100EF           SWI      +357
    592                view_desc->photo_show_pos = AddEditControlToEditQend(eq,&ec,ma);
   \   000001C0   0920A0E1           MOV      R2,R9
   \   000001C4   04108DE2           ADD      R1,SP,#+4
   \   000001C8   0700A0E1           MOV      R0,R7
   \   000001CC   660100EF           SWI      +358
   \   000001D0   04D08DE2           ADD      SP,SP,#+4
   \   000001D4   000000EA           B        ??Show_vCard_8
    593              }
    594              else
    595              {
    596                view_desc->photo_show_pos = 0;
   \                     ??Show_vCard_7:
   \   000001D8   0000A0E3           MOV      R0,#+0
   \                     ??Show_vCard_8:
   \   000001DC   080085E5           STR      R0,[R5, #+8]
    597              }
    598          
    599              patch_header(&vcinfo_hdr);
   \   000001E0   0060A0E3           MOV      R6,#+0
   \   000001E4   B863C8E1           STRH     R6,[R8, #+56]
   \   000001E8   1800A0E3           MOV      R0,#+24
   \   000001EC   BA03C8E1           STRH     R0,[R8, #+58]
   \   000001F0   888100EF           SWI      +33160
   \   000001F4   010040E2           SUB      R0,R0,#+1
   \   000001F8   BC03C8E1           STRH     R0,[R8, #+60]
   \   000001FC   8A8100EF           SWI      +33162
   \   00000200   180080E2           ADD      R0,R0,#+24
   \   00000204   BE03C8E1           STRH     R0,[R8, #+62]
    600              patch_input(&vcinfo_desc);
   \   00000208   B861C8E1           STRH     R6,[R8, #+24]
   \   0000020C   8A8100EF           SWI      +33162
   \   00000210   190080E2           ADD      R0,R0,#+25
   \   00000214   BA01C8E1           STRH     R0,[R8, #+26]
   \   00000218   888100EF           SWI      +33160
   \   0000021C   010040E2           SUB      R0,R0,#+1
   \   00000220   BC01C8E1           STRH     R0,[R8, #+28]
   \   00000224   898100EF           SWI      +33161
   \   00000228   0060A0E1           MOV      R6,R0
   \   0000022C   8B8100EF           SWI      +33163
   \   00000230   000046E0           SUB      R0,R6,R0
   \   00000234   010040E2           SUB      R0,R0,#+1
   \   00000238   BE01C8E1           STRH     R0,[R8, #+30]
    601              CreateInputTextDialog(&vcinfo_desc,&vcinfo_hdr,eq,1,view_desc);
   \   0000023C   20002DE9           PUSH     {R5}
   \   00000240   0130A0E3           MOV      R3,#+1
   \   00000244   0720A0E1           MOV      R2,R7
   \   00000248   381088E2           ADD      R1,R8,#+56
   \   0000024C   0800A0E1           MOV      R0,R8
   \   00000250   670100EF           SWI      +359
    602          
    603              FreeWS(ws_info);
   \   00000254   0400A0E1           MOV      R0,R4
   \   00000258   290100EF           SWI      +297
    604              return 1;
   \   0000025C   0100A0E3           MOV      R0,#+1
   \   00000260   04D08DE2           ADD      SP,SP,#+4
   \                     ??Show_vCard_3:
   \   00000264   2CD08DE2           ADD      SP,SP,#+44       ;; stack cleaning
   \   00000268   F087BDE8           POP      {R4-R10,PC}      ;; return
   \                     ??Show_vCard_4:
   \   0000026C   ........           DC32     vcinfo_desc
    605            }
    606            return 0;
    607          }

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   ........           DC32     vcard_index

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   ........           DC32     `?<Constant ".jpg">`

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for vcard_index>`:
   \   00000000   ............       DC32 `?<Constant "JABBERID">`, `?<Constant "FN">`
   \              ....        
   \   00000008   ............       DC32 `?<Constant "N/FAMILY">`, `?<Constant "N/GIVEN">`
   \              ....        
   \   00000010   ............       DC32 `?<Constant "N/MIDDLE">`, `?<Constant "N/PREFIX">`
   \              ....        
   \   00000018   ............       DC32 `?<Constant "N/SUFFIX">`, `?<Constant "NICKNAME">`
   \              ....        
   \   00000020   ............       DC32 `?<Constant "BDAY">`, `?<Constant "GENDER">`
   \              ....        
   \   00000028   ............       DC32 `?<Constant "ORG/ORGNAME">`, `?<Constant "ORG/ORGUNIT">`
   \              ....        
   \   00000030   ............       DC32 `?<Constant "TITLE">`, `?<Constant "ROLE">`
   \              ....        
   \   00000038   ............       DC32 `?<Constant "EMAIL/USERID">`, `?<Constant "EMAIL/HOME">`
   \              ....        
   \   00000040   ............       DC32 `?<Constant "EMAIL/WORK">`, `?<Constant "EMAIL/INTERNET">`
   \              ....        
   \   00000048   ............       DC32 `?<Constant "EMAIL/PREF">`, `?<Constant "EMAIL/X400">`
   \              ....        
   \   00000050   ............       DC32 `?<Constant "TEL/HOME">`, `?<Constant "TEL/WORK">`
   \              ....        
   \   00000058   ............       DC32 `?<Constant "TEL/VOICE">`, `?<Constant "TEL/FAX">`
   \              ....        
   \   00000060   ............       DC32 `?<Constant "TEL/PAGER">`, `?<Constant "TEL/MSG">`
   \              ....        
   \   00000068   ............       DC32 `?<Constant "TEL/CELL">`, `?<Constant "TEL/VIDEO">`
   \              ....        
   \   00000070   ............       DC32 `?<Constant "TEL/BBS">`, `?<Constant "TEL/MODEM">`
   \              ....        
   \   00000078   ............       DC32 `?<Constant "TEL/ISDN">`, `?<Constant "TEL/PCS">`
   \              ....        
   \   00000080   ............       DC32 `?<Constant "TEL/PREF">`, `?<Constant "TEL/NUMBER">`
   \              ....        
   \   00000088   ............       DC32 `?<Constant "ADR/HOME">`, `?<Constant "ADR/WORK">`
   \              ....        
   \   00000090   ............       DC32 `?<Constant "ADR/POSTAL">`, `?<Constant "ADR/PARCEL">`
   \              ....        
   \   00000098   ............       DC32 `?<Constant "ADR/DOM">`, `?<Constant "ADR/PREF">`
   \              ....        
   \   000000A0   ............       DC32 `?<Constant "ADR/POBOX">`, `?<Constant "ADR/EXTADD">`
   \              ....        
   \   000000A8   ............       DC32 `?<Constant "ADR/STREET">`, `?<Constant "ADR/LOCALITY">`
   \              ....        
   \   000000B0   ............       DC32 `?<Constant "ADR/REGION">`, `?<Constant "ADR/PCODE">`
   \              ....        
   \   000000B8   ............       DC32 `?<Constant "ADR/CTRY">`, `?<Constant "URL">`
   \              ....        
   \   000000C0   ............       DC32 `?<Constant "DESC">`, `?<Constant "TZ">`, `?<Constant "!PHOTO">`
   \              ............

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for vcinfo_desc>`:
   \   00000000   01000000....       DC32 1, vcinfo_onkey, vcinfo_ghook, inp_locret, 0, vcinfo_skt
   \              ............
   \              ........0000
   \              0000........
   \   00000018   000000000000       DC16 0, 0, 0, 0
   \              0000        
   \   00000020   040000006400       DC32 4, 100, 101, 0, 0, 1073741824
   \              000065000000
   \              000000000000
   \              000000000040
   \                     `?<Initializer for vcinfo_hdr>`:
   \   00000038   000000000000       DC16 0, 0, 0, 0
   \              0000        
   \   00000040   00000000....       DC32 0H, `?<Constant "vCard">`, 2147483647
   \              ....FFFFFF7F
   \                     `?<Initializer for vcard_names>`:
   \   0000004C   ........           DC32 `?<Constant "JID">`
   \   00000050   ........           DC32 `?<Constant "\\317\\356\\353\\355\\356\\345 \\350\\354\\`
   \   00000054   ........           DC32 `?<Constant "\\324\\340\\354\\350\\353\\350\\377">`
   \   00000058   ........           DC32 `?<Constant "\\310\\354\\377">`
   \   0000005C   ........           DC32 `?<Constant "\\316\\362\\367\\345\\361\\362\\342\\356">`
   \   00000060   ............       DC32 `?<Constant "N_PREFIX">`, `?<Constant "N_SUFFIX">`
   \              ....        
   \   00000068   ........           DC32 `?<Constant "\\315\\350\\352">`
   \   0000006C   ........           DC32 `?<Constant "\\304\\345\\355\\374 \\360\\356\\346\\344\\`
   \   00000070   ........           DC32 `?<Constant "\\317\\356\\353">`
   \   00000074   ........           DC32 `?<Constant "\\315\\340\\347\\342\\340\\355\\350\\345 \\`
   \   00000078   ........           DC32 `?<Constant "\\316\\362\\344\\345\\353\\345\\355\\350\\3`
   \   0000007C   ........           DC32 `?<Constant "\\315\\340\\347\\342\\340\\355\\350\\345 \\_1`
   \   00000080   ........           DC32 `?<Constant "\\304\\356\\353\\346\\355\\356\\361\\362\\3`
   \   00000084   ............       DC32 `?<Constant "E-Mail">`, `?<Constant "EMAIL_HOME">`
   \              ....        
   \   0000008C   ............       DC32 `?<Constant "EMAIL_WORK">`, `?<Constant "EMAIL_INTERNET">`
   \              ....        
   \   00000094   ............       DC32 `?<Constant "EMAIL_PREF">`, `?<Constant "EMAIL_X400">`
   \              ....        
   \   0000009C   ............       DC32 `?<Constant "TEL_HOME">`, `?<Constant "TEL_WORK">`
   \              ....        
   \   000000A4   ............       DC32 `?<Constant "TEL_VOICE">`, `?<Constant "TEL_FAX">`
   \              ....        
   \   000000AC   ............       DC32 `?<Constant "TEL_PAGER">`, `?<Constant "TEL_MSG">`
   \              ....        
   \   000000B4   ............       DC32 `?<Constant "TEL_CELL">`, `?<Constant "TEL_VIDEO">`
   \              ....        
   \   000000BC   ............       DC32 `?<Constant "TEL_BBS">`, `?<Constant "TEL_MODEM">`
   \              ....        
   \   000000C4   ............       DC32 `?<Constant "TEL_ISDN">`, `?<Constant "TEL_PCS">`
   \              ....        
   \   000000CC   ............       DC32 `?<Constant "TEL_PREF">`, `?<Constant "TEL_NUMBER">`
   \              ....        
   \   000000D4   ............       DC32 `?<Constant "ADR_HOME">`, `?<Constant "ADR_WORK">`
   \              ....        
   \   000000DC   ............       DC32 `?<Constant "ADR_POSTAL">`, `?<Constant "ADR_PARCEL">`
   \              ....        
   \   000000E4   ............       DC32 `?<Constant "ADR_DOM">`, `?<Constant "ADR_PREF">`
   \              ....        
   \   000000EC   ............       DC32 `?<Constant "ADR_POBOX">`, `?<Constant "ADR_EXTADD">`
   \              ....        
   \   000000F4   ............       DC32 `?<Constant "ADR_STREET">`, `?<Constant "ADR_LOCALITY">`
   \              ....        
   \   000000FC   ........           DC32 `?<Constant "\\320\\345\\343\\350\\356\\355(\\356\\341\\`
   \   00000100   ........           DC32 `?<Constant "\\317\\356\\367\\362\\356\\342\\373\\351 \\`
   \   00000104   ........           DC32 `?<Constant "\\321\\362\\360\\340\\355\\340">`
   \   00000108   ........           DC32 `?<Constant "\\304\\356\\354\\340\\370\\355\\377\\377 \\`
   \   0000010C   ........           DC32 `?<Constant "\\316 \\361\\345\\341\\345">`
   \   00000110   ........           DC32 `?<Constant "\\302\\360\\345\\354\\345\\355\\355\\356\\3`
   \   00000114   ........           DC32 `?<Constant "\\300\\342\\340\\362\\340\\360\\340">`

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for vcinfo_sk>`:
   \   00000000   18000000           DC16 24, 0
   \   00000004   ........           DC32 `?<Constant "\\316\\341\\355\\356\\342\\350\\362\\374">`
   \   00000008   01000000           DC16 1, 0
   \   0000000C   ........           DC32 `?<Constant "\\315\\340\\347\\340\\344">`
   \   00000010   3D000000           DC16 61, 0
   \   00000014   FBC0FF7F           DC32 2147467515

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for vcinfo_skt>`:
   \   00000000   ........0000       DC32 vcinfo_sk, 0
   \              0000        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "BDAY">`:
   \   00000000   4244415900         DC8 "BDAY"
   \   00000005   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant ".jpg">`:
   \   00000000   2E6A706700         DC8 ".jpg"
   \   00000005   000000             DC8 0, 0, 0
   \   00000008   696D6167652F       DC8 "image/jpeg"
   \              6A70656700  
   \   00000013   00                 DC8 0
   \   00000014   42494E56414C       DC8 "BINVAL"
   \              00          
   \   0000001B   00                 DC8 0
   \   0000001C   CFEEEAE0E7E0       DC8 "\317\356\352\340\347\340\362\374 \340\342\340\362\340\360\363"
   \              F2FC20E0E2E0
   \              F2E0F0F300  
   \   0000002D   000000             DC8 0, 0, 0
   \                     `?<Constant "!PHOTO">`:
   \   00000030   2150484F544F       DC8 "!PHOTO"
   \              00          
   \   00000037   00                 DC8 0
   \                     `?<Constant "\\316\\341\\355\\356\\342\\350\\362\\374">`:
   \   00000038   CEE1EDEEE2E8       DC8 "\316\341\355\356\342\350\362\374"
   \              F2FC00      
   \   00000041   000000             DC8 0, 0, 0
   \   00000044   5459504500         DC8 "TYPE"
   \   00000049   000000             DC8 0, 0, 0
   \   0000004C   2E6A706700         DC8 ".jpg"
   \   00000051   000000             DC8 0, 0, 0
   \   00000054   2E706E6700         DC8 ".png"
   \   00000059   000000             DC8 0, 0, 0
   \   0000005C   2E67696600         DC8 ".gif"
   \   00000061   000000             DC8 0, 0, 0
   \   00000064   696D6167652F       DC8 "image/gif"
   \              67696600    
   \   0000006E   0000               DC8 0, 0
   \   00000070   696D6167652F       DC8 "image/png"
   \              706E6700    
   \   0000007A   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "%s/%s">`:
   \   00000000   25732F257300       DC8 "%s/%s"
   \   00000006   0000               DC8 0, 0
   \   00000008   50484F544F00       DC8 "PHOTO"
   \   0000000E   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "VCard:\\n">`:
   \   00000000   56436172643A       DC8 "VCard:\012"
   \              0A00        
   \   00000008   25733A202573       DC8 "%s: %s\012"
   \              0A00        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "JABBERID">`:
   \   00000000   4A4142424552       DC8 "JABBERID"
   \              494400      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 1, align-sorted
   \                     `?<Constant "FN">`:
   \   00000000   464E00             DC8 "FN"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "N/FAMILY">`:
   \   00000000   4E2F46414D49       DC8 "N/FAMILY"
   \              4C5900      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "N/GIVEN">`:
   \   00000000   4E2F47495645       DC8 "N/GIVEN"
   \              4E00        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "N/MIDDLE">`:
   \   00000000   4E2F4D494444       DC8 "N/MIDDLE"
   \              4C4500      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "N/PREFIX">`:
   \   00000000   4E2F50524546       DC8 "N/PREFIX"
   \              495800      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "N/SUFFIX">`:
   \   00000000   4E2F53554646       DC8 "N/SUFFIX"
   \              495800      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "NICKNAME">`:
   \   00000000   4E49434B4E41       DC8 "NICKNAME"
   \              4D4500      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "TEL/FAX">`:
   \   00000000   54454C2F4641       DC8 "TEL/FAX"
   \              5800        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "GENDER">`:
   \   00000000   47454E444552       DC8 "GENDER"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "ORG/ORGNAME">`:
   \   00000000   4F52472F4F52       DC8 "ORG/ORGNAME"
   \              474E414D4500

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "ORG/ORGUNIT">`:
   \   00000000   4F52472F4F52       DC8 "ORG/ORGUNIT"
   \              47554E495400

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "TITLE">`:
   \   00000000   5449544C4500       DC8 "TITLE"
   \   00000006   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "ROLE">`:
   \   00000000   524F4C4500         DC8 "ROLE"
   \   00000005   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "EMAIL/USERID">`:
   \   00000000   454D41494C2F       DC8 "EMAIL/USERID"
   \              555345524944
   \              00          
   \   0000000D   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "EMAIL/HOME">`:
   \   00000000   454D41494C2F       DC8 "EMAIL/HOME"
   \              484F4D4500  
   \   0000000B   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "EMAIL/WORK">`:
   \   00000000   454D41494C2F       DC8 "EMAIL/WORK"
   \              574F524B00  
   \   0000000B   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "EMAIL/INTERNET">`:
   \   00000000   454D41494C2F       DC8 "EMAIL/INTERNET"
   \              494E5445524E
   \              455400      
   \   0000000F   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "EMAIL/PREF">`:
   \   00000000   454D41494C2F       DC8 "EMAIL/PREF"
   \              5052454600  
   \   0000000B   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "EMAIL/X400">`:
   \   00000000   454D41494C2F       DC8 "EMAIL/X400"
   \              5834303000  
   \   0000000B   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "TEL/HOME">`:
   \   00000000   54454C2F484F       DC8 "TEL/HOME"
   \              4D4500      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "TEL/WORK">`:
   \   00000000   54454C2F574F       DC8 "TEL/WORK"
   \              524B00      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "TEL/VOICE">`:
   \   00000000   54454C2F564F       DC8 "TEL/VOICE"
   \              49434500    
   \   0000000A   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "TEL/PAGER">`:
   \   00000000   54454C2F5041       DC8 "TEL/PAGER"
   \              47455200    
   \   0000000A   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "TEL/MSG">`:
   \   00000000   54454C2F4D53       DC8 "TEL/MSG"
   \              4700        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "TEL/CELL">`:
   \   00000000   54454C2F4345       DC8 "TEL/CELL"
   \              4C4C00      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "TEL/VIDEO">`:
   \   00000000   54454C2F5649       DC8 "TEL/VIDEO"
   \              44454F00    
   \   0000000A   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "TEL/BBS">`:
   \   00000000   54454C2F4242       DC8 "TEL/BBS"
   \              5300        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "TEL/MODEM">`:
   \   00000000   54454C2F4D4F       DC8 "TEL/MODEM"
   \              44454D00    
   \   0000000A   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "TEL/ISDN">`:
   \   00000000   54454C2F4953       DC8 "TEL/ISDN"
   \              444E00      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "TEL/PCS">`:
   \   00000000   54454C2F5043       DC8 "TEL/PCS"
   \              5300        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "TEL/PREF">`:
   \   00000000   54454C2F5052       DC8 "TEL/PREF"
   \              454600      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "TEL/NUMBER">`:
   \   00000000   54454C2F4E55       DC8 "TEL/NUMBER"
   \              4D42455200  
   \   0000000B   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "ADR/HOME">`:
   \   00000000   4144522F484F       DC8 "ADR/HOME"
   \              4D4500      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "ADR/WORK">`:
   \   00000000   4144522F574F       DC8 "ADR/WORK"
   \              524B00      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "ADR/POSTAL">`:
   \   00000000   4144522F504F       DC8 "ADR/POSTAL"
   \              5354414C00  
   \   0000000B   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "ADR/PARCEL">`:
   \   00000000   4144522F5041       DC8 "ADR/PARCEL"
   \              5243454C00  
   \   0000000B   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "ADR/DOM">`:
   \   00000000   4144522F444F       DC8 "ADR/DOM"
   \              4D00        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "ADR/PREF">`:
   \   00000000   4144522F5052       DC8 "ADR/PREF"
   \              454600      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "ADR/POBOX">`:
   \   00000000   4144522F504F       DC8 "ADR/POBOX"
   \              424F5800    
   \   0000000A   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "ADR/EXTADD">`:
   \   00000000   4144522F4558       DC8 "ADR/EXTADD"
   \              5441444400  
   \   0000000B   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "ADR/STREET">`:
   \   00000000   4144522F5354       DC8 "ADR/STREET"
   \              5245455400  
   \   0000000B   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "ADR/LOCALITY">`:
   \   00000000   4144522F4C4F       DC8 "ADR/LOCALITY"
   \              43414C495459
   \              00          
   \   0000000D   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "ADR/REGION">`:
   \   00000000   4144522F5245       DC8 "ADR/REGION"
   \              47494F4E00  
   \   0000000B   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "ADR/PCODE">`:
   \   00000000   4144522F5043       DC8 "ADR/PCODE"
   \              4F444500    
   \   0000000A   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "ADR/CTRY">`:
   \   00000000   4144522F4354       DC8 "ADR/CTRY"
   \              525900      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "URL">`:
   \   00000000   55524C00           DC8 "URL"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "DESC">`:
   \   00000000   4445534300         DC8 "DESC"
   \   00000005   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 1, align-sorted
   \                     `?<Constant "TZ">`:
   \   00000000   545A00             DC8 "TZ"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "JID">`:
   \   00000000   4A494400           DC8 "JID"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\317\\356\\353\\355\\356\\345 \\350\\354\\`:
   \   00000000   CFEEEBEDEEE5       DC8 "\317\356\353\355\356\345 \350\354\377"
   \              20E8ECFF00  
   \   0000000B   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\324\\340\\354\\350\\353\\350\\377">`:
   \   00000000   D4E0ECE8EBE8       DC8 "\324\340\354\350\353\350\377"
   \              FF00        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\310\\354\\377">`:
   \   00000000   C8ECFF00           DC8 "\310\354\377"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\316\\362\\367\\345\\361\\362\\342\\356">`:
   \   00000000   CEF2F7E5F1F2       DC8 "\316\362\367\345\361\362\342\356"
   \              E2EE00      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "N_PREFIX">`:
   \   00000000   4E5F50524546       DC8 "N_PREFIX"
   \              495800      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "N_SUFFIX">`:
   \   00000000   4E5F53554646       DC8 "N_SUFFIX"
   \              495800      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\315\\350\\352">`:
   \   00000000   CDE8EA00           DC8 "\315\350\352"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\304\\345\\355\\374 \\360\\356\\346\\344\\`:
   \   00000000   C4E5EDFC20F0       DC8 "\304\345\355\374 \360\356\346\344\345\355\350\377"
   \              EEE6E4E5EDE8
   \              FF00        
   \   0000000E   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\317\\356\\353">`:
   \   00000000   CFEEEB00           DC8 "\317\356\353"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\315\\340\\347\\342\\340\\355\\350\\345 \\`:
   \   00000000   CDE0E7E2E0ED       DC8 "\315\340\347\342\340\355\350\345 \356\360\343\340\355\350\347\340\366\350\350"
   \              E8E520EEF0E3
   \              E0EDE8E7E0F6
   \              E8E800      
   \   00000015   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\316\\362\\344\\345\\353\\345\\355\\350\\3`:
   \   00000000   CEF2E4E5EBE5       DC8 "\316\362\344\345\353\345\355\350\345 \356\360\343\340\355\350\347\340\366\350\350"
   \              EDE8E520EEF0
   \              E3E0EDE8E7E0
   \              F6E8E800    
   \   00000016   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\315\\340\\347\\342\\340\\355\\350\\345 \\_1`:
   \   00000000   CDE0E7E2E0ED       DC8 "\315\340\347\342\340\355\350\345 \344\356\353\346\355\356\361\362\350"
   \              E8E520E4EEEB
   \              E6EDEEF1F2E8
   \              00          
   \   00000013   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\304\\356\\353\\346\\355\\356\\361\\362\\3`:
   \   00000000   C4EEEBE6EDEE       DC8 "\304\356\353\346\355\356\361\362\374"
   \              F1F2FC00    
   \   0000000A   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "E-Mail">`:
   \   00000000   452D4D61696C       DC8 "E-Mail"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "EMAIL_HOME">`:
   \   00000000   454D41494C5F       DC8 "EMAIL_HOME"
   \              484F4D4500  
   \   0000000B   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "EMAIL_WORK">`:
   \   00000000   454D41494C5F       DC8 "EMAIL_WORK"
   \              574F524B00  
   \   0000000B   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "EMAIL_INTERNET">`:
   \   00000000   454D41494C5F       DC8 "EMAIL_INTERNET"
   \              494E5445524E
   \              455400      
   \   0000000F   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "EMAIL_PREF">`:
   \   00000000   454D41494C5F       DC8 "EMAIL_PREF"
   \              5052454600  
   \   0000000B   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "EMAIL_X400">`:
   \   00000000   454D41494C5F       DC8 "EMAIL_X400"
   \              5834303000  
   \   0000000B   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "TEL_HOME">`:
   \   00000000   54454C5F484F       DC8 "TEL_HOME"
   \              4D4500      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "TEL_WORK">`:
   \   00000000   54454C5F574F       DC8 "TEL_WORK"
   \              524B00      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "TEL_VOICE">`:
   \   00000000   54454C5F564F       DC8 "TEL_VOICE"
   \              49434500    
   \   0000000A   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "TEL_FAX">`:
   \   00000000   54454C5F4641       DC8 "TEL_FAX"
   \              5800        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "TEL_PAGER">`:
   \   00000000   54454C5F5041       DC8 "TEL_PAGER"
   \              47455200    
   \   0000000A   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "TEL_MSG">`:
   \   00000000   54454C5F4D53       DC8 "TEL_MSG"
   \              4700        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "TEL_CELL">`:
   \   00000000   54454C5F4345       DC8 "TEL_CELL"
   \              4C4C00      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "TEL_VIDEO">`:
   \   00000000   54454C5F5649       DC8 "TEL_VIDEO"
   \              44454F00    
   \   0000000A   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "TEL_BBS">`:
   \   00000000   54454C5F4242       DC8 "TEL_BBS"
   \              5300        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "TEL_MODEM">`:
   \   00000000   54454C5F4D4F       DC8 "TEL_MODEM"
   \              44454D00    
   \   0000000A   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "TEL_ISDN">`:
   \   00000000   54454C5F4953       DC8 "TEL_ISDN"
   \              444E00      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "TEL_PCS">`:
   \   00000000   54454C5F5043       DC8 "TEL_PCS"
   \              5300        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "TEL_PREF">`:
   \   00000000   54454C5F5052       DC8 "TEL_PREF"
   \              454600      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "TEL_NUMBER">`:
   \   00000000   54454C5F4E55       DC8 "TEL_NUMBER"
   \              4D42455200  
   \   0000000B   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "ADR_HOME">`:
   \   00000000   4144525F484F       DC8 "ADR_HOME"
   \              4D4500      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "ADR_WORK">`:
   \   00000000   4144525F574F       DC8 "ADR_WORK"
   \              524B00      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "ADR_POSTAL">`:
   \   00000000   4144525F504F       DC8 "ADR_POSTAL"
   \              5354414C00  
   \   0000000B   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "ADR_PARCEL">`:
   \   00000000   4144525F5041       DC8 "ADR_PARCEL"
   \              5243454C00  
   \   0000000B   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "ADR_DOM">`:
   \   00000000   4144525F444F       DC8 "ADR_DOM"
   \              4D00        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "ADR_PREF">`:
   \   00000000   4144525F5052       DC8 "ADR_PREF"
   \              454600      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "ADR_POBOX">`:
   \   00000000   4144525F504F       DC8 "ADR_POBOX"
   \              424F5800    
   \   0000000A   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "ADR_EXTADD">`:
   \   00000000   4144525F4558       DC8 "ADR_EXTADD"
   \              5441444400  
   \   0000000B   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "ADR_STREET">`:
   \   00000000   4144525F5354       DC8 "ADR_STREET"
   \              5245455400  
   \   0000000B   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "ADR_LOCALITY">`:
   \   00000000   4144525F4C4F       DC8 "ADR_LOCALITY"
   \              43414C495459
   \              00          
   \   0000000D   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\320\\345\\343\\350\\356\\355(\\356\\341\\`:
   \   00000000   D0E5E3E8EEED       DC8 "\320\345\343\350\356\355(\356\341\353\340\361\362\374)"
   \              28EEE1EBE0F1
   \              F2FC2900    

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\317\\356\\367\\362\\356\\342\\373\\351 \\`:
   \   00000000   CFEEF7F2EEE2       DC8 "\317\356\367\362\356\342\373\351 \352\356\344"
   \              FBE920EAEEE4
   \              00          
   \   0000000D   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\321\\362\\360\\340\\355\\340">`:
   \   00000000   D1F2F0E0EDE0       DC8 "\321\362\360\340\355\340"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\304\\356\\354\\340\\370\\355\\377\\377 \\`:
   \   00000000   C4EEECE0F8ED       DC8 "\304\356\354\340\370\355\377\377 \361\362\360\340\355\350\366\340"
   \              FFFF20F1F2F0
   \              E0EDE8F6E000
   \   00000012   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\316 \\361\\345\\341\\345">`:
   \   00000000   CE20F1E5E1E5       DC8 "\316 \361\345\341\345"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\302\\360\\345\\354\\345\\355\\355\\356\\3`:
   \   00000000   C2F0E5ECE5ED       DC8 "\302\360\345\354\345\355\355\356\351 \357\356\377\361"
   \              EDEEE920EFEE
   \              FFF100      
   \   0000000F   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\300\\342\\340\\362\\340\\360\\340">`:
   \   00000000   C0E2E0F2E0F0       DC8 "\300\342\340\362\340\360\340"
   \              E000        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\315\\340\\347\\340\\344">`:
   \   00000000   CDE0E7E0E400       DC8 "\315\340\347\340\344"
   \   00000006   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "vCard">`:
   \   00000000   764361726400       DC8 "vCard"
   \   00000006   0000               DC8 0, 0
    608          
    609          //EOL,EOF

   Maximum stack usage in bytes:

     Function            CSTACK
     --------            ------
     Add_vCard_Value        20
     Create_vCard            8
     DecodePhoto            44
     Free_vCard             12
     Get_Avatar_Path        20
     Get_VCard_Value        16
     Process_vCard         296
     SavePhoto             156
     Show_vCard             84
     Show_vCard2            40
     vCard_Photo_Display    12
     vcinfo_ghook           12
     vcinfo_onkey           20


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     vcard_index                     204
     Add_vCard_Value                 108
     Get_VCard_Value                  68
     Create_vCard                     32
     Free_vCard                       56
     _slash                            2
     Get_Avatar_Path                 212
     vCard_Photo_Display              60
     DecodePhoto                     272
     SavePhoto                       284
     Process_vCard                   328
     Show_vCard2                     320
     vcinfo_onkey                    292
     vcinfo_ghook                    120
     vcinfo_desc                     280
     vcinfo_sk                        24
     vcinfo_skt                        8
     Show_vCard                      624
     ??DataTable1                      4
     ??DataTable3                      4
     ?<Initializer for vcard_index>  204
     ?<Initializer for vcinfo_desc>  280
     ?<Initializer for vcinfo_sk>     24
     ?<Initializer for vcinfo_skt>     8
     ?<Constant "BDAY">                8
     ?<Constant ".jpg">              124
     ?<Constant "%s/%s">              16
     ?<Constant "VCard:\n">           16
     ?<Constant "JABBERID">           12
     ?<Constant "FN">                  3
     ?<Constant "N/FAMILY">           12
     ?<Constant "N/GIVEN">             8
     ?<Constant "N/MIDDLE">           12
     ?<Constant "N/PREFIX">           12
     ?<Constant "N/SUFFIX">           12
     ?<Constant "NICKNAME">           12
     ?<Constant "TEL/FAX">             8
     ?<Constant "GENDER">              8
     ?<Constant "ORG/ORGNAME">        12
     ?<Constant "ORG/ORGUNIT">        12
     ?<Constant "TITLE">               8
     ?<Constant "ROLE">                8
     ?<Constant "EMAIL/USERID">       16
     ?<Constant "EMAIL/HOME">         12
     ?<Constant "EMAIL/WORK">         12
     ?<Constant "EMAIL/INTERNET">     16
     ?<Constant "EMAIL/PREF">         12
     ?<Constant "EMAIL/X400">         12
     ?<Constant "TEL/HOME">           12
     ?<Constant "TEL/WORK">           12
     ?<Constant "TEL/VOICE">          12
     ?<Constant "TEL/PAGER">          12
     ?<Constant "TEL/MSG">             8
     ?<Constant "TEL/CELL">           12
     ?<Constant "TEL/VIDEO">          12
     ?<Constant "TEL/BBS">             8
     ?<Constant "TEL/MODEM">          12
     ?<Constant "TEL/ISDN">           12
     ?<Constant "TEL/PCS">             8
     ?<Constant "TEL/PREF">           12
     ?<Constant "TEL/NUMBER">         12
     ?<Constant "ADR/HOME">           12
     ?<Constant "ADR/WORK">           12
     ?<Constant "ADR/POSTAL">         12
     ?<Constant "ADR/PARCEL">         12
     ?<Constant "ADR/DOM">             8
     ?<Constant "ADR/PREF">           12
     ?<Constant "ADR/POBOX">          12
     ?<Constant "ADR/EXTADD">         12
     ?<Constant "ADR/STREET">         12
     ?<Constant "ADR/LOCALITY">       16
     ?<Constant "ADR/REGION">         12
     ?<Constant "ADR/PCODE">          12
     ?<Constant "ADR/CTRY">           12
     ?<Constant "URL">                 4
     ?<Constant "DESC">                8
     ?<Constant "TZ">                  3
     ?<Constant "JID">                 4
     ?<Constant "\317\356\353\355\356\345 \350\354\
                                      12
     ?<Constant "\324\340\354\350\353\350\377">
                                       8
     ?<Constant "\310\354\377">        4
     ?<Constant "\316\362\367\345\361\362\342\356">
                                      12
     ?<Constant "N_PREFIX">           12
     ?<Constant "N_SUFFIX">           12
     ?<Constant "\315\350\352">        4
     ?<Constant "\304\345\355\374 \360\356\346\344\
                                      16
     ?<Constant "\317\356\353">        4
     ?<Constant "\315\340\347\342\340\355\350\345 \
                                      24
     ?<Constant "\316\362\344\345\353\345\355\350\3
                                      24
     ?<Constant "\315\340\347\342\340\355\350\345 \_1
                                      20
     ?<Constant "\304\356\353\346\355\356\361\362\3
                                      12
     ?<Constant "E-Mail">              8
     ?<Constant "EMAIL_HOME">         12
     ?<Constant "EMAIL_WORK">         12
     ?<Constant "EMAIL_INTERNET">     16
     ?<Constant "EMAIL_PREF">         12
     ?<Constant "EMAIL_X400">         12
     ?<Constant "TEL_HOME">           12
     ?<Constant "TEL_WORK">           12
     ?<Constant "TEL_VOICE">          12
     ?<Constant "TEL_FAX">             8
     ?<Constant "TEL_PAGER">          12
     ?<Constant "TEL_MSG">             8
     ?<Constant "TEL_CELL">           12
     ?<Constant "TEL_VIDEO">          12
     ?<Constant "TEL_BBS">             8
     ?<Constant "TEL_MODEM">          12
     ?<Constant "TEL_ISDN">           12
     ?<Constant "TEL_PCS">             8
     ?<Constant "TEL_PREF">           12
     ?<Constant "TEL_NUMBER">         12
     ?<Constant "ADR_HOME">           12
     ?<Constant "ADR_WORK">           12
     ?<Constant "ADR_POSTAL">         12
     ?<Constant "ADR_PARCEL">         12
     ?<Constant "ADR_DOM">             8
     ?<Constant "ADR_PREF">           12
     ?<Constant "ADR_POBOX">          12
     ?<Constant "ADR_EXTADD">         12
     ?<Constant "ADR_STREET">         12
     ?<Constant "ADR_LOCALITY">       16
     ?<Constant "\320\345\343\350\356\355(\356\341\
                                      16
     ?<Constant "\317\356\367\362\356\342\373\351 \
                                      16
     ?<Constant "\321\362\360\340\355\340">
                                       8
     ?<Constant "\304\356\354\340\370\355\377\377 \
                                      20
     ?<Constant "\316 \361\345\341\345">
                                       8
     ?<Constant "\302\360\345\354\345\355\355\356\3
                                      16
     ?<Constant "\300\342\340\362\340\360\340">
                                       8
     ?<Constant "\315\340\347\340\344">
                                       8
     ?<Constant "vCard">               8
      Others                         160

 
 2 932 bytes in segment CODE
 1 320 bytes in segment DATA_C
   516 bytes in segment DATA_I
   516 bytes in segment DATA_ID
    12 bytes in segment INITTAB
 
 2 784 bytes of CODE  memory (+ 160 bytes shared)
 1 836 bytes of CONST memory
   516 bytes of DATA  memory

Errors: none
Warnings: none
