##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION    15/Feb/2011  01:38:59 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  C:\arm\SieJC_BR\transports_icons.c                   #
#    Command line    =  C:\arm\SieJC_BR\transports_icons.c -D NEWSGOLD -D    #
#                       ELKA --preprocess C:\arm\SieJC_BR\Release_ELKA\List\ #
#                        -lC C:\arm\SieJC_BR\Release_ELKA\List\ -o           #
#                       C:\arm\SieJC_BR\Release_ELKA\Obj\ -s9 --no_unroll    #
#                       --cpu_mode arm --endian little --cpu ARM926EJ-S      #
#                       --stack_align 4 --interwork -e --fpu None            #
#                       --dlib_config "C:\arm2\Embedded Workbench 4.0        #
#                       Evaluation\ARM\LIB\dl5tpainl8n.h" -I                 #
#                       "C:\arm2\Embedded Workbench 4.0                      #
#                       Evaluation\ARM\INC\" --inline_threshold=2            #
#    List file       =  C:\arm\SieJC_BR\Release_ELKA\List\transports_icons.l #
#                       st                                                   #
#    Object file     =  C:\arm\SieJC_BR\Release_ELKA\Obj\transports_icons.r7 #
#                       9                                                    #
#                                                                            #
#                                                                            #
##############################################################################

C:\arm\SieJC_BR\transports_icons.c
      1          #include "../inc/swilib.h"
      2          #include "string_util.h"
      3          #include "main.h"
      4          #include "transports_icons.h"
      5          
      6          extern const char PATH_TO_PIC[];

   \                                 In segment DATA_C, align 4, align-sorted
      7          const char transports_img_folder[] = "transports\\";
   \                     transports_img_folder:
   \   00000000   7472616E7370       DC8 "transports\\"
   \              6F7274735C00

   \                                 In segment DATA_Z, align 4, align-sorted
      8          static TransportIconsList * til_top = NULL;
   \                     til_top:
   \   00000000                      DS8 4
      9          
     10          /*
     11            Загрузить из папки "..\img\transports\" все папки с иконками транспортов.
     12          */

   \                                 In segment CODE, align 4, keep-with-next
     13          void LoadTranspostIconsList()
     14          {
   \                     LoadTranspostIconsList:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
     15            DIR_ENTRY de;
     16            TransportIconsList * til;
     17            unsigned int err = NULL;
     18            char * tr_folder = malloc(strlen(PATH_TO_PIC) + 32);
   \   00000004   00519FE5           LDR      R5,??LoadTranspostIconsList_0+0x4  ;; PATH_TO_PIC
   \   00000008   D2DF4DE2           SUB      SP,SP,#+840
   \   0000000C   0040A0E3           MOV      R4,#+0
   \   00000010   00408DE5           STR      R4,[SP, #+0]
   \   00000014   0500A0E1           MOV      R0,R5
   \   00000018   1B0000EF           SWI      +27
   \   0000001C   200080E2           ADD      R0,R0,#+32
   \   00000020   140000EF           SWI      +20
   \   00000024   0060A0E1           MOV      R6,R0
     19            strcpy(tr_folder, PATH_TO_PIC);
   \   00000028   0510A0E1           MOV      R1,R5
   \   0000002C   1A0000EF           SWI      +26
     20            strcat(tr_folder, transports_img_folder);
   \   00000030   ........           LDR      R1,??DataTable4  ;; transports_img_folder
   \   00000034   0600A0E1           MOV      R0,R6
   \   00000038   170000EF           SWI      +23
     21            if (isdir(tr_folder, &err)) // Проверяем есть ли вообще папка "transports"
   \   0000003C   0D10A0E1           MOV      R1,SP
   \   00000040   0600A0E1           MOV      R0,R6
   \   00000044   910000EF           SWI      +145
   \   00000048   000050E3           CMP      R0,#+0
   \   0000004C   2900000A           BEQ      ??LoadTranspostIconsList_1
     22            {
     23              strcat(tr_folder, "*.*");
   \   00000050   2C1F8FE2           ADR      R1,??LoadTranspostIconsList_0  ;; "*.*"
   \   00000054   0600A0E1           MOV      R0,R6
   \   00000058   170000EF           SWI      +23
     24              if (FindFirstFile(&de, tr_folder, &err))
   \   0000005C   0D20A0E1           MOV      R2,SP
   \   00000060   0610A0E1           MOV      R1,R6
   \   00000064   04008DE2           ADD      R0,SP,#+4
   \   00000068   6B0000EF           SWI      +107
   \   0000006C   000050E3           CMP      R0,#+0
   \   00000070   1D00000A           BEQ      ??LoadTranspostIconsList_2
     25              {
     26                do
     27                {
     28                  if (de.file_attr & FA_DIRECTORY) // Нашли папку
   \                     ??LoadTranspostIconsList_3:
   \   00000074   F003DDE1           LDRSH    R0,[SP, #+48]
   \   00000078   100010E3           TST      R0,#0x10
   \   0000007C   1500000A           BEQ      ??LoadTranspostIconsList_4
     29                  {
     30                    til = malloc(sizeof(TransportIconsList)); // Создаем новый список
     31                    strcpy(til->name, de.file_name); // Копируем имя папки в список
     32                    til->next = NULL;
     33                    if (til_top)
   \   00000080   ........           LDR      R7,??DataTable3  ;; til_top
   \   00000084   2400A0E3           MOV      R0,#+36
   \   00000088   140000EF           SWI      +20
   \   0000008C   0050A0E1           MOV      R5,R0
   \   00000090   B9108DE2           ADD      R1,SP,#+185
   \   00000094   040085E2           ADD      R0,R5,#+4
   \   00000098   1A0000EF           SWI      +26
   \   0000009C   004085E5           STR      R4,[R5, #+0]
   \   000000A0   008097E5           LDR      R8,[R7, #+0]
   \   000000A4   000058E3           CMP      R8,#+0
   \   000000A8   0900000A           BEQ      ??LoadTranspostIconsList_5
     34                    {
     35                      TransportIconsList * til_r = (TransportIconsList *)&til_top;
     36                      TransportIconsList * til_t = til_top;
     37                      while(stricmp(til_t->name, til->name) < 0)
   \                     ??LoadTranspostIconsList_6:
   \   000000AC   041085E2           ADD      R1,R5,#+4
   \   000000B0   040088E2           ADD      R0,R8,#+4
   \   000000B4   ........           _BLF     stricmp,??stricmp??rA
   \   000000B8   000050E3           CMP      R0,#+0
   \   000000BC   0300005A           BPL      ??LoadTranspostIconsList_7
     38                      {
     39                        til_r = til_t;
   \   000000C0   0870A0E1           MOV      R7,R8
     40                        til_t = til_t->next;
   \   000000C4   008098E5           LDR      R8,[R8, #+0]
     41                        if (!til_t) break;
   \   000000C8   000058E3           CMP      R8,#+0
   \   000000CC   F6FFFF1A           BNE      ??LoadTranspostIconsList_6
     42                      }
     43                      til->next = til_t;
   \                     ??LoadTranspostIconsList_7:
   \   000000D0   008085E5           STR      R8,[R5, #+0]
     44                      til_r->next = til;
     45                    }
     46                    else
     47                      til_top = til;
   \                     ??LoadTranspostIconsList_5:
   \   000000D4   005087E5           STR      R5,[R7, #+0]
     48                  }
     49                }
     50                while(FindNextFile(&de, &err));
   \                     ??LoadTranspostIconsList_4:
   \   000000D8   0D10A0E1           MOV      R1,SP
   \   000000DC   04008DE2           ADD      R0,SP,#+4
   \   000000E0   6C0000EF           SWI      +108
   \   000000E4   000050E3           CMP      R0,#+0
   \   000000E8   E1FFFF1A           BNE      ??LoadTranspostIconsList_3
     51              }
     52              FindClose(&de, &err);
   \                     ??LoadTranspostIconsList_2:
   \   000000EC   0D10A0E1           MOV      R1,SP
   \   000000F0   04008DE2           ADD      R0,SP,#+4
   \   000000F4   6D0000EF           SWI      +109
     53            }
     54            mfree(tr_folder);
   \                     ??LoadTranspostIconsList_1:
   \   000000F8   0600A0E1           MOV      R0,R6
   \   000000FC   150000EF           SWI      +21
     55          }
   \   00000100   D2DF8DE2           ADD      SP,SP,#+840
   \   00000104   F081BDE8           POP      {R4-R8,PC}       ;; return
   \                     ??LoadTranspostIconsList_0:
   \   00000108   2A2E2A00           DC8      "*.*"
   \   0000010C   ........           DC32     PATH_TO_PIC
     56          

   \                                 In segment CODE, align 4, keep-with-next
     57          void FreeTranspostIconsList()
     58          {
   \                     FreeTranspostIconsList:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   ........           LDR      R4,??DataTable3  ;; til_top
   \   00000008   000094E5           LDR      R0,[R4, #+0]
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   1080BD08           POPEQ    {R4,PC}
     59            while(til_top)
     60            {
     61              TransportIconsList * til = til_top;
   \                     ??FreeTranspostIconsList_0:
   \   00000014   000094E5           LDR      R0,[R4, #+0]
     62              til_top = til_top->next;
   \   00000018   001090E5           LDR      R1,[R0, #+0]
   \   0000001C   001084E5           STR      R1,[R4, #+0]
     63              mfree(til);
   \   00000020   150000EF           SWI      +21
     64            }
   \   00000024   000094E5           LDR      R0,[R4, #+0]
   \   00000028   000050E3           CMP      R0,#+0
   \   0000002C   F8FFFF1A           BNE      ??FreeTranspostIconsList_0
     65          }
   \   00000030   1080BDE8           POP      {R4,PC}          ;; return
     66          
     67          /*
     68            Добавить в путь к иконке папку с иконками транспорта.
     69            Имя папки берем из жида контакта транспорта (xxxx@icq.jabber.ru -> icq)
     70          */

   \                                 In segment CODE, align 4, keep-with-next
     71          void GetTransportIconsPath(char * path_to_pic, TRESOURCE * resEx)
     72          {
   \                     GetTransportIconsPath:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   \   00000004   0040A0E1           MOV      R4,R0
     73            int len = NULL; // Длина имени транспорта
     74            char * tr_name = NULL; // Имя транспорта
     75            TransportIconsList * til = til_top;
   \   00000008   ........           LDR      R0,??DataTable3  ;; til_top
   \   0000000C   0180A0E1           MOV      R8,R1
   \   00000010   005090E5           LDR      R5,[R0, #+0]
   \   00000014   0070A0E3           MOV      R7,#+0
     76            if (!til) return;
   \   00000018   000055E3           CMP      R5,#+0
   \   0000001C   F083BD08           POPEQ    {R4-R9,PC}
     77            if(resEx->entry_type == T_TRANSPORT) // Сам транспорт
   \   00000020   0810D8E5           LDRB     R1,[R8, #+8]
   \   00000024   040098E5           LDR      R0,[R8, #+4]
   \   00000028   0060A0E3           MOV      R6,#+0
   \   0000002C   040051E3           CMP      R1,#+4
   \   00000030   0500000A           BEQ      ??GetTransportIconsPath_0
     78            {
     79              while(resEx->full_name[len] != '.') // Пока не дошли до точки
     80                len ++;
     81              tr_name = malloc(len + 1);
     82              strncpy(tr_name, resEx->full_name, len); // Копируем имя транспорта
     83              tr_name[len] = NULL;
     84            }
     85            else
     86            {
     87              char * tmp = strrchr(resEx->full_name, '@'); // Контакт из транспорта
   \   00000034   4010A0E3           MOV      R1,#+64
   \   00000038   170100EF           SWI      +279
   \   0000003C   0080B0E1           MOVS     R8,R0
     88              if (tmp)
   \   00000040   F083BD08           POPEQ    {R4-R9,PC}
   \   00000044   0B0000EA           B        ??GetTransportIconsPath_1
   \                     ??GetTransportIconsPath_2:
   \   00000048   0170A0E1           MOV      R7,R1
   \                     ??GetTransportIconsPath_0:
   \   0000004C   0020D7E7           LDRB     R2,[R7, +R0]
   \   00000050   011087E2           ADD      R1,R7,#+1
   \   00000054   2E0052E3           CMP      R2,#+46
   \   00000058   FAFFFF1A           BNE      ??GetTransportIconsPath_2
   \   0000005C   0100A0E1           MOV      R0,R1
   \   00000060   140000EF           SWI      +20
   \   00000064   041098E5           LDR      R1,[R8, #+4]
   \   00000068   0090A0E1           MOV      R9,R0
   \   0000006C   0720A0E1           MOV      R2,R7
   \   00000070   090000EA           B        ??GetTransportIconsPath_3
     89              {
     90                while(tmp[len + 1] != '.')
     91                  len ++;
   \                     ??GetTransportIconsPath_4:
   \   00000074   0070A0E1           MOV      R7,R0
   \                     ??GetTransportIconsPath_1:
   \   00000078   081087E0           ADD      R1,R7,R8
   \   0000007C   0110D1E5           LDRB     R1,[R1, #+1]
   \   00000080   010087E2           ADD      R0,R7,#+1
   \   00000084   2E0051E3           CMP      R1,#+46
   \   00000088   F9FFFF1A           BNE      ??GetTransportIconsPath_4
     92                tr_name = malloc(len + 1);
   \   0000008C   140000EF           SWI      +20
   \   00000090   0090A0E1           MOV      R9,R0
     93                strncpy(tr_name, tmp + 1, len);
   \   00000094   0720A0E1           MOV      R2,R7
   \   00000098   011088E2           ADD      R1,R8,#+1
   \                     ??GetTransportIconsPath_3:
   \   0000009C   160100EF           SWI      +278
     94                tr_name[len] = NULL;
   \   000000A0   0960C7E7           STRB     R6,[R7, +R9]
     95              }
     96            }
     97            if (!tr_name) return; // Наш контакт не является транспортом. Закрываем лавочку ;)
   \   000000A4   000059E3           CMP      R9,#+0
   \   000000A8   F083BD08           POPEQ    {R4-R9,PC}
     98            while(til) // Ищем в списке нашу папку
     99            {
    100              if (!stricmp(til->name, tr_name)) // Нашли!
   \                     ??GetTransportIconsPath_5:
   \   000000AC   0910A0E1           MOV      R1,R9
   \   000000B0   040085E2           ADD      R0,R5,#+4
   \   000000B4   ........           _BLF     stricmp,??stricmp??rA
   \   000000B8   000050E3           CMP      R0,#+0
   \   000000BC   0B00001A           BNE      ??GetTransportIconsPath_6
    101              {
    102                strcat(path_to_pic, transports_img_folder); // Добавляем папку "transports" в путь к иконке
   \   000000C0   ........           LDR      R1,??DataTable4  ;; transports_img_folder
   \   000000C4   0400A0E1           MOV      R0,R4
   \   000000C8   170000EF           SWI      +23
    103                strcat(path_to_pic, til->name); // Добавляем нашу папку в путь к иконке
   \   000000CC   041085E2           ADD      R1,R5,#+4
   \   000000D0   0400A0E1           MOV      R0,R4
   \   000000D4   170000EF           SWI      +23
    104                strcat(path_to_pic, "\\");
   \   000000D8   0A1F8FE2           ADR      R1,??GetTransportIconsPath_7  ;; "\\"
   \   000000DC   0400A0E1           MOV      R0,R4
   \   000000E0   170000EF           SWI      +23
    105                break;
   \   000000E4   0900A0E1           MOV      R0,R9
   \   000000E8   150000EF           SWI      +21
   \   000000EC   F083BDE8           POP      {R4-R9,PC}
    106              }
    107              til = til->next;
   \                     ??GetTransportIconsPath_6:
   \   000000F0   005095E5           LDR      R5,[R5, #+0]
    108            }
   \   000000F4   000055E3           CMP      R5,#+0
   \   000000F8   EBFFFF1A           BNE      ??GetTransportIconsPath_5
    109            mfree(tr_name);
   \   000000FC   0900A0E1           MOV      R0,R9
   \   00000100   150000EF           SWI      +21
    110          }
   \   00000104   F083BDE8           POP      {R4-R9,PC}       ;; return
   \                     ??GetTransportIconsPath_7:
   \   00000108   5C000000           DC8      "\\",+0,+0

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   ........           DC32     til_top

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   ........           DC32     transports_img_folder

   \                                 In segment DATA_C, align 4, align-sorted
   \   00000000   2A2E2A00           DC8 "*.*"

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   5C00               DC8 "\\"

   Maximum stack usage in bytes:

     Function               CSTACK
     --------               ------
     FreeTranspostIconsList     8
     GetTransportIconsPath     28
     LoadTranspostIconsList   864


   Segment part sizes:

     Function/Label         Bytes
     --------------         -----
     transports_img_folder    12
     til_top                   4
     LoadTranspostIconsList  272
     FreeTranspostIconsList   52
     GetTransportIconsPath   268
     ??DataTable3              4
     ??DataTable4              4
     ?<Constant "*.*">         4
     ?<Constant "\\">          2
      Others                  36

 
 624 bytes in segment CODE
  18 bytes in segment DATA_C
   4 bytes in segment DATA_Z
  12 bytes in segment INITTAB
 
 600 bytes of CODE  memory (+ 36 bytes shared)
  18 bytes of CONST memory
   4 bytes of DATA  memory

Errors: none
Warnings: none
