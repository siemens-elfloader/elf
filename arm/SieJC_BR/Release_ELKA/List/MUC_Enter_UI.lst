##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION    15/Feb/2011  01:38:45 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  C:\arm\SieJC_BR\MUC_Enter_UI.c                       #
#    Command line    =  C:\arm\SieJC_BR\MUC_Enter_UI.c -D NEWSGOLD -D ELKA   #
#                       --preprocess C:\arm\SieJC_BR\Release_ELKA\List\ -lC  #
#                       C:\arm\SieJC_BR\Release_ELKA\List\ -o                #
#                       C:\arm\SieJC_BR\Release_ELKA\Obj\ -s9 --no_unroll    #
#                       --cpu_mode arm --endian little --cpu ARM926EJ-S      #
#                       --stack_align 4 --interwork -e --fpu None            #
#                       --dlib_config "C:\arm2\Embedded Workbench 4.0        #
#                       Evaluation\ARM\LIB\dl5tpainl8n.h" -I                 #
#                       "C:\arm2\Embedded Workbench 4.0                      #
#                       Evaluation\ARM\INC\" --inline_threshold=2            #
#    List file       =  C:\arm\SieJC_BR\Release_ELKA\List\MUC_Enter_UI.lst   #
#    Object file     =  C:\arm\SieJC_BR\Release_ELKA\Obj\MUC_Enter_UI.r79    #
#                                                                            #
#                                                                            #
##############################################################################

C:\arm\SieJC_BR\MUC_Enter_UI.c
      1          #include "../inc/swilib.h"
      2          #include "main.h"
      3          #include "string_util.h"
      4          #include "jabber_util.h"
      5          #include "lang.h"
      6          #include "rect_patcher.h"
      7          

   \                                 In segment DATA_I, align 4, align-sorted
      8          SOFTKEY_DESC m_menu_sk[]=
   \                     m_menu_sk:
   \   00000000                      DS8 24
   \   00000018                      REQUIRE `?<Initializer for m_menu_sk>`
      9          {
     10            {0x0018,0x0000,(int)LG_SELECT},
     11            {0x0001,0x0000,(int)LG_BACK},
     12            {0x003D,0x0000,(int)LGP_DOIT_PIC}
     13          };
     14          

   \                                 In segment DATA_I, align 4, align-sorted
     15          SOFTKEYSTAB m_menu_skt=
   \                     m_menu_skt:
   \   00000000                      DS8 8
   \   00000008                      REQUIRE `?<Initializer for m_menu_skt>`
     16          {
     17            m_menu_sk,0
     18          };
     19          

   \                                 In segment CODE, align 4, keep-with-next
     20          int med1_onkey(GUI *data, GUI_MSG *msg)
     21          {
   \                     med1_onkey:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   40D04DE2           SUB      SP,SP,#+64
   \   00000008   0040A0E1           MOV      R4,R0
     22            // Если зелёная кнопка либо нажата кнопка, которую мы повесили в cmd=7
     23            if(msg->gbsmsg->submess==GREEN_BUTTON || msg->keys==0x18)
   \   0000000C   040091E5           LDR      R0,[R1, #+4]
   \   00000010   080090E5           LDR      R0,[R0, #+8]
   \   00000014   0B0050E3           CMP      R0,#+11
   \   00000018   F200D111           LDRSHNE  R0,[R1, #+2]
   \   0000001C   18005013           CMPNE    R0,#+24
   \   00000020   8B00001A           BNE      ??med1_onkey_0
     24            {
     25              EDITCONTROL ec;
     26              int utf8_len = NULL;
   \   00000024   0010A0E3           MOV      R1,#+0
   \   00000028   00108DE5           STR      R1,[SP, #+0]
     27              char * conf_name = NULL;
   \   0000002C   0160A0E1           MOV      R6,R1
     28              char * user_name = NULL;
   \   00000030   0170A0E1           MOV      R7,R1
     29              char * pass_name = NULL;
     30              // Конференция
     31              ExtractEditControl(data, 2, &ec);
   \   00000034   08208DE2           ADD      R2,SP,#+8
   \   00000038   0210A0E3           MOV      R1,#+2
   \   0000003C   0400A0E1           MOV      R0,R4
   \   00000040   690100EF           SWI      +361
     32              if(ec.pWS->wsbody[0])
   \   00000044   30009DE5           LDR      R0,[SP, #+48]
   \   00000048   0050A0E3           MOV      R5,#+0
   \   0000004C   000090E5           LDR      R0,[R0, #+0]
   \   00000050   0580A0E1           MOV      R8,R5
   \   00000054   B010D0E1           LDRH     R1,[R0, #+0]
   \   00000058   000051E3           CMP      R1,#+0
   \   0000005C   1D00000A           BEQ      ??med1_onkey_1
     33              {
     34                
     35                conf_name = malloc(ec.pWS->wsbody[0] * 2 + 1);
   \   00000060   0100A0E1           MOV      R0,R1
   \   00000064   0110A0E3           MOV      R1,#+1
   \   00000068   800081E0           ADD      R0,R1,R0, LSL #+1
   \   0000006C   140000EF           SWI      +20
   \   00000070   0060A0E1           MOV      R6,R0
     36                ws_2utf8(ec.pWS, conf_name, &utf8_len, ec.pWS->wsbody[0] * 2 + 1);
   \   00000074   30009DE5           LDR      R0,[SP, #+48]
   \   00000078   0120A0E3           MOV      R2,#+1
   \   0000007C   001090E5           LDR      R1,[R0, #+0]
   \   00000080   B010D1E1           LDRH     R1,[R1, #+0]
   \   00000084   813082E0           ADD      R3,R2,R1, LSL #+1
   \   00000088   0D20A0E1           MOV      R2,SP
   \   0000008C   0610A0E1           MOV      R1,R6
   \   00000090   E20100EF           SWI      +482
     37                conf_name = realloc(conf_name, utf8_len + 1);
   \   00000094   00009DE5           LDR      R0,[SP, #+0]
   \   00000098   011080E2           ADD      R1,R0,#+1
   \   0000009C   0600A0E1           MOV      R0,R6
   \   000000A0   BA0000EF           SWI      +186
   \   000000A4   0060A0E1           MOV      R6,R0
     38                conf_name[utf8_len]='\0';
   \   000000A8   00009DE5           LDR      R0,[SP, #+0]
   \   000000AC   0650C0E7           STRB     R5,[R0, +R6]
     39                if(conf_name[0]=='@')
   \   000000B0   0000D6E5           LDRB     R0,[R6, #+0]
   \   000000B4   400050E3           CMP      R0,#+64
   \   000000B8   0600001A           BNE      ??med1_onkey_1
     40                {
     41                  mfree(conf_name);
   \   000000BC   0600A0E1           MOV      R0,R6
   \   000000C0   150000EF           SWI      +21
     42                  MsgBoxError(1,(int)LG_NONAMECONF);
   \   000000C4   9C119FE5           LDR      R1,??med1_onkey_2  ;; `?<Constant "\\310\\354\\377 \\352\\356\\355\\364\\373 `
   \   000000C8   0100A0E3           MOV      R0,#+1
   \   000000CC   4E0000EF           SWI      +78
     43                  return 0;
   \   000000D0   0000A0E3           MOV      R0,#+0
   \   000000D4   5C0000EA           B        ??med1_onkey_3
     44                }
     45              }
     46              // Ник
     47              ExtractEditControl(data, 4, &ec);    
   \                     ??med1_onkey_1:
   \   000000D8   08208DE2           ADD      R2,SP,#+8
   \   000000DC   0410A0E3           MOV      R1,#+4
   \   000000E0   0400A0E1           MOV      R0,R4
   \   000000E4   690100EF           SWI      +361
     48              if(ec.pWS->wsbody[0])
   \   000000E8   30009DE5           LDR      R0,[SP, #+48]
   \   000000EC   000090E5           LDR      R0,[R0, #+0]
   \   000000F0   B010D0E1           LDRH     R1,[R0, #+0]
   \   000000F4   000051E3           CMP      R1,#+0
   \   000000F8   1300000A           BEQ      ??med1_onkey_4
     49              {
     50                user_name = malloc(ec.pWS->wsbody[0] * 2 + 1);
   \   000000FC   0100A0E1           MOV      R0,R1
   \   00000100   0110A0E3           MOV      R1,#+1
   \   00000104   800081E0           ADD      R0,R1,R0, LSL #+1
   \   00000108   140000EF           SWI      +20
   \   0000010C   0070A0E1           MOV      R7,R0
     51                ws_2utf8(ec.pWS, user_name, &utf8_len, ec.pWS->wsbody[0] * 2 + 1);
   \   00000110   30009DE5           LDR      R0,[SP, #+48]
   \   00000114   0120A0E3           MOV      R2,#+1
   \   00000118   001090E5           LDR      R1,[R0, #+0]
   \   0000011C   B010D1E1           LDRH     R1,[R1, #+0]
   \   00000120   813082E0           ADD      R3,R2,R1, LSL #+1
   \   00000124   0D20A0E1           MOV      R2,SP
   \   00000128   0710A0E1           MOV      R1,R7
   \   0000012C   E20100EF           SWI      +482
     52                user_name = realloc(user_name, utf8_len + 1);
   \   00000130   00009DE5           LDR      R0,[SP, #+0]
   \   00000134   011080E2           ADD      R1,R0,#+1
   \   00000138   0700A0E1           MOV      R0,R7
   \   0000013C   BA0000EF           SWI      +186
   \   00000140   0070A0E1           MOV      R7,R0
     53                user_name[utf8_len]='\0';
   \   00000144   00009DE5           LDR      R0,[SP, #+0]
   \   00000148   0750C0E7           STRB     R5,[R0, +R7]
     54              }
     55              // Пароль
     56              ExtractEditControl(data, 6, &ec);    
   \                     ??med1_onkey_4:
   \   0000014C   08208DE2           ADD      R2,SP,#+8
   \   00000150   0610A0E3           MOV      R1,#+6
   \   00000154   0400A0E1           MOV      R0,R4
   \   00000158   690100EF           SWI      +361
     57              if(ec.pWS->wsbody[0])
   \   0000015C   30009DE5           LDR      R0,[SP, #+48]
   \   00000160   000090E5           LDR      R0,[R0, #+0]
   \   00000164   B010D0E1           LDRH     R1,[R0, #+0]
   \   00000168   000051E3           CMP      R1,#+0
   \   0000016C   1300000A           BEQ      ??med1_onkey_5
     58              {
     59                pass_name = malloc(ec.pWS->wsbody[0] * 2 + 1);
   \   00000170   0100A0E1           MOV      R0,R1
   \   00000174   0110A0E3           MOV      R1,#+1
   \   00000178   800081E0           ADD      R0,R1,R0, LSL #+1
   \   0000017C   140000EF           SWI      +20
   \   00000180   0080A0E1           MOV      R8,R0
     60                ws_2utf8(ec.pWS, pass_name, &utf8_len, ec.pWS->wsbody[0] * 2 + 1);
   \   00000184   30009DE5           LDR      R0,[SP, #+48]
   \   00000188   0120A0E3           MOV      R2,#+1
   \   0000018C   001090E5           LDR      R1,[R0, #+0]
   \   00000190   B010D1E1           LDRH     R1,[R1, #+0]
   \   00000194   813082E0           ADD      R3,R2,R1, LSL #+1
   \   00000198   0D20A0E1           MOV      R2,SP
   \   0000019C   0810A0E1           MOV      R1,R8
   \   000001A0   E20100EF           SWI      +482
     61                pass_name = realloc(pass_name, utf8_len + 1);
   \   000001A4   00009DE5           LDR      R0,[SP, #+0]
   \   000001A8   011080E2           ADD      R1,R0,#+1
   \   000001AC   0800A0E1           MOV      R0,R8
   \   000001B0   BA0000EF           SWI      +186
   \   000001B4   0080A0E1           MOV      R8,R0
     62                pass_name[utf8_len]='\0';
   \   000001B8   00009DE5           LDR      R0,[SP, #+0]
   \   000001BC   0850C0E7           STRB     R5,[R0, +R8]
     63              }
     64              // Число сообщений
     65              ExtractEditControl(data, 8, &ec);
   \                     ??med1_onkey_5:
   \   000001C0   08208DE2           ADD      R2,SP,#+8
   \   000001C4   0810A0E3           MOV      R1,#+8
   \   000001C8   0400A0E1           MOV      R0,R4
   \   000001CC   690100EF           SWI      +361
     66              char ss[10];
     67              extern const char percent_d[];
     68              ws_2str(ec.pWS, ss, 15);
   \   000001D0   30009DE5           LDR      R0,[SP, #+48]
   \   000001D4   0F20A0E3           MOV      R2,#+15
   \   000001D8   34108DE2           ADD      R1,SP,#+52
   \   000001DC   A30000EF           SWI      +163
     69              int n_messages=0;
   \   000001E0   0010A0E3           MOV      R1,#+0
   \   000001E4   04108DE5           STR      R1,[SP, #+4]
     70              sscanf(ss,percent_d, &n_messages);
   \   000001E8   7C109FE5           LDR      R1,??med1_onkey_2+0x4  ;; percent_d
   \   000001EC   04208DE2           ADD      R2,SP,#+4
   \   000001F0   34008DE2           ADD      R0,SP,#+52
   \   000001F4   F50100EF           SWI      +501
     71              
     72              if(user_name && conf_name) Enter_Conference(conf_name, user_name, pass_name, n_messages);
   \   000001F8   000057E3           CMP      R7,#+0
   \   000001FC   0900000A           BEQ      ??med1_onkey_6
   \   00000200   000056E3           CMP      R6,#+0
   \   00000204   0500000A           BEQ      ??med1_onkey_7
   \   00000208   04309DE5           LDR      R3,[SP, #+4]
   \   0000020C   0820A0E1           MOV      R2,R8
   \   00000210   FF3003E2           AND      R3,R3,#0xFF
   \   00000214   0710A0E1           MOV      R1,R7
   \   00000218   0600A0E1           MOV      R0,R6
   \   0000021C   ........           _BLF     Enter_Conference,??Enter_Conference??rA
     73              if(user_name) mfree(user_name);
   \                     ??med1_onkey_7:
   \   00000220   0700A0E1           MOV      R0,R7
   \   00000224   150000EF           SWI      +21
     74              if(pass_name) mfree(pass_name);
   \                     ??med1_onkey_6:
   \   00000228   000058E3           CMP      R8,#+0
   \   0000022C   0100000A           BEQ      ??med1_onkey_8
   \   00000230   0800A0E1           MOV      R0,R8
   \   00000234   150000EF           SWI      +21
     75              if(conf_name) mfree(conf_name);
   \                     ??med1_onkey_8:
   \   00000238   000056E3           CMP      R6,#+0
   \   0000023C   0100000A           BEQ      ??med1_onkey_9
   \   00000240   0600A0E1           MOV      R0,R6
   \   00000244   150000EF           SWI      +21
     76              return 1;
   \                     ??med1_onkey_9:
   \   00000248   0100A0E3           MOV      R0,#+1
   \                     ??med1_onkey_3:
   \   0000024C   40D08DE2           ADD      SP,SP,#+64
   \   00000250   F081BDE8           POP      {R4-R8,PC}
     77            }
     78            if (msg->keys==0x0FF0) //Левый софт СГОЛД
   \                     ??med1_onkey_0:
   \   00000254   FF0E50E3           CMP      R0,#+4080
   \   00000258   FAFFFF0A           BEQ      ??med1_onkey_9
     79            {
     80              return(1);
     81            }  
     82            return 0;
   \   0000025C   0000A0E3           MOV      R0,#+0
   \   00000260   40D08DE2           ADD      SP,SP,#+64
   \   00000264   F081BDE8           POP      {R4-R8,PC}       ;; return
   \                     ??med1_onkey_2:
   \   00000268   ........           DC32     `?<Constant "\\310\\354\\377 \\352\\356\\355\\364\\373 `
   \   0000026C   ........           DC32     percent_d
     83          }
     84          

   \                                 In segment CODE, align 4, keep-with-next
     85          void med1_ghook(GUI *data, int cmd)
     86          {
   \                     med1_ghook:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   2CD04DE2           SUB      SP,SP,#+44
     87            EDITCONTROL ec;
     88            static SOFTKEY_DESC mmmmsk={0x0018, 0x0000,(int)LG_ENTER};
     89           
     90            if (cmd == TI_CMD_REDRAW)
   \   00000008   070051E3           CMP      R1,#+7
   \   0000000C   0040A0E1           MOV      R4,R0
   \   00000010   0800001A           BNE      ??med1_ghook_0
     91            {
     92              //OnRun
     93              ExtractEditControl(data,2,&ec);   
   \   00000014   0D20A0E1           MOV      R2,SP
   \   00000018   0210A0E3           MOV      R1,#+2
   \   0000001C   690100EF           SWI      +361
     94          #ifndef NEWSGOLD
     95            static const SOFTKEY_DESC sk_cancel={0x0FF0,0x0000,(int)LG_CLOSE};
     96          #endif
     97          #ifdef NEWSGOLD    
     98              SetSoftKey(data,&mmmmsk,0);
   \   00000020   24109FE5           LDR      R1,??med1_ghook_1  ;; ??mmmmsk
   \   00000024   0020A0E3           MOV      R2,#+0
   \   00000028   0400A0E1           MOV      R0,R4
   \   0000002C   680100EF           SWI      +360
   \   00000030   2CD08DE2           ADD      SP,SP,#+44
   \   00000034   1080BDE8           POP      {R4,PC}
     99          #else
    100              SetSoftKey(data,&mmmmsk,1);
    101              if (ec.pWS->wsbody[0]==0)
    102                SetSoftKey(data,&sk_cancel,SET_SOFT_KEY_N==0?1:0);    
    103          #endif   
    104            }
    105            
    106            if(cmd == TI_CMD_FOCUS)   // Фокусирование
   \                     ??med1_ghook_0:
   \   00000038   0A0051E3           CMP      R1,#+10
   \   0000003C   0000001A           BNE      ??med1_ghook_2
    107            {
    108               DisableIDLETMR();   // Отключаем таймер выхода по таймауту
   \   00000040   7F0100EF           SWI      +383
    109            }
    110          }
   \                     ??med1_ghook_2:
   \   00000044   2CD08DE2           ADD      SP,SP,#+44       ;; stack cleaning
   \   00000048   1080BDE8           POP      {R4,PC}          ;; return
   \                     ??med1_ghook_1:
   \   0000004C   ........           DC32     ??mmmmsk

   \                                 In segment DATA_I, align 4, align-sorted
   \                     ??mmmmsk:
   \   00000000                      DS8 8
   \   00000008                      REQUIRE `?<Initializer for mmmmsk>`
    111          
    112          
    113          HEADER_DESC med1_hdr={0,0,131,21,NULL,(int)LG_ENTERMUC,LGP_NULL};
    114          

   \                                 In segment CODE, align 4, keep-with-next
    115          void med1_locret(void){}
   \                     med1_locret:
   \   00000000   1EFF2FE1           BX       LR               ;; return

   \                                 In segment DATA_I, align 4, align-sorted
    116          
    117          INPUTDIA_DESC med1_desc=
   \                     med1_desc:
   \   00000000                      DS8 56
   \   00000038                      REQUIRE `?<Initializer for med1_desc>`
   \                     med1_hdr:
   \   00000038                      DS8 20
   \   0000004C                      REQUIRE `?<Initializer for med1_hdr>`
    118          {
    119            1,
    120            med1_onkey,
    121            med1_ghook,
    122            (void *)med1_locret,
    123            0,
    124            &m_menu_skt,
    125            {0,22,131,153},
    126            4,
    127            100,
    128            101,
    129            0,
    130            0,
    131            0x40000000
    132          };
    133          

   \                                 In segment CODE, align 4, keep-with-next
    134          void Disp_MUC_Enter_Dialog(char* muc, char* nick, char* pass)
    135          {
   \                     Disp_MUC_Enter_Dialog:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
    136            extern const char USERNAME[32];
    137            extern const char DEFAULT_MUC[64];
    138            extern const char DEFAULT_MUC_NICK[64];
    139            extern const unsigned int DEFAULT_MUC_MSGCOUNT;
    140            
    141            EDITCONTROL ec;
    142            void * ma = malloc_adr();
    143            void * eq = AllocEQueue(ma,mfree_adr());
    144            WSHDR * ws = AllocWS(256);
    145            
    146            PrepareEditControl(&ec);
    147            
    148            ascii2ws(ws, LG_NAMEMUC);
   \   00000004   04839FE5           LDR      R8,??Disp_MUC_Enter_Dialog_0+0x8  ;; `?<Constant "\\310\\354\\377 \\352\\356\\355\\364\\345\\`
   \   00000008   2CD04DE2           SUB      SP,SP,#+44
   \   0000000C   0090A0E1           MOV      R9,R0
   \   00000010   01A0A0E1           MOV      R10,R1
   \   00000014   0250A0E1           MOV      R5,R2
   \   00000018   148000EF           SWI      +32788
   \   0000001C   0060A0E1           MOV      R6,R0
   \   00000020   158000EF           SWI      +32789
   \   00000024   0010A0E1           MOV      R1,R0
   \   00000028   0600A0E1           MOV      R0,R6
   \   0000002C   630100EF           SWI      +355
   \   00000030   0040A0E1           MOV      R4,R0
   \   00000034   400FA0E3           MOV      R0,#+256
   \   00000038   250100EF           SWI      +293
   \   0000003C   0070A0E1           MOV      R7,R0
   \   00000040   0D00A0E1           MOV      R0,SP
   \   00000044   640100EF           SWI      +356
   \   00000048   0810A0E1           MOV      R1,R8
   \   0000004C   0700A0E1           MOV      R0,R7
   \   00000050   ........           _BLF     ascii2ws,??ascii2ws??rA
    149            ConstructEditControl(&ec, ECT_HEADER, ECF_APPEND_EOL, ws, ws->wsbody[0]);
   \   00000054   000097E5           LDR      R0,[R7, #+0]
   \   00000058   0730A0E1           MOV      R3,R7
   \   0000005C   B000D0E1           LDRH     R0,[R0, #+0]
   \   00000060   4020A0E3           MOV      R2,#+64
   \   00000064   0110A0E3           MOV      R1,#+1
   \   00000068   01002DE9           PUSH     {R0}
   \   0000006C   04008DE2           ADD      R0,SP,#+4
   \   00000070   650100EF           SWI      +357
    150            AddEditControlToEditQend(eq,&ec,ma);
   \   00000074   0620A0E1           MOV      R2,R6
   \   00000078   04108DE2           ADD      R1,SP,#+4
   \   0000007C   0400A0E1           MOV      R0,R4
   \   00000080   660100EF           SWI      +358
    151           
    152            if (muc) utf8_2ws(ws, muc, 128);
   \   00000084   000059E3           CMP      R9,#+0
    153              else utf8_2ws(ws, (char*)DEFAULT_MUC, 128);
   \   00000088   84129F05           LDREQ    R1,??Disp_MUC_Enter_Dialog_0+0xC  ;; DEFAULT_MUC
   \   0000008C   04D08DE2           ADD      SP,SP,#+4
   \   00000090   8020A0E3           MOV      R2,#+128
   \   00000094   0910A011           MOVNE    R1,R9
   \   00000098   0700A0E1           MOV      R0,R7
   \   0000009C   E30100EF           SWI      +483
    154            ConstructEditControl(&ec, ECT_NORMAL_TEXT, ECF_APPEND_EOL, ws, 128);      //2
   \   000000A0   8000A0E3           MOV      R0,#+128
   \   000000A4   01002DE9           PUSH     {R0}
   \   000000A8   0730A0E1           MOV      R3,R7
   \   000000AC   4020A0E3           MOV      R2,#+64
   \   000000B0   0310A0E3           MOV      R1,#+3
   \   000000B4   04008DE2           ADD      R0,SP,#+4
   \   000000B8   650100EF           SWI      +357
    155            AddEditControlToEditQend(eq,&ec,ma);  
   \   000000BC   0620A0E1           MOV      R2,R6
   \   000000C0   04108DE2           ADD      R1,SP,#+4
   \   000000C4   0400A0E1           MOV      R0,R4
   \   000000C8   660100EF           SWI      +358
    156          
    157            ascii2ws(ws, LG_NICK);
   \   000000CC   141088E2           ADD      R1,R8,#+20
   \   000000D0   0700A0E1           MOV      R0,R7
   \   000000D4   ........           _BLF     ascii2ws,??ascii2ws??rA
    158            ConstructEditControl(&ec, ECT_HEADER, ECF_APPEND_EOL, ws, ws->wsbody[0]);
   \   000000D8   000097E5           LDR      R0,[R7, #+0]
   \   000000DC   0730A0E1           MOV      R3,R7
   \   000000E0   B000D0E1           LDRH     R0,[R0, #+0]
   \   000000E4   4020A0E3           MOV      R2,#+64
   \   000000E8   0110A0E3           MOV      R1,#+1
   \   000000EC   01002DE9           PUSH     {R0}
   \   000000F0   08008DE2           ADD      R0,SP,#+8
   \   000000F4   650100EF           SWI      +357
    159            AddEditControlToEditQend(eq,&ec,ma);  
   \   000000F8   0620A0E1           MOV      R2,R6
   \   000000FC   08108DE2           ADD      R1,SP,#+8
   \   00000100   0400A0E1           MOV      R0,R4
   \   00000104   660100EF           SWI      +358
    160            if(nick) utf8_2ws(ws, nick, 80);
   \   00000108   00005AE3           CMP      R10,#+0
   \   0000010C   08D08DE2           ADD      SP,SP,#+8
   \   00000110   5020A013           MOVNE    R2,#+80
   \   00000114   0A10A011           MOVNE    R1,R10
   \   00000118   0600001A           BNE      ??Disp_MUC_Enter_Dialog_1
    161            else
    162            {
    163             if(strlen(DEFAULT_MUC_NICK)) utf8_2ws(ws, (char*)DEFAULT_MUC_NICK, 80);
   \   0000011C   F4919FE5           LDR      R9,??Disp_MUC_Enter_Dialog_0+0x10  ;; DEFAULT_MUC_NICK
   \   00000120   0900A0E1           MOV      R0,R9
   \   00000124   1B0000EF           SWI      +27
   \   00000128   000050E3           CMP      R0,#+0
    164             else utf8_2ws(ws, (char*)USERNAME, 80);
   \   0000012C   E8119F05           LDREQ    R1,??Disp_MUC_Enter_Dialog_0+0x14  ;; USERNAME
   \   00000130   5020A0E3           MOV      R2,#+80
   \   00000134   0910A011           MOVNE    R1,R9
   \                     ??Disp_MUC_Enter_Dialog_1:
   \   00000138   0700A0E1           MOV      R0,R7
   \   0000013C   E30100EF           SWI      +483
    165            }
    166            ConstructEditControl(&ec, ECT_NORMAL_TEXT, ECF_APPEND_EOL, ws, 80);     // 4
   \   00000140   5000A0E3           MOV      R0,#+80
   \   00000144   01002DE9           PUSH     {R0}
   \   00000148   0730A0E1           MOV      R3,R7
   \   0000014C   4020A0E3           MOV      R2,#+64
   \   00000150   0310A0E3           MOV      R1,#+3
   \   00000154   04008DE2           ADD      R0,SP,#+4
   \   00000158   650100EF           SWI      +357
    167            AddEditControlToEditQend(eq,&ec,ma);  
   \   0000015C   0620A0E1           MOV      R2,R6
   \   00000160   04108DE2           ADD      R1,SP,#+4
   \   00000164   0400A0E1           MOV      R0,R4
   \   00000168   660100EF           SWI      +358
    168          
    169            ascii2ws(ws, LG_PASSWORD);
   \   0000016C   1C1088E2           ADD      R1,R8,#+28
   \   00000170   0700A0E1           MOV      R0,R7
   \   00000174   ........           _BLF     ascii2ws,??ascii2ws??rA
    170            ConstructEditControl(&ec, ECT_HEADER,ECF_APPEND_EOL, ws, ws->wsbody[0]);
   \   00000178   000097E5           LDR      R0,[R7, #+0]
   \   0000017C   0730A0E1           MOV      R3,R7
   \   00000180   B000D0E1           LDRH     R0,[R0, #+0]
   \   00000184   4020A0E3           MOV      R2,#+64
   \   00000188   0110A0E3           MOV      R1,#+1
   \   0000018C   01002DE9           PUSH     {R0}
   \   00000190   08008DE2           ADD      R0,SP,#+8
   \   00000194   650100EF           SWI      +357
    171            AddEditControlToEditQend(eq,&ec,ma);  
   \   00000198   0620A0E1           MOV      R2,R6
   \   0000019C   08108DE2           ADD      R1,SP,#+8
   \   000001A0   0400A0E1           MOV      R0,R4
   \   000001A4   660100EF           SWI      +358
    172            if(pass) utf8_2ws(ws, pass, 80);
   \   000001A8   000055E3           CMP      R5,#+0
   \   000001AC   08D08DE2           ADD      SP,SP,#+8
   \   000001B0   0400000A           BEQ      ??Disp_MUC_Enter_Dialog_2
   \   000001B4   5020A0E3           MOV      R2,#+80
   \   000001B8   0510A0E1           MOV      R1,R5
   \   000001BC   0700A0E1           MOV      R0,R7
   \   000001C0   E30100EF           SWI      +483
   \   000001C4   020000EA           B        ??Disp_MUC_Enter_Dialog_3
    173              else ascii2ws(ws, "");
   \                     ??Disp_MUC_Enter_Dialog_2:
   \   000001C8   4E1F8FE2           ADR      R1,??Disp_MUC_Enter_Dialog_0  ;; ""
   \   000001CC   0700A0E1           MOV      R0,R7
   \   000001D0   ........           _BLF     ascii2ws,??ascii2ws??rA
    174            ConstructEditControl(&ec, ECT_NORMAL_TEXT, ECF_APPEND_EOL, ws, 80);     // 6
    175            AddEditControlToEditQend(eq,&ec,ma);  
    176          
    177            ascii2ws(ws, LG_GETMESSAGECOUNT);
    178            ConstructEditControl(&ec, ECT_HEADER, ECF_APPEND_EOL, ws, ws->wsbody[0]);      
    179            AddEditControlToEditQend(eq,&ec,ma);  
    180          
    181            wsprintf(ws, "%d", DEFAULT_MUC_MSGCOUNT);
    182            ConstructEditControl(&ec,5,ECF_APPEND_EOL, ws, 2);    //8
    183            AddEditControlToEditQend(eq,&ec,ma);  
    184            
    185            FreeWS(ws);
    186            patch_input(&med1_desc);
   \                     ??Disp_MUC_Enter_Dialog_3:
   \   000001D4   44519FE5           LDR      R5,??Disp_MUC_Enter_Dialog_0+0x18  ;; med1_desc
   \   000001D8   5000A0E3           MOV      R0,#+80
   \   000001DC   01002DE9           PUSH     {R0}
   \   000001E0   0730A0E1           MOV      R3,R7
   \   000001E4   4020A0E3           MOV      R2,#+64
   \   000001E8   0310A0E3           MOV      R1,#+3
   \   000001EC   04008DE2           ADD      R0,SP,#+4
   \   000001F0   650100EF           SWI      +357
   \   000001F4   0620A0E1           MOV      R2,R6
   \   000001F8   04108DE2           ADD      R1,SP,#+4
   \   000001FC   0400A0E1           MOV      R0,R4
   \   00000200   660100EF           SWI      +358
   \   00000204   241088E2           ADD      R1,R8,#+36
   \   00000208   0700A0E1           MOV      R0,R7
   \   0000020C   ........           _BLF     ascii2ws,??ascii2ws??rA
   \   00000210   000097E5           LDR      R0,[R7, #+0]
   \   00000214   0730A0E1           MOV      R3,R7
   \   00000218   B000D0E1           LDRH     R0,[R0, #+0]
   \   0000021C   4020A0E3           MOV      R2,#+64
   \   00000220   0110A0E3           MOV      R1,#+1
   \   00000224   01002DE9           PUSH     {R0}
   \   00000228   08008DE2           ADD      R0,SP,#+8
   \   0000022C   650100EF           SWI      +357
   \   00000230   0620A0E1           MOV      R2,R6
   \   00000234   08108DE2           ADD      R1,SP,#+8
   \   00000238   0400A0E1           MOV      R0,R4
   \   0000023C   660100EF           SWI      +358
   \   00000240   DC009FE5           LDR      R0,??Disp_MUC_Enter_Dialog_0+0x1C  ;; DEFAULT_MUC_MSGCOUNT
   \   00000244   301F8FE2           ADR      R1,??Disp_MUC_Enter_Dialog_0+0x4  ;; "%d"
   \   00000248   002090E5           LDR      R2,[R0, #+0]
   \   0000024C   0700A0E1           MOV      R0,R7
   \   00000250   240100EF           SWI      +292
   \   00000254   0200A0E3           MOV      R0,#+2
   \   00000258   01002DE9           PUSH     {R0}
   \   0000025C   0730A0E1           MOV      R3,R7
   \   00000260   4020A0E3           MOV      R2,#+64
   \   00000264   0510A0E3           MOV      R1,#+5
   \   00000268   0C008DE2           ADD      R0,SP,#+12
   \   0000026C   650100EF           SWI      +357
   \   00000270   0620A0E1           MOV      R2,R6
   \   00000274   0C108DE2           ADD      R1,SP,#+12
   \   00000278   0400A0E1           MOV      R0,R4
   \   0000027C   660100EF           SWI      +358
   \   00000280   0700A0E1           MOV      R0,R7
   \   00000284   290100EF           SWI      +297
   \   00000288   0060A0E3           MOV      R6,#+0
   \   0000028C   B861C5E1           STRH     R6,[R5, #+24]
   \   00000290   8A8100EF           SWI      +33162
   \   00000294   190080E2           ADD      R0,R0,#+25
   \   00000298   BA01C5E1           STRH     R0,[R5, #+26]
   \   0000029C   888100EF           SWI      +33160
   \   000002A0   010040E2           SUB      R0,R0,#+1
   \   000002A4   BC01C5E1           STRH     R0,[R5, #+28]
   \   000002A8   898100EF           SWI      +33161
   \   000002AC   0070A0E1           MOV      R7,R0
   \   000002B0   8B8100EF           SWI      +33163
   \   000002B4   000047E0           SUB      R0,R7,R0
   \   000002B8   010040E2           SUB      R0,R0,#+1
   \   000002BC   BE01C5E1           STRH     R0,[R5, #+30]
    187            patch_header(&med1_hdr);
   \   000002C0   B863C5E1           STRH     R6,[R5, #+56]
   \   000002C4   1800A0E3           MOV      R0,#+24
   \   000002C8   BA03C5E1           STRH     R0,[R5, #+58]
   \   000002CC   888100EF           SWI      +33160
   \   000002D0   010040E2           SUB      R0,R0,#+1
   \   000002D4   BC03C5E1           STRH     R0,[R5, #+60]
   \   000002D8   8A8100EF           SWI      +33162
   \   000002DC   180080E2           ADD      R0,R0,#+24
   \   000002E0   BE03C5E1           STRH     R0,[R5, #+62]
    188            CreateInputTextDialog(&med1_desc, &med1_hdr,eq, 1, 0);
   \   000002E4   0000A0E3           MOV      R0,#+0
   \   000002E8   01002DE9           PUSH     {R0}
   \   000002EC   0130A0E3           MOV      R3,#+1
   \   000002F0   0420A0E1           MOV      R2,R4
   \   000002F4   381085E2           ADD      R1,R5,#+56
   \   000002F8   0500A0E1           MOV      R0,R5
   \   000002FC   670100EF           SWI      +359
    189          }
   \   00000300   3CD08DE2           ADD      SP,SP,#+60
   \   00000304   F087BDE8           POP      {R4-R10,PC}      ;; return
   \                     ??Disp_MUC_Enter_Dialog_0:
   \   00000308   00000000           DC8      "",+0,+0,+0
   \   0000030C   25640000           DC8      "%d",+0
   \   00000310   ........           DC32     `?<Constant "\\310\\354\\377 \\352\\356\\355\\364\\345\\`
   \   00000314   ........           DC32     DEFAULT_MUC
   \   00000318   ........           DC32     DEFAULT_MUC_NICK
   \   0000031C   ........           DC32     USERNAME
   \   00000320   ........           DC32     med1_desc
   \   00000324   ........           DC32     DEFAULT_MUC_MSGCOUNT

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for m_menu_sk>`:
   \   00000000   18000000           DC16 24, 0
   \   00000004   ........           DC32 `?<Constant "\\302\\373\\341\\356\\360">`
   \   00000008   01000000           DC16 1, 0
   \   0000000C   ........           DC32 `?<Constant "\\315\\340\\347\\340\\344">`
   \   00000010   3D000000           DC16 61, 0
   \   00000014   FBC0FF7F           DC32 2147467515

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for m_menu_skt>`:
   \   00000000   ........0000       DC32 m_menu_sk, 0
   \              0000        

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for mmmmsk>`:
   \   00000000   18000000           DC16 24, 0
   \   00000004   ........           DC32 `?<Constant "\\302\\356\\351\\362\\350">`

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for med1_desc>`:
   \   00000000   01000000....       DC32 1, med1_onkey, med1_ghook, med1_locret, 0, m_menu_skt
   \              ............
   \              ........0000
   \              0000........
   \   00000018   000016008300       DC16 0, 22, 131, 153
   \              9900        
   \   00000020   040000006400       DC32 4, 100, 101, 0, 0, 1073741824
   \              000065000000
   \              000000000000
   \              000000000040
   \                     `?<Initializer for med1_hdr>`:
   \   00000038   000000008300       DC16 0, 0, 131, 21
   \              1500        
   \   00000040   00000000....       DC32 0H, `?<Constant "\\302\\365\\356\\344 \\342 MUC">`, 2147483647
   \              ....FFFFFF7F

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\302\\373\\341\\356\\360">`:
   \   00000000   C2FBE1EEF000       DC8 "\302\373\341\356\360"
   \   00000006   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\315\\340\\347\\340\\344">`:
   \   00000000   CDE0E7E0E400       DC8 "\315\340\347\340\344"
   \   00000006   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\302\\365\\356\\344 \\342 MUC">`:
   \   00000000   C2F5EEE420E2       DC8 "\302\365\356\344 \342 MUC"
   \              204D554300  
   \   0000000B   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\310\\354\\377 \\352\\356\\355\\364\\373 `:
   \   00000000   C8ECFF20EAEE       DC8 "\310\354\377 \352\356\355\364\373 \355\345 \347\340\357\356\353\355\345\355\356!"
   \              EDF4FB20EDE5
   \              20E7E0EFEEEB
   \              EDE5EDEE2100

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\302\\356\\351\\362\\350">`:
   \   00000000   C2EEE9F2E800       DC8 "\302\356\351\362\350"
   \   00000006   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\310\\354\\377 \\352\\356\\355\\364\\345\\`:
   \   00000000   C8ECFF20EAEE       DC8 "\310\354\377 \352\356\355\364\345\360\345\355\366\350\350:"
   \              EDF4E5F0E5ED
   \              F6E8E83A00  
   \   00000011   000000             DC8 0, 0, 0
   \   00000014   CDE8EA3A00         DC8 "\315\350\352:"
   \   00000019   000000             DC8 0, 0, 0
   \   0000001C   CFE0F0EEEBFC       DC8 "\317\340\360\356\353\374"
   \              00          
   \   00000023   00                 DC8 0
   \   00000024   CFEEEBF3F7E8       DC8 "\317\356\353\363\367\350\362\374 \361\356\356\341\371\345\355\350\351:"
   \              F2FC20F1EEEE
   \              E1F9E5EDE8E9
   \              3A00        

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   00                 DC8 ""

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   256400             DC8 "%d"
    190          
    191          //EOL,EOF

   Maximum stack usage in bytes:

     Function              CSTACK
     --------              ------
     Disp_MUC_Enter_Dialog    92
     med1_ghook               52
     med1_locret               0
     med1_onkey               88


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     m_menu_sk                        24
     m_menu_skt                        8
     med1_onkey                      624
     med1_ghook                       80
     mmmmsk                            8
     med1_locret                       4
     med1_desc                        76
     Disp_MUC_Enter_Dialog           808
     ?<Initializer for m_menu_sk>     24
     ?<Initializer for m_menu_skt>     8
     ?<Initializer for mmmmsk>         8
     ?<Initializer for med1_desc>     76
     ?<Constant "\302\373\341\356\360">
                                       8
     ?<Constant "\315\340\347\340\344">
                                       8
     ?<Constant "\302\365\356\344 \342 MUC">
                                      12
     ?<Constant "\310\354\377 \352\356\355\364\373
                                      24
     ?<Constant "\302\356\351\362\350">
                                       8
     ?<Constant "\310\354\377 \352\356\355\364\345\
                                      56
     ?<Constant "">                    1
     ?<Constant "%d">                  3
      Others                          52

 
 1 556 bytes in segment CODE
   120 bytes in segment DATA_C
   116 bytes in segment DATA_I
   116 bytes in segment DATA_ID
    12 bytes in segment INITTAB
 
 1 516 bytes of CODE  memory (+ 52 bytes shared)
   236 bytes of CONST memory
   116 bytes of DATA  memory

Errors: none
Warnings: none
