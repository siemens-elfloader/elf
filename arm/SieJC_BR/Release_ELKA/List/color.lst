##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION    15/Feb/2011  01:38:48 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  C:\arm\SieJC_BR\color.c                              #
#    Command line    =  C:\arm\SieJC_BR\color.c -D NEWSGOLD -D ELKA          #
#                       --preprocess C:\arm\SieJC_BR\Release_ELKA\List\ -lC  #
#                       C:\arm\SieJC_BR\Release_ELKA\List\ -o                #
#                       C:\arm\SieJC_BR\Release_ELKA\Obj\ -s9 --no_unroll    #
#                       --cpu_mode arm --endian little --cpu ARM926EJ-S      #
#                       --stack_align 4 --interwork -e --fpu None            #
#                       --dlib_config "C:\arm2\Embedded Workbench 4.0        #
#                       Evaluation\ARM\LIB\dl5tpainl8n.h" -I                 #
#                       "C:\arm2\Embedded Workbench 4.0                      #
#                       Evaluation\ARM\INC\" --inline_threshold=2            #
#    List file       =  C:\arm\SieJC_BR\Release_ELKA\List\color.lst          #
#    Object file     =  C:\arm\SieJC_BR\Release_ELKA\Obj\color.r79           #
#                                                                            #
#                                                                            #
##############################################################################

C:\arm\SieJC_BR\color.c
      1          #include "../inc/swilib.h"
      2          #include "color.h"
      3          #include "string_util.h"
      4          #include "lang.h"
      5          #include "rect_patcher.h"
      6          
      7          extern const char color_PATH[];

   \                                 In segment DATA_Z, align 4, align-sorted
      8          char * cur_color_name;
   \                     cur_color_name:
   \   00000000                      DS8 4
      9          
     10          // Цвета
     11          
     12          RGBA MAINBG_NOT_CONNECTED;
     13          RGBA MAINBG_CONNECTED;
     14          RGBA MAINBG_ERROR;

   \                                 In segment DATA_I, align 4, align-sorted
     15          RGBA MAINFONT_NOT_CONNECTED = {200, 200, 200, 100};
   \                     MAINFONT_NOT_CONNECTED:
   \   00000000                      DS8 4
   \   00000004                      REQUIRE `?<Initializer for MAINFONT_NOT_CONNECTED>`

   \                                 In segment DATA_Z, align 4, align-sorted
     16          RGBA MAINFONT_CONNECTED;
     17          RGBA MAINFONT_ERROR;
     18          RGBA MESSAGEWIN_BGCOLOR;
     19          RGBA MESSAGEWIN_TITLE_BGCOLOR;
     20          RGBA MESSAGEWIN_TITLE_FONT;
     21          RGBA MESSAGEWIN_MY_BGCOLOR;
     22          RGBA MESSAGEWIN_CH_BGCOLOR;
     23          RGBA MESSAGEWIN_GCHAT_BGCOLOR_1;
     24          RGBA MESSAGEWIN_CURSOR_BGCOLOR;
     25          RGBA MESSAGEWIN_GCHAT_BGCOLOR_2;
     26          RGBA MESSAGEWIN_SYS_BGCOLOR; 
     27          RGBA MESSAGEWIN_STATUS_BGCOLOR; 
     28          RGBA MESSAGEWIN_CHAT_FONT;
     29          RGBA CURSOR;
     30          RGBA CURSOR_BORDER;        
     31          RGBA CLIST_F_COLOR_0;        
     32          RGBA CLIST_F_COLOR_1;        
     33          RGBA CONTACT_BG_0;         
     34          RGBA CONTACT_BG_1;
     35          RGBA lineColor;    
     36          RGBA borderColor;
     37          
     38          RGBA OnlineColor;
   \                     OnlineColor:
   \   00000000                      DS8 4
   \                     MAINBG_NOT_CONNECTED:
   \   00000004                      DS8 4
   \                     MAINBG_CONNECTED:
   \   00000008                      DS8 4
   \                     MAINBG_ERROR:
   \   0000000C                      DS8 4
   \                     MAINFONT_CONNECTED:
   \   00000010                      DS8 4
   \                     MAINFONT_ERROR:
   \   00000014                      DS8 4
   \                     MESSAGEWIN_BGCOLOR:
   \   00000018                      DS8 4
   \                     MESSAGEWIN_TITLE_BGCOLOR:
   \   0000001C                      DS8 4
   \                     MESSAGEWIN_TITLE_FONT:
   \   00000020                      DS8 4
   \                     MESSAGEWIN_MY_BGCOLOR:
   \   00000024                      DS8 4
   \                     MESSAGEWIN_CH_BGCOLOR:
   \   00000028                      DS8 4
   \                     MESSAGEWIN_GCHAT_BGCOLOR_1:
   \   0000002C                      DS8 4
   \                     MESSAGEWIN_CURSOR_BGCOLOR:
   \   00000030                      DS8 4
   \                     MESSAGEWIN_GCHAT_BGCOLOR_2:
   \   00000034                      DS8 4
   \                     MESSAGEWIN_SYS_BGCOLOR:
   \   00000038                      DS8 4
   \                     MESSAGEWIN_STATUS_BGCOLOR:
   \   0000003C                      DS8 4
   \                     MESSAGEWIN_CHAT_FONT:
   \   00000040                      DS8 4
   \                     CURSOR:
   \   00000044                      DS8 4
   \                     CURSOR_BORDER:
   \   00000048                      DS8 4
   \                     CLIST_F_COLOR_0:
   \   0000004C                      DS8 4
   \                     CLIST_F_COLOR_1:
   \   00000050                      DS8 4
   \                     CONTACT_BG_0:
   \   00000054                      DS8 4
   \                     CONTACT_BG_1:
   \   00000058                      DS8 4
   \                     lineColor:
   \   0000005C                      DS8 4
   \                     borderColor:
   \   00000060                      DS8 4

   \                                 In segment DATA_Z, align 4, align-sorted
     39          RGBA ChatColor;
   \                     ChatColor:
   \   00000000                      DS8 4

   \                                 In segment DATA_Z, align 4, align-sorted
     40          RGBA AwayColor;
   \                     AwayColor:
   \   00000000                      DS8 4

   \                                 In segment DATA_Z, align 4, align-sorted
     41          RGBA XAColor;
   \                     XAColor:
   \   00000000                      DS8 4

   \                                 In segment DATA_Z, align 4, align-sorted
     42          RGBA DNDColor;
   \                     DNDColor:
   \   00000000                      DS8 4

   \                                 In segment DATA_Z, align 4, align-sorted
     43          RGBA InvisibleColor;
   \                     InvisibleColor:
   \   00000000                      DS8 4

   \                                 In segment DATA_Z, align 4, align-sorted
     44          RGBA OfflineColor;
   \                     OfflineColor:
   \   00000000                      DS8 4

   \                                 In segment DATA_Z, align 4, align-sorted
     45          RGBA ErrorColor;
   \                     ErrorColor:
   \   00000000                      DS8 4

   \                                 In segment DATA_Z, align 4, align-sorted
     46          RGBA SubscribeColor;
   \                     SubscribeColor:
   \   00000000                      DS8 4

   \                                 In segment DATA_Z, align 4, align-sorted
     47          RGBA SubscribedColor;
   \                     SubscribedColor:
   \   00000000                      DS8 4

   \                                 In segment DATA_Z, align 4, align-sorted
     48          RGBA UnsubscribeColor;
   \                     UnsubscribeColor:
   \   00000000                      DS8 4

   \                                 In segment DATA_Z, align 4, align-sorted
     49          RGBA UnsubscribedColor;
   \                     UnsubscribedColor:
   \   00000000                      DS8 4
     50          

   \                                 In segment DATA_Z, align 4, align-sorted
     51          RGBA PRES_COLORS[PRES_COUNT];
   \                     PRES_COLORS:
   \   00000000                      DS8 48
     52          
     53          /* 
     54            Инициализация цветов.
     55            В параметр нужно передать буффер конфига цветов
     56          */

   \                                 In segment CODE, align 4, keep-with-next
     57          void InitColor(char * color_cfg)
     58          {
     59            CURSOR.r = color_cfg [44];
   \                     InitColor:
   \   00000000   60169FE5           LDR      R1,??InitColor_0  ;; OnlineColor
   \   00000004   30002DE9           PUSH     {R4,R5}
   \   00000008   2C20D0E5           LDRB     R2,[R0, #+44]
   \   0000000C   4420C1E5           STRB     R2,[R1, #+68]
     60            CURSOR.g = color_cfg [45];
   \   00000010   2D20D0E5           LDRB     R2,[R0, #+45]
   \   00000014   4520C1E5           STRB     R2,[R1, #+69]
     61            CURSOR.b = color_cfg [46];
   \   00000018   2E20D0E5           LDRB     R2,[R0, #+46]
   \   0000001C   4620C1E5           STRB     R2,[R1, #+70]
     62            CURSOR.a = color_cfg [47];
   \   00000020   2F20D0E5           LDRB     R2,[R0, #+47]
   \   00000024   4720C1E5           STRB     R2,[R1, #+71]
     63          
     64            OnlineColor.r = color_cfg [1196];
   \   00000028   AC24D0E5           LDRB     R2,[R0, #+1196]
   \   0000002C   0020C1E5           STRB     R2,[R1, #+0]
     65            OnlineColor.g = color_cfg [1197];
   \   00000030   AD24D0E5           LDRB     R2,[R0, #+1197]
     66            OnlineColor.b = color_cfg [1198];
     67            OnlineColor.a = color_cfg [1199];
     68            PRES_COLORS[0] = OnlineColor;
   \   00000034   0030D1E5           LDRB     R3,[R1, #0]
   \   00000038   0120C1E5           STRB     R2,[R1, #+1]
   \   0000003C   AE24D0E5           LDRB     R2,[R0, #+1198]
   \   00000040   0220C1E5           STRB     R2,[R1, #+2]
   \   00000044   AF24D0E5           LDRB     R2,[R0, #+1199]
   \   00000048   0320C1E5           STRB     R2,[R1, #+3]
   \   0000004C   18269FE5           LDR      R2,??InitColor_0+0x4  ;; PRES_COLORS
   \   00000050   0030C2E5           STRB     R3,[R2, #+0]
   \   00000054   0130D1E5           LDRB     R3,[R1, #+1]
   \   00000058   0130C2E5           STRB     R3,[R2, #+1]
   \   0000005C   0230D1E5           LDRB     R3,[R1, #+2]
   \   00000060   0230C2E5           STRB     R3,[R2, #+2]
   \   00000064   0330D1E5           LDRB     R3,[R1, #+3]
   \   00000068   0330C2E5           STRB     R3,[R2, #+3]
     69          
     70            ChatColor.r = color_cfg [1244];
   \   0000006C   DCC4D0E5           LDRB     R12,[R0, #+1244]
   \   00000070   F8359FE5           LDR      R3,??InitColor_0+0x8  ;; ChatColor
   \   00000074   00C0C3E5           STRB     R12,[R3, #+0]
     71            ChatColor.g = color_cfg [1245];
   \   00000078   DDC4D0E5           LDRB     R12,[R0, #+1245]
     72            ChatColor.b = color_cfg [1246];
     73            ChatColor.a = color_cfg [1247];
     74            PRES_COLORS[1] = ChatColor;
   \   0000007C   0040D3E5           LDRB     R4,[R3, #0]
   \   00000080   01C0C3E5           STRB     R12,[R3, #+1]
   \   00000084   DEC4D0E5           LDRB     R12,[R0, #+1246]
   \   00000088   02C0C3E5           STRB     R12,[R3, #+2]
   \   0000008C   DFC4D0E5           LDRB     R12,[R0, #+1247]
   \   00000090   03C0C3E5           STRB     R12,[R3, #+3]
   \   00000094   04C082E2           ADD      R12,R2,#+4
   \   00000098   0040CCE5           STRB     R4,[R12, #+0]
   \   0000009C   0140D3E5           LDRB     R4,[R3, #+1]
   \   000000A0   0140CCE5           STRB     R4,[R12, #+1]
   \   000000A4   0240D3E5           LDRB     R4,[R3, #+2]
   \   000000A8   0240CCE5           STRB     R4,[R12, #+2]
   \   000000AC   0340D3E5           LDRB     R4,[R3, #+3]
     75          
     76            AwayColor.r = color_cfg [1292];
   \   000000B0   BC359FE5           LDR      R3,??InitColor_0+0xC  ;; AwayColor
   \   000000B4   0340CCE5           STRB     R4,[R12, #+3]
   \   000000B8   0C45D0E5           LDRB     R4,[R0, #+1292]
   \   000000BC   0040C3E5           STRB     R4,[R3, #+0]
     77            AwayColor.g = color_cfg [1293];
   \   000000C0   0D45D0E5           LDRB     R4,[R0, #+1293]
     78            AwayColor.b = color_cfg [1294];
     79            AwayColor.a = color_cfg [1295];
     80            PRES_COLORS[2] = AwayColor;
   \   000000C4   0050D3E5           LDRB     R5,[R3, #0]
   \   000000C8   0140C3E5           STRB     R4,[R3, #+1]
   \   000000CC   0E45D0E5           LDRB     R4,[R0, #+1294]
   \   000000D0   0240C3E5           STRB     R4,[R3, #+2]
   \   000000D4   0F45D0E5           LDRB     R4,[R0, #+1295]
   \   000000D8   0340C3E5           STRB     R4,[R3, #+3]
   \   000000DC   084082E2           ADD      R4,R2,#+8
   \   000000E0   0050C4E5           STRB     R5,[R4, #+0]
   \   000000E4   0150D3E5           LDRB     R5,[R3, #+1]
   \   000000E8   0150C4E5           STRB     R5,[R4, #+1]
   \   000000EC   0250D3E5           LDRB     R5,[R3, #+2]
   \   000000F0   0250C4E5           STRB     R5,[R4, #+2]
   \   000000F4   0350D3E5           LDRB     R5,[R3, #+3]
     81          
     82            XAColor.r = color_cfg [1340];
   \   000000F8   78359FE5           LDR      R3,??InitColor_0+0x10  ;; XAColor
   \   000000FC   0350C4E5           STRB     R5,[R4, #+3]
   \   00000100   3C45D0E5           LDRB     R4,[R0, #+1340]
   \   00000104   0040C3E5           STRB     R4,[R3, #+0]
     83            XAColor.g = color_cfg [1341];
   \   00000108   3D45D0E5           LDRB     R4,[R0, #+1341]
     84            XAColor.b = color_cfg [1342];
     85            XAColor.a = color_cfg [1343];
     86            PRES_COLORS[3] = XAColor;
   \   0000010C   0050D3E5           LDRB     R5,[R3, #0]
   \   00000110   0140C3E5           STRB     R4,[R3, #+1]
   \   00000114   3E45D0E5           LDRB     R4,[R0, #+1342]
   \   00000118   0240C3E5           STRB     R4,[R3, #+2]
   \   0000011C   3F45D0E5           LDRB     R4,[R0, #+1343]
   \   00000120   0340C3E5           STRB     R4,[R3, #+3]
   \   00000124   0C4082E2           ADD      R4,R2,#+12
   \   00000128   0050C4E5           STRB     R5,[R4, #+0]
   \   0000012C   0150D3E5           LDRB     R5,[R3, #+1]
   \   00000130   0150C4E5           STRB     R5,[R4, #+1]
   \   00000134   0250D3E5           LDRB     R5,[R3, #+2]
   \   00000138   0250C4E5           STRB     R5,[R4, #+2]
   \   0000013C   0350D3E5           LDRB     R5,[R3, #+3]
     87          
     88            DNDColor.r = color_cfg [1388];
   \   00000140   34359FE5           LDR      R3,??InitColor_0+0x14  ;; DNDColor
   \   00000144   0350C4E5           STRB     R5,[R4, #+3]
   \   00000148   6C45D0E5           LDRB     R4,[R0, #+1388]
   \   0000014C   0040C3E5           STRB     R4,[R3, #+0]
     89            DNDColor.g = color_cfg [1389];
   \   00000150   6D45D0E5           LDRB     R4,[R0, #+1389]
     90            DNDColor.b = color_cfg [1390];
     91            DNDColor.a = color_cfg [1391];
     92            PRES_COLORS[4] = DNDColor;
   \   00000154   0050D3E5           LDRB     R5,[R3, #0]
   \   00000158   0140C3E5           STRB     R4,[R3, #+1]
   \   0000015C   6E45D0E5           LDRB     R4,[R0, #+1390]
   \   00000160   0240C3E5           STRB     R4,[R3, #+2]
   \   00000164   6F45D0E5           LDRB     R4,[R0, #+1391]
   \   00000168   0340C3E5           STRB     R4,[R3, #+3]
   \   0000016C   104082E2           ADD      R4,R2,#+16
   \   00000170   0050C4E5           STRB     R5,[R4, #+0]
   \   00000174   0150D3E5           LDRB     R5,[R3, #+1]
   \   00000178   0150C4E5           STRB     R5,[R4, #+1]
   \   0000017C   0250D3E5           LDRB     R5,[R3, #+2]
   \   00000180   0250C4E5           STRB     R5,[R4, #+2]
   \   00000184   0350D3E5           LDRB     R5,[R3, #+3]
     93          
     94            InvisibleColor.r = color_cfg [1436];
   \   00000188   F0349FE5           LDR      R3,??InitColor_0+0x18  ;; InvisibleColor
   \   0000018C   0350C4E5           STRB     R5,[R4, #+3]
   \   00000190   9C45D0E5           LDRB     R4,[R0, #+1436]
   \   00000194   0040C3E5           STRB     R4,[R3, #+0]
     95            InvisibleColor.g = color_cfg [1437];
   \   00000198   9D45D0E5           LDRB     R4,[R0, #+1437]
     96            InvisibleColor.b = color_cfg [1438];
     97            InvisibleColor.a = color_cfg [1439];
     98            PRES_COLORS[5] = InvisibleColor;
   \   0000019C   0050D3E5           LDRB     R5,[R3, #0]
   \   000001A0   0140C3E5           STRB     R4,[R3, #+1]
   \   000001A4   9E45D0E5           LDRB     R4,[R0, #+1438]
   \   000001A8   0240C3E5           STRB     R4,[R3, #+2]
   \   000001AC   9F45D0E5           LDRB     R4,[R0, #+1439]
   \   000001B0   0340C3E5           STRB     R4,[R3, #+3]
   \   000001B4   144082E2           ADD      R4,R2,#+20
   \   000001B8   0050C4E5           STRB     R5,[R4, #+0]
   \   000001BC   0150D3E5           LDRB     R5,[R3, #+1]
   \   000001C0   0150C4E5           STRB     R5,[R4, #+1]
   \   000001C4   0250D3E5           LDRB     R5,[R3, #+2]
   \   000001C8   0250C4E5           STRB     R5,[R4, #+2]
   \   000001CC   0350D3E5           LDRB     R5,[R3, #+3]
     99          
    100            OfflineColor.r = color_cfg [1484];
   \   000001D0   AC349FE5           LDR      R3,??InitColor_0+0x1C  ;; OfflineColor
   \   000001D4   0350C4E5           STRB     R5,[R4, #+3]
   \   000001D8   CC45D0E5           LDRB     R4,[R0, #+1484]
   \   000001DC   0040C3E5           STRB     R4,[R3, #+0]
    101            OfflineColor.g = color_cfg [1485];
   \   000001E0   CD45D0E5           LDRB     R4,[R0, #+1485]
    102            OfflineColor.b = color_cfg [1486];
    103            OfflineColor.a = color_cfg [1487];
    104            PRES_COLORS[6] = OfflineColor;
   \   000001E4   0050D3E5           LDRB     R5,[R3, #0]
   \   000001E8   0140C3E5           STRB     R4,[R3, #+1]
   \   000001EC   CE45D0E5           LDRB     R4,[R0, #+1486]
   \   000001F0   0240C3E5           STRB     R4,[R3, #+2]
   \   000001F4   CF45D0E5           LDRB     R4,[R0, #+1487]
   \   000001F8   0340C3E5           STRB     R4,[R3, #+3]
   \   000001FC   184082E2           ADD      R4,R2,#+24
   \   00000200   0050C4E5           STRB     R5,[R4, #+0]
   \   00000204   0150D3E5           LDRB     R5,[R3, #+1]
   \   00000208   0150C4E5           STRB     R5,[R4, #+1]
   \   0000020C   0250D3E5           LDRB     R5,[R3, #+2]
   \   00000210   0250C4E5           STRB     R5,[R4, #+2]
   \   00000214   0350D3E5           LDRB     R5,[R3, #+3]
    105          
    106            ErrorColor.r = color_cfg [1532];
   \   00000218   68349FE5           LDR      R3,??InitColor_0+0x20  ;; ErrorColor
   \   0000021C   0350C4E5           STRB     R5,[R4, #+3]
   \   00000220   FC45D0E5           LDRB     R4,[R0, #+1532]
   \   00000224   0040C3E5           STRB     R4,[R3, #+0]
    107            ErrorColor.g = color_cfg [1533];
   \   00000228   FD45D0E5           LDRB     R4,[R0, #+1533]
    108            ErrorColor.b = color_cfg [1534];
    109            ErrorColor.a = color_cfg [1535];
    110            PRES_COLORS[7] = ErrorColor;
   \   0000022C   0050D3E5           LDRB     R5,[R3, #0]
   \   00000230   0140C3E5           STRB     R4,[R3, #+1]
   \   00000234   FE45D0E5           LDRB     R4,[R0, #+1534]
   \   00000238   0240C3E5           STRB     R4,[R3, #+2]
   \   0000023C   FF45D0E5           LDRB     R4,[R0, #+1535]
   \   00000240   0340C3E5           STRB     R4,[R3, #+3]
   \   00000244   1C4082E2           ADD      R4,R2,#+28
   \   00000248   0050C4E5           STRB     R5,[R4, #+0]
   \   0000024C   0150D3E5           LDRB     R5,[R3, #+1]
   \   00000250   0150C4E5           STRB     R5,[R4, #+1]
   \   00000254   0250D3E5           LDRB     R5,[R3, #+2]
   \   00000258   0250C4E5           STRB     R5,[R4, #+2]
   \   0000025C   0350D3E5           LDRB     R5,[R3, #+3]
    111          
    112            SubscribeColor.r = color_cfg [1580];
   \   00000260   24349FE5           LDR      R3,??InitColor_0+0x24  ;; SubscribeColor
   \   00000264   0350C4E5           STRB     R5,[R4, #+3]
   \   00000268   2C46D0E5           LDRB     R4,[R0, #+1580]
   \   0000026C   0040C3E5           STRB     R4,[R3, #+0]
    113            SubscribeColor.g = color_cfg [1581];
   \   00000270   2D46D0E5           LDRB     R4,[R0, #+1581]
    114            SubscribeColor.b = color_cfg [1582];
    115            SubscribeColor.a = color_cfg [1583];
    116            PRES_COLORS[8] = SubscribeColor;
   \   00000274   0050D3E5           LDRB     R5,[R3, #0]
   \   00000278   0140C3E5           STRB     R4,[R3, #+1]
   \   0000027C   2E46D0E5           LDRB     R4,[R0, #+1582]
   \   00000280   0240C3E5           STRB     R4,[R3, #+2]
   \   00000284   2F46D0E5           LDRB     R4,[R0, #+1583]
   \   00000288   0340C3E5           STRB     R4,[R3, #+3]
   \   0000028C   204082E2           ADD      R4,R2,#+32
   \   00000290   0050C4E5           STRB     R5,[R4, #+0]
   \   00000294   0150D3E5           LDRB     R5,[R3, #+1]
   \   00000298   0150C4E5           STRB     R5,[R4, #+1]
   \   0000029C   0250D3E5           LDRB     R5,[R3, #+2]
   \   000002A0   0250C4E5           STRB     R5,[R4, #+2]
   \   000002A4   0350D3E5           LDRB     R5,[R3, #+3]
    117          
    118            SubscribedColor.r = color_cfg [1628];
   \   000002A8   E0339FE5           LDR      R3,??InitColor_0+0x28  ;; SubscribedColor
   \   000002AC   0350C4E5           STRB     R5,[R4, #+3]
   \   000002B0   5C46D0E5           LDRB     R4,[R0, #+1628]
   \   000002B4   0040C3E5           STRB     R4,[R3, #+0]
    119            SubscribedColor.g = color_cfg [1629];
   \   000002B8   5D46D0E5           LDRB     R4,[R0, #+1629]
    120            SubscribedColor.b = color_cfg [1630];
    121            SubscribedColor.a = color_cfg [1631];
    122            PRES_COLORS[9] = SubscribedColor;
   \   000002BC   0050D3E5           LDRB     R5,[R3, #0]
   \   000002C0   0140C3E5           STRB     R4,[R3, #+1]
   \   000002C4   5E46D0E5           LDRB     R4,[R0, #+1630]
   \   000002C8   0240C3E5           STRB     R4,[R3, #+2]
   \   000002CC   5F46D0E5           LDRB     R4,[R0, #+1631]
   \   000002D0   0340C3E5           STRB     R4,[R3, #+3]
   \   000002D4   244082E2           ADD      R4,R2,#+36
   \   000002D8   0050C4E5           STRB     R5,[R4, #+0]
   \   000002DC   0150D3E5           LDRB     R5,[R3, #+1]
   \   000002E0   0150C4E5           STRB     R5,[R4, #+1]
   \   000002E4   0250D3E5           LDRB     R5,[R3, #+2]
   \   000002E8   0250C4E5           STRB     R5,[R4, #+2]
   \   000002EC   0350D3E5           LDRB     R5,[R3, #+3]
    123          
    124            UnsubscribeColor.r = color_cfg [1676];
   \   000002F0   9C339FE5           LDR      R3,??InitColor_0+0x2C  ;; UnsubscribeColor
   \   000002F4   0350C4E5           STRB     R5,[R4, #+3]
   \   000002F8   8C46D0E5           LDRB     R4,[R0, #+1676]
   \   000002FC   0040C3E5           STRB     R4,[R3, #+0]
    125            UnsubscribeColor.g = color_cfg [1677];
   \   00000300   8D46D0E5           LDRB     R4,[R0, #+1677]
    126            UnsubscribeColor.b = color_cfg [1678];
    127            UnsubscribeColor.a = color_cfg [1679];
    128            PRES_COLORS[10] = UnsubscribeColor;
   \   00000304   0050D3E5           LDRB     R5,[R3, #0]
   \   00000308   0140C3E5           STRB     R4,[R3, #+1]
   \   0000030C   8E46D0E5           LDRB     R4,[R0, #+1678]
   \   00000310   0240C3E5           STRB     R4,[R3, #+2]
   \   00000314   8F46D0E5           LDRB     R4,[R0, #+1679]
   \   00000318   0340C3E5           STRB     R4,[R3, #+3]
   \   0000031C   284082E2           ADD      R4,R2,#+40
   \   00000320   0050C4E5           STRB     R5,[R4, #+0]
   \   00000324   0150D3E5           LDRB     R5,[R3, #+1]
   \   00000328   0150C4E5           STRB     R5,[R4, #+1]
   \   0000032C   0250D3E5           LDRB     R5,[R3, #+2]
   \   00000330   0250C4E5           STRB     R5,[R4, #+2]
   \   00000334   0350D3E5           LDRB     R5,[R3, #+3]
    129          
    130            UnsubscribedColor.r = color_cfg [1724];
   \   00000338   58339FE5           LDR      R3,??InitColor_0+0x30  ;; UnsubscribedColor
   \   0000033C   0350C4E5           STRB     R5,[R4, #+3]
   \   00000340   BC46D0E5           LDRB     R4,[R0, #+1724]
   \   00000344   0040C3E5           STRB     R4,[R3, #+0]
    131            UnsubscribedColor.g = color_cfg [1725];
   \   00000348   BD46D0E5           LDRB     R4,[R0, #+1725]
   \   0000034C   0140C3E5           STRB     R4,[R3, #+1]
    132            UnsubscribedColor.b = color_cfg [1726];
   \   00000350   BE46D0E5           LDRB     R4,[R0, #+1726]
   \   00000354   0240C3E5           STRB     R4,[R3, #+2]
    133            UnsubscribedColor.a = color_cfg [1727];
   \   00000358   BF46D0E5           LDRB     R4,[R0, #+1727]
   \   0000035C   0340C3E5           STRB     R4,[R3, #+3]
    134            PRES_COLORS[11] = UnsubscribedColor;
   \   00000360   0040D3E5           LDRB     R4,[R3, #0]
   \   00000364   2C40E2E5           STRB     R4,[R2, #+44]!
   \   00000368   0140D3E5           LDRB     R4,[R3, #+1]
   \   0000036C   0140C2E5           STRB     R4,[R2, #+1]
   \   00000370   0240D3E5           LDRB     R4,[R3, #+2]
   \   00000374   0240C2E5           STRB     R4,[R2, #+2]
   \   00000378   0340D3E5           LDRB     R4,[R3, #+3]
   \   0000037C   0340C2E5           STRB     R4,[R2, #+3]
    135          
    136            CURSOR_BORDER.r = color_cfg [92];
   \   00000380   5C20D0E5           LDRB     R2,[R0, #+92]
   \   00000384   4820C1E5           STRB     R2,[R1, #+72]
    137            CURSOR_BORDER.g = color_cfg [93];
   \   00000388   5D20D0E5           LDRB     R2,[R0, #+93]
   \   0000038C   4920C1E5           STRB     R2,[R1, #+73]
    138            CURSOR_BORDER.b = color_cfg [94];
   \   00000390   5E20D0E5           LDRB     R2,[R0, #+94]
   \   00000394   4A20C1E5           STRB     R2,[R1, #+74]
    139            CURSOR_BORDER.a = color_cfg [95];
   \   00000398   5F20D0E5           LDRB     R2,[R0, #+95]
   \   0000039C   4B20C1E5           STRB     R2,[R1, #+75]
    140            
    141            CLIST_F_COLOR_0.r = color_cfg [140];
   \   000003A0   8C20D0E5           LDRB     R2,[R0, #+140]
   \   000003A4   4C20C1E5           STRB     R2,[R1, #+76]
    142            CLIST_F_COLOR_0.g = color_cfg [141];
   \   000003A8   8D20D0E5           LDRB     R2,[R0, #+141]
   \   000003AC   4D20C1E5           STRB     R2,[R1, #+77]
    143            CLIST_F_COLOR_0.b = color_cfg [142];
   \   000003B0   8E20D0E5           LDRB     R2,[R0, #+142]
   \   000003B4   4E20C1E5           STRB     R2,[R1, #+78]
    144            CLIST_F_COLOR_0.a = color_cfg [143];
   \   000003B8   8F20D0E5           LDRB     R2,[R0, #+143]
   \   000003BC   4F20C1E5           STRB     R2,[R1, #+79]
    145            
    146            CLIST_F_COLOR_1.r = color_cfg [188];
   \   000003C0   BC20D0E5           LDRB     R2,[R0, #+188]
   \   000003C4   5020C1E5           STRB     R2,[R1, #+80]
    147            CLIST_F_COLOR_1.g = color_cfg [189];
   \   000003C8   BD20D0E5           LDRB     R2,[R0, #+189]
   \   000003CC   5120C1E5           STRB     R2,[R1, #+81]
    148            CLIST_F_COLOR_1.b = color_cfg [190];
   \   000003D0   BE20D0E5           LDRB     R2,[R0, #+190]
   \   000003D4   5220C1E5           STRB     R2,[R1, #+82]
    149            CLIST_F_COLOR_1.a = color_cfg [191];
   \   000003D8   BF20D0E5           LDRB     R2,[R0, #+191]
   \   000003DC   5320C1E5           STRB     R2,[R1, #+83]
    150            
    151            CONTACT_BG_0.r = color_cfg [236];
   \   000003E0   EC20D0E5           LDRB     R2,[R0, #+236]
   \   000003E4   5420C1E5           STRB     R2,[R1, #+84]
    152            CONTACT_BG_0.g = color_cfg [237];
   \   000003E8   ED20D0E5           LDRB     R2,[R0, #+237]
   \   000003EC   5520C1E5           STRB     R2,[R1, #+85]
    153            CONTACT_BG_0.b = color_cfg [238];
   \   000003F0   EE20D0E5           LDRB     R2,[R0, #+238]
   \   000003F4   5620C1E5           STRB     R2,[R1, #+86]
    154            CONTACT_BG_0.a = color_cfg [239];
   \   000003F8   EF20D0E5           LDRB     R2,[R0, #+239]
   \   000003FC   5720C1E5           STRB     R2,[R1, #+87]
    155            
    156            CONTACT_BG_1.r = color_cfg [284];
   \   00000400   1C21D0E5           LDRB     R2,[R0, #+284]
   \   00000404   5820C1E5           STRB     R2,[R1, #+88]
    157            CONTACT_BG_1.g = color_cfg [285];
   \   00000408   1D21D0E5           LDRB     R2,[R0, #+285]
   \   0000040C   5920C1E5           STRB     R2,[R1, #+89]
    158            CONTACT_BG_1.b = color_cfg [286];
   \   00000410   1E21D0E5           LDRB     R2,[R0, #+286]
   \   00000414   5A20C1E5           STRB     R2,[R1, #+90]
    159            CONTACT_BG_1.a = color_cfg [287];
   \   00000418   1F21D0E5           LDRB     R2,[R0, #+287]
   \   0000041C   5B20C1E5           STRB     R2,[R1, #+91]
    160            
    161            lineColor.r = color_cfg [332];
   \   00000420   4C21D0E5           LDRB     R2,[R0, #+332]
   \   00000424   5C20C1E5           STRB     R2,[R1, #+92]
    162            lineColor.g = color_cfg [333];
   \   00000428   4D21D0E5           LDRB     R2,[R0, #+333]
   \   0000042C   5D20C1E5           STRB     R2,[R1, #+93]
    163            lineColor.b = color_cfg [334];
   \   00000430   4E21D0E5           LDRB     R2,[R0, #+334]
   \   00000434   5E20C1E5           STRB     R2,[R1, #+94]
    164            lineColor.a = color_cfg [335];
   \   00000438   4F21D0E5           LDRB     R2,[R0, #+335]
   \   0000043C   5F20C1E5           STRB     R2,[R1, #+95]
    165            
    166            borderColor.r = color_cfg [380];
   \   00000440   7C21D0E5           LDRB     R2,[R0, #+380]
   \   00000444   6020C1E5           STRB     R2,[R1, #+96]
    167            borderColor.g = color_cfg [381];
   \   00000448   7D21D0E5           LDRB     R2,[R0, #+381]
   \   0000044C   6120C1E5           STRB     R2,[R1, #+97]
    168            borderColor.b = color_cfg [382];
   \   00000450   7E21D0E5           LDRB     R2,[R0, #+382]
   \   00000454   6220C1E5           STRB     R2,[R1, #+98]
    169            borderColor.a = color_cfg [383];
   \   00000458   7F21D0E5           LDRB     R2,[R0, #+383]
   \   0000045C   6320C1E5           STRB     R2,[R1, #+99]
    170            
    171            MAINBG_NOT_CONNECTED.r = color_cfg [428];
   \   00000460   AC21D0E5           LDRB     R2,[R0, #+428]
   \   00000464   0420C1E5           STRB     R2,[R1, #+4]
    172            MAINBG_NOT_CONNECTED.g = color_cfg [429];
   \   00000468   AD21D0E5           LDRB     R2,[R0, #+429]
   \   0000046C   0520C1E5           STRB     R2,[R1, #+5]
    173            MAINBG_NOT_CONNECTED.b = color_cfg [430];
   \   00000470   AE21D0E5           LDRB     R2,[R0, #+430]
   \   00000474   0620C1E5           STRB     R2,[R1, #+6]
    174            MAINBG_NOT_CONNECTED.a = color_cfg [431];
   \   00000478   AF21D0E5           LDRB     R2,[R0, #+431]
   \   0000047C   0720C1E5           STRB     R2,[R1, #+7]
    175            
    176            MAINBG_CONNECTED.r = color_cfg [476];
   \   00000480   DC21D0E5           LDRB     R2,[R0, #+476]
   \   00000484   0820C1E5           STRB     R2,[R1, #+8]
    177            MAINBG_CONNECTED.g = color_cfg [477];
   \   00000488   DD21D0E5           LDRB     R2,[R0, #+477]
   \   0000048C   0920C1E5           STRB     R2,[R1, #+9]
    178            MAINBG_CONNECTED.b = color_cfg [478];
   \   00000490   DE21D0E5           LDRB     R2,[R0, #+478]
   \   00000494   0A20C1E5           STRB     R2,[R1, #+10]
    179            MAINBG_CONNECTED.a = color_cfg [479];
   \   00000498   DF21D0E5           LDRB     R2,[R0, #+479]
   \   0000049C   0B20C1E5           STRB     R2,[R1, #+11]
    180            
    181            MAINBG_ERROR.r = color_cfg [524];
   \   000004A0   0C22D0E5           LDRB     R2,[R0, #+524]
   \   000004A4   0C20C1E5           STRB     R2,[R1, #+12]
    182            MAINBG_ERROR.g = color_cfg [525];
   \   000004A8   0D22D0E5           LDRB     R2,[R0, #+525]
   \   000004AC   0D20C1E5           STRB     R2,[R1, #+13]
    183            MAINBG_ERROR.b = color_cfg [526];
   \   000004B0   0E22D0E5           LDRB     R2,[R0, #+526]
   \   000004B4   0E20C1E5           STRB     R2,[R1, #+14]
    184            MAINBG_ERROR.a = color_cfg [527];
   \   000004B8   0F22D0E5           LDRB     R2,[R0, #+527]
   \   000004BC   0F20C1E5           STRB     R2,[R1, #+15]
    185            
    186            MAINFONT_CONNECTED.r = color_cfg [572];
   \   000004C0   3C22D0E5           LDRB     R2,[R0, #+572]
   \   000004C4   1020C1E5           STRB     R2,[R1, #+16]
    187            MAINFONT_CONNECTED.g = color_cfg [573];
   \   000004C8   3D22D0E5           LDRB     R2,[R0, #+573]
   \   000004CC   1120C1E5           STRB     R2,[R1, #+17]
    188            MAINFONT_CONNECTED.b = color_cfg [574];
   \   000004D0   3E22D0E5           LDRB     R2,[R0, #+574]
   \   000004D4   1220C1E5           STRB     R2,[R1, #+18]
    189            MAINFONT_CONNECTED.a = color_cfg [575];
   \   000004D8   3F22D0E5           LDRB     R2,[R0, #+575]
   \   000004DC   1320C1E5           STRB     R2,[R1, #+19]
    190            
    191            MAINFONT_ERROR.r = color_cfg [620];
   \   000004E0   6C22D0E5           LDRB     R2,[R0, #+620]
   \   000004E4   1420C1E5           STRB     R2,[R1, #+20]
    192            MAINFONT_ERROR.g = color_cfg [621];
   \   000004E8   6D22D0E5           LDRB     R2,[R0, #+621]
   \   000004EC   1520C1E5           STRB     R2,[R1, #+21]
    193            MAINFONT_ERROR.b = color_cfg [622];
   \   000004F0   6E22D0E5           LDRB     R2,[R0, #+622]
   \   000004F4   1620C1E5           STRB     R2,[R1, #+22]
    194            MAINFONT_ERROR.a = color_cfg [623];
   \   000004F8   6F22D0E5           LDRB     R2,[R0, #+623]
   \   000004FC   1720C1E5           STRB     R2,[R1, #+23]
    195            
    196            MESSAGEWIN_BGCOLOR.r = color_cfg [668];
   \   00000500   9C22D0E5           LDRB     R2,[R0, #+668]
   \   00000504   1820C1E5           STRB     R2,[R1, #+24]
    197            MESSAGEWIN_BGCOLOR.g = color_cfg [669];
   \   00000508   9D22D0E5           LDRB     R2,[R0, #+669]
   \   0000050C   1920C1E5           STRB     R2,[R1, #+25]
    198            MESSAGEWIN_BGCOLOR.b = color_cfg [670];
   \   00000510   9E22D0E5           LDRB     R2,[R0, #+670]
   \   00000514   1A20C1E5           STRB     R2,[R1, #+26]
    199            MESSAGEWIN_BGCOLOR.a = color_cfg [671];
   \   00000518   9F22D0E5           LDRB     R2,[R0, #+671]
   \   0000051C   1B20C1E5           STRB     R2,[R1, #+27]
    200            
    201            MESSAGEWIN_CURSOR_BGCOLOR.r = color_cfg [908];
   \   00000520   8C23D0E5           LDRB     R2,[R0, #+908]
   \   00000524   3020C1E5           STRB     R2,[R1, #+48]
    202            MESSAGEWIN_CURSOR_BGCOLOR.g = color_cfg [909];
   \   00000528   8D23D0E5           LDRB     R2,[R0, #+909]
   \   0000052C   3120C1E5           STRB     R2,[R1, #+49]
    203            MESSAGEWIN_CURSOR_BGCOLOR.b = color_cfg [910];
   \   00000530   8E23D0E5           LDRB     R2,[R0, #+910]
   \   00000534   3220C1E5           STRB     R2,[R1, #+50]
    204            MESSAGEWIN_CURSOR_BGCOLOR.a = color_cfg [911];
   \   00000538   8F23D0E5           LDRB     R2,[R0, #+911]
   \   0000053C   3320C1E5           STRB     R2,[R1, #+51]
    205            
    206            MESSAGEWIN_TITLE_BGCOLOR.r = color_cfg [716];
   \   00000540   CC22D0E5           LDRB     R2,[R0, #+716]
   \   00000544   1C20C1E5           STRB     R2,[R1, #+28]
    207            MESSAGEWIN_TITLE_BGCOLOR.g = color_cfg [717];
   \   00000548   CD22D0E5           LDRB     R2,[R0, #+717]
   \   0000054C   1D20C1E5           STRB     R2,[R1, #+29]
    208            MESSAGEWIN_TITLE_BGCOLOR.b = color_cfg [718];
   \   00000550   CE22D0E5           LDRB     R2,[R0, #+718]
   \   00000554   1E20C1E5           STRB     R2,[R1, #+30]
    209            MESSAGEWIN_TITLE_BGCOLOR.a = color_cfg [719];
   \   00000558   CF22D0E5           LDRB     R2,[R0, #+719]
   \   0000055C   1F20C1E5           STRB     R2,[R1, #+31]
    210            
    211            MESSAGEWIN_TITLE_FONT.r = color_cfg [764];
   \   00000560   FC22D0E5           LDRB     R2,[R0, #+764]
   \   00000564   2020C1E5           STRB     R2,[R1, #+32]
    212            MESSAGEWIN_TITLE_FONT.g = color_cfg [765];
   \   00000568   FD22D0E5           LDRB     R2,[R0, #+765]
   \   0000056C   2120C1E5           STRB     R2,[R1, #+33]
    213            MESSAGEWIN_TITLE_FONT.b = color_cfg [766];
   \   00000570   FE22D0E5           LDRB     R2,[R0, #+766]
   \   00000574   2220C1E5           STRB     R2,[R1, #+34]
    214            MESSAGEWIN_TITLE_FONT.a = color_cfg [767];
   \   00000578   FF22D0E5           LDRB     R2,[R0, #+767]
   \   0000057C   2320C1E5           STRB     R2,[R1, #+35]
    215            
    216            MESSAGEWIN_MY_BGCOLOR.r = color_cfg [812];
   \   00000580   2C23D0E5           LDRB     R2,[R0, #+812]
   \   00000584   2420C1E5           STRB     R2,[R1, #+36]
    217            MESSAGEWIN_MY_BGCOLOR.g = color_cfg [813];
   \   00000588   2D23D0E5           LDRB     R2,[R0, #+813]
   \   0000058C   2520C1E5           STRB     R2,[R1, #+37]
    218            MESSAGEWIN_MY_BGCOLOR.b = color_cfg [814];
   \   00000590   2E23D0E5           LDRB     R2,[R0, #+814]
   \   00000594   2620C1E5           STRB     R2,[R1, #+38]
    219            MESSAGEWIN_MY_BGCOLOR.a = color_cfg [815];
   \   00000598   2F23D0E5           LDRB     R2,[R0, #+815]
   \   0000059C   2720C1E5           STRB     R2,[R1, #+39]
    220            
    221            MESSAGEWIN_CH_BGCOLOR.r = color_cfg [860];
   \   000005A0   5C23D0E5           LDRB     R2,[R0, #+860]
   \   000005A4   2820C1E5           STRB     R2,[R1, #+40]
    222            MESSAGEWIN_CH_BGCOLOR.g = color_cfg [861];
   \   000005A8   5D23D0E5           LDRB     R2,[R0, #+861]
   \   000005AC   2920C1E5           STRB     R2,[R1, #+41]
    223            MESSAGEWIN_CH_BGCOLOR.b = color_cfg [862];
   \   000005B0   5E23D0E5           LDRB     R2,[R0, #+862]
   \   000005B4   2A20C1E5           STRB     R2,[R1, #+42]
    224            MESSAGEWIN_CH_BGCOLOR.a = color_cfg [863];
   \   000005B8   5F23D0E5           LDRB     R2,[R0, #+863]
   \   000005BC   2B20C1E5           STRB     R2,[R1, #+43]
    225            
    226            MESSAGEWIN_GCHAT_BGCOLOR_1.r = color_cfg [956];
   \   000005C0   BC23D0E5           LDRB     R2,[R0, #+956]
   \   000005C4   2C20C1E5           STRB     R2,[R1, #+44]
    227            MESSAGEWIN_GCHAT_BGCOLOR_1.g = color_cfg [957];
   \   000005C8   BD23D0E5           LDRB     R2,[R0, #+957]
   \   000005CC   2D20C1E5           STRB     R2,[R1, #+45]
    228            MESSAGEWIN_GCHAT_BGCOLOR_1.b = color_cfg [958];
   \   000005D0   BE23D0E5           LDRB     R2,[R0, #+958]
   \   000005D4   2E20C1E5           STRB     R2,[R1, #+46]
    229            MESSAGEWIN_GCHAT_BGCOLOR_1.a = color_cfg [959];
   \   000005D8   BF23D0E5           LDRB     R2,[R0, #+959]
   \   000005DC   2F20C1E5           STRB     R2,[R1, #+47]
    230            
    231            MESSAGEWIN_GCHAT_BGCOLOR_2.r = color_cfg [1004];
   \   000005E0   EC23D0E5           LDRB     R2,[R0, #+1004]
   \   000005E4   3420C1E5           STRB     R2,[R1, #+52]
    232            MESSAGEWIN_GCHAT_BGCOLOR_2.g = color_cfg [1005];
   \   000005E8   ED23D0E5           LDRB     R2,[R0, #+1005]
   \   000005EC   3520C1E5           STRB     R2,[R1, #+53]
    233            MESSAGEWIN_GCHAT_BGCOLOR_2.b = color_cfg [1006];
   \   000005F0   EE23D0E5           LDRB     R2,[R0, #+1006]
   \   000005F4   3620C1E5           STRB     R2,[R1, #+54]
    234            MESSAGEWIN_GCHAT_BGCOLOR_2.a = color_cfg [1007];
   \   000005F8   EF23D0E5           LDRB     R2,[R0, #+1007]
   \   000005FC   3720C1E5           STRB     R2,[R1, #+55]
    235            
    236            MESSAGEWIN_SYS_BGCOLOR.r = color_cfg [1052];
   \   00000600   1C24D0E5           LDRB     R2,[R0, #+1052]
   \   00000604   3820C1E5           STRB     R2,[R1, #+56]
    237            MESSAGEWIN_SYS_BGCOLOR.g = color_cfg [1053];
   \   00000608   1D24D0E5           LDRB     R2,[R0, #+1053]
   \   0000060C   3920C1E5           STRB     R2,[R1, #+57]
    238            MESSAGEWIN_SYS_BGCOLOR.b = color_cfg [1054];
   \   00000610   1E24D0E5           LDRB     R2,[R0, #+1054]
   \   00000614   3A20C1E5           STRB     R2,[R1, #+58]
    239            MESSAGEWIN_SYS_BGCOLOR.a = color_cfg [1055];
   \   00000618   1F24D0E5           LDRB     R2,[R0, #+1055]
   \   0000061C   3B20C1E5           STRB     R2,[R1, #+59]
    240            
    241            MESSAGEWIN_STATUS_BGCOLOR.r = color_cfg [1100];
   \   00000620   4C24D0E5           LDRB     R2,[R0, #+1100]
   \   00000624   3C20C1E5           STRB     R2,[R1, #+60]
    242            MESSAGEWIN_STATUS_BGCOLOR.g = color_cfg [1101];
   \   00000628   4D24D0E5           LDRB     R2,[R0, #+1101]
   \   0000062C   3D20C1E5           STRB     R2,[R1, #+61]
    243            MESSAGEWIN_STATUS_BGCOLOR.b = color_cfg [1102];
   \   00000630   4E24D0E5           LDRB     R2,[R0, #+1102]
   \   00000634   3E20C1E5           STRB     R2,[R1, #+62]
    244            MESSAGEWIN_STATUS_BGCOLOR.a = color_cfg [1103];
   \   00000638   4F24D0E5           LDRB     R2,[R0, #+1103]
   \   0000063C   3F20C1E5           STRB     R2,[R1, #+63]
    245            
    246            MESSAGEWIN_CHAT_FONT.r = color_cfg [1148];
   \   00000640   7C24D0E5           LDRB     R2,[R0, #+1148]
   \   00000644   4020C1E5           STRB     R2,[R1, #+64]
    247            MESSAGEWIN_CHAT_FONT.g = color_cfg [1149];
   \   00000648   7D24D0E5           LDRB     R2,[R0, #+1149]
   \   0000064C   4120C1E5           STRB     R2,[R1, #+65]
    248            MESSAGEWIN_CHAT_FONT.b = color_cfg [1150];
   \   00000650   7E24D0E5           LDRB     R2,[R0, #+1150]
   \   00000654   4220C1E5           STRB     R2,[R1, #+66]
    249            MESSAGEWIN_CHAT_FONT.a = color_cfg [1151];  
   \   00000658   7F04D0E5           LDRB     R0,[R0, #+1151]
   \   0000065C   4300C1E5           STRB     R0,[R1, #+67]
    250          }
   \   00000660   3000BDE8           POP      {R4,R5}
   \   00000664   1EFF2FE1           BX       LR               ;; return
   \                     ??InitColor_0:
   \   00000668   ........           DC32     OnlineColor
   \   0000066C   ........           DC32     PRES_COLORS
   \   00000670   ........           DC32     ChatColor
   \   00000674   ........           DC32     AwayColor
   \   00000678   ........           DC32     XAColor
   \   0000067C   ........           DC32     DNDColor
   \   00000680   ........           DC32     InvisibleColor
   \   00000684   ........           DC32     OfflineColor
   \   00000688   ........           DC32     ErrorColor
   \   0000068C   ........           DC32     SubscribeColor
   \   00000690   ........           DC32     SubscribedColor
   \   00000694   ........           DC32     UnsubscribeColor
   \   00000698   ........           DC32     UnsubscribedColor
    251          
    252          /* 
    253            Чтение конфига цветов
    254            В параметр нужно передать имя нужного конфига
    255          */

   \                                 In segment CODE, align 4, keep-with-next
    256          int ReadColor(const char * fname)
    257          {
   \                     ReadColor:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
    258            unsigned int io_error = NULL;
    259            int hFile;
    260            FSTATS fstat;
    261            
    262            char * color_file = (char *)malloc(strlen(color_PATH) + strlen(fname) + 16);
   \   00000004   ........           LDR      R6,??DataTable5  ;; color_PATH
   \   00000008   2CD04DE2           SUB      SP,SP,#+44
   \   0000000C   0050A0E1           MOV      R5,R0
   \   00000010   0010A0E3           MOV      R1,#+0
   \   00000014   00108DE5           STR      R1,[SP, #+0]
   \   00000018   0600A0E1           MOV      R0,R6
   \   0000001C   1B0000EF           SWI      +27
   \   00000020   0040A0E1           MOV      R4,R0
   \   00000024   0500A0E1           MOV      R0,R5
   \   00000028   1B0000EF           SWI      +27
   \   0000002C   040080E0           ADD      R0,R0,R4
   \   00000030   100080E2           ADD      R0,R0,#+16
   \   00000034   140000EF           SWI      +20
   \   00000038   0040A0E1           MOV      R4,R0
    263            strcpy(color_file, color_PATH);
   \   0000003C   0610A0E1           MOV      R1,R6
   \   00000040   1A0000EF           SWI      +26
    264            strcat(color_file, fname);
   \   00000044   0510A0E1           MOV      R1,R5
   \   00000048   0400A0E1           MOV      R0,R4
   \   0000004C   170000EF           SWI      +23
    265            strcat(color_file, ".bcfg");
   \   00000050   C0109FE5           LDR      R1,??ReadColor_0  ;; `?<Constant ".bcfg">`
   \   00000054   0400A0E1           MOV      R0,R4
   \   00000058   170000EF           SWI      +23
    266            
    267            if (GetFileStats(color_file, &fstat, &io_error) != -1)
   \   0000005C   0060E0E3           MVN      R6,#+0
   \   00000060   0D20A0E1           MOV      R2,SP
   \   00000064   04108DE2           ADD      R1,SP,#+4
   \   00000068   0400A0E1           MOV      R0,R4
   \   0000006C   840000EF           SWI      +132
   \   00000070   060050E1           CMP      R0,R6
   \   00000074   2200000A           BEQ      ??ReadColor_1
    268            {
    269              if (!io_error)
   \   00000078   00009DE5           LDR      R0,[SP, #+0]
   \   0000007C   000050E3           CMP      R0,#+0
   \   00000080   1F00001A           BNE      ??ReadColor_1
    270              {
    271                if ((hFile = fopen(color_file, A_ReadOnly + A_BIN, P_READ, &io_error)) != -1)
   \   00000084   0D30A0E1           MOV      R3,SP
   \   00000088   8020A0E3           MOV      R2,#+128
   \   0000008C   801CA0E3           MOV      R1,#+32768
   \   00000090   0400A0E1           MOV      R0,R4
   \   00000094   0A0000EF           SWI      +10
   \   00000098   0050A0E1           MOV      R5,R0
   \   0000009C   060055E1           CMP      R5,R6
   \   000000A0   1700000A           BEQ      ??ReadColor_1
    272                {
    273                  if (!io_error)
   \   000000A4   00009DE5           LDR      R0,[SP, #+0]
   \   000000A8   000050E3           CMP      R0,#+0
   \   000000AC   1400001A           BNE      ??ReadColor_1
    274                  {
    275                    char * buf = (char *)malloc(fstat.size + 1);
   \   000000B0   08009DE5           LDR      R0,[SP, #+8]
   \   000000B4   010080E2           ADD      R0,R0,#+1
   \   000000B8   140000EF           SWI      +20
    276                    fread(hFile, buf, fstat.size, &io_error);
   \   000000BC   08209DE5           LDR      R2,[SP, #+8]
   \   000000C0   0060A0E1           MOV      R6,R0
   \   000000C4   0D30A0E1           MOV      R3,SP
   \   000000C8   0610A0E1           MOV      R1,R6
   \   000000CC   0500A0E1           MOV      R0,R5
   \   000000D0   0B0000EF           SWI      +11
    277                    fclose(hFile, &io_error);
   \   000000D4   0D10A0E1           MOV      R1,SP
   \   000000D8   0500A0E1           MOV      R0,R5
   \   000000DC   0D0000EF           SWI      +13
    278                    InitColor(buf);
   \   000000E0   0600A0E1           MOV      R0,R6
   \   000000E4   ........           BL       InitColor
    279                    mfree(buf);
   \   000000E8   0600A0E1           MOV      R0,R6
   \   000000EC   150000EF           SWI      +21
    280                    mfree(color_file);
   \   000000F0   0400A0E1           MOV      R0,R4
   \   000000F4   150000EF           SWI      +21
    281                    return 1;
   \   000000F8   0100A0E3           MOV      R0,#+1
   \   000000FC   2CD08DE2           ADD      SP,SP,#+44
   \   00000100   7080BDE8           POP      {R4-R6,PC}
    282                  }
    283                }
    284              }
    285            }
    286            mfree(color_file);
   \                     ??ReadColor_1:
   \   00000104   0400A0E1           MOV      R0,R4
   \   00000108   150000EF           SWI      +21
    287            return 0;
   \   0000010C   0000A0E3           MOV      R0,#+0
   \   00000110   2CD08DE2           ADD      SP,SP,#+44
   \   00000114   7080BDE8           POP      {R4-R6,PC}       ;; return
   \                     ??ReadColor_0:
   \   00000118   ........           DC32     `?<Constant ".bcfg">`
    288          }
    289          
    290          /* Меню выбора цветовой схемы */
    291          typedef struct
    292          {
    293            void * next;
    294            char cfgname[64];
    295            char fullpath[128];
    296          }SEL_COLOR;
    297          

   \                                 In segment CODE, align 4, keep-with-next
    298          int select_color_menu_onkey(void *gui, GUI_MSG *msg)
    299          {
   \                     select_color_menu_onkey:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0050A0E1           MOV      R5,R0
   \   00000008   0160A0E1           MOV      R6,R1
    300            SEL_COLOR * sbtop = MenuGetUserPointer(gui);
   \   0000000C   E00100EF           SWI      +480
   \   00000010   0040A0E1           MOV      R4,R0
    301            if (msg->keys==0x3D)
   \   00000014   F200D6E1           LDRSH    R0,[R6, #+2]
   \   00000018   3D0050E3           CMP      R0,#+61
   \   0000001C   1900001A           BNE      ??select_color_menu_onkey_0
    302            {
    303              int i=GetCurMenuItem(gui);
   \   00000020   0500A0E1           MOV      R0,R5
   \   00000024   8F0100EF           SWI      +399
    304              for (int n = 0; n != i; n ++)
   \   00000028   0010A0E3           MOV      R1,#+0
   \   0000002C   000050E3           CMP      R0,#+0
   \   00000030   0300000A           BEQ      ??select_color_menu_onkey_1
    305                sbtop = sbtop->next;
   \                     ??select_color_menu_onkey_2:
   \   00000034   004094E5           LDR      R4,[R4, #+0]
   \   00000038   011081E2           ADD      R1,R1,#+1
   \   0000003C   000051E1           CMP      R1,R0
   \   00000040   FBFFFF1A           BNE      ??select_color_menu_onkey_2
    306              if (sbtop)
   \                     ??select_color_menu_onkey_1:
   \   00000044   000054E3           CMP      R4,#+0
   \   00000048   0E00000A           BEQ      ??select_color_menu_onkey_0
    307              {
    308                if (cur_color_name) mfree(cur_color_name);
   \   0000004C   ........           LDR      R7,??DataTable4  ;; cur_color_name
   \   00000050   000097E5           LDR      R0,[R7, #+0]
   \   00000054   000050E3           CMP      R0,#+0
   \   00000058   0000000A           BEQ      ??select_color_menu_onkey_3
   \   0000005C   150000EF           SWI      +21
    309                cur_color_name = (char *)malloc(32);
   \                     ??select_color_menu_onkey_3:
   \   00000060   2000A0E3           MOV      R0,#+32
   \   00000064   140000EF           SWI      +20
   \   00000068   000087E5           STR      R0,[R7, #+0]
    310                strcpy(cur_color_name, sbtop->cfgname);
   \   0000006C   041084E2           ADD      R1,R4,#+4
   \   00000070   1A0000EF           SWI      +26
    311                if (ReadColor(cur_color_name))
   \   00000074   000097E5           LDR      R0,[R7, #+0]
   \   00000078   ........           BL       ReadColor
   \   0000007C   000050E3           CMP      R0,#+0
    312                  return (1);
   \   00000080   0100A013           MOVNE    R0,#+1
   \   00000084   F080BD18           POPNE    {R4-R7,PC}
    313              }
    314            }
    315            if (msg->keys==0x18)
   \                     ??select_color_menu_onkey_0:
   \   00000088   F200D6E1           LDRSH    R0,[R6, #+2]
   \   0000008C   180050E3           CMP      R0,#+24
   \   00000090   1900001A           BNE      ??select_color_menu_onkey_4
    316            {
    317              int i=GetCurMenuItem(gui);
   \   00000094   0500A0E1           MOV      R0,R5
   \   00000098   8F0100EF           SWI      +399
    318              for (int n = 0; n != i; n ++)
   \   0000009C   0010A0E3           MOV      R1,#+0
   \   000000A0   000050E3           CMP      R0,#+0
   \   000000A4   0300000A           BEQ      ??select_color_menu_onkey_5
    319                sbtop = sbtop->next;
   \                     ??select_color_menu_onkey_6:
   \   000000A8   004094E5           LDR      R4,[R4, #+0]
   \   000000AC   011081E2           ADD      R1,R1,#+1
   \   000000B0   000051E1           CMP      R1,R0
   \   000000B4   FBFFFF1A           BNE      ??select_color_menu_onkey_6
    320              if (sbtop)
   \                     ??select_color_menu_onkey_5:
   \   000000B8   000054E3           CMP      R4,#+0
   \   000000BC   0E00000A           BEQ      ??select_color_menu_onkey_4
    321              {
    322                int len = strlen(sbtop->fullpath);
   \   000000C0   440084E2           ADD      R0,R4,#+68
   \   000000C4   1B0000EF           SWI      +27
   \   000000C8   0050A0E1           MOV      R5,R0
    323                WSHDR * ws = AllocWS(len + 4);
   \   000000CC   040085E2           ADD      R0,R5,#+4
   \   000000D0   250100EF           SWI      +293
   \   000000D4   0060A0E1           MOV      R6,R0
    324                str_2ws(ws, sbtop->fullpath, len);
   \   000000D8   0520A0E1           MOV      R2,R5
   \   000000DC   441084E2           ADD      R1,R4,#+68
   \   000000E0   6C0100EF           SWI      +364
    325                ExecuteFile(ws, 0, 0);
   \   000000E4   0020A0E3           MOV      R2,#+0
   \   000000E8   0010A0E3           MOV      R1,#+0
   \   000000EC   0600A0E1           MOV      R0,R6
   \   000000F0   940000EF           SWI      +148
    326                FreeWS(ws);
   \   000000F4   0600A0E1           MOV      R0,R6
   \   000000F8   290100EF           SWI      +297
    327              }
    328            }
    329            return (0);
   \                     ??select_color_menu_onkey_4:
   \   000000FC   0000A0E3           MOV      R0,#+0
   \   00000100   F080BDE8           POP      {R4-R7,PC}       ;; return
    330          }
    331          

   \                                 In segment CODE, align 4, keep-with-next
    332          void select_color_menu_ghook(void *gui, int cmd)
    333          {
   \                     select_color_menu_ghook:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
    334            SEL_COLOR *sbtop = MenuGetUserPointer(gui);
   \   0000000C   E00100EF           SWI      +480
   \   00000010   0060A0E1           MOV      R6,R0
    335            if (cmd == TI_CMD_DESTROY)
   \   00000014   030055E3           CMP      R5,#+3
   \   00000018   0500001A           BNE      ??select_color_menu_ghook_0
    336            {
    337              while(sbtop)
   \                     ??select_color_menu_ghook_1:
   \   0000001C   000056E3           CMP      R6,#+0
   \   00000020   7080BD08           POPEQ    {R4-R6,PC}
    338              {
    339                SEL_COLOR *sb = sbtop;
   \   00000024   0600A0E1           MOV      R0,R6
    340                sbtop = sbtop->next;
   \   00000028   006096E5           LDR      R6,[R6, #+0]
    341                mfree(sb);
   \   0000002C   150000EF           SWI      +21
   \   00000030   F9FFFFEA           B        ??select_color_menu_ghook_1
    342              }    
    343            }
    344            if (cmd == TI_CMD_CREATE)
   \                     ??select_color_menu_ghook_0:
   \   00000034   020055E3           CMP      R5,#+2
   \   00000038   0F00001A           BNE      ??select_color_menu_ghook_2
    345            {
    346              int cur_it=0;
   \   0000003C   0050A0E3           MOV      R5,#+0
    347              SEL_COLOR *sb = sbtop;
   \   00000040   010000EA           B        ??select_color_menu_ghook_3
    348              while(sb)
    349              {
    350                if(!strcmp(sb->cfgname, cur_color_name)) break;
    351                sb = sb->next;
   \                     ??select_color_menu_ghook_4:
   \   00000044   006096E5           LDR      R6,[R6, #+0]
    352                cur_it++;
   \   00000048   015085E2           ADD      R5,R5,#+1
   \                     ??select_color_menu_ghook_3:
   \   0000004C   000056E3           CMP      R6,#+0
   \   00000050   0500000A           BEQ      ??select_color_menu_ghook_5
   \   00000054   ........           LDR      R0,??DataTable4  ;; cur_color_name
   \   00000058   001090E5           LDR      R1,[R0, #+0]
   \   0000005C   040086E2           ADD      R0,R6,#+4
   \   00000060   190000EF           SWI      +25
   \   00000064   000050E3           CMP      R0,#+0
   \   00000068   F5FFFF1A           BNE      ??select_color_menu_ghook_4
    353              }
    354              SetCursorToMenuItem(gui,cur_it);
   \                     ??select_color_menu_ghook_5:
   \   0000006C   0510A0E1           MOV      R1,R5
   \   00000070   0400A0E1           MOV      R0,R4
   \   00000074   C40100EF           SWI      +452
   \   00000078   7080BDE8           POP      {R4-R6,PC}
    355            }
    356            if (cmd == TI_CMD_FOCUS)
   \                     ??select_color_menu_ghook_2:
   \   0000007C   0A0055E3           CMP      R5,#+10
   \   00000080   7080BD18           POPNE    {R4-R6,PC}
    357            {
    358              DisableIDLETMR();
   \   00000084   7F0100EF           SWI      +383
    359            }
    360          }
   \   00000088   7080BDE8           POP      {R4-R6,PC}       ;; return
    361          
    362          extern int icon_array[2];
    363          

   \                                 In segment CODE, align 4, keep-with-next
    364          void select_color_menu_iconhndl(void *gui, int cur_item, void *user_pointer)
    365          {
   \                     select_color_menu_iconhndl:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0290A0E1           MOV      R9,R2
    366            SEL_COLOR * sbtop = user_pointer;
    367            WSHDR * ws;
    368            void * item = AllocMenuItem(gui);
   \   00000010   970100EF           SWI      +407
   \   00000014   0060A0E1           MOV      R6,R0
    369            for (int n = 0; n != cur_item; n ++)
   \   00000018   0000A0E3           MOV      R0,#+0
   \   0000001C   000055E3           CMP      R5,#+0
   \   00000020   0300000A           BEQ      ??select_color_menu_iconhndl_0
    370              sbtop = sbtop->next;
   \                     ??select_color_menu_iconhndl_1:
   \   00000024   009099E5           LDR      R9,[R9, #+0]
   \   00000028   010080E2           ADD      R0,R0,#+1
   \   0000002C   050050E1           CMP      R0,R5
   \   00000030   FBFFFF1A           BNE      ??select_color_menu_iconhndl_1
    371            if (sbtop)
   \                     ??select_color_menu_iconhndl_0:
   \   00000034   ........           LDR      R7,??DataTable6  ;; icon_array
   \   00000038   000059E3           CMP      R9,#+0
   \   0000003C   1100000A           BEQ      ??select_color_menu_iconhndl_2
    372            {
    373              int len = strlen(sbtop->cfgname);
   \   00000040   040089E2           ADD      R0,R9,#+4
   \   00000044   1B0000EF           SWI      +27
   \   00000048   00A0A0E1           MOV      R10,R0
    374              ws = AllocMenuWS(gui, len + 4);
   \   0000004C   04108AE2           ADD      R1,R10,#+4
   \   00000050   0400A0E1           MOV      R0,R4
   \   00000054   980100EF           SWI      +408
   \   00000058   0080A0E1           MOV      R8,R0
    375              str_2ws(ws, sbtop->cfgname, len);
   \   0000005C   0A20A0E1           MOV      R2,R10
   \   00000060   041089E2           ADD      R1,R9,#+4
   \   00000064   6C0100EF           SWI      +364
    376              SetMenuItemIconArray(gui, item, icon_array + (strcmp(sbtop->cfgname, cur_color_name)?1:0));
   \   00000068   ........           LDR      R0,??DataTable4  ;; cur_color_name
   \   0000006C   001090E5           LDR      R1,[R0, #+0]
   \   00000070   040089E2           ADD      R0,R9,#+4
   \   00000074   190000EF           SWI      +25
   \   00000078   000050E3           CMP      R0,#+0
   \   0000007C   0100A013           MOVNE    R0,#+1
   \   00000080   002187E0           ADD      R2,R7,R0, LSL #+2
   \   00000084   060000EA           B        ??select_color_menu_iconhndl_3
    377            }
    378            else
    379            {
    380              ws = AllocMenuWS(gui, 10);
   \                     ??select_color_menu_iconhndl_2:
   \   00000088   0A10A0E3           MOV      R1,#+10
   \   0000008C   0400A0E1           MOV      R0,R4
   \   00000090   980100EF           SWI      +408
    381              ascii2ws(ws, "Error");
   \   00000094   2C109FE5           LDR      R1,??select_color_menu_iconhndl_4  ;; `?<Constant "Error">`
   \   00000098   0080A0E1           MOV      R8,R0
   \   0000009C   ........           _BLF     ascii2ws,??ascii2ws??rA
    382              SetMenuItemIconArray(gui, item, icon_array);
   \   000000A0   0720A0E1           MOV      R2,R7
   \                     ??select_color_menu_iconhndl_3:
   \   000000A4   0610A0E1           MOV      R1,R6
   \   000000A8   0400A0E1           MOV      R0,R4
   \   000000AC   990100EF           SWI      +409
    383            }
    384            SetMenuItemText(gui, item, ws, cur_item);
   \   000000B0   0530A0E1           MOV      R3,R5
   \   000000B4   0820A0E1           MOV      R2,R8
   \   000000B8   0610A0E1           MOV      R1,R6
   \   000000BC   0400A0E1           MOV      R0,R4
   \   000000C0   9A0100EF           SWI      +410
    385          }
   \   000000C4   F087BDE8           POP      {R4-R10,PC}      ;; return
   \                     ??select_color_menu_iconhndl_4:
   \   000000C8   ........           DC32     `?<Constant "Error">`
    386          

   \                                 In segment DATA_I, align 4, align-sorted
    387          int select_color_menu_softkeys[]={0,1,2};
   \                     select_color_menu_softkeys:
   \   00000000                      DS8 12
   \   0000000C                      REQUIRE `?<Initializer for select_color_menu_softkeys>`
    388          

   \                                 In segment DATA_I, align 4, align-sorted
    389          SOFTKEY_DESC select_color_menu_sk[]=
   \                     select_color_menu_sk:
   \   00000000                      DS8 24
   \   00000018                      REQUIRE `?<Initializer for select_color_menu_sk>`
    390          {
    391            {0x0018,0x0000,(int)LG_EDIT},
    392            {0x0001,0x0000,(int)LG_BACK},
    393            {0x003D,0x0000,(int)LGP_DOIT_PIC}
    394          };
    395          

   \                                 In segment DATA_I, align 4, align-sorted
    396          SOFTKEYSTAB select_color_menu_skt=
   \                     select_color_menu_skt:
   \   00000000                      DS8 8
   \   00000008                      REQUIRE `?<Initializer for select_color_menu_skt>`
    397          {
    398            select_color_menu_sk,0
    399          };
    400          

   \                                 In segment DATA_I, align 4, align-sorted
    401          HEADER_DESC select_color_menu_header = {0, 0, 0, 0, NULL, (int)LG_COLOR, LGP_NULL};
   \                     select_color_menu_header:
   \   00000000                      DS8 20
   \   00000014                      REQUIRE `?<Initializer for select_color_menu_header>`
    402          
    403          MENU_DESC select_color_menu_struct=
   \                     select_color_menu_struct:
   \   00000014                      DS8 44
   \   00000040                      REQUIRE `?<Initializer for select_color_menu_struct>`
    404          {
    405            8, select_color_menu_onkey, select_color_menu_ghook, NULL,
    406            select_color_menu_softkeys,
    407            &select_color_menu_skt,
    408            0x11,
    409            select_color_menu_iconhndl,
    410            NULL,   //Items
    411            NULL,   //Procs
    412            0   //n
    413          };
    414          

   \                                 In segment CODE, align 4, keep-with-next
    415          void ShowSelectColorMenu()
    416          {
   \                     ShowSelectColorMenu:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
    417            unsigned int err;
    418            DIR_ENTRY de;
    419            SEL_COLOR *sbtop = NULL;
    420            SEL_COLOR *sb;
    421            int n_bcfg=0;
    422            char str[128];
    423            strcpy(str, color_PATH);
   \   00000004   ........           LDR      R6,??DataTable5  ;; color_PATH
   \   00000008   F3DF4DE2           SUB      SP,SP,#+972
   \   0000000C   0040A0E3           MOV      R4,#+0
   \   00000010   00408DE5           STR      R4,[SP, #+0]
   \   00000014   0050A0E3           MOV      R5,#+0
   \   00000018   0610A0E1           MOV      R1,R6
   \   0000001C   D30F8DE2           ADD      R0,SP,#+844
   \   00000020   1A0000EF           SWI      +26
    424            strcat(str, "*.bcfg");
   \   00000024   5C119FE5           LDR      R1,??ShowSelectColorMenu_0  ;; `?<Constant "*.bcfg">`
   \   00000028   D30F8DE2           ADD      R0,SP,#+844
   \   0000002C   170000EF           SWI      +23
    425            if (FindFirstFile(&de, str, &err))
   \   00000030   04208DE2           ADD      R2,SP,#+4
   \   00000034   D31F8DE2           ADD      R1,SP,#+844
   \   00000038   08008DE2           ADD      R0,SP,#+8
   \   0000003C   6B0000EF           SWI      +107
   \   00000040   000050E3           CMP      R0,#+0
   \   00000044   2C00000A           BEQ      ??ShowSelectColorMenu_1
    426            {
    427              do
    428              {
    429                if (!(de.file_attr & FA_DIRECTORY))
   \                     ??ShowSelectColorMenu_2:
   \   00000048   F403DDE1           LDRSH    R0,[SP, #+52]
   \   0000004C   100010E3           TST      R0,#0x10
   \   00000050   2400001A           BNE      ??ShowSelectColorMenu_3
    430                {
    431                  sb = malloc(sizeof(SEL_COLOR));
   \   00000054   C400A0E3           MOV      R0,#+196
   \   00000058   140000EF           SWI      +20
   \   0000005C   0070A0E1           MOV      R7,R0
    432                  strcpy(sb->fullpath, color_PATH);
   \   00000060   0610A0E1           MOV      R1,R6
   \   00000064   440087E2           ADD      R0,R7,#+68
   \   00000068   1A0000EF           SWI      +26
    433                  strcat(sb->fullpath, de.file_name);
   \   0000006C   BD108DE2           ADD      R1,SP,#+189
   \   00000070   440087E2           ADD      R0,R7,#+68
   \   00000074   170000EF           SWI      +23
    434                  strcpy(sb->cfgname, de.file_name);
   \   00000078   BD108DE2           ADD      R1,SP,#+189
   \   0000007C   040087E2           ADD      R0,R7,#+4
   \   00000080   1A0000EF           SWI      +26
    435                  sb->cfgname[strlen(de.file_name) - 5] = NULL;
   \   00000084   BD008DE2           ADD      R0,SP,#+189
   \   00000088   1B0000EF           SWI      +27
   \   0000008C   050040E2           SUB      R0,R0,#+5
   \   00000090   070080E0           ADD      R0,R0,R7
   \   00000094   0440C0E5           STRB     R4,[R0, #+4]
    436                  sb->next = NULL;
   \   00000098   004087E5           STR      R4,[R7, #+0]
    437                  if (sbtop)
   \   0000009C   00009DE5           LDR      R0,[SP, #+0]
   \   000000A0   000050E3           CMP      R0,#+0
   \   000000A4   0D00000A           BEQ      ??ShowSelectColorMenu_4
    438                  {
    439                    SEL_COLOR * sbr, * sbt;
    440                    sbr = (SEL_COLOR *)&sbtop;
   \   000000A8   0D80A0E1           MOV      R8,SP
    441                    sbt = sbtop;
   \   000000AC   0090A0E1           MOV      R9,R0
    442                    while(stricmp(sbt->cfgname, sb->cfgname) < 0)
   \                     ??ShowSelectColorMenu_5:
   \   000000B0   041087E2           ADD      R1,R7,#+4
   \   000000B4   040089E2           ADD      R0,R9,#+4
   \   000000B8   ........           _BLF     stricmp,??stricmp??rA
   \   000000BC   000050E3           CMP      R0,#+0
   \   000000C0   0300005A           BPL      ??ShowSelectColorMenu_6
    443                    {
    444                      sbr = sbt;
   \   000000C4   0980A0E1           MOV      R8,R9
    445                      sbt = sbt->next;
   \   000000C8   009099E5           LDR      R9,[R9, #+0]
    446                      if (!sbt) break;
   \   000000CC   000059E3           CMP      R9,#+0
   \   000000D0   F6FFFF1A           BNE      ??ShowSelectColorMenu_5
    447                    }
    448                    sb->next = sbt;
   \                     ??ShowSelectColorMenu_6:
   \   000000D4   009087E5           STR      R9,[R7, #+0]
    449                    sbr->next = sb;
   \   000000D8   007088E5           STR      R7,[R8, #+0]
   \   000000DC   000000EA           B        ??ShowSelectColorMenu_7
    450                  }
    451                  else
    452                  {
    453                    sbtop = sb;
   \                     ??ShowSelectColorMenu_4:
   \   000000E0   00708DE5           STR      R7,[SP, #+0]
    454                  }
    455                  n_bcfg++;
   \                     ??ShowSelectColorMenu_7:
   \   000000E4   015085E2           ADD      R5,R5,#+1
    456                }
    457              }
    458              while(FindNextFile(&de,&err));
   \                     ??ShowSelectColorMenu_3:
   \   000000E8   04108DE2           ADD      R1,SP,#+4
   \   000000EC   08008DE2           ADD      R0,SP,#+8
   \   000000F0   6C0000EF           SWI      +108
   \   000000F4   000050E3           CMP      R0,#+0
   \   000000F8   D2FFFF1A           BNE      ??ShowSelectColorMenu_2
    459            }
    460            FindClose(&de,&err);
    461            icon_array[0]=GetPicNByUnicodeSymbol(CBOX_CHECKED);
   \                     ??ShowSelectColorMenu_1:
   \   000000FC   ........           LDR      R6,??DataTable6  ;; icon_array
   \   00000100   04108DE2           ADD      R1,SP,#+4
   \   00000104   08008DE2           ADD      R0,SP,#+8
   \   00000108   6D0000EF           SWI      +109
   \   0000010C   1600A0E3           MOV      R0,#+22
   \   00000110   E10C80E3           ORR      R0,R0,#0xE100
   \   00000114   E40100EF           SWI      +484
   \   00000118   000086E5           STR      R0,[R6, #+0]
    462            icon_array[1]=GetPicNByUnicodeSymbol(CBOX_UNCHECKED);
   \   0000011C   1700A0E3           MOV      R0,#+23
   \   00000120   E10C80E3           ORR      R0,R0,#0xE100
   \   00000124   E40100EF           SWI      +484
   \   00000128   040086E5           STR      R0,[R6, #+4]
    463            patch_header(&select_color_menu_header);
   \   0000012C   58609FE5           LDR      R6,??ShowSelectColorMenu_0+0x4  ;; select_color_menu_header
   \   00000130   1800A0E3           MOV      R0,#+24
   \   00000134   B040C6E1           STRH     R4,[R6, #+0]
   \   00000138   B200C6E1           STRH     R0,[R6, #+2]
   \   0000013C   888100EF           SWI      +33160
   \   00000140   010040E2           SUB      R0,R0,#+1
   \   00000144   B400C6E1           STRH     R0,[R6, #+4]
   \   00000148   8A8100EF           SWI      +33162
   \   0000014C   180080E2           ADD      R0,R0,#+24
   \   00000150   B600C6E1           STRH     R0,[R6, #+6]
    464            CreateMenu(0, 0, &select_color_menu_struct, &select_color_menu_header, 0, n_bcfg, sbtop, 0);
   \   00000154   0000A0E3           MOV      R0,#+0
   \   00000158   01002DE9           PUSH     {R0}
   \   0000015C   04009DE5           LDR      R0,[SP, #+4]
   \   00000160   0630A0E1           MOV      R3,R6
   \   00000164   01002DE9           PUSH     {R0}
   \   00000168   20002DE9           PUSH     {R5}
   \   0000016C   142086E2           ADD      R2,R6,#+20
   \   00000170   0400A0E1           MOV      R0,R4
   \   00000174   01002DE9           PUSH     {R0}
   \   00000178   0010A0E1           MOV      R1,R0
   \   0000017C   520100EF           SWI      +338
    465          }
   \   00000180   F7DF8DE2           ADD      SP,SP,#+988
   \   00000184   F083BDE8           POP      {R4-R9,PC}       ;; return
   \                     ??ShowSelectColorMenu_0:
   \   00000188   ........           DC32     `?<Constant "*.bcfg">`
   \   0000018C   ........           DC32     select_color_menu_header

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   ........           DC32     cur_color_name

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable5:
   \   00000000   ........           DC32     color_PATH

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable6:
   \   00000000   ........           DC32     icon_array

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for MAINFONT_NOT_CONNECTED>`:
   \   00000000   C8C8C864           DC8 200, 200, 200, 100

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for select_color_menu_softkeys>`:
   \   00000000   000000000100       DC32 0, 1, 2
   \              000002000000

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for select_color_menu_sk>`:
   \   00000000   18000000           DC16 24, 0
   \   00000004   ........           DC32 `?<Constant "\\310\\347\\354\\345\\355\\350\\362\\374">`
   \   00000008   01000000           DC16 1, 0
   \   0000000C   ........           DC32 `?<Constant "\\315\\340\\347\\340\\344">`
   \   00000010   3D000000           DC16 61, 0
   \   00000014   FBC0FF7F           DC32 2147467515

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for select_color_menu_skt>`:
   \   00000000   ........0000       DC32 select_color_menu_sk, 0
   \              0000        

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for select_color_menu_header>`:
   \   00000000   000000000000       DC16 0, 0, 0, 0
   \              0000        
   \   00000008   00000000....       DC32 0H, `?<Constant "\\326\\342\\345\\362\\340">`, 2147483647
   \              ....FFFFFF7F
   \                     `?<Initializer for select_color_menu_struct>`:
   \   00000014   08000000....       DC32 8, select_color_menu_onkey, select_color_menu_ghook, 0H
   \              ............
   \              00000000    
   \   00000024   ............       DC32 select_color_menu_softkeys, select_color_menu_skt, 17
   \              ....11000000
   \   00000030   ........0000       DC32 select_color_menu_iconhndl, 0H, 0H, 0
   \              000000000000
   \              00000000    

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "*.bcfg">`:
   \   00000000   2A2E62636667       DC8 "*.bcfg"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\310\\347\\354\\345\\355\\350\\362\\374">`:
   \   00000000   C8E7ECE5EDE8       DC8 "\310\347\354\345\355\350\362\374"
   \              F2FC00      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\315\\340\\347\\340\\344">`:
   \   00000000   CDE0E7E0E400       DC8 "\315\340\347\340\344"
   \   00000006   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\326\\342\\345\\362\\340">`:
   \   00000000   D6E2E5F2E000       DC8 "\326\342\345\362\340"
   \   00000006   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant ".bcfg">`:
   \   00000000   2E6263666700       DC8 ".bcfg"
   \   00000006   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Error">`:
   \   00000000   4572726F7200       DC8 "Error"
   \   00000006   0000               DC8 0, 0
    466          // EOL, EOF

   Maximum stack usage in bytes:

     Function                   CSTACK
     --------                   ------
     InitColor                      8
     ReadColor                     60
     ShowSelectColorMenu         1016
     select_color_menu_ghook       16
     select_color_menu_iconhndl    32
     select_color_menu_onkey       20


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     cur_color_name                    4
     MAINFONT_NOT_CONNECTED            4
     OnlineColor                     100
     ChatColor                         4
     AwayColor                         4
     XAColor                           4
     DNDColor                          4
     InvisibleColor                    4
     OfflineColor                      4
     ErrorColor                        4
     SubscribeColor                    4
     SubscribedColor                   4
     UnsubscribeColor                  4
     UnsubscribedColor                 4
     PRES_COLORS                      48
     InitColor                      1692
     ReadColor                       284
     select_color_menu_onkey         260
     select_color_menu_ghook         140
     select_color_menu_iconhndl      204
     select_color_menu_softkeys       12
     select_color_menu_sk             24
     select_color_menu_skt             8
     select_color_menu_header         64
     ShowSelectColorMenu             400
     ??DataTable4                      4
     ??DataTable5                      4
     ??DataTable6                      4
     ?<Initializer for MAINFONT_NOT_CONNECTED>
                                       4
     ?<Initializer for select_color_menu_softkeys>
                                      12
     ?<Initializer for select_color_menu_sk>
                                      24
     ?<Initializer for select_color_menu_skt>
                                       8
     ?<Initializer for select_color_menu_header>
                                      64
     ?<Constant "*.bcfg">              8
     ?<Constant "\310\347\354\345\355\350\362\374">
                                      12
     ?<Constant "\315\340\347\340\344">
                                       8
     ?<Constant "\326\342\345\362\340">
                                       8
     ?<Constant ".bcfg">               8
     ?<Constant "Error">               8
      Others                          72

 
 3 040 bytes in segment CODE
    52 bytes in segment DATA_C
   112 bytes in segment DATA_I
   112 bytes in segment DATA_ID
   196 bytes in segment DATA_Z
    24 bytes in segment INITTAB
 
 2 992 bytes of CODE  memory (+ 72 bytes shared)
   164 bytes of CONST memory
   308 bytes of DATA  memory

Errors: none
Warnings: none
