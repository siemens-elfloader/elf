##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION    07/Jul/2010  13:09:21 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  C:\arm\splayer\keys.c                                #
#    Command line    =  C:\arm\splayer\keys.c -D NEWSGOLD -D ELKA -D OBS     #
#                       -lC C:\arm\splayer\Release_ELKA\List\ -o             #
#                       C:\arm\splayer\Release_ELKA\Obj\ -s9 --no_unroll     #
#                       --no_clustering --cpu_mode arm --endian little       #
#                       --cpu ARM926EJ-S --stack_align 4 --interwork -e      #
#                       --fpu None --dlib_config "C:\arm2\Embedded           #
#                       Workbench 4.0 Evaluation\ARM\LIB\dl5tpainl8n.h" -I   #
#                       "C:\arm2\Embedded Workbench 4.0                      #
#                       Evaluation\ARM\INC\" --inline_threshold=2            #
#    List file       =  C:\arm\splayer\Release_ELKA\List\keys.lst            #
#    Object file     =  C:\arm\splayer\Release_ELKA\Obj\keys.r79             #
#                                                                            #
#                                                                            #
##############################################################################

C:\arm\splayer\keys.c
      1          #include "../inc/swilib.h"
      2          #include "main.h"
      3          #include "mainmenu.h"
      4          #include "playlist.h"
      5          #include "FM.h"
      6          
      7          /*
      8            Будующий конфиг клавиш. Blind007
      9            Респект авторам MC :)
     10            То что в комментариях, не удаляйте, может пригодиться!
     11           */
     12          
     13          extern const unsigned int LOAD_KEYS; // Грузить ли из файла
     14          //extern const char KEYCFG_PATH[];      // Откуда грузятся настройки
     15          extern const char SETS_PATH[];      // Откуда грузятся настройки
     16          
     17          typedef void (*KEY_PROC) ();
     18          
     19          /*
     20          typedef struct {
     21            void (*ondown) ();
     22            void (*onup) ();
     23          } KEY_PROC;
     24          */
     25          
     26          typedef struct {
     27            int key;
     28            char* name;
     29          } KEY_MAP;
     30          

   \                                 In segment DATA_C, align 4, align-sorted
     31          const KEY_MAP keynames[] = {
   \                     keynames:
   \   00000000   01000000....       DC32 1, `?<Constant "lsoft">`, 4, `?<Constant "rsoft">`, 11
   \              ....04000000
   \              ........0B00
   \              0000        
   \   00000014   ........0C00       DC32 `?<Constant "green">`, 12, `?<Constant "red">`, 26
   \              0000........
   \              1A000000    
   \   00000024   ........3B00       DC32 `?<Constant "enter">`, 59, `?<Constant "up">`, 60
   \              0000........
   \              3C000000    
   \   00000034   ........3D00       DC32 `?<Constant "down">`, 61, `?<Constant "left">`, 62
   \              0000........
   \              3E000000    
   \   00000044   ........0D00       DC32 `?<Constant "right">`, 13, `?<Constant "volup">`, 14
   \              0000........
   \              0E000000    
   \   00000054   ........3000       DC32 `?<Constant "voldown">`, 48, `?<Constant "0">`, 49
   \              0000........
   \              31000000    
   \   00000064   ........3200       DC32 `?<Constant "1">`, 50, `?<Constant "2">`, 51, `?<Constant "3">`
   \              0000........
   \              33000000....
   \              ....        
   \   00000078   34000000....       DC32 52, `?<Constant "4">`, 53, `?<Constant "5">`, 54
   \              ....35000000
   \              ........3600
   \              0000        
   \   0000008C   ........3700       DC32 `?<Constant "6">`, 55, `?<Constant "7">`, 56, `?<Constant "8">`
   \              0000........
   \              38000000....
   \              ....        
   \   000000A0   39000000....       DC32 57, `?<Constant "9">`, 42, `?<Constant "*">`, 35
   \              ....2A000000
   \              ........2300
   \              0000        
   \   000000B4   ........0100       DC32 `?<Constant "#">`, 1, `?<Constant "lsoft_lp">`, 4
   \              0000........
   \              04000000    
   \   000000C4   ........0B00       DC32 `?<Constant "rsoft_lp">`, 11, `?<Constant "green_lp">`, 12
   \              0000........
   \              0C000000    
   \   000000D4   ........1A00       DC32 `?<Constant "red_lp">`, 26, `?<Constant "enter_lp">`, 59
   \              0000........
   \              3B000000    
   \   000000E4   ........3C00       DC32 `?<Constant "up_lp">`, 60, `?<Constant "down_lp">`, 61
   \              0000........
   \              3D000000    
   \   000000F4   ........3E00       DC32 `?<Constant "left_lp">`, 62, `?<Constant "right_lp">`, 13
   \              0000........
   \              0D000000    
   \   00000104   ........0E00       DC32 `?<Constant "volup_lp">`, 14, `?<Constant "voldown_lp">`, 48
   \              0000........
   \              30000000    
   \   00000114   ........3100       DC32 `?<Constant "0_lp">`, 49, `?<Constant "1_lp">`, 50
   \              0000........
   \              32000000    
   \   00000124   ........3300       DC32 `?<Constant "2_lp">`, 51, `?<Constant "3_lp">`, 52
   \              0000........
   \              34000000    
   \   00000134   ........3500       DC32 `?<Constant "4_lp">`, 53, `?<Constant "5_lp">`, 54
   \              0000........
   \              36000000    
   \   00000144   ........3700       DC32 `?<Constant "6_lp">`, 55, `?<Constant "7_lp">`, 56
   \              0000........
   \              38000000    
   \   00000154   ........3900       DC32 `?<Constant "8_lp">`, 57, `?<Constant "9_lp">`, 42
   \              0000........
   \              2A000000    
   \   00000164   ........2300       DC32 `?<Constant "*_lp">`, 35, `?<Constant "#_lp">`
   \              0000........
     32           // KEY_DOWN
     33           {LEFT_SOFT, "lsoft"},
     34           {RIGHT_SOFT, "rsoft"},
     35           {GREEN_BUTTON, "green"},
     36           {RED_BUTTON, "red"},
     37           {ENTER_BUTTON, "enter"},
     38           {UP_BUTTON, "up"},
     39           {DOWN_BUTTON, "down"},
     40           {LEFT_BUTTON, "left"},
     41           {RIGHT_BUTTON, "right"},
     42           {VOL_UP_BUTTON, "volup"},
     43           {VOL_DOWN_BUTTON, "voldown"},
     44           {'0', "0"},
     45           {'1', "1"},
     46           {'2', "2"},
     47           {'3', "3"},
     48           {'4', "4"},
     49           {'5', "5"},
     50           {'6', "6"},
     51           {'7', "7"},
     52           {'8', "8"},
     53           {'9', "9"},
     54           {'*', "*"},
     55           {'#', "#"},
     56           // LONG_PRESS
     57           {LEFT_SOFT, "lsoft_lp"},
     58           {RIGHT_SOFT, "rsoft_lp"},
     59           {GREEN_BUTTON, "green_lp"},
     60           {RED_BUTTON, "red_lp"},
     61           {ENTER_BUTTON, "enter_lp"},
     62           {UP_BUTTON, "up_lp"},
     63           {DOWN_BUTTON, "down_lp"},
     64           {LEFT_BUTTON, "left_lp"},
     65           {RIGHT_BUTTON, "right_lp"},
     66           {VOL_UP_BUTTON, "volup_lp"},
     67           {VOL_DOWN_BUTTON, "voldown_lp"},
     68           {'0', "0_lp"},
     69           {'1', "1_lp"},
     70           {'2', "2_lp"},
     71           {'3', "3_lp"},
     72           {'4', "4_lp"},
     73           {'5', "5_lp"},
     74           {'6', "6_lp"},
     75           {'7', "7_lp"},
     76           {'8', "8_lp"},
     77           {'9', "9_lp"},
     78           {'*', "*_lp"},
     79           {'#', "#_lp"}
     80          };
     81          
     82          #define MAX_KEY_DOWN_NUM 22
     83          

   \                                 In segment DATA_I, align 4, align-sorted
     84          KEY_PROC procmap[] = {
   \                     procmap:
   \   00000000                      DS8 188
   \   000000BC                      REQUIRE `?<Initializer for procmap>`
     85            MM_Show,
     86            DoExit,
     87            LoadDefPlaylist,
     88            DoExit,
     89            PlayTrackUnderC,
     90            CTUp,
     91            CTDown,
     92            PrevPL,
     93            NextPL,
     94            VolumeUp,
     95            VolumeDown,
     96            StopAllPlayback,
     97            StartRewindToBegin,
     98            CTUpSix,
     99            StartRewindToEnd,
    100            PrevTrackDown,
    101            TogglePlayback,
    102            NextTrackDown,
    103            CleanPlaylist,
    104            CTDownSix,
    105            ShowFM,
    106            ToggleVolume,
    107            SwitchPlayModeDown,
    108            SetNextPlayed,
    109            NULL,
    110            NULL,
    111            NULL,
    112            NULL,
    113            NULL,
    114            NULL,
    115            NULL,
    116            NULL,
    117            NULL,
    118            NULL,
    119            NULL,
    120            NULL,
    121            NULL,
    122            NULL,
    123            NULL,
    124            NULL,
    125            NULL,
    126            NULL,
    127            NULL,
    128            NULL,
    129            NULL,
    130            NULL,
    131            NULL
    132          };
    133          
    134          #define KEYS_COUNT (sizeof(procmap)/sizeof(procmap[0]))
    135          

   \                                 In segment CODE, align 4, keep-with-next
    136          void DoKey(int key)
    137          {
   \                     DoKey:
   \   00000000   00402DE9           PUSH     {LR}
    138            int startkn;
    139            int finishkn;
    140            if (key>LONG_PRESS_DIFF) {
   \   00000004   410050E3           CMP      R0,#+65
   \   00000008   030000BA           BLT      ??DoKey_0
    141              // Длинное нажатие
    142              startkn = MAX_KEY_DOWN_NUM+1;
   \   0000000C   1710A0E3           MOV      R1,#+23
    143              finishkn = KEYS_COUNT;
   \   00000010   2F20A0E3           MOV      R2,#+47
    144              key -= LONG_PRESS_DIFF;
   \   00000014   400040E2           SUB      R0,R0,#+64
   \   00000018   030000EA           B        ??DoKey_1
    145            } else {
    146              // Короткое нажатие
    147              startkn = 0;
   \                     ??DoKey_0:
   \   0000001C   0010A0E3           MOV      R1,#+0
    148              finishkn = MAX_KEY_DOWN_NUM;
   \   00000020   1620A0E3           MOV      R2,#+22
   \   00000024   000000EA           B        ??DoKey_1
    149            }
    150            for(int cc=startkn;cc<=finishkn;cc++)
   \                     ??DoKey_2:
   \   00000028   011081E2           ADD      R1,R1,#+1
   \                     ??DoKey_1:
   \   0000002C   010052E1           CMP      R2,R1
   \   00000030   0080BDB8           POPLT    {PC}
    151              if(keynames[cc].key==key) {
   \   00000034   ........           LDR      R3,??DataTable2  ;; keynames
   \   00000038   813193E7           LDR      R3,[R3, +R1, LSL #+3]
   \   0000003C   000053E1           CMP      R3,R0
   \   00000040   F8FFFF1A           BNE      ??DoKey_2
   \   00000044   ........           LDR      R0,??DataTable3  ;; procmap
   \   00000048   010190E7           LDR      R0,[R0, +R1, LSL #+2]
   \   0000004C   000050E3           CMP      R0,#+0
   \   00000050   0080BD08           POPEQ    {PC}
    152                if(procmap[cc])procmap[cc]();
   \   00000054   30FF2FE1           BLX      R0
   \   00000058   0080BDE8           POP      {PC}             ;; return
    153                return;
    154              }
    155          }
    156          
    157          typedef struct {
    158            char* name;
    159            KEY_PROC proc;
    160          } PROC_MAP;
    161          

   \                                 In segment DATA_C, align 4, align-sorted
    162          const PROC_MAP keyprocs[] = {
   \                     keyprocs:
   \   00000000   ........0000       DC32 `?<Constant "none">`, 0H, `?<Constant "mainmenu">`, MM_Show
   \              0000........
   \              ........    
   \   00000010   ............       DC32 `?<Constant "exit">`, DoExit, `?<Constant "loaddefpl">`
   \              ............
   \   0000001C   ............       DC32 LoadDefPlaylist, `?<Constant "playtrack">`, PlayTrackUnderC
   \              ............
   \   00000028   ............       DC32 `?<Constant "goup">`, CTUp, `?<Constant "godown">`, CTDown
   \              ............
   \              ........    
   \   00000038   ............       DC32 `?<Constant "go6up">`, CTUpSix, `?<Constant "go6down">`, CTDownSix
   \              ............
   \              ........    
   \   00000048   ............       DC32 `?<Constant "nextpl">`, NextPL, `?<Constant "prevpl">`, PrevPL
   \              ............
   \              ........    
   \   00000058   ............       DC32 `?<Constant "volup">`, VolumeUp, `?<Constant "voldown">`
   \              ............
   \   00000064   ............       DC32 VolumeDown, `?<Constant "togglevolume">`, ToggleVolume
   \              ............
   \   00000070   ............       DC32 `?<Constant "togglepb">`, TogglePlayback, `?<Constant "stopall">`
   \              ............
   \   0000007C   ............       DC32 StopAllPlayback, `?<Constant "nexttrack">`, NextTrackDown
   \              ............
   \   00000088   ............       DC32 `?<Constant "prevtrack">`, PrevTrackDown
   \              ....        
   \   00000090   ............       DC32 `?<Constant "switchmode">`, SwitchPlayModeDown, `?<Constant "fm">`
   \              ............
   \   0000009C   ............       DC32 ShowFM, `?<Constant "nextplayed">`, SetNextPlayed
   \              ............
   \   000000A8   ............       DC32 `?<Constant "cleanpl">`, CleanPlaylist
   \              ....        
   \   000000B0   ............       DC32 `?<Constant "rewindtoend">`, StartRewindToEnd
   \              ....        
   \   000000B8   ............       DC32 `?<Constant "rewindtobegin">`, StartRewindToBegin
   \              ....        
   \   000000C0   ............       DC32 `?<Constant "savepl">`, SavePL, `?<Constant "goupspeed">`
   \              ............
   \   000000CC   ............       DC32 CTUpSpeed, `?<Constant "godownspeed">`, CTDownSpeed
   \              ............
    163            {"none", NULL},
    164            {"mainmenu", MM_Show},
    165            {"exit", DoExit},
    166            {"loaddefpl", LoadDefPlaylist},
    167            {"playtrack", PlayTrackUnderC},
    168            {"goup", CTUp},
    169            {"godown", CTDown},
    170            {"go6up", CTUpSix},
    171            {"go6down", CTDownSix},
    172            {"nextpl", NextPL},
    173            {"prevpl", PrevPL},
    174            {"volup", VolumeUp},
    175            {"voldown", VolumeDown},
    176            {"togglevolume", ToggleVolume},
    177            {"togglepb", TogglePlayback},
    178            {"stopall", StopAllPlayback},
    179            {"nexttrack", NextTrackDown},
    180            {"prevtrack", PrevTrackDown},
    181            {"switchmode", SwitchPlayModeDown},
    182            {"fm", ShowFM},
    183            {"nextplayed", SetNextPlayed},
    184            {"cleanpl", CleanPlaylist},
    185            {"rewindtoend", StartRewindToEnd},
    186            {"rewindtobegin", StartRewindToBegin},
    187            {"savepl", SavePL},
    188            {"goupspeed", CTUpSpeed},
    189            {"godownspeed", CTDownSpeed}
    190          };
    191          

   \                                 In segment CODE, align 4, keep-with-next
    192          void KeysProc(char *name, char *value)
    193          {
   \                     KeysProc:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   0060A0E1           MOV      R6,R0
   \   00000008   0170A0E1           MOV      R7,R1
    194            strtolower(name, name, -1);
   \   0000000C   0020E0E3           MVN      R2,#+0
    195            strtolower(value, value, -1);
    196          
    197            int inkey=-1;
    198            KEY_PROC keyproc = DoErrKey;
   \   00000010   8C509FE5           LDR      R5,??KeysProc_0  ;; DoErrKey
   \   00000014   0610A0E1           MOV      R1,R6
   \   00000018   ........           _BLF     strtolower,??strtolower??rA
   \   0000001C   0020E0E3           MVN      R2,#+0
   \   00000020   0710A0E1           MOV      R1,R7
   \   00000024   0700A0E1           MOV      R0,R7
   \   00000028   ........           _BLF     strtolower,??strtolower??rA
    199            
    200            for(int cc=0;cc<KEYS_COUNT;cc++)
   \   0000002C   0040A0E3           MOV      R4,#+0
   \   00000030   000000EA           B        ??KeysProc_1
   \                     ??KeysProc_2:
   \   00000034   014084E2           ADD      R4,R4,#+1
   \                     ??KeysProc_1:
   \   00000038   2F0054E3           CMP      R4,#+47
   \   0000003C   F081BD28           POPCS    {R4-R8,PC}
    201             if(strcmp(keynames[cc].name,name)==0)
   \   00000040   ........           LDR      R0,??DataTable2  ;; keynames
   \   00000044   0610A0E1           MOV      R1,R6
   \   00000048   840180E0           ADD      R0,R0,R4, LSL #+3
   \   0000004C   040090E5           LDR      R0,[R0, #+4]
   \   00000050   190000EF           SWI      +25
   \   00000054   000050E3           CMP      R0,#+0
   \   00000058   F5FFFF1A           BNE      ??KeysProc_2
    202             {
    203               inkey=cc;
    204               break;
    205             }
    206            if(inkey==-1) return;
   \   0000005C   010074E3           CMN      R4,#+1
   \   00000060   F081BD08           POPEQ    {R4-R8,PC}
    207          
    208            for(int cc=0;cc<sizeof(keyprocs)/sizeof(keyprocs[0]);cc++)
   \   00000064   3C809FE5           LDR      R8,??KeysProc_0+0x4  ;; keyprocs
   \   00000068   0060A0E3           MOV      R6,#+0
   \   0000006C   000000EA           B        ??KeysProc_3
   \                     ??KeysProc_4:
   \   00000070   016086E2           ADD      R6,R6,#+1
   \                     ??KeysProc_3:
   \   00000074   1B0056E3           CMP      R6,#+27
   \   00000078   0600002A           BCS      ??KeysProc_5
    209             if(strcmp(keyprocs[cc].name,value)==0)
   \   0000007C   860198E7           LDR      R0,[R8, +R6, LSL #+3]
   \   00000080   0710A0E1           MOV      R1,R7
   \   00000084   190000EF           SWI      +25
   \   00000088   000050E3           CMP      R0,#+0
   \   0000008C   F7FFFF1A           BNE      ??KeysProc_4
    210             {
    211               keyproc=keyprocs[cc].proc;
   \   00000090   860188E0           ADD      R0,R8,R6, LSL #+3
   \   00000094   045090E5           LDR      R5,[R0, #+4]
    212               break;
    213             }
    214            
    215            procmap[inkey] = keyproc;    
   \                     ??KeysProc_5:
   \   00000098   ........           LDR      R0,??DataTable3  ;; procmap
   \   0000009C   045180E7           STR      R5,[R0, +R4, LSL #+2]
    216          }
   \   000000A0   F081BDE8           POP      {R4-R8,PC}       ;; return
   \                     ??KeysProc_0:
   \   000000A4   ........           DC32     DoErrKey
   \   000000A8   ........           DC32     keyprocs
    217          

   \                                 In segment CODE, align 4, keep-with-next
    218          void LoadKeys()
    219          {
    220            char fname[256];
    221            sprintf(fname,"%s%s",SETS_PATH,"spkeys.cfg");
   \                     LoadKeys:
   \   00000000   3C309FE5           LDR      R3,??LoadKeys_0  ;; `?<Constant "spkeys.cfg">`
   \   00000004   3C209FE5           LDR      R2,??LoadKeys_0+0x4  ;; SETS_PATH
   \   00000008   3C109FE5           LDR      R1,??LoadKeys_0+0x8  ;; `?<Constant "%s%s">`
   \   0000000C   00402DE9           PUSH     {LR}
   \   00000010   40DF4DE2           SUB      SP,SP,#+256
   \   00000014   0D00A0E1           MOV      R0,SP
   \   00000018   160000EF           SWI      +22
    222            if(LOAD_KEYS)
   \   0000001C   2C009FE5           LDR      R0,??LoadKeys_0+0xC  ;; LOAD_KEYS
   \   00000020   000090E5           LDR      R0,[R0, #+0]
   \   00000024   000050E3           CMP      R0,#+0
   \   00000028   0300000A           BEQ      ??LoadKeys_1
    223            EnumIni(1,(char*)&fname,KeysProc);
   \   0000002C   20209FE5           LDR      R2,??LoadKeys_0+0x10  ;; KeysProc
   \   00000030   0D10A0E1           MOV      R1,SP
   \   00000034   0100A0E3           MOV      R0,#+1
   \   00000038   ........           _BLF     EnumIni,??EnumIni??rA
    224          }
   \                     ??LoadKeys_1:
   \   0000003C   40DF8DE2           ADD      SP,SP,#+256      ;; stack cleaning
   \   00000040   0080BDE8           POP      {PC}             ;; return
   \                     ??LoadKeys_0:
   \   00000044   ........           DC32     `?<Constant "spkeys.cfg">`
   \   00000048   ........           DC32     SETS_PATH
   \   0000004C   ........           DC32     `?<Constant "%s%s">`
   \   00000050   ........           DC32     LOAD_KEYS
   \   00000054   ........           DC32     KeysProc

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   ........           DC32     keynames

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   ........           DC32     procmap

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for procmap>`:
   \   00000000   ............       DC32 MM_Show, DoExit, LoadDefPlaylist, DoExit, PlayTrackUnderC, CTUp
   \              ............
   \              ............
   \              ............
   \   00000018   ............       DC32 CTDown, PrevPL, NextPL, VolumeUp, VolumeDown, StopAllPlayback
   \              ............
   \              ............
   \              ............
   \   00000030   ............       DC32 StartRewindToBegin, CTUpSix, StartRewindToEnd, PrevTrackDown
   \              ............
   \              ........    
   \   00000040   ............       DC32 TogglePlayback, NextTrackDown, CleanPlaylist, CTDownSix, ShowFM
   \              ............
   \              ............
   \              ....        
   \   00000054   ............       DC32 ToggleVolume, SwitchPlayModeDown, SetNextPlayed, 0H, 0H, 0H, 0H
   \              ............
   \              000000000000
   \              000000000000
   \              00000000    
   \   00000070   000000000000       DC32 0H, 0H, 0H, 0H, 0H, 0H, 0H, 0H, 0H, 0H, 0H, 0H, 0H, 0H, 0H, 0H, 0H
   \              000000000000
   \              000000000000
   \              000000000000
   \              000000000000
   \              000000000000
   \              000000000000
   \              000000000000
   \              000000000000
   \              000000000000
   \              000000000000
   \              0000        
   \   000000B4   000000000000       DC32 0H, 0H
   \              0000        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "down">`:
   \   00000000   646F776E00         DC8 "down"
   \   00000005   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "godownspeed">`:
   \   00000000   676F646F776E       DC8 "godownspeed"
   \              737065656400

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "%s%s">`:
   \   00000000   2573257300         DC8 "%s%s"
   \   00000005   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "lsoft">`:
   \   00000000   6C736F667400       DC8 "lsoft"
   \   00000006   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "rsoft">`:
   \   00000000   72736F667400       DC8 "rsoft"
   \   00000006   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "green">`:
   \   00000000   677265656E00       DC8 "green"
   \   00000006   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "red">`:
   \   00000000   72656400           DC8 "red"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "enter">`:
   \   00000000   656E74657200       DC8 "enter"
   \   00000006   0000               DC8 0, 0

   \                                 In segment DATA_C, align 1, align-sorted
   \                     `?<Constant "up">`:
   \   00000000   757000             DC8 "up"

   \                                 In segment DATA_C, align 1, align-sorted
   \                     `?<Constant "4">`:
   \   00000000   3400               DC8 "4"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "left">`:
   \   00000000   6C65667400         DC8 "left"
   \   00000005   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "right">`:
   \   00000000   726967687400       DC8 "right"
   \   00000006   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "volup">`:
   \   00000000   766F6C757000       DC8 "volup"
   \   00000006   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "voldown">`:
   \   00000000   766F6C646F77       DC8 "voldown"
   \              6E00        

   \                                 In segment DATA_C, align 1, align-sorted
   \                     `?<Constant "0">`:
   \   00000000   3000               DC8 "0"

   \                                 In segment DATA_C, align 1, align-sorted
   \                     `?<Constant "1">`:
   \   00000000   3100               DC8 "1"

   \                                 In segment DATA_C, align 1, align-sorted
   \                     `?<Constant "2">`:
   \   00000000   3200               DC8 "2"

   \                                 In segment DATA_C, align 1, align-sorted
   \                     `?<Constant "3">`:
   \   00000000   3300               DC8 "3"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "spkeys.cfg">`:
   \   00000000   73706B657973       DC8 "spkeys.cfg"
   \              2E63666700  
   \   0000000B   00                 DC8 0

   \                                 In segment DATA_C, align 1, align-sorted
   \                     `?<Constant "5">`:
   \   00000000   3500               DC8 "5"

   \                                 In segment DATA_C, align 1, align-sorted
   \                     `?<Constant "6">`:
   \   00000000   3600               DC8 "6"

   \                                 In segment DATA_C, align 1, align-sorted
   \                     `?<Constant "7">`:
   \   00000000   3700               DC8 "7"

   \                                 In segment DATA_C, align 1, align-sorted
   \                     `?<Constant "8">`:
   \   00000000   3800               DC8 "8"

   \                                 In segment DATA_C, align 1, align-sorted
   \                     `?<Constant "9">`:
   \   00000000   3900               DC8 "9"

   \                                 In segment DATA_C, align 1, align-sorted
   \                     `?<Constant "*">`:
   \   00000000   2A00               DC8 "*"

   \                                 In segment DATA_C, align 1, align-sorted
   \                     `?<Constant "#">`:
   \   00000000   2300               DC8 "#"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "lsoft_lp">`:
   \   00000000   6C736F66745F       DC8 "lsoft_lp"
   \              6C7000      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "rsoft_lp">`:
   \   00000000   72736F66745F       DC8 "rsoft_lp"
   \              6C7000      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "green_lp">`:
   \   00000000   677265656E5F       DC8 "green_lp"
   \              6C7000      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "red_lp">`:
   \   00000000   7265645F6C70       DC8 "red_lp"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "enter_lp">`:
   \   00000000   656E7465725F       DC8 "enter_lp"
   \              6C7000      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "up_lp">`:
   \   00000000   75705F6C7000       DC8 "up_lp"
   \   00000006   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "down_lp">`:
   \   00000000   646F776E5F6C       DC8 "down_lp"
   \              7000        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "left_lp">`:
   \   00000000   6C6566745F6C       DC8 "left_lp"
   \              7000        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "right_lp">`:
   \   00000000   72696768745F       DC8 "right_lp"
   \              6C7000      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "volup_lp">`:
   \   00000000   766F6C75705F       DC8 "volup_lp"
   \              6C7000      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "voldown_lp">`:
   \   00000000   766F6C646F77       DC8 "voldown_lp"
   \              6E5F6C7000  
   \   0000000B   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "0_lp">`:
   \   00000000   305F6C7000         DC8 "0_lp"
   \   00000005   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "1_lp">`:
   \   00000000   315F6C7000         DC8 "1_lp"
   \   00000005   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "2_lp">`:
   \   00000000   325F6C7000         DC8 "2_lp"
   \   00000005   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "3_lp">`:
   \   00000000   335F6C7000         DC8 "3_lp"
   \   00000005   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "4_lp">`:
   \   00000000   345F6C7000         DC8 "4_lp"
   \   00000005   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "5_lp">`:
   \   00000000   355F6C7000         DC8 "5_lp"
   \   00000005   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "6_lp">`:
   \   00000000   365F6C7000         DC8 "6_lp"
   \   00000005   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "7_lp">`:
   \   00000000   375F6C7000         DC8 "7_lp"
   \   00000005   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "8_lp">`:
   \   00000000   385F6C7000         DC8 "8_lp"
   \   00000005   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "9_lp">`:
   \   00000000   395F6C7000         DC8 "9_lp"
   \   00000005   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "*_lp">`:
   \   00000000   2A5F6C7000         DC8 "*_lp"
   \   00000005   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "#_lp">`:
   \   00000000   235F6C7000         DC8 "#_lp"
   \   00000005   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "none">`:
   \   00000000   6E6F6E6500         DC8 "none"
   \   00000005   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "mainmenu">`:
   \   00000000   6D61696E6D65       DC8 "mainmenu"
   \              6E7500      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "exit">`:
   \   00000000   6578697400         DC8 "exit"
   \   00000005   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "loaddefpl">`:
   \   00000000   6C6F61646465       DC8 "loaddefpl"
   \              66706C00    
   \   0000000A   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "playtrack">`:
   \   00000000   706C61797472       DC8 "playtrack"
   \              61636B00    
   \   0000000A   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "goup">`:
   \   00000000   676F757000         DC8 "goup"
   \   00000005   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "godown">`:
   \   00000000   676F646F776E       DC8 "godown"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "go6up">`:
   \   00000000   676F36757000       DC8 "go6up"
   \   00000006   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "go6down">`:
   \   00000000   676F36646F77       DC8 "go6down"
   \              6E00        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "nextpl">`:
   \   00000000   6E657874706C       DC8 "nextpl"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "prevpl">`:
   \   00000000   70726576706C       DC8 "prevpl"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "togglevolume">`:
   \   00000000   746F67676C65       DC8 "togglevolume"
   \              766F6C756D65
   \              00          
   \   0000000D   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "togglepb">`:
   \   00000000   746F67676C65       DC8 "togglepb"
   \              706200      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "stopall">`:
   \   00000000   73746F70616C       DC8 "stopall"
   \              6C00        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "nexttrack">`:
   \   00000000   6E6578747472       DC8 "nexttrack"
   \              61636B00    
   \   0000000A   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "prevtrack">`:
   \   00000000   707265767472       DC8 "prevtrack"
   \              61636B00    
   \   0000000A   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "switchmode">`:
   \   00000000   737769746368       DC8 "switchmode"
   \              6D6F646500  
   \   0000000B   00                 DC8 0

   \                                 In segment DATA_C, align 1, align-sorted
   \                     `?<Constant "fm">`:
   \   00000000   666D00             DC8 "fm"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "nextplayed">`:
   \   00000000   6E657874706C       DC8 "nextplayed"
   \              6179656400  
   \   0000000B   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "cleanpl">`:
   \   00000000   636C65616E70       DC8 "cleanpl"
   \              6C00        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "rewindtoend">`:
   \   00000000   726577696E64       DC8 "rewindtoend"
   \              746F656E6400

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "rewindtobegin">`:
   \   00000000   726577696E64       DC8 "rewindtobegin"
   \              746F62656769
   \              6E00        
   \   0000000E   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "savepl">`:
   \   00000000   73617665706C       DC8 "savepl"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "goupspeed">`:
   \   00000000   676F75707370       DC8 "goupspeed"
   \              65656400    
   \   0000000A   0000               DC8 0, 0

   Maximum stack usage in bytes:

     Function CSTACK
     -------- ------
     DoKey        4
     KeysProc    24
     LoadKeys   260


   Segment part sizes:

     Function/Label              Bytes
     --------------              -----
     keynames                     368
     procmap                      188
     DoKey                         92
     keyprocs                     216
     KeysProc                     172
     LoadKeys                      88
     ??DataTable2                   4
     ??DataTable3                   4
     ?<Initializer for procmap>   188
     ?<Constant "down">             8
     ?<Constant "godownspeed">     12
     ?<Constant "%s%s">             8
     ?<Constant "lsoft">            8
     ?<Constant "rsoft">            8
     ?<Constant "green">            8
     ?<Constant "red">              4
     ?<Constant "enter">            8
     ?<Constant "up">               3
     ?<Constant "4">                2
     ?<Constant "left">             8
     ?<Constant "right">            8
     ?<Constant "volup">            8
     ?<Constant "voldown">          8
     ?<Constant "0">                2
     ?<Constant "1">                2
     ?<Constant "2">                2
     ?<Constant "3">                2
     ?<Constant "spkeys.cfg">      12
     ?<Constant "5">                2
     ?<Constant "6">                2
     ?<Constant "7">                2
     ?<Constant "8">                2
     ?<Constant "9">                2
     ?<Constant "*">                2
     ?<Constant "#">                2
     ?<Constant "lsoft_lp">        12
     ?<Constant "rsoft_lp">        12
     ?<Constant "green_lp">        12
     ?<Constant "red_lp">           8
     ?<Constant "enter_lp">        12
     ?<Constant "up_lp">            8
     ?<Constant "down_lp">          8
     ?<Constant "left_lp">          8
     ?<Constant "right_lp">        12
     ?<Constant "volup_lp">        12
     ?<Constant "voldown_lp">      12
     ?<Constant "0_lp">             8
     ?<Constant "1_lp">             8
     ?<Constant "2_lp">             8
     ?<Constant "3_lp">             8
     ?<Constant "4_lp">             8
     ?<Constant "5_lp">             8
     ?<Constant "6_lp">             8
     ?<Constant "7_lp">             8
     ?<Constant "8_lp">             8
     ?<Constant "9_lp">             8
     ?<Constant "*_lp">             8
     ?<Constant "#_lp">             8
     ?<Constant "none">             8
     ?<Constant "mainmenu">        12
     ?<Constant "exit">             8
     ?<Constant "loaddefpl">       12
     ?<Constant "playtrack">       12
     ?<Constant "goup">             8
     ?<Constant "godown">           8
     ?<Constant "go6up">            8
     ?<Constant "go6down">          8
     ?<Constant "nextpl">           8
     ?<Constant "prevpl">           8
     ?<Constant "togglevolume">    16
     ?<Constant "togglepb">        12
     ?<Constant "stopall">          8
     ?<Constant "nexttrack">       12
     ?<Constant "prevtrack">       12
     ?<Constant "switchmode">      12
     ?<Constant "fm">               3
     ?<Constant "nextplayed">      12
     ?<Constant "cleanpl">          8
     ?<Constant "rewindtoend">     12
     ?<Constant "rewindtobegin">   16
     ?<Constant "savepl">           8
     ?<Constant "goupspeed">       12
      Others                       48

 
   396 bytes in segment CODE
 1 174 bytes in segment DATA_C
   188 bytes in segment DATA_I
   188 bytes in segment DATA_ID
    12 bytes in segment INITTAB
 
   360 bytes of CODE  memory (+ 48 bytes shared)
 1 362 bytes of CONST memory
   188 bytes of DATA  memory

Errors: none
Warnings: none
