##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION    07/Jul/2010  13:09:31 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  C:\arm\splayer\sets_menu.c                           #
#    Command line    =  C:\arm\splayer\sets_menu.c -D NEWSGOLD -D ELKA -D    #
#                       OBS -lC C:\arm\splayer\Release_ELKA\List\ -o         #
#                       C:\arm\splayer\Release_ELKA\Obj\ -s9 --no_unroll     #
#                       --no_clustering --cpu_mode arm --endian little       #
#                       --cpu ARM926EJ-S --stack_align 4 --interwork -e      #
#                       --fpu None --dlib_config "C:\arm2\Embedded           #
#                       Workbench 4.0 Evaluation\ARM\LIB\dl5tpainl8n.h" -I   #
#                       "C:\arm2\Embedded Workbench 4.0                      #
#                       Evaluation\ARM\INC\" --inline_threshold=2            #
#    List file       =  C:\arm\splayer\Release_ELKA\List\sets_menu.lst       #
#    Object file     =  C:\arm\splayer\Release_ELKA\Obj\sets_menu.r79        #
#                                                                            #
#                                                                            #
##############################################################################

C:\arm\splayer\sets_menu.c
      1          #include "../inc/swilib.h"
      2          #include "../inc/stdbool.h"
      3          #include "main.h"
      4          #include "langpack.h"
      5          #include "mainmenu.h"
      6          #include "sets_menu.h"

   \                                 In segment DATA_C, align 4, align-sorted
   \   static char const *const __data items2[3]
   \                     items2:
   \   00000000   ............       DC32 `?<Constant "coordinates">`, `?<Constant "colours">`
   \              ....        
   \   00000008   ........           DC32 `?<Constant "refresh">`
      7          
      8          //>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
      9          extern const char PIC_DIR[];
     10          extern const char EXENAME[];   // SPlayer cfg editor.elf

   \                                 In segment DATA_Z, align 4, align-sorted
     11          char cfgxname[256];
   \                     cfgxname:
   \   00000000                      DS8 256
     12          extern bool EditPL;
     13          /*
     14          #define MAX_SETS_ITEMS 4
     15          
     16          #define SET_EDIT_PL        1
     17          #define COORDINATES        2
     18          #define COLOURS            3
     19          #define REFRESH            4
     20          
     21          int Sets_MenuID;
     22          int Req_Close_Sets_Menu=0;
     23          char Menu_Contents[MAX_SETS_ITEMS];
     24          int stS_ICONS[MAX_SETS_ITEMS+1];
     25          
     26          int setsmenusoftkeys[]={0,1,2};
     27          HEADER_DESC sets_menuhdr={0,0,0,0,NULL,(int)LG_Sets_Menu,LGP_NULL};
     28          SOFTKEY_DESC sets_menu_sk[]=
     29          {
     30            {0x0018,0x0000,(int)LG_SELECT},
     31            {0x0001,0x0000,(int)LG_BACK},
     32            {0x003D,0x0000,(int)LGP_DOIT_PIC}
     33          };
     34          
     35          SOFTKEYSTAB sets_menu_skt=
     36          {
     37            sets_menu_sk,0
     38          };
     39          
     40          void sets_menu_iconhndl(void *data, int curitem, void *unk);
     41          
     42          void sets_menu_ghook(void *data, int cmd)
     43          {
     44            if (cmd==0x0A)  // onFocus
     45            {
     46              DisableIDLETMR();
     47              if(Req_Close_Sets_Menu)
     48              {
     49                Req_Close_Sets_Menu=0;
     50                GeneralFunc_flag1(Sets_MenuID,1);
     51              }
     52            }
     53          }
     54          */
     55          /*
     56          Обработчик нажатий клавиш меню. Отсюда следует вызывать необходимые действия
     57          
     58          *//*
     59          int sets_menu_onkey(void *data, GUI_MSG *msg)
     60          {
     61            int i=GetCurMenuItem(data);
     62            if(msg->keys==0x18 || msg->keys==0x3D)
     63            {
     64              switch(Menu_Contents[i])
     65              {
     66              case SET_EDIT_PL:
     67                {
     68                  EditPL=!(EditPL);
     69                  RefreshGUI();
     70                  GeneralFunc_flag1(Sets_MenuID,1);
     71                  break;
     72                }
     73                
     74              case COORDINATES:
     75                {
     76                  WSHDR *ws=AllocWS(256);
     77                  str_2ws(ws,EXENAME,strlen(EXENAME)+1);
     78                  sprintf(cfgxname,"%s%s",PIC_DIR,"skin.cfg");
     79                  ExecuteFile(ws,0,(char*)cfgxname);
     80                  FreeWS(ws);
     81                  break;
     82                }
     83          
     84              case COLOURS:
     85                {
     86                  WSHDR *ws=AllocWS(256);
     87                  str_2ws(ws,EXENAME,strlen(EXENAME)+1);
     88                  sprintf(cfgxname,"%s%s",PIC_DIR,"colour.cfg");
     89                  ExecuteFile(ws,0,(char*)cfgxname);
     90                  FreeWS(ws);
     91                  break;
     92                }
     93          
     94              case REFRESH:
     95                {
     96                  sprintf(cfgxname,"%s%s",PIC_DIR,"skin.cfg");
     97                  load_skin(cfgxname);
     98                  sprintf(cfgxname,"%s%s",PIC_DIR,"colour.cfg");
     99                  load_skin(cfgxname);
    100                  GeneralFunc_flag1(Sets_MenuID,1);
    101                  break;
    102                }
    103          
    104              default:
    105                {
    106                  MsgBoxError(1,(int)LG_Error_1);
    107                }
    108              }
    109          
    110              return 0; // Закрыть автоматически или нет   AAA
    111            }
    112            //  Req_Close_Sets_Menu = 1;
    113            return 0;
    114          }
    115          
    116          MENU_DESC sets_menu=
    117          {
    118            8,sets_menu_onkey,sets_menu_ghook,NULL,
    119            setsmenusoftkeys,
    120            &sets_menu_skt,
    121            0x11, // 0x11 если надо меню с иконками, иначе 0x10
    122            sets_menu_iconhndl,
    123            NULL,   //Items
    124            NULL,   //Procs
    125            MAX_SETS_ITEMS   //n
    126          };
    127          
    128          extern int icon_array[2];
    129          
    130          void sets_menu_iconhndl(void *data, int curitem, void *unk)
    131          {
    132            WSHDR *ws;
    133            char test_str[48];
    134            void *item=AllocMenuItem(data);
    135            strcpy(test_str,"(ошибка)");
    136          
    137            switch(Menu_Contents[curitem])
    138            {
    139            case SET_EDIT_PL:
    140              {
    141                strcpy(test_str,LG_SetEditPL);
    142                break;
    143              }
    144            case COORDINATES:
    145              {
    146                strcpy(test_str,LG_Coordinates);
    147                break;
    148              }
    149            case COLOURS:
    150              {
    151                strcpy(test_str,LG_Colours);
    152                break;
    153              }
    154            case REFRESH:
    155              {
    156                strcpy(test_str,LG_Refresh);
    157                break;
    158              }
    159            }
    160            ws=AllocMenuWS(data,strlen(test_str));
    161            wsprintf(ws,"%t",test_str);
    162          
    163            if(curitem==0) {SetMenuItemIconArray(data,item,icon_array+(EditPL?0:1));}
    164            else {SetMenuItemIconArray(data,item,stS_ICONS+Menu_Contents[curitem]);}
    165            SetMenuItemText(data,item,ws,curitem);
    166          };
    167          
    168          void Init_Icon_array()
    169          {
    170            char coordinatespic[128];
    171            char colourspic[128];
    172            char refreshpic[128];
    173            strcpy(coordinatespic,PIC_DIR);strcat(coordinatespic,"coordinates.png");
    174            strcpy(colourspic,PIC_DIR);strcat(colourspic,"colours.png");
    175            strcpy(refreshpic,PIC_DIR);strcat(refreshpic,"refresh.png");
    176            
    177           // for(int i=0;i<=MAX_SETS_ITEMS;i++)stS_ICONS[i]=0;
    178            
    179          #ifndef NO_PNG
    180            
    181           // stS_ICONS[SET_EDIT_PL]=
    182            stS_ICONS[COORDINATES]=(int)coordinatespic;
    183            stS_ICONS[COLOURS]=(int)colourspic;
    184            stS_ICONS[REFRESH]=(int)refreshpic;
    185            
    186          #else
    187           // stS_ICONS[SET_EDIT_PL] = 0;
    188           // menuitems[SET_EDIT_PL].icon = stS_ICONS;
    189            stS_ICONS[COORDINATES] = 0;
    190            menuitems[COORDINATES].icon = S_ICONS+1;
    191            stS_ICONS[COLOURS] = 0;
    192            menuitems[COLOURS].icon = stS_ICONS+2;
    193            stS_ICONS[REFRESH] = 0;
    194            menuitems[REFRESH].icon = stS_ICONS+3;
    195          #endif
    196          }*/
    197          /*
    198          void InitMenuArray()
    199          {
    200            for(int i=1;i<MAX_SETS_ITEMS;i++) {Menu_Contents[i]=0;}
    201          }*/
    202          /*
    203          void Disp_Sets_Menu()
    204          {
    205           // InitMenuArray();
    206            Init_Icon_array();
    207            
    208            Menu_Contents[0]=SET_EDIT_PL;
    209            Menu_Contents[1]=COORDINATES;
    210            Menu_Contents[2]=COLOURS;
    211            Menu_Contents[3]=REFRESH;
    212            
    213            icon_array[0]=GetPicNByUnicodeSymbol(CBOX_CHECKED);
    214            icon_array[1]=GetPicNByUnicodeSymbol(CBOX_UNCHECKED);
    215            
    216            patch_rect(&sets_menuhdr.rc,0,YDISP,ScreenW()-1,HeaderH()+YDISP);
    217            Sets_MenuID=CreateMenu(0,0,&sets_menu,&sets_menuhdr,0,MAX_SETS_ITEMS,0,0);
    218          }*/
    219          
    220          #define MAX_ITEMS 4
    221          

   \                                 In segment DATA_Z, align 4, align-sorted
    222          int SetsMenu_ID;
   \                     SetsMenu_ID:
   \   00000000                      DS8 4
    223          

   \                                 In segment CODE, align 4, keep-with-next
    224          void Set_Edit_PL()
    225          {
    226            EditPL=!(EditPL);
   \                     Set_Edit_PL:
   \   00000000   ........           LDR      R0,??DataTable11  ;; EditPL
   \   00000004   00402DE9           PUSH     {LR}
   \   00000008   0010D0E5           LDRB     R1,[R0, #+0]
   \   0000000C   011021E2           EOR      R1,R1,#0x1
   \   00000010   0010C0E5           STRB     R1,[R0, #+0]
    227            RefreshGUI();
   \   00000014   960100EF           SWI      +406
    228            GeneralFuncF1(1);
   \   00000018   0100A0E3           MOV      R0,#+1
   \   0000001C   3B0100EF           SWI      +315
    229          }
   \   00000020   0080BDE8           POP      {PC}             ;; return
    230                

   \                                 In segment CODE, align 4, keep-with-next
    231          void Coordinates()
    232          {
   \                     Coordinates:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
    233            WSHDR *ws=AllocWS(256);
    234            str_2ws(ws,EXENAME,strlen(EXENAME)+1);
   \   00000004   ........           LDR      R5,??DataTable5  ;; EXENAME
   \   00000008   400FA0E3           MOV      R0,#+256
   \   0000000C   250100EF           SWI      +293
   \   00000010   0040A0E1           MOV      R4,R0
   \   00000014   0500A0E1           MOV      R0,R5
   \   00000018   1B0000EF           SWI      +27
   \   0000001C   0510A0E1           MOV      R1,R5
    235            sprintf(cfgxname,"%s%s",PIC_DIR,"skin.cfg");
   \   00000020   ........           LDR      R5,??DataTable6  ;; cfgxname
   \   00000024   012080E2           ADD      R2,R0,#+1
   \   00000028   0400A0E1           MOV      R0,R4
   \   0000002C   6C0100EF           SWI      +364
   \   00000030   28309FE5           LDR      R3,??Coordinates_0  ;; `?<Constant "skin.cfg">`
   \   00000034   ........           LDR      R2,??DataTable13  ;; PIC_DIR
   \   00000038   ........           LDR      R1,??DataTable8  ;; `?<Constant "%s%s">`
   \   0000003C   0500A0E1           MOV      R0,R5
   \   00000040   160000EF           SWI      +22
    236            ExecuteFile(ws,0,(char*)cfgxname);
   \   00000044   0520A0E1           MOV      R2,R5
   \   00000048   0010A0E3           MOV      R1,#+0
   \   0000004C   0400A0E1           MOV      R0,R4
   \   00000050   940000EF           SWI      +148
    237            FreeWS(ws);
   \   00000054   0400A0E1           MOV      R0,R4
   \   00000058   290100EF           SWI      +297
    238          }
   \   0000005C   3080BDE8           POP      {R4,R5,PC}       ;; return
   \                     ??Coordinates_0:
   \   00000060   ........           DC32     `?<Constant "skin.cfg">`
    239          

   \                                 In segment CODE, align 4, keep-with-next
    240          void Colours()
    241          {
   \                     Colours:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
    242            WSHDR *ws=AllocWS(256);
    243            str_2ws(ws,EXENAME,strlen(EXENAME)+1);
   \   00000004   ........           LDR      R5,??DataTable5  ;; EXENAME
   \   00000008   400FA0E3           MOV      R0,#+256
   \   0000000C   250100EF           SWI      +293
   \   00000010   0040A0E1           MOV      R4,R0
   \   00000014   0500A0E1           MOV      R0,R5
   \   00000018   1B0000EF           SWI      +27
   \   0000001C   0510A0E1           MOV      R1,R5
    244            sprintf(cfgxname,"%s%s",PIC_DIR,"colour.cfg");
   \   00000020   ........           LDR      R5,??DataTable6  ;; cfgxname
   \   00000024   012080E2           ADD      R2,R0,#+1
   \   00000028   0400A0E1           MOV      R0,R4
   \   0000002C   6C0100EF           SWI      +364
   \   00000030   28309FE5           LDR      R3,??Colours_0   ;; `?<Constant "colour.cfg">`
   \   00000034   ........           LDR      R2,??DataTable13  ;; PIC_DIR
   \   00000038   ........           LDR      R1,??DataTable8  ;; `?<Constant "%s%s">`
   \   0000003C   0500A0E1           MOV      R0,R5
   \   00000040   160000EF           SWI      +22
    245            ExecuteFile(ws,0,(char*)cfgxname);
   \   00000044   0520A0E1           MOV      R2,R5
   \   00000048   0010A0E3           MOV      R1,#+0
   \   0000004C   0400A0E1           MOV      R0,R4
   \   00000050   940000EF           SWI      +148
    246            FreeWS(ws);
   \   00000054   0400A0E1           MOV      R0,R4
   \   00000058   290100EF           SWI      +297
    247          }
   \   0000005C   3080BDE8           POP      {R4,R5,PC}       ;; return
   \                     ??Colours_0:
   \   00000060   ........           DC32     `?<Constant "colour.cfg">`
    248          

   \                                 In segment CODE, align 4, keep-with-next
    249          void Refresh1()
    250          {
   \                     Refresh1:
   \   00000000   00402DE9           PUSH     {LR}
    251            Refresh();
   \   00000004   ........           _BLF     Refresh,??Refresh??rA
    252            GeneralFuncF1(1);
   \   00000008   0100A0E3           MOV      R0,#+1
   \   0000000C   3B0100EF           SWI      +315
    253          }
   \   00000010   0080BDE8           POP      {PC}             ;; return
    254          

   \                                 In segment DATA_I, align 4, align-sorted
    255          HEADER_DESC sets_menuhdr={0,0,131,21,NULL,NULL,LGP_NULL};
   \                     sets_menuhdr:
   \   00000000                      DS8 20
   \   00000014                      REQUIRE `?<Initializer for sets_menuhdr>`
    256          

   \                                 In segment DATA_I, align 4, align-sorted
    257          int sets_menusoftkeys[]={0,1,2};
   \                     sets_menusoftkeys:
   \   00000000                      DS8 12
   \   0000000C                      REQUIRE `?<Initializer for sets_menusoftkeys>`
    258          
    259          extern int icon_array[2];
    260          /*
    261          static const char * const sets_menutexts[MAX_ITEMS]=
    262          {
    263            LG_SetEditPL,
    264            LG_Coordinates,
    265            LG_Colours,
    266            LG_Refresh
    267          };
    268          */
    269          

   \                                 In segment DATA_Z, align 4, align-sorted
    270          static char * sets_menutexts[MAX_ITEMS]=
   \                     sets_menutexts:
   \   00000000                      DS8 16
    271          {
    272            NULL,
    273            NULL,
    274            NULL,
    275            NULL
    276          };
    277          

   \                                 In segment DATA_I, align 4, align-sorted
    278          void *sets_menuprocs[MAX_ITEMS]={
   \                     sets_menuprocs:
   \   00000000                      DS8 16
   \   00000010                      REQUIRE `?<Initializer for sets_menuprocs>`
    279                                    (void *)Set_Edit_PL,
    280                                    (void *)Coordinates,
    281                                    (void *)Colours,
    282                                    (void *)Refresh1
    283                                   };
    284          

   \                                 In segment DATA_I, align 4, align-sorted
    285          SOFTKEY_DESC sets_menu_sk[]=
   \                     sets_menu_sk:
   \   00000000                      DS8 24
   \   00000018                      REQUIRE `?<Initializer for sets_menu_sk>`
    286          {
    287            {0x0018,0x0000,NULL},
    288            {0x0001,0x0000,NULL},
    289            {0x003D,0x0000,(int)LGP_DOIT_PIC}
    290          };
    291          

   \                                 In segment DATA_I, align 4, align-sorted
    292          SOFTKEYSTAB sets_menu_skt=
   \                     sets_menu_skt:
   \   00000000                      DS8 8
   \   00000008                      REQUIRE `?<Initializer for sets_menu_skt>`
    293          {
    294            sets_menu_sk,0
    295          };
    296          

   \                                 In segment DATA_Z, align 4, align-sorted
    297          int stS_ICONS[MAX_ITEMS];
   \                     stS_ICONS:
   \   00000000                      DS8 16
    298          

   \                                 In segment CODE, align 4, keep-with-next
    299          void sets_menuitemhandler(void *data, int curitem, void *unk)
    300          {
   \                     sets_menuitemhandler:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
    301            WSHDR *ws;
    302            void *item=AllocMenuItem(data);
    303            ws=AllocMenuWS(data,strlen(sets_menutexts[curitem]));
   \   00000004   ........           LDR      R8,??DataTable16  ;; sets_menutexts
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   970100EF           SWI      +407
   \   00000014   0060A0E1           MOV      R6,R0
   \   00000018   050198E7           LDR      R0,[R8, +R5, LSL #+2]
   \   0000001C   1B0000EF           SWI      +27
   \   00000020   0010A0E1           MOV      R1,R0
   \   00000024   0400A0E1           MOV      R0,R4
   \   00000028   980100EF           SWI      +408
    304            wsprintf(ws,"%t",sets_menutexts[curitem]);
   \   0000002C   052198E7           LDR      R2,[R8, +R5, LSL #+2]
   \   00000030   0070A0E1           MOV      R7,R0
   \   00000034   1E1F8FE2           ADR      R1,??sets_menuitemhandler_0  ;; "%t"
   \   00000038   240100EF           SWI      +292
    305          #ifndef NO_PNG
    306            switch(curitem)
   \   0000003C   ........           LDR      R0,??DataTable14  ;; stS_ICONS
   \   00000040   0510B0E1           MOVS     R1,R5
   \   00000044   0600000A           BEQ      ??sets_menuitemhandler_1
   \   00000048   011055E2           SUBS     R1,R5,#+1
   \   0000004C   0A00000A           BEQ      ??sets_menuitemhandler_2
   \   00000050   011051E2           SUBS     R1,R1,#+1
   \   00000054   0A00000A           BEQ      ??sets_menuitemhandler_3
   \   00000058   011051E2           SUBS     R1,R1,#+1
   \   0000005C   0A00000A           BEQ      ??sets_menuitemhandler_4
   \   00000060   0D0000EA           B        ??sets_menuitemhandler_5
    307            {
    308            case 0:
    309              SetMenuItemIconArray(data,item,icon_array+(EditPL?0:1));
   \                     ??sets_menuitemhandler_1:
   \   00000064   ........           LDR      R0,??DataTable11  ;; EditPL
   \   00000068   ........           LDR      R1,??DataTable15  ;; icon_array
   \   0000006C   0000D0E5           LDRB     R0,[R0, #+0]
   \   00000070   010020E2           EOR      R0,R0,#0x1
   \   00000074   002181E0           ADD      R2,R1,R0, LSL #+2
   \   00000078   040000EA           B        ??sets_menuitemhandler_6
    310              break;
    311            case 1:
    312              SetMenuItemIconArray(data,item,stS_ICONS+1);
   \                     ??sets_menuitemhandler_2:
   \   0000007C   042080E2           ADD      R2,R0,#+4
   \   00000080   020000EA           B        ??sets_menuitemhandler_6
    313              break;
    314            case 2:
    315              SetMenuItemIconArray(data,item,stS_ICONS+2);
   \                     ??sets_menuitemhandler_3:
   \   00000084   082080E2           ADD      R2,R0,#+8
   \   00000088   000000EA           B        ??sets_menuitemhandler_6
    316              break;
    317            case 3:
    318              SetMenuItemIconArray(data,item,stS_ICONS+3);
   \                     ??sets_menuitemhandler_4:
   \   0000008C   0C2080E2           ADD      R2,R0,#+12
   \                     ??sets_menuitemhandler_6:
   \   00000090   0610A0E1           MOV      R1,R6
   \   00000094   0400A0E1           MOV      R0,R4
   \   00000098   990100EF           SWI      +409
    319              break;
    320            }
    321          #else
    322            switch(curitem)
    323            {
    324            case 0:
    325              SetMenuItemIconArray(data,item,icon_array+(EditPL?0:1));
    326              break;
    327            }
    328          #endif
    329            SetMenuItemText(data, item, ws, curitem);
   \                     ??sets_menuitemhandler_5:
   \   0000009C   0530A0E1           MOV      R3,R5
   \   000000A0   0720A0E1           MOV      R2,R7
   \   000000A4   0610A0E1           MOV      R1,R6
   \   000000A8   0400A0E1           MOV      R0,R4
   \   000000AC   9A0100EF           SWI      +410
    330          }
   \   000000B0   F081BDE8           POP      {R4-R8,PC}       ;; return
   \                     ??sets_menuitemhandler_0:
   \   000000B4   25740000           DC8      "%t",+0
    331          

   \                                 In segment CODE, align 4, keep-with-next
    332          void sets_menu_ghook(void *data, int cmd)
    333          {
   \                     sets_menu_ghook:
   \   00000000   00402DE9           PUSH     {LR}
    334            if (cmd==0x0A)
   \   00000004   0A0051E3           CMP      R1,#+10
   \   00000008   0080BD18           POPNE    {PC}
    335            {
    336              DisableIDLETMR();
   \   0000000C   7F0100EF           SWI      +383
    337            }
    338          }
   \   00000010   0080BDE8           POP      {PC}             ;; return
    339          

   \                                 In segment CODE, align 4, keep-with-next
    340          static int sets_menu_keyhook(void *data, GUI_MSG *msg)
    341          {
   \                     sets_menu_keyhook:
   \   00000000   00402DE9           PUSH     {LR}
    342            if ((msg->keys==0x18)||(msg->keys==0x3D))
   \   00000004   F210D1E1           LDRSH    R1,[R1, #+2]
   \   00000008   180051E3           CMP      R1,#+24
   \   0000000C   3D005113           CMPNE    R1,#+61
   \   00000010   0300001A           BNE      ??sets_menu_keyhook_0
    343            {
    344              ((void (*)(void))(sets_menuprocs[GetCurMenuItem(data)]))();
   \   00000014   8F0100EF           SWI      +399
   \   00000018   0C109FE5           LDR      R1,??sets_menu_keyhook_1  ;; sets_menuprocs
   \   0000001C   000191E7           LDR      R0,[R1, +R0, LSL #+2]
   \   00000020   30FF2FE1           BLX      R0
    345            }
    346            return(0);
   \                     ??sets_menu_keyhook_0:
   \   00000024   0000A0E3           MOV      R0,#+0
   \   00000028   0080BDE8           POP      {PC}             ;; return
   \                     ??sets_menu_keyhook_1:
   \   0000002C   ........           DC32     sets_menuprocs
    347          }
    348          

   \                                 In segment DATA_C, align 4, align-sorted
    349          static const MENU_DESC sets_tmenu=
   \                     sets_tmenu:
   \   00000000   08000000....       DC32 8, sets_menu_keyhook, sets_menu_ghook, 0H, sets_menusoftkeys
   \              ............
   \              00000000....
   \              ....        
   \   00000014   ........1100       DC32 sets_menu_skt, 17, sets_menuitemhandler, 0H, 0H, 4
   \              0000........
   \              000000000000
   \              000004000000
    350          {
    351            8,sets_menu_keyhook,sets_menu_ghook,NULL,
    352            sets_menusoftkeys,
    353            &sets_menu_skt,
    354            0x11,
    355            sets_menuitemhandler,
    356            NULL, //menuitems,
    357            NULL, //menuprocs,
    358            MAX_ITEMS
    359          };
    360          
    361          /*
    362          char coordinatespic[128];
    363          char colourspic[128];
    364          char refreshpic[128];
    365          */
    366          
    367          #ifndef NO_PNG

   \                                 In segment DATA_Z, align 4, align-sorted
    368          char pic2[TOTAL_ITEMS_2][128];
   \                     pic2:
   \   00000000                      DS8 384
    369          #endif
    370          

   \                                 In segment CODE, align 4, keep-with-next
    371          void Disp_Sets_Menu()
    372          {
   \                     Disp_Sets_Menu:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
    373          #ifndef NO_PNG
    374            /*
    375            strcpy(coordinatespic,PIC_DIR);strcat(coordinatespic,"coordinates.png");
    376            strcpy(colourspic,PIC_DIR);strcat(colourspic,"colours.png");
    377            strcpy(refreshpic,PIC_DIR);strcat(refreshpic,"refresh.png");
    378            // Картинка В очередь
    379           // stS_ICONS[0] = (int);
    380          
    381            // Картинка Атрибуты
    382            stS_ICONS[1] = (int)coordinatespic;
    383          
    384            // Картинка Коордиаты
    385            stS_ICONS[2] = (int)colourspic;
    386          
    387            // Картинка Настройки
    388            stS_ICONS[3] = (int)refreshpic;
    389            */
    390            for(unsigned int i=0; i<TOTAL_ITEMS_2; i++)
   \   00000004   0040A0E3           MOV      R4,#+0
    391            {
    392              strcpy(pic2[i],PIC_DIR);
   \                     ??Disp_Sets_Menu_0:
   \   00000008   A8009FE5           LDR      R0,??Disp_Sets_Menu_1  ;; pic2
   \   0000000C   ........           LDR      R1,??DataTable13  ;; PIC_DIR
   \   00000010   845380E0           ADD      R5,R0,R4, LSL #+7
   \   00000014   0500A0E1           MOV      R0,R5
   \   00000018   1A0000EF           SWI      +26
    393              strcat(pic2[i],items2[i]);
   \   0000001C   98009FE5           LDR      R0,??Disp_Sets_Menu_1+0x4  ;; items2
   \   00000020   041190E7           LDR      R1,[R0, +R4, LSL #+2]
   \   00000024   0500A0E1           MOV      R0,R5
   \   00000028   170000EF           SWI      +23
    394              strcat(pic2[i],PNGEXT);
   \   0000002C   8C109FE5           LDR      R1,??Disp_Sets_Menu_1+0x8  ;; `?<Constant ".png">`
   \   00000030   0500A0E1           MOV      R0,R5
   \   00000034   170000EF           SWI      +23
    395              stS_ICONS[i+1] = (int)pic2[i];
   \   00000038   ........           LDR      R0,??DataTable14  ;; stS_ICONS
   \   0000003C   040180E0           ADD      R0,R0,R4, LSL #+2
   \   00000040   045080E5           STR      R5,[R0, #+4]
    396            }
   \   00000044   014084E2           ADD      R4,R4,#+1
   \   00000048   030054E3           CMP      R4,#+3
   \   0000004C   EDFFFF3A           BCC      ??Disp_Sets_Menu_0
    397          
    398          #else
    399           // stS_ICONS[0] = 0;
    400           // menuitems[0].icon = stS_ICONS;
    401            /*
    402            stS_ICONS[1] = 0;
    403            menuitems[1].icon = stS_ICONS+1;
    404            stS_ICONS[2] = 0;
    405            menuitems[2].icon = stS_ICONS+2;
    406            stS_ICONS[3] = 0;
    407            menuitems[3].icon = stS_ICONS+3;
    408            */
    409          /*  for(unsigned int i=1; i<TOTAL_ITEMS_2; i++)
    410            {
    411              stS_ICONS[i] = 0;
    412            }*/
    413          #endif  
    414            
    415            icon_array[0]=GetPicNByUnicodeSymbol(CBOX_CHECKED);
   \   00000050   ........           LDR      R4,??DataTable15  ;; icon_array
   \   00000054   1600A0E3           MOV      R0,#+22
   \   00000058   E10C80E3           ORR      R0,R0,#0xE100
   \   0000005C   E40100EF           SWI      +484
   \   00000060   000084E5           STR      R0,[R4, #+0]
    416            icon_array[1]=GetPicNByUnicodeSymbol(CBOX_UNCHECKED);
   \   00000064   1700A0E3           MOV      R0,#+23
   \   00000068   E10C80E3           ORR      R0,R0,#0xE100
   \   0000006C   E40100EF           SWI      +484
   \   00000070   040084E5           STR      R0,[R4, #+4]
    417            
    418          //  patch_rect(&sets_menuhdr.rc,0,YDISP,ScreenW()-1,HeaderH()+YDISP);
    419            patch_header(&sets_menuhdr);
   \   00000074   48409FE5           LDR      R4,??Disp_Sets_Menu_1+0xC  ;; sets_menuhdr
   \   00000078   0400A0E1           MOV      R0,R4
   \   0000007C   ........           _BLF     patch_header,??patch_header??rA
    420            SetsMenu_ID = CreateMenu(0,0,&sets_tmenu,&sets_menuhdr,0,MAX_ITEMS,0,0);
   \   00000080   40209FE5           LDR      R2,??Disp_Sets_Menu_1+0x10  ;; sets_tmenu
   \   00000084   0000A0E3           MOV      R0,#+0
   \   00000088   01002DE9           PUSH     {R0}
   \   0000008C   01002DE9           PUSH     {R0}
   \   00000090   0430A0E1           MOV      R3,R4
   \   00000094   0010A0E3           MOV      R1,#+0
   \   00000098   0400A0E3           MOV      R0,#+4
   \   0000009C   01002DE9           PUSH     {R0}
   \   000000A0   0000A0E3           MOV      R0,#+0
   \   000000A4   01002DE9           PUSH     {R0}
   \   000000A8   520100EF           SWI      +338
   \   000000AC   18109FE5           LDR      R1,??Disp_Sets_Menu_1+0x14  ;; SetsMenu_ID
   \   000000B0   000081E5           STR      R0,[R1, #+0]
    421          }
   \   000000B4   3F80BDE8           POP      {R0-R5,PC}       ;; return
   \                     ??Disp_Sets_Menu_1:
   \   000000B8   ........           DC32     pic2
   \   000000BC   ........           DC32     items2
   \   000000C0   ........           DC32     `?<Constant ".png">`
   \   000000C4   ........           DC32     sets_menuhdr
   \   000000C8   ........           DC32     sets_tmenu
   \   000000CC   ........           DC32     SetsMenu_ID
    422          

   \                                 In segment CODE, align 4, keep-with-next
    423          void initSetsMenuLangPack() //Инициализировать язык для Меню Инструментов - Vedan
    424          {
    425            sets_menu_sk[0].lgp_id=(int)lgpData[LGP_SELECT];
   \                     initSetsMenuLangPack:
   \   00000000   44109FE5           LDR      R1,??initSetsMenuLangPack_0  ;; lgpData
   \   00000004   44009FE5           LDR      R0,??initSetsMenuLangPack_0+0x4  ;; sets_menu_sk
   \   00000008   1C2091E5           LDR      R2,[R1, #+28]
   \   0000000C   042080E5           STR      R2,[R0, #+4]
    426            sets_menu_sk[1].lgp_id=(int)lgpData[LGP_BACK];
   \   00000010   202091E5           LDR      R2,[R1, #+32]
   \   00000014   0C2080E5           STR      R2,[R0, #+12]
    427            sets_menuhdr.lgp_id=(int)lgpData[LGP_Sets_Menu];
   \   00000018   34009FE5           LDR      R0,??initSetsMenuLangPack_0+0x8  ;; sets_menuhdr + 12
   \   0000001C   242091E5           LDR      R2,[R1, #+36]
   \   00000020   002080E5           STR      R2,[R0, #+0]
    428            sets_menutexts[0]=(char *)lgpData[LGP_SetEditPL];
   \   00000024   ........           LDR      R0,??DataTable16  ;; sets_menutexts
   \   00000028   282091E5           LDR      R2,[R1, #+40]
   \   0000002C   002080E5           STR      R2,[R0, #+0]
    429            sets_menutexts[1]=(char *)lgpData[LGP_Coordinates];
   \   00000030   2C2091E5           LDR      R2,[R1, #+44]
   \   00000034   042080E5           STR      R2,[R0, #+4]
    430            sets_menutexts[2]=(char *)lgpData[LGP_Colours];
   \   00000038   302091E5           LDR      R2,[R1, #+48]
    431            sets_menutexts[3]=(char *)lgpData[LGP_Refresh];
   \   0000003C   341091E5           LDR      R1,[R1, #+52]
   \   00000040   082080E5           STR      R2,[R0, #+8]
   \   00000044   0C1080E5           STR      R1,[R0, #+12]
    432          }
   \   00000048   1EFF2FE1           BX       LR               ;; return
   \                     ??initSetsMenuLangPack_0:
   \   0000004C   ........           DC32     lgpData
   \   00000050   ........           DC32     sets_menu_sk
   \   00000054   ........           DC32     sets_menuhdr + 12

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable5:
   \   00000000   ........           DC32     EXENAME

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable6:
   \   00000000   ........           DC32     cfgxname

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable8:
   \   00000000   ........           DC32     `?<Constant "%s%s">`

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable11:
   \   00000000   ........           DC32     EditPL

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable13:
   \   00000000   ........           DC32     PIC_DIR

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable14:
   \   00000000   ........           DC32     stS_ICONS

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable15:
   \   00000000   ........           DC32     icon_array

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable16:
   \   00000000   ........           DC32     sets_menutexts

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for sets_menuhdr>`:
   \   00000000   000000008300       DC16 0, 0, 131, 21
   \              1500        
   \   00000008   000000000000       DC32 0H, 0, 2147483647
   \              0000FFFFFF7F

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for sets_menusoftkeys>`:
   \   00000000   000000000100       DC32 0, 1, 2
   \              000002000000

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for sets_menuprocs>`:
   \   00000000   ............       DC32 Set_Edit_PL, Coordinates, Colours, Refresh1
   \              ............
   \              ........    

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for sets_menu_sk>`:
   \   00000000   18000000           DC16 24, 0
   \   00000004   00000000           DC32 0
   \   00000008   01000000           DC16 1, 0
   \   0000000C   00000000           DC32 0
   \   00000010   3D000000           DC16 61, 0
   \   00000014   FBC0FF7F           DC32 2147467515

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for sets_menu_skt>`:
   \   00000000   ........0000       DC32 sets_menu_sk, 0
   \              0000        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "coordinates">`:
   \   00000000   636F6F726469       DC8 "coordinates"
   \              6E6174657300

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "colours">`:
   \   00000000   636F6C6F7572       DC8 "colours"
   \              7300        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "refresh">`:
   \   00000000   726566726573       DC8 "refresh"
   \              6800        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "%s%s">`:
   \   00000000   2573257300         DC8 "%s%s"
   \   00000005   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "skin.cfg">`:
   \   00000000   736B696E2E63       DC8 "skin.cfg"
   \              666700      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "colour.cfg">`:
   \   00000000   636F6C6F7572       DC8 "colour.cfg"
   \              2E63666700  
   \   0000000B   00                 DC8 0

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   257400             DC8 "%t"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant ".png">`:
   \   00000000   2E706E6700         DC8 ".png"
   \   00000005   000000             DC8 0, 0, 0

   Maximum stack usage in bytes:

     Function             CSTACK
     --------             ------
     Colours                 12
     Coordinates             12
     Disp_Sets_Menu          28
     Refresh1                 4
     Set_Edit_PL              4
     initSetsMenuLangPack     0
     sets_menu_ghook          4
     sets_menu_keyhook        4
     sets_menuitemhandler    24


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     items2                           12
     cfgxname                        256
     SetsMenu_ID                       4
     Set_Edit_PL                      36
     Coordinates                     100
     Colours                         100
     Refresh1                         20
     sets_menuhdr                     20
     sets_menusoftkeys                12
     sets_menutexts                   16
     sets_menuprocs                   16
     sets_menu_sk                     24
     sets_menu_skt                     8
     stS_ICONS                        16
     sets_menuitemhandler            184
     sets_menu_ghook                  20
     sets_menu_keyhook                48
     sets_tmenu                       44
     pic2                            384
     Disp_Sets_Menu                  208
     initSetsMenuLangPack             88
     ??DataTable5                      4
     ??DataTable6                      4
     ??DataTable8                      4
     ??DataTable11                     4
     ??DataTable13                     4
     ??DataTable14                     4
     ??DataTable15                     4
     ??DataTable16                     4
     ?<Initializer for sets_menuhdr>
                                      20
     ?<Initializer for sets_menusoftkeys>
                                      12
     ?<Initializer for sets_menuprocs>
                                      16
     ?<Initializer for sets_menu_sk>
                                      24
     ?<Initializer for sets_menu_skt>
                                       8
     ?<Constant "coordinates">        12
     ?<Constant "colours">             8
     ?<Constant "refresh">             8
     ?<Constant "%s%s">                8
     ?<Constant "skin.cfg">           12
     ?<Constant "colour.cfg">         12
     ?<Constant "%t">                  3
     ?<Constant ".png">                8
      Others                          84

 
 896 bytes in segment CODE
 127 bytes in segment DATA_C
  80 bytes in segment DATA_I
  80 bytes in segment DATA_ID
 676 bytes in segment DATA_Z
  24 bytes in segment INITTAB
 
 836 bytes of CODE  memory (+ 84 bytes shared)
 207 bytes of CONST memory
 756 bytes of DATA  memory

Errors: none
Warnings: none
