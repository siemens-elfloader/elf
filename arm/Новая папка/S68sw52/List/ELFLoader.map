################################################################################
#                                                                              #
#      IAR Universal Linker V4.60I/386                                         #
#                                                                              #
#           Link time     =  14/Apr/2011  12:26:53                             #
#           Target CPU    =  ARM                                               #
#           List file     =  "C:\arm\Новая папка\S68sw52\List\ELFLoader.map"   #
#           Output file 1 =  "C:\arm\Новая папка\S68sw52\Exe\ELFLoader.elf"    #
#                            Format: elf, variant: -yas                        #
#           Output file 2 =  "C:\arm\Новая папка\S68sw52\Exe\ELFLoader.hex"    #
#                            Format: intel-extended                            #
#           Command line  =  "C:\arm\Новая папка\S68sw52\Obj\ESI.r79"          #
#                            "C:\arm\Новая папка\S68sw52\Obj\EXT2.r79"         #
#                            "C:\arm\Новая папка\S68sw52\Obj\FSWI.r79"         #
#                            "C:\arm\Новая папка\S68sw52\Obj\IMB.r79"          #
#                            "C:\arm\Новая папка\S68sw52\Obj\additional.r79"   #
#                            "C:\arm\Новая папка\S68sw52\Obj\conf_loader.r79"  #
#                            "C:\arm\Новая папка\S68sw52\Obj\config_data.r79"  #
#                            "C:\arm\Новая папка\S68sw52\Obj\elfloader.r79"    #
#                            "C:\arm\Новая папка\S68sw52\Obj\png.r79"          #
#                            "C:\arm\Новая папка\S68sw52\Obj\rets_S68sw52.r79" #
#                            -o                                                #
#                            "C:\arm\Новая папка\S68sw52\Exe\ELFLoader.hex"    #
#                            -Fintel-extended -l                               #
#                            "C:\arm\Новая папка\S68sw52\List\ELFLoader.map"   #
#                            -xmsnio -f "C:\arm\Новая папка\S68sw52.xcl"       #
#                            (-carm                                            #
#                            -Z(CODE)START,CODE,SWITAB,INITTAB,DATA_ID,DATA_C, #
#                            CONFIG_DATA_ID=A0078000-A007A000                  #
#                            -Z(DATA)CONFIG_DATA_I,DATA_N=A8D75AD4-A8D76433    #
#                            -Z(CODE)PATCH_ONCREATE=A03F79A4-A03F79A7          #
#                            -Z(CODE)PATCH_ONCLOSE=A03F79B8-A03F79BB           #
#                            -Z(CODE)PATCH_ESI1=A07A9C1C-A07A9C1F              #
#                            -Z(CODE)PATCH_ESI2=A07A9C2C-A07A9C2F              #
#                            -Z(CODE)PATCH_SHOWMSG_BLF=A0519074-A0519077       #
#                            -Z(CODE)PATCH_NO_BROWSE_TXT=A04652EA-A04652EB     #
#                            -Z(CODE)SWILIB_FUNC171=A00745C4-A00745C7          #
#                            -Z(CODE)SWILIB_FUNC172=A00745C8-A00745CB          #
#                            -Z(CODE)SWILIB_FUNC19C=A0074670-A0074673          #
#                            -Z(CODE)SWILIB_FUNC1B8_1BB=A00746E0-A00746EF      #
#                            -Z(CODE)SWILIB_FUNC1E9=A00747A4-A00747A7          #
#                            -Z(CODE)PATCH_EXT2_R4R7=A026F2FA-A026F2FD         #
#                            -Z(CODE)PATCH_EXT2_R6R5=A026F414-A026F417         #
#                            -Z(CODE)PATCH_EXT2_R5R1=A026F162-A026F165         #
#                            -Z(CODE)PATCH_EXT2_R5R7=A026F064-A026F067         #
#                            -Z(CODE)PATCH_EXT2_CLUST1=A026F326-A026F327       #
#                            -Z(CODE)PATCH_EXT2_CLUST2=A026F084-A026F085       #
#                            -Z(CODE)PATCH_EXT2_JUMPERS=A01C0EB4-A01C0EDB      #
#                            -Z(CODE)PATCH_EXT2_IMPL=A026F344-A026F359         #
#                            -Z(CODE)PATCH_ENABLE_ALTOPEN=A033DB6E-A033DB6F    #
#                            -Z(CODE)PATCH_GET_PIT=A07FBBFC-A07FBBFF           #
#                            -Z(CODE)PATCH_GET_PITJ=A07FBC00-A07FBC03          #
#                            -Z(CODE)FSWI_PATCH1=A1079DB4-A1079DB7             #
#                            -Z(CODE)FSWI_PATCH2=A1079CC8-A1079CCB             #
#                            -Z(CODE)LIBR=A0074000-A0077FFF)                   #
#                            "-Oelf,as=C:\arm\Новая папка\S68sw52\Exe\ELFLoade #
#                            r.elf"                                            #
#                                                                              #
#                        Copyright 1987-2007 IAR Systems. All rights reserved. #
################################################################################





                ****************************************
                *                                      *
                *           CROSS REFERENCE            *
                *                                      *
                ****************************************

                  There are no program entries.




                ****************************************
                *                                      *
                *            RUNTIME MODEL             *
                *                                      *
                ****************************************

  StackAlign4  = USED
  __cpu_mode   = __pcs__interwork
  __data_model = absolute
  __endian     = little
  __rt_version = 6



                ****************************************
                *                                      *
                *              MODULE MAP              *
                *                                      *
                ****************************************


  DEFINED ABSOLUTE ENTRIES
    *************************************************************************

  FILE NAME : C:\arm\Новая папка\S68sw52\Obj\ESI.r79
  PROGRAM MODULE, NAME : ESI

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: A0078000 - A0078003 (0x4 bytes), align: 2
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           BXR1                    A0078000        MyIDLECSMonClose (elfloader)
                                                   MyIDLECSMonCreate (elfloader)
    -------------------------------------------------------------------------
PATCH_NO_BROWSE_TXT
  Relative segment, address: A04652EA - A04652EB (0x2 bytes), align: 1
  Segment part 1. ROOT.
    -------------------------------------------------------------------------
PATCH_ESI1
  Relative segment, address: A07A9C1C - A07A9C1F (0x4 bytes), align: 2
  Segment part 2. ROOT.
    -------------------------------------------------------------------------
PATCH_ESI2
  Relative segment, address: A07A9C2C - A07A9C2F (0x4 bytes), align: 2
  Segment part 3. ROOT.       Intra module refs:   Segment part 2
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078004 - A007800F (0xc bytes), align: 2
  Segment part 4. ROOT.       Intra module refs:   Segment part 3
    -------------------------------------------------------------------------
PATCH_GET_PIT
  Relative segment, address: A07FBBFC - A07FBBFF (0x4 bytes), align: 1
  Segment part 5. ROOT.
    -------------------------------------------------------------------------
PATCH_GET_PITJ
  Relative segment, address: A07FBC00 - A07FBC03 (0x4 bytes), align: 2
  Segment part 6. ROOT.       Intra module refs:   Segment part 5
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078010 - A007804B (0x3c bytes), align: 2
  Segment part 7. ROOT.       Intra module refs:   Segment part 6

    *************************************************************************

  FILE NAME : C:\arm\Новая папка\S68sw52\Obj\EXT2.r79
  PROGRAM MODULE, NAME : EXT2

  SEGMENTS IN THE MODULE
  ======================
PATCH_ENABLE_ALTOPEN
  Relative segment, address: A033DB6E - A033DB6F (0x2 bytes), align: 1
  Segment part 0. ROOT.
    -------------------------------------------------------------------------
PATCH_EXT2_R4R7
  Relative segment, address: A026F2FA - A026F2FD (0x4 bytes), align: 1
  Segment part 1. ROOT.
    -------------------------------------------------------------------------
PATCH_EXT2_R6R5
  Relative segment, address: A026F414 - A026F417 (0x4 bytes), align: 1
  Segment part 2. ROOT.
    -------------------------------------------------------------------------
PATCH_EXT2_R5R1
  Relative segment, address: A026F162 - A026F165 (0x4 bytes), align: 1
  Segment part 3. ROOT.
    -------------------------------------------------------------------------
PATCH_EXT2_R5R7
  Relative segment, address: A026F064 - A026F067 (0x4 bytes), align: 1
  Segment part 4. ROOT.
    -------------------------------------------------------------------------
PATCH_EXT2_CLUST1
  Relative segment, address: A026F326 - A026F327 (0x2 bytes), align: 1
  Segment part 5. ROOT.
    -------------------------------------------------------------------------
PATCH_EXT2_CLUST2
  Relative segment, address: A026F084 - A026F085 (0x2 bytes), align: 1
  Segment part 6. ROOT.
    -------------------------------------------------------------------------
PATCH_EXT2_IMPL
  Relative segment, address: A026F344 - A026F359 (0x16 bytes), align: 1
  Segment part 7. ROOT.
    -------------------------------------------------------------------------
PATCH_EXT2_JUMPERS
  Relative segment, address: A01C0EB4 - A01C0EDB (0x28 bytes), align: 2
  Segment part 8.             Intra module refs:   Segment part 1
                                                   Segment part 2
                                                   Segment part 3
                                                   Segment part 4
                                                   Segment part 7
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A007804C - A007809B (0x50 bytes), align: 2
  Segment part 9.             Intra module refs:   Segment part 8

    *************************************************************************

  FILE NAME : C:\arm\Новая папка\S68sw52\Obj\FSWI.r79
  PROGRAM MODULE, NAME : FSWI

  SEGMENTS IN THE MODULE
  ======================
FSWI_PATCH1
  Relative segment, address: A1079DB4 - A1079DB7 (0x4 bytes), align: 2
  Segment part 0. ROOT.
    -------------------------------------------------------------------------
FSWI_PATCH2
  Relative segment, address: A1079CC8 - A1079CCB (0x4 bytes), align: 2
  Segment part 1. ROOT.       Intra module refs:   Segment part 0
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A007809C - A0078127 (0x8c bytes), align: 2
  Segment part 2. ROOT.       Intra module refs:   Segment part 1
    -------------------------------------------------------------------------
LIBR
  Relative segment, address: A0074000, align: 2
  Segment part 3. ROOT.       Intra module refs:   Segment part 2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Library                 A0074000        LoadLibrary (elfloader)

    *************************************************************************

  FILE NAME : C:\arm\Новая папка\S68sw52\Obj\IMB.r79
  PROGRAM MODULE, NAME : IMB

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: A0078128 - A0078193 (0x6c bytes), align: 2
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ExecuteIMB              A0078128        ExecuteIMB::??rT (elfloader)
                                                   elfload (elfloader)

    *************************************************************************

  FILE NAME : C:\arm\Новая папка\S68sw52\Obj\additional.r79
  PROGRAM MODULE, NAME : additional

  SEGMENTS IN THE MODULE
  ======================
CSTACK
  Segment part 1. NOT NEEDED.

    *************************************************************************

  FILE NAME : C:\arm\Новая папка\S68sw52\Obj\conf_loader.r79
  PROGRAM MODULE, NAME : conf_loader

  SEGMENTS IN THE MODULE
  ======================
DATA_N
  Relative segment, address: A8D75F0C - A8D75F0F (0x4 bytes), align: 2
  Segment part 2.             Intra module refs:   LoadConfigData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           successed_config_filename
                                   A8D75F0C 
    -------------------------------------------------------------------------
CODE
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078194 - A00782B3 (0x120 bytes), align: 2
  Segment part 4.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LoadConfigData          A0078194        start (elfloader)
               stack 1 = 00000000 ( 00000030 )
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Segment part 6. NOT NEEDED.

    *************************************************************************

  FILE NAME : C:\arm\Новая папка\S68sw52\Obj\config_data.r79
  PROGRAM MODULE, NAME : config_data

  SEGMENTS IN THE MODULE
  ======================
CONFIG_DATA_I
  Relative segment, address: A8D75AD4 - A8D75AFF (0x2c bytes), align: 2
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr1                 A8D75AD4 
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A8D75B00 - A8D75BFF (0x100 bytes), align: 2
  Segment part 4. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           folder_d                A8D75B00        LoadDaemons (elfloader)
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A8D75C00 - A8D75C2B (0x2c bytes), align: 2
  Segment part 6. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr2                 A8D75C00 
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A8D75C2C - A8D75C6B (0x40 bytes), align: 2
  Segment part 8. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           swi_blib                A8D75C2C        LoadLibrary (elfloader)
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A8D75C6C - A8D75C97 (0x2c bytes), align: 2
  Segment part 10. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr_m11              A8D75C6C 
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A8D75C98 - A8D75CC3 (0x2c bytes), align: 2
  Segment part 12. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr3                 A8D75C98 
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A8D75CC4 - A8D75D43 (0x80 bytes), align: 2
  Segment part 14. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           folder_i                A8D75CC4        PatchGetPIT (png)
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A8D75D44 - A8D75D6F (0x2c bytes), align: 2
  Segment part 16. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr4                 A8D75D44 
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A8D75D70 - A8D75DEF (0x80 bytes), align: 2
  Segment part 18. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           folder_e                A8D75D70        loading (elfloader)
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A8D75DF0 - A8D75E1B (0x2c bytes), align: 2
  Segment part 20. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr5                 A8D75DF0 
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A8D75E1C - A8D75E1F (0x4 bytes), align: 2
  Segment part 22. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ALPHA_THRESHOLD         A8D75E1C        create_imghdr (png)
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A8D75E20 - A8D75E4B (0x2c bytes), align: 2
  Segment part 24. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr6                 A8D75E20 
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A8D75E4C - A8D75E4F (0x4 bytes), align: 2
  Segment part 26. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CACHE_PNG               A8D75E4C        PatchGetPIT (png)
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A8D75E50 - A8D75E7B (0x2c bytes), align: 2
  Segment part 28. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr7                 A8D75E50 
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A8D75E7C - A8D75E7F (0x4 bytes), align: 2
  Segment part 30. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DEFAULT_COLOR           A8D75E7C        create_imghdr (png)
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A8D75E80 - A8D75EDF (0x60 bytes), align: 2
  Segment part 32. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfgcbox7_1              A8D75E80 
    -------------------------------------------------------------------------
CONFIG_DATA_I
  Relative segment, address: A8D75EE0 - A8D75F0B (0x2c bytes), align: 2
  Segment part 34. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr_m10              A8D75EE0 
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A00797B0 - A00797DB (0x2c bytes), align: 2
  Segment part 3. ROOT.       Intra module refs:   cfghdr1
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A00797DC - A00798DB (0x100 bytes), align: 2
  Segment part 5. ROOT.       Intra module refs:   folder_d
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A00798DC - A0079907 (0x2c bytes), align: 2
  Segment part 7. ROOT.       Intra module refs:   cfghdr2
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A0079908 - A0079947 (0x40 bytes), align: 2
  Segment part 9. ROOT.       Intra module refs:   swi_blib
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A0079948 - A0079973 (0x2c bytes), align: 2
  Segment part 11. ROOT.      Intra module refs:   cfghdr_m11
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A0079974 - A007999F (0x2c bytes), align: 2
  Segment part 13. ROOT.      Intra module refs:   cfghdr3
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A00799A0 - A0079A1F (0x80 bytes), align: 2
  Segment part 15. ROOT.      Intra module refs:   folder_i
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A0079A20 - A0079A4B (0x2c bytes), align: 2
  Segment part 17. ROOT.      Intra module refs:   cfghdr4
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A0079A4C - A0079ACB (0x80 bytes), align: 2
  Segment part 19. ROOT.      Intra module refs:   folder_e
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A0079ACC - A0079AF7 (0x2c bytes), align: 2
  Segment part 21. ROOT.      Intra module refs:   cfghdr5
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A0079AF8 - A0079AFB (0x4 bytes), align: 2
  Segment part 23. ROOT.      Intra module refs:   ALPHA_THRESHOLD
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A0079AFC - A0079B27 (0x2c bytes), align: 2
  Segment part 25. ROOT.      Intra module refs:   cfghdr6
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A0079B28 - A0079B2B (0x4 bytes), align: 2
  Segment part 27. ROOT.      Intra module refs:   CACHE_PNG
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A0079B2C - A0079B57 (0x2c bytes), align: 2
  Segment part 29. ROOT.      Intra module refs:   cfghdr7
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A0079B58 - A0079B5B (0x4 bytes), align: 2
  Segment part 31. ROOT.      Intra module refs:   DEFAULT_COLOR
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A0079B5C - A0079BBB (0x60 bytes), align: 2
  Segment part 33. ROOT.      Intra module refs:   cfgcbox7_1
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Relative segment, address: A0079BBC - A0079BE7 (0x2c bytes), align: 2
  Segment part 35. ROOT.      Intra module refs:   cfghdr_m10
    -------------------------------------------------------------------------
CONFIG_DATA_ID
  Segment part 36. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?*?CONFIG_DATA_ID       
    -------------------------------------------------------------------------
INITTAB
  Relative segment, address: A007961C - A0079627 (0xc bytes), align: 2
  Segment part 37. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?init?tab?CONFIG_DATA_I
                                   A007961C 

    *************************************************************************

  FILE NAME : C:\arm\Новая папка\S68sw52\Obj\elfloader.r79
  PROGRAM MODULE, NAME : elfloader

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 26. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A00782B4 - A00782BF (0xc bytes), align: 2
  Segment part 27.            Intra module refs:   elfload
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           zeromem_a               A00782B4 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 28. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A00782C0 - A007857B (0x2bc bytes), align: 2
  Segment part 29.            Intra module refs:   LoadDaemons
                                                   elfloader_onload
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           elfload                 A00782C1 
               stack 1 = 00000000 ( 00000224 )
    -------------------------------------------------------------------------
CODE
  Segment part 30. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A007857C - A00785A1 (0x26 bytes), align: 2
  Segment part 31.            Intra module refs:   Segment part 7
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           elfloader_onload        A007857D 
               stack 1 = 00000000 ( 00000088 )
    -------------------------------------------------------------------------
CODE
  Segment part 32. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A00785A4 - A007860F (0x6c bytes), align: 2
  Segment part 33.            Intra module refs:   CreateHELPER_PROC
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           proc_HELPER             A00785A4 
               stack 1 = 00000000 ( 0000001C )
    -------------------------------------------------------------------------
CODE
  Segment part 34. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078610 - A007863F (0x30 bytes), align: 2
  Segment part 35.            Intra module refs:   MyIDLECSMonCreate
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CreateHELPER_PROC       A0078610 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 36. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078640 - A0078653 (0x14 bytes), align: 2
  Segment part 37.            Intra module refs:   Segment part 24
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           REDRAW_impl             A0078640 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 38. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078654 - A0078677 (0x24 bytes), align: 2
  Segment part 39.            Intra module refs:   Segment part 23
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SUBPROC_impl            A0078654 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 40. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078678 - A0078683 (0xc bytes), align: 2
  Segment part 41.            Intra module refs:   Segment part 25
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SEQKILLER_impl          A0078679 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 42. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078684 - A00786AF (0x2c bytes), align: 2
  Segment part 43.            Intra module refs:   Segment part 21
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MyIDLECSMonClose        A0078684 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 44. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A00786B0 - A0078743 (0x94 bytes), align: 2
  Segment part 45.            Intra module refs:   loading
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LoadDaemons             A00786B0 
               stack 1 = 00000000 ( 00000354 )
    -------------------------------------------------------------------------
CODE
  Segment part 46. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_N
  Relative segment, address: A8D75F10 - A8D75F13 (0x4 bytes), align: 2
  Segment part 15.            Intra module refs:   LoadLibrary
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pLIB_TOP                A8D75F10        Segment part 1 (rets_S68sw52)
                                                   Segment part 2 (FSWI)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078744 - A007875F (0x1c bytes), align: 2
  Segment part 47.            Intra module refs:   LoadLibrary
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           get_file_size           A0078745 
               stack 1 = 00000000 ( 00000034 )
    -------------------------------------------------------------------------
CODE
  Segment part 48. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078760 - A00788A3 (0x144 bytes), align: 2
  Segment part 49.            Intra module refs:   loading
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LoadLibrary             A0078760 
               stack 1 = 00000000 ( 00000050 )
    -------------------------------------------------------------------------
CODE
  Segment part 50. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_N
  Relative segment, address: A8D75F14 - A8D75F53 (0x40 bytes), align: 2
  Segment part 16.            Intra module refs:   Segment part 17
                                                   Segment part 18
                                                   loading
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           bigicons_str            A8D75F34 
           smallicons_str          A8D75F14 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A00788A4 - A007892B (0x88 bytes), align: 2
  Segment part 51.            Intra module refs:   create_folder
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           mktree                  A00788A4 
               stack 1 = 00000000 ( 0000009C )
    -------------------------------------------------------------------------
CODE
  Segment part 52. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A007892C - A0078943 (0x18 bytes), align: 2
  Segment part 53.            Intra module refs:   start
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           create_folder           A007892C 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 54. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078944 - A00789BF (0x7c bytes), align: 2
  Segment part 55.            Intra module refs:   start
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           loading                 A0078944 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 56. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A0079628 - A0079643 (0x1c bytes), align: 2
  Segment part 2.             Intra module refs:   NO_FUNC
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A0079644 - A00796C3 (0x80 bytes), align: 2
  Segment part 3.             Intra module refs:   start
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A00796C4 - A00796CB (0x8 bytes), align: 2
  Segment part 4.             Intra module refs:   Segment part 7
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A00796CC - A00796D3 (0x8 bytes), align: 2
  Segment part 5.             Intra module refs:   Segment part 7
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A00796D4 - A00796D7 (0x4 bytes), align: 2
  Segment part 6.             Intra module refs:   Segment part 7
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A00796D8 - A007971B (0x44 bytes), align: 2
  Segment part 7.             Intra module refs:   loading
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A007971C - A0079723 (0x8 bytes), align: 2
  Segment part 8.             Intra module refs:   LoadDaemons
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A0079724 - A0079767 (0x44 bytes), align: 2
  Segment part 9.             Intra module refs:   LoadLibrary
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A0079768 - A007977B (0x14 bytes), align: 2
  Segment part 10.            Intra module refs:   create_folder
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A007977C - A0079783 (0x8 bytes), align: 2
  Segment part 11.            Intra module refs:   ESI
    -------------------------------------------------------------------------
DATA_C
  Segment part 12. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_C
  Segment part 13. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A0079784 - A007978B (0x8 bytes), align: 2
  Segment part 14.            Intra module refs:   CreateHELPER_PROC
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A007978C - A0079793 (0x8 bytes), align: 2
  Segment part 17.            Intra module refs:   Segment part 7
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A0079794 - A007979B (0x8 bytes), align: 2
  Segment part 18.            Intra module refs:   Segment part 7
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A00789C0 - A0078A1B (0x5c bytes), align: 2
  Segment part 57.            Intra module refs:   MyIDLECSMonCreate
                                                   create_folder
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           start                   A00789C0 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 58. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078A1C - A0078A43 (0x28 bytes), align: 2
  Segment part 59.            Intra module refs:   Segment part 20
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MyIDLECSMonCreate       A0078A1C 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 60. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078A44 - A0078AB3 (0x70 bytes), align: 2
  Segment part 61.            Intra module refs:   ascii2ws
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           char8to16               A0078A45 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 62. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078AB4 - A0078ACF (0x1c bytes), align: 2
  Segment part 63.            Intra module refs:   ESI
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ascii2ws                A0078AB5 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 64. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078AD0 - A0078B17 (0x48 bytes), align: 2
  Segment part 65.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ESI                     A0078AD0        Segment part 4 (ESI)
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 66. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078B18 - A0078B53 (0x3c bytes), align: 2
  Segment part 67.            Intra module refs:   MyShowMSG
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DoUnknownFileType       A0078B18 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 68. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_N
  Relative segment, address: A8D75F54 - A8D75F57 (0x4 bytes), align: 2
  Segment part 19.            Intra module refs:   Segment part 72
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EXT2_AREA               A8D75F54        Segment part 1 (rets_S68sw52)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078B54 - A0078B83 (0x30 bytes), align: 2
  Segment part 69.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GET_EXT2_TABLE          A0078B54        Segment part 9 (EXT2)
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 70. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078B84 - A0078BE3 (0x60 bytes), align: 2
  Segment part 71.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EXT2_REALLOC            A0078B84        Segment part 8 (EXT2)
               stack 1 = 00000000 ( 00000018 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078BE4 - A0078BE7 (0x4 bytes), align: 2
  Segment part 72.            Intra module refs:   EXT2_REALLOC
                                                   GET_EXT2_TABLE
    -------------------------------------------------------------------------
CODE
  Segment part 73. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078BE8 - A0078C07 (0x20 bytes), align: 2
  Segment part 74.            Intra module refs:   Segment part 22
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MyShowMSG               A0078BE9 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 75. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 76. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           FUNC_ABORT              
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 77. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078C08 - A0078C3B (0x34 bytes), align: 2
  Segment part 78.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NO_FUNC                 A0078C08        Segment part 2 (FSWI)
               stack 1 = 00000000 ( 00000044 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078C3C - A0078C43 (0x8 bytes), align: 2
  Segment part 79.            Intra module refs:   elfload
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ExecuteIMB::??rT        A0078C3D 
    -------------------------------------------------------------------------
CODE
  Segment part 80. NOT NEEDED.Intra module refs:   MyIDLECSMonClose
                                                   MyIDLECSMonCreate
    -------------------------------------------------------------------------
CODE
  Segment part 81. NOT NEEDED.Intra module refs:   loading
    -------------------------------------------------------------------------
CODE
  Segment part 82. NOT NEEDED.Intra module refs:   start
    -------------------------------------------------------------------------
CODE
  Segment part 83. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 84. NOT NEEDED.
    -------------------------------------------------------------------------
PATCH_ONCREATE
  Relative segment, address: A03F79A4 - A03F79A7 (0x4 bytes), align: 2
  Segment part 20. ROOT.
    -------------------------------------------------------------------------
PATCH_ONCLOSE
  Relative segment, address: A03F79B8 - A03F79BB (0x4 bytes), align: 2
  Segment part 21. ROOT.
    -------------------------------------------------------------------------
PATCH_SHOWMSG_BLF
  Relative segment, address: A0519074 - A0519077 (0x4 bytes), align: 2
  Segment part 22. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC171
  Relative segment, address: A00745C4 - A00745C7 (0x4 bytes), align: 2
  Segment part 23. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC172
  Relative segment, address: A00745C8 - A00745CB (0x4 bytes), align: 2
  Segment part 24. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC19C
  Relative segment, address: A0074670 - A0074673 (0x4 bytes), align: 2
  Segment part 25. ROOT.
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    *************************************************************************

  FILE NAME : C:\arm\Новая папка\S68sw52\Obj\png.r79
  PROGRAM MODULE, NAME : png

  SEGMENTS IN THE MODULE
  ======================
DATA_C
  Relative segment, address: A007979C - A00797A3 (0x8 bytes), align: 2
  Segment part 2.             Intra module refs:   create_imghdr
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A00797AC - A00797AC (0x1 bytes), align: 0
  Segment part 3.             Intra module refs:   empty_img
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Pointer                 A00797AC 
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A00797A4 - A00797AB (0x8 bytes), align: 2
  Segment part 4.             Intra module refs:   PatchGetPIT
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           empty_img               A00797A4 
    -------------------------------------------------------------------------
CODE
  Segment part 7. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078C44 - A0078C4B (0x8 bytes), align: 2
  Segment part 8.             Intra module refs:   create_imghdr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           xmalloc                 A0078C45 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078C4C - A0078C53 (0x8 bytes), align: 2
  Segment part 10.            Intra module refs:   create_imghdr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           xmfree                  A0078C4D 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 11. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078C54 - A0078C7B (0x28 bytes), align: 2
  Segment part 12.            Intra module refs:   create_imghdr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           read_data_fn            A0078C54 
               stack 1 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
CODE
  Segment part 13. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0078C7C - A0079227 (0x5ac bytes), align: 2
  Segment part 14.            Intra module refs:   PatchGetPIT
                                                   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           create_imghdr           A0078C7C 
               stack 1 = 00000000 ( 00000060 )
    -------------------------------------------------------------------------
CODE
  Segment part 15. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_N
  Relative segment, address: A8D75F58 - A8D75F63 (0xc bytes), align: 2
  Segment part 5.             Intra module refs:   InitPngBitMap
                                                   Segment part 23
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pngtop                  A8D75F58        Segment part 1 (rets_S68sw52)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0079228 - A007924B (0x24 bytes), align: 2
  Segment part 16.            Intra module refs:   PatchGetPIT
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           strcpy_tolow            A0079229 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 17. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A007924C - A00792E3 (0x98 bytes), align: 2
  Segment part 18.            Intra module refs:   PatchGetPIT
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           print10                 A007924C 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 19. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A00792E4 - A0079357 (0x74 bytes), align: 2
  Segment part 20.            Intra module refs:   PatchGetPIT
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           find_png_in_cache       A00792E4 
               stack 1 = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
CODE
  Segment part 21. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0079358 - A00795C7 (0x270 bytes), align: 2
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PatchGetPIT             A0079358        Segment part 7 (ESI)
               stack 1 = 00000000 ( 00000120 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A00795C8 - A00795CB (0x4 bytes), align: 2
  Segment part 23.            Intra module refs:   PatchGetPIT
                                                   find_png_in_cache
    -------------------------------------------------------------------------
CODE
  Segment part 24. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A00795CC - A0079607 (0x3c bytes), align: 2
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           InitPngBitMap           A00795CC        loading (elfloader)
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
SWILIB_FUNC1E9
  Relative segment, address: A00747A4 - A00747A7 (0x4 bytes), align: 2
  Segment part 6. ROOT.
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    *************************************************************************

  FILE NAME : C:\arm\Новая папка\S68sw52\Obj\rets_S68sw52.r79
  PROGRAM MODULE, NAME : rets_S68sw52

  SEGMENTS IN THE MODULE
  ======================
DATA_N
  Relative segment, address: A8D75F64, align: 2
  Segment part 0. ROOT.
    -------------------------------------------------------------------------
SWILIB_FUNC1B8_1BB
  Relative segment, address: A00746E0 - A00746EF (0x10 bytes), align: 2
  Segment part 1. ROOT.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A0079608 - A007961B (0x14 bytes), align: 2
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OldOnClose              A0079608        MyIDLECSMonClose (elfloader)
           OldOnCreate             A007960C        MyIDLECSMonCreate (elfloader)
           OldShowMsg              A0079610        MyShowMSG (elfloader)
           PITgetN                 A0079614        Segment part 7 (ESI)
           PITret                  A0079618        Segment part 7 (ESI)




                ****************************************
                *                                      *
                *            MODULE SUMMARY            *
                *                                      *
                ****************************************

Module            CODE   DATA
------            ----   ----
                 (Rel)  (Rel)
ESI                 94
EXT2               164
FSWI               148
IMB                108
conf_loader        288      4
config_data      1 092  1 080
elfloader        2 836     72
  + shared           8
png              2 521     12
rets_S68sw52        36
N/A (alignment)
------           -----  -----
Total:           7 295  1 168


                ****************************************
                *                                      *
                *              CALL GRAPH              *
                *                                      *
                ****************************************

  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  elfloader_onload
      | Stack used (prev) :  00000000
      | + function block  :  00000088
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000088


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  proc_HELPER
      | Stack used (prev) :  00000000
      | + function block  :  0000001C
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000001C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  REDRAW_impl
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  SUBPROC_impl
      | Stack used (prev) :  00000000
      | + function block  :  00000008
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000008


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  SEQKILLER_impl
      | Stack used (prev) :  00000000
      | + function block  :  00000008
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000008


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  MyIDLECSMonClose
      | Stack used (prev) :  00000000
      | + function block  :  00000008
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000008


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  LoadDaemons
      | Stack used (prev) :  00000000
      | + function block  :  00000354
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000354


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  MyIDLECSMonCreate
      | Stack used (prev) :  00000000
      | + function block  :  00000008
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000008


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  MyShowMSG
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  xmalloc
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  xmfree
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  read_data_fn
      | Stack used (prev) :  00000000
      | + function block  :  00000010
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000010


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  create_imghdr
      | Stack used (prev) :  00000000
      | + function block  :  00000060
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000060


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000354
  01  LoadConfigData
      | Stack used (prev) :  00000354
      | + function block  :  00000030
  <-Sub-tree of type: Function tree
    | Stack used          :  00000384


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000384
  01  zeromem_a
      | Stack used (prev) :  00000384
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00000388


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000388
  01  elfload
      | Stack used (prev) :  00000388
      | + function block  :  00000224
  <-Sub-tree of type: Function tree
    | Stack used          :  000005AC


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000005AC
  01  CreateHELPER_PROC
      | Stack used (prev) :  000005AC
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  000005B4


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000005B4
  01  get_file_size
      | Stack used (prev) :  000005B4
      | + function block  :  00000034
  <-Sub-tree of type: Function tree
    | Stack used          :  000005E8


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000005E8
  01  LoadLibrary
      | Stack used (prev) :  000005E8
      | + function block  :  00000050
  <-Sub-tree of type: Function tree
    | Stack used          :  00000638


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000638
  01  mktree
      | Stack used (prev) :  00000638
      | + function block  :  0000009C
  <-Sub-tree of type: Function tree
    | Stack used          :  000006D4


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000006D4
  01  create_folder
      | Stack used (prev) :  000006D4
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  000006D8


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000006D8
  01  loading
      | Stack used (prev) :  000006D8
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  000006E4


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000006E4
  01  start
      | Stack used (prev) :  000006E4
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  000006EC


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000006EC
  01  char8to16
      | Stack used (prev) :  000006EC
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  000006F0


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000006F0
  01  ascii2ws
      | Stack used (prev) :  000006F0
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  000006FC


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000006FC
  01  ESI
      | Stack used (prev) :  000006FC
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00000708


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000708
  01  DoUnknownFileType
      | Stack used (prev) :  00000708
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00000714


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000714
  01  GET_EXT2_TABLE
      | Stack used (prev) :  00000714
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  0000071C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000071C
  01  EXT2_REALLOC
      | Stack used (prev) :  0000071C
      | + function block  :  00000018
  <-Sub-tree of type: Function tree
    | Stack used          :  00000734


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000734
  01  NO_FUNC
      | Stack used (prev) :  00000734
      | + function block  :  00000044
  <-Sub-tree of type: Function tree
    | Stack used          :  00000778


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000778
  01  strcpy_tolow
      | Stack used (prev) :  00000778
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  0000077C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000077C
  01  print10
      | Stack used (prev) :  0000077C
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00000780


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000780
  01  find_png_in_cache
      | Stack used (prev) :  00000780
      | + function block  :  00000014
  <-Sub-tree of type: Function tree
    | Stack used          :  00000794


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000794
  01  PatchGetPIT
      | Stack used (prev) :  00000794
      | + function block  :  00000120
  <-Sub-tree of type: Function tree
    | Stack used          :  000008B4


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000008B4
  01  InitPngBitMap
      | Stack used (prev) :  000008B4
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  000008C0




                ****************************************
                *                                      *
                *      SEGMENTS IN ADDRESS ORDER       *
                *                                      *
                ****************************************


SEGMENT              SPACE    START ADDRESS   END ADDRESS     SIZE  TYPE  ALIGN
=======              =====    =============   ===========     ====  ====  =====
LIBR                                    A0074000                     rel    2
SWILIB_FUNC171                     A00745C4 - A00745C7           4   rel    2
SWILIB_FUNC172                     A00745C8 - A00745CB           4   rel    2
SWILIB_FUNC19C                     A0074670 - A0074673           4   rel    2
SWILIB_FUNC1B8_1BB                 A00746E0 - A00746EF          10   rel    2
SWILIB_FUNC1E9                     A00747A4 - A00747A7           4   rel    2
START                                   A0078000                     dse    0
CODE                               A0078000 - A007961B        161C   rel    2
SWITAB                                  A007961C                     dse    0
INITTAB                            A007961C - A0079627           C   rel    2
DATA_ID                                 A0079628                     dse    0
DATA_C                             A0079628 - A00797AC         185   rel    2
CONFIG_DATA_ID                     A00797B0 - A0079BE7         438   rel    2
PATCH_EXT2_JUMPERS                 A01C0EB4 - A01C0EDB          28   rel    2
PATCH_EXT2_R5R7                    A026F064 - A026F067           4   rel    1
PATCH_EXT2_CLUST2                  A026F084 - A026F085           2   rel    1
PATCH_EXT2_R5R1                    A026F162 - A026F165           4   rel    1
PATCH_EXT2_R4R7                    A026F2FA - A026F2FD           4   rel    1
PATCH_EXT2_CLUST1                  A026F326 - A026F327           2   rel    1
PATCH_EXT2_IMPL                    A026F344 - A026F359          16   rel    1
PATCH_EXT2_R6R5                    A026F414 - A026F417           4   rel    1
PATCH_ENABLE_ALTOPEN
                                   A033DB6E - A033DB6F           2   rel    1
PATCH_ONCREATE                     A03F79A4 - A03F79A7           4   rel    2
PATCH_ONCLOSE                      A03F79B8 - A03F79BB           4   rel    2
PATCH_NO_BROWSE_TXT
                                   A04652EA - A04652EB           2   rel    1
PATCH_SHOWMSG_BLF                  A0519074 - A0519077           4   rel    2
PATCH_ESI1                         A07A9C1C - A07A9C1F           4   rel    2
PATCH_ESI2                         A07A9C2C - A07A9C2F           4   rel    2
PATCH_GET_PIT                      A07FBBFC - A07FBBFF           4   rel    1
PATCH_GET_PITJ                     A07FBC00 - A07FBC03           4   rel    2
FSWI_PATCH2                        A1079CC8 - A1079CCB           4   rel    2
FSWI_PATCH1                        A1079DB4 - A1079DB7           4   rel    2
CONFIG_DATA_I                      A8D75AD4 - A8D75F0B         438   rel    2
DATA_N                             A8D75F0C - A8D75F63          58   rel    2

                ****************************************
                *                                      *
                *        END OF CROSS REFERENCE        *
                *                                      *
                ****************************************

 7 295 bytes of CODE memory
 1 168 bytes of DATA memory

Errors: none
Warnings: none

