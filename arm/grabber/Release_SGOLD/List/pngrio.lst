##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION    19/Jan/2011  13:20:39 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  C:\arm\grabber\pnglib\pngrio.c                       #
#    Command line    =  C:\arm\grabber\pnglib\pngrio.c -lC                   #
#                       C:\arm\grabber\Release_SGOLD\List\ -o                #
#                       C:\arm\grabber\Release_SGOLD\Obj\ -s9 --no_unroll    #
#                       --no_clustering --cpu_mode arm --endian little       #
#                       --cpu ARM926EJ-S --stack_align 4 --interwork -e      #
#                       --fpu None --dlib_config "C:\arm2\Embedded           #
#                       Workbench 4.0 Evaluation\ARM\LIB\dl5tpainl8n.h" -I   #
#                       "C:\arm2\Embedded Workbench 4.0                      #
#                       Evaluation\ARM\INC\" --inline_threshold=2            #
#    List file       =  C:\arm\grabber\Release_SGOLD\List\pngrio.lst         #
#    Object file     =  C:\arm\grabber\Release_SGOLD\Obj\pngrio.r79          #
#                                                                            #
#                                                                            #
##############################################################################

C:\arm\grabber\pnglib\pngrio.c
      1          
      2          /* pngrio.c - functions for data input
      3           *
      4           * libpng 1.2.1 - December 12, 2001
      5           * For conditions of distribution and use, see copyright notice in png.h
      6           * Copyright (c) 1998-2001 Glenn Randers-Pehrson
      7           * (Version 0.96 Copyright (c) 1996, 1997 Andreas Dilger)
      8           * (Version 0.88 Copyright (c) 1995, 1996 Guy Eric Schalnat, Group 42, Inc.)
      9           *
     10           * This file provides a location for all input.  Users who need
     11           * special handling are expected to write a function that has the same
     12           * arguments as this and performs a similar function, but that possibly
     13           * has a different input method.  Note that you shouldn't change this
     14           * function, but rather write a replacement function and then make
     15           * libpng use it at run time with png_set_read_fn(...).
     16           */
     17          
     18          #define PNG_INTERNAL
     19          #include "../pnglib/png.h"

  int CRYPTO_set_mem_functions(void *(*m)(size_t),void *(*r)(void *,size_t), void (*f)(void *));
                                          ^
"C:\arm2\Embedded Workbench 4.0 Evaluation\ARM\INC\crypto.h",298  Error[Pe092]: 
          identifier-list parameters may only be used in a function definition

  int CRYPTO_set_mem_functions(void *(*m)(size_t),void *(*r)(void *,size_t), void (*f)(void *));
                                                                    ^
"C:\arm2\Embedded Workbench 4.0 Evaluation\ARM\INC\crypto.h",298  Error[Pe020]: 
          identifier "size_t" is undefined

  int CRYPTO_set_locked_mem_functions(void *(*m)(size_t), void (*free_func)(void *));
                                                 ^
"C:\arm2\Embedded Workbench 4.0 Evaluation\ARM\INC\crypto.h",299  Error[Pe092]: 
          identifier-list parameters may only be used in a function definition

  void CRYPTO_get_mem_functions(void *(**m)(size_t),void *(**r)(void *, size_t), void (**f)(void *));
                                            ^
"C:\arm2\Embedded Workbench 4.0 Evaluation\ARM\INC\crypto.h",301  Error[Pe092]: 
          identifier-list parameters may only be used in a function definition

  void CRYPTO_get_mem_functions(void *(**m)(size_t),void *(**r)(void *, size_t), void (**f)(void *));
                                                                        ^
"C:\arm2\Embedded Workbench 4.0 Evaluation\ARM\INC\crypto.h",301  Error[Pe020]: 
          identifier "size_t" is undefined

  void CRYPTO_get_locked_mem_functions(void *(**m)(size_t), void (**f)(void *));
                                                   ^
"C:\arm2\Embedded Workbench 4.0 Evaluation\ARM\INC\crypto.h",302  Error[Pe092]: 
          identifier-list parameters may only be used in a function definition

  __swi __arm void *calloc(size_t nelem, size_t elsize);
                           ^
"C:\arm2\Embedded Workbench 4.0 Evaluation\ARM\INC\swilib.h",1623  Error[Pe020]: 
          identifier "size_t" is undefined

  __swi __arm void *calloc(size_t nelem, size_t elsize);
                                         ^
"C:\arm2\Embedded Workbench 4.0 Evaluation\ARM\INC\swilib.h",1623  Error[Pe020]: 
          identifier "size_t" is undefined

  __swi __arm png_structp png_create_read_struct(png_const_charp user_png_ver, png_voidp error_ptr, png_error_ptr error_fn, png_error_ptr warn_fn);
              ^
"C:\arm2\Embedded Workbench 4.0 Evaluation\ARM\INC\swilib.h",2236  Error[Pe020]: 
          identifier "png_structp" is undefined

  __swi __arm png_structp png_create_read_struct(png_const_charp user_png_ver, png_voidp error_ptr, png_error_ptr error_fn, png_error_ptr warn_fn);
                                                 ^
"C:\arm2\Embedded Workbench 4.0 Evaluation\ARM\INC\swilib.h",2236  Error[Pe020]: 
          identifier "png_const_charp" is undefined

  __swi __arm png_structp png_create_read_struct(png_const_charp user_png_ver, png_voidp error_ptr, png_error_ptr error_fn, png_error_ptr warn_fn);
                                                                               ^
"C:\arm2\Embedded Workbench 4.0 Evaluation\ARM\INC\swilib.h",2236  Error[Pe020]: 
          identifier "png_voidp" is undefined

  __swi __arm png_structp png_create_read_struct(png_const_charp user_png_ver, png_voidp error_ptr, png_error_ptr error_fn, png_error_ptr warn_fn);
                                                                                                    ^
"C:\arm2\Embedded Workbench 4.0 Evaluation\ARM\INC\swilib.h",2236  Error[Pe020]: 
          identifier "png_error_ptr" is undefined

  __swi __arm png_structp png_create_read_struct(png_const_charp user_png_ver, png_voidp error_ptr, png_error_ptr error_fn, png_error_ptr warn_fn);
                                                                                                                            ^
"C:\arm2\Embedded Workbench 4.0 Evaluation\ARM\INC\swilib.h",2236  Error[Pe020]: 
          identifier "png_error_ptr" is undefined

  __swi __arm png_infop png_create_info_struct(png_structp png_ptr);
              ^
"C:\arm2\Embedded Workbench 4.0 Evaluation\ARM\INC\swilib.h",2241  Error[Pe020]: 
          identifier "png_infop" is undefined

  __swi __arm png_infop png_create_info_struct(png_structp png_ptr);
                                               ^
"C:\arm2\Embedded Workbench 4.0 Evaluation\ARM\INC\swilib.h",2241  Error[Pe020]: 
          identifier "png_structp" is undefined

  __swi __arm void png_destroy_read_struct(png_structpp png_ptr_ptr, png_infopp info_ptr_ptr, png_infopp end_info_ptr_ptr);
                                           ^
"C:\arm2\Embedded Workbench 4.0 Evaluation\ARM\INC\swilib.h",2246  Error[Pe020]: 
          identifier "png_structpp" is undefined

  __swi __arm void png_destroy_read_struct(png_structpp png_ptr_ptr, png_infopp info_ptr_ptr, png_infopp end_info_ptr_ptr);
                                                                     ^
"C:\arm2\Embedded Workbench 4.0 Evaluation\ARM\INC\swilib.h",2246  Error[Pe020]: 
          identifier "png_infopp" is undefined

  __swi __arm void png_destroy_read_struct(png_structpp png_ptr_ptr, png_infopp info_ptr_ptr, png_infopp end_info_ptr_ptr);
                                                                                              ^
"C:\arm2\Embedded Workbench 4.0 Evaluation\ARM\INC\swilib.h",2246  Error[Pe020]: 
          identifier "png_infopp" is undefined

  __swi __arm void png_set_sig_bytes(png_structp png_ptr,int num_bytes);
                                     ^
"C:\arm2\Embedded Workbench 4.0 Evaluation\ARM\INC\swilib.h",2251  Error[Pe020]: 
          identifier "png_structp" is undefined

  __swi __arm void png_read_info(png_structp png_ptr, png_infop info_ptr);
                                 ^
"C:\arm2\Embedded Workbench 4.0 Evaluation\ARM\INC\swilib.h",2256  Error[Pe020]: 
          identifier "png_structp" is undefined

  __swi __arm void png_read_info(png_structp png_ptr, png_infop info_ptr);
                                                      ^
"C:\arm2\Embedded Workbench 4.0 Evaluation\ARM\INC\swilib.h",2256  Error[Pe020]: 
          identifier "png_infop" is undefined

  __swi __arm png_uint_32 png_get_IHDR(png_structp png_ptr,png_infop info_ptr, png_uint_32 *width, png_uint_32 *height, int *bit_depth, int *color_type, int *interlace_method, int *compression_method, int *filter_method);
              ^
"C:\arm2\Embedded Workbench 4.0 Evaluation\ARM\INC\swilib.h",2261  Error[Pe020]: 
          identifier "png_uint_32" is undefined

  __swi __arm png_uint_32 png_get_IHDR(png_structp png_ptr,png_infop info_ptr, png_uint_32 *width, png_uint_32 *height, int *bit_depth, int *color_type, int *interlace_method, int *compression_method, int *filter_method);
                                       ^
"C:\arm2\Embedded Workbench 4.0 Evaluation\ARM\INC\swilib.h",2261  Error[Pe020]: 
          identifier "png_structp" is undefined

  __swi __arm png_uint_32 png_get_IHDR(png_structp png_ptr,png_infop info_ptr, png_uint_32 *width, png_uint_32 *height, int *bit_depth, int *color_type, int *interlace_method, int *compression_method, int *filter_method);
                                                           ^
"C:\arm2\Embedded Workbench 4.0 Evaluation\ARM\INC\swilib.h",2261  Error[Pe020]: 
          identifier "png_infop" is undefined

  __swi __arm png_uint_32 png_get_IHDR(png_structp png_ptr,png_infop info_ptr, png_uint_32 *width, png_uint_32 *height, int *bit_depth, int *color_type, int *interlace_method, int *compression_method, int *filter_method);
                                                                               ^
"C:\arm2\Embedded Workbench 4.0 Evaluation\ARM\INC\swilib.h",2261  Error[Pe020]: 
          identifier "png_uint_32" is undefined

  __swi __arm png_uint_32 png_get_IHDR(png_structp png_ptr,png_infop info_ptr, png_uint_32 *width, png_uint_32 *height, int *bit_depth, int *color_type, int *interlace_method, int *compression_method, int *filter_method);
                                                                                                   ^
"C:\arm2\Embedded Workbench 4.0 Evaluation\ARM\INC\swilib.h",2261  Error[Pe020]: 
          identifier "png_uint_32" is undefined

  __swi __arm png_voidp png_malloc(png_structp png_ptr, png_uint_32 size);
              ^
"C:\arm2\Embedded Workbench 4.0 Evaluation\ARM\INC\swilib.h",2266  Error[Pe020]: 
          identifier "png_voidp" is undefined

  __swi __arm png_voidp png_malloc(png_structp png_ptr, png_uint_32 size);
                                   ^
"C:\arm2\Embedded Workbench 4.0 Evaluation\ARM\INC\swilib.h",2266  Error[Pe020]: 
          identifier "png_structp" is undefined

  __swi __arm png_voidp png_malloc(png_structp png_ptr, png_uint_32 size);
                                                        ^
"C:\arm2\Embedded Workbench 4.0 Evaluation\ARM\INC\swilib.h",2266  Error[Pe020]: 
          identifier "png_uint_32" is undefined

  __swi __arm void png_read_image(png_structp png_ptr, png_bytepp image);
                                  ^
"C:\arm2\Embedded Workbench 4.0 Evaluation\ARM\INC\swilib.h",2271  Error[Pe020]: 
          identifier "png_structp" is undefined

  __swi __arm void png_read_image(png_structp png_ptr, png_bytepp image);
                                                       ^
"C:\arm2\Embedded Workbench 4.0 Evaluation\ARM\INC\swilib.h",2271  Error[Pe020]: 
          identifier "png_bytepp" is undefined

  __swi __arm void png_read_end(png_structp png_ptr, png_infop info_ptr);
                                ^
"C:\arm2\Embedded Workbench 4.0 Evaluation\ARM\INC\swilib.h",2276  Error[Pe020]: 
          identifier "png_structp" is undefined

  __swi __arm void png_read_end(png_structp png_ptr, png_infop info_ptr);
                                                     ^
"C:\arm2\Embedded Workbench 4.0 Evaluation\ARM\INC\swilib.h",2276  Error[Pe020]: 
          identifier "png_infop" is undefined

  __swi __arm png_voidp png_get_io_ptr(png_structp png_ptr);
              ^
"C:\arm2\Embedded Workbench 4.0 Evaluation\ARM\INC\swilib.h",2281  Error[Pe020]: 
          identifier "png_voidp" is undefined

  __swi __arm png_voidp png_get_io_ptr(png_structp png_ptr);
                                       ^
"C:\arm2\Embedded Workbench 4.0 Evaluation\ARM\INC\swilib.h",2281  Error[Pe020]: 
          identifier "png_structp" is undefined

  __swi __arm png_uint_32 png_get_rowbytes(png_structp png_ptr,png_infop info_ptr);
              ^
"C:\arm2\Embedded Workbench 4.0 Evaluation\ARM\INC\swilib.h",2286  Error[Pe020]: 
          identifier "png_uint_32" is undefined

  __swi __arm png_uint_32 png_get_rowbytes(png_structp png_ptr,png_infop info_ptr);
                                           ^
"C:\arm2\Embedded Workbench 4.0 Evaluation\ARM\INC\swilib.h",2286  Error[Pe020]: 
          identifier "png_structp" is undefined

  __swi __arm png_uint_32 png_get_rowbytes(png_structp png_ptr,png_infop info_ptr);
                                                               ^
"C:\arm2\Embedded Workbench 4.0 Evaluation\ARM\INC\swilib.h",2286  Error[Pe020]: 
          identifier "png_infop" is undefined

  __swi __arm void png_read_row(png_structp png_ptr,png_bytep row,png_bytep dsp_row);
                                ^
"C:\arm2\Embedded Workbench 4.0 Evaluation\ARM\INC\swilib.h",2291  Error[Pe020]: 
          identifier "png_structp" is undefined

  __swi __arm void png_read_row(png_structp png_ptr,png_bytep row,png_bytep dsp_row);
                                                    ^
"C:\arm2\Embedded Workbench 4.0 Evaluation\ARM\INC\swilib.h",2291  Error[Pe020]: 
          identifier "png_bytep" is undefined

  __swi __arm void png_read_row(png_structp png_ptr,png_bytep row,png_bytep dsp_row);
                                                                  ^
"C:\arm2\Embedded Workbench 4.0 Evaluation\ARM\INC\swilib.h",2291  Error[Pe020]: 
          identifier "png_bytep" is undefined

  __swi __arm void png_init_io(png_structp png_ptr, int fp);
                               ^
"C:\arm2\Embedded Workbench 4.0 Evaluation\ARM\INC\swilib.h",2296  Error[Pe020]: 
          identifier "png_structp" is undefined

  __swi __arm png_structp png_create_read_struct_2(png_const_charp user_png_ver, png_voidp error_ptr,
              ^
"C:\arm2\Embedded Workbench 4.0 Evaluation\ARM\INC\swilib.h",2640  Error[Pe020]: 
          identifier "png_structp" is undefined

  __swi __arm png_structp png_create_read_struct_2(png_const_charp user_png_ver, png_voidp error_ptr,
                                                   ^
"C:\arm2\Embedded Workbench 4.0 Evaluation\ARM\INC\swilib.h",2640  Error[Pe020]: 
          identifier "png_const_charp" is undefined

  __swi __arm png_structp png_create_read_struct_2(png_const_charp user_png_ver, png_voidp error_ptr,
                                                                                 ^
"C:\arm2\Embedded Workbench 4.0 Evaluation\ARM\INC\swilib.h",2640  Error[Pe020]: 
          identifier "png_voidp" is undefined

                                                   png_error_ptr error_fn, png_error_ptr warn_fn, png_voidp mem_ptr,
                                                   ^
"C:\arm2\Embedded Workbench 4.0 Evaluation\ARM\INC\swilib.h",2641  Error[Pe020]: 
          identifier "png_error_ptr" is undefined

                                                   png_error_ptr error_fn, png_error_ptr warn_fn, png_voidp mem_ptr,
                                                                           ^
"C:\arm2\Embedded Workbench 4.0 Evaluation\ARM\INC\swilib.h",2641  Error[Pe020]: 
          identifier "png_error_ptr" is undefined

                                                   png_error_ptr error_fn, png_error_ptr warn_fn, png_voidp mem_ptr,
                                                                                                  ^
"C:\arm2\Embedded Workbench 4.0 Evaluation\ARM\INC\swilib.h",2641  Error[Pe020]: 
          identifier "png_voidp" is undefined

                                                   png_malloc_ptr malloc_fn, png_free_ptr free_fn);
                                                   ^
"C:\arm2\Embedded Workbench 4.0 Evaluation\ARM\INC\swilib.h",2642  Error[Pe020]: 
          identifier "png_malloc_ptr" is undefined

                                                   png_malloc_ptr malloc_fn, png_free_ptr free_fn);
                                                                             ^
"C:\arm2\Embedded Workbench 4.0 Evaluation\ARM\INC\swilib.h",2642  Error[Pe020]: 
          identifier "png_free_ptr" is undefined

  __swi __arm void png_set_read_fn(png_structp png_ptr, png_voidp io_ptr, png_rw_ptr read_data_fn);
                                   ^
"C:\arm2\Embedded Workbench 4.0 Evaluation\ARM\INC\swilib.h",2647  Error[Pe020]: 
          identifier "png_structp" is undefined

  __swi __arm void png_set_read_fn(png_structp png_ptr, png_voidp io_ptr, png_rw_ptr read_data_fn);
                                                        ^
"C:\arm2\Embedded Workbench 4.0 Evaluation\ARM\INC\swilib.h",2647  Error[Pe020]: 
          identifier "png_voidp" is undefined

  __swi __arm void png_set_read_fn(png_structp png_ptr, png_voidp io_ptr, png_rw_ptr read_data_fn);
                                                                          ^
"C:\arm2\Embedded Workbench 4.0 Evaluation\ARM\INC\swilib.h",2647  Error[Pe020]: 
          identifier "png_rw_ptr" is undefined

  __swi __arm void png_read_update_info(png_structp png_ptr,void *info_ptr);
                                        ^
"C:\arm2\Embedded Workbench 4.0 Evaluation\ARM\INC\swilib.h",2652  Error[Pe020]: 
          identifier "png_structp" is undefined

  __swi __arm void png_set_palette_to_rgb(png_structp png_ptr);
                                          ^
"C:\arm2\Embedded Workbench 4.0 Evaluation\ARM\INC\swilib.h",2657  Error[Pe020]: 
          identifier "png_structp" is undefined

  __swi __arm png_uint_32 png_get_valid(png_structp png_ptr,png_infop info_ptr, png_uint_32 flag);
              ^
"C:\arm2\Embedded Workbench 4.0 Evaluation\ARM\INC\swilib.h",2662  Error[Pe020]: 
          identifier "png_uint_32" is undefined

  __swi __arm png_uint_32 png_get_valid(png_structp png_ptr,png_infop info_ptr, png_uint_32 flag);
                                        ^
"C:\arm2\Embedded Workbench 4.0 Evaluation\ARM\INC\swilib.h",2662  Error[Pe020]: 
          identifier "png_structp" is undefined

  __swi __arm png_uint_32 png_get_valid(png_structp png_ptr,png_infop info_ptr, png_uint_32 flag);
                                                            ^
"C:\arm2\Embedded Workbench 4.0 Evaluation\ARM\INC\swilib.h",2662  Error[Pe020]: 
          identifier "png_infop" is undefined

  __swi __arm png_uint_32 png_get_valid(png_structp png_ptr,png_infop info_ptr, png_uint_32 flag);
                                                                                ^
"C:\arm2\Embedded Workbench 4.0 Evaluation\ARM\INC\swilib.h",2662  Error[Pe020]: 
          identifier "png_uint_32" is undefined

  __swi __arm void png_set_tRNS_to_alpha(png_structp png_ptr);
                                         ^
"C:\arm2\Embedded Workbench 4.0 Evaluation\ARM\INC\swilib.h",2667  Error[Pe020]: 
          identifier "png_structp" is undefined

  __swi __arm void png_set_filler(png_structp png_ptr,png_uint_32 filler, int flags);
                                  ^
"C:\arm2\Embedded Workbench 4.0 Evaluation\ARM\INC\swilib.h",2672  Error[Pe020]: 
          identifier "png_structp" is undefined

  __swi __arm void png_set_filler(png_structp png_ptr,png_uint_32 filler, int flags);
                                                      ^
"C:\arm2\Embedded Workbench 4.0 Evaluation\ARM\INC\swilib.h",2672  Error[Pe020]: 
          identifier "png_uint_32" is undefined

  __swi __arm void png_set_strip_16(png_structp png_ptr);
                                    ^
"C:\arm2\Embedded Workbench 4.0 Evaluation\ARM\INC\swilib.h",2677  Error[Pe020]: 
          identifier "png_structp" is undefined

  __swi __arm void png_set_packing(png_structp png_ptr);
                                   ^
"C:\arm2\Embedded Workbench 4.0 Evaluation\ARM\INC\swilib.h",2682  Error[Pe020]: 
          identifier "png_structp" is undefined

  __swi __arm void png_set_gray_to_rgb(png_structp png_ptr);
                                       ^
"C:\arm2\Embedded Workbench 4.0 Evaluation\ARM\INC\swilib.h",2687  Error[Pe020]: 
          identifier "png_structp" is undefined

  __swi __arm int png_check_sig(png_bytep sig, int num);
                                ^
"C:\arm2\Embedded Workbench 4.0 Evaluation\ARM\INC\swilib.h",2692  Error[Pe020]: 
          identifier "png_bytep" is undefined

  __swi __arm void png_set_gray_1_2_4_to_8(png_structp png_ptr);
                                           ^
"C:\arm2\Embedded Workbench 4.0 Evaluation\ARM\INC\swilib.h",2888  Error[Pe020]: 
          identifier "png_structp" is undefined

  __swi __arm void png_set_invert_mono(png_structp png_ptr);
                                       ^
"C:\arm2\Embedded Workbench 4.0 Evaluation\ARM\INC\swilib.h",2893  Error[Pe020]: 
          identifier "png_structp" is undefined

  extern PNG_EXPORT(void,png_read_update_info) PNGARG((png_structp png_ptr,
         ^
"C:\arm\grabber\pnglib\png.h",1525  Error[Pe147]: declaration is incompatible
          with "void png_read_update_info(<error-type>, void *)" (declared at
          line 2652 of "C:\arm2\Embedded Workbench 4.0
          Evaluation\ARM\INC\swilib.h")
     20          
     21          /* Read the data from whatever input you are using.  The default routine
     22             reads from a file pointer.  Note that this routine sometimes gets called
     23             with very small lengths, so you should implement some kind of simple
     24             buffering if you are using unbuffered reads.  This should never be asked
     25             to read more then 64K on a 16 bit machine. */
     26          void /* PRIVATE */
     27          png_read_data(png_structp png_ptr, png_bytep data, png_size_t length)
     28          {
     29             png_debug1(4,"reading %d bytes\n", (int)length);
     30             if (png_ptr->read_data_fn != NULL)
     31                (*(png_ptr->read_data_fn))(png_ptr, data, length);
     32             else
     33                png_error(png_ptr, "Call to NULL read function");
     34          }
     35          
     36          #if !defined(PNG_NO_STDIO)
     37          /* This is the function that does the actual reading of data.  If you are
     38             not reading from a standard C stream, you should create a replacement
     39             read_data function and use it at run time with png_set_read_fn(), rather
     40             than changing the library. */
     41          #ifndef USE_FAR_KEYWORD
     42          static void /* PRIVATE */
     43          png_default_read_data(png_structp png_ptr, png_bytep data, png_size_t length)
     44          {
     45             png_size_t check;
     46          
     47             /* fread() returns 0 on error, so it is OK to store this in a png_size_t
     48              * instead of an int, which is what fread() actually returns.
     49              */
     50          #if defined(_WIN32_WCE)
     51             if ( !ReadFile((HANDLE)(png_ptr->io_ptr), data, length, &check, NULL) )
     52                check = 0;
     53          #else
     54             check = (png_size_t)fread((png_FILE_p)png_ptr->io_ptr,data,length,0);
     55          #endif
     56          
     57             if (check != length)
     58                png_error(png_ptr, "Read Error");
     59          }
     60          #else
     61          /* this is the model-independent version. Since the standard I/O library
     62             can't handle far buffers in the medium and small models, we have to copy
     63             the data.
     64          */
     65          
     66          #define NEAR_BUF_SIZE 1024
     67          #define MIN(a,b) (a <= b ? a : b)
     68          
     69          static void /* PRIVATE */
     70          png_default_read_data(png_structp png_ptr, png_bytep data, png_size_t length)
     71          {
     72             int check;
     73             png_byte *n_data;
     74             png_FILE_p io_ptr;
     75          
     76             /* Check if data really is near. If so, use usual code. */
     77             n_data = (png_byte *)CVT_PTR_NOCHECK(data);
     78             io_ptr = (png_FILE_p)CVT_PTR(png_ptr->io_ptr);
     79             if ((png_bytep)n_data == data)
     80             {
     81          #if defined(_WIN32_WCE)
     82                if ( !ReadFile((HANDLE)(png_ptr->io_ptr), data, length, &check, NULL) )
     83                   check = 0;
     84          #else
     85                check = fread(n_data, 1, length, io_ptr);
     86          #endif
     87             }
     88             else
     89             {
     90                png_byte buf[NEAR_BUF_SIZE];
     91                png_size_t read, remaining, err;
     92                check = 0;
     93                remaining = length;
     94                do
     95                {
     96                   read = MIN(NEAR_BUF_SIZE, remaining);
     97          #if defined(_WIN32_WCE)
     98                   if ( !ReadFile((HANDLE)(io_ptr), buf, read, &err, NULL) )
     99                      err = 0;
    100          #else
    101                   err = fread(buf, (png_size_t)1, read, io_ptr);
    102          #endif
    103                   png_memcpy(data, buf, read); /* copy far buffer to near buffer */
    104                   if(err != read)
    105                      break;
    106                   else
    107                      check += err;
    108                   data += read;
    109                   remaining -= read;
    110                }
    111                while (remaining != 0);
    112             }
    113             if ((png_uint_32)check != (png_uint_32)length)
    114                png_error(png_ptr, "read Error");
    115          }
    116          #endif
    117          #endif
    118          
    119          /* This function allows the application to supply a new input function
    120             for libpng if standard C streams aren't being used.
    121          
    122             This function takes as its arguments:
    123             png_ptr      - pointer to a png input data structure
    124             io_ptr       - pointer to user supplied structure containing info about
    125                            the input functions.  May be NULL.
    126             read_data_fn - pointer to a new input function that takes as its
    127                            arguments a pointer to a png_struct, a pointer to
    128                            a location where input data can be stored, and a 32-bit
    129                            unsigned int that is the number of bytes to be read.
    130                            To exit and output any fatal error messages the new write
    131                            function should call png_error(png_ptr, "Error msg"). */
    132          void PNGAPI
    133          png_set_read_fn(png_structp png_ptr, png_voidp io_ptr,
    134             png_rw_ptr read_data_fn)
    135          {
    136             png_ptr->io_ptr = io_ptr;
    137          
    138          #if !defined(PNG_NO_STDIO)
    139             if (read_data_fn != NULL)
    140                png_ptr->read_data_fn = read_data_fn;
    141             else
    142                png_ptr->read_data_fn = png_default_read_data;
    143          #else
    144             png_ptr->read_data_fn = read_data_fn;
    145          #endif
    146          
    147             /* It is an error to write to a read device */
    148             if (png_ptr->write_data_fn != NULL)
    149             {
    150                png_ptr->write_data_fn = NULL;
    151                png_warning(png_ptr,
    152                   "It's an error to set both read_data_fn and write_data_fn in the ");
    153                png_warning(png_ptr,
    154                   "same structure.  Resetting write_data_fn to NULL.");
    155             }
    156          
    157          #if defined(PNG_WRITE_FLUSH_SUPPORTED)
    158             png_ptr->output_flush_fn = NULL;
    159          #endif
    160          }

Errors: 69
Warnings: none
