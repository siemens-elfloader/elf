##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION    10/Feb/2011  20:48:36 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  C:\arm\naticq_off\cl_work.c                          #
#    Command line    =  C:\arm\naticq_off\cl_work.c -D NEWSGOLD -D ELKA      #
#                       --preprocess C:\arm\naticq_off\Release_ELKA\List\    #
#                       -lC C:\arm\naticq_off\Release_ELKA\List\ -o          #
#                       C:\arm\naticq_off\Release_ELKA\Obj\ -s9 --no_unroll  #
#                       --cpu_mode arm --endian little --cpu ARM926EJ-S      #
#                       --stack_align 4 --interwork                          #
#                       --separate_cluster_for_initialized_variables -e      #
#                       --fpu None --dlib_config "C:\arm2\Embedded           #
#                       Workbench 4.0 Evaluation\ARM\LIB\dl5tpainl8n.h" -I   #
#                       "C:\arm2\Embedded Workbench 4.0                      #
#                       Evaluation\ARM\INC\" --inline_threshold=2            #
#    List file       =  C:\arm\naticq_off\Release_ELKA\List\cl_work.lst      #
#    Object file     =  C:\arm\naticq_off\Release_ELKA\Obj\cl_work.r79       #
#                                                                            #
#                                                                            #
##############################################################################

C:\arm\naticq_off\cl_work.c
      1          #include "../inc/swilib.h"
      2          #include "NatICQ.h"
      3          #include "strings.h"
      4          #include "main.h"
      5          #include "cl_work.h"
      6          
      7          extern volatile unsigned int GROUP_CACHE; //Текущая группа для добавления
      8          extern volatile CLIST *cltop;
      9          extern int Is_Show_Groups;
     10          extern char ContactT9Key[32];
     11          extern int Is_Show_Offline;
     12          extern int Is_Active_Up;
     13          
     14          extern const unsigned int UIN;
     15          extern const char TEMPLATES_PATH[];
     16          

   \                                 In segment CODE, align 4, keep-with-next
     17          void FreeXText(CLIST *t)
     18          {
   \                     FreeXText:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
     19            if (t->xtext) {mfree(t->xtext);t->xtext=NULL;}
   \   00000008   BC0094E5           LDR      R0,[R4, #+188]
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   1080BD08           POPEQ    {R4,PC}
   \   00000014   150000EF           SWI      +21
   \   00000018   0000A0E3           MOV      R0,#+0
   \   0000001C   BC0084E5           STR      R0,[R4, #+188]
     20          }
   \   00000020   1080BDE8           POP      {R4,PC}          ;; return
     21          
     22          //Уничтожить список

   \                                 In segment CODE, align 4, keep-with-next
     23          void FreeCLIST(void)
     24          {
     25            CLIST *cl=(CLIST*)cltop;
   \                     FreeCLIST:
   \   00000000   ........           LDR      R0,??DataTable14  ;; cltop
   \   00000004   10402DE9           PUSH     {R4,LR}
   \   00000008   004090E5           LDR      R4,[R0, #+0]
     26            cltop=0;
   \   0000000C   0010A0E3           MOV      R1,#+0
   \   00000010   001080E5           STR      R1,[R0, #+0]
   \   00000014   000054E3           CMP      R4,#+0
   \   00000018   1080BD08           POPEQ    {R4,PC}
     27            while(cl)
     28            {
     29              CLIST *p;
     30              if (cl->log) FreeLOGQ(&cl->log);
   \                     ??FreeCLIST_0:
   \   0000001C   A80094E5           LDR      R0,[R4, #+168]
   \   00000020   000050E3           CMP      R0,#+0
   \   00000024   0100000A           BEQ      ??FreeCLIST_1
   \   00000028   A80084E2           ADD      R0,R4,#+168
   \   0000002C   ........           _BLF     FreeLOGQ,??FreeLOGQ??rA
     31              if (cl->answer) mfree(cl->answer);
   \                     ??FreeCLIST_1:
   \   00000030   AC0094E5           LDR      R0,[R4, #+172]
   \   00000034   000050E3           CMP      R0,#+0
   \   00000038   0000000A           BEQ      ??FreeCLIST_2
   \   0000003C   150000EF           SWI      +21
     32              if (cl->xtext) mfree(cl->xtext);
   \                     ??FreeCLIST_2:
   \   00000040   BC0094E5           LDR      R0,[R4, #+188]
   \   00000044   000050E3           CMP      R0,#+0
   \   00000048   0000000A           BEQ      ??FreeCLIST_3
   \   0000004C   150000EF           SWI      +21
     33              p=cl;
   \                     ??FreeCLIST_3:
   \   00000050   0400A0E1           MOV      R0,R4
     34              cl=(CLIST*)(cl->next);
   \   00000054   004094E5           LDR      R4,[R4, #+0]
     35              mfree(p);
   \   00000058   150000EF           SWI      +21
     36            }
   \   0000005C   000054E3           CMP      R4,#+0
   \   00000060   EDFFFF1A           BNE      ??FreeCLIST_0
     37          }
   \   00000064   1080BDE8           POP      {R4,PC}          ;; return
     38          
     39          //Прописать всех в offline

   \                                 In segment CODE, align 4, keep-with-next
     40          void FillAllOffline(void)
     41          {
     42            CLIST *cl=(CLIST*)cltop;
   \                     FillAllOffline:
   \   00000000   ........           LDR      R0,??DataTable14  ;; cltop
   \   00000004   70402DE9           PUSH     {R4-R6,LR}
   \   00000008   004090E5           LDR      R4,[R0, #+0]
   \   0000000C   000054E3           CMP      R4,#+0
   \   00000010   7080BD08           POPEQ    {R4-R6,PC}
   \   00000014   FF50A0E3           MOV      R5,#+255
   \   00000018   FF5C85E3           ORR      R5,R5,#0xFF00
     43            while(cl)
     44            {
     45              if (!cl->isgroup)
   \                     ??FillAllOffline_0:
   \   0000001C   080094E5           LDR      R0,[R4, #+8]
   \   00000020   000050E3           CMP      R0,#+0
   \   00000024   0800001A           BNE      ??FillAllOffline_1
     46              {
     47                LOGQ *lp=cl->log;
   \   00000028   A81094E5           LDR      R1,[R4, #+168]
   \   0000002C   000051E3           CMP      R1,#+0
   \   00000030   0500000A           BEQ      ??FillAllOffline_1
     48                while(lp)
     49                {
     50          	lp->ID|=0x18000;
   \                     ??FillAllOffline_2:
   \   00000034   082091E5           LDR      R2,[R1, #+8]
   \   00000038   602B82E3           ORR      R2,R2,#0x18000
   \   0000003C   082081E5           STR      R2,[R1, #+8]
     51          	lp=lp->next;
   \   00000040   001091E5           LDR      R1,[R1, #+0]
     52                }
   \   00000044   000051E3           CMP      R1,#+0
   \   00000048   F9FFFF1A           BNE      ??FillAllOffline_2
     53              }
     54              if ((cl->state!=0xFFFF)&&
     55          	(!cl->isgroup))     //by BoBa 2.05.2007
   \                     ??FillAllOffline_1:
   \   0000004C   B419D4E1           LDRH     R1,[R4, #+148]
   \   00000050   050051E1           CMP      R1,R5
   \   00000054   0900000A           BEQ      ??FillAllOffline_3
   \   00000058   000050E3           CMP      R0,#+0
   \   0000005C   0700001A           BNE      ??FillAllOffline_3
     56              {
     57                CLIST *p=cl;
   \   00000060   0460A0E1           MOV      R6,R4
     58                p->state=0xFFFF;
   \   00000064   B459C6E1           STRH     R5,[R6, #+148]
     59                FreeXText(p);
   \   00000068   0600A0E1           MOV      R0,R6
   \   0000006C   ........           BL       FreeXText
     60                cl=cl->next;
   \   00000070   004094E5           LDR      R4,[R4, #+0]
     61                ChangeContactPos(p);
   \   00000074   0600A0E1           MOV      R0,R6
   \   00000078   ........           BL       ChangeContactPos
     62                continue;
   \   0000007C   000000EA           B        ??FillAllOffline_4
     63              }
     64              cl=(CLIST*)(cl->next);
   \                     ??FillAllOffline_3:
   \   00000080   004094E5           LDR      R4,[R4, #+0]
     65            }
   \                     ??FillAllOffline_4:
   \   00000084   000054E3           CMP      R4,#+0
   \   00000088   E3FFFF1A           BNE      ??FillAllOffline_0
     66          }
   \   0000008C   7080BDE8           POP      {R4-R6,PC}       ;; return
     67          
     68          

   \                                 In segment CODE, align 4, keep-with-next
     69          CLIST *FindContactByUin(unsigned int uin)
     70          {
     71            CLIST *t;
     72            t=(CLIST *)cltop;
   \                     FindContactByUin:
   \   00000000   ........           LDR      R1,??DataTable14  ;; cltop
     73            while(t)
     74            {
     75              if ((t->uin==uin)&&(!t->isgroup)) break;
     76              t=t->next;
   \                     ??FindContactByUin_0:
   \   00000004   001091E5           LDR      R1,[R1, #+0]
   \   00000008   000051E3           CMP      R1,#+0
   \   0000000C   0400000A           BEQ      ??FindContactByUin_1
   \   00000010   0C2091E5           LDR      R2,[R1, #+12]
   \   00000014   000052E1           CMP      R2,R0
   \   00000018   08209105           LDREQ    R2,[R1, #+8]
   \   0000001C   00005203           CMPEQ    R2,#+0
   \   00000020   F7FFFF1A           BNE      ??FindContactByUin_0
     77            }
     78            return(t);
   \                     ??FindContactByUin_1:
   \   00000024   0100A0E1           MOV      R0,R1
   \   00000028   1EFF2FE1           BX       LR               ;; return
     79          }
     80          

   \                                 In segment CODE, align 4, keep-with-next
     81          CLIST *FindGroupByID(unsigned int grp)
     82          {
     83            CLIST *t;
     84            t=(CLIST *)cltop;
   \                     FindGroupByID:
   \   00000000   ........           LDR      R1,??DataTable14  ;; cltop
     85            while(t)
     86            {
     87              if ((t->group==grp)&&(t->isgroup)) break;
     88              t=t->next;
   \                     ??FindGroupByID_0:
   \   00000004   001091E5           LDR      R1,[R1, #+0]
   \   00000008   000051E3           CMP      R1,#+0
   \   0000000C   0500000A           BEQ      ??FindGroupByID_1
   \   00000010   102091E5           LDR      R2,[R1, #+16]
   \   00000014   000052E1           CMP      R2,R0
   \   00000018   F9FFFF1A           BNE      ??FindGroupByID_0
   \   0000001C   082091E5           LDR      R2,[R1, #+8]
   \   00000020   000052E3           CMP      R2,#+0
   \   00000024   F6FFFF0A           BEQ      ??FindGroupByID_0
     89            }
     90            return(t);
   \                     ??FindGroupByID_1:
   \   00000028   0100A0E1           MOV      R0,R1
   \   0000002C   1EFF2FE1           BX       LR               ;; return
     91          }
     92          
     93          //Ключи для поиска по T9

   \                                 In segment DATA_C, align 4, align-sorted
     94          static const char table_T9Key[256]=
   \                     table_T9Key:
   \   00000000   313131313131       DC8 31H, 31H, 31H, 31H, 31H, 31H, 31H, 31H
   \              3131        
   \   00000008   313131313131       DC8 31H, 31H, 31H, 31H, 31H, 31H, 31H, 31H
   \              3131        
   \   00000010   313131313131       DC8 31H, 31H, 31H, 31H, 31H, 31H, 31H, 31H
   \              3131        
   \   00000018   313131313131       DC8 31H, 31H, 31H, 31H, 31H, 31H, 31H, 31H
   \              3131        
   \   00000020   31303030312A       DC8 31H, 30H, 30H, 30H, 31H, 2AH, 2AH, 30H
   \              2A30        
   \   00000028   2A2A2A303030       DC8 2AH, 2AH, 2AH, 30H, 30H, 30H, 30H, 2AH
   \              302A        
   \   00000030   303132333435       DC8 30H, 31H, 32H, 33H, 34H, 35H, 36H, 37H
   \              3637        
   \   00000038   383930302A2A       DC8 38H, 39H, 30H, 30H, 2AH, 2AH, 2AH, 30H
   \              2A30        
   \   00000040   303232323333       DC8 30H, 32H, 32H, 32H, 33H, 33H, 33H, 34H
   \              3334        
   \   00000048   343435353536       DC8 34H, 34H, 35H, 35H, 35H, 36H, 36H, 36H
   \              3636        
   \   00000050   373737373838       DC8 37H, 37H, 37H, 37H, 38H, 38H, 38H, 39H
   \              3839        
   \   00000058   393939312A31       DC8 39H, 39H, 39H, 31H, 2AH, 31H, 31H, 30H
   \              3130        
   \   00000060   313232323333       DC8 31H, 32H, 32H, 32H, 33H, 33H, 33H, 34H
   \              3334        
   \   00000068   343435353536       DC8 34H, 34H, 35H, 35H, 35H, 36H, 36H, 36H
   \              3636        
   \   00000070   373737373838       DC8 37H, 37H, 37H, 37H, 38H, 38H, 38H, 39H
   \              3839        
   \   00000078   393939313131       DC8 39H, 39H, 39H, 31H, 31H, 31H, 2AH, 31H
   \              2A31        
   \   00000080   313131313131       DC8 31H, 31H, 31H, 31H, 31H, 31H, 31H, 31H
   \              3131        
   \   00000088   313131313131       DC8 31H, 31H, 31H, 31H, 31H, 31H, 31H, 31H
   \              3131        
   \   00000090   313131313131       DC8 31H, 31H, 31H, 31H, 31H, 31H, 31H, 31H
   \              3131        
   \   00000098   313131313131       DC8 31H, 31H, 31H, 31H, 31H, 31H, 31H, 31H
   \              3131        
   \   000000A0   313131313131       DC8 31H, 31H, 31H, 31H, 31H, 31H, 31H, 31H
   \              3131        
   \   000000A8   333131313131       DC8 33H, 31H, 31H, 31H, 31H, 31H, 31H, 31H
   \              3131        
   \   000000B0   313131313131       DC8 31H, 31H, 31H, 31H, 31H, 31H, 31H, 31H
   \              3131        
   \   000000B8   333131313131       DC8 33H, 31H, 31H, 31H, 31H, 31H, 31H, 31H
   \              3131        
   \   000000C0   323232323333       DC8 32H, 32H, 32H, 32H, 33H, 33H, 33H, 33H
   \              3333        
   \   000000C8   343434343535       DC8 34H, 34H, 34H, 34H, 35H, 35H, 35H, 36H
   \              3536        
   \   000000D0   363637373737       DC8 36H, 36H, 37H, 37H, 37H, 37H, 38H, 38H
   \              3838        
   \   000000D8   383838393939       DC8 38H, 38H, 38H, 39H, 39H, 39H, 39H, 39H
   \              3939        
   \   000000E0   323232323333       DC8 32H, 32H, 32H, 32H, 33H, 33H, 33H, 33H
   \              3333        
   \   000000E8   343434343535       DC8 34H, 34H, 34H, 34H, 35H, 35H, 35H, 36H
   \              3536        
   \   000000F0   363637373737       DC8 36H, 36H, 37H, 37H, 37H, 37H, 38H, 38H
   \              3838        
   \   000000F8   383838393939       DC8 38H, 38H, 38H, 39H, 39H, 39H, 39H, 39H
   \              3939        
     95          "11111111111111111111111111111111"
     96          "10001**0***0000*012345678900***0"
     97          "0222333444555666777788899991*110"
     98          "122233344455566677778889999111*1"
     99          "11111111111111111111111111111111"
    100          "11111111311111111111111131111111"
    101          "22223333444455566677778888899999"
    102          "22223333444455566677778888899999";
    103          
    104          

   \                                 In segment CODE, align 4, keep-with-next
    105          CLIST *FindContactByNS(int *i, int si, int act_flag, CLIST *search_contact)
    106          {
   \                     FindContactByNS:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    107            CLIST *t;
    108            t=(CLIST *)cltop;
   \   00000008   ........           LDR      R0,??DataTable14  ;; cltop
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   008090E5           LDR      R8,[R0, #+0]
   \   00000014   0260A0E1           MOV      R6,R2
   \   00000018   0370A0E1           MOV      R7,R3
    109            char *s;
    110            char *d;
    111            int c;
    112            int grp_id=0;
   \   0000001C   0090A0E3           MOV      R9,#+0
    113            int grp_dis=0;
   \   00000020   00A0A0E3           MOV      R10,#+0
   \   00000024   050000EA           B        ??FindContactByNS_0
    114            while(t)
    115            {
    116              if (t->isgroup)
    117              {
    118                grp_id=t->group;
    119                grp_dis=t->state;
    120              }
    121              if (act_flag<2)
    122              {
    123                if ((act_flag)&&(!t->isactive)) goto L_NOT9;
    124                if ((!act_flag)&&(t->isactive)) goto L_NOT9;
    125              }
    126              if ((si==IS_ANY)||(GetIconIndex(t)==si))
    127              {
    128                s=ContactT9Key;
    129                if ((!Is_Show_Groups)&&(t->isgroup)) goto L_NOT9;
    130                
    131                if ((!t->isgroup)&&(t->group==grp_id)&&(grp_dis)&&(!(*s))) goto L_NOT9;
    132                
    133                if (!Is_Show_Offline) // by Seklth 13.06.2007
    134                  if ((!t->isgroup)&&(!t->isactive)&&(t->state==0xFFFF)/*&&(t->uin!=UIN)*/&&(!(*s))) 
    135                    if (!t->isunread) goto L_NOT9;
    136                
    137                d=t->name;
    138                while(c=*s++)
    139                {
    140          	if (c!=table_T9Key[*d++]) goto L_NOT9;
    141                }
    142                if (search_contact==t) return t; //Нашли контакт по адресу
    143                if (!(*i)) return(t);
   \                     ??FindContactByNS_1:
   \   00000028   000094E5           LDR      R0,[R4, #+0]
   \   0000002C   000050E3           CMP      R0,#+0
   \   00000030   4500000A           BEQ      ??FindContactByNS_2
    144                (*i)--;
   \   00000034   010040E2           SUB      R0,R0,#+1
   \   00000038   000084E5           STR      R0,[R4, #+0]
    145              }
    146            L_NOT9:
    147              t=t->next;
   \                     ??FindContactByNS_3:
   \   0000003C   008098E5           LDR      R8,[R8, #+0]
   \                     ??FindContactByNS_0:
   \   00000040   000058E3           CMP      R8,#+0
   \   00000044   4200000A           BEQ      ??FindContactByNS_4
   \   00000048   080098E5           LDR      R0,[R8, #+8]
   \   0000004C   000050E3           CMP      R0,#+0
   \   00000050   10909815           LDRNE    R9,[R8, #+16]
   \   00000054   B4A9D811           LDRHNE   R10,[R8, #+148]
   \   00000058   020056E3           CMP      R6,#+2
   \   0000005C   070000AA           BGE      ??FindContactByNS_5
   \   00000060   B40098E5           LDR      R0,[R8, #+180]
   \   00000064   000056E3           CMP      R6,#+0
   \   00000068   0200000A           BEQ      ??FindContactByNS_6
   \   0000006C   000050E3           CMP      R0,#+0
   \   00000070   0200001A           BNE      ??FindContactByNS_5
   \   00000074   F0FFFFEA           B        ??FindContactByNS_3
   \                     ??FindContactByNS_6:
   \   00000078   000050E3           CMP      R0,#+0
   \   0000007C   EEFFFF1A           BNE      ??FindContactByNS_3
   \                     ??FindContactByNS_5:
   \   00000080   010075E3           CMN      R5,#+1
   \   00000084   0300000A           BEQ      ??FindContactByNS_7
   \   00000088   0800A0E1           MOV      R0,R8
   \   0000008C   ........           _BLF     GetIconIndex,??GetIconIndex??rA
   \   00000090   050050E1           CMP      R0,R5
   \   00000094   E8FFFF1A           BNE      ??FindContactByNS_3
   \                     ??FindContactByNS_7:
   \   00000098   ........           LDR      R3,??DataTable13  ;; Is_Show_Groups
   \   0000009C   B8209FE5           LDR      R2,??FindContactByNS_8  ;; ContactT9Key
   \   000000A0   003093E5           LDR      R3,[R3, #+0]
   \   000000A4   081098E5           LDR      R1,[R8, #+8]
   \   000000A8   0200A0E1           MOV      R0,R2
   \   000000AC   000053E3           CMP      R3,#+0
   \   000000B0   0100001A           BNE      ??FindContactByNS_9
   \   000000B4   000051E3           CMP      R1,#+0
   \   000000B8   DFFFFF1A           BNE      ??FindContactByNS_3
   \                     ??FindContactByNS_9:
   \   000000BC   0020D2E5           LDRB     R2,[R2, #+0]
   \   000000C0   000051E3           CMP      R1,#+0
   \   000000C4   10309805           LDREQ    R3,[R8, #+16]
   \   000000C8   09005301           CMPEQ    R3,R9
   \   000000CC   0300001A           BNE      ??FindContactByNS_10
   \   000000D0   00005AE3           CMP      R10,#+0
   \   000000D4   0100000A           BEQ      ??FindContactByNS_10
   \   000000D8   000052E3           CMP      R2,#+0
   \   000000DC   D6FFFF0A           BEQ      ??FindContactByNS_3
   \                     ??FindContactByNS_10:
   \   000000E0   78309FE5           LDR      R3,??FindContactByNS_8+0x4  ;; Is_Show_Offline
   \   000000E4   003093E5           LDR      R3,[R3, #+0]
   \   000000E8   000053E3           CMP      R3,#+0
   \   000000EC   00005103           CMPEQ    R1,#+0
   \   000000F0   B4109805           LDREQ    R1,[R8, #+180]
   \   000000F4   00005103           CMPEQ    R1,#+0
   \   000000F8   0700001A           BNE      ??FindContactByNS_11
   \   000000FC   B419D8E1           LDRH     R1,[R8, #+148]
   \   00000100   FF30A0E3           MOV      R3,#+255
   \   00000104   FF3C83E3           ORR      R3,R3,#0xFF00
   \   00000108   030051E1           CMP      R1,R3
   \   0000010C   00005203           CMPEQ    R2,#+0
   \   00000110   9C109805           LDREQ    R1,[R8, #+156]
   \   00000114   00005103           CMPEQ    R1,#+0
   \   00000118   C7FFFF0A           BEQ      ??FindContactByNS_3
   \                     ??FindContactByNS_11:
   \   0000011C   40C09FE5           LDR      R12,??FindContactByNS_8+0x8  ;; table_T9Key
   \   00000120   141088E2           ADD      R1,R8,#+20
   \   00000124   030000EA           B        ??FindContactByNS_12
   \                     ??FindContactByNS_13:
   \   00000128   ........           LDRB     R3,[R1], #+1
   \   0000012C   0C30D3E7           LDRB     R3,[R3, +R12]
   \   00000130   030052E1           CMP      R2,R3
   \   00000134   C0FFFF1A           BNE      ??FindContactByNS_3
   \                     ??FindContactByNS_12:
   \   00000138   ........           LDRB     R2,[R0], #+1
   \   0000013C   000052E3           CMP      R2,#+0
   \   00000140   F8FFFF1A           BNE      ??FindContactByNS_13
   \   00000144   080057E1           CMP      R7,R8
   \   00000148   B6FFFF1A           BNE      ??FindContactByNS_1
   \                     ??FindContactByNS_2:
   \   0000014C   0800A0E1           MOV      R0,R8
   \   00000150   F087BDE8           POP      {R4-R10,PC}
    148            }
    149            return(t);
   \                     ??FindContactByNS_4:
   \   00000154   0000A0E3           MOV      R0,#+0
   \   00000158   F087BDE8           POP      {R4-R10,PC}      ;; return
   \                     ??FindContactByNS_8:
   \   0000015C   ........           DC32     ContactT9Key
   \   00000160   ........           DC32     Is_Show_Offline
   \   00000164   ........           DC32     table_T9Key
    150          }
    151          
    152          

   \                                 In segment CODE, align 4, keep-with-next
    153          int CountContacts(void)
    154          {
   \                     CountContacts:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
    155            int l=-1;
   \   00000008   0010E0E3           MVN      R1,#+0
   \   0000000C   00108DE5           STR      R1,[SP, #+0]
    156            FindContactByNS(&l,IS_ANY,2,NULL);
   \   00000010   0030A0E3           MOV      R3,#+0
   \   00000014   0220A0E3           MOV      R2,#+2
   \   00000018   0D00A0E1           MOV      R0,SP
   \   0000001C   ........           BL       FindContactByNS
    157            l=-1-l;
    158            return l;
   \   00000020   00109DE5           LDR      R1,[SP, #+0]
   \   00000024   0000E0E3           MVN      R0,#+0
   \   00000028   010040E0           SUB      R0,R0,R1
   \   0000002C   0280BDE8           POP      {R1,PC}          ;; return
    159          }
    160          

   \                                 In segment CODE, align 4, keep-with-next
    161          CLIST *FindContactByN(int i)
    162          {
   \                     FindContactByN:
   \   00000000   01402DE9           PUSH     {R0,LR}
    163            CLIST *t;
    164            int f=Is_Active_Up;
    165            if (f)
   \   00000004   ........           LDR      R0,??DataTable7  ;; Is_Active_Up
   \   00000008   000090E5           LDR      R0,[R0, #+0]
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   0B00000A           BEQ      ??FindContactByN_0
    166            {
    167              t=FindContactByNS(&i,IS_ANY,1,NULL); if ((!i)&&(t)) return (t);
   \   00000014   0030A0E3           MOV      R3,#+0
   \   00000018   0120A0E3           MOV      R2,#+1
   \   0000001C   001062E2           RSB      R1,R2,#+0
   \   00000020   0D00A0E1           MOV      R0,SP
   \   00000024   ........           BL       FindContactByNS
   \   00000028   00109DE5           LDR      R1,[SP, #+0]
   \   0000002C   000051E3           CMP      R1,#+0
   \   00000030   0100001A           BNE      ??FindContactByN_1
   \   00000034   000050E3           CMP      R0,#+0
   \   00000038   0280BD18           POPNE    {R1,PC}
    168              f=0;
   \                     ??FindContactByN_1:
   \   0000003C   0020A0E3           MOV      R2,#+0
   \   00000040   000000EA           B        ??FindContactByN_2
    169            }
    170            else f=2;
   \                     ??FindContactByN_0:
   \   00000044   0220A0E3           MOV      R2,#+2
    171            t=FindContactByNS(&i,IS_ANY,f,NULL);
    172            return t;
   \                     ??FindContactByN_2:
   \   00000048   0030A0E3           MOV      R3,#+0
   \   0000004C   0310E0E1           MVN      R1,R3
   \   00000050   0D00A0E1           MOV      R0,SP
   \   00000054   ........           BL       FindContactByNS
   \   00000058   0280BDE8           POP      {R1,PC}          ;; return
    173          }
    174          

   \                                 In segment CODE, align 4, keep-with-next
    175          int FindContactByContact(CLIST *p)
    176          {
   \                     FindContactByContact:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
    177            int l=-1;
   \   00000008   0010E0E3           MVN      R1,#+0
   \   0000000C   0040A0E1           MOV      R4,R0
    178            //  CLIST *t;
    179            int f=Is_Active_Up;
    180            if (f)
   \   00000010   ........           LDR      R0,??DataTable7  ;; Is_Active_Up
   \   00000014   00108DE5           STR      R1,[SP, #+0]
   \   00000018   000090E5           LDR      R0,[R0, #+0]
   \   0000001C   000050E3           CMP      R0,#+0
   \   00000020   0700000A           BEQ      ??FindContactByContact_0
    181            {
    182              if (FindContactByNS(&l,IS_ANY,1,p)) return -1-l;
   \   00000024   0430A0E1           MOV      R3,R4
   \   00000028   0120A0E3           MOV      R2,#+1
   \   0000002C   0D00A0E1           MOV      R0,SP
   \   00000030   ........           BL       FindContactByNS
   \   00000034   000050E3           CMP      R0,#+0
   \   00000038   0600001A           BNE      ??FindContactByContact_1
    183              f=0;
   \   0000003C   0020A0E3           MOV      R2,#+0
   \   00000040   000000EA           B        ??FindContactByContact_2
    184            }
    185            else f=2;
   \                     ??FindContactByContact_0:
   \   00000044   0220A0E3           MOV      R2,#+2
    186            FindContactByNS(&l,IS_ANY,f,p);
   \                     ??FindContactByContact_2:
   \   00000048   0430A0E1           MOV      R3,R4
   \   0000004C   0010E0E3           MVN      R1,#+0
   \   00000050   0D00A0E1           MOV      R0,SP
   \   00000054   ........           BL       FindContactByNS
    187            return -1-l;
   \                     ??FindContactByContact_1:
   \   00000058   00109DE5           LDR      R1,[SP, #+0]
   \   0000005C   0000E0E3           MVN      R0,#+0
   \   00000060   010040E0           SUB      R0,R0,R1
   \   00000064   1280BDE8           POP      {R1,R4,PC}       ;; return
    188          }
    189          

   \                                 In segment CODE, align 4, keep-with-next
    190          void SwapContacts(CLIST *first, CLIST *second)
    191          {
    192            CLIST *tp;
    193            if ((tp=second->next)) tp->prev=first;
   \                     SwapContacts:
   \   00000000   002091E5           LDR      R2,[R1, #+0]
   \   00000004   000052E3           CMP      R2,#+0
   \   00000008   04008215           STRNE    R0,[R2, #+4]
    194            if ((tp=first->prev)) tp->next=second;
   \   0000000C   042090E5           LDR      R2,[R0, #+4]
   \   00000010   000052E3           CMP      R2,#+0
   \   00000014   00108215           STRNE    R1,[R2, #+0]
    195            first->next=second->next;
   \   00000018   002091E5           LDR      R2,[R1, #+0]
   \   0000001C   002080E5           STR      R2,[R0, #+0]
    196            second->next=first;
   \   00000020   000081E5           STR      R0,[R1, #+0]
    197            second->prev=first->prev;
   \   00000024   042090E5           LDR      R2,[R0, #+4]
   \   00000028   042081E5           STR      R2,[R1, #+4]
    198            first->prev=second;
   \   0000002C   041080E5           STR      R1,[R0, #+4]
    199          }
   \   00000030   1EFF2FE1           BX       LR               ;; return
    200          

   \                                 In segment CODE, align 4, keep-with-next
    201          void ChangeContactPos(CLIST *p)
    202          {
   \                     ChangeContactPos:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    203            CLIST *t;
    204            if ((t=p->prev))
   \   00000008   045094E5           LDR      R5,[R4, #+4]
   \   0000000C   000055E3           CMP      R5,#+0
   \   00000010   0B00000A           BEQ      ??ChangeContactPos_0
   \   00000014   050000EA           B        ??ChangeContactPos_1
    205            {
    206              //Проверяем, не надо ли всплывать
    207              while(CompareContacts(t,p)>0)
    208              {
    209                //Всплываем вверх списка
    210                SwapContacts(t,p);
   \                     ??ChangeContactPos_2:
   \   00000018   0410A0E1           MOV      R1,R4
   \   0000001C   0500A0E1           MOV      R0,R5
   \   00000020   ........           BL       SwapContacts
    211                if (!(t=p->prev)) return; //Всплыли
   \   00000024   045094E5           LDR      R5,[R4, #+4]
   \   00000028   000055E3           CMP      R5,#+0
   \   0000002C   3080BD08           POPEQ    {R4,R5,PC}
    212              }
   \                     ??ChangeContactPos_1:
   \   00000030   0410A0E1           MOV      R1,R4
   \   00000034   0500A0E1           MOV      R0,R5
   \   00000038   ........           BL       CompareContacts
   \   0000003C   010050E3           CMP      R0,#+1
   \   00000040   F4FFFFAA           BGE      ??ChangeContactPos_2
    213            }
    214            if ((t=p->next))
   \                     ??ChangeContactPos_0:
   \   00000044   005094E5           LDR      R5,[R4, #+0]
   \   00000048   000055E3           CMP      R5,#+0
   \   0000004C   3080BD08           POPEQ    {R4,R5,PC}
    215            {
    216              //Проверяем, не надо ли углубляться
    217              while(CompareContacts(p,t)>0)
   \                     ??ChangeContactPos_3:
   \   00000050   0510A0E1           MOV      R1,R5
   \   00000054   0400A0E1           MOV      R0,R4
   \   00000058   ........           BL       CompareContacts
   \   0000005C   010050E3           CMP      R0,#+1
   \   00000060   3080BDB8           POPLT    {R4,R5,PC}
    218              {
    219                SwapContacts(p,t);
   \   00000064   0510A0E1           MOV      R1,R5
   \   00000068   0400A0E1           MOV      R0,R4
   \   0000006C   ........           BL       SwapContacts
    220                if (!(t=p->next)) return; //Углубились нах ;)
   \   00000070   005094E5           LDR      R5,[R4, #+0]
   \   00000074   000055E3           CMP      R5,#+0
   \   00000078   F4FFFF1A           BNE      ??ChangeContactPos_3
   \   0000007C   3080BDE8           POP      {R4,R5,PC}       ;; return
    221              }
    222            }
    223          }
    224          

   \                                 In segment CODE, align 4, keep-with-next
    225          int CompareContacts(CLIST *t, CLIST *p)
    226          {
   \                     CompareContacts:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    227            int c;
    228            if (Is_Show_Groups)
   \   00000008   ........           LDR      R0,??DataTable13  ;; Is_Show_Groups
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   000090E5           LDR      R0,[R0, #+0]
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   0300000A           BEQ      ??CompareContacts_0
    229            {
    230              if ((c=p->group-t->group))
   \   0000001C   100095E5           LDR      R0,[R5, #+16]
   \   00000020   101094E5           LDR      R1,[R4, #+16]
   \   00000024   010050E0           SUBS     R0,R0,R1
    231              {
    232                return(c);
   \   00000028   7080BD18           POPNE    {R4-R6,PC}
    233              }
    234            }
    235            
    236            extern const int SORT_CLIST;
    237            int ip=GetIconIndex(p);
   \                     ??CompareContacts_0:
   \   0000002C   0500A0E1           MOV      R0,R5
   \   00000030   ........           _BLF     GetIconIndex,??GetIconIndex??rA
   \   00000034   0060A0E1           MOV      R6,R0
    238            int it=GetIconIndex(t);
   \   00000038   0400A0E1           MOV      R0,R4
   \   0000003C   ........           _BLF     GetIconIndex,??GetIconIndex??rA
    239            switch (SORT_CLIST)
   \   00000040   4C109FE5           LDR      R1,??CompareContacts_1  ;; SORT_CLIST
   \   00000044   001091E5           LDR      R1,[R1, #+0]
   \   00000048   000051E3           CMP      R1,#+0
   \   0000004C   0200000A           BEQ      ??CompareContacts_2
   \   00000050   011051E2           SUBS     R1,R1,#+1
   \   00000054   0800000A           BEQ      ??CompareContacts_3
   \   00000058   090000EA           B        ??CompareContacts_4
    240            {
    241            case 0: // by name
    242              if ((ip>IS_OFFLINE)&&(ip<IS_MSG)&&
    243          	(it>IS_OFFLINE)&&(it<IS_MSG)) break;
   \                     ??CompareContacts_2:
   \   0000005C   000056E3           CMP      R6,#+0
   \   00000060   0500000A           BEQ      ??CompareContacts_3
   \   00000064   0D0056E3           CMP      R6,#+13
   \   00000068   0300002A           BCS      ??CompareContacts_3
   \   0000006C   000050E3           CMP      R0,#+0
   \   00000070   0100000A           BEQ      ??CompareContacts_3
   \   00000074   0D0050E3           CMP      R0,#+13
   \   00000078   0100003A           BCC      ??CompareContacts_4
    244            case 1: // by status
    245              if ((c=ip-it))
   \                     ??CompareContacts_3:
   \   0000007C   000056E0           SUBS     R0,R6,R0
   \   00000080   7080BD18           POPNE    {R4-R6,PC}
    246              {
    247                return(c);
    248              }
    249              break;
    250            }
    251            
    252            return(strcmp_nocase(t->name,p->name));
   \                     ??CompareContacts_4:
   \   00000084   141085E2           ADD      R1,R5,#+20
   \   00000088   140084E2           ADD      R0,R4,#+20
   \   0000008C   ........           _BLF     strcmp_nocase,??strcmp_nocase??rA
   \   00000090   7080BDE8           POP      {R4-R6,PC}       ;; return
   \                     ??CompareContacts_1:
   \   00000094   ........           DC32     SORT_CLIST
    253          }
    254          

   \                                 In segment CODE, align 4, keep-with-next
    255          void DeleteContact(CLIST *p)
    256          {  
   \                     DeleteContact:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    257            if(p->prev)
   \   00000008   040094E5           LDR      R0,[R4, #+4]
   \   0000000C   001094E5           LDR      R1,[R4, #+0]
   \   00000010   000050E3           CMP      R0,#+0
   \   00000014   0500000A           BEQ      ??DeleteContact_0
    258              {
    259              //not first
    260              ((CLIST *)p->prev)->next=p->next;
   \   00000018   001080E5           STR      R1,[R0, #+0]
    261              if(p->next) ((CLIST *)p->next)->prev=p->prev;    
   \   0000001C   000094E5           LDR      R0,[R4, #+0]
   \   00000020   000050E3           CMP      R0,#+0
   \   00000024   0600000A           BEQ      ??DeleteContact_1
   \   00000028   041094E5           LDR      R1,[R4, #+4]
   \   0000002C   030000EA           B        ??DeleteContact_2
    262              }
    263            else
    264              {
    265              //first  
    266              cltop=p->next;  
   \                     ??DeleteContact_0:
   \   00000030   ........           LDR      R0,??DataTable14  ;; cltop
   \   00000034   001080E5           STR      R1,[R0, #+0]
    267              cltop->prev=0;
   \   00000038   0100A0E1           MOV      R0,R1
   \   0000003C   0010A0E3           MOV      R1,#+0
   \                     ??DeleteContact_2:
   \   00000040   041080E5           STR      R1,[R0, #+4]
    268              };
    269          if (p->log) FreeLOGQ(&p->log);
   \                     ??DeleteContact_1:
   \   00000044   A80094E5           LDR      R0,[R4, #+168]
   \   00000048   000050E3           CMP      R0,#+0
   \   0000004C   0100000A           BEQ      ??DeleteContact_3
   \   00000050   A80084E2           ADD      R0,R4,#+168
   \   00000054   ........           _BLF     FreeLOGQ,??FreeLOGQ??rA
    270          if (p->answer) mfree(p->answer);
   \                     ??DeleteContact_3:
   \   00000058   AC0094E5           LDR      R0,[R4, #+172]
   \   0000005C   000050E3           CMP      R0,#+0
   \   00000060   0000000A           BEQ      ??DeleteContact_4
   \   00000064   150000EF           SWI      +21
    271          if (p->xtext) mfree(p->xtext);
   \                     ??DeleteContact_4:
   \   00000068   BC0094E5           LDR      R0,[R4, #+188]
   \   0000006C   000050E3           CMP      R0,#+0
   \   00000070   0000000A           BEQ      ??DeleteContact_5
   \   00000074   150000EF           SWI      +21
    272          mfree(p);  
   \                     ??DeleteContact_5:
   \   00000078   0400A0E1           MOV      R0,R4
   \   0000007C   150000EF           SWI      +21
    273          };
   \   00000080   1080BDE8           POP      {R4,PC}          ;; return
    274          

   \                                 In segment CODE, align 4, keep-with-next
    275          CLIST *AddContactOrGroup(CLIST **top, CLIST *p)
    276          {
   \                     AddContactOrGroup:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    277            CLIST *t;
    278            CLIST *pr;
    279            t=*top;
   \   00000008   006094E5           LDR      R6,[R4, #+0]
   \   0000000C   0150A0E1           MOV      R5,R1
    280            if (t)
   \   00000010   000056E3           CMP      R6,#+0
   \   00000014   0200001A           BNE      ??AddContactOrGroup_0
    281            {
    282              //Не первый
    283              while(CompareContacts(t,p)<0)
    284              {
    285                if (!(pr=t->next))
    286                {
    287          	//добавляем в конец
    288          	t->next=p;
    289          	p->prev=t;
    290          	return(p);
    291                }
    292                t=pr;
    293              }
    294              if ((pr=t->prev))
    295                pr->next=p;
    296              else
    297                *top=p;
    298              p->prev=pr;
    299              p->next=t;
    300              t->prev=p;
    301            }
    302            else
    303            {
    304              //Первый
    305              *top=p;
   \   00000018   005084E5           STR      R5,[R4, #+0]
    306            }
    307            return(p);
   \   0000001C   130000EA           B        ??AddContactOrGroup_1
   \                     ??AddContactOrGroup_2:
   \   00000020   0060A0E1           MOV      R6,R0
   \                     ??AddContactOrGroup_0:
   \   00000024   0510A0E1           MOV      R1,R5
   \   00000028   0600A0E1           MOV      R0,R6
   \   0000002C   ........           BL       CompareContacts
   \   00000030   000050E3           CMP      R0,#+0
   \   00000034   0600005A           BPL      ??AddContactOrGroup_3
   \   00000038   000096E5           LDR      R0,[R6, #+0]
   \   0000003C   000050E3           CMP      R0,#+0
   \   00000040   F6FFFF1A           BNE      ??AddContactOrGroup_2
   \   00000044   005086E5           STR      R5,[R6, #+0]
   \   00000048   046085E5           STR      R6,[R5, #+4]
   \   0000004C   0500A0E1           MOV      R0,R5
   \   00000050   7080BDE8           POP      {R4-R6,PC}
   \                     ??AddContactOrGroup_3:
   \   00000054   040096E5           LDR      R0,[R6, #+4]
   \   00000058   000050E3           CMP      R0,#+0
   \   0000005C   00508015           STRNE    R5,[R0, #+0]
   \   00000060   00508405           STREQ    R5,[R4, #+0]
   \   00000064   040085E5           STR      R0,[R5, #+4]
   \   00000068   006085E5           STR      R6,[R5, #+0]
   \   0000006C   045086E5           STR      R5,[R6, #+4]
   \                     ??AddContactOrGroup_1:
   \   00000070   0500A0E1           MOV      R0,R5
   \   00000074   7080BDE8           POP      {R4-R6,PC}
    308          }
    309          

   \                                 In segment CODE, align 4, keep-with-next
    310          void ResortCL(void)
    311          {
   \                     ResortCL:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
    312            CLIST *first=NULL;
    313            CLIST *cl=(CLIST *)cltop;
   \   00000004   ........           LDR      R4,??DataTable14  ;; cltop
   \   00000008   04D04DE2           SUB      SP,SP,#+4
   \   0000000C   006094E5           LDR      R6,[R4, #+0]
   \   00000010   0050A0E3           MOV      R5,#+0
   \   00000014   00508DE5           STR      R5,[SP, #+0]
   \   00000018   000056E3           CMP      R6,#+0
   \   0000001C   1000000A           BEQ      ??ResortCL_0
    314            while(cl)
    315            {
    316              CLIST *pr=cl;
   \                     ??ResortCL_1:
   \   00000020   0610A0E1           MOV      R1,R6
    317              cl=cl->next;
   \   00000024   006096E5           LDR      R6,[R6, #+0]
    318              pr->next=0;
   \   00000028   005081E5           STR      R5,[R1, #+0]
    319              pr->prev=0;
   \   0000002C   045081E5           STR      R5,[R1, #+4]
    320              if (pr->isgroup)
   \   00000030   080091E5           LDR      R0,[R1, #+8]
   \   00000034   000050E3           CMP      R0,#+0
   \   00000038   0500000A           BEQ      ??ResortCL_2
    321              {
    322                pr->state=Is_Show_Groups?0xFFFF:0;
   \   0000003C   ........           LDR      R0,??DataTable13  ;; Is_Show_Groups
   \   00000040   000090E5           LDR      R0,[R0, #+0]
   \   00000044   000050E3           CMP      R0,#+0
   \   00000048   FF00A013           MOVNE    R0,#+255
   \   0000004C   FF0C8013           ORRNE    R0,R0,#0xFF00
   \   00000050   B409C1E1           STRH     R0,[R1, #+148]
    323              }
    324              AddContactOrGroup(&first,pr);    
   \                     ??ResortCL_2:
   \   00000054   0D00A0E1           MOV      R0,SP
   \   00000058   ........           BL       AddContactOrGroup
    325            }
   \   0000005C   000056E3           CMP      R6,#+0
   \   00000060   EEFFFF1A           BNE      ??ResortCL_1
    326            cltop=first;
   \                     ??ResortCL_0:
   \   00000064   00009DE5           LDR      R0,[SP, #+0]
   \   00000068   000084E5           STR      R0,[R4, #+0]
    327          }
   \   0000006C   7180BDE8           POP      {R0,R4-R6,PC}    ;; return
    328          

   \                                 In segment CODE, align 4, keep-with-next
    329          CLIST *AddContact(unsigned int uin, char *name, unsigned int group, int local)
    330          {
   \                     AddContact:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0260A0E1           MOV      R6,R2
   \   00000010   0370A0E1           MOV      R7,R3
    331            CLIST *p=malloc(sizeof(CLIST));
   \   00000014   CC00A0E3           MOV      R0,#+204
   \   00000018   140000EF           SWI      +20
   \   0000001C   0080A0E1           MOV      R8,R0
    332            zeromem(p,sizeof(CLIST));
   \   00000020   CC10A0E3           MOV      R1,#+204
   \   00000024   1D0100EF           SWI      +285
    333            p->uin=uin;
   \   00000028   0C4088E5           STR      R4,[R8, #+12]
    334            p->group=group;
   \   0000002C   106088E5           STR      R6,[R8, #+16]
    335            strncpy(p->name,name,sizeof(p->name)-1);
   \   00000030   3F20A0E3           MOV      R2,#+63
   \   00000034   0510A0E1           MOV      R1,R5
   \   00000038   140088E2           ADD      R0,R8,#+20
   \   0000003C   160100EF           SWI      +278
    336            p->state=0xFFFF;
   \   00000040   FF00A0E3           MOV      R0,#+255
   \   00000044   FF0C80E3           ORR      R0,R0,#0xFF00
   \   00000048   B409C8E1           STRH     R0,[R8, #+148]
    337            p->clientid=0;
   \   0000004C   0000A0E3           MOV      R0,#+0
   \   00000050   9A00C8E5           STRB     R0,[R8, #+154]
    338            p->local=local;
    339            return AddContactOrGroup((CLIST **)&cltop,p);
   \   00000054   ........           LDR      R0,??DataTable14  ;; cltop
   \   00000058   C47088E5           STR      R7,[R8, #+196]
   \   0000005C   0810A0E1           MOV      R1,R8
   \   00000060   ........           BL       AddContactOrGroup
   \   00000064   F081BDE8           POP      {R4-R8,PC}       ;; return
    340          }
    341          

   \                                 In segment CODE, align 4, keep-with-next
    342          CLIST *AddGroup(unsigned int grp, char *name)
    343          {
   \                     AddGroup:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
    344            CLIST *p=malloc(sizeof(CLIST));
   \   0000000C   CC00A0E3           MOV      R0,#+204
   \   00000010   140000EF           SWI      +20
   \   00000014   0060A0E1           MOV      R6,R0
    345            zeromem(p,sizeof(CLIST));
   \   00000018   CC10A0E3           MOV      R1,#+204
   \   0000001C   1D0100EF           SWI      +285
    346            //  p->uin=0;
    347            p->group=grp;
   \   00000020   104086E5           STR      R4,[R6, #+16]
    348            p->isgroup=1;
   \   00000024   0100A0E3           MOV      R0,#+1
   \   00000028   080086E5           STR      R0,[R6, #+8]
    349            strncpy(p->name,name,sizeof(p->name)-1);
   \   0000002C   3F20A0E3           MOV      R2,#+63
   \   00000030   0510A0E1           MOV      R1,R5
   \   00000034   140086E2           ADD      R0,R6,#+20
   \   00000038   160100EF           SWI      +278
    350            if (!Is_Show_Groups) p->state=0;//Открыть группу
   \   0000003C   ........           LDR      R0,??DataTable13  ;; Is_Show_Groups
    351            else
    352              p->state=0xFFFF;
    353            return AddContactOrGroup((CLIST **)&cltop,p);
   \   00000040   0610A0E1           MOV      R1,R6
   \   00000044   000090E5           LDR      R0,[R0, #+0]
   \   00000048   000050E3           CMP      R0,#+0
   \   0000004C   FF00A013           MOVNE    R0,#+255
   \   00000050   FF0C8013           ORRNE    R0,R0,#0xFF00
   \   00000054   B409C6E1           STRH     R0,[R6, #+148]
   \   00000058   ........           LDR      R0,??DataTable14  ;; cltop
   \   0000005C   ........           BL       AddContactOrGroup
   \   00000060   7080BDE8           POP      {R4-R6,PC}       ;; return
    354          }
    355          
    356          //by BoBa 19.11.2007

   \                                 In segment CODE, align 4, keep-with-next
    357          void LoadLocalCL(void){
   \                     LoadLocalCL:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
    358           FSTATS stat;
    359           char fn[256];
    360           int f;
    361           unsigned int ul;
    362           int fsize;
    363           char *p,*s;
    364           char cn[64];
    365           unsigned int uin;
    366           const char _slash[]="\\";
   \   00000004   C0419FE5           LDR      R4,??LoadLocalCL_0  ;; `?<Constant "\\\\">`
   \   00000008   5CDF4DE2           SUB      SP,SP,#+368
   \   0000000C   0010D4E5           LDRB     R1,[R4, #0]
   \   00000010   04008DE2           ADD      R0,SP,#+4
   \   00000014   0010C0E5           STRB     R1,[R0, #+0]
   \   00000018   0110D4E5           LDRB     R1,[R4, #+1]
   \   0000001C   0110C0E5           STRB     R1,[R0, #+1]
    367           strcpy(fn,TEMPLATES_PATH);
   \   00000020   A8119FE5           LDR      R1,??LoadLocalCL_0+0x4  ;; TEMPLATES_PATH
   \   00000024   08008DE2           ADD      R0,SP,#+8
   \   00000028   1A0000EF           SWI      +26
    368           if (fn[strlen(fn)-1]!='\\') strcat(fn, _slash);
   \   0000002C   08008DE2           ADD      R0,SP,#+8
   \   00000030   1B0000EF           SWI      +27
   \   00000034   08108DE2           ADD      R1,SP,#+8
   \   00000038   010080E0           ADD      R0,R0,R1
   \   0000003C   010050E5           LDRB     R0,[R0, #-1]
   \   00000040   5C0050E3           CMP      R0,#+92
   \   00000044   0200000A           BEQ      ??LoadLocalCL_1
   \   00000048   04108DE2           ADD      R1,SP,#+4
   \   0000004C   08008DE2           ADD      R0,SP,#+8
   \   00000050   170000EF           SWI      +23
    369           strcat(fn,"local.cl");
   \                     ??LoadLocalCL_1:
   \   00000054   041084E2           ADD      R1,R4,#+4
   \   00000058   08008DE2           ADD      R0,SP,#+8
   \   0000005C   170000EF           SWI      +23
    370           if (GetFileStats(fn,&stat,&ul)==-1) return;
   \   00000060   0040E0E3           MVN      R4,#+0
   \   00000064   0D20A0E1           MOV      R2,SP
   \   00000068   521F8DE2           ADD      R1,SP,#+328
   \   0000006C   08008DE2           ADD      R0,SP,#+8
   \   00000070   840000EF           SWI      +132
   \   00000074   040050E1           CMP      R0,R4
   \   00000078   3300000A           BEQ      ??LoadLocalCL_2
    371           if ((fsize=stat.size)<=0) return;
   \   0000007C   4C719DE5           LDR      R7,[SP, #+332]
   \   00000080   010057E3           CMP      R7,#+1
   \   00000084   300000BA           BLT      ??LoadLocalCL_2
    372           if ((f=fopen(fn,A_ReadOnly+A_BIN,P_READ,&ul))==-1) return;
   \   00000088   0D30A0E1           MOV      R3,SP
   \   0000008C   8020A0E3           MOV      R2,#+128
   \   00000090   801CA0E3           MOV      R1,#+32768
   \   00000094   08008DE2           ADD      R0,SP,#+8
   \   00000098   0A0000EF           SWI      +10
   \   0000009C   0080A0E1           MOV      R8,R0
   \   000000A0   040058E1           CMP      R8,R4
   \   000000A4   2800000A           BEQ      ??LoadLocalCL_2
    373           s=p=malloc(fsize+1);
   \   000000A8   010087E2           ADD      R0,R7,#+1
   \   000000AC   140000EF           SWI      +20
   \   000000B0   0040A0E1           MOV      R4,R0
   \   000000B4   0450A0E1           MOV      R5,R4
    374           s[fread(f,p,fsize,&ul)]=0;
   \   000000B8   0060A0E3           MOV      R6,#+0
   \   000000BC   0D30A0E1           MOV      R3,SP
   \   000000C0   0720A0E1           MOV      R2,R7
   \   000000C4   0410A0E1           MOV      R1,R4
   \   000000C8   0800A0E1           MOV      R0,R8
   \   000000CC   0B0000EF           SWI      +11
   \   000000D0   0560C0E7           STRB     R6,[R0, +R5]
    375           fclose(f,&ul);
   \   000000D4   0D10A0E1           MOV      R1,SP
   \   000000D8   0800A0E1           MOV      R0,R8
   \   000000DC   0D0000EF           SWI      +13
   \   000000E0   140000EA           B        ??LoadLocalCL_3
    376           while(*p!=0){
    377            char cc;
    378            while((cc=*p)!=';'){    //нах имя группы
    379             if (cc==0) goto L_EOF;
    380             p++;
    381            }
    382            p++;
    383            uin=0;
    384            while((cc=*p)!=';'){   //uin
    385             if (cc==0) goto L_EOF;
    386             uin*=10;
    387             uin+=((*p++)-'0');
    388            }
    389            p++;
    390            char *c=cn;
    391            while((cc=*p)!=';'){   //nick
    392             if (cc==0) goto L_EOF;
    393             *c++=*p++;
    394            }
    395            *c=0;
    396            while(*p!=13 && *p!=10 && *p!=0) p++; //нах конец строки
   \                     ??LoadLocalCL_4:
   \   000000E4   014084E2           ADD      R4,R4,#+1
   \                     ??LoadLocalCL_5:
   \   000000E8   0000D4E5           LDRB     R0,[R4, #+0]
   \   000000EC   0D0050E3           CMP      R0,#+13
   \   000000F0   0A005013           CMPNE    R0,#+10
   \   000000F4   00005013           CMPNE    R0,#+0
   \   000000F8   F9FFFF1A           BNE      ??LoadLocalCL_4
    397            if (*p!=0) p++;
   \   000000FC   000050E3           CMP      R0,#+0
   \   00000100   01408412           ADDNE    R4,R4,#+1
    398            if ((*p==13)||(*p==10)) p++;
   \   00000104   0000D4E5           LDRB     R0,[R4, #+0]
   \   00000108   0D0050E3           CMP      R0,#+13
   \   0000010C   0A005013           CMPNE    R0,#+10
   \   00000110   01408402           ADDEQ    R4,R4,#+1
    399            if (!FindContactByUin(uin)) AddContact(uin, cn, 0, 1);
   \   00000114   0700A0E1           MOV      R0,R7
   \   00000118   ........           BL       FindContactByUin
   \   0000011C   000050E3           CMP      R0,#+0
   \   00000120   0400001A           BNE      ??LoadLocalCL_3
   \   00000124   0130A0E3           MOV      R3,#+1
   \   00000128   0020A0E3           MOV      R2,#+0
   \   0000012C   421F8DE2           ADD      R1,SP,#+264
   \   00000130   0700A0E1           MOV      R0,R7
   \   00000134   ........           BL       AddContact
   \                     ??LoadLocalCL_3:
   \   00000138   0000D4E5           LDRB     R0,[R4, #+0]
   \   0000013C   000050E3           CMP      R0,#+0
   \   00000140   0600001A           BNE      ??LoadLocalCL_6
    400           }
    401          L_EOF:
    402           mfree(s);
   \                     ??LoadLocalCL_7:
   \   00000144   0500A0E1           MOV      R0,R5
   \   00000148   150000EF           SWI      +21
    403          }
   \                     ??LoadLocalCL_2:
   \   0000014C   5CDF8DE2           ADD      SP,SP,#+368      ;; stack cleaning
   \   00000150   F081BDE8           POP      {R4-R8,PC}       ;; return
   \                     ??LoadLocalCL_8:
   \   00000154   000050E3           CMP      R0,#+0
   \   00000158   F9FFFF0A           BEQ      ??LoadLocalCL_7
   \   0000015C   014084E2           ADD      R4,R4,#+1
   \                     ??LoadLocalCL_6:
   \   00000160   0000D4E5           LDRB     R0,[R4, #+0]
   \   00000164   3B0050E3           CMP      R0,#+59
   \   00000168   F9FFFF1A           BNE      ??LoadLocalCL_8
   \   0000016C   014084E2           ADD      R4,R4,#+1
   \   00000170   0070A0E3           MOV      R7,#+0
   \   00000174   050000EA           B        ??LoadLocalCL_9
   \                     ??LoadLocalCL_10:
   \   00000178   000050E3           CMP      R0,#+0
   \   0000017C   F0FFFF0A           BEQ      ??LoadLocalCL_7
   \   00000180   ........           LDRB     R1,[R4], #+1
   \   00000184   0A00A0E3           MOV      R0,#+10
   \   00000188   301041E2           SUB      R1,R1,#+48
   \   0000018C   901727E0           MLA      R7,R0,R7,R1
   \                     ??LoadLocalCL_9:
   \   00000190   0000D4E5           LDRB     R0,[R4, #+0]
   \   00000194   3B0050E3           CMP      R0,#+59
   \   00000198   F6FFFF1A           BNE      ??LoadLocalCL_10
   \   0000019C   014084E2           ADD      R4,R4,#+1
   \   000001A0   421F8DE2           ADD      R1,SP,#+264
   \   000001A4   030000EA           B        ??LoadLocalCL_11
   \                     ??LoadLocalCL_12:
   \   000001A8   000050E3           CMP      R0,#+0
   \   000001AC   E4FFFF0A           BEQ      ??LoadLocalCL_7
   \   000001B0   ........           LDRB     R0,[R4], #+1
   \   000001B4   ........           STRB     R0,[R1], #+1
   \                     ??LoadLocalCL_11:
   \   000001B8   0000D4E5           LDRB     R0,[R4, #+0]
   \   000001BC   3B0050E3           CMP      R0,#+59
   \   000001C0   F8FFFF1A           BNE      ??LoadLocalCL_12
   \   000001C4   0060C1E5           STRB     R6,[R1, #+0]
   \   000001C8   C6FFFFEA           B        ??LoadLocalCL_5
   \                     ??LoadLocalCL_0:
   \   000001CC   ........           DC32     `?<Constant "\\\\">`
   \   000001D0   ........           DC32     TEMPLATES_PATH

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable7:
   \   00000000   ........           DC32     Is_Active_Up

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable13:
   \   00000000   ........           DC32     Is_Show_Groups

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable14:
   \   00000000   ........           DC32     cltop

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\\\">`:
   \   00000000   5C00               DC8 "\\"
   \   00000002   0000               DC8 0, 0
   \   00000004   6C6F63616C2E       DC8 "local.cl"
   \              636C00      
   \   0000000D   000000             DC8 0, 0, 0

   Maximum stack usage in bytes:

     Function             CSTACK
     --------             ------
     AddContact              24
     AddContactOrGroup       16
     AddGroup                16
     ChangeContactPos        12
     CompareContacts         16
     CountContacts            8
     DeleteContact            8
     FillAllOffline          16
     FindContactByContact    12
     FindContactByN           8
     FindContactByNS         32
     FindContactByUin         0
     FindGroupByID            0
     FreeCLIST                8
     FreeXText                8
     LoadLocalCL            392
     ResortCL                20
     SwapContacts             0


   Segment part sizes:

     Function/Label       Bytes
     --------------       -----
     FreeXText              36
     FreeCLIST             104
     FillAllOffline        144
     FindContactByUin       44
     FindGroupByID          48
     table_T9Key           256
     FindContactByNS       360
     CountContacts          48
     FindContactByN         92
     FindContactByContact  104
     SwapContacts           52
     ChangeContactPos      128
     CompareContacts       152
     DeleteContact         132
     AddContactOrGroup     120
     ResortCL              112
     AddContact            104
     AddGroup              100
     LoadLocalCL           468
     ??DataTable7            4
     ??DataTable13           4
     ??DataTable14           4
     ?<Constant "\\">       16
      Others               108

 
 2 468 bytes in segment CODE
   272 bytes in segment DATA_C
 
 2 360 bytes of CODE  memory (+ 108 bytes shared)
   272 bytes of CONST memory

Errors: none
Warnings: none
