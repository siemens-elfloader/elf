##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION    08/Aug/2012  15:51:35 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  C:\arm\google_maps\inet.c                            #
#    Command line    =  C:\arm\google_maps\inet.c -D NEWSGOLD -D ELKA -lC    #
#                       C:\arm\google_maps\Release_ELKA\List\ -o             #
#                       C:\arm\google_maps\Release_ELKA\Obj\ -s9             #
#                       --no_unroll --no_clustering --cpu_mode arm --endian  #
#                       little --cpu ARM926EJ-S --stack_align 4 --interwork  #
#                       -e --fpu None --dlib_config "C:\arm2\Embedded        #
#                       Workbench 4.0 Evaluation\ARM\LIB\dl5tpainl8f.h" -I   #
#                       "C:\arm2\Embedded Workbench 4.0                      #
#                       Evaluation\ARM\INC\" --inline_threshold=2            #
#    List file       =  C:\arm\google_maps\Release_ELKA\List\inet.lst        #
#    Object file     =  C:\arm\google_maps\Release_ELKA\Obj\inet.r79         #
#                                                                            #
#                                                                            #
##############################################################################

C:\arm\google_maps\inet.c
      1          #include "include.h"
      2          #include "language/language.h"
      3          
      4          #define  SOCK_STREAM             1 /*virtual circuit*/ //tcp
      5          #define  SOCK_DGRAM              2 /*datagram*/// udp
      6          #define  SOCK_RAW                3 /*raw socket*/
      7          #define  SOCK_RDM                4 /*reliably-delivered message*/
      8          #define  SOCK_CONN_DGRAM         5 /*connection datagram*/
      9          #define SOCK_PACKET	10         /* linux specific way of	*/
     10          
     11          
     12          #define AF_UNSPEC	0
     13          #define AF_UNIX		1	/* Unix domain sockets 		*/
     14          #define AF_INET		2	/* Internet IP Protocol 	*/
     15          #define AF_AX25		3	/* Amateur Radio AX.25 		*/
     16          #define AF_IPX		4	/* Novell IPX 			*/
     17          #define AF_APPLETALK	5	/* Appletalk DDP 		*/
     18          #define	AF_NETROM	6	/* Amateur radio NetROM 	*/
     19          #define AF_BRIDGE	7	/* Multiprotocol bridge 	*/
     20          #define AF_AAL5		8	/* Reserved for Werner's ATM 	*/
     21          #define AF_X25		9	/* Reserved for X.25 project 	*/
     22          #define AF_INET6	10	/* IP version 6			*/
     23          #define AF_MAX		12	/* For now.. */
     24          
     25          
     26          #define SOCKET_ERROR     -1
     27          
     28          

   \                                 In segment CODE, align 4, keep-with-next
     29          unsigned int IP(const char *ip)
     30          {
   \                     IP:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   10D04DE2           SUB      SP,SP,#+16
     31            unsigned int A,B,C,D;
     32            sscanf(ip,"%d.%d.%d.%d",&A,&B,&C,&D);
   \   00000008   0C108DE2           ADD      R1,SP,#+12
   \   0000000C   02002DE9           PUSH     {R1}
   \   00000010   0C108DE2           ADD      R1,SP,#+12
   \   00000014   02002DE9           PUSH     {R1}
   \   00000018   0C308DE2           ADD      R3,SP,#+12
   \   0000001C   2C109FE5           LDR      R1,??IP_0        ;; `?<Constant "%d.%d.%d.%d">`
   \   00000020   08208DE2           ADD      R2,SP,#+8
   \   00000024   F50100EF           SWI      +501
     33            return IP_ADDR(A,B,C,D);
   \   00000028   08009DE5           LDR      R0,[SP, #+8]
   \   0000002C   0C109DE5           LDR      R1,[SP, #+12]
   \   00000030   0118A0E1           LSL      R1,R1,#+16
   \   00000034   000C81E1           ORR      R0,R1,R0, LSL #+24
   \   00000038   10109DE5           LDR      R1,[SP, #+16]
   \   0000003C   010480E1           ORR      R0,R0,R1, LSL #+8
   \   00000040   14109DE5           LDR      R1,[SP, #+20]
   \   00000044   18D08DE2           ADD      SP,SP,#+24
   \   00000048   000081E1           ORR      R0,R1,R0
   \   0000004C   0080BDE8           POP      {PC}             ;; return
   \                     ??IP_0:
   \   00000050   ........           DC32     `?<Constant "%d.%d.%d.%d">`
     34          }
     35          

   \                                 In segment CODE, align 4, keep-with-next
     36          void create_connect()
     37          {
   \                     create_connect:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
     38             SOCK_ADDR sa;
     39             connect_state=0;
   \   00000004   ........           LDR      R4,??DataTable22  ;; connect_state
     40             sock=socket(1,1,0);
   \   00000008   ........           LDR      R5,??DataTable11  ;; sock
   \   0000000C   10D04DE2           SUB      SP,SP,#+16
   \   00000010   0000A0E3           MOV      R0,#+0
   \   00000014   000084E5           STR      R0,[R4, #+0]
   \   00000018   0020A0E3           MOV      R2,#+0
   \   0000001C   0110A0E3           MOV      R1,#+1
   \   00000020   0100A0E1           MOV      R0,R1
   \   00000024   730100EF           SWI      +371
   \   00000028   000085E5           STR      R0,[R5, #+0]
     41           if (sock!=-1)
   \   0000002C   0060E0E3           MVN      R6,#+0
   \   00000030   060050E1           CMP      R0,R6
   \   00000034   FF80BD08           POPEQ    {R0-R7,PC}
     42             {
     43              sa.family=AF_UNIX;
     44              sa.port=htons(PORT);
   \   00000038   6C009FE5           LDR      R0,??create_connect_0  ;; PORT
   \   0000003C   0170A0E3           MOV      R7,#+1
   \   00000040   B070CDE1           STRH     R7,[SP, #+0]
   \   00000044   000090E5           LDR      R0,[R0, #+0]
   \   00000048   0008A0E1           MOV      R0,R0, LSL #+16
   \   0000004C   2008A0E1           MOV      R0,R0, LSR #+16
   \   00000050   7A0100EF           SWI      +378
   \   00000054   B200CDE1           STRH     R0,[SP, #+2]
     45              sa.ip=htonl(IP(HOST));
   \   00000058   50009FE5           LDR      R0,??create_connect_0+0x4  ;; HOST
   \   0000005C   ........           BL       IP
   \   00000060   7B0100EF           SWI      +379
   \   00000064   04008DE5           STR      R0,[SP, #+4]
     46              if(connect(sock,&sa,sizeof(sa))!=SOCKET_ERROR)
   \   00000068   000095E5           LDR      R0,[R5, #+0]
   \   0000006C   1020A0E3           MOV      R2,#+16
   \   00000070   0D10A0E1           MOV      R1,SP
   \   00000074   740100EF           SWI      +372
   \   00000078   060050E1           CMP      R0,R6
   \   0000007C   0600000A           BEQ      ??create_connect_1
     47              {
     48                if(istate==1)istate=2;
   \   00000080   2C009FE5           LDR      R0,??create_connect_0+0x8  ;; istate
     49                connect_state=1;
   \   00000084   007084E5           STR      R7,[R4, #+0]
   \   00000088   001090E5           LDR      R1,[R0, #+0]
   \   0000008C   010051E3           CMP      R1,#+1
   \   00000090   0210A003           MOVEQ    R1,#+2
   \   00000094   00108005           STREQ    R1,[R0, #+0]
   \   00000098   FF80BDE8           POP      {R0-R7,PC}
     50              }
     51              else
     52              {
     53                closesocket(sock);
   \                     ??create_connect_1:
   \   0000009C   000095E5           LDR      R0,[R5, #+0]
   \   000000A0   760100EF           SWI      +374
     54                sock=-1;
   \   000000A4   006085E5           STR      R6,[R5, #+0]
     55              }
     56            }
     57          }
   \   000000A8   FF80BDE8           POP      {R0-R7,PC}       ;; return
   \                     ??create_connect_0:
   \   000000AC   ........           DC32     PORT
   \   000000B0   ........           DC32     HOST
   \   000000B4   ........           DC32     istate
     58          
     59          

   \                                 In segment CODE, align 4, keep-with-next
     60          void send_req(void)
     61          {
   \                     send_req:
   \   00000000   10402DE9           PUSH     {R4,LR}
     62          if(buf==0)buf=malloc(BUFFSIZE);
   \   00000004   ........           LDR      R4,??DataTable12  ;; buf
   \   00000008   000094E5           LDR      R0,[R4, #+0]
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   0200001A           BNE      ??send_req_0
   \   00000014   800EA0E3           MOV      R0,#+2048
   \   00000018   140000EF           SWI      +20
   \   0000001C   000084E5           STR      R0,[R4, #+0]
     63          mode=1;
   \                     ??send_req_0:
   \   00000020   ........           LDR      R0,??DataTable24  ;; mode
     64          CreateRequest(); 
     65          all_traf+=send(sock,req_buf,strlen(req_buf),0);
   \   00000024   ........           LDR      R4,??DataTable16  ;; req_buf
   \   00000028   0110A0E3           MOV      R1,#+1
   \   0000002C   001080E5           STR      R1,[R0, #+0]
   \   00000030   ........           BL       CreateRequest
   \   00000034   0400A0E1           MOV      R0,R4
   \   00000038   1B0000EF           SWI      +27
   \   0000003C   0020A0E1           MOV      R2,R0
   \   00000040   ........           LDR      R0,??DataTable11  ;; sock
   \   00000044   0030A0E3           MOV      R3,#+0
   \   00000048   000090E5           LDR      R0,[R0, #+0]
   \   0000004C   0410A0E1           MOV      R1,R4
   \   00000050   790100EF           SWI      +377
   \   00000054   ........           LDR      R1,??DataTable13  ;; all_traf
   \   00000058   002091E5           LDR      R2,[R1, #+0]
   \   0000005C   020080E0           ADD      R0,R0,R2
   \   00000060   000081E5           STR      R0,[R1, #+0]
     66          connect_state=2;
   \   00000064   ........           LDR      R0,??DataTable22  ;; connect_state
   \   00000068   0210A0E3           MOV      R1,#+2
   \   0000006C   001080E5           STR      R1,[R0, #+0]
     67          }
   \   00000070   1080BDE8           POP      {R4,PC}          ;; return
     68          

   \                                 In segment CODE, align 4, keep-with-next
     69          void end_socket(void)
     70          {
   \                     end_socket:
   \   00000000   10402DE9           PUSH     {R4,LR}
     71             if (sock>=0)
   \   00000004   ........           LDR      R4,??DataTable11  ;; sock
   \   00000008   000094E5           LDR      R0,[R4, #+0]
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   1080BD48           POPMI    {R4,PC}
     72               {
     73                shutdown(sock,2);
   \   00000014   0210A0E3           MOV      R1,#+2
   \   00000018   770100EF           SWI      +375
     74                closesocket(sock);
   \   0000001C   000094E5           LDR      R0,[R4, #+0]
   \   00000020   760100EF           SWI      +374
     75                connect_state=0;
   \   00000024   ........           LDR      R0,??DataTable22  ;; connect_state
   \   00000028   0010A0E3           MOV      R1,#+0
   \   0000002C   001080E5           STR      R1,[R0, #+0]
     76                SUBPROC((void *)create_connect);
   \   00000030   ........           LDR      R0,??DataTable23  ;; create_connect
   \   00000034   710100EF           SWI      +369
     77               }
     78          }
   \   00000038   1080BDE8           POP      {R4,PC}          ;; return
     79          
     80          

   \                                 In segment CODE, align 4, keep-with-next
     81          int get_headersize(char *a)
     82          {
   \                     get_headersize:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
     83          int header_size=0;
   \   00000008   0050A0E3           MOV      R5,#+0
   \   0000000C   000000EA           B        ??get_headersize_0
     84          while(header_size<strlen(a)-3)
     85          {
     86            if(a[header_size]=='\r'&&a[header_size+1]=='\n'&&a[header_size+2]=='\r'&&a[header_size+3]=='\n')return header_size+4;
     87            header_size++;
   \                     ??get_headersize_1:
   \   00000010   015085E2           ADD      R5,R5,#+1
   \                     ??get_headersize_0:
   \   00000014   0400A0E1           MOV      R0,R4
   \   00000018   1B0000EF           SWI      +27
   \   0000001C   030040E2           SUB      R0,R0,#+3
   \   00000020   000055E1           CMP      R5,R0
   \   00000024   1000002A           BCS      ??get_headersize_2
   \   00000028   0400D5E7           LDRB     R0,[R5, +R4]
   \   0000002C   0D0050E3           CMP      R0,#+13
   \   00000030   F6FFFF1A           BNE      ??get_headersize_1
   \   00000034   040085E0           ADD      R0,R5,R4
   \   00000038   0100D0E5           LDRB     R0,[R0, #+1]
   \   0000003C   0A0050E3           CMP      R0,#+10
   \   00000040   F2FFFF1A           BNE      ??get_headersize_1
   \   00000044   040085E0           ADD      R0,R5,R4
   \   00000048   0200D0E5           LDRB     R0,[R0, #+2]
   \   0000004C   0D0050E3           CMP      R0,#+13
   \   00000050   EEFFFF1A           BNE      ??get_headersize_1
   \   00000054   040085E0           ADD      R0,R5,R4
   \   00000058   0300D0E5           LDRB     R0,[R0, #+3]
   \   0000005C   0A0050E3           CMP      R0,#+10
   \   00000060   EAFFFF1A           BNE      ??get_headersize_1
   \   00000064   040085E2           ADD      R0,R5,#+4
   \   00000068   3080BDE8           POP      {R4,R5,PC}
     88          }
     89          return 0;
   \                     ??get_headersize_2:
   \   0000006C   0000A0E3           MOV      R0,#+0
   \   00000070   3080BDE8           POP      {R4,R5,PC}       ;; return
     90          }
     91          
     92          

   \                                 In segment CODE, align 4, keep-with-next
     93          void get_answer()
     94          {
   \                     get_answer:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
     95             tag=0;
   \   00000004   E8809FE5           LDR      R8,??get_answer_0  ;; tag
     96             int j=0;
     97             int header_size=0,
     98                  image_size=0;
   \   00000008   E8609FE5           LDR      R6,??get_answer_0+0x4  ;; pbuf
   \   0000000C   ........           LDR      R10,??DataTable11  ;; sock
   \   00000010   ........           LDR      R7,??DataTable12  ;; buf
   \   00000014   0040A0E3           MOV      R4,#+0
   \   00000018   004088E5           STR      R4,[R8, #+0]
   \   0000001C   0050A0E3           MOV      R5,#+0
   \   00000020   0490A0E1           MOV      R9,R4
   \   00000024   0A0000EA           B        ??get_answer_1
     99            
    100            while((j=recv(sock,buf+pbuf,BUFFSIZE,0))>0)
    101            {
    102              all_traf+=j;
   \                     ??get_answer_2:
   \   00000028   ........           LDR      R1,??DataTable13  ;; all_traf
   \   0000002C   002091E5           LDR      R2,[R1, #+0]
   \   00000030   022080E0           ADD      R2,R0,R2
   \   00000034   002081E5           STR      R2,[R1, #+0]
    103              pbuf+=j;
   \   00000038   001096E5           LDR      R1,[R6, #+0]
   \   0000003C   010080E0           ADD      R0,R0,R1
   \   00000040   000086E5           STR      R0,[R6, #+0]
    104              buf=realloc(buf,pbuf+BUFFSIZE); 
   \   00000044   801E80E2           ADD      R1,R0,#+2048
   \   00000048   000097E5           LDR      R0,[R7, #+0]
   \   0000004C   BA0000EF           SWI      +186
   \   00000050   000087E5           STR      R0,[R7, #+0]
    105            }
   \                     ??get_answer_1:
   \   00000054   000096E5           LDR      R0,[R6, #+0]
   \   00000058   001097E5           LDR      R1,[R7, #+0]
   \   0000005C   0030A0E3           MOV      R3,#+0
   \   00000060   011080E0           ADD      R1,R0,R1
   \   00000064   00009AE5           LDR      R0,[R10, #+0]
   \   00000068   802EA0E3           MOV      R2,#+2048
   \   0000006C   780100EF           SWI      +376
   \   00000070   010050E3           CMP      R0,#+1
   \   00000074   EBFFFFAA           BGE      ??get_answer_2
    106            
    107          
    108              if(header_size==0||image_size==0)
    109             {
    110                if(strstr(buf,"\r\n\r\n"))
   \   00000078   000097E5           LDR      R0,[R7, #+0]
   \   0000007C   78109FE5           LDR      R1,??get_answer_0+0x8  ;; `?<Constant "\\r\\n\\r\\n">`
   \   00000080   180100EF           SWI      +280
   \   00000084   000050E3           CMP      R0,#+0
   \   00000088   1000000A           BEQ      ??get_answer_3
    111                 {
    112                   if(header_size==0)header_size=get_headersize(buf);
   \   0000008C   000097E5           LDR      R0,[R7, #+0]
   \   00000090   ........           BL       get_headersize
    113                   if(image_size==0&&(tag=findtag(buf,"Content-Length:")))
   \   00000094   64109FE5           LDR      R1,??get_answer_0+0xC  ;; `?<Constant "Content-Length:">`
   \   00000098   0050A0E1           MOV      R5,R0
   \   0000009C   000097E5           LDR      R0,[R7, #+0]
   \   000000A0   ........           _BLF     findtag,??findtag??rA
   \   000000A4   000088E5           STR      R0,[R8, #+0]
   \   000000A8   000050E3           CMP      R0,#+0
   \   000000AC   0700000A           BEQ      ??get_answer_3
    114                     {
    115          
    116                       valuetag(tag, filename, sizeof(filename)-1);
   \   000000B0   ........           LDR      R9,??DataTable25  ;; filename
   \   000000B4   7F20A0E3           MOV      R2,#+127
   \   000000B8   0910A0E1           MOV      R1,R9
   \   000000BC   ........           _BLF     valuetag,??valuetag??rA
    117                       image_size=(int)str_to_double(filename);
   \   000000C0   0900A0E1           MOV      R0,R9
   \   000000C4   ........           _BLF     str_to_double,??str_to_double??rA
   \   000000C8   ........           _BLF     __doubleToLong,??__doubleToLong??rA
   \   000000CC   0090A0E1           MOV      R9,R0
    118                      }
    119                 }
    120             }
    121            
    122            if(pbuf>=(image_size+header_size))
   \                     ??get_answer_3:
   \   000000D0   000096E5           LDR      R0,[R6, #+0]
   \   000000D4   091085E0           ADD      R1,R5,R9
   \   000000D8   010050E1           CMP      R0,R1
   \   000000DC   F087BDB8           POPLT    {R4-R10,PC}
    123            {
    124              buf[pbuf]=0;
   \   000000E0   001097E5           LDR      R1,[R7, #+0]
   \   000000E4   0140C0E7           STRB     R4,[R0, +R1]
    125              save_image_in_cache(0);
   \   000000E8   0000A0E3           MOV      R0,#+0
   \   000000EC   ........           _BLF     save_image_in_cache,??save_image_in_cache??rA
    126            }
    127          }
   \   000000F0   F087BDE8           POP      {R4-R10,PC}      ;; return
   \                     ??get_answer_0:
   \   000000F4   ........           DC32     tag
   \   000000F8   ........           DC32     pbuf
   \   000000FC   ........           DC32     `?<Constant "\\r\\n\\r\\n">`
   \   00000100   ........           DC32     `?<Constant "Content-Length:">`
    128          
    129          

   \                                 In segment CODE, align 4, keep-with-next
    130           void CreateRequest()
    131          {
    132          
    133          if(!latitude||!longitude)
   \                     CreateRequest:
   \   00000000   ........           LDR      R0,??DataTable26  ;; latitude
   \   00000004   F0432DE9           PUSH     {R4-R9,LR}
   \   00000008   C00090E8           LDM      R0,{R6,R7}
   \   0000000C   ........           LDR      R4,??DataTable16  ;; req_buf
   \   00000010   0000A0E3           MOV      R0,#+0
   \   00000014   0010A0E3           MOV      R1,#+0
   \   00000018   0620A0E1           MOV      R2,R6
   \   0000001C   0730A0E1           MOV      R3,R7
   \   00000020   ........           _BLF     __dNotEqual,??__dNotEqual??rA
   \   00000024   000050E3           CMP      R0,#+0
   \   00000028   0800000A           BEQ      ??CreateRequest_0
   \   0000002C   ........           LDR      R0,??DataTable27  ;; longitude
   \   00000030   0010A0E3           MOV      R1,#+0
   \   00000034   000390E8           LDM      R0,{R8,R9}
   \   00000038   0000A0E3           MOV      R0,#+0
   \   0000003C   0820A0E1           MOV      R2,R8
   \   00000040   0930A0E1           MOV      R3,R9
   \   00000044   ........           _BLF     __dNotEqual,??__dNotEqual??rA
   \   00000048   000050E3           CMP      R0,#+0
   \   0000004C   1700001A           BNE      ??CreateRequest_1
    134          {
    135          ramnet=RamNet();
   \                     ??CreateRequest_0:
   \   00000050   68519FE5           LDR      R5,??CreateRequest_2  ;; ramnet
   \   00000054   CA8000EF           SWI      +32970
   \   00000058   000085E5           STR      R0,[R5, #+0]
    136          char *p=((char*)ramnet)-11;
    137          char cc1=*p;
    138          char cc2=*(p+1);
    139          char nc=*(p+2);
    140          sprintf(req_buf,"GET /maps/index.php?cell=%d&op=%d&cc=%d&lac=%d",ramnet[0].ci,(nc&0x0F)*10+(nc>>4),(cc1&0x0F)*100+(cc1>>4)*10+(cc2&0x0F),ramnet[0].lac);  
   \   0000005C   B450D0E1           LDRH     R5,[R0, #+4]
   \   00000060   0B2040E2           SUB      R2,R0,#+11
   \   00000064   0030D2E5           LDRB     R3,[R2, #+0]
   \   00000068   0210D2E5           LDRB     R1,[R2, #+2]
   \   0000006C   20002DE9           PUSH     {R5}
   \   00000070   0120D2E5           LDRB     R2,[R2, #+1]
   \   00000074   64C0A0E3           MOV      R12,#+100
   \   00000078   0AE0A0E3           MOV      LR,#+10
   \   0000007C   0F5003E2           AND      R5,R3,#0xF
   \   00000080   2332A0E1           LSR      R3,R3,#+4
   \   00000084   9E0303E0           MUL      R3,LR,R3
   \   00000088   0F2002E2           AND      R2,R2,#0xF
   \   0000008C   9C3523E0           MLA      R3,R12,R5,R3
   \   00000090   032082E0           ADD      R2,R2,R3
   \   00000094   04002DE9           PUSH     {R2}
   \   00000098   0F2001E2           AND      R2,R1,#0xF
   \   0000009C   2112A0E1           LSR      R1,R1,#+4
   \   000000A0   9E1223E0           MLA      R3,LR,R2,R1
   \   000000A4   B220D0E1           LDRH     R2,[R0, #+2]
   \   000000A8   14119FE5           LDR      R1,??CreateRequest_2+0x4  ;; `?<Constant "GET /maps/index.php?c...">`
   \   000000AC   030000EA           B        ??CreateRequest_3
    141          
    142          }
    143          else sprintf(req_buf ,"GET /maps/index.php?lat=%f&lon=%f",latitude,longitude);
   \                     ??CreateRequest_1:
   \   000000B0   10119FE5           LDR      R1,??CreateRequest_2+0x8  ;; `?<Constant "GET /maps/index.php?l...">`
   \   000000B4   00032DE9           PUSH     {R8,R9}
   \   000000B8   0620A0E1           MOV      R2,R6
   \   000000BC   0730A0E1           MOV      R3,R7
   \                     ??CreateRequest_3:
   \   000000C0   0400A0E1           MOV      R0,R4
   \   000000C4   160000EF           SWI      +22
    144          
    145          if(my_latitude&&my_longitude)sprintf(req_buf ,"%s&my_latitude=%f&my_longitude=%f",req_buf,my_latitude,my_longitude);
   \   000000C8   FC009FE5           LDR      R0,??CreateRequest_2+0xC  ;; my_latitude
   \   000000CC   08D08DE2           ADD      SP,SP,#+8
   \   000000D0   C00090E8           LDM      R0,{R6,R7}
   \   000000D4   0000A0E3           MOV      R0,#+0
   \   000000D8   0010A0E3           MOV      R1,#+0
   \   000000DC   0620A0E1           MOV      R2,R6
   \   000000E0   0730A0E1           MOV      R3,R7
   \   000000E4   ........           _BLF     __dNotEqual,??__dNotEqual??rA
   \   000000E8   000050E3           CMP      R0,#+0
   \   000000EC   1000000A           BEQ      ??CreateRequest_4
   \   000000F0   D8009FE5           LDR      R0,??CreateRequest_2+0x10  ;; my_longitude
   \   000000F4   0010A0E3           MOV      R1,#+0
   \   000000F8   000390E8           LDM      R0,{R8,R9}
   \   000000FC   0000A0E3           MOV      R0,#+0
   \   00000100   0820A0E1           MOV      R2,R8
   \   00000104   0930A0E1           MOV      R3,R9
   \   00000108   ........           _BLF     __dNotEqual,??__dNotEqual??rA
   \   0000010C   000050E3           CMP      R0,#+0
   \   00000110   0700000A           BEQ      ??CreateRequest_4
   \   00000114   B8109FE5           LDR      R1,??CreateRequest_2+0x14  ;; `?<Constant "%s&my_latitude=%f&my_...">`
   \   00000118   00032DE9           PUSH     {R8,R9}
   \   0000011C   C0002DE9           PUSH     {R6,R7}
   \   00000120   0800BDE8           POP      {R3}
   \   00000124   0420A0E1           MOV      R2,R4
   \   00000128   0400A0E1           MOV      R0,R4
   \   0000012C   160000EF           SWI      +22
   \   00000130   0CD08DE2           ADD      SP,SP,#+12
    146          
    147          sprintf(req_buf ,"%s&zoom=%d&t=%s&frmt=%s&szx=%d&szy=%d&q=%s&imgx=%d&imgy=%d&cub=%d&color=blue&hl=%s"
    148          " HTTP/1.1\r\nHost: gps.st-hunter.ru\r\n\r\n",req_buf,zoom,maptype[map_type],format[0],ScreenW(),ScreenH(),type[2],mapi,mapj,cub,lgpData[LGP_LangCode]);
   \                     ??CreateRequest_4:
   \   00000134   898100EF           SWI      +33161
   \   00000138   0050A0E1           MOV      R5,R0
   \   0000013C   888100EF           SWI      +33160
   \   00000140   90109FE5           LDR      R1,??CreateRequest_2+0x18  ;; lgpData + 20
   \   00000144   0420A0E1           MOV      R2,R4
   \   00000148   001091E5           LDR      R1,[R1, #+0]
   \   0000014C   02002DE9           PUSH     {R1}
   \   00000150   5010A0E3           MOV      R1,#+80
   \   00000154   02002DE9           PUSH     {R1}
   \   00000158   ........           LDR      R1,??DataTable30  ;; mapj
   \   0000015C   001091E5           LDR      R1,[R1, #+0]
   \   00000160   02002DE9           PUSH     {R1}
   \   00000164   ........           LDR      R1,??DataTable31  ;; mapi
   \   00000168   001091E5           LDR      R1,[R1, #+0]
   \   0000016C   02002DE9           PUSH     {R1}
   \   00000170   64109FE5           LDR      R1,??CreateRequest_2+0x1C  ;; type + 8
   \   00000174   001091E5           LDR      R1,[R1, #+0]
   \   00000178   02002DE9           PUSH     {R1}
   \   0000017C   5C109FE5           LDR      R1,??CreateRequest_2+0x20  ;; maptype
   \   00000180   20002DE9           PUSH     {R5}
   \   00000184   01002DE9           PUSH     {R0}
   \   00000188   54009FE5           LDR      R0,??CreateRequest_2+0x24  ;; format
   \   0000018C   000090E5           LDR      R0,[R0, #+0]
   \   00000190   01002DE9           PUSH     {R0}
   \   00000194   ........           LDR      R0,??DataTable28  ;; map_type
   \   00000198   000090E5           LDR      R0,[R0, #+0]
   \   0000019C   000191E7           LDR      R0,[R1, +R0, LSL #+2]
   \   000001A0   40109FE5           LDR      R1,??CreateRequest_2+0x28  ;; `?<Constant "%s&zoom=%d&t=%s&frmt=...">`
   \   000001A4   01002DE9           PUSH     {R0}
   \   000001A8   ........           LDR      R0,??DataTable29  ;; zoom
   \   000001AC   003090E5           LDR      R3,[R0, #+0]
   \   000001B0   0400A0E1           MOV      R0,R4
   \   000001B4   160000EF           SWI      +22
   \   000001B8   24D08DE2           ADD      SP,SP,#+36
    149          }
   \   000001BC   F083BDE8           POP      {R4-R9,PC}       ;; return
   \                     ??CreateRequest_2:
   \   000001C0   ........           DC32     ramnet
   \   000001C4   ........           DC32     `?<Constant "GET /maps/index.php?c...">`
   \   000001C8   ........           DC32     `?<Constant "GET /maps/index.php?l...">`
   \   000001CC   ........           DC32     my_latitude
   \   000001D0   ........           DC32     my_longitude
   \   000001D4   ........           DC32     `?<Constant "%s&my_latitude=%f&my_...">`
   \   000001D8   ........           DC32     lgpData + 20
   \   000001DC   ........           DC32     type + 8
   \   000001E0   ........           DC32     maptype
   \   000001E4   ........           DC32     format
   \   000001E8   ........           DC32     `?<Constant "%s&zoom=%d&t=%s&frmt=...">`
    150          

   \                                 In segment CODE, align 4, keep-with-next
    151          void c()
    152          {
    153          if(connect_state==0)
   \                     c:
   \   00000000   ........           LDR      R0,??DataTable22  ;; connect_state
   \   00000004   10402DE9           PUSH     {R4,LR}
   \   00000008   28D04DE2           SUB      SP,SP,#+40
   \   0000000C   000090E5           LDR      R0,[R0, #+0]
   \   00000010   000050E3           CMP      R0,#+0
    154          {
    155            SUBPROC((void *)create_connect);
   \   00000014   ........           LDREQ    R0,??DataTable23  ;; create_connect
   \   00000018   2900000A           BEQ      ??c_0
    156            return;
    157          }
    158            mode=1;
   \   0000001C   ........           LDR      R0,??DataTable24  ;; mode
    159            FSTATS fs;
    160           sprintf(filename,"%scache%f_%f\\",fname,longitude,latitude);
   \   00000020   ........           LDR      R4,??DataTable25  ;; filename
   \   00000024   A4209FE5           LDR      R2,??c_1         ;; fname
   \   00000028   0110A0E3           MOV      R1,#+1
   \   0000002C   001080E5           STR      R1,[R0, #+0]
   \   00000030   ........           LDR      R0,??DataTable26  ;; latitude
   \   00000034   030090E8           LDM      R0,{R0,R1}
   \   00000038   03002DE9           PUSH     {R0,R1}
   \   0000003C   ........           LDR      R0,??DataTable27  ;; longitude
   \   00000040   030090E8           LDM      R0,{R0,R1}
   \   00000044   03002DE9           PUSH     {R0,R1}
   \   00000048   0800BDE8           POP      {R3}
   \   0000004C   80109FE5           LDR      R1,??c_1+0x4     ;; `?<Constant "%scache%f_%f\\\\">`
   \   00000050   0400A0E1           MOV      R0,R4
   \   00000054   160000EF           SWI      +22
    161           sprintf(filename,"%smap_%d_%d_%d_%d.png",filename,mapi,mapj,zoom,map_type);
   \   00000058   ........           LDR      R0,??DataTable28  ;; map_type
   \   0000005C   74109FE5           LDR      R1,??c_1+0x8     ;; `?<Constant "%smap_%d_%d_%d_%d.png">`
   \   00000060   000090E5           LDR      R0,[R0, #+0]
   \   00000064   0420A0E1           MOV      R2,R4
   \   00000068   01002DE9           PUSH     {R0}
   \   0000006C   ........           LDR      R0,??DataTable29  ;; zoom
   \   00000070   000090E5           LDR      R0,[R0, #+0]
   \   00000074   01002DE9           PUSH     {R0}
   \   00000078   ........           LDR      R0,??DataTable30  ;; mapj
   \   0000007C   000090E5           LDR      R0,[R0, #+0]
   \   00000080   01002DE9           PUSH     {R0}
   \   00000084   ........           LDR      R0,??DataTable31  ;; mapi
   \   00000088   003090E5           LDR      R3,[R0, #+0]
   \   0000008C   0400A0E1           MOV      R0,R4
   \   00000090   160000EF           SWI      +22
    162           
    163           if(GetFileStats(filename,&fs,0)!=-1)save_image_in_cache(1);//SUBPROC((void*)save_image_in_cache,1);
   \   00000094   0020A0E3           MOV      R2,#+0
   \   00000098   18108DE2           ADD      R1,SP,#+24
   \   0000009C   0400A0E1           MOV      R0,R4
   \   000000A0   840000EF           SWI      +132
   \   000000A4   010070E3           CMN      R0,#+1
   \   000000A8   18D08DE2           ADD      SP,SP,#+24
   \   000000AC   0300000A           BEQ      ??c_2
   \   000000B0   0100A0E3           MOV      R0,#+1
   \   000000B4   ........           _BLF     save_image_in_cache,??save_image_in_cache??rA
   \   000000B8   28D08DE2           ADD      SP,SP,#+40
   \   000000BC   1080BDE8           POP      {R4,PC}
    164           else
    165           
    166           SUBPROC((void*)send_req);
   \                     ??c_2:
   \   000000C0   14009FE5           LDR      R0,??c_1+0xC     ;; send_req
   \                     ??c_0:
   \   000000C4   710100EF           SWI      +369
   \   000000C8   28D08DE2           ADD      SP,SP,#+40
   \   000000CC   1080BDE8           POP      {R4,PC}          ;; return
   \                     ??c_1:
   \   000000D0   ........           DC32     fname
   \   000000D4   ........           DC32     `?<Constant "%scache%f_%f\\\\">`
   \   000000D8   ........           DC32     `?<Constant "%smap_%d_%d_%d_%d.png">`
   \   000000DC   ........           DC32     send_req
    167          }

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable11:
   \   00000000   ........           DC32     sock

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable12:
   \   00000000   ........           DC32     buf

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable13:
   \   00000000   ........           DC32     all_traf

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable16:
   \   00000000   ........           DC32     req_buf

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable22:
   \   00000000   ........           DC32     connect_state

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable23:
   \   00000000   ........           DC32     create_connect

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable24:
   \   00000000   ........           DC32     mode

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable25:
   \   00000000   ........           DC32     filename

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable26:
   \   00000000   ........           DC32     latitude

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable27:
   \   00000000   ........           DC32     longitude

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable28:
   \   00000000   ........           DC32     map_type

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable29:
   \   00000000   ........           DC32     zoom

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable30:
   \   00000000   ........           DC32     mapj

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable31:
   \   00000000   ........           DC32     mapi

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "%d.%d.%d.%d">`:
   \   00000000   25642E25642E       DC8 "%d.%d.%d.%d"
   \              25642E256400

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Content-Length:">`:
   \   00000000   436F6E74656E       DC8 "Content-Length:"
   \              742D4C656E67
   \              74683A00    

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\r\\n\\r\\n">`:
   \   00000000   0D0A0D0A00         DC8 "\015\012\015\012"
   \   00000005   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "GET /maps/index.php?c...">`:
   \   00000000   474554202F6D       DC8 "GET /maps/index.php?cell=%d&op=%d&cc=%d&lac=%d"
   \              6170732F696E
   \              6465782E7068
   \              703F63656C6C
   \              3D2564266F70
   \              3D2564266363
   \              3D2564266C61
   \              633D256400  
   \   0000002F   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "GET /maps/index.php?l...">`:
   \   00000000   474554202F6D       DC8 "GET /maps/index.php?lat=%f&lon=%f"
   \              6170732F696E
   \              6465782E7068
   \              703F6C61743D
   \              2566266C6F6E
   \              3D256600    
   \   00000022   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "%s&my_latitude=%f&my_...">`:
   \   00000000   2573266D795F       DC8 "%s&my_latitude=%f&my_longitude=%f"
   \              6C6174697475
   \              64653D256626
   \              6D795F6C6F6E
   \              676974756465
   \              3D256600    
   \   00000022   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "%s&zoom=%d&t=%s&frmt=...">`:
   \   00000000   2573267A6F6F       DC8 25H, 73H, 26H, 7AH, 6FH, 6FH, 6DH, 3DH
   \              6D3D        
   \   00000008   256426743D25       DC8 25H, 64H, 26H, 74H, 3DH, 25H, 73H, 26H
   \              7326        
   \   00000010   66726D743D25       DC8 66H, 72H, 6DH, 74H, 3DH, 25H, 73H, 26H
   \              7326        
   \   00000018   737A783D2564       DC8 73H, 7AH, 78H, 3DH, 25H, 64H, 26H, 73H
   \              2673        
   \   00000020   7A793D256426       DC8 7AH, 79H, 3DH, 25H, 64H, 26H, 71H, 3DH
   \              713D        
   \   00000028   257326696D67       DC8 25H, 73H, 26H, 69H, 6DH, 67H, 78H, 3DH
   \              783D        
   \   00000030   256426696D67       DC8 25H, 64H, 26H, 69H, 6DH, 67H, 79H, 3DH
   \              793D        
   \   00000038   256426637562       DC8 25H, 64H, 26H, 63H, 75H, 62H, 3DH, 25H
   \              3D25        
   \   00000040   6426636F6C6F       DC8 64H, 26H, 63H, 6FH, 6CH, 6FH, 72H, 3DH
   \              723D        
   \   00000048   626C75652668       DC8 62H, 6CH, 75H, 65H, 26H, 68H, 6CH, 3DH
   \              6C3D        
   \   00000050   257320485454       DC8 25H, 73H, 20H, 48H, 54H, 54H, 50H, 2FH
   \              502F        
   \   00000058   312E310D0A48       DC8 31H, 2EH, 31H, 0DH, 0AH, 48H, 6FH, 73H
   \              6F73        
   \   00000060   743A20677073       DC8 74H, 3AH, 20H, 67H, 70H, 73H, 2EH, 73H
   \              2E73        
   \   00000068   742D68756E74       DC8 74H, 2DH, 68H, 75H, 6EH, 74H, 65H, 72H
   \              6572        
   \   00000070   2E72750D0A0D       DC8 2EH, 72H, 75H, 0DH, 0AH, 0DH, 0AH, 0
   \              0A00        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "%scache%f_%f\\\\">`:
   \   00000000   257363616368       DC8 "%scache%f_%f\\"
   \              6525665F2566
   \              5C00        
   \   0000000E   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "%smap_%d_%d_%d_%d.png">`:
   \   00000000   25736D61705F       DC8 "%smap_%d_%d_%d_%d.png"
   \              25645F25645F
   \              25645F25642E
   \              706E6700    
   \   00000016   0000               DC8 0, 0

   Maximum stack usage in bytes:

     Function       CSTACK
     --------       ------
     CreateRequest     64
     IP                28
     c                 72
     create_connect    36
     end_socket         8
     get_answer        32
     get_headersize    12
     send_req           8


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     IP                               84
     create_connect                  184
     send_req                        116
     end_socket                       60
     get_headersize                  116
     get_answer                      260
     CreateRequest                   492
     c                               224
     ??DataTable11                     4
     ??DataTable12                     4
     ??DataTable13                     4
     ??DataTable16                     4
     ??DataTable22                     4
     ??DataTable23                     4
     ??DataTable24                     4
     ??DataTable25                     4
     ??DataTable26                     4
     ??DataTable27                     4
     ??DataTable28                     4
     ??DataTable29                     4
     ??DataTable30                     4
     ??DataTable31                     4
     ?<Constant "%d.%d.%d.%d">        12
     ?<Constant "Content-Length:">    16
     ?<Constant "\r\n\r\n">            8
     ?<Constant "GET /maps/index.php?c...">
                                      48
     ?<Constant "GET /maps/index.php?l...">
                                      36
     ?<Constant "%s&my_latitude=%f&my_...">
                                      36
     ?<Constant "%s&zoom=%d&t=%s&frmt=...">
                                     120
     ?<Constant "%scache%f_%f\\">     16
     ?<Constant "%smap_%d_%d_%d_%d.png">
                                      24
      Others                         104

 
 1 696 bytes in segment CODE
   316 bytes in segment DATA_C
 
 1 592 bytes of CODE  memory (+ 104 bytes shared)
   316 bytes of CONST memory

Errors: none
Warnings: none
