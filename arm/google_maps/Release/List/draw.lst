##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION    08/Aug/2012  15:38:36 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  C:\arm\google_maps\draw\draw.c                       #
#    Command line    =  C:\arm\google_maps\draw\draw.c -D NEWSGOLD -lC       #
#                       C:\arm\google_maps\Release\List\ -o                  #
#                       C:\arm\google_maps\Release\Obj\ -s9 --no_unroll      #
#                       --no_clustering --cpu_mode arm --endian little       #
#                       --cpu ARM926EJ-S --stack_align 4 --interwork -e      #
#                       --fpu None --dlib_config "C:\arm2\Embedded           #
#                       Workbench 4.0 Evaluation\ARM\LIB\dl5tpainl8f.h" -I   #
#                       "C:\arm2\Embedded Workbench 4.0                      #
#                       Evaluation\ARM\INC\" --inline_threshold=2            #
#    List file       =  C:\arm\google_maps\Release\List\draw.lst             #
#    Object file     =  C:\arm\google_maps\Release\Obj\draw.r79              #
#                                                                            #
#                                                                            #
##############################################################################

C:\arm\google_maps\draw\draw.c
      1          #include "..\inc\swilib.h"
      2          #include "../include.h"
      3          #include "draw.h"
      4          

   \                                 In segment CODE, align 4, keep-with-next
      5          void Redraw()
      6          {
      7            #ifdef ELKA
      8            DisableIconBar(1);
      9            if(mode)timer=100;
     10            else timer=100;
     11            #else
     12              if(mode)timer=30;
   \                     Redraw:
   \   00000000   2C009FE5           LDR      R0,??Redraw_0    ;; mode
     13            else timer=60;
     14          #endif
     15            GBS_StartTimerProc(&tmr,timer,Redraw);
   \   00000004   2C209FE5           LDR      R2,??Redraw_0+0x4  ;; Redraw
   \   00000008   00402DE9           PUSH     {LR}
   \   0000000C   000090E5           LDR      R0,[R0, #+0]
   \   00000010   000050E3           CMP      R0,#+0
   \   00000014   20009FE5           LDR      R0,??Redraw_0+0x8  ;; timer
   \   00000018   1E10A013           MOVNE    R1,#+30
   \   0000001C   3C10A003           MOVEQ    R1,#+60
   \   00000020   001080E5           STR      R1,[R0, #+0]
   \   00000024   ........           LDR      R0,??DataTable1  ;; tmr
   \   00000028   4D0000EF           SWI      +77
     16            DirectRedrawGUI();
   \   0000002C   3F0100EF           SWI      +319
     17          }
   \   00000030   0080BDE8           POP      {PC}             ;; return
   \                     ??Redraw_0:
   \   00000034   ........           DC32     mode
   \   00000038   ........           DC32     Redraw
   \   0000003C   ........           DC32     timer
     18          

   \                                 In segment CODE, align 4, keep-with-next
     19          void DrawInstall()
     20          {
   \                     DrawInstall:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
     21          
     22            WSHDR *ws=AllocWS(256);
   \   00000004   400FA0E3           MOV      R0,#+256
   \   00000008   250100EF           SWI      +293
   \   0000000C   0040A0E1           MOV      R4,R0
     23            DrawRoundedFrame(0,0,W,H,0,0,0,GetPaletteAdrByColorIndex(0),GetPaletteAdrByColorIndex(0));
   \   00000010   0000A0E3           MOV      R0,#+0
   \   00000014   2E0100EF           SWI      +302
   \   00000018   0050A0E1           MOV      R5,R0
   \   0000001C   0000A0E3           MOV      R0,#+0
   \   00000020   2E0100EF           SWI      +302
   \   00000024   20002DE9           PUSH     {R5}
     24            switch(istate)
   \   00000028   E8509FE5           LDR      R5,??DrawInstall_0  ;; istate
   \   0000002C   01002DE9           PUSH     {R0}
   \   00000030   B030A0E3           MOV      R3,#+176
   \   00000034   8420A0E3           MOV      R2,#+132
   \   00000038   0010A0E3           MOV      R1,#+0
   \   0000003C   0000A0E3           MOV      R0,#+0
   \   00000040   01002DE9           PUSH     {R0}
   \   00000044   01002DE9           PUSH     {R0}
   \   00000048   01002DE9           PUSH     {R0}
   \   0000004C   500100EF           SWI      +336
   \   00000050   002095E5           LDR      R2,[R5, #+0]
   \   00000054   14D08DE2           ADD      SP,SP,#+20
   \   00000058   010052E3           CMP      R2,#+1
   \   0000005C   0200009A           BLS      ??DrawInstall_1
   \   00000060   020052E2           SUBS     R0,R2,#+2
   \   00000064   0B00000A           BEQ      ??DrawInstall_2
   \   00000068   0D0000EA           B        ??DrawInstall_3
     25            {
     26            case 0:case 1:
     27              {
     28          wsprintf(ws,"Проверка подключения %d",istate);
   \                     ??DrawInstall_1:
   \   0000006C   A8109FE5           LDR      R1,??DrawInstall_0+0x4  ;; `?<Constant "\\317\\360\\356\\342\\345\\360\\352\\340 \\`
   \   00000070   0400A0E1           MOV      R0,R4
   \   00000074   240100EF           SWI      +292
     29          if(istate==0){istate=1;SUBPROC((void*)create_connect);}
   \   00000078   000095E5           LDR      R0,[R5, #+0]
   \   0000007C   000050E3           CMP      R0,#+0
   \   00000080   0700001A           BNE      ??DrawInstall_3
   \   00000084   0100A0E3           MOV      R0,#+1
   \   00000088   000085E5           STR      R0,[R5, #+0]
   \   0000008C   8C009FE5           LDR      R0,??DrawInstall_0+0x8  ;; create_connect
   \   00000090   710100EF           SWI      +369
   \   00000094   020000EA           B        ??DrawInstall_3
     30              }
     31            break;
     32            case 2:wsprintf(ws,"Проверка и загрузка ресурсов");
   \                     ??DrawInstall_2:
   \   00000098   84109FE5           LDR      R1,??DrawInstall_0+0xC  ;; `?<Constant "\\317\\360\\356\\342\\345\\360\\352\\340 \\_1`
   \   0000009C   0400A0E1           MOV      R0,R4
   \   000000A0   240100EF           SWI      +292
     33            //lgpInitLangPack();
     34            break;
     35            }
     36          //search_cache();
     37          
     38          DrawString(ws,0,0,ScreenW()-1,Get_WS_width(ws,FONT),FONT,0,GetPaletteAdrByColorIndex(2),GetPaletteAdrByColorIndex(23));
   \                     ??DrawInstall_3:
   \   000000A4   1700A0E3           MOV      R0,#+23
   \   000000A8   2E0100EF           SWI      +302
   \   000000AC   0050A0E1           MOV      R5,R0
   \   000000B0   0200A0E3           MOV      R0,#+2
   \   000000B4   2E0100EF           SWI      +302
   \   000000B8   0060A0E1           MOV      R6,R0
   \   000000BC   0710A0E3           MOV      R1,#+7
   \   000000C0   0400A0E1           MOV      R0,R4
   \   000000C4   080200EF           SWI      +520
   \   000000C8   0070A0E1           MOV      R7,R0
   \   000000CC   888100EF           SWI      +33160
   \   000000D0   20002DE9           PUSH     {R5}
   \   000000D4   40002DE9           PUSH     {R6}
   \   000000D8   0010A0E3           MOV      R1,#+0
   \   000000DC   02002DE9           PUSH     {R1}
   \   000000E0   013040E2           SUB      R3,R0,#+1
   \   000000E4   0020A0E3           MOV      R2,#+0
   \   000000E8   0400A0E1           MOV      R0,R4
   \   000000EC   0710A0E3           MOV      R1,#+7
   \   000000F0   02002DE9           PUSH     {R1}
   \   000000F4   80002DE9           PUSH     {R7}
   \   000000F8   0010A0E3           MOV      R1,#+0
   \   000000FC   4C0100EF           SWI      +332
     39          
     40          GBS_StartTimerProc(&tmr,10,DrawInstall); 	
   \   00000100   20209FE5           LDR      R2,??DrawInstall_0+0x10  ;; DrawInstall
   \   00000104   ........           LDR      R0,??DataTable1  ;; tmr
   \   00000108   0A10A0E3           MOV      R1,#+10
   \   0000010C   4D0000EF           SWI      +77
     41          }
   \   00000110   14D08DE2           ADD      SP,SP,#+20
   \   00000114   F080BDE8           POP      {R4-R7,PC}       ;; return
   \                     ??DrawInstall_0:
   \   00000118   ........           DC32     istate
   \   0000011C   ........           DC32     `?<Constant "\\317\\360\\356\\342\\345\\360\\352\\340 \\`
   \   00000120   ........           DC32     create_connect
   \   00000124   ........           DC32     `?<Constant "\\317\\360\\356\\342\\345\\360\\352\\340 \\_1`
   \   00000128   ........           DC32     DrawInstall

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   ........           DC32     tmr

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\317\\360\\356\\342\\345\\360\\352\\340 \\`:
   \   00000000   CFF0EEE2E5F0       DC8 "\317\360\356\342\345\360\352\340 \357\356\344\352\353\376\367\345\355\350\377 %d"
   \              EAE020EFEEE4
   \              EAEBFEF7E5ED
   \              E8FF20256400

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\317\\360\\356\\342\\345\\360\\352\\340 \\_1`:
   \   00000000   CFF0EEE2E5F0       DC8 "\317\360\356\342\345\360\352\340 \350 \347\340\343\360\363\347\352\340 \360\345\361\363\360\361\356\342"
   \              EAE020E820E7
   \              E0E3F0F3E7EA
   \              E020F0E5F1F3
   \              F0F1EEE200  
   \   0000001D   000000             DC8 0, 0, 0

   Maximum stack usage in bytes:

     Function    CSTACK
     --------    ------
     DrawInstall    40
     Redraw          4


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     Redraw                           64
     DrawInstall                     300
     ??DataTable1                      4
     ?<Constant "\317\360\356\342\345\360\352\340 \
                                      24
     ?<Constant "\317\360\356\342\345\360\352\340 \_1
                                      32
      Others                           8

 
 376 bytes in segment CODE
  56 bytes in segment DATA_C
 
 368 bytes of CODE  memory (+ 8 bytes shared)
  56 bytes of CONST memory

Errors: none
Warnings: none
