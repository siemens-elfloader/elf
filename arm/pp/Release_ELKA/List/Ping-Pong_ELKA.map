################################################################################
#                                                                              #
#      IAR Universal Linker V4.60I/386                                         #
#                                                                              #
#           Link time     =  07/Mar/2011  21:05:09                             #
#           Target CPU    =  ARM                                               #
#           List file     =  C:\arm\pp\Release_ELKA\List\Ping-Pong_ELKA.map    #
#           Output file 1 =  C:\arm\pp\Release_ALL\Ping-Pong_ELKA.elf          #
#                            Format: elf, variant: -ynpra                      #
#           Command line  =  C:\arm\pp\Release_ELKA\Obj\conf_loader.r79        #
#                            C:\arm\pp\Release_ELKA\Obj\config_data.r79        #
#                            C:\arm\pp\Release_ELKA\Obj\func.r79               #
#                            C:\arm\pp\Release_ELKA\Obj\main.r79 -o            #
#                            C:\arm\pp\Release_ALL\Ping-Pong_ELKA.elf -Felf    #
#                            -l                                                #
#                            C:\arm\pp\Release_ELKA\List\Ping-Pong_ELKA.map    #
#                            -xmsnio -f C:\arm\pp\test.xcl (-carm              #
#                            -V(CODE)CODE_AREA,12 -V(DATA)DATA_AREA,12         #
#                            -Z(CODE_AREA)ELFBEGIN,DATA_ID,START,CODE,DATA_C,I #
#                            NITTAB,DATA_Z,DATA_N,CONFIG_C=0-FFFFFFFF          #
#                            -Z(DATA_AREA)DATA_I=0-FFFFFFFF) -n -ynpra -s      #
#                            main                                              #
#                                                                              #
#                        Copyright 1987-2007 IAR Systems. All rights reserved. #
################################################################################





                ****************************************
                *                                      *
                *           CROSS REFERENCE            *
                *                                      *
                ****************************************

       Program entry at : CODE_AREA 00003DB0  Relocatable, from module : main




                ****************************************
                *                                      *
                *            RUNTIME MODEL             *
                *                                      *
                ****************************************

  StackAlign4  = USED
  __cpu_mode   = __pcs__interwork
  __data_model = absolute
  __endian     = little
  __rt_version = 6



                ****************************************
                *                                      *
                *              MODULE MAP              *
                *                                      *
                ****************************************


  DEFINED ABSOLUTE ENTRIES
    *************************************************************************

  DEFINED ABSOLUTE ENTRIES
    *************************************************************************

  FILE NAME : C:\arm\pp\Release_ELKA\Obj\conf_loader.r79
  PROGRAM MODULE, NAME : conf_loader

  SEGMENTS IN THE MODULE
  ======================
DATA_I
  Relative segment, address: DATA_AREA 00000000 - 00000003 (0x4 bytes), align: 2
  Segment part 4.             Intra module refs:   LoadConfigData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           successed_config_filename
                                   00000000        Segment part 121 (main)
                                                   Segment part 154 (main)
    -------------------------------------------------------------------------
CODE
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000002BC - 000003E7 (0x12c bytes), align: 2
  Segment part 7.             Intra module refs:   InitConfig
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LoadConfigData          000002BC 
               stack 1 = 00000000 ( 00000030 )
    -------------------------------------------------------------------------
CODE
  Segment part 8. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000003E8 - 0000040F (0x28 bytes), align: 2
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           InitConfig              000003E8        main (main)
                                                   maincsm_onmessage (main)
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_ID
  Relative segment, address: CODE_AREA 00000000 - 00000003 (0x4 bytes), align: 2
  Segment part 5.             Intra module refs:   successed_config_filename
    -------------------------------------------------------------------------
DATA_ID
  Segment part 10. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?*?DATA_ID              
    -------------------------------------------------------------------------
INITTAB
  Relative segment, address: CODE_AREA 00004858 - 00004863 (0xc bytes), align: 2
  Segment part 11. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?init?tab?DATA_I        00004858 
    -------------------------------------------------------------------------
CONFIG_C
  Segment part 12. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 00004854 - 00004854 (0x1 bytes), align: 0
  Segment part 2.             Intra module refs:   Segment part 5
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 00003DE4 - 00003E23 (0x40 bytes), align: 2
  Segment part 3.             Intra module refs:   InitConfig

    *************************************************************************

  FILE NAME : C:\arm\pp\Release_ELKA\Obj\config_data.r79
  PROGRAM MODULE, NAME : config_data

  SEGMENTS IN THE MODULE
  ======================
CONFIG_C
  Relative segment, address: CODE_AREA 00004988 - 000049B3 (0x2c bytes), align: 2
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr1                 00004988        LoadConfigData (conf_loader)
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 000049B4 - 00004A33 (0x80 bytes), align: 2
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           folder                  000049B4        Segment part 118 (main)
                                                   Segment part 64 (main)
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 00004A34 - 00004A5F (0x2c bytes), align: 2
  Segment part 4. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr2                 00004A34 
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 00004A60 - 00004A6F (0x10 bytes), align: 2
  Segment part 5. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           name                    00004A60        Segment part 159 (main)
                                                   Segment part 19 (main)
                                                   Segment part 81 (main)
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    *************************************************************************

  FILE NAME : C:\arm\pp\Release_ELKA\Obj\func.r79
  PROGRAM MODULE, NAME : func

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE_AREA 00000410 - 00000413 (0x4 bytes), align: 2
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           kill_data               00000410        ElfKiller (main)
                                                   gui_methods (main)
    -------------------------------------------------------------------------
ELFBEGIN
  Relative segment, address: CODE_AREA 00000000, align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ELF_BEGIN               00000000        ElfKiller (main)

    *************************************************************************

  FILE NAME : C:\arm\pp\Release_ELKA\Obj\main.r79
  PROGRAM MODULE, NAME : main

  SEGMENTS IN THE MODULE
  ======================
DATA_C
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 00003E24 - 00004543 (0x720 bytes), align: 2
  Segment part 3.             Intra module refs:   lgpInitLangPack
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 00004544 - 000045C7 (0x84 bytes), align: 2
  Segment part 4.             Intra module refs:   Segment part 117
                                                   Segment part 55
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           per_s                   000045C0 
    -------------------------------------------------------------------------
DATA_Z
  Relative segment, address: CODE_AREA 00004870 - 00004987 (0x118 bytes), align: 2
  Segment part 13.            Intra module refs:   Segment part 5
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           maincsm_name_body       00004870 
    -------------------------------------------------------------------------
DATA_Z
  Segment part 14. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAINCSM_ID              
    -------------------------------------------------------------------------
DATA_Z
  Segment part 15. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAINGUI_ID              
    -------------------------------------------------------------------------
DATA_I
  Relative segment, address: DATA_AREA 00000004 - 000002BB (0x2b8 bytes), align: 2
  Segment part 9.             Intra module refs:   Redraw
                                                   Segment part 124
                                                   Segment part 129
                                                   Segment part 135
                                                   Segment part 157
                                                   Segment part 46
                                                   Segment part 60
                                                   Segment part 86
                                                   Segment part 91
                                                   Segment part 94
                                                   green_but
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AI_line                 0000028C 
           PLAY_ID                 0000026C 
           Time                    00000204 
           ball                    00000168 
           clear                   00000238 
           color_frame             00000218 
           cpu                     000001B0 
           cur_x                   00000244 
           cur_y                   00000248 
           def_vol                 00000264 
           difficult               00000250 
           error_count             00000288 
           exiting                 00000284 
           folders                 00000294 
           game_new_cont           00000278 
           gdy                     00000260 
           images                  000001EC 
           img_count               00000274 
           isload                  00000290 
           lang                    00000004 
           langenru                0000027C 
           lives                   00000254 
           main_y                  0000024C 
           mode                    00000258 
           on_off_sound            00000268 
           pics                    000001D4 
           record                  000000F4 
           rndindex                0000023C 
           running                 00000240 
           saveload                00000270 
           speed_game              0000025C 
           status                  00000298 
           tmr                     0000029C 
           user                    0000018C 
           vibr                    000002AC 
           vibra                   00000280 
    -------------------------------------------------------------------------
CODE
  Segment part 17. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000414 - 00000543 (0x130 bytes), align: 2
  Segment part 18.            Intra module refs:   savedata
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           parserecord             00000414 
               stack 1 = 00000000 ( 00000024 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000544 - 00000547 (0x4 bytes), align: 2
  Segment part 19.            Intra module refs:   parserecord
    -------------------------------------------------------------------------
CODE
  Segment part 20. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000548 - 0000067F (0x138 bytes), align: 2
  Segment part 21.            Intra module refs:   enter_but
                                                   green_but
                                                   left_but
                                                   maincsm_onclose
                                                   right_but
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           savedata                00000548 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 22. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000680 - 000007CF (0x150 bytes), align: 2
  Segment part 23.            Intra module refs:   Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           loadNastr               00000680 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000007D0 - 000007D3 (0x4 bytes), align: 2
  Segment part 24.            Intra module refs:   loadNastr
                                                   savedata
    -------------------------------------------------------------------------
CODE
  Segment part 25. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000007D4 - 000008D7 (0x104 bytes), align: 2
  Segment part 26.            Intra module refs:   enter_but
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           saveSettings            000007D4 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 27. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000008D8 - 000009DF (0x108 bytes), align: 2
  Segment part 28.            Intra module refs:   enter_but
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           loadSettings            000008D8 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000009E0 - 000009E3 (0x4 bytes), align: 2
  Segment part 29.            Intra module refs:   loadSettings
                                                   saveSettings
    -------------------------------------------------------------------------
CODE
  Segment part 30. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000009E4 - 00000A27 (0x44 bytes), align: 2
  Segment part 31.            Intra module refs:   loading
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DRE                     000009E4 
               stack 1 = 00000000 ( 00000018 )
    -------------------------------------------------------------------------
CODE
  Segment part 32. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000A28 - 00000A9B (0x74 bytes), align: 2
  Segment part 33.            Intra module refs:   gameover
                                                   setpause
                                                   stop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           outtextxy               00000A28 
               stack 1 = 00000000 ( 00000020 )
    -------------------------------------------------------------------------
CODE
  Segment part 34. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000A9C - 00000B43 (0xa8 bytes), align: 2
  Segment part 35.            Intra module refs:   loading
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           png                     00000A9C 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 36. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000B44 - 00000B97 (0x54 bytes), align: 2
  Segment part 37.            Intra module refs:   enter_but
                                                   loadNastr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T_Load_IMG              00000B44 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 38. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000B98 - 00000BDB (0x44 bytes), align: 2
  Segment part 39.            Intra module refs:   OnRedraw
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DrwImg                  00000B98 
               stack 1 = 00000000 ( 00000038 )
    -------------------------------------------------------------------------
CODE
  Segment part 40. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000BDC - 00000C03 (0x28 bytes), align: 2
  Segment part 41.            Intra module refs:   maincsm_onclose
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           mfreeImages             00000BDC 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 42. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000C04 - 00000C27 (0x24 bytes), align: 2
  Segment part 43.            Intra module refs:   maincsm_onclose
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           mfreelang               00000C04 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 44. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000C28 - 00000C4F (0x28 bytes), align: 2
  Segment part 45.            Intra module refs:   Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           malloclang              00000C28 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000C50 - 00000C53 (0x4 bytes), align: 2
  Segment part 46.            Intra module refs:   malloclang
                                                   mfreelang
                                                   parserecord
    -------------------------------------------------------------------------
CODE
  Segment part 47. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000C54 - 00000C77 (0x24 bytes), align: 2
  Segment part 48.            Intra module refs:   delimghdr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           deleteIMGHDR            00000C54 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 49. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000C78 - 00000CB3 (0x3c bytes), align: 2
  Segment part 50.            Intra module refs:   maincsm_onclose
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           delimghdr               00000C78 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 51. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000CB4 - 00000CF7 (0x44 bytes), align: 2
  Segment part 52.            Intra module refs:   loading
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GetSize                 00000CB4 
    -------------------------------------------------------------------------
CODE
  Segment part 53. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000CF8 - 00000E27 (0x130 bytes), align: 2
  Segment part 54.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Init                    00000CF8 
               stack 1 = 00000000 ( 00000024 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000E28 - 00000E2B (0x4 bytes), align: 2
  Segment part 55.            Intra module refs:   Init
    -------------------------------------------------------------------------
CODE
  Segment part 56. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000E2C - 00000E4F (0x24 bytes), align: 2
  Segment part 57.            Intra module refs:   OnRedraw
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Redraw                  00000E2C 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 58. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000E50 - 00001003 (0x1b4 bytes), align: 2
  Segment part 59.            Intra module refs:   down_but
                                                   loadNastr
                                                   up_but
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           load_lang               00000E50 
               stack 1 = 00000000 ( 00000038 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00001004 - 00001007 (0x4 bytes), align: 2
  Segment part 60.            Intra module refs:   GetSize
                                                   Init
                                                   T_Load_IMG
                                                   delimghdr
                                                   loadNastr
                                                   loadSettings
                                                   load_lang
                                                   mfreeImages
                                                   png
                                                   saveSettings
                                                   savedata
    -------------------------------------------------------------------------
CODE
  Segment part 61. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00001008 - 0000142B (0x424 bytes), align: 2
  Segment part 62.            Intra module refs:   T_Load_IMG
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           loading                 00001008 
               stack 1 = 00000000 ( 00000070 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000142C - 0000142F (0x4 bytes), align: 2
  Segment part 63.            Intra module refs:   load_lang
                                                   loading
                                                   outtextxy
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00001430 - 00001433 (0x4 bytes), align: 2
  Segment part 64.            Intra module refs:   Init
                                                   loadNastr
                                                   loadSettings
                                                   loading
                                                   saveSettings
                                                   savedata
    -------------------------------------------------------------------------
CODE
  Segment part 65. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00001434 - 00001473 (0x40 bytes), align: 2
  Segment part 66.            Intra module refs:   OnRedraw
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           move_block              00001434 
               stack 1 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
CODE
  Segment part 67. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00001474 - 000014BB (0x48 bytes), align: 2
  Segment part 68.            Intra module refs:   move_block
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           shift_block             00001474 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 69. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000014BC - 00001503 (0x48 bytes), align: 2
  Segment part 70.            Intra module refs:   AI
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           shift_cpu               000014BC 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 71. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00001504 - 0000177F (0x27c bytes), align: 2
  Segment part 72.            Intra module refs:   OnRedraw
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           move_ball               00001504 
               stack 1 = 00000000 ( 00000028 )
    -------------------------------------------------------------------------
CODE
  Segment part 73. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00001780 - 00001883 (0x104 bytes), align: 2
  Segment part 74.            Intra module refs:   move_ball
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AI                      00001780 
               stack 1 = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
CODE
  Segment part 75. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00001884 - 000018E7 (0x64 bytes), align: 2
  Segment part 76.            Intra module refs:   move_ball
                                                   win
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           start_vibra             00001884 
               stack 1 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
CODE
  Segment part 77. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000018E8 - 000018F7 (0x10 bytes), align: 2
  Segment part 78.            Intra module refs:   start_vibra
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           stop_vibra              000018E8 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 79. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000018F8 - 00001B8F (0x298 bytes), align: 2
  Segment part 80.            Intra module refs:   move_ball
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           win                     000018F8 
               stack 1 = 00000000 ( 00000038 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00001B90 - 00001B93 (0x4 bytes), align: 2
  Segment part 81.            Intra module refs:   win
    -------------------------------------------------------------------------
CODE
  Segment part 82. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00001B94 - 00001BD7 (0x44 bytes), align: 2
  Segment part 83.            Intra module refs:   win
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gameover                00001B94 
               stack 1 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
CODE
  Segment part 84. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00001BD8 - 00001DBF (0x1e8 bytes), align: 2
  Segment part 85.            Intra module refs:   startcont
                                                   win
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           setgame                 00001BD8 
               stack 1 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00001DC0 - 00001DC3 (0x4 bytes), align: 2
  Segment part 86.            Intra module refs:   AI
                                                   move_ball
                                                   move_block
                                                   setgame
                                                   shift_block
                                                   shift_cpu
                                                   start_vibra
                                                   win
    -------------------------------------------------------------------------
CODE
  Segment part 87. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00001DC4 - 00001E3F (0x7c bytes), align: 2
  Segment part 88.            Intra module refs:   OnKey
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           setpause                00001DC4 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 89. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00001E40 - 00001EAB (0x6c bytes), align: 2
  Segment part 90.            Intra module refs:   win
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           stop                    00001E40 
               stack 1 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00001EAC - 00001EAF (0x4 bytes), align: 2
  Segment part 91.            Intra module refs:   gameover
                                                   loading
                                                   setpause
                                                   stop
    -------------------------------------------------------------------------
CODE
  Segment part 92. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00001EB0 - 0000250F (0x660 bytes), align: 2
  Segment part 93.            Intra module refs:   enter_but
                                                   loadNastr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           lgpInitLangPack         00001EB0 
               stack 1 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00002510 - 00002513 (0x4 bytes), align: 2
  Segment part 94.            Intra module refs:   lgpInitLangPack
    -------------------------------------------------------------------------
CODE
  Segment part 95. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00002514 - 000026D7 (0x1c4 bytes), align: 2
  Segment part 96.            Intra module refs:   OnKey
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           left_but                00002514 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 97. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000026D8 - 000028AF (0x1d8 bytes), align: 2
  Segment part 98.            Intra module refs:   OnKey
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           right_but               000026D8 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 99. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000028B0 - 000029CB (0x11c bytes), align: 2
  Segment part 100.           Intra module refs:   OnKey
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           up_but                  000028B0 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 101. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000029CC - 00002ADF (0x114 bytes), align: 2
  Segment part 102.           Intra module refs:   OnKey
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           down_but                000029CC 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 103. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00002AE0 - 00002BE3 (0x104 bytes), align: 2
  Segment part 104.           Intra module refs:   OnKey
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           enter_but               00002AE0 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 105. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00002BE4 - 00002C3B (0x58 bytes), align: 2
  Segment part 106.           Intra module refs:   OnKey
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           left_soft               00002BE4 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 107. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00002C3C - 00002C83 (0x48 bytes), align: 2
  Segment part 108.           Intra module refs:   OnKey
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           right_soft              00002C3C 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 109. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00002C84 - 00002CAB (0x28 bytes), align: 2
  Segment part 110.           Intra module refs:   OnKey
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           green_but               00002C84 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 111. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00002CAC - 00002CCF (0x24 bytes), align: 2
  Segment part 112.           Intra module refs:   OnKey
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           resh_but                00002CAC 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 113. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00002CD0 - 00002D13 (0x44 bytes), align: 2
  Segment part 114.           Intra module refs:   maincsm_onclose
                                                   onUnfocus
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           deltimers               00002CD0 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 115. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00002D14 - 00002E0B (0xf8 bytes), align: 2
  Segment part 116.           Intra module refs:   move_ball
                                                   startcont
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Play                    00002D14 
               stack 1 = 00000000 ( 00000048 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00002E0C - 00002E0F (0x4 bytes), align: 2
  Segment part 117.           Intra module refs:   Play
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00002E10 - 00002E13 (0x4 bytes), align: 2
  Segment part 118.           Intra module refs:   Play
    -------------------------------------------------------------------------
CODE
  Segment part 119. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00002E14 - 00002E5B (0x48 bytes), align: 2
  Segment part 120.           Intra module refs:   resh_but
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           openconf                00002E14 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00002E5C - 00002E5F (0x4 bytes), align: 2
  Segment part 121.           Intra module refs:   openconf
    -------------------------------------------------------------------------
CODE
  Segment part 122. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00002E60 - 00002EBB (0x5c bytes), align: 2
  Segment part 123.           Intra module refs:   enter_but
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           startcont               00002E60 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00002EBC - 00002EBF (0x4 bytes), align: 2
  Segment part 124.           Intra module refs:   Play
                                                   deltimers
                                                   down_but
                                                   enter_but
                                                   left_but
                                                   left_soft
                                                   resh_but
                                                   right_but
                                                   right_soft
                                                   startcont
                                                   up_but
    -------------------------------------------------------------------------
CODE
  Segment part 125. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 126. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           exit                    
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 127. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00002EC0 - 000039EB (0xb2c bytes), align: 2
  Segment part 128.           Intra module refs:   gui_methods
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000039EC - 000039EF (0x4 bytes), align: 2
  Segment part 129.           Intra module refs:   OnRedraw
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000039F0 - 000039F3 (0x4 bytes), align: 2
  Segment part 130.           Intra module refs:   OnRedraw
                                                   openconf
    -------------------------------------------------------------------------
CODE
  Segment part 131. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000039F4 - 00003A2B (0x38 bytes), align: 2
  Segment part 132.           Intra module refs:   gui_methods
    -------------------------------------------------------------------------
CODE
  Segment part 133. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003A2C - 00003A5B (0x30 bytes), align: 2
  Segment part 134.           Intra module refs:   gui_methods
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003A5C - 00003A5F (0x4 bytes), align: 2
  Segment part 135.           Intra module refs:   onClose
                                                   onCreate
    -------------------------------------------------------------------------
CODE
  Segment part 136. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003A60 - 00003A7F (0x20 bytes), align: 2
  Segment part 137.           Intra module refs:   gui_methods
    -------------------------------------------------------------------------
CODE
  Segment part 138. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003A80 - 00003AB3 (0x34 bytes), align: 2
  Segment part 139.           Intra module refs:   gui_methods
    -------------------------------------------------------------------------
CODE
  Segment part 140. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003AB4 - 00003BDB (0x128 bytes), align: 2
  Segment part 141.           Intra module refs:   gui_methods
    -------------------------------------------------------------------------
CODE
  Segment part 142. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003BDC - 00003BE3 (0x8 bytes), align: 2
  Segment part 143.           Intra module refs:   gui_methods
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           method8                 00003BDC 
    -------------------------------------------------------------------------
CODE
  Segment part 144. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003BE4 - 00003BEB (0x8 bytes), align: 2
  Segment part 145.           Intra module refs:   gui_methods
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           method9                 00003BE4 
    -------------------------------------------------------------------------
CODE
  Segment part 146. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003BEC - 00003C47 (0x5c bytes), align: 2
  Segment part 147.           Intra module refs:   Segment part 5
    -------------------------------------------------------------------------
CODE
  Segment part 148. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003C48 - 00003C63 (0x1c bytes), align: 2
  Segment part 149.           Intra module refs:   maincsm_onclose
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ElfKiller               00003C48 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 150. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003C64 - 00003CAF (0x4c bytes), align: 2
  Segment part 151.           Intra module refs:   Segment part 5
    -------------------------------------------------------------------------
CODE
  Segment part 152. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003CB0 - 00003D4F (0xa0 bytes), align: 2
  Segment part 153.           Intra module refs:   Segment part 5
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003D50 - 00003D53 (0x4 bytes), align: 2
  Segment part 154.           Intra module refs:   maincsm_onmessage
    -------------------------------------------------------------------------
CODE
  Segment part 155. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 000045C8 - 000046C3 (0xfc bytes), align: 2
  Segment part 5.             Intra module refs:   Segment part 130
                                                   Segment part 158
                                                   Segment part 63
                                                   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           bgcol                   00004684 
           bgcol_lang_cur          0000467C 
           linecol2                00004680 
           perc_t                  000045C8 
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 000046C4 - 000046CF (0xc bytes), align: 2
  Segment part 6.             Intra module refs:   Segment part 24
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 000046D0 - 000046E3 (0x14 bytes), align: 2
  Segment part 7.             Intra module refs:   Segment part 29
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 000046E4 - 0000471B (0x38 bytes), align: 2
  Segment part 8.             Intra module refs:   win
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000471C - 0000481B (0x100 bytes), align: 2
  Segment part 11.            Intra module refs:   setgame
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           rndtable                0000471C 
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000481C - 0000481F (0x4 bytes), align: 2
  Segment part 12.            Intra module refs:   Segment part 5
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           minus11                 0000481C 
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 00004820 - 00004853 (0x34 bytes), align: 2
  Segment part 16.            Intra module refs:   maincsm_oncreate
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gui_methods             00004820 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003D54 - 00003DA3 (0x50 bytes), align: 2
  Segment part 156.           Intra module refs:   main
                                                   onUnfocus
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UpdateCSMname           00003D54 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003DA4 - 00003DA7 (0x4 bytes), align: 2
  Segment part 157.           Intra module refs:   OnKey
                                                   UpdateCSMname
                                                   maincsm_onclose
                                                   onUnfocus
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003DA8 - 00003DAB (0x4 bytes), align: 2
  Segment part 158.           Intra module refs:   UpdateCSMname
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003DAC - 00003DAF (0x4 bytes), align: 2
  Segment part 159.           Intra module refs:   UpdateCSMname
    -------------------------------------------------------------------------
CODE
  Segment part 160. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003DB0 - 00003DE3 (0x34 bytes), align: 2
  Segment part 161.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           main                    00003DB0        Absolute parts (?ABS_ENTRY_MOD)
               stack 1 = 00000000 ( 00000030 )
    -------------------------------------------------------------------------
CODE
  Segment part 162. NOT NEEDED.Intra module refs   ElfKiller
    -------------------------------------------------------------------------
CODE
  Segment part 163. NOT NEEDED.Intra module refs   main
                                                   maincsm_onmessage
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_ID
  Relative segment, address: CODE_AREA 00000004 - 000002BB (0x2b8 bytes), align: 2
  Segment part 10.            Intra module refs:   Segment part 9
    -------------------------------------------------------------------------
INITTAB
  Relative segment, address: CODE_AREA 00004864 - 0000486F (0xc bytes), align: 2
  Segment part 164. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?init?tab?DATA_Z        00004864 
    -------------------------------------------------------------------------
DATA_ID
  Segment part 165. TENTATIVE. Used definition from conf_loader
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?*?DATA_ID              
    -------------------------------------------------------------------------
INITTAB
  Segment part 166. TENTATIVE. Used definition from conf_loader
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?init?tab?DATA_I        




                ****************************************
                *                                      *
                *            MODULE SUMMARY            *
                *                                      *
                ****************************************

Module             CODE   DATA
------             ----   ----
                  (Rel)  (Rel)
conf_loader         409      4
  + shared           12
config_data         232
func                  4
main             18 396    696
N/A (alignment)
------           ------    ---
Total:           19 053    700


                ****************************************
                *                                      *
                *              CALL GRAPH              *
                *                                      *
                ****************************************

  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  T_Load_IMG
      | Stack used (prev) :  00000000
      | + function block  :  0000000C
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000000C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  Redraw
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  stop_vibra
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  OnRedraw
      | Stack used (prev) :  00000000
      | + function block  :  0000004C
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000004C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  onCreate
      | Stack used (prev) :  00000000
      | + function block  :  00000008
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000008


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  onClose
      | Stack used (prev) :  00000000
      | + function block  :  00000008
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000008


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  onFocus
      | Stack used (prev) :  00000000
      | + function block  :  00000008
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000008


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  onUnfocus
      | Stack used (prev) :  00000000
      | + function block  :  00000008
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000008


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  OnKey
      | Stack used (prev) :  00000000
      | + function block  :  00000008
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000008


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  method8
      | Stack used (prev) :  00000000
      | + function block  :  00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000000


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  method9
      | Stack used (prev) :  00000000
      | + function block  :  00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000000


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  maincsm_oncreate
      | Stack used (prev) :  00000000
      | + function block  :  0000000C
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000000C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  ElfKiller
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  maincsm_onclose
      | Stack used (prev) :  00000000
      | + function block  :  00000008
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000008


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  maincsm_onmessage
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000004C
  01  LoadConfigData
      | Stack used (prev) :  0000004C
      | + function block  :  00000030
  <-Sub-tree of type: Function tree
    | Stack used          :  0000007C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000007C
  01  InitConfig
      | Stack used (prev) :  0000007C
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00000084


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000084
  01  parserecord
      | Stack used (prev) :  00000084
      | + function block  :  00000024
  <-Sub-tree of type: Function tree
    | Stack used          :  000000A8


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000000A8
  01  savedata
      | Stack used (prev) :  000000A8
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  000000B4


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000000B4
  01  loadNastr
      | Stack used (prev) :  000000B4
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  000000C0


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000000C0
  01  saveSettings
      | Stack used (prev) :  000000C0
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  000000CC


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000000CC
  01  loadSettings
      | Stack used (prev) :  000000CC
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  000000D8


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000000D8
  01  DRE
      | Stack used (prev) :  000000D8
      | + function block  :  00000018
  <-Sub-tree of type: Function tree
    | Stack used          :  000000F0


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000000F0
  01  outtextxy
      | Stack used (prev) :  000000F0
      | + function block  :  00000020
  <-Sub-tree of type: Function tree
    | Stack used          :  00000110


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000110
  01  png
      | Stack used (prev) :  00000110
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00000118


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000118
  01  DrwImg
      | Stack used (prev) :  00000118
      | + function block  :  00000038
  <-Sub-tree of type: Function tree
    | Stack used          :  00000150


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000150
  01  mfreeImages
      | Stack used (prev) :  00000150
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00000158


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000158
  01  mfreelang
      | Stack used (prev) :  00000158
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00000160


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000160
  01  malloclang
      | Stack used (prev) :  00000160
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00000168


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000168
  01  deleteIMGHDR
      | Stack used (prev) :  00000168
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00000170


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000170
  01  delimghdr
      | Stack used (prev) :  00000170
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  0000017C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000017C
  01  GetSize
      | Stack used (prev) :  0000017C
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000017C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000017C
  01  Init
      | Stack used (prev) :  0000017C
      | + function block  :  00000024
  <-Sub-tree of type: Function tree
    | Stack used          :  000001A0


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000001A0
  01  load_lang
      | Stack used (prev) :  000001A0
      | + function block  :  00000038
  <-Sub-tree of type: Function tree
    | Stack used          :  000001D8


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000001D8
  01  loading
      | Stack used (prev) :  000001D8
      | + function block  :  00000070
  <-Sub-tree of type: Function tree
    | Stack used          :  00000248


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000248
  01  move_block
      | Stack used (prev) :  00000248
      | + function block  :  00000010
  <-Sub-tree of type: Function tree
    | Stack used          :  00000258


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000258
  01  shift_block
      | Stack used (prev) :  00000258
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  0000025C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000025C
  01  shift_cpu
      | Stack used (prev) :  0000025C
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00000260


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000260
  01  move_ball
      | Stack used (prev) :  00000260
      | + function block  :  00000028
  <-Sub-tree of type: Function tree
    | Stack used          :  00000288


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000288
  01  AI
      | Stack used (prev) :  00000288
      | + function block  :  00000014
  <-Sub-tree of type: Function tree
    | Stack used          :  0000029C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000029C
  01  start_vibra
      | Stack used (prev) :  0000029C
      | + function block  :  00000010
  <-Sub-tree of type: Function tree
    | Stack used          :  000002AC


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000002AC
  01  win
      | Stack used (prev) :  000002AC
      | + function block  :  00000038
  <-Sub-tree of type: Function tree
    | Stack used          :  000002E4


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000002E4
  01  gameover
      | Stack used (prev) :  000002E4
      | + function block  :  00000010
  <-Sub-tree of type: Function tree
    | Stack used          :  000002F4


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000002F4
  01  setgame
      | Stack used (prev) :  000002F4
      | + function block  :  00000010
  <-Sub-tree of type: Function tree
    | Stack used          :  00000304


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000304
  01  setpause
      | Stack used (prev) :  00000304
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00000310


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000310
  01  stop
      | Stack used (prev) :  00000310
      | + function block  :  00000010
  <-Sub-tree of type: Function tree
    | Stack used          :  00000320


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000320
  01  lgpInitLangPack
      | Stack used (prev) :  00000320
      | + function block  :  00000010
  <-Sub-tree of type: Function tree
    | Stack used          :  00000330


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000330
  01  left_but
      | Stack used (prev) :  00000330
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  0000033C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000033C
  01  right_but
      | Stack used (prev) :  0000033C
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00000348


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000348
  01  up_but
      | Stack used (prev) :  00000348
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  0000034C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000034C
  01  down_but
      | Stack used (prev) :  0000034C
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00000350


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000350
  01  enter_but
      | Stack used (prev) :  00000350
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  0000035C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000035C
  01  left_soft
      | Stack used (prev) :  0000035C
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00000368


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000368
  01  right_soft
      | Stack used (prev) :  00000368
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  0000036C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000036C
  01  green_but
      | Stack used (prev) :  0000036C
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00000370


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000370
  01  resh_but
      | Stack used (prev) :  00000370
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00000378


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000378
  01  deltimers
      | Stack used (prev) :  00000378
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00000384


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000384
  01  Play
      | Stack used (prev) :  00000384
      | + function block  :  00000048
  <-Sub-tree of type: Function tree
    | Stack used          :  000003CC


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000003CC
  01  openconf
      | Stack used (prev) :  000003CC
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  000003D8


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000003D8
  01  startcont
      | Stack used (prev) :  000003D8
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  000003E4


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000003E4
  01  UpdateCSMname
      | Stack used (prev) :  000003E4
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  000003EC


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000003EC
  01  main
      | Stack used (prev) :  000003EC
      | + function block  :  00000030
  <-Sub-tree of type: Function tree
    | Stack used          :  0000041C




                ****************************************
                *                                      *
                *      SEGMENTS IN ADDRESS ORDER       *
                *                                      *
                ****************************************


SEGMENT              SPACE    START ADDRESS   END ADDRESS     SIZE  TYPE  ALIGN
=======              =====    =============   ===========     ====  ====  =====
ELFBEGIN             CODE_AREA           00000000                     rel    0
DATA_ID              CODE_AREA      00000000 - 000002BB         2BC   rel    2
START                CODE_AREA           000002BC                     dse    0
CODE                 CODE_AREA      000002BC - 00003DE3        3B28   rel    2
DATA_C               CODE_AREA      00003DE4 - 00004854         A71   rel    2
INITTAB              CODE_AREA      00004858 - 0000486F          18   rel    2
DATA_Z               CODE_AREA      00004870 - 00004987         118   rel    2
DATA_N               CODE_AREA           00004988                     dse    0
CONFIG_C             CODE_AREA      00004988 - 00004A6F          E8   rel    2
DATA_I               DATA_AREA      00000000 - 000002BB         2BC   rel    2

                ****************************************
                *                                      *
                *        END OF CROSS REFERENCE        *
                *                                      *
                ****************************************

 19 053 bytes of CODE memory
    700 bytes of DATA memory

Errors: none
Warnings: none

