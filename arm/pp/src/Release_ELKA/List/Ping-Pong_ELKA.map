################################################################################
#                                                                              #
#      IAR Universal Linker V4.60I/386                                         #
#                                                                              #
#           Link time     =  27/Dec/2010  14:10:07                             #
#           Target CPU    =  ARM                                               #
#           List file     =  C:\arm\pp\src\Release_ELKA\List\Ping-Pong_ELKA.ma #
#                            p                                                 #
#           Output file 1 =  C:\arm\pp\src\Release_ALL\Ping-Pong_ELKA.elf      #
#                            Format: elf, variant: -ynpra                      #
#           Command line  =  C:\arm\pp\src\Release_ELKA\Obj\conf_loader.r79    #
#                            C:\arm\pp\src\Release_ELKA\Obj\config_data.r79    #
#                            C:\arm\pp\src\Release_ELKA\Obj\func.r79           #
#                            C:\arm\pp\src\Release_ELKA\Obj\main.r79 -o        #
#                            C:\arm\pp\src\Release_ALL\Ping-Pong_ELKA.elf      #
#                            -Felf -l                                          #
#                            C:\arm\pp\src\Release_ELKA\List\Ping-Pong_ELKA.ma #
#                            p                                                 #
#                            -xmsnio -f C:\arm\pp\test.xcl (-carm              #
#                            -V(CODE)CODE_AREA,12 -V(DATA)DATA_AREA,12         #
#                            -Z(CODE_AREA)ELFBEGIN,DATA_ID,START,CODE,DATA_C,I #
#                            NITTAB,DATA_Z,DATA_N,CONFIG_C=0-FFFFFFFF          #
#                            -Z(DATA_AREA)DATA_I=0-FFFFFFFF) -n -ynpra -s      #
#                            main                                              #
#                                                                              #
#                        Copyright 1987-2007 IAR Systems. All rights reserved. #
################################################################################





                ****************************************
                *                                      *
                *           CROSS REFERENCE            *
                *                                      *
                ****************************************

       Program entry at : CODE_AREA 00003DC4  Relocatable, from module : main




                ****************************************
                *                                      *
                *            RUNTIME MODEL             *
                *                                      *
                ****************************************

  StackAlign4  = USED
  __cpu_mode   = __pcs__interwork
  __data_model = absolute
  __endian     = little
  __rt_version = 6



                ****************************************
                *                                      *
                *              MODULE MAP              *
                *                                      *
                ****************************************


  DEFINED ABSOLUTE ENTRIES
    *************************************************************************

  DEFINED ABSOLUTE ENTRIES
    *************************************************************************

  FILE NAME : C:\arm\pp\src\Release_ELKA\Obj\conf_loader.r79
  PROGRAM MODULE, NAME : conf_loader

  SEGMENTS IN THE MODULE
  ======================
DATA_I
  Relative segment, address: DATA_AREA 00000000 - 00000003 (0x4 bytes), align: 2
  Segment part 4.             Intra module refs:   LoadConfigData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           successed_config_filename
                                   00000000        Segment part 157 (main)
    -------------------------------------------------------------------------
CODE
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000002C0 - 000003EB (0x12c bytes), align: 2
  Segment part 7.             Intra module refs:   InitConfig
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LoadConfigData          000002C0 
               stack 1 = 00000000 ( 00000030 )
    -------------------------------------------------------------------------
CODE
  Segment part 8. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000003EC - 00000413 (0x28 bytes), align: 2
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           InitConfig              000003EC        main (main)
                                                   maincsm_onmessage (main)
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_ID
  Relative segment, address: CODE_AREA 00000000 - 00000003 (0x4 bytes), align: 2
  Segment part 5.             Intra module refs:   successed_config_filename
    -------------------------------------------------------------------------
DATA_ID
  Segment part 10. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?*?DATA_ID              
    -------------------------------------------------------------------------
INITTAB
  Relative segment, address: CODE_AREA 0000486C - 00004877 (0xc bytes), align: 2
  Segment part 11. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?init?tab?DATA_I        0000486C 
    -------------------------------------------------------------------------
CONFIG_C
  Segment part 12. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 00004868 - 00004868 (0x1 bytes), align: 0
  Segment part 2.             Intra module refs:   Segment part 5
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 00003DF8 - 00003E37 (0x40 bytes), align: 2
  Segment part 3.             Intra module refs:   InitConfig

    *************************************************************************

  FILE NAME : C:\arm\pp\src\Release_ELKA\Obj\config_data.r79
  PROGRAM MODULE, NAME : config_data

  SEGMENTS IN THE MODULE
  ======================
CONFIG_C
  Relative segment, address: CODE_AREA 0000499C - 000049C7 (0x2c bytes), align: 2
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr1                 0000499C        LoadConfigData (conf_loader)
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 000049C8 - 00004A47 (0x80 bytes), align: 2
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           folder                  000049C8        Segment part 125 (main)
                                                   Segment part 60 (main)
                                                   Segment part 70 (main)
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 00004A48 - 00004A73 (0x2c bytes), align: 2
  Segment part 4. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr2                 00004A48 
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 00004A74 - 00004A83 (0x10 bytes), align: 2
  Segment part 5. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           name                    00004A74        Segment part 162 (main)
                                                   Segment part 20 (main)
                                                   Segment part 88 (main)
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    *************************************************************************

  FILE NAME : C:\arm\pp\src\Release_ELKA\Obj\func.r79
  PROGRAM MODULE, NAME : func

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE_AREA 00000414 - 00000417 (0x4 bytes), align: 2
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           kill_data               00000414        ElfKiller (main)
                                                   gui_methods (main)
    -------------------------------------------------------------------------
ELFBEGIN
  Relative segment, address: CODE_AREA 00000000, align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ELF_BEGIN               00000000        ElfKiller (main)

    *************************************************************************

  FILE NAME : C:\arm\pp\src\Release_ELKA\Obj\main.r79
  PROGRAM MODULE, NAME : main

  SEGMENTS IN THE MODULE
  ======================
DATA_C
  Relative segment, address: CODE_AREA 00003E38 - 00004557 (0x720 bytes), align: 2
  Segment part 2.             Intra module refs:   lgpInitLangPack
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 00004558 - 000045DB (0x84 bytes), align: 2
  Segment part 3.             Intra module refs:   Segment part 124
                                                   Segment part 59
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           per_s                   000045D4 
    -------------------------------------------------------------------------
DATA_Z
  Relative segment, address: CODE_AREA 00004884 - 0000499B (0x118 bytes), align: 2
  Segment part 14.            Intra module refs:   Segment part 4
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           maincsm_name_body       00004884 
    -------------------------------------------------------------------------
DATA_Z
  Segment part 15. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAINCSM_ID              
    -------------------------------------------------------------------------
DATA_Z
  Segment part 16. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAINGUI_ID              
    -------------------------------------------------------------------------
DATA_I
  Relative segment, address: DATA_AREA 00000004 - 000002BF (0x2bc bytes), align: 2
  Segment part 10.            Intra module refs:   Segment part 100
                                                   Segment part 109
                                                   Segment part 138
                                                   Segment part 160
                                                   Segment part 49
                                                   Segment part 58
                                                   Segment part 63
                                                   Segment part 87
                                                   Segment part 97
                                                   green_but
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AI_line                 0000028C 
           PLAY_ID                 0000026C 
           Time                    00000204 
           ball                    00000168 
           clear                   00000238 
           color_frame             00000218 
           cpu                     000001B0 
           cur_x                   00000244 
           cur_y                   00000248 
           def_vol                 00000264 
           difficult               00000250 
           error_count             00000288 
           exiting                 00000284 
           folders                 00000294 
           game_new_cont           00000278 
           gdy                     00000260 
           idle                    00000298 
           images                  000001EC 
           img_count               00000274 
           isload                  00000290 
           lang                    00000004 
           langenru                0000027C 
           lives                   00000254 
           main_y                  0000024C 
           mode                    00000258 
           on_off_sound            00000268 
           pics                    000001D4 
           record                  000000F4 
           rndindex                0000023C 
           running                 00000240 
           saveload                00000270 
           speed_game              0000025C 
           status                  0000029C 
           tmr                     000002A0 
           user                    0000018C 
           vibr                    000002B0 
           vibra                   00000280 
    -------------------------------------------------------------------------
CODE
  Segment part 18. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000418 - 00000547 (0x130 bytes), align: 2
  Segment part 19.            Intra module refs:   savedata
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           parserecord             00000418 
               stack 1 = 00000000 ( 00000024 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000548 - 0000054B (0x4 bytes), align: 2
  Segment part 20.            Intra module refs:   parserecord
    -------------------------------------------------------------------------
CODE
  Segment part 21. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000054C - 00000683 (0x138 bytes), align: 2
  Segment part 22.            Intra module refs:   enter_but
                                                   green_but
                                                   left_but
                                                   maincsm_onclose
                                                   right_but
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           savedata                0000054C 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 23. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000684 - 000007D3 (0x150 bytes), align: 2
  Segment part 24.            Intra module refs:   Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           loadNastr               00000684 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000007D4 - 000007D7 (0x4 bytes), align: 2
  Segment part 25.            Intra module refs:   loadNastr
                                                   savedata
    -------------------------------------------------------------------------
CODE
  Segment part 26. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000007D8 - 000008DB (0x104 bytes), align: 2
  Segment part 27.            Intra module refs:   enter_but
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           saveSettings            000007D8 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 28. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000008DC - 000009E3 (0x108 bytes), align: 2
  Segment part 29.            Intra module refs:   enter_but
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           loadSettings            000008DC 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000009E4 - 000009E7 (0x4 bytes), align: 2
  Segment part 30.            Intra module refs:   loadSettings
                                                   saveSettings
    -------------------------------------------------------------------------
CODE
  Segment part 31. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000009E8 - 00000A2B (0x44 bytes), align: 2
  Segment part 32.            Intra module refs:   loading
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DRE                     000009E8 
               stack 1 = 00000000 ( 00000018 )
    -------------------------------------------------------------------------
CODE
  Segment part 33. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000A2C - 00000A9F (0x74 bytes), align: 2
  Segment part 34.            Intra module refs:   gameover
                                                   setpause
                                                   stop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           outtextxy               00000A2C 
               stack 1 = 00000000 ( 00000020 )
    -------------------------------------------------------------------------
CODE
  Segment part 35. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000AA0 - 00000B47 (0xa8 bytes), align: 2
  Segment part 36.            Intra module refs:   loading
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           png                     00000AA0 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 37. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000B48 - 00000B9B (0x54 bytes), align: 2
  Segment part 38.            Intra module refs:   enter_but
                                                   loadNastr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           T_Load_IMG              00000B48 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 39. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000B9C - 00000BDF (0x44 bytes), align: 2
  Segment part 40.            Intra module refs:   Game
                                                   RedrawScreen
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DrwImg                  00000B9C 
               stack 1 = 00000000 ( 00000038 )
    -------------------------------------------------------------------------
CODE
  Segment part 41. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000BE0 - 00000D57 (0x178 bytes), align: 2
  Segment part 42.            Intra module refs:   RedrawScreen
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Game                    00000BE0 
               stack 1 = 00000000 ( 0000001C )
    -------------------------------------------------------------------------
CODE
  Segment part 43. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000D58 - 00000D7F (0x28 bytes), align: 2
  Segment part 44.            Intra module refs:   maincsm_onclose
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           mfreeImages             00000D58 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 45. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000D80 - 00000DA3 (0x24 bytes), align: 2
  Segment part 46.            Intra module refs:   maincsm_onclose
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           mfreelang               00000D80 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 47. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000DA4 - 00000DCB (0x28 bytes), align: 2
  Segment part 48.            Intra module refs:   Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           malloclang              00000DA4 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000DCC - 00000DCF (0x4 bytes), align: 2
  Segment part 49.            Intra module refs:   malloclang
                                                   mfreelang
                                                   parserecord
    -------------------------------------------------------------------------
CODE
  Segment part 50. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000DD0 - 00000DF3 (0x24 bytes), align: 2
  Segment part 51.            Intra module refs:   delimghdr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           deleteIMGHDR            00000DD0 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 52. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000DF4 - 00000E2F (0x3c bytes), align: 2
  Segment part 53.            Intra module refs:   maincsm_onclose
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           delimghdr               00000DF4 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 54. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000E30 - 00000E73 (0x44 bytes), align: 2
  Segment part 55.            Intra module refs:   loading
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GetSize                 00000E30 
    -------------------------------------------------------------------------
CODE
  Segment part 56. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000E74 - 00000FA3 (0x130 bytes), align: 2
  Segment part 57.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Init                    00000E74 
               stack 1 = 00000000 ( 00000024 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000FA4 - 00000FA7 (0x4 bytes), align: 2
  Segment part 58.            Intra module refs:   Game
                                                   GetSize
                                                   Init
                                                   T_Load_IMG
                                                   delimghdr
                                                   loadNastr
                                                   loadSettings
                                                   mfreeImages
                                                   png
                                                   saveSettings
                                                   savedata
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000FA8 - 00000FAB (0x4 bytes), align: 2
  Segment part 59.            Intra module refs:   Init
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000FAC - 00000FAF (0x4 bytes), align: 2
  Segment part 60.            Intra module refs:   Init
                                                   loadNastr
                                                   loadSettings
                                                   saveSettings
                                                   savedata
    -------------------------------------------------------------------------
CODE
  Segment part 61. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000FB0 - 0000197B (0x9cc bytes), align: 2
  Segment part 62.            Intra module refs:   down_but
                                                   enter_but
                                                   green_but
                                                   left_but
                                                   left_soft
                                                   loadSettings
                                                   loading
                                                   maincsm_onmessage
                                                   onFocus
                                                   right_but
                                                   right_soft
                                                   saveSettings
                                                   setpause
                                                   stop
                                                   up_but
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RedrawScreen            00000FB0 
               stack 1 = 00000000 ( 0000004C )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000197C - 0000197F (0x4 bytes), align: 2
  Segment part 63.            Intra module refs:   RedrawScreen
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00001980 - 00001983 (0x4 bytes), align: 2
  Segment part 64.            Intra module refs:   RedrawScreen
                                                   outtextxy
    -------------------------------------------------------------------------
CODE
  Segment part 65. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00001984 - 00001B37 (0x1b4 bytes), align: 2
  Segment part 66.            Intra module refs:   down_but
                                                   loadNastr
                                                   up_but
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           load_lang               00001984 
               stack 1 = 00000000 ( 00000038 )
    -------------------------------------------------------------------------
CODE
  Segment part 67. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00001B38 - 00001F5B (0x424 bytes), align: 2
  Segment part 68.            Intra module refs:   T_Load_IMG
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           loading                 00001B38 
               stack 1 = 00000000 ( 00000070 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00001F5C - 00001F5F (0x4 bytes), align: 2
  Segment part 69.            Intra module refs:   load_lang
                                                   loading
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00001F60 - 00001F63 (0x4 bytes), align: 2
  Segment part 70.            Intra module refs:   loading
    -------------------------------------------------------------------------
CODE
  Segment part 71. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00001F64 - 00001FA3 (0x40 bytes), align: 2
  Segment part 72.            Intra module refs:   Game
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           move_block              00001F64 
               stack 1 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
CODE
  Segment part 73. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00001FA4 - 00001FEB (0x48 bytes), align: 2
  Segment part 74.            Intra module refs:   move_block
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           shift_block             00001FA4 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 75. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00001FEC - 00002033 (0x48 bytes), align: 2
  Segment part 76.            Intra module refs:   AI
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           shift_cpu               00001FEC 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 77. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00002034 - 000022AF (0x27c bytes), align: 2
  Segment part 78.            Intra module refs:   Game
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           move_ball               00002034 
               stack 1 = 00000000 ( 00000028 )
    -------------------------------------------------------------------------
CODE
  Segment part 79. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000022B0 - 000023B3 (0x104 bytes), align: 2
  Segment part 80.            Intra module refs:   move_ball
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AI                      000022B0 
               stack 1 = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
CODE
  Segment part 81. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000023B4 - 00002417 (0x64 bytes), align: 2
  Segment part 82.            Intra module refs:   move_ball
                                                   win
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           start_vibra             000023B4 
               stack 1 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
CODE
  Segment part 83. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00002418 - 00002427 (0x10 bytes), align: 2
  Segment part 84.            Intra module refs:   start_vibra
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           stop_vibra              00002418 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 85. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00002428 - 000026BF (0x298 bytes), align: 2
  Segment part 86.            Intra module refs:   move_ball
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           win                     00002428 
               stack 1 = 00000000 ( 00000038 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000026C0 - 000026C3 (0x4 bytes), align: 2
  Segment part 87.            Intra module refs:   AI
                                                   load_lang
                                                   move_ball
                                                   move_block
                                                   shift_block
                                                   shift_cpu
                                                   start_vibra
                                                   win
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000026C4 - 000026C7 (0x4 bytes), align: 2
  Segment part 88.            Intra module refs:   win
    -------------------------------------------------------------------------
CODE
  Segment part 89. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000026C8 - 0000270B (0x44 bytes), align: 2
  Segment part 90.            Intra module refs:   win
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gameover                000026C8 
               stack 1 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
CODE
  Segment part 91. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000270C - 000028F3 (0x1e8 bytes), align: 2
  Segment part 92.            Intra module refs:   startcont
                                                   win
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           setgame                 0000270C 
               stack 1 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
CODE
  Segment part 93. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000028F4 - 0000296F (0x7c bytes), align: 2
  Segment part 94.            Intra module refs:   OnKey
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           setpause                000028F4 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 95. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00002970 - 000029DB (0x6c bytes), align: 2
  Segment part 96.            Intra module refs:   win
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           stop                    00002970 
               stack 1 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000029DC - 000029DF (0x4 bytes), align: 2
  Segment part 97.            Intra module refs:   gameover
                                                   loading
                                                   setpause
                                                   stop
    -------------------------------------------------------------------------
CODE
  Segment part 98. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000029E0 - 00003033 (0x654 bytes), align: 2
  Segment part 99.            Intra module refs:   enter_but
                                                   loadNastr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           lgpInitLangPack         000029E0 
               stack 1 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003034 - 00003037 (0x4 bytes), align: 2
  Segment part 100.           Intra module refs:   lgpInitLangPack
    -------------------------------------------------------------------------
CODE
  Segment part 101. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003038 - 000031FB (0x1c4 bytes), align: 2
  Segment part 102.           Intra module refs:   OnKey
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           left_but                00003038 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 103. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000031FC - 000033D7 (0x1dc bytes), align: 2
  Segment part 104.           Intra module refs:   OnKey
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           right_but               000031FC 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 105. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000033D8 - 000034F3 (0x11c bytes), align: 2
  Segment part 106.           Intra module refs:   OnKey
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           up_but                  000033D8 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 107. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000034F4 - 00003607 (0x114 bytes), align: 2
  Segment part 108.           Intra module refs:   OnKey
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           down_but                000034F4 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003608 - 0000360B (0x4 bytes), align: 2
  Segment part 109.           Intra module refs:   down_but
                                                   left_but
                                                   right_but
                                                   setgame
                                                   up_but
    -------------------------------------------------------------------------
CODE
  Segment part 110. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000360C - 0000370B (0x100 bytes), align: 2
  Segment part 111.           Intra module refs:   OnKey
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           enter_but               0000360C 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 112. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000370C - 00003763 (0x58 bytes), align: 2
  Segment part 113.           Intra module refs:   OnKey
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           left_soft               0000370C 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 114. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003764 - 000037A3 (0x40 bytes), align: 2
  Segment part 115.           Intra module refs:   OnKey
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           right_soft              00003764 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 116. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000037A4 - 000037CB (0x28 bytes), align: 2
  Segment part 117.           Intra module refs:   OnKey
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           green_but               000037A4 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 118. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000037CC - 000037EF (0x24 bytes), align: 2
  Segment part 119.           Intra module refs:   OnKey
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           resh_but                000037CC 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 120. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000037F0 - 00003833 (0x44 bytes), align: 2
  Segment part 121.           Intra module refs:   maincsm_onclose
                                                   onUnfocus
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           deltimers               000037F0 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 122. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003834 - 0000392B (0xf8 bytes), align: 2
  Segment part 123.           Intra module refs:   move_ball
                                                   startcont
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Play                    00003834 
               stack 1 = 00000000 ( 00000048 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000392C - 0000392F (0x4 bytes), align: 2
  Segment part 124.           Intra module refs:   Play
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003930 - 00003933 (0x4 bytes), align: 2
  Segment part 125.           Intra module refs:   Play
    -------------------------------------------------------------------------
CODE
  Segment part 126. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003934 - 0000397B (0x48 bytes), align: 2
  Segment part 127.           Intra module refs:   resh_but
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           openconf                00003934 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 128. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000397C - 000039D7 (0x5c bytes), align: 2
  Segment part 129.           Intra module refs:   enter_but
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           startcont               0000397C 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 130. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 131. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           exit                    
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 132. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000039D8 - 000039DB (0x4 bytes), align: 2
  Segment part 133.           Intra module refs:   gui_methods
    -------------------------------------------------------------------------
CODE
  Segment part 134. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000039DC - 00003A13 (0x38 bytes), align: 2
  Segment part 135.           Intra module refs:   gui_methods
    -------------------------------------------------------------------------
CODE
  Segment part 136. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003A14 - 00003A43 (0x30 bytes), align: 2
  Segment part 137.           Intra module refs:   gui_methods
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003A44 - 00003A47 (0x4 bytes), align: 2
  Segment part 138.           Intra module refs:   onClose
                                                   onCreate
    -------------------------------------------------------------------------
CODE
  Segment part 139. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003A48 - 00003A83 (0x3c bytes), align: 2
  Segment part 140.           Intra module refs:   gui_methods
    -------------------------------------------------------------------------
CODE
  Segment part 141. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003A84 - 00003AC7 (0x44 bytes), align: 2
  Segment part 142.           Intra module refs:   gui_methods
    -------------------------------------------------------------------------
CODE
  Segment part 143. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003AC8 - 00003BEF (0x128 bytes), align: 2
  Segment part 144.           Intra module refs:   gui_methods
    -------------------------------------------------------------------------
CODE
  Segment part 145. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003BF0 - 00003BF7 (0x8 bytes), align: 2
  Segment part 146.           Intra module refs:   gui_methods
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           method8                 00003BF0 
    -------------------------------------------------------------------------
CODE
  Segment part 147. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003BF8 - 00003BFF (0x8 bytes), align: 2
  Segment part 148.           Intra module refs:   gui_methods
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           method9                 00003BF8 
    -------------------------------------------------------------------------
CODE
  Segment part 149. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003C00 - 00003C5B (0x5c bytes), align: 2
  Segment part 150.           Intra module refs:   Segment part 4
    -------------------------------------------------------------------------
CODE
  Segment part 151. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003C5C - 00003C77 (0x1c bytes), align: 2
  Segment part 152.           Intra module refs:   maincsm_onclose
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ElfKiller               00003C5C 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 153. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003C78 - 00003CC3 (0x4c bytes), align: 2
  Segment part 154.           Intra module refs:   Segment part 4
    -------------------------------------------------------------------------
CODE
  Segment part 155. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003CC4 - 00003D63 (0xa0 bytes), align: 2
  Segment part 156.           Intra module refs:   Segment part 4
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003D64 - 00003D67 (0x4 bytes), align: 2
  Segment part 157.           Intra module refs:   maincsm_onmessage
                                                   openconf
    -------------------------------------------------------------------------
CODE
  Segment part 158. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 000045DC - 000046AF (0xd4 bytes), align: 2
  Segment part 4.             Intra module refs:   Segment part 161
                                                   Segment part 64
                                                   Segment part 69
                                                   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           bgcol                   00004670 
           bgcol_lang_cur          0000466C 
           perc_t                  000045DC 
    -------------------------------------------------------------------------
DATA_C
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 000046B0 - 000046BB (0xc bytes), align: 2
  Segment part 6.             Intra module refs:   Segment part 25
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 000046BC - 000046CF (0x14 bytes), align: 2
  Segment part 7.             Intra module refs:   Segment part 30
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 000046D0 - 000046F7 (0x28 bytes), align: 2
  Segment part 8.             Intra module refs:   Game
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           linecol2                000046F4 
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 000046F8 - 0000472F (0x38 bytes), align: 2
  Segment part 9.             Intra module refs:   win
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 00004730 - 0000482F (0x100 bytes), align: 2
  Segment part 12.            Intra module refs:   setgame
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           rndtable                00004730 
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 00004830 - 00004833 (0x4 bytes), align: 2
  Segment part 13.            Intra module refs:   Segment part 4
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           minus11                 00004830 
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 00004834 - 00004867 (0x34 bytes), align: 2
  Segment part 17.            Intra module refs:   maincsm_oncreate
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gui_methods             00004834 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003D68 - 00003DB7 (0x50 bytes), align: 2
  Segment part 159.           Intra module refs:   main
                                                   onUnfocus
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UpdateCSMname           00003D68 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003DB8 - 00003DBB (0x4 bytes), align: 2
  Segment part 160.           Intra module refs:   OnKey
                                                   Play
                                                   UpdateCSMname
                                                   deltimers
                                                   enter_but
                                                   left_soft
                                                   maincsm_onclose
                                                   onFocus
                                                   onUnfocus
                                                   resh_but
                                                   right_soft
                                                   startcont
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003DBC - 00003DBF (0x4 bytes), align: 2
  Segment part 161.           Intra module refs:   UpdateCSMname
                                                   openconf
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003DC0 - 00003DC3 (0x4 bytes), align: 2
  Segment part 162.           Intra module refs:   UpdateCSMname
    -------------------------------------------------------------------------
CODE
  Segment part 163. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003DC4 - 00003DF7 (0x34 bytes), align: 2
  Segment part 164.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           main                    00003DC4        Absolute parts (?ABS_ENTRY_MOD)
               stack 1 = 00000000 ( 00000030 )
    -------------------------------------------------------------------------
CODE
  Segment part 165. NOT NEEDED.Intra module refs   ElfKiller
    -------------------------------------------------------------------------
CODE
  Segment part 166. NOT NEEDED.Intra module refs   main
                                                   maincsm_onmessage
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_ID
  Relative segment, address: CODE_AREA 00000004 - 000002BF (0x2bc bytes), align: 2
  Segment part 11.            Intra module refs:   Segment part 10
    -------------------------------------------------------------------------
INITTAB
  Relative segment, address: CODE_AREA 00004878 - 00004883 (0xc bytes), align: 2
  Segment part 167. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?init?tab?DATA_Z        00004878 
    -------------------------------------------------------------------------
DATA_ID
  Segment part 168. TENTATIVE. Used definition from conf_loader
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?*?DATA_ID              
    -------------------------------------------------------------------------
INITTAB
  Segment part 169. TENTATIVE. Used definition from conf_loader
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?init?tab?DATA_I        




                ****************************************
                *                                      *
                *            MODULE SUMMARY            *
                *                                      *
                ****************************************

Module             CODE   DATA
------             ----   ----
                  (Rel)  (Rel)
conf_loader         409      4
  + shared           12
config_data         232
func                  4
main             18 416    700
N/A (alignment)
------           ------    ---
Total:           19 073    704


                ****************************************
                *                                      *
                *              CALL GRAPH              *
                *                                      *
                ****************************************

  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  T_Load_IMG
      | Stack used (prev) :  00000000
      | + function block  :  0000000C
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000000C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  Game
      | Stack used (prev) :  00000000
      | + function block  :  0000001C
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000001C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  stop_vibra
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  OnRedraw
      | Stack used (prev) :  00000000
      | + function block  :  00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000000


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  onCreate
      | Stack used (prev) :  00000000
      | + function block  :  00000008
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000008


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  onClose
      | Stack used (prev) :  00000000
      | + function block  :  00000008
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000008


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  onFocus
      | Stack used (prev) :  00000000
      | + function block  :  0000000C
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000000C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  onUnfocus
      | Stack used (prev) :  00000000
      | + function block  :  00000008
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000008


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  OnKey
      | Stack used (prev) :  00000000
      | + function block  :  00000008
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000008


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  method8
      | Stack used (prev) :  00000000
      | + function block  :  00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000000


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  method9
      | Stack used (prev) :  00000000
      | + function block  :  00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000000


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  maincsm_oncreate
      | Stack used (prev) :  00000000
      | + function block  :  0000000C
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000000C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  ElfKiller
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  maincsm_onclose
      | Stack used (prev) :  00000000
      | + function block  :  00000008
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000008


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  maincsm_onmessage
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000001C
  01  LoadConfigData
      | Stack used (prev) :  0000001C
      | + function block  :  00000030
  <-Sub-tree of type: Function tree
    | Stack used          :  0000004C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000004C
  01  InitConfig
      | Stack used (prev) :  0000004C
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00000054


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000054
  01  parserecord
      | Stack used (prev) :  00000054
      | + function block  :  00000024
  <-Sub-tree of type: Function tree
    | Stack used          :  00000078


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000078
  01  savedata
      | Stack used (prev) :  00000078
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00000084


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000084
  01  loadNastr
      | Stack used (prev) :  00000084
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00000090


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000090
  01  saveSettings
      | Stack used (prev) :  00000090
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  0000009C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000009C
  01  loadSettings
      | Stack used (prev) :  0000009C
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  000000A8


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000000A8
  01  DRE
      | Stack used (prev) :  000000A8
      | + function block  :  00000018
  <-Sub-tree of type: Function tree
    | Stack used          :  000000C0


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000000C0
  01  outtextxy
      | Stack used (prev) :  000000C0
      | + function block  :  00000020
  <-Sub-tree of type: Function tree
    | Stack used          :  000000E0


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000000E0
  01  png
      | Stack used (prev) :  000000E0
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  000000E8


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000000E8
  01  DrwImg
      | Stack used (prev) :  000000E8
      | + function block  :  00000038
  <-Sub-tree of type: Function tree
    | Stack used          :  00000120


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000120
  01  mfreeImages
      | Stack used (prev) :  00000120
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00000128


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000128
  01  mfreelang
      | Stack used (prev) :  00000128
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00000130


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000130
  01  malloclang
      | Stack used (prev) :  00000130
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00000138


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000138
  01  deleteIMGHDR
      | Stack used (prev) :  00000138
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00000140


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000140
  01  delimghdr
      | Stack used (prev) :  00000140
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  0000014C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000014C
  01  GetSize
      | Stack used (prev) :  0000014C
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000014C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000014C
  01  Init
      | Stack used (prev) :  0000014C
      | + function block  :  00000024
  <-Sub-tree of type: Function tree
    | Stack used          :  00000170


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000170
  01  RedrawScreen
      | Stack used (prev) :  00000170
      | + function block  :  0000004C
  <-Sub-tree of type: Function tree
    | Stack used          :  000001BC


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000001BC
  01  load_lang
      | Stack used (prev) :  000001BC
      | + function block  :  00000038
  <-Sub-tree of type: Function tree
    | Stack used          :  000001F4


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000001F4
  01  loading
      | Stack used (prev) :  000001F4
      | + function block  :  00000070
  <-Sub-tree of type: Function tree
    | Stack used          :  00000264


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000264
  01  move_block
      | Stack used (prev) :  00000264
      | + function block  :  00000010
  <-Sub-tree of type: Function tree
    | Stack used          :  00000274


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000274
  01  shift_block
      | Stack used (prev) :  00000274
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00000278


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000278
  01  shift_cpu
      | Stack used (prev) :  00000278
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  0000027C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000027C
  01  move_ball
      | Stack used (prev) :  0000027C
      | + function block  :  00000028
  <-Sub-tree of type: Function tree
    | Stack used          :  000002A4


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000002A4
  01  AI
      | Stack used (prev) :  000002A4
      | + function block  :  00000014
  <-Sub-tree of type: Function tree
    | Stack used          :  000002B8


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000002B8
  01  start_vibra
      | Stack used (prev) :  000002B8
      | + function block  :  00000010
  <-Sub-tree of type: Function tree
    | Stack used          :  000002C8


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000002C8
  01  win
      | Stack used (prev) :  000002C8
      | + function block  :  00000038
  <-Sub-tree of type: Function tree
    | Stack used          :  00000300


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000300
  01  gameover
      | Stack used (prev) :  00000300
      | + function block  :  00000010
  <-Sub-tree of type: Function tree
    | Stack used          :  00000310


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000310
  01  setgame
      | Stack used (prev) :  00000310
      | + function block  :  00000010
  <-Sub-tree of type: Function tree
    | Stack used          :  00000320


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000320
  01  setpause
      | Stack used (prev) :  00000320
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  0000032C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000032C
  01  stop
      | Stack used (prev) :  0000032C
      | + function block  :  00000010
  <-Sub-tree of type: Function tree
    | Stack used          :  0000033C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000033C
  01  lgpInitLangPack
      | Stack used (prev) :  0000033C
      | + function block  :  00000010
  <-Sub-tree of type: Function tree
    | Stack used          :  0000034C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000034C
  01  left_but
      | Stack used (prev) :  0000034C
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00000358


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000358
  01  right_but
      | Stack used (prev) :  00000358
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00000364


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000364
  01  up_but
      | Stack used (prev) :  00000364
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00000368


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000368
  01  down_but
      | Stack used (prev) :  00000368
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  0000036C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000036C
  01  enter_but
      | Stack used (prev) :  0000036C
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00000374


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000374
  01  left_soft
      | Stack used (prev) :  00000374
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00000380


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000380
  01  right_soft
      | Stack used (prev) :  00000380
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00000384


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000384
  01  green_but
      | Stack used (prev) :  00000384
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00000388


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000388
  01  resh_but
      | Stack used (prev) :  00000388
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00000390


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000390
  01  deltimers
      | Stack used (prev) :  00000390
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  0000039C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000039C
  01  Play
      | Stack used (prev) :  0000039C
      | + function block  :  00000048
  <-Sub-tree of type: Function tree
    | Stack used          :  000003E4


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000003E4
  01  openconf
      | Stack used (prev) :  000003E4
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  000003F0


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000003F0
  01  startcont
      | Stack used (prev) :  000003F0
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  000003FC


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000003FC
  01  UpdateCSMname
      | Stack used (prev) :  000003FC
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00000404


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000404
  01  main
      | Stack used (prev) :  00000404
      | + function block  :  00000030
  <-Sub-tree of type: Function tree
    | Stack used          :  00000434




                ****************************************
                *                                      *
                *      SEGMENTS IN ADDRESS ORDER       *
                *                                      *
                ****************************************


SEGMENT              SPACE    START ADDRESS   END ADDRESS     SIZE  TYPE  ALIGN
=======              =====    =============   ===========     ====  ====  =====
ELFBEGIN             CODE_AREA           00000000                     rel    0
DATA_ID              CODE_AREA      00000000 - 000002BF         2C0   rel    2
START                CODE_AREA           000002C0                     dse    0
CODE                 CODE_AREA      000002C0 - 00003DF7        3B38   rel    2
DATA_C               CODE_AREA      00003DF8 - 00004868         A71   rel    2
INITTAB              CODE_AREA      0000486C - 00004883          18   rel    2
DATA_Z               CODE_AREA      00004884 - 0000499B         118   rel    2
DATA_N               CODE_AREA           0000499C                     dse    0
CONFIG_C             CODE_AREA      0000499C - 00004A83          E8   rel    2
DATA_I               DATA_AREA      00000000 - 000002BF         2C0   rel    2

                ****************************************
                *                                      *
                *        END OF CROSS REFERENCE        *
                *                                      *
                ****************************************

 19 073 bytes of CODE memory
    704 bytes of DATA memory

Errors: none
Warnings: none

