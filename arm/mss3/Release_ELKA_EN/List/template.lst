##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION    13/Jan/2011  22:52:22 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  C:\arm\mss3\template.c                               #
#    Command line    =  C:\arm\mss3\template.c -D NEWSGOLD -D ELKA -D        #
#                       LANG_EN -D NO_CS -lC C:\arm\mss3\Release_ELKA_EN\Lis #
#                       t\ -o C:\arm\mss3\Release_ELKA_EN\Obj\ -s9           #
#                       --no_unroll --cpu_mode arm --endian little --cpu     #
#                       ARM926EJ-S --stack_align 4 --interwork -e --fpu      #
#                       None --dlib_config "C:\arm2\Embedded Workbench 4.0   #
#                       Evaluation\ARM\LIB\dl5tpainl8n.h" -I                 #
#                       "C:\arm2\Embedded Workbench 4.0                      #
#                       Evaluation\ARM\INC\" --inline_threshold=2            #
#    List file       =  C:\arm\mss3\Release_ELKA_EN\List\template.lst        #
#    Object file     =  C:\arm\mss3\Release_ELKA_EN\Obj\template.r79         #
#                                                                            #
#                                                                            #
##############################################################################

C:\arm\mss3\template.c
      1          #include "..\inc\swilib.h"
      2          #include "sms_dat.h"
      3          #include "language.h"
      4          #include "config_data.h"
      5          #include "edGui.h"
      6          #include "string_works.h"
      7          #include "createMenu.h"
      8          #include "rect_patcher.h"
      9          
     10          typedef struct
     11          {
     12            void *next;
     13            WSHDR *text;
     14          }TPLIST;
     15          

   \                                 In segment DATA_Z, align 4, align-sorted
     16          TPLIST *tpltop=0;
   \                     tpltop:
   \   00000000                      DS8 4
     17          

   \                                 In segment CODE, align 4, keep-with-next
     18          TPLIST *AllocTP(void)
     19          {
   \                     AllocTP:
   \   00000000   10402DE9           PUSH     {R4,LR}
     20            TPLIST *tp=malloc(sizeof(TPLIST));
   \   00000004   0800A0E3           MOV      R0,#+8
   \   00000008   140000EF           SWI      +20
   \   0000000C   0040A0E1           MOV      R4,R0
     21            zeromem(tp, sizeof(TPLIST));
   \   00000010   0810A0E3           MOV      R1,#+8
   \   00000014   1D0100EF           SWI      +285
     22            return tp;
   \   00000018   0400A0E1           MOV      R0,R4
   \   0000001C   1080BDE8           POP      {R4,PC}          ;; return
     23          }
     24          

   \                                 In segment CODE, align 4, keep-with-next
     25          void FreeTPL(void)
     26          {
   \                     FreeTPL:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
     27            TPLIST *tp;
     28            TPLIST *tp0;
     29            LockSched();
   \   00000004   460100EF           SWI      +326
     30            tp=tpltop;
   \   00000008   ........           LDR      R0,??DataTable2  ;; tpltop
     31            tpltop=0;
   \   0000000C   0010A0E3           MOV      R1,#+0
   \   00000010   004090E5           LDR      R4,[R0, #+0]
   \   00000014   001080E5           STR      R1,[R0, #+0]
     32            UnlockSched();
   \   00000018   470100EF           SWI      +327
   \   0000001C   000054E3           CMP      R4,#+0
   \   00000020   3080BD08           POPEQ    {R4,R5,PC}
     33            while(tp)
     34            {
     35              tp0=tp->next;
     36              if(tp->text)
   \                     ??FreeTPL_0:
   \   00000024   040094E5           LDR      R0,[R4, #+4]
   \   00000028   005094E5           LDR      R5,[R4, #+0]
   \   0000002C   000050E3           CMP      R0,#+0
   \   00000030   0000000A           BEQ      ??FreeTPL_1
     37                FreeWS(tp->text);
   \   00000034   290100EF           SWI      +297
     38              mfree(tp);
   \                     ??FreeTPL_1:
   \   00000038   0400A0E1           MOV      R0,R4
   \   0000003C   150000EF           SWI      +21
     39              tp=tp0;
   \   00000040   0540B0E1           MOVS     R4,R5
     40            }
   \   00000044   F6FFFF1A           BNE      ??FreeTPL_0
     41          }
   \   00000048   3080BDE8           POP      {R4,R5,PC}       ;; return
     42          

   \                                 In segment CODE, align 4, keep-with-next
     43          void AddToTPL(TPLIST *tp)
     44          {
   \                     AddToTPL:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
     45          //  TPLIST *tp0;
     46            LockSched();
   \   00000008   460100EF           SWI      +326
     47          //  tp0=tpltop;
     48            tp->next=tpltop;
   \   0000000C   ........           LDR      R0,??DataTable2  ;; tpltop
   \   00000010   001090E5           LDR      R1,[R0, #+0]
   \   00000014   001084E5           STR      R1,[R4, #+0]
     49            tpltop=tp;
   \   00000018   004080E5           STR      R4,[R0, #+0]
     50            UnlockSched();
   \   0000001C   470100EF           SWI      +327
     51          }
   \   00000020   1080BDE8           POP      {R4,PC}          ;; return
     52          

   \                                 In segment CODE, align 4, keep-with-next
     53          TPLIST *GetTpByN(int n)
     54          {
     55            int i=0;
     56            TPLIST *tp=tpltop;
   \                     GetTpByN:
   \   00000000   ........           LDR      R1,??DataTable2  ;; tpltop
   \   00000004   0020A0E3           MOV      R2,#+0
   \   00000008   000000EA           B        ??GetTpByN_0
     57            while(tp)
     58            {
     59              if(i==n)
     60                return tp;
     61              i++;
   \                     ??GetTpByN_1:
   \   0000000C   012082E2           ADD      R2,R2,#+1
     62              tp=tp->next;
   \                     ??GetTpByN_0:
   \   00000010   001091E5           LDR      R1,[R1, #+0]
   \   00000014   000051E3           CMP      R1,#+0
   \   00000018   0300000A           BEQ      ??GetTpByN_2
   \   0000001C   000052E1           CMP      R2,R0
   \   00000020   F9FFFF1A           BNE      ??GetTpByN_1
   \   00000024   0100A0E1           MOV      R0,R1
   \   00000028   1EFF2FE1           BX       LR
     63            }
     64            return 0;
   \                     ??GetTpByN_2:
   \   0000002C   0000A0E3           MOV      R0,#+0
   \   00000030   1EFF2FE1           BX       LR               ;; return
     65          }
     66          //ansi //cn
     67          //win1251 //en

   \                                 In segment CODE, align 4, keep-with-next
     68          int ReadTp(void)
     69          {
     70            char folder[128], dir[128], filepath[128], buf[MAX_TEXT*2], *pp;
     71            WSHDR *ws, wsn;
     72            unsigned short wsb[MAX_TEXT];
     73            int len, c, res=0, fp, size, wlen;
     74            DIR_ENTRY de;
     75            unsigned int err;
     76            TPLIST *tp;
     77            strcpy(folder, CFG_MAIN_FOLDER);
   \                     ReadTp:
   \   00000000   98129FE5           LDR      R1,??ReadTp_0    ;; CFG_MAIN_FOLDER
   \   00000004   F0432DE9           PUSH     {R4-R9,LR}
   \   00000008   DCD04DE2           SUB      SP,SP,#+220
   \   0000000C   90DD4DE2           SUB      SP,SP,#+9216
   \   00000010   D20F8DE2           ADD      R0,SP,#+840
   \   00000014   800D80E2           ADD      R0,R0,#+8192
   \   00000018   1A0000EF           SWI      +26
     78            len=strlen(folder);
   \   0000001C   D20F8DE2           ADD      R0,SP,#+840
   \   00000020   800D80E2           ADD      R0,R0,#+8192
   \   00000024   1B0000EF           SWI      +27
     79            c=folder[len-1];
   \   00000028   D21F8DE2           ADD      R1,SP,#+840
   \   0000002C   801D81E2           ADD      R1,R1,#+8192
   \   00000030   010080E0           ADD      R0,R0,R1
   \   00000034   011050E5           LDRB     R1,[R0, #-1]
   \   00000038   0040A0E3           MOV      R4,#+0
     80            if(c!='\\' && c!='/')
   \   0000003C   5C50A0E3           MOV      R5,#+92
   \   00000040   0060A0E3           MOV      R6,#+0
   \   00000044   5C0051E3           CMP      R1,#+92
   \   00000048   2F005113           CMPNE    R1,#+47
     81            {
     82              folder[len]='\\';
   \   0000004C   0050C015           STRBNE   R5,[R0, #+0]
     83              folder[len+1]=0;
   \   00000050   0160C015           STRBNE   R6,[R0, #+1]
     84            }
     85            if(!isdir(folder, &err))
   \   00000054   0D10A0E1           MOV      R1,SP
   \   00000058   D20F8DE2           ADD      R0,SP,#+840
   \   0000005C   800D80E2           ADD      R0,R0,#+8192
   \   00000060   910000EF           SWI      +145
   \   00000064   000050E3           CMP      R0,#+0
   \   00000068   0300001A           BNE      ??ReadTp_1
     86              mkdir(folder, &err);
   \   0000006C   0D10A0E1           MOV      R1,SP
   \   00000070   D20F8DE2           ADD      R0,SP,#+840
   \   00000074   800D80E2           ADD      R0,R0,#+8192
   \   00000078   100000EF           SWI      +16
     87            strcat(folder, "Text\\");
   \                     ??ReadTp_1:
   \   0000007C   20829FE5           LDR      R8,??ReadTp_0+0x4  ;; `?<Constant "Text\\\\">`
   \   00000080   D20F8DE2           ADD      R0,SP,#+840
   \   00000084   0810A0E1           MOV      R1,R8
   \   00000088   800D80E2           ADD      R0,R0,#+8192
   \   0000008C   170000EF           SWI      +23
     88            if(!isdir(folder, &err))
   \   00000090   0D10A0E1           MOV      R1,SP
   \   00000094   D20F8DE2           ADD      R0,SP,#+840
   \   00000098   800D80E2           ADD      R0,R0,#+8192
   \   0000009C   910000EF           SWI      +145
   \   000000A0   000050E3           CMP      R0,#+0
   \   000000A4   0300001A           BNE      ??ReadTp_2
     89              mkdir(folder, &err);
   \   000000A8   0D10A0E1           MOV      R1,SP
   \   000000AC   D20F8DE2           ADD      R0,SP,#+840
   \   000000B0   800D80E2           ADD      R0,R0,#+8192
   \   000000B4   100000EF           SWI      +16
     90            strcat(folder, "Template\\");
   \                     ??ReadTp_2:
   \   000000B8   081088E2           ADD      R1,R8,#+8
   \   000000BC   D20F8DE2           ADD      R0,SP,#+840
   \   000000C0   800D80E2           ADD      R0,R0,#+8192
   \   000000C4   170000EF           SWI      +23
     91            if(!isdir(folder, &err))
   \   000000C8   0D10A0E1           MOV      R1,SP
   \   000000CC   D20F8DE2           ADD      R0,SP,#+840
   \   000000D0   800D80E2           ADD      R0,R0,#+8192
   \   000000D4   910000EF           SWI      +145
   \   000000D8   000050E3           CMP      R0,#+0
   \   000000DC   0300001A           BNE      ??ReadTp_3
     92              mkdir(folder, &err);
   \   000000E0   0D10A0E1           MOV      R1,SP
   \   000000E4   D20F8DE2           ADD      R0,SP,#+840
   \   000000E8   800D80E2           ADD      R0,R0,#+8192
   \   000000EC   100000EF           SWI      +16
     93            if(!isdir(folder, &err))
   \                     ??ReadTp_3:
   \   000000F0   0D10A0E1           MOV      R1,SP
   \   000000F4   D20F8DE2           ADD      R0,SP,#+840
   \   000000F8   800D80E2           ADD      R0,R0,#+8192
   \   000000FC   910000EF           SWI      +145
   \   00000100   000050E3           CMP      R0,#+0
     94              return -1;
   \   00000104   0400E001           MVNEQ    R0,R4
   \   00000108   6100000A           BEQ      ??ReadTp_4
     95            FreeTPL();
   \   0000010C   ........           BL       FreeTPL
     96            ws=CreateLocalWS(&wsn, wsb, MAX_TEXT);
   \   00000110   802EA0E3           MOV      R2,#+2048
   \   00000114   04108DE2           ADD      R1,SP,#+4
   \   00000118   401D81E2           ADD      R1,R1,#+4096
   \   0000011C   C8008DE2           ADD      R0,SP,#+200
   \   00000120   900D80E2           ADD      R0,R0,#+9216
   \   00000124   270100EF           SWI      +295
   \   00000128   0070A0E1           MOV      R7,R0
     97            strcpy(dir, folder);
   \   0000012C   D21F8DE2           ADD      R1,SP,#+840
   \   00000130   801D81E2           ADD      R1,R1,#+8192
   \   00000134   F20F8DE2           ADD      R0,SP,#+968
   \   00000138   800D80E2           ADD      R0,R0,#+8192
   \   0000013C   1A0000EF           SWI      +26
     98            strcat(dir, "*.txt");
   \   00000140   141088E2           ADD      R1,R8,#+20
   \   00000144   F20F8DE2           ADD      R0,SP,#+968
   \   00000148   800D80E2           ADD      R0,R0,#+8192
   \   0000014C   170000EF           SWI      +23
     99            if(FindFirstFile(&de, dir, &err))
   \   00000150   0D20A0E1           MOV      R2,SP
   \   00000154   F21F8DE2           ADD      R1,SP,#+968
   \   00000158   801D81E2           ADD      R1,R1,#+8192
   \   0000015C   04008DE2           ADD      R0,SP,#+4
   \   00000160   800D80E2           ADD      R0,R0,#+8192
   \   00000164   6B0000EF           SWI      +107
   \   00000168   000050E3           CMP      R0,#+0
   \   0000016C   4300000A           BEQ      ??ReadTp_5
    100            {
    101              do
    102              {
    103                strcpy(filepath, de.folder_name);
   \                     ??ReadTp_6:
   \   00000170   38108DE2           ADD      R1,SP,#+56
   \   00000174   801D81E2           ADD      R1,R1,#+8192
   \   00000178   48008DE2           ADD      R0,SP,#+72
   \   0000017C   900D80E2           ADD      R0,R0,#+9216
   \   00000180   1A0000EF           SWI      +26
    104                len=strlen(filepath);
   \   00000184   48008DE2           ADD      R0,SP,#+72
   \   00000188   900D80E2           ADD      R0,R0,#+9216
   \   0000018C   1B0000EF           SWI      +27
    105                if(filepath[len-1]!='\\' && filepath[len-1]!='/')
   \   00000190   48108DE2           ADD      R1,SP,#+72
   \   00000194   901D81E2           ADD      R1,R1,#+9216
   \   00000198   010080E0           ADD      R0,R0,R1
   \   0000019C   011050E5           LDRB     R1,[R0, #-1]
   \   000001A0   5C0051E3           CMP      R1,#+92
   \   000001A4   2F005113           CMPNE    R1,#+47
    106                {
    107          	filepath[len++]='\\';
   \   000001A8   0050C015           STRBNE   R5,[R0, #+0]
    108          	filepath[len]='\0';
   \   000001AC   0160C015           STRBNE   R6,[R0, #+1]
    109                }
    110                strcat(filepath, de.file_name);
   \   000001B0   B9108DE2           ADD      R1,SP,#+185
   \   000001B4   801D81E2           ADD      R1,R1,#+8192
   \   000001B8   48008DE2           ADD      R0,SP,#+72
   \   000001BC   900D80E2           ADD      R0,R0,#+9216
   \   000001C0   170000EF           SWI      +23
    111                size=(de.file_size<(MAX_TEXT*2))?de.file_size:(MAX_TEXT*2);
   \   000001C4   809D8DE2           ADD      R9,SP,#+8192
   \   000001C8   2C9099E5           LDR      R9,[R9, #+44]
    112                if((fp=fopen(filepath, A_BIN+A_ReadOnly, P_READ, &err))>=0)
   \   000001CC   0D30A0E1           MOV      R3,SP
   \   000001D0   400D59E3           CMP      R9,#+4096
   \   000001D4   409DA023           MOVCS    R9,#+4096
   \   000001D8   8020A0E3           MOV      R2,#+128
   \   000001DC   801CA0E3           MOV      R1,#+32768
   \   000001E0   48008DE2           ADD      R0,SP,#+72
   \   000001E4   900D80E2           ADD      R0,R0,#+9216
   \   000001E8   0A0000EF           SWI      +10
   \   000001EC   0080B0E1           MOVS     R8,R0
   \   000001F0   1C00004A           BMI      ??ReadTp_7
    113                {
    114          	if(fread(fp, buf, size, &err)==size)
   \   000001F4   0D30A0E1           MOV      R3,SP
   \   000001F8   0920A0E1           MOV      R2,R9
   \   000001FC   04108DE2           ADD      R1,SP,#+4
   \   00000200   0B0000EF           SWI      +11
   \   00000204   090050E1           CMP      R0,R9
   \   00000208   1300001A           BNE      ??ReadTp_8
    115          	{
    116          	  buf[size]=0;
   \   0000020C   04008DE2           ADD      R0,SP,#+4
   \   00000210   0060C9E7           STRB     R6,[R9, +R0]
    117          	  //if(buf[0]==0xEF && buf[1]==0xBB && buf[2]==0xBF)
    118          	  //  pp=buf+3;
    119          	  //else 
    120          	  pp=buf;
    121          	  //utf8_2ws(ws, pp, MAX_TEXT);
    122          	  ascii_2ws(ws, pp, MAX_TEXT);
   \   00000214   802EA0E3           MOV      R2,#+2048
   \   00000218   04108DE2           ADD      R1,SP,#+4
   \   0000021C   0700A0E1           MOV      R0,R7
   \   00000220   ........           _BLF     ascii_2ws,??ascii_2ws??rA
    123          	  tp=AllocTP();
   \   00000224   ........           BL       AllocTP
   \   00000228   0090A0E1           MOV      R9,R0
    124          	  wlen=(ws->wsbody[0]>0)?ws->wsbody[0]:1;
   \   0000022C   000097E5           LDR      R0,[R7, #+0]
    125          	  tp->text=AllocWS(wlen);
    126          	  wstrcpy(tp->text, ws);
    127          	  AddToTPL(tp);
    128          	  res++;
   \   00000230   014084E2           ADD      R4,R4,#+1
   \   00000234   B010D0E1           LDRH     R1,[R0, #+0]
   \   00000238   000051E3           CMP      R1,#+0
   \   0000023C   0100A011           MOVNE    R0,R1
   \   00000240   0100A003           MOVEQ    R0,#+1
   \   00000244   250100EF           SWI      +293
   \   00000248   040089E5           STR      R0,[R9, #+4]
   \   0000024C   0710A0E1           MOV      R1,R7
   \   00000250   1F0100EF           SWI      +287
   \   00000254   0900A0E1           MOV      R0,R9
   \   00000258   ........           BL       AddToTPL
    129          	}
    130          	fclose(fp, &err);
   \                     ??ReadTp_8:
   \   0000025C   0D10A0E1           MOV      R1,SP
   \   00000260   0800A0E1           MOV      R0,R8
   \   00000264   0D0000EF           SWI      +13
    131                }
    132              }while(FindNextFile(&de, &err));
   \                     ??ReadTp_7:
   \   00000268   0D10A0E1           MOV      R1,SP
   \   0000026C   04008DE2           ADD      R0,SP,#+4
   \   00000270   800D80E2           ADD      R0,R0,#+8192
   \   00000274   6C0000EF           SWI      +108
   \   00000278   000050E3           CMP      R0,#+0
   \   0000027C   BBFFFF1A           BNE      ??ReadTp_6
    133            }
    134            FindClose(&de, &err);
   \                     ??ReadTp_5:
   \   00000280   0D10A0E1           MOV      R1,SP
   \   00000284   04008DE2           ADD      R0,SP,#+4
   \   00000288   800D80E2           ADD      R0,R0,#+8192
   \   0000028C   6D0000EF           SWI      +109
    135            return res;
   \   00000290   0400A0E1           MOV      R0,R4
   \                     ??ReadTp_4:
   \   00000294   DCD08DE2           ADD      SP,SP,#+220
   \   00000298   90DD8DE2           ADD      SP,SP,#+9216
   \   0000029C   F083BDE8           POP      {R4-R9,PC}       ;; return
   \                     ??ReadTp_0:
   \   000002A0   ........           DC32     CFG_MAIN_FOLDER
   \   000002A4   ........           DC32     `?<Constant "Text\\\\">`
    136          }
    137          

   \                                 In segment DATA_C, align 4, align-sorted
    138          const int tplmenusoftkeys[]={0,1,2};
   \                     tplmenusoftkeys:
   \   00000000   000000000100       DC32 0, 1, 2
   \              000002000000

   \                                 In segment DATA_I, align 4, align-sorted
    139          SOFTKEY_DESC tplmenu_sk[]=
   \                     tplmenu_sk:
   \   00000000                      DS8 24
   \   00000018                      REQUIRE `?<Initializer for tplmenu_sk>`
    140          {
    141            {0x0018,0x0000,(int)LGP_NULL},
    142            {0x0001,0x0000,(int)LGP_NULL},
    143            {0x003D,0x0000,(int)LGP_DOIT_PIC}
    144          };
    145          

   \                                 In segment DATA_C, align 4, align-sorted
    146          const SOFTKEYSTAB tplmenu_skt=
   \                     tplmenu_skt:
   \   00000000   ........0000       DC32 tplmenu_sk, 0
   \              0000        
    147          {
    148            tplmenu_sk,0
    149          };
    150          

   \                                 In segment DATA_I, align 4, align-sorted
    151          HEADER_DESC tplmenuhdr={0,0,0,0,NULL,(int)LGP_NULL,LGP_NULL};
   \                     tplmenuhdr:
   \   00000000                      DS8 20
   \   00000014                      REQUIRE `?<Initializer for tplmenuhdr>`
    152          

   \                                 In segment CODE, align 4, keep-with-next
    153          int tplmenu_onkey(void *data, GUI_MSG *msg)
    154          {
   \                     tplmenu_onkey:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   41DD4DE2           SUB      SP,SP,#+4160
   \   00000008   0050A0E1           MOV      R5,R0
    155            if((msg->keys==0x18)||(msg->keys==0x3D))
   \   0000000C   F200D1E1           LDRSH    R0,[R1, #+2]
   \   00000010   180050E3           CMP      R0,#+24
   \   00000014   3D005013           CMPNE    R0,#+61
   \   00000018   3A00001A           BNE      ??tplmenu_onkey_0
    156            {
    157              TPLIST *tp;
    158              void *ed_gui;
    159              if((ed_gui=MenuGetUserPointer(data)) && GetMenuItemCount(data) && (tp=GetTpByN(GetCurMenuItem(data))))
                                                             ^
Warning[Pe223]: function "GetMenuItemCount" declared implicitly
   \   0000001C   0500A0E1           MOV      R0,R5
   \   00000020   E00100EF           SWI      +480
   \   00000024   0040B0E1           MOVS     R4,R0
   \   00000028   3300000A           BEQ      ??tplmenu_onkey_1
   \   0000002C   0500A0E1           MOV      R0,R5
   \   00000030   ........           _BLF     GetMenuItemCount,??GetMenuItemCount??rA
   \   00000034   000050E3           CMP      R0,#+0
   \   00000038   2F00000A           BEQ      ??tplmenu_onkey_1
   \   0000003C   0500A0E1           MOV      R0,R5
   \   00000040   8F0100EF           SWI      +399
   \   00000044   ........           BL       GetTpByN
   \   00000048   0060B0E1           MOVS     R6,R0
   \   0000004C   2A00000A           BEQ      ??tplmenu_onkey_1
    160              {
    161                WSHDR csloc, *wcs;
    162                EDITCONTROL ec;
    163                unsigned short csb[MAX_TEXT];
    164                int k=EDIT_GetCursorPos(ed_gui);
   \   00000050   0400A0E1           MOV      R0,R4
   \   00000054   D30100EF           SWI      +467
   \   00000058   0050A0E1           MOV      R5,R0
    165                USER_OP *uo=EDIT_GetUserPointer(ed_gui);
   \   0000005C   0400A0E1           MOV      R0,R4
   \   00000060   DF0100EF           SWI      +479
   \   00000064   0070A0E1           MOV      R7,R0
    166                int n=EDIT_GetFocus(ed_gui);
   \   00000068   0400A0E1           MOV      R0,R4
   \   0000006C   820100EF           SWI      +386
   \   00000070   0080A0E1           MOV      R8,R0
    167                if(n!=(uo->focus_n))
   \   00000074   180097E5           LDR      R0,[R7, #+24]
   \   00000078   000058E1           CMP      R8,R0
   \   0000007C   0000000A           BEQ      ??tplmenu_onkey_2
    168          	return 1;
   \                     ??tplmenu_onkey_3:
   \   00000080   1D0000EA           B        ??tplmenu_onkey_1
    169                if(k<=0)
   \                     ??tplmenu_onkey_2:
   \   00000084   010055E3           CMP      R5,#+1
   \   00000088   1B0000BA           BLT      ??tplmenu_onkey_1
    170          	return 1;
    171                wcs=CreateLocalWS(&csloc,csb,MAX_TEXT);
   \   0000008C   802EA0E3           MOV      R2,#+2048
   \   00000090   0D10A0E1           MOV      R1,SP
   \   00000094   2C008DE2           ADD      R0,SP,#+44
   \   00000098   400D80E2           ADD      R0,R0,#+4096
   \   0000009C   270100EF           SWI      +295
   \   000000A0   0070A0E1           MOV      R7,R0
    172                ExtractEditControl(ed_gui,n,&ec);
   \   000000A4   402D8DE2           ADD      R2,SP,#+4096
   \   000000A8   0810A0E1           MOV      R1,R8
   \   000000AC   0400A0E1           MOV      R0,R4
   \   000000B0   690100EF           SWI      +361
    173                wstrcpy(wcs, ec.pWS);
   \   000000B4   401D8DE2           ADD      R1,SP,#+4096
   \   000000B8   281091E5           LDR      R1,[R1, #+40]
   \   000000BC   0700A0E1           MOV      R0,R7
   \   000000C0   1F0100EF           SWI      +287
    174                wsInsert(wcs, tp->text, k-1, MAX_TEXT);
   \   000000C4   041096E5           LDR      R1,[R6, #+4]
   \   000000C8   803EA0E3           MOV      R3,#+2048
   \   000000CC   012045E2           SUB      R2,R5,#+1
   \   000000D0   0700A0E1           MOV      R0,R7
   \   000000D4   ........           _BLF     wsInsert,??wsInsert??rA
    175                EDIT_SetTextToEditControl(ed_gui, n, wcs);
   \   000000D8   0720A0E1           MOV      R2,R7
   \   000000DC   0810A0E1           MOV      R1,R8
   \   000000E0   0400A0E1           MOV      R0,R4
   \   000000E4   DE0100EF           SWI      +478
    176                EDIT_SetCursorPos(ed_gui, k+wstrlen(tp->text));
   \   000000E8   040096E5           LDR      R0,[R6, #+4]
   \   000000EC   230100EF           SWI      +291
   \   000000F0   051080E0           ADD      R1,R0,R5
   \   000000F4   0400A0E1           MOV      R0,R4
   \   000000F8   D40100EF           SWI      +468
    177              }
    178              return 1;
   \                     ??tplmenu_onkey_1:
   \   000000FC   0100A0E3           MOV      R0,#+1
   \   00000100   41DD8DE2           ADD      SP,SP,#+4160
   \   00000104   F081BDE8           POP      {R4-R8,PC}
    179            }
    180            if(msg->keys==0x1)
   \                     ??tplmenu_onkey_0:
   \   00000108   010050E3           CMP      R0,#+1
    181              return 1;
    182            return 0;
   \   0000010C   0000A013           MOVNE    R0,#+0
   \   00000110   41DD8DE2           ADD      SP,SP,#+4160
   \   00000114   F081BDE8           POP      {R4-R8,PC}       ;; return
    183          }

   \                                 In segment CODE, align 4, keep-with-next
    184          void tplmenuitemhdl(void *data, int curitem, void *user_pointer)
    185          {
   \                     tplmenuitemhdl:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
    186            void *item=AllocMenuItem(data);
   \   0000000C   970100EF           SWI      +407
   \   00000010   0060A0E1           MOV      R6,R0
    187            WSHDR *ws=AllocMenuWS(data, 32);
   \   00000014   2010A0E3           MOV      R1,#+32
   \   00000018   0400A0E1           MOV      R0,R4
   \   0000001C   980100EF           SWI      +408
   \   00000020   0070A0E1           MOV      R7,R0
    188            TPLIST *tp=GetTpByN(curitem);
   \   00000024   0500A0E1           MOV      R0,R5
   \   00000028   ........           BL       GetTpByN
    189            if(tp)
   \   0000002C   000050E3           CMP      R0,#+0
   \   00000030   0300000A           BEQ      ??tplmenuitemhdl_0
    190              wstrcpy(ws, tp->text);
   \   00000034   041090E5           LDR      R1,[R0, #+4]
   \   00000038   0700A0E1           MOV      R0,R7
   \   0000003C   1F0100EF           SWI      +287
   \   00000040   040000EA           B        ??tplmenuitemhdl_1
    191            else
    192              wsprintf(ws, PERCENT_T, lgp.LGP_ERR);
   \                     ??tplmenuitemhdl_0:
   \   00000044   ........           LDR      R0,??DataTable4  ;; lgp + 12
   \   00000048   20109FE5           LDR      R1,??tplmenuitemhdl_2  ;; PERCENT_T
   \   0000004C   002090E5           LDR      R2,[R0, #+0]
   \   00000050   0700A0E1           MOV      R0,R7
   \   00000054   240100EF           SWI      +292
    193            SetMenuItemText(data, item, ws, curitem);
   \                     ??tplmenuitemhdl_1:
   \   00000058   0530A0E1           MOV      R3,R5
   \   0000005C   0720A0E1           MOV      R2,R7
   \   00000060   0610A0E1           MOV      R1,R6
   \   00000064   0400A0E1           MOV      R0,R4
   \   00000068   9A0100EF           SWI      +410
    194          }
   \   0000006C   F080BDE8           POP      {R4-R7,PC}       ;; return
   \                     ??tplmenuitemhdl_2:
   \   00000070   ........           DC32     PERCENT_T
    195          

   \                                 In segment CODE, align 4, keep-with-next
    196          void tplmenu_ghook(void *data, int cmd)
    197          {
   \                     tplmenu_ghook:
   \   00000000   00402DE9           PUSH     {LR}
    198            if(cmd==3)
   \   00000004   030051E3           CMP      R1,#+3
   \   00000008   0080BD18           POPNE    {PC}
    199            {
    200              FreeTPL();
   \   0000000C   ........           BL       FreeTPL
    201            }
    202          }
   \   00000010   0080BDE8           POP      {PC}             ;; return
    203          

   \                                 In segment DATA_C, align 4, align-sorted
    204          const MENU_DESC tplmenu=
   \                     tplmenu:
   \   00000000   08000000....       DC32 8, tplmenu_onkey, tplmenu_ghook, 0H, tplmenusoftkeys, tplmenu_skt
   \              ............
   \              00000000....
   \              ............
   \   00000018   10000000....       DC32 16, tplmenuitemhdl, 0H, 0H, 0
   \              ....00000000
   \              000000000000
   \              0000        
    205          {
    206            8,tplmenu_onkey,tplmenu_ghook,NULL,
    207            tplmenusoftkeys,
    208            &tplmenu_skt,
    209            0x10,//
    210            tplmenuitemhdl,
    211            NULL,//menuitems,
    212            NULL,//menuprocs,
    213            0
    214          };
    215          

   \                                 In segment CODE, align 4, keep-with-next
    216          int CreateTplMenu(void *ed_gui)
    217          {
   \                     CreateTplMenu:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    218            int n;
    219            if((n=ReadTp())==-1)
   \   00000008   ........           BL       ReadTp
   \   0000000C   0050A0E1           MOV      R5,R0
   \   00000010   010075E3           CMN      R5,#+1
   \   00000014   0500001A           BNE      ??CreateTplMenu_0
    220            {
    221              MsgBoxError(1, (int)lgp.LGP_ERR);
   \   00000018   ........           LDR      R0,??DataTable4  ;; lgp + 12
   \   0000001C   001090E5           LDR      R1,[R0, #+0]
   \   00000020   0100A0E3           MOV      R0,#+1
   \   00000024   4E0000EF           SWI      +78
    222              return 0;
   \   00000028   0000A0E3           MOV      R0,#+0
   \   0000002C   7080BDE8           POP      {R4-R6,PC}
    223            }
    224            patch_header(&tplmenuhdr);
   \                     ??CreateTplMenu_0:
   \   00000030   44609FE5           LDR      R6,??CreateTplMenu_1  ;; tplmenuhdr
   \   00000034   0000A0E3           MOV      R0,#+0
   \   00000038   B000C6E1           STRH     R0,[R6, #+0]
   \   0000003C   1800A0E3           MOV      R0,#+24
   \   00000040   B200C6E1           STRH     R0,[R6, #+2]
   \   00000044   888100EF           SWI      +33160
   \   00000048   010040E2           SUB      R0,R0,#+1
   \   0000004C   B400C6E1           STRH     R0,[R6, #+4]
   \   00000050   8A8100EF           SWI      +33162
   \   00000054   170080E2           ADD      R0,R0,#+23
   \   00000058   B600C6E1           STRH     R0,[R6, #+6]
    225            return (CreateSLMenu(&tplmenu, &tplmenuhdr, 0, n, ed_gui));
   \   0000005C   1C009FE5           LDR      R0,??CreateTplMenu_1+0x4  ;; tplmenu
   \   00000060   10002DE9           PUSH     {R4}
   \   00000064   0530A0E1           MOV      R3,R5
   \   00000068   0020A0E3           MOV      R2,#+0
   \   0000006C   0610A0E1           MOV      R1,R6
   \   00000070   ........           _BLF     CreateSLMenu,??CreateSLMenu??rA
   \   00000074   04D08DE2           ADD      SP,SP,#+4
   \   00000078   7080BDE8           POP      {R4-R6,PC}       ;; return
   \                     ??CreateTplMenu_1:
   \   0000007C   ........           DC32     tplmenuhdr
   \   00000080   ........           DC32     tplmenu
    226          }

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   ........           DC32     tpltop

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   ........           DC32     lgp + 12

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for tplmenu_sk>`:
   \   00000000   18000000           DC16 24, 0
   \   00000004   FFFFFF7F           DC32 2147483647
   \   00000008   01000000           DC16 1, 0
   \   0000000C   FFFFFF7F           DC32 2147483647
   \   00000010   3D000000           DC16 61, 0
   \   00000014   FBC0FF7F           DC32 2147467515

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for tplmenuhdr>`:
   \   00000000   000000000000       DC16 0, 0, 0, 0
   \              0000        
   \   00000008   00000000FFFF       DC32 0H, 2147483647, 2147483647
   \              FF7FFFFFFF7F

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Text\\\\">`:
   \   00000000   546578745C00       DC8 "Text\\"
   \   00000006   0000               DC8 0, 0
   \   00000008   54656D706C61       DC8 "Template\\"
   \              74655C00    
   \   00000012   0000               DC8 0, 0
   \   00000014   2A2E74787400       DC8 "*.txt"
   \   0000001A   0000               DC8 0, 0
    227          
    228          
    229          
    230          
    231          
    232          
    233          
    234          

   Maximum stack usage in bytes:

     Function       CSTACK
     --------       ------
     AddToTPL           8
     AllocTP            8
     CreateTplMenu     20
     FreeTPL           12
     GetTpByN           0
     ReadTp          9464
     tplmenu_ghook      4
     tplmenu_onkey   4184
     tplmenuitemhdl    20


   Segment part sizes:

     Function/Label                Bytes
     --------------                -----
     tpltop                           4
     AllocTP                         32
     FreeTPL                         76
     AddToTPL                        36
     GetTpByN                        52
     ReadTp                         680
     tplmenusoftkeys                 12
     tplmenu_sk                      24
     tplmenu_skt                      8
     tplmenuhdr                      20
     tplmenu_onkey                  280
     tplmenuitemhdl                 116
     tplmenu_ghook                   20
     tplmenu                         44
     CreateTplMenu                  132
     ??DataTable2                     4
     ??DataTable4                     4
     ?<Initializer for tplmenu_sk>   24
     ?<Initializer for tplmenuhdr>   20
     ?<Constant "Text\\">            28
      Others                        108

 
 1 516 bytes in segment CODE
    92 bytes in segment DATA_C
    44 bytes in segment DATA_I
    44 bytes in segment DATA_ID
     4 bytes in segment DATA_Z
    24 bytes in segment INITTAB
 
 1 432 bytes of CODE  memory (+ 108 bytes shared)
   136 bytes of CONST memory
    48 bytes of DATA  memory

Errors: none
Warnings: 1
