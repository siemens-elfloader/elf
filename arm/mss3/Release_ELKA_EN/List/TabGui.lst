##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION    13/Jan/2011  22:52:12 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  C:\arm\mss3\TabGui.c                                 #
#    Command line    =  C:\arm\mss3\TabGui.c -D NEWSGOLD -D ELKA -D LANG_EN  #
#                       -D NO_CS -lC C:\arm\mss3\Release_ELKA_EN\List\ -o    #
#                       C:\arm\mss3\Release_ELKA_EN\Obj\ -s9 --no_unroll     #
#                       --cpu_mode arm --endian little --cpu ARM926EJ-S      #
#                       --stack_align 4 --interwork -e --fpu None            #
#                       --dlib_config "C:\arm2\Embedded Workbench 4.0        #
#                       Evaluation\ARM\LIB\dl5tpainl8n.h" -I                 #
#                       "C:\arm2\Embedded Workbench 4.0                      #
#                       Evaluation\ARM\INC\" --inline_threshold=2            #
#    List file       =  C:\arm\mss3\Release_ELKA_EN\List\TabGui.lst          #
#    Object file     =  C:\arm\mss3\Release_ELKA_EN\Obj\TabGui.r79           #
#                                                                            #
#                                                                            #
##############################################################################

C:\arm\mss3\TabGui.c
      1          #include "..\inc\swilib.h"
      2          #include "main.h"
      3          #include "sms_dat.h"
      4          #include "rect_patcher.h"
      5          #include "guiIdMan.h"
      6          #include "MySMSYS_ipc.h"
      7          #include "smsList.h"
      8          #include "config_data.h"
      9          
     10          #define TAB_N 5
     11          
     12          int TabIcons[5][4]=
     13          {
     14            0x5C7,0x5C7,0x5C7,0x5C7,
     15            0x5C7,0x5C7,0x5C7,0x5C7,
     16            0x5C7,0x5C7,0x5C7,0x5C7,
     17            0x5C7,0x5C7,0x5C7,0x5C7,
     18            0x5C7,0x5C7,0x5C7,0x5C7,
     19          };
     20          
     21          int TabGuiOnKey(void *gui, GUI_MSG *msg)
     22          {
     23            return 0;
     24          }
     25          
     26          void TabGuiGHook(void *gui, int cmd)
     27          {
     28            if(cmd==0x18)
     29            {
     30              //redraw
     31              //REDRAW();
     32              int n=GetCursorTab(gui);
                           ^
Warning[Pe223]: function "GetCursorTab" declared implicitly
     33              if(n)
     34              {
     35                int type, cnt, cur;
     36                void *m_gui;
     37                switch(n)
     38                {
     39                case 1: type=TYPE_IN_ALL;break;
     40                case 2: type=TYPE_OUT;break;
     41                case 3: type=TYPE_DRAFT;break;
     42                //case 4: type=0;break;
     43                case 4: type=TYPE_FILTER;break;
     44                default : type=0;
     45                }
     46                m_gui=GetGuiByTab(gui, n);
                             ^
Warning[Pe223]: function "GetGuiByTab" declared implicitly

        m_gui=GetGuiByTab(gui, n);
             ^
"C:\arm\mss3\TabGui.c",46  Error[Pe513]: a value of type "int" cannot be
          assigned to an entity of type "void *"
     47                if(m_gui)
     48                {
     49                  cnt=getCountByType(type);
     50                  cur=GetCurMenuItem(m_gui);
     51                  if(cur>=cnt) SetCursorToMenuItem(m_gui, 0);
     52                  Menu_SetItemCountDyn(m_gui, cnt);
     53                  //SendSimpleIpcMsg(SMSYS_IPC_SMS_DATA_UPDATE);
     54                }
     55              }
     56              void **methods=((GUI *)gui)->methods;
     57              ((void (*)(void *))methods[0])(gui);
     58            }
     59            else if(cmd==0xA)
     60            {
     61              DisableIDLETMR();
     62            }
     63          }
     64          
     65          void TabGuiLocret(void)
     66          {
     67          }
     68          
     69          const TABGUI_DESC TabGui=
                       ^
Error[Pe020]: identifier "TABGUI_DESC" is undefined
     70          {
     71            8,
     72            TabGuiOnKey,
     73            TabGuiGHook,
     74            (void *)TabGuiLocret,
     75            NULL,
     76            NULL
     77          };
     78          
     79          int CreateTabMenu(void *dlg_csm)
     80          {
     81            void *m_gui;
     82            void *ma=malloc_adr();
     83            void *mf=mfree_adr();
     84            void *tab_gui=GetTabGUI(ma, mf);
                                 ^
Warning[Pe223]: function "GetTabGUI" declared implicitly

    void *tab_gui=GetTabGUI(ma, mf);
                  ^
"C:\arm\mss3\TabGui.c",84  Error[Pe144]: a value of type "int" cannot be used
          to initialize an entity of type "void *"
     85            int n, gui_id;
     86            //mainmenu
     87            extern const MENU_DESC main_menu;
     88            extern HEADER_DESC main_menuhdr;
     89            
     90            SetGUIDefinition(tab_gui, &TabGui);
                   ^
Warning[Pe223]: function "SetGUIDefinition" declared implicitly
     91            
     92          #define MAIN_MENU_N 6
     93            m_gui=GetMenuGUI(ma, mf);
                         ^
Warning[Pe223]: function "GetMenuGUI" declared implicitly

    m_gui=GetMenuGUI(ma, mf);
         ^
"C:\arm\mss3\TabGui.c",93  Error[Pe513]: a value of type "int" cannot be
          assigned to an entity of type "void *"
     94            SetMenuToGUI(m_gui, &main_menu);
                   ^
Warning[Pe223]: function "SetMenuToGUI" declared implicitly
     95            SetMenuItemCount(m_gui, MAIN_MENU_N);
     96            MenuSetUserPointer(m_gui, dlg_csm);
     97            SetCursorToMenuItem(m_gui, 0);
     98            patch_header(&main_menuhdr);
     99            SetHeaderToMenu(m_gui, &main_menuhdr, ma);
                   ^
Warning[Pe223]: function "SetHeaderToMenu" declared implicitly
    100            SetGUIToTabGUI(tab_gui, 0, TabIcons[0], m_gui);
                   ^
Warning[Pe223]: function "SetGUIToTabGUI" declared implicitly
    101            //sms list
    102            extern const HEADER_DESC sms_menuhdr;
    103            extern const ML_MENU_DESC sms_menu;
    104            patch_header(&sms_menuhdr);
    105            for(n=1; n<TAB_N; n++)
    106            {
    107              void *so;
    108              int type;
    109              m_gui=GetMultiLinesMenuGUI(ma, mf);
                           ^
Warning[Pe223]: function "GetMultiLinesMenuGUI" declared implicitly

      m_gui=GetMultiLinesMenuGUI(ma, mf);
           ^
"C:\arm\mss3\TabGui.c",109  Error[Pe513]: a value of type "int" cannot be
          assigned to an entity of type "void *"
    110              switch(n)
    111              {
    112              case 1: type=TYPE_IN_ALL;break;
    113              case 2: type=TYPE_OUT;break;
    114              case 3: type=TYPE_DRAFT;break;
    115              //case 4: type=0;break;
    116              case 4: type=TYPE_FILTER;break;
    117              }
    118              so=GetSLUserPointer(dlg_csm, type, 1);
    119              //so=malloc(sizeof(SML_OP));
    120              //so->type=type;
    121              //so->is_tab=1;
    122              //so->dlg_csm=dlg_csm;
    123              SetMenuToGUI(m_gui, &sms_menu);
    124              SetMenuItemCount(m_gui, getCountByType(type));
    125              MenuSetUserPointer(m_gui, so);
    126              SetCursorToMenuItem(m_gui, 0);
    127              SetHeaderToMenu(m_gui, &sms_menuhdr, ma);
    128              SetGUIToTabGUI(tab_gui, n, TabIcons[n], m_gui);
    129            }
    130            //SetCursorTab(tab_gui, 0);
    131            SetCursorTab(tab_gui, CFG_DEFAULT_TAB);
                   ^
Warning[Pe223]: function "SetCursorTab" declared implicitly
    132            UpdateTab1stItem(tab_gui, 0);
                   ^
Warning[Pe223]: function "UpdateTab1stItem" declared implicitly
    133            gui_id=CreateGUI(tab_gui);
    134            pushGS(dlg_csm, gui_id);
    135            return gui_id;
    136          }
    137          
    138          

Errors: 5
Warnings: 11
