##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION    30/Jan/2010  20:43:13 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  C:\arm\sudoku\main.c                                 #
#    Command line    =  C:\arm\sudoku\main.c -D NEWSGOLD -D ELKA -D LANG_RU  #
#                       -lC C:\arm\sudoku\Other\NewSGold\E71\List\ -o        #
#                       C:\arm\sudoku\Other\NewSGold\E71\Obj\ -s9            #
#                       --no_unroll --no_clustering --cpu_mode arm --endian  #
#                       little --cpu ARM926EJ-S --stack_align 4 --interwork  #
#                       -e --fpu None --dlib_config "C:\arm2\Embedded        #
#                       Workbench 4.0 Evaluation\ARM\LIB\dl5tpainl8n.h" -I   #
#                       "C:\arm2\Embedded Workbench 4.0                      #
#                       Evaluation\ARM\INC\" --inline_threshold=2            #
#    List file       =  C:\arm\sudoku\Other\NewSGold\E71\List\main.lst       #
#    Object file     =  C:\arm\sudoku\Other\NewSGold\E71\Obj\main.r79        #
#                                                                            #
#                                                                            #
##############################################################################

C:\arm\sudoku\main.c
      1          //(C)opy(R)ights - Авторство или чувство собственной важности (ЧСВ) ;)
      2          #define ELF_NAME     "SuDoKu"
      3          #define ELF_VERSION  "2.0"
      4          #define ELF_AUTHOR   "Dimadze"
      5          #define ELF_RESPECT  "SIEMENS"
      6          
      7          #ifdef SGOLD
      8          #define ELF_PLATFORM "SGold"
      9          #endif
     10          
     11          #ifdef NEWSGOLD
     12          #ifndef ELKA
     13          #define ELF_PLATFORM "NewSGold"
     14          #endif
     15          #endif
     16              
     17          #ifdef ELKA
     18          #define ELF_PLATFORM "NewSGold (E/EL71)"
     19          #endif
     20          
     21          //General game #defines  - Основные игровые дефайны (как-бы замещения)
     22          
     23          #define SCRH 160 //ScreenH() //Высота игрового окна
     24          #define SCRW 128 //ScreenW() //Ширина игрового окна
     25          
     26          #define SCRHM 130 //Наименьшая Высота экрана
     27          #define SCRWM 128 //Наименьшая Ширина экрана
     28          
     29          #define TIMER_SECOND 262
     30          #define MAXXC        9
     31          #define MAXYC        9
     32          #define MAXPREVIEW   200   //200 Подглядываний
     33          #define MAXSECOND    18000 //5 часов на игру
     34           
     35          
     36          //General game/system #includes - Основные игровые/системные включения
     37          
     38          #include "..\inc\swilib.h"
     39          #include "..\inc\rect_patcher.h"
     40          #include "conf_loader.h"
     41          
     42          #include "engine\fileop\resources.h" //Ресурсы: фаилы, вшитые в эльф

   \                                 In segment DATA_I, align 4, align-sorted
   \   char __data png_help_txt[1246]
   \                     png_help_txt:
   \   00000000                      DS8 1248
   \   000004E0                      REQUIRE `?<Initializer for png_help_txt>`

   \                                 In segment DATA_I, align 4, align-sorted
   \   char __data etc_help_txt[228]
   \                     etc_help_txt:
   \   00000000                      DS8 228
   \   000000E4                      REQUIRE `?<Initializer for etc_help_txt>`

   \                                 In segment DATA_I, align 4, align-sorted
   \   char __data logo_bitmap[4165]
   \                     logo_bitmap:
   \   00000000                      DS8 4168
   \   00001048                      REQUIRE `?<Initializer for logo_bitmap>`
     43          
     44          //Global consts and vars - Глобальные константы и переменные

   \                                 In segment DATA_Z, align 4, align-sorted
     45          GBSTMR timer;
   \                     timer:
   \   00000000                      DS8 16

   \                                 In segment DATA_I, align 4, align-sorted
     46          int GBSTIMER_KOEFFICENT = 1;
   \                     GBSTIMER_KOEFFICENT:
   \   00000000                      DS8 4
   \   00000004                      REQUIRE `?<Initializer for GBSTIMER_KOEFFICENT>`

   \                                 In segment DATA_Z, align 4, align-sorted
     47          int RENDERWINDOW = 0;
   \                     RENDERWINDOW:
   \   00000000                      DS8 4

   \                                 In segment DATA_Z, align 4, align-sorted
     48          int MESSAGEWINDOW =0;
   \                     MESSAGEWINDOW:
   \   00000000                      DS8 4

   \                                 In segment DATA_Z, align 1, align-sorted
     49          char TYPEREDRAW = 0;
   \                     TYPEREDRAW:
   \   00000000                      DS8 1

   \                                 In segment DATA_Z, align 1, align-sorted
     50          char TEMPREDRAW = 0;
   \                     TEMPREDRAW:
   \   00000000                      DS8 1
     51          

   \                                 In segment DATA_Z, align 4, align-sorted
     52          int pravda = 0;
   \                     pravda:
   \   00000000                      DS8 4
     53          

   \                                 In segment DATA_Z, align 4, align-sorted
     54          char sudoku[256], bgg[256], bgm[256]; //Пути png - картинок: sudoku.png, bgg.png, bgm.png
   \                     sudoku:
   \   00000000                      DS8 256

   \                                 In segment DATA_Z, align 4, align-sorted
   \                     bgg:
   \   00000000                      DS8 256

   \                                 In segment DATA_Z, align 4, align-sorted
   \                     bgm:
   \   00000000                      DS8 256

   \                                 In segment DATA_Z, align 4, align-sorted
     55          char dig[28][256];                    //Пути png - картинок: 0.png, 1-9.png, 1s-9s.png, 1a-9a.png
   \                     dig:
   \   00000000                      DS8 7168
     56          

   \                                 In segment DATA_Z, align 4, align-sorted
     57          char ssffile[5][256];          //Пути 5 ssf - фаилов                      (/cfg/sudoku_%02d.ssf)
   \                     ssffile:
   \   00000000                      DS8 1280

   \                                 In segment DATA_Z, align 4, align-sorted
     58          char hlpfile[256];             //Путь hlp - фаила                         (/cfg/sudoku.hlp)
   \                     hlpfile:
   \   00000000                      DS8 256

   \                                 In segment DATA_Z, align 4, align-sorted
     59          char seditor[256];             //Путь эльф - редактора фаилов карт SuDoKu (/smfeditor.elf)
   \                     seditor:
   \   00000000                      DS8 256

   \                                 In segment DATA_Z, align 4, align-sorted
     60          char cfgfile[256];             //Путь BCFG - фаила
   \                     cfgfile:
   \   00000000                      DS8 256
     61          

   \                                 In segment DATA_Z, align 4, align-sorted
     62          char elffolder[256];           //Путь папки запущенного эльфа
   \                     elffolder:
   \   00000000                      DS8 256

   \                                 In segment DATA_Z, align 4, align-sorted
     63          char imgfolder[256];           //Путь папки /SCRWxSCRH/ - графика
   \                     imgfolder:
   \   00000000                      DS8 256

   \                                 In segment DATA_Z, align 4, align-sorted
     64          char cfgfolder[256];           //Путь папки /cfg/ - различные настройки, сейвы
   \                     cfgfolder:
   \   00000000                      DS8 256

   \                                 In segment DATA_Z, align 4, align-sorted
     65          char smffolder[256];           //Путь папки /smf/ - фаилы карт SuDoKu
   \                     smffolder:
   \   00000000                      DS8 256
     66          

   \                                 In segment DATA_I, align 4, align-sorted
     67          IMGHDR  logo_img = {90, 90, 0x88, logo_bitmap};                                     //Логотип (вшит в эльф)
   \                     logo_img:
   \   00000000                      DS8 12
   \   0000000C                      REQUIRE `?<Initializer for logo_img>`

   \                                 In segment DATA_Z, align 4, align-sorted
     68          IMGHDR *sudoku_img     = 0;                                                         //Заголовок в меню (на C72, SL65 он не нужен)
   \                     sudoku_img:
   \   00000000                      DS8 4

   \                                 In segment DATA_Z, align 4, align-sorted
     69          IMGHDR *bgg_img        = 0;                                                         //Фон игрового окна
   \                     bgg_img:
   \   00000000                      DS8 4

   \                                 In segment DATA_Z, align 4, align-sorted
     70          IMGHDR *bgm_img        = 0;                                                         //Фон меню
   \                     bgm_img:
   \   00000000                      DS8 4

   \                                 In segment DATA_Z, align 4, align-sorted
     71          IMGHDR *dig_img[28]    = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}; //Картинки ячеек
   \                     dig_img:
   \   00000000                      DS8 112
     72          
     73          
     74          //BCFG - переменные

   \                                 In segment DATA_I, align 4, align-sorted
     75          int bcfg_mmenu_font         = 7;              // Шрифт основного меню
   \                     bcfg_mmenu_font:
   \   00000000                      DS8 4
   \   00000004                      REQUIRE `?<Initializer for bcfg_mmenu_font>`

   \                                 In segment DATA_I, align 4, align-sorted
     76          char bcfg_mmenu_col[4]      = {0,0,255,100};  // Цвет основного меню
   \                     bcfg_mmenu_col:
   \   00000000                      DS8 4
   \   00000004                      REQUIRE `?<Initializer for bcfg_mmenu_col>`

   \                                 In segment DATA_I, align 4, align-sorted
     77          char bcfg_mmenu_bgcol_u[4]  = {0,0,0,100};    // Цвет градиента элемента меню
   \                     bcfg_mmenu_bgcol_u:
   \   00000000                      DS8 4
   \   00000004                      REQUIRE `?<Initializer for bcfg_mmenu_bgcol_u>`

   \                                 In segment DATA_I, align 4, align-sorted
     78          char bcfg_mmenu_bgcol_m[4]  = {255,0,0,100};  // Цвет градиента выделенного элемента меню
   \                     bcfg_mmenu_bgcol_m:
   \   00000000                      DS8 4
   \   00000004                      REQUIRE `?<Initializer for bcfg_mmenu_bgcol_m>`
     79          

   \                                 In segment DATA_I, align 4, align-sorted
     80          int bcfg_sh_headfont         = 7;
   \                     bcfg_sh_headfont:
   \   00000000                      DS8 4
   \   00000004                      REQUIRE `?<Initializer for bcfg_sh_headfont>`

   \                                 In segment DATA_I, align 4, align-sorted
     81          char bcfg_sh_headcolt[4]     = {0,0,0,100};
   \                     bcfg_sh_headcolt:
   \   00000000                      DS8 4
   \   00000004                      REQUIRE `?<Initializer for bcfg_sh_headcolt>`

   \                                 In segment DATA_I, align 4, align-sorted
     82          char bcfg_sh_headcolg[4]     = {0,0,0,100};
   \                     bcfg_sh_headcolg:
   \   00000000                      DS8 4
   \   00000004                      REQUIRE `?<Initializer for bcfg_sh_headcolg>`
     83          

   \                                 In segment DATA_I, align 4, align-sorted
     84          int bcfg_sh_softfont         = 7;
   \                     bcfg_sh_softfont:
   \   00000000                      DS8 4
   \   00000004                      REQUIRE `?<Initializer for bcfg_sh_softfont>`

   \                                 In segment DATA_I, align 4, align-sorted
     85          char bcfg_sh_softcolt[4]     = {255,0,0,100};
   \                     bcfg_sh_softcolt:
   \   00000000                      DS8 4
   \   00000004                      REQUIRE `?<Initializer for bcfg_sh_softcolt>`

   \                                 In segment DATA_I, align 4, align-sorted
     86          char bcfg_sh_softcolg[4]     = {0,0,0,100};
   \                     bcfg_sh_softcolg:
   \   00000000                      DS8 4
   \   00000004                      REQUIRE `?<Initializer for bcfg_sh_softcolg>`
     87          
     88          
     89          //Additional game/system #includes - Дополнителные игровые/системные включения
     90          
     91          #include "engine\system\lang.h"      //Язык интерфейса - библиотека специальных #define'ов (По принципу Ivoplay)
     92          #include "engine\system\sieelf.h"    //Интерфейс мобилы для IAR

   \                                 In segment DATA_C, align 4, align-sorted
   \   int const __data minus11
   \                     minus11:
   \   00000000   F5FFFFFF           DC32 -11

   \                                 In segment DATA_Z, align 4, align-sorted
   \   unsigned short __data maincsm_name_body[140]
   \                     maincsm_name_body:
   \   00000000                      DS8 280

   \                                 In segment DATA_Z, align 4, align-sorted
   \   unsigned int __data MAINCSM_ID
   \                     MAINCSM_ID:
   \   00000000                      DS8 4

   \                                 In segment DATA_Z, align 4, align-sorted
   \   unsigned int __data MAINGUI_ID
   \                     MAINGUI_ID:
   \   00000000                      DS8 4

   \                                 In segment CODE, align 4, keep-with-next
   \   static __??Code32?? __code __interwork __atpcs void OnRedraw(MAIN_GUI *)
   \                     OnRedraw:
   \   00000000   ........           B        REDRAW_CONTROL   ;; tailcall

   \                                 In segment CODE, align 4, keep-with-next
   \   static __??Code32?? __code __interwork __atpcs void onCreate(MAIN_GUI *, void *(*)(int))
   \                     onCreate:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0100A0E3           MOV      R0,#+1
   \   0000000C   3B0200EF           SWI      +571
   \   00000010   ........           BL       CREATE_CONTROL
   \   00000014   0100A0E3           MOV      R0,#+1
   \   00000018   0C00C4E5           STRB     R0,[R4, #+12]
   \   0000001C   1080BDE8           POP      {R4,PC}          ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   static __??Code32?? __code __interwork __atpcs void onClose(MAIN_GUI *, void (*)(void *))
   \                     onClose:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   ........           BL       END_CONTROL
   \   0000000C   0000A0E3           MOV      R0,#+0
   \   00000010   0C00C4E5           STRB     R0,[R4, #+12]
   \   00000014   1080BDE8           POP      {R4,PC}          ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   static __??Code32?? __code __interwork __atpcs void onFocus(MAIN_GUI *, void *(*)(int), void (*)(void *))
   \                     onFocus:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0100A0E3           MOV      R0,#+1
   \   0000000C   3B0200EF           SWI      +571
   \   00000010   0200A0E3           MOV      R0,#+2
   \   00000014   0C00C4E5           STRB     R0,[R4, #+12]
   \   00000018   7F0100EF           SWI      +383
   \   0000001C   ........           LDR      R0,??DataTable7  ;; TYPEREDRAW
   \   00000020   0010A0E3           MOV      R1,#+0
   \   00000024   0010C0E5           STRB     R1,[R0, #+0]
   \   00000028   720100EF           SWI      +370
   \   0000002C   1080BDE8           POP      {R4,PC}          ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   static __??Code32?? __code __interwork __atpcs void onUnfocus(MAIN_GUI *, void (*)(void *))
   \                     onUnfocus:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   ........           LDR      R0,??DataTable1  ;; timer
   \   0000000C   440100EF           SWI      +324
   \   00000010   0C00D4E5           LDRB     R0,[R4, #+12]
   \   00000014   020050E3           CMP      R0,#+2
   \   00000018   0100A003           MOVEQ    R0,#+1
   \   0000001C   0C00C405           STRBEQ   R0,[R4, #+12]
   \   00000020   1080BDE8           POP      {R4,PC}          ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   static __??Code32?? __code __interwork __atpcs int OnKey(MAIN_GUI *, GUI_MSG *)
   \                     OnKey:
   \   00000000   0100A0E1           MOV      R0,R1
   \   00000004   ........           B        KEY_CONTROL      ;; tailcall

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs int method8(void)
   \                     method8:
   \   00000000   0000A0E3           MOV      R0,#+0
   \   00000004   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs int method9(void)
   \                     method9:
   \   00000000   0000A0E3           MOV      R0,#+0
   \   00000004   1EFF2FE1           BX       LR               ;; return

   \                                 In segment DATA_C, align 4, align-sorted
   \   void const *const __data gui_methods[11]
   \                     gui_methods:
   \   00000000   ............       DC32 OnRedraw, onCreate, onClose, onFocus, onUnfocus, OnKey, 0H
   \              ............
   \              ............
   \              ............
   \              00000000    
   \   0000001C   ............       DC32 kill_data, method8, method9, 0H
   \              ............
   \              00000000    

   \                                 In segment CODE, align 4, keep-with-next
   \   static __??Code32?? __code __interwork __atpcs void maincsm_oncreate(struct <unnamed> *)
   \                     maincsm_oncreate:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   4000A0E3           MOV      R0,#+64
   \   0000000C   140000EF           SWI      +20
   \   00000010   0050A0E1           MOV      R5,R0
   \   00000014   4010A0E3           MOV      R1,#+64
   \   00000018   1D0100EF           SWI      +285
   \   0000001C   898100EF           SWI      +33161
   \   00000020   0060A0E1           MOV      R6,R0
   \   00000024   888100EF           SWI      +33160
   \   00000028   50209FE5           LDR      R2,??maincsm_oncreate_0  ;; ??Canvas
   \   0000002C   011046E2           SUB      R1,R6,#+1
   \   00000030   010040E2           SUB      R0,R0,#+1
   \   00000034   0060A0E3           MOV      R6,#+0
   \   00000038   B060C2E1           STRH     R6,[R2, #+0]
   \   0000003C   1830A0E3           MOV      R3,#+24
   \   00000040   B230C2E1           STRH     R3,[R2, #+2]
   \   00000044   B400C2E1           STRH     R0,[R2, #+4]
   \   00000048   B610C2E1           STRH     R1,[R2, #+6]
   \   0000004C   002085E5           STR      R2,[R5, #+0]
   \   00000050   0200A0E3           MOV      R0,#+2
   \   00000054   300085E5           STR      R0,[R5, #+48]
   \   00000058   24009FE5           LDR      R0,??maincsm_oncreate_0+0x4  ;; gui_methods
   \   0000005C   040085E5           STR      R0,[R5, #+4]
   \   00000060   158000EF           SWI      +32789
   \   00000064   200085E5           STR      R0,[R5, #+32]
   \   00000068   106084E5           STR      R6,[R4, #+16]
   \   0000006C   146084E5           STR      R6,[R4, #+20]
   \   00000070   0500A0E1           MOV      R0,R5
   \   00000074   370100EF           SWI      +311
   \   00000078   280084E5           STR      R0,[R4, #+40]
   \   0000007C   7080BDE8           POP      {R4-R6,PC}       ;; return
   \                     ??maincsm_oncreate_0:
   \   00000080   ........           DC32     ??Canvas
   \   00000084   ........           DC32     gui_methods

   \                                 In segment DATA_C, align 4, align-sorted
   \   RECT const __data Canvas
   \                     ??Canvas:
   \   00000000   000000000000       DC16 0, 0, 0, 0
   \              0000        

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void ElfKiller(void)
   \                     ElfKiller:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   158000EF           SWI      +32789
   \   00000008   0010A0E1           MOV      R1,R0
   \   0000000C   04009FE5           LDR      R0,??ElfKiller_0  ;; ELF_BEGIN
   \   00000010   0040BDE8           POP      {LR}             ;; Pop
   \   00000014   ........           _BF      kill_data,??kill_data??rA  ;; tailcall
   \                     ??ElfKiller_0:
   \   00000018   ........           DC32     ELF_BEGIN

   \                                 In segment CODE, align 4, keep-with-next
   \   static __??Code32?? __code __interwork __atpcs void maincsm_onclose(struct <unnamed> *)
   \                     maincsm_onclose:
   \   00000000   08009FE5           LDR      R0,??maincsm_onclose_0  ;; ElfKiller
   \   00000004   00402DE9           PUSH     {LR}
   \   00000008   710100EF           SWI      +369
   \   0000000C   0080BDE8           POP      {PC}             ;; return
   \                     ??maincsm_onclose_0:
   \   00000010   ........           DC32     ElfKiller

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs int strcmp_nocase(char const *, char const *)
   \                     strcmp_nocase:
   \                     ??strcmp_nocase_0:
   \   00000000   0020D0E5           LDRB     R2,[R0, #+0]
   \   00000004   610052E3           CMP      R2,#+97
   \   00000008   010000BA           BLT      ??strcmp_nocase_1
   \   0000000C   7B0052E3           CMP      R2,#+123
   \   00000010   202042B2           SUBLT    R2,R2,#+32
   \                     ??strcmp_nocase_1:
   \   00000014   00C0D1E5           LDRB     R12,[R1, #+0]
   \   00000018   010080E2           ADD      R0,R0,#+1
   \   0000001C   0230A0E1           MOV      R3,R2
   \   00000020   61005CE3           CMP      R12,#+97
   \   00000024   010000BA           BLT      ??strcmp_nocase_2
   \   00000028   7B005CE3           CMP      R12,#+123
   \   0000002C   20C04CB2           SUBLT    R12,R12,#+32
   \                     ??strcmp_nocase_2:
   \   00000030   011081E2           ADD      R1,R1,#+1
   \   00000034   0C2052E0           SUBS     R2,R2,R12
   \   00000038   0100001A           BNE      ??strcmp_nocase_3
   \   0000003C   000053E3           CMP      R3,#+0
   \   00000040   EEFFFF1A           BNE      ??strcmp_nocase_0
   \                     ??strcmp_nocase_3:
   \   00000044   0200A0E1           MOV      R0,R2
   \   00000048   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   static __??Code32?? __code __interwork __atpcs int maincsm_onmessage(struct <unnamed> *, GBS_MSG *)
   \                     maincsm_onmessage:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   042091E5           LDR      R2,[R1, #+4]
   \   00000008   0E30A0E3           MOV      R3,#+14
   \   0000000C   643C83E3           ORR      R3,R3,#0x6400
   \   00000010   030052E1           CMP      R2,R3
   \   00000014   0500001A           BNE      ??maincsm_onmessage_0
   \   00000018   0C2091E5           LDR      R2,[R1, #+12]
   \   0000001C   283090E5           LDR      R3,[R0, #+40]
   \   00000020   030052E1           CMP      R2,R3
   \   00000024   0D00001A           BNE      ??maincsm_onmessage_1
   \   00000028   0220E0E3           MVN      R2,#+2
   \   0000002C   102080E5           STR      R2,[R0, #+16]
   \                     ??maincsm_onmessage_0:
   \   00000030   040091E5           LDR      R0,[R1, #+4]
   \   00000034   AF20A0E3           MOV      R2,#+175
   \   00000038   DE2C82E3           ORR      R2,R2,#0xDE00
   \   0000003C   020050E1           CMP      R0,R2
   \   00000040   0600001A           BNE      ??maincsm_onmessage_1
   \   00000044   1C009FE5           LDR      R0,??maincsm_onmessage_2  ;; successed_config_filename
   \   00000048   0C1091E5           LDR      R1,[R1, #+12]
   \   0000004C   000090E5           LDR      R0,[R0, #+0]
   \   00000050   ........           BL       strcmp_nocase
   \   00000054   000050E3           CMP      R0,#+0
   \   00000058   0000001A           BNE      ??maincsm_onmessage_1
   \   0000005C   ........           _BLF     InitConfig,??InitConfig??rA
   \                     ??maincsm_onmessage_1:
   \   00000060   0100A0E3           MOV      R0,#+1
   \   00000064   0080BDE8           POP      {PC}             ;; return
   \                     ??maincsm_onmessage_2:
   \   00000068   ........           DC32     successed_config_filename

   \                                 In segment DATA_C, align 4, align-sorted
   \   static struct <unnamed> const __data MAINCSM
   \                     MAINCSM:
   \   00000000   ............       DC32 maincsm_onmessage, maincsm_oncreate, 0, 0, 0, 0, maincsm_onclose
   \              ....00000000
   \              000000000000
   \              000000000000
   \              ........    
   \   0000001C   2C0000000100       DC32 44, 1, minus11, maincsm_name_body, 55AACCCCH, 3333AA55H, 0
   \              0000........
   \              ........CCCC
   \              AA5555AA3333
   \              00000000    
   \   00000038   8B00               DC16 139
   \   0000003A   0000               DC8 0, 0

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void UpdateCSMname(void)
   \                     UpdateCSMname:
   \   00000000   0C109FE5           LDR      R1,??UpdateCSMname_0  ;; `?<Constant "SuDoKu">`
   \   00000004   0C009FE5           LDR      R0,??UpdateCSMname_0+0x4  ;; MAINCSM + 40
   \   00000008   00402DE9           PUSH     {LR}
   \   0000000C   240100EF           SWI      +292
   \   00000010   0080BDE8           POP      {PC}             ;; return
   \                     ??UpdateCSMname_0:
   \   00000014   ........           DC32     `?<Constant "SuDoKu">`
   \   00000018   ........           DC32     MAINCSM + 40

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs int main(char *, char *)
   \                     main:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   2CD04DE2           SUB      SP,SP,#+44
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   B58100EF           SWI      +33205
   \   00000014   020050E3           CMP      R0,#+2
   \   00000018   0200000A           BEQ      ??main_0
   \   0000001C   44109FE5           LDR      R1,??main_1      ;; `?<Constant "\\304\\340\\355\\355\\373\\351 \\375\\353\\`
   \   00000020   0100A0E3           MOV      R0,#+1
   \   00000024   480100EF           SWI      +328
   \                     ??main_0:
   \   00000028   B58100EF           SWI      +33205
   \   0000002C   020050E3           CMP      R0,#+2
   \   00000030   0900001A           BNE      ??main_2
   \   00000034   0510A0E1           MOV      R1,R5
   \   00000038   0400A0E1           MOV      R0,R4
   \   0000003C   ........           BL       START_CONTROL
   \   00000040   460100EF           SWI      +326
   \   00000044   ........           BL       UpdateCSMname
   \   00000048   1C009FE5           LDR      R0,??main_1+0x4  ;; MAINCSM
   \   0000004C   0020A0E3           MOV      R2,#+0
   \   00000050   0D10A0E1           MOV      R1,SP
   \   00000054   070100EF           SWI      +263
   \   00000058   470100EF           SWI      +327
   \                     ??main_2:
   \   0000005C   0000A0E3           MOV      R0,#+0
   \   00000060   2CD08DE2           ADD      SP,SP,#+44
   \   00000064   3080BDE8           POP      {R4,R5,PC}       ;; return
   \                     ??main_1:
   \   00000068   ........           DC32     `?<Constant "\\304\\340\\355\\355\\373\\351 \\375\\353\\`
   \   0000006C   ........           DC32     MAINCSM
     93          #include "engine\system\addfunc.h"   //Библиотека дополнительных ф-ий

   \                                 In segment DATA_I, align 4, align-sorted
   \   char __data white[4]
   \                     white:
   \   00000000                      DS8 4
   \   00000004                      REQUIRE `?<Initializer for white>`

   \                                 In segment DATA_I, align 4, align-sorted
   \   char __data red[4]
   \                     red:
   \   00000000                      DS8 4
   \   00000004                      REQUIRE `?<Initializer for red>`

   \                                 In segment DATA_I, align 4, align-sorted
   \   char __data green[4]
   \                     green:
   \   00000000                      DS8 4
   \   00000004                      REQUIRE `?<Initializer for green>`

   \                                 In segment DATA_I, align 4, align-sorted
   \   char __data blue[4]
   \                     blue:
   \   00000000                      DS8 4
   \   00000004                      REQUIRE `?<Initializer for blue>`

   \                                 In segment DATA_I, align 4, align-sorted
   \   char __data yellow[4]
   \                     yellow:
   \   00000000                      DS8 4
   \   00000004                      REQUIRE `?<Initializer for yellow>`

   \                                 In segment DATA_I, align 4, align-sorted
   \   char __data black[4]
   \                     black:
   \   00000000                      DS8 4
   \   00000004                      REQUIRE `?<Initializer for black>`

   \                                 In segment DATA_Z, align 4, align-sorted
   \   char __data alpha[4]
   \                     alpha:
   \   00000000                      DS8 4

   \                                 In segment DATA_I, align 4, align-sorted
   \   char __data logo_color[4]
   \                     logo_color:
   \   00000000                      DS8 4
   \   00000004                      REQUIRE `?<Initializer for logo_color>`

   \                                 In segment DATA_I, align 4, align-sorted
   \   char __data logo_loadbar[4]
   \                     logo_loadbar:
   \   00000000                      DS8 4
   \   00000004                      REQUIRE `?<Initializer for logo_loadbar>`

   \                                 In segment DATA_I, align 4, align-sorted
   \   char __data white_85[4]
   \                     white_85:
   \   00000000                      DS8 4
   \   00000004                      REQUIRE `?<Initializer for white_85>`

   \                                 In segment DATA_I, align 4, align-sorted
   \   char __data msg_error[4]
   \                     msg_error:
   \   00000000                      DS8 4
   \   00000004                      REQUIRE `?<Initializer for msg_error>`

   \                                 In segment DATA_I, align 4, align-sorted
   \   char __data msg_info[4]
   \                     msg_info:
   \   00000000                      DS8 4
   \   00000004                      REQUIRE `?<Initializer for msg_info>`

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void debuglog(char *)
   \                     debuglog:
   \   00000000   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void FULLREDRAW()
   \                     FULLREDRAW:
   \   00000000   ........           LDR      R0,??DataTable7  ;; TYPEREDRAW
   \   00000004   00402DE9           PUSH     {LR}
   \   00000008   0010A0E3           MOV      R1,#+0
   \   0000000C   0010C0E5           STRB     R1,[R0, #+0]
   \   00000010   720100EF           SWI      +370
   \   00000014   0080BDE8           POP      {PC}             ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void SMARTREDRAW()
   \                     SMARTREDRAW:
   \   00000000   ........           LDR      R0,??DataTable7  ;; TYPEREDRAW
   \   00000004   00402DE9           PUSH     {LR}
   \   00000008   0110A0E3           MOV      R1,#+1
   \   0000000C   0010C0E5           STRB     R1,[R0, #+0]
   \   00000010   720100EF           SWI      +370
   \   00000014   0080BDE8           POP      {PC}             ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void fileext(char *, char *, int)
   \                     fileext:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0260A0E1           MOV      R6,R2
   \   00000010   0010A0E3           MOV      R1,#+0
   \   00000014   6B0100EF           SWI      +363
   \   00000018   0030A0E3           MOV      R3,#+0
   \   0000001C   402FA0E3           MOV      R2,#+256
   \   00000020   011082E3           ORR      R1,R2,#0x1
   \   00000024   0400A0E1           MOV      R0,R4
   \   00000028   0A0000EF           SWI      +10
   \   0000002C   0040A0E1           MOV      R4,R0
   \   00000030   0030A0E3           MOV      R3,#+0
   \   00000034   0620A0E1           MOV      R2,R6
   \   00000038   0510A0E1           MOV      R1,R5
   \   0000003C   0C0000EF           SWI      +12
   \   00000040   0010A0E3           MOV      R1,#+0
   \   00000044   0400A0E1           MOV      R0,R4
   \   00000048   0D0000EF           SWI      +13
   \   0000004C   7080BDE8           POP      {R4-R6,PC}       ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs int make_dirs(char *)
   \                     make_dirs:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   41DF4DE2           SUB      SP,SP,#+260
   \   00000008   0040A0E3           MOV      R4,#+0
   \   0000000C   0010A0E1           MOV      R1,R0
   \   00000010   04008DE2           ADD      R0,SP,#+4
   \   00000014   1A0000EF           SWI      +26
   \   00000018   04508DE2           ADD      R5,SP,#+4
   \   0000001C   070000EA           B        ??make_dirs_0
   \                     ??make_dirs_1:
   \   00000020   0160F5E5           LDRB     R6,[R5, #+1]!
   \   00000024   0000A0E3           MOV      R0,#+0
   \   00000028   0000C5E5           STRB     R0,[R5, #+0]
   \   0000002C   0D10A0E1           MOV      R1,SP
   \   00000030   04008DE2           ADD      R0,SP,#+4
   \   00000034   100000EF           SWI      +16
   \   00000038   044080E0           ADD      R4,R0,R4
   \   0000003C   0060C5E5           STRB     R6,[R5, #+0]
   \                     ??make_dirs_0:
   \   00000040   5C10A0E3           MOV      R1,#+92
   \   00000044   0500A0E1           MOV      R0,R5
   \   00000048   180000EF           SWI      +24
   \   0000004C   0050B0E1           MOVS     R5,R0
   \   00000050   F2FFFF1A           BNE      ??make_dirs_1
   \   00000054   0400A0E1           MOV      R0,R4
   \   00000058   41DF8DE2           ADD      SP,SP,#+260
   \   0000005C   7080BDE8           POP      {R4-R6,PC}       ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs int char8to16(int)
   \                     char8to16:
   \   00000000   A80050E3           CMP      R0,#+168
   \   00000004   1EFF2FB1           BXLT     LR
   \   00000008   A710E0E3           MVN      R1,#+167
   \   0000000C   000091E0           ADDS     R0,R1,R0
   \   00000010   0100A003           MOVEQ    R0,#+1
   \   00000014   1700000A           BEQ      ??char8to16_0
   \   00000018   180050E3           CMP      R0,#+24
   \   0000001C   120000AA           BGE      ??char8to16_1
   \   00000020   020050E3           CMP      R0,#+2
   \   00000024   0400A003           MOVEQ    R0,#+4
   \   00000028   1200000A           BEQ      ??char8to16_0
   \   0000002C   0A0050E3           CMP      R0,#+10
   \   00000030   0600A003           MOVEQ    R0,#+6
   \   00000034   0F00000A           BEQ      ??char8to16_0
   \   00000038   0B0050E3           CMP      R0,#+11
   \   0000003C   5600A003           MOVEQ    R0,#+86
   \   00000040   0C00000A           BEQ      ??char8to16_0
   \   00000044   100050E3           CMP      R0,#+16
   \   00000048   5100A003           MOVEQ    R0,#+81
   \   0000004C   0900000A           BEQ      ??char8to16_0
   \   00000050   120050E3           CMP      R0,#+18
   \   00000054   5400A003           MOVEQ    R0,#+84
   \   00000058   0600000A           BEQ      ??char8to16_0
   \   0000005C   170050E3           CMP      R0,#+23
   \   00000060   1EFF2F11           BXNE     LR
   \   00000064   5700A0E3           MOV      R0,#+87
   \   00000068   020000EA           B        ??char8to16_0
   \                     ??char8to16_1:
   \   0000006C   580050E3           CMP      R0,#+88
   \   00000070   1EFF2FA1           BXGE     LR
   \   00000074   080040E2           SUB      R0,R0,#+8
   \                     ??char8to16_0:
   \   00000078   400E80E2           ADD      R0,R0,#+1024
   \   0000007C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void ascii2ws(struct <unnamed> *, char const *)
   \                     ascii2ws:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0010A0E3           MOV      R1,#+0
   \   00000010   260100EF           SWI      +294
   \   00000014   030000EA           B        ??ascii2ws_0
   \                     ??ascii2ws_1:
   \   00000018   ........           BL       char8to16
   \   0000001C   0010A0E1           MOV      R1,R0
   \   00000020   0400A0E1           MOV      R0,R4
   \   00000024   1C0000EF           SWI      +28
   \                     ??ascii2ws_0:
   \   00000028   ........           LDRB     R1,[R5], #+1
   \   0000002C   0100B0E1           MOVS     R0,R1
   \   00000030   F8FFFF1A           BNE      ??ascii2ws_1
   \   00000034   3080BDE8           POP      {R4,R5,PC}       ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs int DrwImg(struct <unnamed> *, int, int, char *, char *)
   \                     DrwImg:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   2CD04DE2           SUB      SP,SP,#+44
   \   00000008   3C609DE5           LDR      R6,[SP, #+60]
   \   0000000C   0040A0E1           MOV      R4,R0
   \   00000010   B200D4E1           LDRH     R0,[R4, #+2]
   \   00000014   0350A0E1           MOV      R5,R3
   \   00000018   01002DE9           PUSH     {R0}
   \   0000001C   B030D4E1           LDRH     R3,[R4, #+0]
   \   00000020   04008DE2           ADD      R0,SP,#+4
   \   00000024   330100EF           SWI      +307
   \   00000028   0430A0E1           MOV      R3,R4
   \   0000002C   0020A0E3           MOV      R2,#+0
   \   00000030   04108DE2           ADD      R1,SP,#+4
   \   00000034   0C008DE2           ADD      R0,SP,#+12
   \   00000038   510100EF           SWI      +337
   \   0000003C   0620A0E1           MOV      R2,R6
   \   00000040   0510A0E1           MOV      R1,R5
   \   00000044   0C008DE2           ADD      R0,SP,#+12
   \   00000048   4B0100EF           SWI      +331
   \   0000004C   0C008DE2           ADD      R0,SP,#+12
   \   00000050   2A0100EF           SWI      +298
   \   00000054   30D08DE2           ADD      SP,SP,#+48
   \   00000058   7080BDE8           POP      {R4-R6,PC}       ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs struct <unnamed> *CreateIMGHDRbyLastScreen(short, short, short, short, short, short)
   \                     CreateIMGHDRbyLastScreen:
   \   00000000   F14F2DE9           PUSH     {R0,R4-R11,LR}
   \   00000004   F892DDE1           LDRSH    R9,[SP, #+40]
   \   00000008   FC62DDE1           LDRSH    R6,[SP, #+44]
   \   0000000C   01B0A0E1           MOV      R11,R1
   \   00000010   0240A0E1           MOV      R4,R2
   \   00000014   0350A0E1           MOV      R5,R3
   \   00000018   0C00A0E3           MOV      R0,#+12
   \   0000001C   140000EF           SWI      +20
   \   00000020   0070A0E1           MOV      R7,R0
   \   00000024   F000DDE1           LDRSH    R0,[SP, #+0]
   \   00000028   0480A0E1           MOV      R8,R4
   \   0000002C   000088E0           ADD      R0,R8,R0
   \   00000030   000059E1           CMP      R9,R0
   \   00000034   0B0085A0           ADDGE    R0,R5,R11
   \   00000038   000056A1           CMPGE    R6,R0
   \   0000003C   1A0000BA           BLT      ??CreateIMGHDRbyLastScreen_0
   \   00000040   B040C7E1           STRH     R4,[R7, #+0]
   \   00000044   B250C7E1           STRH     R5,[R7, #+2]
   \   00000048   0800A0E3           MOV      R0,#+8
   \   0000004C   040087E5           STR      R0,[R7, #+4]
   \   00000050   980500E0           MUL      R0,R8,R5
   \   00000054   0060A0E3           MOV      R6,#+0
   \   00000058   8000A0E1           LSL      R0,R0,#+1
   \   0000005C   140000EF           SWI      +20
   \   00000060   080087E5           STR      R0,[R7, #+8]
   \   00000064   E08000EF           SWI      +32992
   \   00000068   0040A0E1           MOV      R4,R0
   \   0000006C   010055E3           CMP      R5,#+1
   \   00000070   130000BA           BLT      ??CreateIMGHDRbyLastScreen_1
   \                     ??CreateIMGHDRbyLastScreen_2:
   \   00000074   050056E1           CMP      R6,R5
   \   00000078   110000AA           BGE      ??CreateIMGHDRbyLastScreen_1
   \   0000007C   F010DDE1           LDRSH    R1,[SP, #+0]
   \   00000080   083097E5           LDR      R3,[R7, #+8]
   \   00000084   0B0086E0           ADD      R0,R6,R11
   \   00000088   990000E0           MUL      R0,R9,R0
   \   0000008C   811084E0           ADD      R1,R4,R1, LSL #+1
   \   00000090   801081E0           ADD      R1,R1,R0, LSL #+1
   \   00000094   960800E0           MUL      R0,R6,R8
   \   00000098   8820A0E1           LSL      R2,R8,#+1
   \   0000009C   800083E0           ADD      R0,R3,R0, LSL #+1
   \   000000A0   1E0100EF           SWI      +286
   \   000000A4   016086E2           ADD      R6,R6,#+1
   \   000000A8   F1FFFFEA           B        ??CreateIMGHDRbyLastScreen_2
   \                     ??CreateIMGHDRbyLastScreen_0:
   \   000000AC   0100A0E3           MOV      R0,#+1
   \   000000B0   140000EF           SWI      +20
   \   000000B4   10109FE5           LDR      R1,??CreateIMGHDRbyLastScreen_3  ;; `?<Constant "\\316\\370\\350\\341\\352\\340!\\n\\324\\36_1`
   \   000000B8   080087E5           STR      R0,[R7, #+8]
   \   000000BC   0100A0E3           MOV      R0,#+1
   \   000000C0   480100EF           SWI      +328
   \                     ??CreateIMGHDRbyLastScreen_1:
   \   000000C4   0700A0E1           MOV      R0,R7
   \   000000C8   F28FBDE8           POP      {R1,R4-R11,PC}   ;; return
   \                     ??CreateIMGHDRbyLastScreen_3:
   \   000000CC   ........           DC32     `?<Constant "\\316\\370\\350\\341\\352\\340!\\n\\324\\36_1`

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs struct <unnamed> *CreateIMGHDRbyfragmentIMGHDR(struct <unnamed> *, short, short, short, short)
   \                     CreateIMGHDRbyfragmentIMGHDR:
   \   00000000   F24F2DE9           PUSH     {R1,R4-R11,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0280A0E1           MOV      R8,R2
   \   0000000C   F8B2DDE1           LDRSH    R11,[SP, #+40]
   \   00000010   03A0A0E1           MOV      R10,R3
   \   00000014   0C00A0E3           MOV      R0,#+12
   \   00000018   140000EF           SWI      +20
   \   0000001C   F010DDE1           LDRSH    R1,[SP, #+0]
   \   00000020   0050A0E1           MOV      R5,R0
   \   00000024   B000D4E1           LDRH     R0,[R4, #+0]
   \   00000028   0A60A0E1           MOV      R6,R10
   \   0000002C   011086E0           ADD      R1,R6,R1
   \   00000030   010050E1           CMP      R0,R1
   \   00000034   270000BA           BLT      ??CreateIMGHDRbyfragmentIMGHDR_0
   \   00000038   B200D4E1           LDRH     R0,[R4, #+2]
   \   0000003C   0B70A0E1           MOV      R7,R11
   \   00000040   081087E0           ADD      R1,R7,R8
   \   00000044   010050E1           CMP      R0,R1
   \   00000048   220000BA           BLT      ??CreateIMGHDRbyfragmentIMGHDR_0
   \   0000004C   040094E5           LDR      R0,[R4, #+4]
   \   00000050   050050E3           CMP      R0,#+5
   \   00000054   0190A003           MOVEQ    R9,#+1
   \   00000058   0400000A           BEQ      ??CreateIMGHDRbyfragmentIMGHDR_1
   \   0000005C   080050E3           CMP      R0,#+8
   \   00000060   0290A003           MOVEQ    R9,#+2
   \   00000064   0100000A           BEQ      ??CreateIMGHDRbyfragmentIMGHDR_1
   \   00000068   0A0050E3           CMP      R0,#+10
   \   0000006C   0490A003           MOVEQ    R9,#+4
   \                     ??CreateIMGHDRbyfragmentIMGHDR_1:
   \   00000070   B0A0C5E1           STRH     R10,[R5, #+0]
   \   00000074   B2B0C5E1           STRH     R11,[R5, #+2]
   \   00000078   040085E5           STR      R0,[R5, #+4]
   \   0000007C   960700E0           MUL      R0,R6,R7
   \   00000080   00A0A0E3           MOV      R10,#+0
   \   00000084   990000E0           MUL      R0,R9,R0
   \   00000088   140000EF           SWI      +20
   \   0000008C   080085E5           STR      R0,[R5, #+8]
   \   00000090   01005BE3           CMP      R11,#+1
   \   00000094   150000BA           BLT      ??CreateIMGHDRbyfragmentIMGHDR_2
   \                     ??CreateIMGHDRbyfragmentIMGHDR_3:
   \   00000098   07005AE1           CMP      R10,R7
   \   0000009C   130000AA           BGE      ??CreateIMGHDRbyfragmentIMGHDR_2
   \   000000A0   B030D4E1           LDRH     R3,[R4, #+0]
   \   000000A4   F0B0DDE1           LDRSH    R11,[SP, #+0]
   \   000000A8   08C094E5           LDR      R12,[R4, #+8]
   \   000000AC   990600E0           MUL      R0,R9,R6
   \   000000B0   930901E0           MUL      R1,R3,R9
   \   000000B4   0020A0E1           MOV      R2,R0
   \   000000B8   08308AE0           ADD      R3,R10,R8
   \   000000BC   99CB2BE0           MLA      R11,R9,R11,R12
   \   000000C0   93B121E0           MLA      R1,R3,R1,R11
   \   000000C4   083095E5           LDR      R3,[R5, #+8]
   \   000000C8   9A3020E0           MLA      R0,R10,R0,R3
   \   000000CC   01A08AE2           ADD      R10,R10,#+1
   \   000000D0   1E0100EF           SWI      +286
   \   000000D4   EFFFFFEA           B        ??CreateIMGHDRbyfragmentIMGHDR_3
   \                     ??CreateIMGHDRbyfragmentIMGHDR_0:
   \   000000D8   0100A0E3           MOV      R0,#+1
   \   000000DC   140000EF           SWI      +20
   \   000000E0   10109FE5           LDR      R1,??CreateIMGHDRbyfragmentIMGHDR_4  ;; `?<Constant "\\316\\370\\350\\341\\352\\340!\\n\\324\\36`
   \   000000E4   080085E5           STR      R0,[R5, #+8]
   \   000000E8   0100A0E3           MOV      R0,#+1
   \   000000EC   480100EF           SWI      +328
   \                     ??CreateIMGHDRbyfragmentIMGHDR_2:
   \   000000F0   0500A0E1           MOV      R0,R5
   \   000000F4   F28FBDE8           POP      {R1,R4-R11,PC}   ;; return
   \                     ??CreateIMGHDRbyfragmentIMGHDR_4:
   \   000000F8   ........           DC32     `?<Constant "\\316\\370\\350\\341\\352\\340!\\n\\324\\36`

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void MemFreeOfIMGHDR(struct <unnamed> *)
   \                     MemFreeOfIMGHDR:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   150000EF           SWI      +21
   \   0000000C   080094E5           LDR      R0,[R4, #+8]
   \   00000010   150000EF           SWI      +21
   \   00000014   1080BDE8           POP      {R4,PC}          ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void DrawStringV2(char *, int, int, int, int, int, int, char const *, char const *)
   \                     DrawStringV2:
   \   00000000   F64F2DE9           PUSH     {R1,R2,R4-R11,LR}
   \   00000004   2C609DE5           LDR      R6,[SP, #+44]
   \   00000008   30709DE5           LDR      R7,[SP, #+48]
   \   0000000C   34809DE5           LDR      R8,[SP, #+52]
   \   00000010   38909DE5           LDR      R9,[SP, #+56]
   \   00000014   3CB09DE5           LDR      R11,[SP, #+60]
   \   00000018   0040A0E1           MOV      R4,R0
   \   0000001C   0350A0E1           MOV      R5,R3
   \   00000020   1B0000EF           SWI      +27
   \   00000024   050080E2           ADD      R0,R0,#+5
   \   00000028   250100EF           SWI      +293
   \   0000002C   00A0A0E1           MOV      R10,R0
   \   00000030   0410A0E1           MOV      R1,R4
   \   00000034   ........           BL       ascii2ws
   \   00000038   00082DE9           PUSH     {R11}
   \   0000003C   00022DE9           PUSH     {R9}
   \   00000040   00012DE9           PUSH     {R8}
   \   00000044   80002DE9           PUSH     {R7}
   \   00000048   40002DE9           PUSH     {R6}
   \   0000004C   18209DE5           LDR      R2,[SP, #+24]
   \   00000050   14109DE5           LDR      R1,[SP, #+20]
   \   00000054   0530A0E1           MOV      R3,R5
   \   00000058   0A00A0E1           MOV      R0,R10
   \   0000005C   4C0100EF           SWI      +332
   \   00000060   0A00A0E1           MOV      R0,R10
   \   00000064   290100EF           SWI      +297
   \   00000068   1CD08DE2           ADD      SP,SP,#+28
   \   0000006C   F08FBDE8           POP      {R4-R11,PC}      ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void ShowMessage(char *, int, int)
   \                     ShowMessage:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   80D04DE2           SUB      SP,SP,#+128
   \   00000008   0030A0E1           MOV      R3,R0
   \   0000000C   ........           LDR      R5,??DataTable4  ;; black
   \   00000010   0140A0E1           MOV      R4,R1
   \   00000014   48119FE5           LDR      R1,??ShowMessage_0  ;; `?<Constant "%s\\n%s">`
   \   00000018   000052E3           CMP      R2,#+0
   \   0000001C   0400001A           BNE      ??ShowMessage_1
   \   00000020   40219FE5           LDR      R2,??ShowMessage_0+0x4  ;; `?<Constant "\\316\\370\\350\\341\\352\\340 (x)">`
   \   00000024   0D00A0E1           MOV      R0,SP
   \   00000028   160000EF           SWI      +22
   \   0000002C   38019FE5           LDR      R0,??ShowMessage_0+0x8  ;; msg_error
   \   00000030   050000EA           B        ??ShowMessage_2
   \                     ??ShowMessage_1:
   \   00000034   010052E3           CMP      R2,#+1
   \   00000038   0E00001A           BNE      ??ShowMessage_3
   \   0000003C   2C219FE5           LDR      R2,??ShowMessage_0+0xC  ;; `?<Constant "\\310\\355\\364\\356 (!)">`
   \   00000040   0D00A0E1           MOV      R0,SP
   \   00000044   160000EF           SWI      +22
   \   00000048   24019FE5           LDR      R0,??ShowMessage_0+0x10  ;; msg_info
   \                     ??ShowMessage_2:
   \   0000004C   9A30A0E3           MOV      R3,#+154
   \   00000050   01002DE9           PUSH     {R0}
   \   00000054   7A20A0E3           MOV      R2,#+122
   \   00000058   0510A0E3           MOV      R1,#+5
   \   0000005C   0500A0E1           MOV      R0,R5
   \   00000060   01002DE9           PUSH     {R0}
   \   00000064   0000A0E3           MOV      R0,#+0
   \   00000068   01002DE9           PUSH     {R0}
   \   0000006C   0500A0E3           MOV      R0,#+5
   \   00000070   B40100EF           SWI      +436
   \   00000074   0CD08DE2           ADD      SP,SP,#+12
   \                     ??ShowMessage_3:
   \   00000078   0500A0E1           MOV      R0,R5
   \   0000007C   01002DE9           PUSH     {R0}
   \   00000080   0530A0E3           MOV      R3,#+5
   \   00000084   0720A0E3           MOV      R2,#+7
   \   00000088   0510A0E3           MOV      R1,#+5
   \   0000008C   0000A0E3           MOV      R0,#+0
   \   00000090   01002DE9           PUSH     {R0}
   \   00000094   0300A0E3           MOV      R0,#+3
   \   00000098   B30100EF           SWI      +435
   \   0000009C   0500A0E1           MOV      R0,R5
   \   000000A0   01002DE9           PUSH     {R0}
   \   000000A4   0730A0E3           MOV      R3,#+7
   \   000000A8   0520A0E3           MOV      R2,#+5
   \   000000AC   0310A0E3           MOV      R1,#+3
   \   000000B0   0000A0E3           MOV      R0,#+0
   \   000000B4   01002DE9           PUSH     {R0}
   \   000000B8   0200A0E1           MOV      R0,R2
   \   000000BC   B30100EF           SWI      +435
   \   000000C0   0500A0E1           MOV      R0,R5
   \   000000C4   01002DE9           PUSH     {R0}
   \   000000C8   9A30A0E3           MOV      R3,#+154
   \   000000CC   7C20A0E3           MOV      R2,#+124
   \   000000D0   0310A0E1           MOV      R1,R3
   \   000000D4   0000A0E3           MOV      R0,#+0
   \   000000D8   01002DE9           PUSH     {R0}
   \   000000DC   7800A0E3           MOV      R0,#+120
   \   000000E0   B30100EF           SWI      +435
   \   000000E4   0500A0E1           MOV      R0,R5
   \   000000E8   01002DE9           PUSH     {R0}
   \   000000EC   9C30A0E3           MOV      R3,#+156
   \   000000F0   7A20A0E3           MOV      R2,#+122
   \   000000F4   9810A0E3           MOV      R1,#+152
   \   000000F8   0000A0E3           MOV      R0,#+0
   \   000000FC   01002DE9           PUSH     {R0}
   \   00000100   0200A0E1           MOV      R0,R2
   \   00000104   B30100EF           SWI      +435
   \   00000108   ........           LDR      R0,??DataTable5  ;; alpha
   \   0000010C   7830A0E3           MOV      R3,#+120
   \   00000110   01002DE9           PUSH     {R0}
   \   00000114   20002DE9           PUSH     {R5}
   \   00000118   0720A0E3           MOV      R2,#+7
   \   0000011C   0000A0E3           MOV      R0,#+0
   \   00000120   01002DE9           PUSH     {R0}
   \   00000124   10002DE9           PUSH     {R4}
   \   00000128   0210A0E1           MOV      R1,R2
   \   0000012C   9800A0E3           MOV      R0,#+152
   \   00000130   01002DE9           PUSH     {R0}
   \   00000134   34008DE2           ADD      R0,SP,#+52
   \   00000138   ........           BL       DrawStringV2
   \   0000013C   ........           LDR      R0,??DataTable6  ;; MESSAGEWINDOW
   \   00000140   34D08DE2           ADD      SP,SP,#+52
   \   00000144   0110A0E3           MOV      R1,#+1
   \   00000148   001080E5           STR      R1,[R0, #+0]
   \   0000014C   ........           LDR      R0,??DataTable7  ;; TYPEREDRAW
   \   00000150   0010A0E3           MOV      R1,#+0
   \   00000154   0010C0E5           STRB     R1,[R0, #+0]
   \   00000158   720100EF           SWI      +370
   \   0000015C   80D08DE2           ADD      SP,SP,#+128
   \   00000160   3080BDE8           POP      {R4,R5,PC}       ;; return
   \                     ??ShowMessage_0:
   \   00000164   ........           DC32     `?<Constant "%s\\n%s">`
   \   00000168   ........           DC32     `?<Constant "\\316\\370\\350\\341\\352\\340 (x)">`
   \   0000016C   ........           DC32     msg_error
   \   00000170   ........           DC32     `?<Constant "\\310\\355\\364\\356 (!)">`
   \   00000174   ........           DC32     msg_info

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void MEMORYFREE(int)
   \                     MEMORYFREE:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   1D0054E3           CMP      R4,#+29
   \   0000000C   020000BA           BLT      ??MEMORYFREE_0
   \   00000010   ........           LDR      R0,??DataTable8  ;; bgm_img
   \   00000014   000090E5           LDR      R0,[R0, #+0]
   \   00000018   ........           BL       MemFreeOfIMGHDR
   \                     ??MEMORYFREE_0:
   \   0000001C   1E0054E3           CMP      R4,#+30
   \   00000020   020000BA           BLT      ??MEMORYFREE_1
   \   00000024   ........           LDR      R0,??DataTable9  ;; bgg_img
   \   00000028   000090E5           LDR      R0,[R0, #+0]
   \   0000002C   ........           BL       MemFreeOfIMGHDR
   \                     ??MEMORYFREE_1:
   \   00000030   1F0054E3           CMP      R4,#+31
   \   00000034   030000BA           BLT      ??MEMORYFREE_2
   \   00000038   ........           LDR      R0,??DataTable10  ;; sudoku_img
   \   0000003C   000090E5           LDR      R0,[R0, #+0]
   \   00000040   ........           BL       MemFreeOfIMGHDR
   \   00000044   010000EA           B        ??MEMORYFREE_3
   \                     ??MEMORYFREE_2:
   \   00000048   1E0054E3           CMP      R4,#+30
   \   0000004C   000000BA           BLT      ??MEMORYFREE_4
   \                     ??MEMORYFREE_3:
   \   00000050   1D40A0E3           MOV      R4,#+29
   \                     ??MEMORYFREE_4:
   \   00000054   0150A0E3           MOV      R5,#+1
   \   00000058   020054E3           CMP      R4,#+2
   \   0000005C   050000AA           BGE      ??MEMORYFREE_5
   \   00000060   3080BDE8           POP      {R4,R5,PC}
   \                     ??MEMORYFREE_6:
   \   00000064   ........           LDR      R0,??DataTable11  ;; dig_img
   \   00000068   050180E0           ADD      R0,R0,R5, LSL #+2
   \   0000006C   040010E5           LDR      R0,[R0, #-4]
   \   00000070   015085E2           ADD      R5,R5,#+1
   \   00000074   ........           BL       MemFreeOfIMGHDR
   \                     ??MEMORYFREE_5:
   \   00000078   040055E1           CMP      R5,R4
   \   0000007C   F8FFFFBA           BLT      ??MEMORYFREE_6
   \   00000080   3080BDE8           POP      {R4,R5,PC}       ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void OpenFile(char *, void *)
   \                     OpenFile:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   400FA0E3           MOV      R0,#+256
   \   00000010   250100EF           SWI      +293
   \   00000014   0060A0E1           MOV      R6,R0
   \   00000018   0410A0E1           MOV      R1,R4
   \   0000001C   240100EF           SWI      +292
   \   00000020   0520A0E1           MOV      R2,R5
   \   00000024   0010A0E3           MOV      R1,#+0
   \   00000028   0600A0E1           MOV      R0,R6
   \   0000002C   940000EF           SWI      +148
   \   00000030   0600A0E1           MOV      R0,R6
   \   00000034   290100EF           SWI      +297
   \   00000038   7080BDE8           POP      {R4-R6,PC}       ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void DrawSoftHeader(char *, char *, char *, int, int, char *, char *, char *, char *)
   \                     DrawSoftHeader:
   \   00000000   F74F2DE9           PUSH     {R0-R2,R4-R11,LR}
   \   00000004   88139FE5           LDR      R1,??DrawSoftHeader_0  ;; `?<Constant "%t">_1`
   \   00000008   1CD04DE2           SUB      SP,SP,#+28
   \   0000000C   0020D1E5           LDRB     R2,[R1, #0]
   \   00000010   58509DE5           LDR      R5,[SP, #+88]
   \   00000014   5C909DE5           LDR      R9,[SP, #+92]
   \   00000018   04008DE2           ADD      R0,SP,#+4
   \   0000001C   0020C0E5           STRB     R2,[R0, #+0]
   \   00000020   0120D1E5           LDRB     R2,[R1, #+1]
   \   00000024   0340A0E1           MOV      R4,R3
   \   00000028   0120C0E5           STRB     R2,[R0, #+1]
   \   0000002C   0220D1E5           LDRB     R2,[R1, #+2]
   \   00000030   0220C0E5           STRB     R2,[R0, #+2]
   \   00000034   2000A0E3           MOV      R0,#+32
   \   00000038   250100EF           SWI      +293
   \   0000003C   0060A0E1           MOV      R6,R0
   \   00000040   2000A0E3           MOV      R0,#+32
   \   00000044   250100EF           SWI      +293
   \   00000048   0070A0E1           MOV      R7,R0
   \   0000004C   2000A0E3           MOV      R0,#+32
   \   00000050   250100EF           SWI      +293
   \   00000054   1C209DE5           LDR      R2,[SP, #+28]
   \   00000058   0080A0E1           MOV      R8,R0
   \   0000005C   04108DE2           ADD      R1,SP,#+4
   \   00000060   0600A0E1           MOV      R0,R6
   \   00000064   240100EF           SWI      +292
   \   00000068   20209DE5           LDR      R2,[SP, #+32]
   \   0000006C   04108DE2           ADD      R1,SP,#+4
   \   00000070   0700A0E1           MOV      R0,R7
   \   00000074   240100EF           SWI      +292
   \   00000078   24209DE5           LDR      R2,[SP, #+36]
   \   0000007C   04108DE2           ADD      R1,SP,#+4
   \   00000080   0800A0E1           MOV      R0,R8
   \   00000084   240100EF           SWI      +292
   \   00000088   0410A0E1           MOV      R1,R4
   \   0000008C   0600A0E1           MOV      R0,R6
   \   00000090   080200EF           SWI      +520
   \   00000094   10008DE5           STR      R0,[SP, #+16]
   \   00000098   0410A0E1           MOV      R1,R4
   \   0000009C   0700A0E1           MOV      R0,R7
   \   000000A0   080200EF           SWI      +520
   \   000000A4   14008DE5           STR      R0,[SP, #+20]
   \   000000A8   4C109DE5           LDR      R1,[SP, #+76]
   \   000000AC   0800A0E1           MOV      R0,R8
   \   000000B0   080200EF           SWI      +520
   \   000000B4   18008DE5           STR      R0,[SP, #+24]
   \   000000B8   0400A0E1           MOV      R0,R4
   \   000000BC   C50100EF           SWI      +453
   \   000000C0   0C008DE5           STR      R0,[SP, #+12]
   \   000000C4   4C009DE5           LDR      R0,[SP, #+76]
   \   000000C8   C50100EF           SWI      +453
   \   000000CC   08008DE5           STR      R0,[SP, #+8]
   \   000000D0   24009DE5           LDR      R0,[SP, #+36]
   \   000000D4   000050E3           CMP      R0,#+0
   \   000000D8   2100000A           BEQ      ??DrawSoftHeader_1
   \   000000DC   08009DE5           LDR      R0,[SP, #+8]
   \   000000E0   00A0A0E3           MOV      R10,#+0
   \   000000E4   02B080E2           ADD      R11,R0,#+2
   \   000000E8   01005BE3           CMP      R11,#+1
   \   000000EC   1A0000AA           BGE      ??DrawSoftHeader_2
   \   000000F0   1B0000EA           B        ??DrawSoftHeader_1
   \                     ??DrawSoftHeader_3:
   \   000000F4   0010D9E5           LDRB     R1,[R9, #+0]
   \   000000F8   0A30A0E1           MOV      R3,R10
   \   000000FC   7F20A0E3           MOV      R2,#+127
   \   00000100   0010CDE5           STRB     R1,[SP, #+0]
   \   00000104   0110D9E5           LDRB     R1,[R9, #+1]
   \   00000108   0110CDE5           STRB     R1,[SP, #+1]
   \   0000010C   0210D9E5           LDRB     R1,[R9, #+2]
   \   00000110   0210CDE5           STRB     R1,[SP, #+2]
   \   00000114   6410A0E3           MOV      R1,#+100
   \   00000118   910A00E0           MUL      R0,R1,R10
   \   0000011C   0B10A0E1           MOV      R1,R11
   \   00000120   ........           _BLF     ??div32_a,??rA??div32_a
   \   00000124   640061E2           RSB      R0,R1,#+100
   \   00000128   0300CDE5           STRB     R0,[SP, #+3]
   \   0000012C   0000A0E3           MOV      R0,#+0
   \   00000130   01002DE9           PUSH     {R0}
   \   00000134   0A10A0E1           MOV      R1,R10
   \   00000138   01A08AE2           ADD      R10,R10,#+1
   \   0000013C   04008DE2           ADD      R0,SP,#+4
   \   00000140   01002DE9           PUSH     {R0}
   \   00000144   0000A0E3           MOV      R0,#+0
   \   00000148   01002DE9           PUSH     {R0}
   \   0000014C   01002DE9           PUSH     {R0}
   \   00000150   01002DE9           PUSH     {R0}
   \   00000154   500100EF           SWI      +336
   \   00000158   14D08DE2           ADD      SP,SP,#+20
   \                     ??DrawSoftHeader_2:
   \   0000015C   0B005AE1           CMP      R10,R11
   \   00000160   E3FFFFBA           BLT      ??DrawSoftHeader_3
   \                     ??DrawSoftHeader_1:
   \   00000164   0C009DE5           LDR      R0,[SP, #+12]
   \   00000168   9E9060E2           RSB      R9,R0,#+158
   \   0000016C   1C009DE5           LDR      R0,[SP, #+28]
   \   00000170   000050E3           CMP      R0,#+0
   \   00000174   2000000A           BEQ      ??DrawSoftHeader_4
   \   00000178   00A0A0E3           MOV      R10,#+0
   \                     ??DrawSoftHeader_5:
   \   0000017C   0010D5E5           LDRB     R1,[R5, #+0]
   \   00000180   0000A0E3           MOV      R0,#+0
   \   00000184   0010CDE5           STRB     R1,[SP, #+0]
   \   00000188   0110D5E5           LDRB     R1,[R5, #+1]
   \   0000018C   0110CDE5           STRB     R1,[SP, #+1]
   \   00000190   0210D5E5           LDRB     R1,[R5, #+2]
   \   00000194   0210CDE5           STRB     R1,[SP, #+2]
   \   00000198   6410A0E3           MOV      R1,#+100
   \   0000019C   910A02E0           MUL      R2,R1,R10
   \   000001A0   F0119FE5           LDR      R1,??DrawSoftHeader_0+0x4  ;; 0xffffffffa0a0a0a1
   \   000001A4   9132CBE0           SMULL    R3,R11,R1,R2
   \   000001A8   9E30A0E3           MOV      R3,#+158
   \   000001AC   02B08BE0           ADD      R11,R11,R2
   \   000001B0   CBB2A0E1           ASR      R11,R11,#+5
   \   000001B4   A21F8BE0           ADD      R1,R11,R2, LSR #+31
   \   000001B8   641061E2           RSB      R1,R1,#+100
   \   000001BC   0310CDE5           STRB     R1,[SP, #+3]
   \   000001C0   01002DE9           PUSH     {R0}
   \   000001C4   0A20A0E1           MOV      R2,R10
   \   000001C8   0910A0E1           MOV      R1,R9
   \   000001CC   04008DE2           ADD      R0,SP,#+4
   \   000001D0   01002DE9           PUSH     {R0}
   \   000001D4   0000A0E3           MOV      R0,#+0
   \   000001D8   01002DE9           PUSH     {R0}
   \   000001DC   01002DE9           PUSH     {R0}
   \   000001E0   01002DE9           PUSH     {R0}
   \   000001E4   0A00A0E1           MOV      R0,R10
   \   000001E8   01A08AE2           ADD      R10,R10,#+1
   \   000001EC   500100EF           SWI      +336
   \   000001F0   33005AE3           CMP      R10,#+51
   \   000001F4   14D08DE2           ADD      SP,SP,#+20
   \   000001F8   DFFFFFBA           BLT      ??DrawSoftHeader_5
   \                     ??DrawSoftHeader_4:
   \   000001FC   20A09DE5           LDR      R10,[SP, #+32]
   \   00000200   00005AE3           CMP      R10,#+0
   \   00000204   1F00000A           BEQ      ??DrawSoftHeader_6
   \   00000208   00B0A0E3           MOV      R11,#+0
   \                     ??DrawSoftHeader_7:
   \   0000020C   0010D5E5           LDRB     R1,[R5, #+0]
   \   00000210   4C008BE2           ADD      R0,R11,#+76
   \   00000214   0010CDE5           STRB     R1,[SP, #+0]
   \   00000218   0110D5E5           LDRB     R1,[R5, #+1]
   \   0000021C   0110CDE5           STRB     R1,[SP, #+1]
   \   00000220   0210D5E5           LDRB     R1,[R5, #+2]
   \   00000224   0210CDE5           STRB     R1,[SP, #+2]
   \   00000228   6410A0E3           MOV      R1,#+100
   \   0000022C   910B02E0           MUL      R2,R1,R11
   \   00000230   60119FE5           LDR      R1,??DrawSoftHeader_0+0x4  ;; 0xffffffffa0a0a0a1
   \   00000234   01B08BE2           ADD      R11,R11,#+1
   \   00000238   9132CCE0           SMULL    R3,R12,R1,R2
   \   0000023C   9E30A0E3           MOV      R3,#+158
   \   00000240   02C08CE0           ADD      R12,R12,R2
   \   00000244   CCC2A0E1           ASR      R12,R12,#+5
   \   00000248   A21F8CE0           ADD      R1,R12,R2, LSR #+31
   \   0000024C   0310CDE5           STRB     R1,[SP, #+3]
   \   00000250   0010A0E3           MOV      R1,#+0
   \   00000254   02002DE9           PUSH     {R1}
   \   00000258   0020A0E1           MOV      R2,R0
   \   0000025C   04108DE2           ADD      R1,SP,#+4
   \   00000260   02002DE9           PUSH     {R1}
   \   00000264   0010A0E3           MOV      R1,#+0
   \   00000268   02002DE9           PUSH     {R1}
   \   0000026C   02002DE9           PUSH     {R1}
   \   00000270   02002DE9           PUSH     {R1}
   \   00000274   0910A0E1           MOV      R1,R9
   \   00000278   500100EF           SWI      +336
   \   0000027C   34005BE3           CMP      R11,#+52
   \   00000280   14D08DE2           ADD      SP,SP,#+20
   \   00000284   E0FFFFBA           BLT      ??DrawSoftHeader_7
   \                     ??DrawSoftHeader_6:
   \   00000288   1C009DE5           LDR      R0,[SP, #+28]
   \   0000028C   000050E3           CMP      R0,#+0
   \   00000290   1000000A           BEQ      ??DrawSoftHeader_8
   \   00000294   0000A0E3           MOV      R0,#+0
   \   00000298   01002DE9           PUSH     {R0}
   \   0000029C   54009DE5           LDR      R0,[SP, #+84]
   \   000002A0   0920A0E1           MOV      R2,R9
   \   000002A4   01002DE9           PUSH     {R0}
   \   000002A8   0210A0E3           MOV      R1,#+2
   \   000002AC   0000A0E3           MOV      R0,#+0
   \   000002B0   01002DE9           PUSH     {R0}
   \   000002B4   0400A0E1           MOV      R0,R4
   \   000002B8   01002DE9           PUSH     {R0}
   \   000002BC   9E00A0E3           MOV      R0,#+158
   \   000002C0   01002DE9           PUSH     {R0}
   \   000002C4   24009DE5           LDR      R0,[SP, #+36]
   \   000002C8   053080E2           ADD      R3,R0,#+5
   \   000002CC   0600A0E1           MOV      R0,R6
   \   000002D0   4C0100EF           SWI      +332
   \   000002D4   14D08DE2           ADD      SP,SP,#+20
   \                     ??DrawSoftHeader_8:
   \   000002D8   00005AE3           CMP      R10,#+0
   \   000002DC   0F00000A           BEQ      ??DrawSoftHeader_9
   \   000002E0   0000A0E3           MOV      R0,#+0
   \   000002E4   01002DE9           PUSH     {R0}
   \   000002E8   54009DE5           LDR      R0,[SP, #+84]
   \   000002EC   8030A0E3           MOV      R3,#+128
   \   000002F0   01002DE9           PUSH     {R0}
   \   000002F4   0920A0E1           MOV      R2,R9
   \   000002F8   0000A0E3           MOV      R0,#+0
   \   000002FC   01002DE9           PUSH     {R0}
   \   00000300   10002DE9           PUSH     {R4}
   \   00000304   9E00A0E3           MOV      R0,#+158
   \   00000308   01002DE9           PUSH     {R0}
   \   0000030C   28009DE5           LDR      R0,[SP, #+40]
   \   00000310   7E1060E2           RSB      R1,R0,#+126
   \   00000314   0700A0E1           MOV      R0,R7
   \   00000318   4C0100EF           SWI      +332
   \   0000031C   14D08DE2           ADD      SP,SP,#+20
   \                     ??DrawSoftHeader_9:
   \   00000320   24009DE5           LDR      R0,[SP, #+36]
   \   00000324   000050E3           CMP      R0,#+0
   \   00000328   1100000A           BEQ      ??DrawSoftHeader_10
   \   0000032C   0000A0E3           MOV      R0,#+0
   \   00000330   01002DE9           PUSH     {R0}
   \   00000334   58009DE5           LDR      R0,[SP, #+88]
   \   00000338   0020A0E3           MOV      R2,#+0
   \   0000033C   01002DE9           PUSH     {R0}
   \   00000340   0010A0E3           MOV      R1,#+0
   \   00000344   0000A0E3           MOV      R0,#+0
   \   00000348   01002DE9           PUSH     {R0}
   \   0000034C   58009DE5           LDR      R0,[SP, #+88]
   \   00000350   01002DE9           PUSH     {R0}
   \   00000354   18009DE5           LDR      R0,[SP, #+24]
   \   00000358   020080E2           ADD      R0,R0,#+2
   \   0000035C   01002DE9           PUSH     {R0}
   \   00000360   2C009DE5           LDR      R0,[SP, #+44]
   \   00000364   023080E2           ADD      R3,R0,#+2
   \   00000368   0800A0E1           MOV      R0,R8
   \   0000036C   4C0100EF           SWI      +332
   \   00000370   14D08DE2           ADD      SP,SP,#+20
   \                     ??DrawSoftHeader_10:
   \   00000374   0600A0E1           MOV      R0,R6
   \   00000378   290100EF           SWI      +297
   \   0000037C   0700A0E1           MOV      R0,R7
   \   00000380   290100EF           SWI      +297
   \   00000384   0800A0E1           MOV      R0,R8
   \   00000388   290100EF           SWI      +297
   \   0000038C   28D08DE2           ADD      SP,SP,#+40
   \   00000390   F08FBDE8           POP      {R4-R11,PC}      ;; return
   \                     ??DrawSoftHeader_0:
   \   00000394   ........           DC32     `?<Constant "%t">_1`
   \   00000398   A1A0A0A0           DC32     0xffffffffa0a0a0a1

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void DrawRightSoft(char *, int, char *, char *)
   \                     DrawRightSoft:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000004   0140A0E1           MOV      R4,R1
   \   00000008   1C119FE5           LDR      R1,??DrawRightSoft_0  ;; `?<Constant "%t">`
   \   0000000C   08D04DE2           SUB      SP,SP,#+8
   \   00000010   0250A0E1           MOV      R5,R2
   \   00000014   0020D1E5           LDRB     R2,[R1, #0]
   \   00000018   0080A0E1           MOV      R8,R0
   \   0000001C   04008DE2           ADD      R0,SP,#+4
   \   00000020   0020C0E5           STRB     R2,[R0, #+0]
   \   00000024   0120D1E5           LDRB     R2,[R1, #+1]
   \   00000028   0360A0E1           MOV      R6,R3
   \   0000002C   00A0A0E3           MOV      R10,#+0
   \   00000030   0120C0E5           STRB     R2,[R0, #+1]
   \   00000034   0220D1E5           LDRB     R2,[R1, #+2]
   \   00000038   0220C0E5           STRB     R2,[R0, #+2]
   \   0000003C   2000A0E3           MOV      R0,#+32
   \   00000040   250100EF           SWI      +293
   \   00000044   0070A0E1           MOV      R7,R0
   \   00000048   0820A0E1           MOV      R2,R8
   \   0000004C   04108DE2           ADD      R1,SP,#+4
   \   00000050   240100EF           SWI      +292
   \   00000054   0410A0E1           MOV      R1,R4
   \   00000058   0700A0E1           MOV      R0,R7
   \   0000005C   080200EF           SWI      +520
   \   00000060   0080A0E1           MOV      R8,R0
   \   00000064   0400A0E1           MOV      R0,R4
   \   00000068   C50100EF           SWI      +453
   \   0000006C   0090A0E1           MOV      R9,R0
   \                     ??DrawRightSoft_1:
   \   00000070   0010D6E5           LDRB     R1,[R6, #+0]
   \   00000074   33008AE2           ADD      R0,R10,#+51
   \   00000078   0010CDE5           STRB     R1,[SP, #+0]
   \   0000007C   0110D6E5           LDRB     R1,[R6, #+1]
   \   00000080   0110CDE5           STRB     R1,[SP, #+1]
   \   00000084   0210D6E5           LDRB     R1,[R6, #+2]
   \   00000088   0210CDE5           STRB     R1,[SP, #+2]
   \   0000008C   6410A0E3           MOV      R1,#+100
   \   00000090   910A02E0           MUL      R2,R1,R10
   \   00000094   94109FE5           LDR      R1,??DrawRightSoft_0+0x4  ;; 0x6bca1af3
   \   00000098   01A08AE2           ADD      R10,R10,#+1
   \   0000009C   9132CBE0           SMULL    R3,R11,R1,R2
   \   000000A0   9E30A0E3           MOV      R3,#+158
   \   000000A4   CBB2A0E1           ASR      R11,R11,#+5
   \   000000A8   A21F8BE0           ADD      R1,R11,R2, LSR #+31
   \   000000AC   0310CDE5           STRB     R1,[SP, #+3]
   \   000000B0   0010A0E3           MOV      R1,#+0
   \   000000B4   02002DE9           PUSH     {R1}
   \   000000B8   9EB069E2           RSB      R11,R9,#+158
   \   000000BC   0020A0E1           MOV      R2,R0
   \   000000C0   04108DE2           ADD      R1,SP,#+4
   \   000000C4   02002DE9           PUSH     {R1}
   \   000000C8   0010A0E3           MOV      R1,#+0
   \   000000CC   02002DE9           PUSH     {R1}
   \   000000D0   02002DE9           PUSH     {R1}
   \   000000D4   02002DE9           PUSH     {R1}
   \   000000D8   0B10A0E1           MOV      R1,R11
   \   000000DC   500100EF           SWI      +336
   \   000000E0   4D005AE3           CMP      R10,#+77
   \   000000E4   14D08DE2           ADD      SP,SP,#+20
   \   000000E8   E0FFFFBA           BLT      ??DrawRightSoft_1
   \   000000EC   0000A0E3           MOV      R0,#+0
   \   000000F0   01002DE9           PUSH     {R0}
   \   000000F4   20002DE9           PUSH     {R5}
   \   000000F8   01002DE9           PUSH     {R0}
   \   000000FC   10002DE9           PUSH     {R4}
   \   00000100   8030A0E3           MOV      R3,#+128
   \   00000104   9E00A0E3           MOV      R0,#+158
   \   00000108   01002DE9           PUSH     {R0}
   \   0000010C   0B20A0E1           MOV      R2,R11
   \   00000110   7E1068E2           RSB      R1,R8,#+126
   \   00000114   0700A0E1           MOV      R0,R7
   \   00000118   4C0100EF           SWI      +332
   \   0000011C   0700A0E1           MOV      R0,R7
   \   00000120   290100EF           SWI      +297
   \   00000124   1CD08DE2           ADD      SP,SP,#+28
   \   00000128   F08FBDE8           POP      {R4-R11,PC}      ;; return
   \                     ??DrawRightSoft_0:
   \   0000012C   ........           DC32     `?<Constant "%t">`
   \   00000130   F31ACA6B           DC32     0x6bca1af3

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs char SECRETFUNCTION(char *)
   \                     SECRETFUNCTION:
   \   00000000   FC119FE5           LDR      R1,??SECRETFUNCTION_0  ;; `?<Constant "This may be your market!">`
   \   00000004   F0412DE9           PUSH     {R4-R8,LR}
   \   00000008   70D04DE2           SUB      SP,SP,#+112
   \   0000000C   CC5191E8           LDM      R1,{R2,R3,R6-R8,R12,LR}
   \   00000010   0050A0E1           MOV      R5,R0
   \   00000014   54008DE2           ADD      R0,SP,#+84
   \   00000018   CC5180E8           STM      R0,{R2,R3,R6-R8,R12,LR}
   \   0000001C   0F20A0E3           MOV      R2,#+15
   \   00000020   CA12A0E3           MOV      R1,#-1610612724
   \   00000024   651E81E3           ORR      R1,R1,#0x650
   \   00000028   0D00A0E1           MOV      R0,SP
   \   0000002C   1E0100EF           SWI      +286
   \   00000030   0C10DDE5           LDRB     R1,[SP, #+12]
   \   00000034   0020A0E3           MOV      R2,#+0
   \   00000038   0500A0E1           MOV      R0,R5
   \   0000003C   E01081E2           ADD      R1,R1,#+224
   \   00000040   1010CDE5           STRB     R1,[SP, #+16]
   \   00000044   0D10DDE5           LDRB     R1,[SP, #+13]
   \   00000048   0070A0E3           MOV      R7,#+0
   \   0000004C   E01081E2           ADD      R1,R1,#+224
   \   00000050   1110CDE5           STRB     R1,[SP, #+17]
   \   00000054   0E10DDE5           LDRB     R1,[SP, #+14]
   \   00000058   E01081E2           ADD      R1,R1,#+224
   \   0000005C   1210CDE5           STRB     R1,[SP, #+18]
   \   00000060   0810DDE5           LDRB     R1,[SP, #+8]
   \   00000064   E01081E2           ADD      R1,R1,#+224
   \   00000068   1310CDE5           STRB     R1,[SP, #+19]
   \   0000006C   0910DDE5           LDRB     R1,[SP, #+9]
   \   00000070   E01081E2           ADD      R1,R1,#+224
   \   00000074   1410CDE5           STRB     R1,[SP, #+20]
   \   00000078   0A10DDE5           LDRB     R1,[SP, #+10]
   \   0000007C   E01081E2           ADD      R1,R1,#+224
   \   00000080   1510CDE5           STRB     R1,[SP, #+21]
   \   00000084   0B10DDE5           LDRB     R1,[SP, #+11]
   \   00000088   E01081E2           ADD      R1,R1,#+224
   \   0000008C   1610CDE5           STRB     R1,[SP, #+22]
   \   00000090   0410DDE5           LDRB     R1,[SP, #+4]
   \   00000094   E01081E2           ADD      R1,R1,#+224
   \   00000098   1710CDE5           STRB     R1,[SP, #+23]
   \   0000009C   0510DDE5           LDRB     R1,[SP, #+5]
   \   000000A0   E01081E2           ADD      R1,R1,#+224
   \   000000A4   1810CDE5           STRB     R1,[SP, #+24]
   \   000000A8   0610DDE5           LDRB     R1,[SP, #+6]
   \   000000AC   E01081E2           ADD      R1,R1,#+224
   \   000000B0   1910CDE5           STRB     R1,[SP, #+25]
   \   000000B4   0710DDE5           LDRB     R1,[SP, #+7]
   \   000000B8   E01081E2           ADD      R1,R1,#+224
   \   000000BC   1A10CDE5           STRB     R1,[SP, #+26]
   \   000000C0   0010DDE5           LDRB     R1,[SP, #+0]
   \   000000C4   E01081E2           ADD      R1,R1,#+224
   \   000000C8   1B10CDE5           STRB     R1,[SP, #+27]
   \   000000CC   0110DDE5           LDRB     R1,[SP, #+1]
   \   000000D0   E01081E2           ADD      R1,R1,#+224
   \   000000D4   1C10CDE5           STRB     R1,[SP, #+28]
   \   000000D8   0210DDE5           LDRB     R1,[SP, #+2]
   \   000000DC   E01081E2           ADD      R1,R1,#+224
   \   000000E0   1D10CDE5           STRB     R1,[SP, #+29]
   \   000000E4   0310DDE5           LDRB     R1,[SP, #+3]
   \   000000E8   E01081E2           ADD      R1,R1,#+224
   \   000000EC   1E10CDE5           STRB     R1,[SP, #+30]
   \   000000F0   2C108DE2           ADD      R1,SP,#+44
   \   000000F4   840000EF           SWI      +132
   \   000000F8   30009DE5           LDR      R0,[SP, #+48]
   \   000000FC   140000EF           SWI      +20
   \   00000100   0060A0E1           MOV      R6,R0
   \   00000104   0030A0E3           MOV      R3,#+0
   \   00000108   402FA0E3           MOV      R2,#+256
   \   0000010C   0210A0E3           MOV      R1,#+2
   \   00000110   801C81E3           ORR      R1,R1,#0x8000
   \   00000114   0500A0E1           MOV      R0,R5
   \   00000118   0A0000EF           SWI      +10
   \   0000011C   30209DE5           LDR      R2,[SP, #+48]
   \   00000120   0050A0E1           MOV      R5,R0
   \   00000124   0030A0E3           MOV      R3,#+0
   \   00000128   0610A0E1           MOV      R1,R6
   \   0000012C   0B0000EF           SWI      +11
   \   00000130   000000EA           B        ??SECRETFUNCTION_1
   \                     ??SECRETFUNCTION_2:
   \   00000134   017087E2           ADD      R7,R7,#+1
   \                     ??SECRETFUNCTION_1:
   \   00000138   30009DE5           LDR      R0,[SP, #+48]
   \   0000013C   000057E1           CMP      R7,R0
   \   00000140   0700002A           BCS      ??SECRETFUNCTION_3
   \   00000144   1920A0E3           MOV      R2,#+25
   \   00000148   54108DE2           ADD      R1,SP,#+84
   \   0000014C   060087E0           ADD      R0,R7,R6
   \   00000150   1C0100EF           SWI      +284
   \   00000154   000050E3           CMP      R0,#+0
   \   00000158   F5FFFF1A           BNE      ??SECRETFUNCTION_2
   \   0000015C   0740A0E1           MOV      R4,R7
   \   00000160   0D0000EA           B        ??SECRETFUNCTION_4
   \                     ??SECRETFUNCTION_3:
   \   00000164   0070A0E3           MOV      R7,#+0
   \   00000168   060000EA           B        ??SECRETFUNCTION_5
   \                     ??SECRETFUNCTION_6:
   \   0000016C   0F20A0E3           MOV      R2,#+15
   \   00000170   10108DE2           ADD      R1,SP,#+16
   \   00000174   060087E0           ADD      R0,R7,R6
   \   00000178   1C0100EF           SWI      +284
   \   0000017C   000050E3           CMP      R0,#+0
   \   00000180   1600000A           BEQ      ??SECRETFUNCTION_7
   \   00000184   017087E2           ADD      R7,R7,#+1
   \                     ??SECRETFUNCTION_5:
   \   00000188   30009DE5           LDR      R0,[SP, #+48]
   \   0000018C   000057E1           CMP      R7,R0
   \   00000190   F5FFFF3A           BCC      ??SECRETFUNCTION_6
   \   00000194   000050E3           CMP      R0,#+0
   \   00000198   0E00001A           BNE      ??SECRETFUNCTION_8
   \                     ??SECRETFUNCTION_4:
   \   0000019C   0000A0E3           MOV      R0,#+0
   \   000001A0   01002DE9           PUSH     {R0}
   \   000001A4   0030A0E3           MOV      R3,#+0
   \   000001A8   0020A0E1           MOV      R2,R0
   \   000001AC   0410A0E1           MOV      R1,R4
   \   000001B0   0500A0E1           MOV      R0,R5
   \   000001B4   0F0000EF           SWI      +15
   \   000001B8   0030A0E3           MOV      R3,#+0
   \   000001BC   1920A0E3           MOV      R2,#+25
   \   000001C0   14108DE2           ADD      R1,SP,#+20
   \   000001C4   0500A0E1           MOV      R0,R5
   \   000001C8   0C0000EF           SWI      +12
   \   000001CC   0140A0E3           MOV      R4,#+1
   \   000001D0   04D08DE2           ADD      SP,SP,#+4
   \   000001D4   020000EA           B        ??SECRETFUNCTION_9
   \                     ??SECRETFUNCTION_8:
   \   000001D8   0040A0E3           MOV      R4,#+0
   \   000001DC   000000EA           B        ??SECRETFUNCTION_9
   \                     ??SECRETFUNCTION_7:
   \   000001E0   0140A0E3           MOV      R4,#+1
   \                     ??SECRETFUNCTION_9:
   \   000001E4   0600A0E1           MOV      R0,R6
   \   000001E8   150000EF           SWI      +21
   \   000001EC   0010A0E3           MOV      R1,#+0
   \   000001F0   0500A0E1           MOV      R0,R5
   \   000001F4   0D0000EF           SWI      +13
   \   000001F8   0400A0E1           MOV      R0,R4
   \   000001FC   70D08DE2           ADD      SP,SP,#+112
   \   00000200   F081BDE8           POP      {R4-R8,PC}       ;; return
   \                     ??SECRETFUNCTION_0:
   \   00000204   ........           DC32     `?<Constant "This may be your market!">`
     94          #include "engine\system\sudoku.h"    //Библиотека игровых ф-ий, структур, констант, переменных для игры SuDoKu, то бишь для этой ;)

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs char CheckSUDOKUMAP(struct <unnamed> *)
   \                     CheckSUDOKUMAP:
   \   00000000   70002DE9           PUSH     {R4-R6}
   \   00000004   0110A0E3           MOV      R1,#+1
   \   00000008   0120A0E3           MOV      R2,#+1
   \                     ??CheckSUDOKUMAP_0:
   \   0000000C   0030A0E3           MOV      R3,#+0
   \                     ??CheckSUDOKUMAP_1:
   \   00000010   00C0A0E3           MOV      R12,#+0
   \   00000014   0040A0E3           MOV      R4,#+0
   \                     ??CheckSUDOKUMAP_2:
   \   00000018   835183E0           ADD      R5,R3,R3, LSL #+3
   \   0000001C   005085E0           ADD      R5,R5,R0
   \   00000020   055084E0           ADD      R5,R4,R5
   \   00000024   7450D5E5           LDRB     R5,[R5, #+116]
   \   00000028   014084E2           ADD      R4,R4,#+1
   \   0000002C   020055E1           CMP      R5,R2
   \   00000030   01C08C02           ADDEQ    R12,R12,#+1
   \   00000034   090054E3           CMP      R4,#+9
   \   00000038   F6FFFFBA           BLT      ??CheckSUDOKUMAP_2
   \   0000003C   02005CE3           CMP      R12,#+2
   \   00000040   020000BA           BLT      ??CheckSUDOKUMAP_3
   \                     ??CheckSUDOKUMAP_4:
   \   00000044   7000BDE8           POP      {R4-R6}
   \   00000048   0400A0E3           MOV      R0,#+4
   \   0000004C   1EFF2FE1           BX       LR
   \                     ??CheckSUDOKUMAP_3:
   \   00000050   013083E2           ADD      R3,R3,#+1
   \   00000054   090053E3           CMP      R3,#+9
   \   00000058   ECFFFFBA           BLT      ??CheckSUDOKUMAP_1
   \   0000005C   012082E2           ADD      R2,R2,#+1
   \   00000060   FF2002E2           AND      R2,R2,#0xFF
   \   00000064   0A0052E3           CMP      R2,#+10
   \   00000068   E7FFFF3A           BCC      ??CheckSUDOKUMAP_0
   \   0000006C   0120A0E3           MOV      R2,#+1
   \                     ??CheckSUDOKUMAP_5:
   \   00000070   0030A0E3           MOV      R3,#+0
   \                     ??CheckSUDOKUMAP_6:
   \   00000074   0040A0E3           MOV      R4,#+0
   \   00000078   00C0A0E3           MOV      R12,#+0
   \   0000007C   006083E0           ADD      R6,R3,R0
   \                     ??CheckSUDOKUMAP_7:
   \   00000080   8C518CE0           ADD      R5,R12,R12, LSL #+3
   \   00000084   065085E0           ADD      R5,R5,R6
   \   00000088   7450D5E5           LDRB     R5,[R5, #+116]
   \   0000008C   01C08CE2           ADD      R12,R12,#+1
   \   00000090   020055E1           CMP      R5,R2
   \   00000094   01408402           ADDEQ    R4,R4,#+1
   \   00000098   09005CE3           CMP      R12,#+9
   \   0000009C   F7FFFFBA           BLT      ??CheckSUDOKUMAP_7
   \   000000A0   020054E3           CMP      R4,#+2
   \   000000A4   E6FFFFAA           BGE      ??CheckSUDOKUMAP_4
   \   000000A8   013083E2           ADD      R3,R3,#+1
   \   000000AC   090053E3           CMP      R3,#+9
   \   000000B0   EFFFFFBA           BLT      ??CheckSUDOKUMAP_6
   \   000000B4   012082E2           ADD      R2,R2,#+1
   \   000000B8   FF2002E2           AND      R2,R2,#0xFF
   \   000000BC   0A0052E3           CMP      R2,#+10
   \   000000C0   EAFFFF3A           BCC      ??CheckSUDOKUMAP_5
   \   000000C4   0120A0E3           MOV      R2,#+1
   \                     ??CheckSUDOKUMAP_8:
   \   000000C8   0030A0E3           MOV      R3,#+0
   \   000000CC   0040A0E3           MOV      R4,#+0
   \                     ??CheckSUDOKUMAP_9:
   \   000000D0   00C0A0E3           MOV      R12,#+0
   \                     ??CheckSUDOKUMAP_10:
   \   000000D4   845184E0           ADD      R5,R4,R4, LSL #+3
   \   000000D8   005085E0           ADD      R5,R5,R0
   \   000000DC   05508CE0           ADD      R5,R12,R5
   \   000000E0   7450D5E5           LDRB     R5,[R5, #+116]
   \   000000E4   01C08CE2           ADD      R12,R12,#+1
   \   000000E8   020055E1           CMP      R5,R2
   \   000000EC   01308302           ADDEQ    R3,R3,#+1
   \   000000F0   03005CE3           CMP      R12,#+3
   \   000000F4   F6FFFFBA           BLT      ??CheckSUDOKUMAP_10
   \   000000F8   014084E2           ADD      R4,R4,#+1
   \   000000FC   030054E3           CMP      R4,#+3
   \   00000100   F2FFFFBA           BLT      ??CheckSUDOKUMAP_9
   \   00000104   020053E3           CMP      R3,#+2
   \   00000108   CDFFFFAA           BGE      ??CheckSUDOKUMAP_4
   \   0000010C   012082E2           ADD      R2,R2,#+1
   \   00000110   FF2002E2           AND      R2,R2,#0xFF
   \   00000114   0A0052E3           CMP      R2,#+10
   \   00000118   EAFFFF3A           BCC      ??CheckSUDOKUMAP_8
   \   0000011C   0120A0E3           MOV      R2,#+1
   \                     ??CheckSUDOKUMAP_11:
   \   00000120   0030A0E3           MOV      R3,#+0
   \   00000124   0040A0E3           MOV      R4,#+0
   \                     ??CheckSUDOKUMAP_12:
   \   00000128   03C0A0E3           MOV      R12,#+3
   \                     ??CheckSUDOKUMAP_13:
   \   0000012C   845184E0           ADD      R5,R4,R4, LSL #+3
   \   00000130   005085E0           ADD      R5,R5,R0
   \   00000134   05508CE0           ADD      R5,R12,R5
   \   00000138   7450D5E5           LDRB     R5,[R5, #+116]
   \   0000013C   01C08CE2           ADD      R12,R12,#+1
   \   00000140   020055E1           CMP      R5,R2
   \   00000144   01308302           ADDEQ    R3,R3,#+1
   \   00000148   06005CE3           CMP      R12,#+6
   \   0000014C   F6FFFFBA           BLT      ??CheckSUDOKUMAP_13
   \   00000150   014084E2           ADD      R4,R4,#+1
   \   00000154   030054E3           CMP      R4,#+3
   \   00000158   F2FFFFBA           BLT      ??CheckSUDOKUMAP_12
   \   0000015C   020053E3           CMP      R3,#+2
   \   00000160   B7FFFFAA           BGE      ??CheckSUDOKUMAP_4
   \   00000164   012082E2           ADD      R2,R2,#+1
   \   00000168   FF2002E2           AND      R2,R2,#0xFF
   \   0000016C   0A0052E3           CMP      R2,#+10
   \   00000170   EAFFFF3A           BCC      ??CheckSUDOKUMAP_11
   \   00000174   0120A0E3           MOV      R2,#+1
   \                     ??CheckSUDOKUMAP_14:
   \   00000178   0030A0E3           MOV      R3,#+0
   \   0000017C   0040A0E3           MOV      R4,#+0
   \                     ??CheckSUDOKUMAP_15:
   \   00000180   06C0A0E3           MOV      R12,#+6
   \                     ??CheckSUDOKUMAP_16:
   \   00000184   845184E0           ADD      R5,R4,R4, LSL #+3
   \   00000188   005085E0           ADD      R5,R5,R0
   \   0000018C   05508CE0           ADD      R5,R12,R5
   \   00000190   7450D5E5           LDRB     R5,[R5, #+116]
   \   00000194   01C08CE2           ADD      R12,R12,#+1
   \   00000198   020055E1           CMP      R5,R2
   \   0000019C   01308302           ADDEQ    R3,R3,#+1
   \   000001A0   09005CE3           CMP      R12,#+9
   \   000001A4   F6FFFFBA           BLT      ??CheckSUDOKUMAP_16
   \   000001A8   014084E2           ADD      R4,R4,#+1
   \   000001AC   030054E3           CMP      R4,#+3
   \   000001B0   F2FFFFBA           BLT      ??CheckSUDOKUMAP_15
   \   000001B4   020053E3           CMP      R3,#+2
   \   000001B8   A1FFFFAA           BGE      ??CheckSUDOKUMAP_4
   \   000001BC   012082E2           ADD      R2,R2,#+1
   \   000001C0   FF2002E2           AND      R2,R2,#0xFF
   \   000001C4   0A0052E3           CMP      R2,#+10
   \   000001C8   EAFFFF3A           BCC      ??CheckSUDOKUMAP_14
   \   000001CC   0120A0E3           MOV      R2,#+1
   \                     ??CheckSUDOKUMAP_17:
   \   000001D0   0030A0E3           MOV      R3,#+0
   \   000001D4   0340A0E3           MOV      R4,#+3
   \                     ??CheckSUDOKUMAP_18:
   \   000001D8   00C0A0E3           MOV      R12,#+0
   \                     ??CheckSUDOKUMAP_19:
   \   000001DC   845184E0           ADD      R5,R4,R4, LSL #+3
   \   000001E0   005085E0           ADD      R5,R5,R0
   \   000001E4   05508CE0           ADD      R5,R12,R5
   \   000001E8   7450D5E5           LDRB     R5,[R5, #+116]
   \   000001EC   01C08CE2           ADD      R12,R12,#+1
   \   000001F0   020055E1           CMP      R5,R2
   \   000001F4   01308302           ADDEQ    R3,R3,#+1
   \   000001F8   03005CE3           CMP      R12,#+3
   \   000001FC   F6FFFFBA           BLT      ??CheckSUDOKUMAP_19
   \   00000200   014084E2           ADD      R4,R4,#+1
   \   00000204   060054E3           CMP      R4,#+6
   \   00000208   F2FFFFBA           BLT      ??CheckSUDOKUMAP_18
   \   0000020C   020053E3           CMP      R3,#+2
   \   00000210   8BFFFFAA           BGE      ??CheckSUDOKUMAP_4
   \   00000214   012082E2           ADD      R2,R2,#+1
   \   00000218   FF2002E2           AND      R2,R2,#0xFF
   \   0000021C   0A0052E3           CMP      R2,#+10
   \   00000220   EAFFFF3A           BCC      ??CheckSUDOKUMAP_17
   \   00000224   0120A0E3           MOV      R2,#+1
   \                     ??CheckSUDOKUMAP_20:
   \   00000228   0030A0E3           MOV      R3,#+0
   \   0000022C   0340A0E3           MOV      R4,#+3
   \                     ??CheckSUDOKUMAP_21:
   \   00000230   03C0A0E3           MOV      R12,#+3
   \                     ??CheckSUDOKUMAP_22:
   \   00000234   845184E0           ADD      R5,R4,R4, LSL #+3
   \   00000238   005085E0           ADD      R5,R5,R0
   \   0000023C   05508CE0           ADD      R5,R12,R5
   \   00000240   7450D5E5           LDRB     R5,[R5, #+116]
   \   00000244   01C08CE2           ADD      R12,R12,#+1
   \   00000248   020055E1           CMP      R5,R2
   \   0000024C   01308302           ADDEQ    R3,R3,#+1
   \   00000250   06005CE3           CMP      R12,#+6
   \   00000254   F6FFFFBA           BLT      ??CheckSUDOKUMAP_22
   \   00000258   014084E2           ADD      R4,R4,#+1
   \   0000025C   060054E3           CMP      R4,#+6
   \   00000260   F2FFFFBA           BLT      ??CheckSUDOKUMAP_21
   \   00000264   020053E3           CMP      R3,#+2
   \   00000268   75FFFFAA           BGE      ??CheckSUDOKUMAP_4
   \   0000026C   012082E2           ADD      R2,R2,#+1
   \   00000270   FF2002E2           AND      R2,R2,#0xFF
   \   00000274   0A0052E3           CMP      R2,#+10
   \   00000278   EAFFFF3A           BCC      ??CheckSUDOKUMAP_20
   \   0000027C   0120A0E3           MOV      R2,#+1
   \                     ??CheckSUDOKUMAP_23:
   \   00000280   0030A0E3           MOV      R3,#+0
   \   00000284   0340A0E3           MOV      R4,#+3
   \                     ??CheckSUDOKUMAP_24:
   \   00000288   06C0A0E3           MOV      R12,#+6
   \                     ??CheckSUDOKUMAP_25:
   \   0000028C   845184E0           ADD      R5,R4,R4, LSL #+3
   \   00000290   005085E0           ADD      R5,R5,R0
   \   00000294   05508CE0           ADD      R5,R12,R5
   \   00000298   7450D5E5           LDRB     R5,[R5, #+116]
   \   0000029C   01C08CE2           ADD      R12,R12,#+1
   \   000002A0   020055E1           CMP      R5,R2
   \   000002A4   01308302           ADDEQ    R3,R3,#+1
   \   000002A8   09005CE3           CMP      R12,#+9
   \   000002AC   F6FFFFBA           BLT      ??CheckSUDOKUMAP_25
   \   000002B0   014084E2           ADD      R4,R4,#+1
   \   000002B4   060054E3           CMP      R4,#+6
   \   000002B8   F2FFFFBA           BLT      ??CheckSUDOKUMAP_24
   \   000002BC   020053E3           CMP      R3,#+2
   \   000002C0   5FFFFFAA           BGE      ??CheckSUDOKUMAP_4
   \   000002C4   012082E2           ADD      R2,R2,#+1
   \   000002C8   FF2002E2           AND      R2,R2,#0xFF
   \   000002CC   0A0052E3           CMP      R2,#+10
   \   000002D0   EAFFFF3A           BCC      ??CheckSUDOKUMAP_23
   \   000002D4   0120A0E3           MOV      R2,#+1
   \                     ??CheckSUDOKUMAP_26:
   \   000002D8   0030A0E3           MOV      R3,#+0
   \   000002DC   0640A0E3           MOV      R4,#+6
   \                     ??CheckSUDOKUMAP_27:
   \   000002E0   00C0A0E3           MOV      R12,#+0
   \                     ??CheckSUDOKUMAP_28:
   \   000002E4   845184E0           ADD      R5,R4,R4, LSL #+3
   \   000002E8   005085E0           ADD      R5,R5,R0
   \   000002EC   05508CE0           ADD      R5,R12,R5
   \   000002F0   7450D5E5           LDRB     R5,[R5, #+116]
   \   000002F4   01C08CE2           ADD      R12,R12,#+1
   \   000002F8   020055E1           CMP      R5,R2
   \   000002FC   01308302           ADDEQ    R3,R3,#+1
   \   00000300   03005CE3           CMP      R12,#+3
   \   00000304   F6FFFFBA           BLT      ??CheckSUDOKUMAP_28
   \   00000308   014084E2           ADD      R4,R4,#+1
   \   0000030C   090054E3           CMP      R4,#+9
   \   00000310   F2FFFFBA           BLT      ??CheckSUDOKUMAP_27
   \   00000314   020053E3           CMP      R3,#+2
   \   00000318   49FFFFAA           BGE      ??CheckSUDOKUMAP_4
   \   0000031C   012082E2           ADD      R2,R2,#+1
   \   00000320   FF2002E2           AND      R2,R2,#0xFF
   \   00000324   0A0052E3           CMP      R2,#+10
   \   00000328   EAFFFF3A           BCC      ??CheckSUDOKUMAP_26
   \   0000032C   0120A0E3           MOV      R2,#+1
   \                     ??CheckSUDOKUMAP_29:
   \   00000330   0030A0E3           MOV      R3,#+0
   \   00000334   0640A0E3           MOV      R4,#+6
   \                     ??CheckSUDOKUMAP_30:
   \   00000338   03C0A0E3           MOV      R12,#+3
   \                     ??CheckSUDOKUMAP_31:
   \   0000033C   845184E0           ADD      R5,R4,R4, LSL #+3
   \   00000340   005085E0           ADD      R5,R5,R0
   \   00000344   05508CE0           ADD      R5,R12,R5
   \   00000348   7450D5E5           LDRB     R5,[R5, #+116]
   \   0000034C   01C08CE2           ADD      R12,R12,#+1
   \   00000350   020055E1           CMP      R5,R2
   \   00000354   01308302           ADDEQ    R3,R3,#+1
   \   00000358   06005CE3           CMP      R12,#+6
   \   0000035C   F6FFFFBA           BLT      ??CheckSUDOKUMAP_31
   \   00000360   014084E2           ADD      R4,R4,#+1
   \   00000364   090054E3           CMP      R4,#+9
   \   00000368   F2FFFFBA           BLT      ??CheckSUDOKUMAP_30
   \   0000036C   020053E3           CMP      R3,#+2
   \   00000370   33FFFFAA           BGE      ??CheckSUDOKUMAP_4
   \   00000374   012082E2           ADD      R2,R2,#+1
   \   00000378   FF2002E2           AND      R2,R2,#0xFF
   \   0000037C   0A0052E3           CMP      R2,#+10
   \   00000380   EAFFFF3A           BCC      ??CheckSUDOKUMAP_29
   \                     ??CheckSUDOKUMAP_32:
   \   00000384   0020A0E3           MOV      R2,#+0
   \   00000388   0630A0E3           MOV      R3,#+6
   \                     ??CheckSUDOKUMAP_33:
   \   0000038C   0640A0E3           MOV      R4,#+6
   \                     ??CheckSUDOKUMAP_34:
   \   00000390   835183E0           ADD      R5,R3,R3, LSL #+3
   \   00000394   005085E0           ADD      R5,R5,R0
   \   00000398   055084E0           ADD      R5,R4,R5
   \   0000039C   7450D5E5           LDRB     R5,[R5, #+116]
   \   000003A0   014084E2           ADD      R4,R4,#+1
   \   000003A4   010055E1           CMP      R5,R1
   \   000003A8   01208202           ADDEQ    R2,R2,#+1
   \   000003AC   090054E3           CMP      R4,#+9
   \   000003B0   F6FFFFBA           BLT      ??CheckSUDOKUMAP_34
   \   000003B4   013083E2           ADD      R3,R3,#+1
   \   000003B8   090053E3           CMP      R3,#+9
   \   000003BC   F2FFFFBA           BLT      ??CheckSUDOKUMAP_33
   \   000003C0   020052E3           CMP      R2,#+2
   \   000003C4   1EFFFFAA           BGE      ??CheckSUDOKUMAP_4
   \   000003C8   011081E2           ADD      R1,R1,#+1
   \   000003CC   FF1001E2           AND      R1,R1,#0xFF
   \   000003D0   0A0051E3           CMP      R1,#+10
   \   000003D4   EAFFFF3A           BCC      ??CheckSUDOKUMAP_32
   \   000003D8   7000BDE8           POP      {R4-R6}
   \   000003DC   0000A0E3           MOV      R0,#+0
   \   000003E0   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs struct <unnamed> *ClearSUDOKUMAP(struct <unnamed> *)
   \                     ClearSUDOKUMAP:
   \   00000000   0010A0E3           MOV      R1,#+0
   \   00000004   0010C0E5           STRB     R1,[R0, #+0]
   \   00000008   3F20A0E3           MOV      R2,#+63
   \   0000000C   2020C0E5           STRB     R2,[R0, #+32]
   \   00000010   0420A0E3           MOV      R2,#+4
   \   00000014   2120C0E5           STRB     R2,[R0, #+33]
   \   00000018   2220C0E5           STRB     R2,[R0, #+34]
   \   0000001C   0020A0E3           MOV      R2,#+0
   \                     ??ClearSUDOKUMAP_0:
   \   00000020   0030A0E3           MOV      R3,#+0
   \                     ??ClearSUDOKUMAP_1:
   \   00000024   82C182E0           ADD      R12,R2,R2, LSL #+3
   \   00000028   00C08CE0           ADD      R12,R12,R0
   \   0000002C   0CC083E0           ADD      R12,R3,R12
   \   00000030   2310CCE5           STRB     R1,[R12, #+35]
   \   00000034   013083E2           ADD      R3,R3,#+1
   \   00000038   090053E3           CMP      R3,#+9
   \   0000003C   F8FFFFBA           BLT      ??ClearSUDOKUMAP_1
   \   00000040   012082E2           ADD      R2,R2,#+1
   \   00000044   090052E3           CMP      R2,#+9
   \   00000048   F4FFFFBA           BLT      ??ClearSUDOKUMAP_0
   \   0000004C   0020A0E3           MOV      R2,#+0
   \                     ??ClearSUDOKUMAP_2:
   \   00000050   0030A0E3           MOV      R3,#+0
   \                     ??ClearSUDOKUMAP_3:
   \   00000054   82C182E0           ADD      R12,R2,R2, LSL #+3
   \   00000058   00C08CE0           ADD      R12,R12,R0
   \   0000005C   0CC083E0           ADD      R12,R3,R12
   \   00000060   7410CCE5           STRB     R1,[R12, #+116]
   \   00000064   013083E2           ADD      R3,R3,#+1
   \   00000068   090053E3           CMP      R3,#+9
   \   0000006C   F8FFFFBA           BLT      ??ClearSUDOKUMAP_3
   \   00000070   012082E2           ADD      R2,R2,#+1
   \   00000074   090052E3           CMP      R2,#+9
   \   00000078   F4FFFFBA           BLT      ??ClearSUDOKUMAP_2
   \   0000007C   C510C0E5           STRB     R1,[R0, #+197]
   \   00000080   C610C0E5           STRB     R1,[R0, #+198]
   \   00000084   C710C0E5           STRB     R1,[R0, #+199]
   \   00000088   C81080E5           STR      R1,[R0, #+200]
   \   0000008C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void MemFreeOfSUDOKUMAP(struct <unnamed> *)
   \                     MemFreeOfSUDOKUMAP:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   150000EF           SWI      +21
   \   00000008   0080BDE8           POP      {PC}             ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void MemFreeOfERRORSTRUCT(struct <unnamed> *)
   \                     MemFreeOfERRORSTRUCT:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   150000EF           SWI      +21
   \   00000008   0080BDE8           POP      {PC}             ;; return
     95          
     96          #include "engine\fileop\ext_work.h"  //Библиотека ф-ий для работы с фаилами карт SuDoKu 

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs char extmapv10_2_cell(char, char)
   \                     extmapv10_2_cell:
   \   00000000   300050E3           CMP      R0,#+48
   \   00000004   0600001A           BNE      ??extmapv10_2_cell_0
   \   00000008   3100A0E3           MOV      R0,#+49
   \                     ??extmapv10_2_cell_1:
   \   0000000C   000051E1           CMP      R1,R0
   \   00000010   30204002           SUBEQ    R2,R0,#+48
   \   00000014   010080E2           ADD      R0,R0,#+1
   \   00000018   3A0050E3           CMP      R0,#+58
   \   0000001C   100000AA           BGE      ??extmapv10_2_cell_2
   \   00000020   F9FFFFEA           B        ??extmapv10_2_cell_1
   \                     ??extmapv10_2_cell_0:
   \   00000024   310050E3           CMP      R0,#+49
   \   00000028   0500001A           BNE      ??extmapv10_2_cell_3
   \                     ??extmapv10_2_cell_4:
   \   0000002C   000051E1           CMP      R1,R0
   \   00000030   20204002           SUBEQ    R2,R0,#+32
   \   00000034   010080E2           ADD      R0,R0,#+1
   \   00000038   3A0050E3           CMP      R0,#+58
   \   0000003C   080000AA           BGE      ??extmapv10_2_cell_2
   \   00000040   F9FFFFEA           B        ??extmapv10_2_cell_4
   \                     ??extmapv10_2_cell_3:
   \   00000044   320050E3           CMP      R0,#+50
   \   00000048   0500001A           BNE      ??extmapv10_2_cell_2
   \   0000004C   3100A0E3           MOV      R0,#+49
   \                     ??extmapv10_2_cell_5:
   \   00000050   000051E1           CMP      R1,R0
   \   00000054   10204002           SUBEQ    R2,R0,#+16
   \   00000058   010080E2           ADD      R0,R0,#+1
   \   0000005C   3A0050E3           CMP      R0,#+58
   \   00000060   FAFFFFBA           BLT      ??extmapv10_2_cell_5
   \                     ??extmapv10_2_cell_2:
   \   00000064   FF0002E2           AND      R0,R2,#0xFF
   \   00000068   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs struct <unnamed> *gcell_2_rcell(struct <unnamed> *)
   \                     gcell_2_rcell:
   \   00000000   10002DE9           PUSH     {R4}
   \   00000004   0010A0E3           MOV      R1,#+0
   \                     ??gcell_2_rcell_0:
   \   00000008   0020A0E3           MOV      R2,#+0
   \                     ??gcell_2_rcell_1:
   \   0000000C   813181E0           ADD      R3,R1,R1, LSL #+3
   \   00000010   003083E0           ADD      R3,R3,R0
   \   00000014   03C082E0           ADD      R12,R2,R3
   \   00000018   23C0DCE5           LDRB     R12,[R12, #+35]
   \   0000001C   21005CE3           CMP      R12,#+33
   \   00000020   0800003A           BCC      ??gcell_2_rcell_2
   \   00000024   03C082E0           ADD      R12,R2,R3
   \   00000028   23C0DCE5           LDRB     R12,[R12, #+35]
   \   0000002C   30005CE3           CMP      R12,#+48
   \   00000030   0400002A           BCS      ??gcell_2_rcell_2
   \   00000034   034082E0           ADD      R4,R2,R3
   \   00000038   2340D4E5           LDRB     R4,[R4, #+35]
   \   0000003C   03C082E0           ADD      R12,R2,R3
   \   00000040   E04084E2           ADD      R4,R4,#+224
   \   00000044   7440CCE5           STRB     R4,[R12, #+116]
   \                     ??gcell_2_rcell_2:
   \   00000048   034082E0           ADD      R4,R2,R3
   \   0000004C   2340D4E5           LDRB     R4,[R4, #+35]
   \   00000050   110054E3           CMP      R4,#+17
   \   00000054   0800003A           BCC      ??gcell_2_rcell_3
   \   00000058   034082E0           ADD      R4,R2,R3
   \   0000005C   2340D4E5           LDRB     R4,[R4, #+35]
   \   00000060   200054E3           CMP      R4,#+32
   \   00000064   0400002A           BCS      ??gcell_2_rcell_3
   \   00000068   03C082E0           ADD      R12,R2,R3
   \   0000006C   23C0DCE5           LDRB     R12,[R12, #+35]
   \   00000070   034082E0           ADD      R4,R2,R3
   \   00000074   F0C08CE2           ADD      R12,R12,#+240
   \   00000078   74C0C4E5           STRB     R12,[R4, #+116]
   \                     ??gcell_2_rcell_3:
   \   0000007C   034082E0           ADD      R4,R2,R3
   \   00000080   2340D4E5           LDRB     R4,[R4, #+35]
   \   00000084   000054E3           CMP      R4,#+0
   \   00000088   0700000A           BEQ      ??gcell_2_rcell_4
   \   0000008C   034082E0           ADD      R4,R2,R3
   \   00000090   2340D4E5           LDRB     R4,[R4, #+35]
   \   00000094   100054E3           CMP      R4,#+16
   \   00000098   0300002A           BCS      ??gcell_2_rcell_4
   \   0000009C   034082E0           ADD      R4,R2,R3
   \   000000A0   033082E0           ADD      R3,R2,R3
   \   000000A4   2330D3E5           LDRB     R3,[R3, #+35]
   \   000000A8   7430C4E5           STRB     R3,[R4, #+116]
   \                     ??gcell_2_rcell_4:
   \   000000AC   012082E2           ADD      R2,R2,#+1
   \   000000B0   090052E3           CMP      R2,#+9
   \   000000B4   D4FFFFBA           BLT      ??gcell_2_rcell_1
   \   000000B8   011081E2           ADD      R1,R1,#+1
   \   000000BC   090051E3           CMP      R1,#+9
   \   000000C0   D0FFFFBA           BLT      ??gcell_2_rcell_0
   \   000000C4   1000BDE8           POP      {R4}
   \   000000C8   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs struct <unnamed> *CreateSUDOKUMAPbyEXTFILE(char *)
   \                     CreateSUDOKUMAPbyEXTFILE:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000004   28D04DE2           SUB      SP,SP,#+40
   \   00000008   0050A0E1           MOV      R5,R0
   \   0000000C   CC00A0E3           MOV      R0,#+204
   \   00000010   140000EF           SWI      +20
   \   00000014   0060A0E1           MOV      R6,R0
   \   00000018   0900A0E3           MOV      R0,#+9
   \   0000001C   140000EF           SWI      +20
   \   00000020   0040A0E1           MOV      R4,R0
   \   00000024   0020A0E3           MOV      R2,#+0
   \   00000028   0D10A0E1           MOV      R1,SP
   \   0000002C   0500A0E1           MOV      R0,R5
   \   00000030   840000EF           SWI      +132
   \   00000034   010070E3           CMN      R0,#+1
   \   00000038   04009D15           LDRNE    R0,[SP, #+4]
   \   0000003C   00005013           CMPNE    R0,#+0
   \   00000040   DB00000A           BEQ      ??CreateSUDOKUMAPbyEXTFILE_0
   \   00000044   0030A0E3           MOV      R3,#+0
   \   00000048   8020A0E3           MOV      R2,#+128
   \   0000004C   801CA0E3           MOV      R1,#+32768
   \   00000050   0500A0E1           MOV      R0,R5
   \   00000054   0A0000EF           SWI      +10
   \   00000058   0050A0E1           MOV      R5,R0
   \   0000005C   0030A0E3           MOV      R3,#+0
   \   00000060   0120A0E3           MOV      R2,#+1
   \   00000064   0410A0E1           MOV      R1,R4
   \   00000068   0B0000EF           SWI      +11
   \   0000006C   0030A0E3           MOV      R3,#+0
   \   00000070   0120A0E3           MOV      R2,#+1
   \   00000074   011084E2           ADD      R1,R4,#+1
   \   00000078   0500A0E1           MOV      R0,R5
   \   0000007C   0B0000EF           SWI      +11
   \   00000080   0030A0E3           MOV      R3,#+0
   \   00000084   0120A0E3           MOV      R2,#+1
   \   00000088   021084E2           ADD      R1,R4,#+2
   \   0000008C   0500A0E1           MOV      R0,R5
   \   00000090   0B0000EF           SWI      +11
   \   00000094   0030A0E3           MOV      R3,#+0
   \   00000098   0120A0E3           MOV      R2,#+1
   \   0000009C   031084E2           ADD      R1,R4,#+3
   \   000000A0   0500A0E1           MOV      R0,R5
   \   000000A4   0B0000EF           SWI      +11
   \   000000A8   0030A0E3           MOV      R3,#+0
   \   000000AC   0120A0E3           MOV      R2,#+1
   \   000000B0   041084E2           ADD      R1,R4,#+4
   \   000000B4   0500A0E1           MOV      R0,R5
   \   000000B8   0B0000EF           SWI      +11
   \   000000BC   0030A0E3           MOV      R3,#+0
   \   000000C0   0120A0E3           MOV      R2,#+1
   \   000000C4   051084E2           ADD      R1,R4,#+5
   \   000000C8   0500A0E1           MOV      R0,R5
   \   000000CC   0B0000EF           SWI      +11
   \   000000D0   0030A0E3           MOV      R3,#+0
   \   000000D4   0120A0E3           MOV      R2,#+1
   \   000000D8   061084E2           ADD      R1,R4,#+6
   \   000000DC   0500A0E1           MOV      R0,R5
   \   000000E0   0B0000EF           SWI      +11
   \   000000E4   0030A0E3           MOV      R3,#+0
   \   000000E8   0120A0E3           MOV      R2,#+1
   \   000000EC   071084E2           ADD      R1,R4,#+7
   \   000000F0   0500A0E1           MOV      R0,R5
   \   000000F4   0B0000EF           SWI      +11
   \   000000F8   0030A0E3           MOV      R3,#+0
   \   000000FC   0120A0E3           MOV      R2,#+1
   \   00000100   081084E2           ADD      R1,R4,#+8
   \   00000104   0500A0E1           MOV      R0,R5
   \   00000108   0B0000EF           SWI      +11
   \   0000010C   0070A0E3           MOV      R7,#+0
   \   00000110   C670C6E5           STRB     R7,[R6, #+198]
   \   00000114   0800D4E5           LDRB     R0,[R4, #+8]
   \   00000118   4C0050E3           CMP      R0,#+76
   \   0000011C   4D005013           CMPNE    R0,#+77
   \   00000120   48005013           CMPNE    R0,#+72
   \   00000124   01008712           ADDNE    R0,R7,#+1
   \   00000128   C600C615           STRBNE   R0,[R6, #+198]
   \   0000012C   C570C6E5           STRB     R7,[R6, #+197]
   \   00000130   0400A0E3           MOV      R0,#+4
   \   00000134   2100C6E5           STRB     R0,[R6, #+33]
   \   00000138   2200C6E5           STRB     R0,[R6, #+34]
   \   0000013C   0000D4E5           LDRB     R0,[R4, #+0]
   \   00000140   530050E3           CMP      R0,#+83
   \   00000144   0100D405           LDRBEQ   R0,[R4, #+1]
   \   00000148   55005003           CMPEQ    R0,#+85
   \   0000014C   0200D405           LDRBEQ   R0,[R4, #+2]
   \   00000150   44005003           CMPEQ    R0,#+68
   \   00000154   0300D405           LDRBEQ   R0,[R4, #+3]
   \   00000158   4F005003           CMPEQ    R0,#+79
   \   0000015C   0400D405           LDRBEQ   R0,[R4, #+4]
   \   00000160   4B005003           CMPEQ    R0,#+75
   \   00000164   0500D405           LDRBEQ   R0,[R4, #+5]
   \   00000168   55005003           CMPEQ    R0,#+85
   \   0000016C   8A00001A           BNE      ??CreateSUDOKUMAPbyEXTFILE_1
   \   00000170   0610D4E5           LDRB     R1,[R4, #+6]
   \   00000174   0730D4E5           LDRB     R3,[R4, #+7]
   \   00000178   04009DE5           LDR      R0,[SP, #+4]
   \   0000017C   0A20A0E3           MOV      R2,#+10
   \   00000180   923121E0           MLA      R1,R2,R1,R3
   \   00000184   0F20E0E3           MVN      R2,#+15
   \   00000188   802FC2E3           BIC      R2,R2,#0x200
   \   0000018C   011082E0           ADD      R1,R2,R1
   \   00000190   0A1051E2           SUBS     R1,R1,#+10
   \   00000194   0200000A           BEQ      ??CreateSUDOKUMAPbyEXTFILE_2
   \   00000198   0A1051E2           SUBS     R1,R1,#+10
   \   0000019C   4500000A           BEQ      ??CreateSUDOKUMAPbyEXTFILE_3
   \   000001A0   7B0000EA           B        ??CreateSUDOKUMAPbyEXTFILE_4
   \                     ??CreateSUDOKUMAPbyEXTFILE_2:
   \   000001A4   0B0040E2           SUB      R0,R0,#+11
   \   000001A8   140000EF           SWI      +20
   \   000001AC   0080A0E1           MOV      R8,R0
   \   000001B0   0700A0E1           MOV      R0,R7
   \   000001B4   01002DE9           PUSH     {R0}
   \   000001B8   0030A0E1           MOV      R3,R0
   \   000001BC   0020A0E1           MOV      R2,R0
   \   000001C0   0B10A0E3           MOV      R1,#+11
   \   000001C4   0500A0E1           MOV      R0,R5
   \   000001C8   0F0000EF           SWI      +15
   \   000001CC   08009DE5           LDR      R0,[SP, #+8]
   \   000001D0   0730A0E1           MOV      R3,R7
   \   000001D4   0B2040E2           SUB      R2,R0,#+11
   \   000001D8   0810A0E1           MOV      R1,R8
   \   000001DC   0500A0E1           MOV      R0,R5
   \   000001E0   0B0000EF           SWI      +11
   \   000001E4   0010D8E5           LDRB     R1,[R8, #+0]
   \   000001E8   0090A0E3           MOV      R9,#+0
   \   000001EC   0700A0E1           MOV      R0,R7
   \   000001F0   0A0051E3           CMP      R1,#+10
   \   000001F4   04D08DE2           ADD      SP,SP,#+4
   \   000001F8   0400001A           BNE      ??CreateSUDOKUMAPbyEXTFILE_5
   \   000001FC   060000EA           B        ??CreateSUDOKUMAPbyEXTFILE_6
   \                     ??CreateSUDOKUMAPbyEXTFILE_7:
   \   00000200   200050E3           CMP      R0,#+32
   \   00000204   0610C037           STRBCC   R1,[R0, +R6]
   \   00000208   0090A031           MOVCC    R9,R0
   \   0000020C   010080E2           ADD      R0,R0,#+1
   \                     ??CreateSUDOKUMAPbyEXTFILE_5:
   \   00000210   0810D0E7           LDRB     R1,[R0, +R8]
   \   00000214   0A0051E3           CMP      R1,#+10
   \   00000218   F8FFFF1A           BNE      ??CreateSUDOKUMAPbyEXTFILE_7
   \                     ??CreateSUDOKUMAPbyEXTFILE_6:
   \   0000021C   0670C9E7           STRB     R7,[R9, +R6]
   \   00000220   0000D6E5           LDRB     R0,[R6, #+0]
   \   00000224   029089E2           ADD      R9,R9,#+2
   \   00000228   00A0A0E3           MOV      R10,#+0
   \   0000022C   000050E3           CMP      R0,#+0
   \   00000230   C600D605           LDRBEQ   R0,[R6, #+198]
   \   00000234   02008002           ADDEQ    R0,R0,#+2
   \   00000238   C600C605           STRBEQ   R0,[R6, #+198]
   \                     ??CreateSUDOKUMAPbyEXTFILE_8:
   \   0000023C   00B0A0E3           MOV      R11,#+0
   \                     ??CreateSUDOKUMAPbyEXTFILE_9:
   \   00000240   1200A0E3           MOV      R0,#+18
   \   00000244   909A21E0           MLA      R1,R0,R10,R9
   \   00000248   0A008BE0           ADD      R0,R11,R10
   \   0000024C   800081E0           ADD      R0,R1,R0, LSL #+1
   \   00000250   080080E0           ADD      R0,R0,R8
   \   00000254   0110D0E5           LDRB     R1,[R0, #+1]
   \   00000258   0000D0E5           LDRB     R0,[R0, #+0]
   \   0000025C   ........           BL       extmapv10_2_cell
   \   00000260   8A118AE0           ADD      R1,R10,R10, LSL #+3
   \   00000264   061081E0           ADD      R1,R1,R6
   \   00000268   01108BE0           ADD      R1,R11,R1
   \   0000026C   2300C1E5           STRB     R0,[R1, #+35]
   \   00000270   01B08BE2           ADD      R11,R11,#+1
   \   00000274   09005BE3           CMP      R11,#+9
   \   00000278   F0FFFFBA           BLT      ??CreateSUDOKUMAPbyEXTFILE_9
   \   0000027C   01A08AE2           ADD      R10,R10,#+1
   \   00000280   09005AE3           CMP      R10,#+9
   \   00000284   ECFFFFBA           BLT      ??CreateSUDOKUMAPbyEXTFILE_8
   \                     ??CreateSUDOKUMAPbyEXTFILE_10:
   \   00000288   0600A0E1           MOV      R0,R6
   \   0000028C   ........           BL       gcell_2_rcell
   \   00000290   0060A0E1           MOV      R6,R0
   \   00000294   0800D4E5           LDRB     R0,[R4, #+8]
   \   00000298   2000C6E5           STRB     R0,[R6, #+32]
   \   0000029C   C87086E5           STR      R7,[R6, #+200]
   \   000002A0   0600A0E1           MOV      R0,R6
   \   000002A4   ........           BL       CheckSUDOKUMAP
   \   000002A8   C700C6E5           STRB     R0,[R6, #+199]
   \   000002AC   0800A0E1           MOV      R0,R8
   \   000002B0   150000EF           SWI      +21
   \   000002B4   3A0000EA           B        ??CreateSUDOKUMAPbyEXTFILE_11
   \                     ??CreateSUDOKUMAPbyEXTFILE_3:
   \   000002B8   090040E2           SUB      R0,R0,#+9
   \   000002BC   140000EF           SWI      +20
   \   000002C0   0080A0E1           MOV      R8,R0
   \   000002C4   0700A0E1           MOV      R0,R7
   \   000002C8   01002DE9           PUSH     {R0}
   \   000002CC   0030A0E1           MOV      R3,R0
   \   000002D0   0020A0E1           MOV      R2,R0
   \   000002D4   0910A0E3           MOV      R1,#+9
   \   000002D8   0500A0E1           MOV      R0,R5
   \   000002DC   0F0000EF           SWI      +15
   \   000002E0   08009DE5           LDR      R0,[SP, #+8]
   \   000002E4   0730A0E1           MOV      R3,R7
   \   000002E8   092040E2           SUB      R2,R0,#+9
   \   000002EC   0810A0E1           MOV      R1,R8
   \   000002F0   0500A0E1           MOV      R0,R5
   \   000002F4   0B0000EF           SWI      +11
   \   000002F8   0000D8E5           LDRB     R0,[R8, #+0]
   \   000002FC   0090A0E3           MOV      R9,#+0
   \   00000300   04D08DE2           ADD      SP,SP,#+4
   \   00000304   000050E3           CMP      R0,#+0
   \   00000308   0500001A           BNE      ??CreateSUDOKUMAPbyEXTFILE_12
   \   0000030C   C600D6E5           LDRB     R0,[R6, #+198]
   \   00000310   0790E0E1           MVN      R9,R7
   \   00000314   020080E2           ADD      R0,R0,#+2
   \   00000318   C600C6E5           STRB     R0,[R6, #+198]
   \   0000031C   0070C6E5           STRB     R7,[R6, #+0]
   \   00000320   0A0000EA           B        ??CreateSUDOKUMAPbyEXTFILE_13
   \                     ??CreateSUDOKUMAPbyEXTFILE_12:
   \   00000324   0010D8E5           LDRB     R1,[R8, #+0]
   \   00000328   0000A0E3           MOV      R0,#+0
   \   0000032C   000051E3           CMP      R1,#+0
   \   00000330   0300001A           BNE      ??CreateSUDOKUMAPbyEXTFILE_14
   \   00000334   050000EA           B        ??CreateSUDOKUMAPbyEXTFILE_13
   \                     ??CreateSUDOKUMAPbyEXTFILE_15:
   \   00000338   0610C0E7           STRB     R1,[R0, +R6]
   \   0000033C   0090A0E1           MOV      R9,R0
   \   00000340   010080E2           ADD      R0,R0,#+1
   \                     ??CreateSUDOKUMAPbyEXTFILE_14:
   \   00000344   0810D0E7           LDRB     R1,[R0, +R8]
   \   00000348   000051E3           CMP      R1,#+0
   \   0000034C   F9FFFF1A           BNE      ??CreateSUDOKUMAPbyEXTFILE_15
   \                     ??CreateSUDOKUMAPbyEXTFILE_13:
   \   00000350   020089E2           ADD      R0,R9,#+2
   \   00000354   0010A0E3           MOV      R1,#+0
   \                     ??CreateSUDOKUMAPbyEXTFILE_16:
   \   00000358   0020A0E3           MOV      R2,#+0
   \                     ??CreateSUDOKUMAPbyEXTFILE_17:
   \   0000035C   813181E0           ADD      R3,R1,R1, LSL #+3
   \   00000360   069083E0           ADD      R9,R3,R6
   \   00000364   003083E0           ADD      R3,R3,R0
   \   00000368   033082E0           ADD      R3,R2,R3
   \   0000036C   0830D3E7           LDRB     R3,[R3, +R8]
   \   00000370   099082E0           ADD      R9,R2,R9
   \   00000374   012082E2           ADD      R2,R2,#+1
   \   00000378   2330C9E5           STRB     R3,[R9, #+35]
   \   0000037C   090052E3           CMP      R2,#+9
   \   00000380   F5FFFFBA           BLT      ??CreateSUDOKUMAPbyEXTFILE_17
   \   00000384   011081E2           ADD      R1,R1,#+1
   \   00000388   090051E3           CMP      R1,#+9
   \   0000038C   F1FFFFBA           BLT      ??CreateSUDOKUMAPbyEXTFILE_16
   \   00000390   BCFFFFEA           B        ??CreateSUDOKUMAPbyEXTFILE_10
   \                     ??CreateSUDOKUMAPbyEXTFILE_4:
   \   00000394   0300A0E3           MOV      R0,#+3
   \   00000398   000000EA           B        ??CreateSUDOKUMAPbyEXTFILE_18
   \                     ??CreateSUDOKUMAPbyEXTFILE_1:
   \   0000039C   0200A0E3           MOV      R0,#+2
   \                     ??CreateSUDOKUMAPbyEXTFILE_18:
   \   000003A0   C700C6E5           STRB     R0,[R6, #+199]
   \                     ??CreateSUDOKUMAPbyEXTFILE_11:
   \   000003A4   0010A0E3           MOV      R1,#+0
   \   000003A8   0500A0E1           MOV      R0,R5
   \   000003AC   0D0000EF           SWI      +13
   \   000003B0   010000EA           B        ??CreateSUDOKUMAPbyEXTFILE_19
   \                     ??CreateSUDOKUMAPbyEXTFILE_0:
   \   000003B4   0100A0E3           MOV      R0,#+1
   \   000003B8   C700C6E5           STRB     R0,[R6, #+199]
   \                     ??CreateSUDOKUMAPbyEXTFILE_19:
   \   000003BC   0400A0E1           MOV      R0,R4
   \   000003C0   150000EF           SWI      +21
   \   000003C4   0600A0E1           MOV      R0,R6
   \   000003C8   28D08DE2           ADD      SP,SP,#+40
   \   000003CC   F08FBDE8           POP      {R4-R11,PC}      ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs char CreateEXTFILEV20bySUDOKUMAP(struct <unnamed> *, char *, char)
   \                     CreateEXTFILEV20bySUDOKUMAP:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000004   ACD04DE2           SUB      SP,SP,#+172
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   0260A0E1           MOV      R6,R2
   \   00000014   0020A0E3           MOV      R2,#+0
   \   00000018   84108DE2           ADD      R1,SP,#+132
   \   0000001C   0500A0E1           MOV      R0,R5
   \   00000020   840000EF           SWI      +132
   \   00000024   010070E3           CMN      R0,#+1
   \   00000028   01005613           CMPNE    R6,#+1
   \   0000002C   C700D405           LDRBEQ   R0,[R4, #+199]
   \   00000030   00005003           CMPEQ    R0,#+0
   \   00000034   5800001A           BNE      ??CreateEXTFILEV20bySUDOKUMAP_0
   \   00000038   C600D4E5           LDRB     R0,[R4, #+198]
   \   0000003C   020050E3           CMP      R0,#+2
   \   00000040   5500002A           BCS      ??CreateEXTFILEV20bySUDOKUMAP_0
   \   00000044   010050E3           CMP      R0,#+1
   \   00000048   3F00A003           MOVEQ    R0,#+63
   \   0000004C   2000C405           STRBEQ   R0,[R4, #+32]
   \   00000050   5310A0E3           MOV      R1,#+83
   \   00000054   0010CDE5           STRB     R1,[SP, #+0]
   \   00000058   5500A0E3           MOV      R0,#+85
   \   0000005C   0100CDE5           STRB     R0,[SP, #+1]
   \   00000060   4420A0E3           MOV      R2,#+68
   \   00000064   0220CDE5           STRB     R2,[SP, #+2]
   \   00000068   4F20A0E3           MOV      R2,#+79
   \   0000006C   0320CDE5           STRB     R2,[SP, #+3]
   \   00000070   4B20A0E3           MOV      R2,#+75
   \   00000074   0420CDE5           STRB     R2,[SP, #+4]
   \   00000078   0500CDE5           STRB     R0,[SP, #+5]
   \   0000007C   3210A0E3           MOV      R1,#+50
   \   00000080   0610CDE5           STRB     R1,[SP, #+6]
   \   00000084   3010A0E3           MOV      R1,#+48
   \   00000088   0710CDE5           STRB     R1,[SP, #+7]
   \   0000008C   2010D4E5           LDRB     R1,[R4, #+32]
   \   00000090   0070A0E3           MOV      R7,#+0
   \   00000094   0810CDE5           STRB     R1,[SP, #+8]
   \   00000098   040000EA           B        ??CreateEXTFILEV20bySUDOKUMAP_1
   \                     ??CreateEXTFILEV20bySUDOKUMAP_2:
   \   0000009C   0410D7E7           LDRB     R1,[R7, +R4]
   \   000000A0   0D00A0E1           MOV      R0,SP
   \   000000A4   000087E0           ADD      R0,R7,R0
   \   000000A8   0910C0E5           STRB     R1,[R0, #+9]
   \   000000AC   017087E2           ADD      R7,R7,#+1
   \                     ??CreateEXTFILEV20bySUDOKUMAP_1:
   \   000000B0   0400A0E1           MOV      R0,R4
   \   000000B4   1B0000EF           SWI      +27
   \   000000B8   000057E1           CMP      R7,R0
   \   000000BC   F6FFFF3A           BCC      ??CreateEXTFILEV20bySUDOKUMAP_2
   \   000000C0   0070A0E3           MOV      R7,#+0
   \   000000C4   0400A0E1           MOV      R0,R4
   \   000000C8   1B0000EF           SWI      +27
   \   000000CC   0D10A0E1           MOV      R1,SP
   \   000000D0   010080E0           ADD      R0,R0,R1
   \   000000D4   0970C0E5           STRB     R7,[R0, #+9]
   \   000000D8   0080A0E3           MOV      R8,#+0
   \                     ??CreateEXTFILEV20bySUDOKUMAP_3:
   \   000000DC   0090A0E3           MOV      R9,#+0
   \   000000E0   88A188E0           ADD      R10,R8,R8, LSL #+3
   \                     ??CreateEXTFILEV20bySUDOKUMAP_4:
   \   000000E4   0AB089E0           ADD      R11,R9,R10
   \   000000E8   0400A0E1           MOV      R0,R4
   \   000000EC   1B0000EF           SWI      +27
   \   000000F0   0B0080E0           ADD      R0,R0,R11
   \   000000F4   0D10A0E1           MOV      R1,SP
   \   000000F8   010080E0           ADD      R0,R0,R1
   \   000000FC   04108AE0           ADD      R1,R10,R4
   \   00000100   011089E0           ADD      R1,R9,R1
   \   00000104   2310D1E5           LDRB     R1,[R1, #+35]
   \   00000108   019089E2           ADD      R9,R9,#+1
   \   0000010C   090059E3           CMP      R9,#+9
   \   00000110   0A10C0E5           STRB     R1,[R0, #+10]
   \   00000114   F2FFFFBA           BLT      ??CreateEXTFILEV20bySUDOKUMAP_4
   \   00000118   018088E2           ADD      R8,R8,#+1
   \   0000011C   090058E3           CMP      R8,#+9
   \   00000120   EDFFFFBA           BLT      ??CreateEXTFILEV20bySUDOKUMAP_3
   \   00000124   0400A0E1           MOV      R0,R4
   \   00000128   1B0000EF           SWI      +27
   \   0000012C   0D10A0E1           MOV      R1,SP
   \   00000130   010080E0           ADD      R0,R0,R1
   \   00000134   0970C0E5           STRB     R7,[R0, #+9]
   \   00000138   010056E3           CMP      R6,#+1
   \   0000013C   0200001A           BNE      ??CreateEXTFILEV20bySUDOKUMAP_5
   \   00000140   0010A0E3           MOV      R1,#+0
   \   00000144   0500A0E1           MOV      R0,R5
   \   00000148   6B0100EF           SWI      +363
   \                     ??CreateEXTFILEV20bySUDOKUMAP_5:
   \   0000014C   0030A0E3           MOV      R3,#+0
   \   00000150   402FA0E3           MOV      R2,#+256
   \   00000154   0110A0E3           MOV      R1,#+1
   \   00000158   811C81E3           ORR      R1,R1,#0x8100
   \   0000015C   0500A0E1           MOV      R0,R5
   \   00000160   0A0000EF           SWI      +10
   \   00000164   0050A0E1           MOV      R5,R0
   \   00000168   0400A0E1           MOV      R0,R4
   \   0000016C   1B0000EF           SWI      +27
   \   00000170   0730A0E1           MOV      R3,R7
   \   00000174   5B2080E2           ADD      R2,R0,#+91
   \   00000178   0D10A0E1           MOV      R1,SP
   \   0000017C   0500A0E1           MOV      R0,R5
   \   00000180   0C0000EF           SWI      +12
   \   00000184   0710A0E1           MOV      R1,R7
   \   00000188   0500A0E1           MOV      R0,R5
   \   0000018C   0D0000EF           SWI      +13
   \   00000190   0100A0E3           MOV      R0,#+1
   \   00000194   ACD08DE2           ADD      SP,SP,#+172
   \   00000198   F08FBDE8           POP      {R4-R11,PC}
   \                     ??CreateEXTFILEV20bySUDOKUMAP_0:
   \   0000019C   0000A0E3           MOV      R0,#+0
   \   000001A0   ACD08DE2           ADD      SP,SP,#+172
   \   000001A4   F08FBDE8           POP      {R4-R11,PC}      ;; return
     97          #include "engine\fileop\ssf_work.h"  //Библиотека ф-ий для работы с ssf - фаилами  [!]

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs char int_2_twochar(int, char)
   \                     int_2_twochar:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   08D04DE2           SUB      SP,SP,#+8
   \   00000008   0020A0E1           MOV      R2,R0
   \   0000000C   0140A0E1           MOV      R4,R1
   \   00000010   34109FE5           LDR      R1,??int_2_twochar_0  ;; `?<Constant "%04d">`
   \   00000014   0D00A0E1           MOV      R0,SP
   \   00000018   160000EF           SWI      +22
   \   0000001C   000054E3           CMP      R4,#+0
   \   00000020   0200001A           BNE      ??int_2_twochar_1
   \   00000024   0000DDE5           LDRB     R0,[SP, #+0]
   \   00000028   0120DDE5           LDRB     R2,[SP, #+1]
   \   0000002C   010000EA           B        ??int_2_twochar_2
   \                     ??int_2_twochar_1:
   \   00000030   0200DDE5           LDRB     R0,[SP, #+2]
   \   00000034   0320DDE5           LDRB     R2,[SP, #+3]
   \                     ??int_2_twochar_2:
   \   00000038   0A10A0E3           MOV      R1,#+10
   \   0000003C   912020E0           MLA      R0,R1,R0,R2
   \   00000040   F00080E2           ADD      R0,R0,#+240
   \   00000044   FF0000E2           AND      R0,R0,#0xFF
   \   00000048   1680BDE8           POP      {R1,R2,R4,PC}    ;; return
   \                     ??int_2_twochar_0:
   \   0000004C   ........           DC32     `?<Constant "%04d">`

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs char int_2_fourchar(int, char)
   \                     int_2_fourchar:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0CD04DE2           SUB      SP,SP,#+12
   \   00000008   0140A0E1           MOV      R4,R1
   \   0000000C   6C109FE5           LDR      R1,??int_2_fourchar_0  ;; `?<Constant "%08d">`
   \   00000010   0050A0E3           MOV      R5,#+0
   \   00000014   0020A0E1           MOV      R2,R0
   \   00000018   0D00A0E1           MOV      R0,SP
   \   0000001C   160000EF           SWI      +22
   \   00000020   000054E3           CMP      R4,#+0
   \   00000024   0200001A           BNE      ??int_2_fourchar_1
   \   00000028   0000DDE5           LDRB     R0,[SP, #+0]
   \   0000002C   0120DDE5           LDRB     R2,[SP, #+1]
   \   00000030   0D0000EA           B        ??int_2_fourchar_2
   \                     ??int_2_fourchar_1:
   \   00000034   010054E3           CMP      R4,#+1
   \   00000038   0200001A           BNE      ??int_2_fourchar_3
   \   0000003C   0200DDE5           LDRB     R0,[SP, #+2]
   \   00000040   0320DDE5           LDRB     R2,[SP, #+3]
   \   00000044   080000EA           B        ??int_2_fourchar_2
   \                     ??int_2_fourchar_3:
   \   00000048   020054E3           CMP      R4,#+2
   \   0000004C   0200001A           BNE      ??int_2_fourchar_4
   \   00000050   0400DDE5           LDRB     R0,[SP, #+4]
   \   00000054   0520DDE5           LDRB     R2,[SP, #+5]
   \   00000058   030000EA           B        ??int_2_fourchar_2
   \                     ??int_2_fourchar_4:
   \   0000005C   030054E3           CMP      R4,#+3
   \   00000060   0400001A           BNE      ??int_2_fourchar_5
   \   00000064   0600DDE5           LDRB     R0,[SP, #+6]
   \   00000068   0720DDE5           LDRB     R2,[SP, #+7]
   \                     ??int_2_fourchar_2:
   \   0000006C   0A10A0E3           MOV      R1,#+10
   \   00000070   912020E0           MLA      R0,R1,R0,R2
   \   00000074   F05080E2           ADD      R5,R0,#+240
   \                     ??int_2_fourchar_5:
   \   00000078   FF0005E2           AND      R0,R5,#0xFF
   \   0000007C   3E80BDE8           POP      {R1-R5,PC}       ;; return
   \                     ??int_2_fourchar_0:
   \   00000080   ........           DC32     `?<Constant "%08d">`

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs struct <unnamed> *CreateSUDOKUMAPbySSFFILE(char *)
   \                     CreateSUDOKUMAPbySSFFILE:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   34D04DE2           SUB      SP,SP,#+52
   \   00000008   0050A0E1           MOV      R5,R0
   \   0000000C   CC00A0E3           MOV      R0,#+204
   \   00000010   140000EF           SWI      +20
   \   00000014   0040A0E1           MOV      R4,R0
   \   00000018   0020A0E3           MOV      R2,#+0
   \   0000001C   0C108DE2           ADD      R1,SP,#+12
   \   00000020   0500A0E1           MOV      R0,R5
   \   00000024   840000EF           SWI      +132
   \   00000028   010070E3           CMN      R0,#+1
   \   0000002C   10009D15           LDRNE    R0,[SP, #+16]
   \   00000030   00005013           CMPNE    R0,#+0
   \   00000034   EE00000A           BEQ      ??CreateSUDOKUMAPbySSFFILE_0
   \   00000038   0030A0E3           MOV      R3,#+0
   \   0000003C   8020A0E3           MOV      R2,#+128
   \   00000040   801CA0E3           MOV      R1,#+32768
   \   00000044   0500A0E1           MOV      R0,R5
   \   00000048   0A0000EF           SWI      +10
   \   0000004C   0050A0E1           MOV      R5,R0
   \   00000050   0030A0E3           MOV      R3,#+0
   \   00000054   0120A0E3           MOV      R2,#+1
   \   00000058   01108DE2           ADD      R1,SP,#+1
   \   0000005C   0B0000EF           SWI      +11
   \   00000060   0030A0E3           MOV      R3,#+0
   \   00000064   0120A0E3           MOV      R2,#+1
   \   00000068   02108DE2           ADD      R1,SP,#+2
   \   0000006C   0500A0E1           MOV      R0,R5
   \   00000070   0B0000EF           SWI      +11
   \   00000074   0030A0E3           MOV      R3,#+0
   \   00000078   0120A0E3           MOV      R2,#+1
   \   0000007C   03108DE2           ADD      R1,SP,#+3
   \   00000080   0500A0E1           MOV      R0,R5
   \   00000084   0B0000EF           SWI      +11
   \   00000088   0030A0E3           MOV      R3,#+0
   \   0000008C   0120A0E3           MOV      R2,#+1
   \   00000090   08108DE2           ADD      R1,SP,#+8
   \   00000094   0500A0E1           MOV      R0,R5
   \   00000098   0B0000EF           SWI      +11
   \   0000009C   0030A0E3           MOV      R3,#+0
   \   000000A0   0120A0E3           MOV      R2,#+1
   \   000000A4   09108DE2           ADD      R1,SP,#+9
   \   000000A8   0500A0E1           MOV      R0,R5
   \   000000AC   0B0000EF           SWI      +11
   \   000000B0   0030A0E3           MOV      R3,#+0
   \   000000B4   0120A0E3           MOV      R2,#+1
   \   000000B8   0D10A0E1           MOV      R1,SP
   \   000000BC   0500A0E1           MOV      R0,R5
   \   000000C0   0B0000EF           SWI      +11
   \   000000C4   0000A0E3           MOV      R0,#+0
   \   000000C8   01002DE9           PUSH     {R0}
   \   000000CC   0030A0E3           MOV      R3,#+0
   \   000000D0   0020A0E1           MOV      R2,R0
   \   000000D4   0C10A0E3           MOV      R1,#+12
   \   000000D8   0500A0E1           MOV      R0,R5
   \   000000DC   0F0000EF           SWI      +15
   \   000000E0   0030A0E3           MOV      R3,#+0
   \   000000E4   0120A0E3           MOV      R2,#+1
   \   000000E8   08108DE2           ADD      R1,SP,#+8
   \   000000EC   0500A0E1           MOV      R0,R5
   \   000000F0   0B0000EF           SWI      +11
   \   000000F4   0030A0E3           MOV      R3,#+0
   \   000000F8   0120A0E3           MOV      R2,#+1
   \   000000FC   09108DE2           ADD      R1,SP,#+9
   \   00000100   0500A0E1           MOV      R0,R5
   \   00000104   0B0000EF           SWI      +11
   \   00000108   0030A0E3           MOV      R3,#+0
   \   0000010C   0120A0E3           MOV      R2,#+1
   \   00000110   0A108DE2           ADD      R1,SP,#+10
   \   00000114   0500A0E1           MOV      R0,R5
   \   00000118   0B0000EF           SWI      +11
   \   0000011C   0030A0E3           MOV      R3,#+0
   \   00000120   0120A0E3           MOV      R2,#+1
   \   00000124   0B108DE2           ADD      R1,SP,#+11
   \   00000128   0500A0E1           MOV      R0,R5
   \   0000012C   0B0000EF           SWI      +11
   \   00000130   0030A0E3           MOV      R3,#+0
   \   00000134   0120A0E3           MOV      R2,#+1
   \   00000138   201084E2           ADD      R1,R4,#+32
   \   0000013C   0500A0E1           MOV      R0,R5
   \   00000140   0B0000EF           SWI      +11
   \   00000144   0070A0E3           MOV      R7,#+0
   \   00000148   C670C4E5           STRB     R7,[R4, #+198]
   \   0000014C   2000D4E5           LDRB     R0,[R4, #+32]
   \   00000150   04D08DE2           ADD      SP,SP,#+4
   \   00000154   4C0050E3           CMP      R0,#+76
   \   00000158   4D005013           CMPNE    R0,#+77
   \   0000015C   48005013           CMPNE    R0,#+72
   \   00000160   01008712           ADDNE    R0,R7,#+1
   \   00000164   C600C415           STRBNE   R0,[R4, #+198]
   \   00000168   0100DDE5           LDRB     R0,[SP, #+1]
   \   0000016C   530050E3           CMP      R0,#+83
   \   00000170   0200DD05           LDRBEQ   R0,[SP, #+2]
   \   00000174   53005003           CMPEQ    R0,#+83
   \   00000178   0300DD05           LDRBEQ   R0,[SP, #+3]
   \   0000017C   46005003           CMPEQ    R0,#+70
   \   00000180   9300001A           BNE      ??CreateSUDOKUMAPbySSFFILE_1
   \   00000184   10009DE5           LDR      R0,[SP, #+16]
   \   00000188   0080A0E3           MOV      R8,#+0
   \   0000018C   100040E2           SUB      R0,R0,#+16
   \   00000190   140000EF           SWI      +20
   \   00000194   0060A0E1           MOV      R6,R0
   \   00000198   0700A0E1           MOV      R0,R7
   \   0000019C   01002DE9           PUSH     {R0}
   \   000001A0   0030A0E1           MOV      R3,R0
   \   000001A4   0020A0E1           MOV      R2,R0
   \   000001A8   1110A0E3           MOV      R1,#+17
   \   000001AC   0500A0E1           MOV      R0,R5
   \   000001B0   0F0000EF           SWI      +15
   \   000001B4   14009DE5           LDR      R0,[SP, #+20]
   \   000001B8   0730A0E1           MOV      R3,R7
   \   000001BC   102040E2           SUB      R2,R0,#+16
   \   000001C0   0610A0E1           MOV      R1,R6
   \   000001C4   0500A0E1           MOV      R0,R5
   \   000001C8   0B0000EF           SWI      +11
   \   000001CC   0000D6E5           LDRB     R0,[R6, #+0]
   \   000001D0   04D08DE2           ADD      SP,SP,#+4
   \   000001D4   000050E3           CMP      R0,#+0
   \   000001D8   0500001A           BNE      ??CreateSUDOKUMAPbySSFFILE_2
   \   000001DC   C600D4E5           LDRB     R0,[R4, #+198]
   \   000001E0   0780E0E1           MVN      R8,R7
   \   000001E4   020080E2           ADD      R0,R0,#+2
   \   000001E8   C600C4E5           STRB     R0,[R4, #+198]
   \   000001EC   0070C4E5           STRB     R7,[R4, #+0]
   \   000001F0   0A0000EA           B        ??CreateSUDOKUMAPbySSFFILE_3
   \                     ??CreateSUDOKUMAPbySSFFILE_2:
   \   000001F4   0010D6E5           LDRB     R1,[R6, #+0]
   \   000001F8   0000A0E3           MOV      R0,#+0
   \   000001FC   000051E3           CMP      R1,#+0
   \   00000200   0300001A           BNE      ??CreateSUDOKUMAPbySSFFILE_4
   \   00000204   050000EA           B        ??CreateSUDOKUMAPbySSFFILE_3
   \                     ??CreateSUDOKUMAPbySSFFILE_5:
   \   00000208   0410C0E7           STRB     R1,[R0, +R4]
   \   0000020C   0080A0E1           MOV      R8,R0
   \   00000210   010080E2           ADD      R0,R0,#+1
   \                     ??CreateSUDOKUMAPbySSFFILE_4:
   \   00000214   0610D0E7           LDRB     R1,[R0, +R6]
   \   00000218   000051E3           CMP      R1,#+0
   \   0000021C   F9FFFF1A           BNE      ??CreateSUDOKUMAPbySSFFILE_5
   \                     ??CreateSUDOKUMAPbySSFFILE_3:
   \   00000220   020088E2           ADD      R0,R8,#+2
   \   00000224   0010A0E3           MOV      R1,#+0
   \                     ??CreateSUDOKUMAPbySSFFILE_6:
   \   00000228   0020A0E3           MOV      R2,#+0
   \                     ??CreateSUDOKUMAPbySSFFILE_7:
   \   0000022C   813181E0           ADD      R3,R1,R1, LSL #+3
   \   00000230   047083E0           ADD      R7,R3,R4
   \   00000234   003083E0           ADD      R3,R3,R0
   \   00000238   033082E0           ADD      R3,R2,R3
   \   0000023C   0630D3E7           LDRB     R3,[R3, +R6]
   \   00000240   077082E0           ADD      R7,R2,R7
   \   00000244   012082E2           ADD      R2,R2,#+1
   \   00000248   2330C7E5           STRB     R3,[R7, #+35]
   \   0000024C   090052E3           CMP      R2,#+9
   \   00000250   F5FFFFBA           BLT      ??CreateSUDOKUMAPbySSFFILE_7
   \   00000254   011081E2           ADD      R1,R1,#+1
   \   00000258   090051E3           CMP      R1,#+9
   \   0000025C   F1FFFFBA           BLT      ??CreateSUDOKUMAPbySSFFILE_6
   \   00000260   510080E2           ADD      R0,R0,#+81
   \   00000264   0010A0E3           MOV      R1,#+0
   \                     ??CreateSUDOKUMAPbySSFFILE_8:
   \   00000268   0020A0E3           MOV      R2,#+0
   \                     ??CreateSUDOKUMAPbySSFFILE_9:
   \   0000026C   813181E0           ADD      R3,R1,R1, LSL #+3
   \   00000270   047083E0           ADD      R7,R3,R4
   \   00000274   003083E0           ADD      R3,R3,R0
   \   00000278   033082E0           ADD      R3,R2,R3
   \   0000027C   0630D3E7           LDRB     R3,[R3, +R6]
   \   00000280   077082E0           ADD      R7,R2,R7
   \   00000284   012082E2           ADD      R2,R2,#+1
   \   00000288   7430C7E5           STRB     R3,[R7, #+116]
   \   0000028C   090052E3           CMP      R2,#+9
   \   00000290   F5FFFFBA           BLT      ??CreateSUDOKUMAPbySSFFILE_9
   \   00000294   011081E2           ADD      R1,R1,#+1
   \   00000298   090051E3           CMP      R1,#+9
   \   0000029C   F1FFFFBA           BLT      ??CreateSUDOKUMAPbySSFFILE_8
   \   000002A0   0400A0E1           MOV      R0,R4
   \   000002A4   ........           BL       CheckSUDOKUMAP
   \   000002A8   C700C4E5           STRB     R0,[R4, #+199]
   \   000002AC   0000A0E3           MOV      R0,#+0
   \   000002B0   0430A0E3           MOV      R3,#+4
   \                     ??CreateSUDOKUMAPbySSFFILE_10:
   \   000002B4   0010A0E3           MOV      R1,#+0
   \                     ??CreateSUDOKUMAPbySSFFILE_11:
   \   000002B8   802180E0           ADD      R2,R0,R0, LSL #+3
   \   000002BC   042082E0           ADD      R2,R2,R4
   \   000002C0   027081E0           ADD      R7,R1,R2
   \   000002C4   2370D7E5           LDRB     R7,[R7, #+35]
   \   000002C8   3A0057E3           CMP      R7,#+58
   \   000002CC   1900002A           BCS      ??CreateSUDOKUMAPbySSFFILE_12
   \   000002D0   027081E0           ADD      R7,R1,R2
   \   000002D4   2370D7E5           LDRB     R7,[R7, #+35]
   \   000002D8   000057E3           CMP      R7,#+0
   \   000002DC   1500000A           BEQ      ??CreateSUDOKUMAPbySSFFILE_12
   \   000002E0   027081E0           ADD      R7,R1,R2
   \   000002E4   2370D7E5           LDRB     R7,[R7, #+35]
   \   000002E8   0A0057E3           CMP      R7,#+10
   \   000002EC   0300003A           BCC      ??CreateSUDOKUMAPbySSFFILE_13
   \   000002F0   027081E0           ADD      R7,R1,R2
   \   000002F4   2370D7E5           LDRB     R7,[R7, #+35]
   \   000002F8   110057E3           CMP      R7,#+17
   \   000002FC   0D00003A           BCC      ??CreateSUDOKUMAPbySSFFILE_12
   \                     ??CreateSUDOKUMAPbySSFFILE_13:
   \   00000300   027081E0           ADD      R7,R1,R2
   \   00000304   2370D7E5           LDRB     R7,[R7, #+35]
   \   00000308   1A0057E3           CMP      R7,#+26
   \   0000030C   0300003A           BCC      ??CreateSUDOKUMAPbySSFFILE_14
   \   00000310   027081E0           ADD      R7,R1,R2
   \   00000314   2370D7E5           LDRB     R7,[R7, #+35]
   \   00000318   210057E3           CMP      R7,#+33
   \   0000031C   0500003A           BCC      ??CreateSUDOKUMAPbySSFFILE_12
   \                     ??CreateSUDOKUMAPbySSFFILE_14:
   \   00000320   027081E0           ADD      R7,R1,R2
   \   00000324   2370D7E5           LDRB     R7,[R7, #+35]
   \   00000328   2A0057E3           CMP      R7,#+42
   \   0000032C   0200003A           BCC      ??CreateSUDOKUMAPbySSFFILE_15
   \   00000330   310057E3           CMP      R7,#+49
   \   00000334   0000002A           BCS      ??CreateSUDOKUMAPbySSFFILE_15
   \                     ??CreateSUDOKUMAPbySSFFILE_12:
   \   00000338   C730C4E5           STRB     R3,[R4, #+199]
   \                     ??CreateSUDOKUMAPbySSFFILE_15:
   \   0000033C   011081E2           ADD      R1,R1,#+1
   \   00000340   090051E3           CMP      R1,#+9
   \   00000344   DBFFFFBA           BLT      ??CreateSUDOKUMAPbySSFFILE_11
   \   00000348   010080E2           ADD      R0,R0,#+1
   \   0000034C   090050E3           CMP      R0,#+9
   \   00000350   D7FFFFBA           BLT      ??CreateSUDOKUMAPbySSFFILE_10
   \   00000354   0800DDE5           LDRB     R0,[SP, #+8]
   \   00000358   C90050E3           CMP      R0,#+201
   \   0000035C   C500C435           STRBCC   R0,[R4, #+197]
   \   00000360   C730C425           STRBCS   R3,[R4, #+199]
   \   00000364   0900DDE5           LDRB     R0,[SP, #+9]
   \   00000368   0A0050E3           CMP      R0,#+10
   \   0000036C   0000DD35           LDRBCC   R0,[SP, #+0]
   \   00000370   0A005033           CMPCC    R0,#+10
   \   00000374   0400002A           BCS      ??CreateSUDOKUMAPbySSFFILE_16
   \   00000378   0900DDE5           LDRB     R0,[SP, #+9]
   \   0000037C   2100C4E5           STRB     R0,[R4, #+33]
   \   00000380   0000DDE5           LDRB     R0,[SP, #+0]
   \   00000384   2200C4E5           STRB     R0,[R4, #+34]
   \   00000388   000000EA           B        ??CreateSUDOKUMAPbySSFFILE_17
   \                     ??CreateSUDOKUMAPbySSFFILE_16:
   \   0000038C   C730C4E5           STRB     R3,[R4, #+199]
   \                     ??CreateSUDOKUMAPbySSFFILE_17:
   \   00000390   0400DDE5           LDRB     R0,[SP, #+4]
   \   00000394   0520DDE5           LDRB     R2,[SP, #+5]
   \   00000398   F41AA0E3           MOV      R1,#+999424
   \   0000039C   901F81E3           ORR      R1,R1,#0x240
   \   000003A0   1030A0E3           MOV      R3,#+16
   \   000003A4   9C3D83E3           ORR      R3,R3,#0x2700
   \   000003A8   930202E0           MUL      R2,R3,R2
   \   000003AC   912020E0           MLA      R0,R1,R0,R2
   \   000003B0   0610DDE5           LDRB     R1,[SP, #+6]
   \   000003B4   6420A0E3           MOV      R2,#+100
   \   000003B8   920120E0           MLA      R0,R2,R1,R0
   \   000003BC   0710DDE5           LDRB     R1,[SP, #+7]
   \   000003C0   000081E0           ADD      R0,R1,R0
   \   000003C4   C80084E5           STR      R0,[R4, #+200]
   \   000003C8   0600A0E1           MOV      R0,R6
   \   000003CC   150000EF           SWI      +21
   \   000003D0   010000EA           B        ??CreateSUDOKUMAPbySSFFILE_18
   \                     ??CreateSUDOKUMAPbySSFFILE_1:
   \   000003D4   0200A0E3           MOV      R0,#+2
   \   000003D8   C700C4E5           STRB     R0,[R4, #+199]
   \                     ??CreateSUDOKUMAPbySSFFILE_18:
   \   000003DC   0010A0E3           MOV      R1,#+0
   \   000003E0   0500A0E1           MOV      R0,R5
   \   000003E4   0D0000EF           SWI      +13
   \   000003E8   0400A0E1           MOV      R0,R4
   \   000003EC   34D08DE2           ADD      SP,SP,#+52
   \   000003F0   F081BDE8           POP      {R4-R8,PC}
   \                     ??CreateSUDOKUMAPbySSFFILE_0:
   \   000003F4   0100A0E3           MOV      R0,#+1
   \   000003F8   C700C4E5           STRB     R0,[R4, #+199]
   \   000003FC   0400A0E1           MOV      R0,R4
   \   00000400   34D08DE2           ADD      SP,SP,#+52
   \   00000404   F081BDE8           POP      {R4-R8,PC}       ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs char CreateSSFFILEbySUDOKUMAP(struct <unnamed> *, char *)
   \                     CreateSSFFILEbySUDOKUMAP:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   \   00000004   ECD04DE2           SUB      SP,SP,#+236
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   C700D4E5           LDRB     R0,[R4, #+199]
   \   00000010   0150A0E1           MOV      R5,R1
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   8500001A           BNE      ??CreateSSFFILEbySUDOKUMAP_0
   \   0000001C   C610D4E5           LDRB     R1,[R4, #+198]
   \   00000020   3F00A0E3           MOV      R0,#+63
   \   00000024   0060A0E3           MOV      R6,#+0
   \   00000028   010051E3           CMP      R1,#+1
   \   0000002C   2000C405           STRBEQ   R0,[R4, #+32]
   \   00000030   020051E3           CMP      R1,#+2
   \   00000034   0060C405           STRBEQ   R6,[R4, #+0]
   \   00000038   030051E3           CMP      R1,#+3
   \   0000003C   2000C405           STRBEQ   R0,[R4, #+32]
   \   00000040   0060C405           STRBEQ   R6,[R4, #+0]
   \   00000044   08108DE2           ADD      R1,SP,#+8
   \   00000048   0D00A0E1           MOV      R0,SP
   \   0000004C   B40000EF           SWI      +180
   \   00000050   5310A0E3           MOV      R1,#+83
   \   00000054   1010CDE5           STRB     R1,[SP, #+16]
   \   00000058   1110CDE5           STRB     R1,[SP, #+17]
   \   0000005C   4610A0E3           MOV      R1,#+70
   \   00000060   1210CDE5           STRB     R1,[SP, #+18]
   \   00000064   C510D4E5           LDRB     R1,[R4, #+197]
   \   00000068   0670A0E1           MOV      R7,R6
   \   0000006C   1310CDE5           STRB     R1,[SP, #+19]
   \   00000070   2110D4E5           LDRB     R1,[R4, #+33]
   \   00000074   1410CDE5           STRB     R1,[SP, #+20]
   \   00000078   2210D4E5           LDRB     R1,[R4, #+34]
   \   0000007C   1510CDE5           STRB     R1,[SP, #+21]
   \   00000080   0810DDE5           LDRB     R1,[SP, #+8]
   \   00000084   1610CDE5           STRB     R1,[SP, #+22]
   \   00000088   0910DDE5           LDRB     R1,[SP, #+9]
   \   0000008C   1710CDE5           STRB     R1,[SP, #+23]
   \   00000090   0510DDE5           LDRB     R1,[SP, #+5]
   \   00000094   1810CDE5           STRB     R1,[SP, #+24]
   \   00000098   0410DDE5           LDRB     R1,[SP, #+4]
   \   0000009C   1910CDE5           STRB     R1,[SP, #+25]
   \   000000A0   00009DE5           LDR      R0,[SP, #+0]
   \   000000A4   0010A0E3           MOV      R1,#+0
   \   000000A8   ........           BL       int_2_twochar
   \   000000AC   1A00CDE5           STRB     R0,[SP, #+26]
   \   000000B0   00009DE5           LDR      R0,[SP, #+0]
   \   000000B4   0110A0E3           MOV      R1,#+1
   \   000000B8   ........           BL       int_2_twochar
   \   000000BC   1B00CDE5           STRB     R0,[SP, #+27]
   \   000000C0   C80094E5           LDR      R0,[R4, #+200]
   \   000000C4   0610A0E1           MOV      R1,R6
   \   000000C8   ........           BL       int_2_fourchar
   \   000000CC   1C00CDE5           STRB     R0,[SP, #+28]
   \   000000D0   C80094E5           LDR      R0,[R4, #+200]
   \   000000D4   0110A0E3           MOV      R1,#+1
   \   000000D8   ........           BL       int_2_fourchar
   \   000000DC   1D00CDE5           STRB     R0,[SP, #+29]
   \   000000E0   C80094E5           LDR      R0,[R4, #+200]
   \   000000E4   0210A0E3           MOV      R1,#+2
   \   000000E8   ........           BL       int_2_fourchar
   \   000000EC   1E00CDE5           STRB     R0,[SP, #+30]
   \   000000F0   C80094E5           LDR      R0,[R4, #+200]
   \   000000F4   0310A0E3           MOV      R1,#+3
   \   000000F8   ........           BL       int_2_fourchar
   \   000000FC   1F00CDE5           STRB     R0,[SP, #+31]
   \   00000100   2010D4E5           LDRB     R1,[R4, #+32]
   \   00000104   2010CDE5           STRB     R1,[SP, #+32]
   \   00000108   040000EA           B        ??CreateSSFFILEbySUDOKUMAP_1
   \                     ??CreateSSFFILEbySUDOKUMAP_2:
   \   0000010C   0410D7E7           LDRB     R1,[R7, +R4]
   \   00000110   10008DE2           ADD      R0,SP,#+16
   \   00000114   000087E0           ADD      R0,R7,R0
   \   00000118   1110C0E5           STRB     R1,[R0, #+17]
   \   0000011C   017087E2           ADD      R7,R7,#+1
   \                     ??CreateSSFFILEbySUDOKUMAP_1:
   \   00000120   0400A0E1           MOV      R0,R4
   \   00000124   1B0000EF           SWI      +27
   \   00000128   000057E1           CMP      R7,R0
   \   0000012C   F6FFFF3A           BCC      ??CreateSSFFILEbySUDOKUMAP_2
   \   00000130   0400A0E1           MOV      R0,R4
   \   00000134   1B0000EF           SWI      +27
   \   00000138   10108DE2           ADD      R1,SP,#+16
   \   0000013C   010080E0           ADD      R0,R0,R1
   \   00000140   1160C0E5           STRB     R6,[R0, #+17]
   \                     ??CreateSSFFILEbySUDOKUMAP_3:
   \   00000144   0070A0E3           MOV      R7,#+0
   \   00000148   868186E0           ADD      R8,R6,R6, LSL #+3
   \                     ??CreateSSFFILEbySUDOKUMAP_4:
   \   0000014C   089087E0           ADD      R9,R7,R8
   \   00000150   0400A0E1           MOV      R0,R4
   \   00000154   1B0000EF           SWI      +27
   \   00000158   090080E0           ADD      R0,R0,R9
   \   0000015C   10108DE2           ADD      R1,SP,#+16
   \   00000160   010080E0           ADD      R0,R0,R1
   \   00000164   041088E0           ADD      R1,R8,R4
   \   00000168   011087E0           ADD      R1,R7,R1
   \   0000016C   2310D1E5           LDRB     R1,[R1, #+35]
   \   00000170   017087E2           ADD      R7,R7,#+1
   \   00000174   090057E3           CMP      R7,#+9
   \   00000178   1210C0E5           STRB     R1,[R0, #+18]
   \   0000017C   F2FFFFBA           BLT      ??CreateSSFFILEbySUDOKUMAP_4
   \   00000180   016086E2           ADD      R6,R6,#+1
   \   00000184   090056E3           CMP      R6,#+9
   \   00000188   EDFFFFBA           BLT      ??CreateSSFFILEbySUDOKUMAP_3
   \   0000018C   0060A0E3           MOV      R6,#+0
   \                     ??CreateSSFFILEbySUDOKUMAP_5:
   \   00000190   0070A0E3           MOV      R7,#+0
   \   00000194   868186E0           ADD      R8,R6,R6, LSL #+3
   \                     ??CreateSSFFILEbySUDOKUMAP_6:
   \   00000198   089087E0           ADD      R9,R7,R8
   \   0000019C   0400A0E1           MOV      R0,R4
   \   000001A0   1B0000EF           SWI      +27
   \   000001A4   090080E0           ADD      R0,R0,R9
   \   000001A8   10108DE2           ADD      R1,SP,#+16
   \   000001AC   010080E0           ADD      R0,R0,R1
   \   000001B0   041088E0           ADD      R1,R8,R4
   \   000001B4   011087E0           ADD      R1,R7,R1
   \   000001B8   7410D1E5           LDRB     R1,[R1, #+116]
   \   000001BC   017087E2           ADD      R7,R7,#+1
   \   000001C0   090057E3           CMP      R7,#+9
   \   000001C4   6310C0E5           STRB     R1,[R0, #+99]
   \   000001C8   F2FFFFBA           BLT      ??CreateSSFFILEbySUDOKUMAP_6
   \   000001CC   016086E2           ADD      R6,R6,#+1
   \   000001D0   090056E3           CMP      R6,#+9
   \   000001D4   EDFFFFBA           BLT      ??CreateSSFFILEbySUDOKUMAP_5
   \   000001D8   0010A0E3           MOV      R1,#+0
   \   000001DC   0500A0E1           MOV      R0,R5
   \   000001E0   6B0100EF           SWI      +363
   \   000001E4   0030A0E3           MOV      R3,#+0
   \   000001E8   402FA0E3           MOV      R2,#+256
   \   000001EC   0110A0E3           MOV      R1,#+1
   \   000001F0   811C81E3           ORR      R1,R1,#0x8100
   \   000001F4   0500A0E1           MOV      R0,R5
   \   000001F8   0A0000EF           SWI      +10
   \   000001FC   0050A0E1           MOV      R5,R0
   \   00000200   0400A0E1           MOV      R0,R4
   \   00000204   1B0000EF           SWI      +27
   \   00000208   0030A0E3           MOV      R3,#+0
   \   0000020C   B42080E2           ADD      R2,R0,#+180
   \   00000210   10108DE2           ADD      R1,SP,#+16
   \   00000214   0500A0E1           MOV      R0,R5
   \   00000218   0C0000EF           SWI      +12
   \   0000021C   0010A0E3           MOV      R1,#+0
   \   00000220   0500A0E1           MOV      R0,R5
   \   00000224   0D0000EF           SWI      +13
   \   00000228   0100A0E3           MOV      R0,#+1
   \   0000022C   ECD08DE2           ADD      SP,SP,#+236
   \   00000230   F083BDE8           POP      {R4-R9,PC}
   \                     ??CreateSSFFILEbySUDOKUMAP_0:
   \   00000234   0000A0E3           MOV      R0,#+0
   \   00000238   ECD08DE2           ADD      SP,SP,#+236
   \   0000023C   F083BDE8           POP      {R4-R9,PC}       ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs struct <unnamed> *GetNAMETIMEbySSFFILE(char *, char *)
   \                     GetNAMETIMEbySSFFILE:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   \   00000004   28D04DE2           SUB      SP,SP,#+40
   \   00000008   0060A0E1           MOV      R6,R0
   \   0000000C   0140A0E1           MOV      R4,R1
   \   00000010   4100A0E3           MOV      R0,#+65
   \   00000014   140000EF           SWI      +20
   \   00000018   0050A0E1           MOV      R5,R0
   \   0000001C   0020A0E3           MOV      R2,#+0
   \   00000020   0D10A0E1           MOV      R1,SP
   \   00000024   0600A0E1           MOV      R0,R6
   \   00000028   840000EF           SWI      +132
   \   0000002C   010070E3           CMN      R0,#+1
   \   00000030   04009D15           LDRNE    R0,[SP, #+4]
   \   00000034   00005013           CMPNE    R0,#+0
   \   00000038   5300000A           BEQ      ??GetNAMETIMEbySSFFILE_0
   \   0000003C   0030A0E3           MOV      R3,#+0
   \   00000040   8020A0E3           MOV      R2,#+128
   \   00000044   801CA0E3           MOV      R1,#+32768
   \   00000048   0600A0E1           MOV      R0,R6
   \   0000004C   0A0000EF           SWI      +10
   \   00000050   0060A0E1           MOV      R6,R0
   \   00000054   2000A0E3           MOV      R0,#+32
   \   00000058   140000EF           SWI      +20
   \   0000005C   0070A0E1           MOV      R7,R0
   \   00000060   0000A0E3           MOV      R0,#+0
   \   00000064   01002DE9           PUSH     {R0}
   \   00000068   0030A0E3           MOV      R3,#+0
   \   0000006C   0020A0E1           MOV      R2,R0
   \   00000070   0410A0E3           MOV      R1,#+4
   \   00000074   0600A0E1           MOV      R0,R6
   \   00000078   0F0000EF           SWI      +15
   \   0000007C   0030A0E3           MOV      R3,#+0
   \   00000080   0620A0E3           MOV      R2,#+6
   \   00000084   0710A0E1           MOV      R1,R7
   \   00000088   0600A0E1           MOV      R0,R6
   \   0000008C   0B0000EF           SWI      +11
   \   00000090   0400D7E5           LDRB     R0,[R7, #+4]
   \   00000094   0520D7E5           LDRB     R2,[R7, #+5]
   \   00000098   6410A0E3           MOV      R1,#+100
   \   0000009C   0080A0E3           MOV      R8,#+0
   \   000000A0   912020E0           MLA      R0,R1,R0,R2
   \   000000A4   F4109FE5           LDR      R1,??GetNAMETIMEbySSFFILE_1  ;; `?<Constant "%02d:%02d %02d.%02d.%04d">`
   \   000000A8   01002DE9           PUSH     {R0}
   \   000000AC   0300D7E5           LDRB     R0,[R7, #+3]
   \   000000B0   01002DE9           PUSH     {R0}
   \   000000B4   0200D7E5           LDRB     R0,[R7, #+2]
   \   000000B8   01002DE9           PUSH     {R0}
   \   000000BC   0130D7E5           LDRB     R3,[R7, #+1]
   \   000000C0   0020D7E5           LDRB     R2,[R7, #+0]
   \   000000C4   200085E2           ADD      R0,R5,#+32
   \   000000C8   160000EF           SWI      +22
   \   000000CC   0700A0E1           MOV      R0,R7
   \   000000D0   150000EF           SWI      +21
   \   000000D4   14009DE5           LDR      R0,[SP, #+20]
   \   000000D8   0E0040E2           SUB      R0,R0,#+14
   \   000000DC   140000EF           SWI      +20
   \   000000E0   0070A0E1           MOV      R7,R0
   \   000000E4   0000A0E3           MOV      R0,#+0
   \   000000E8   01002DE9           PUSH     {R0}
   \   000000EC   0030A0E1           MOV      R3,R0
   \   000000F0   0020A0E1           MOV      R2,R0
   \   000000F4   0F10A0E3           MOV      R1,#+15
   \   000000F8   0600A0E1           MOV      R0,R6
   \   000000FC   0F0000EF           SWI      +15
   \   00000100   18009DE5           LDR      R0,[SP, #+24]
   \   00000104   0830A0E1           MOV      R3,R8
   \   00000108   0E2040E2           SUB      R2,R0,#+14
   \   0000010C   0710A0E1           MOV      R1,R7
   \   00000110   0600A0E1           MOV      R0,R6
   \   00000114   0B0000EF           SWI      +11
   \   00000118   0010D7E5           LDRB     R1,[R7, #+0]
   \   0000011C   0800A0E1           MOV      R0,R8
   \   00000120   14D08DE2           ADD      SP,SP,#+20
   \   00000124   000051E3           CMP      R1,#+0
   \   00000128   0300001A           BNE      ??GetNAMETIMEbySSFFILE_2
   \   0000012C   050000EA           B        ??GetNAMETIMEbySSFFILE_3
   \                     ??GetNAMETIMEbySSFFILE_4:
   \   00000130   0080A0E1           MOV      R8,R0
   \   00000134   0510C0E7           STRB     R1,[R0, +R5]
   \   00000138   010080E2           ADD      R0,R0,#+1
   \                     ??GetNAMETIMEbySSFFILE_2:
   \   0000013C   0710D0E7           LDRB     R1,[R0, +R7]
   \   00000140   000051E3           CMP      R1,#+0
   \   00000144   F9FFFF1A           BNE      ??GetNAMETIMEbySSFFILE_4
   \                     ??GetNAMETIMEbySSFFILE_3:
   \   00000148   0090A0E3           MOV      R9,#+0
   \   0000014C   050088E0           ADD      R0,R8,R5
   \   00000150   0190C0E5           STRB     R9,[R0, #+1]
   \   00000154   000058E3           CMP      R8,#+0
   \   00000158   0200001A           BNE      ??GetNAMETIMEbySSFFILE_5
   \   0000015C   0410A0E1           MOV      R1,R4
   \   00000160   0500A0E1           MOV      R0,R5
   \   00000164   160000EF           SWI      +22
   \                     ??GetNAMETIMEbySSFFILE_5:
   \   00000168   0010A0E3           MOV      R1,#+0
   \   0000016C   0600A0E1           MOV      R0,R6
   \   00000170   0D0000EF           SWI      +13
   \   00000174   0700A0E1           MOV      R0,R7
   \   00000178   150000EF           SWI      +21
   \   0000017C   4090C5E5           STRB     R9,[R5, #+64]
   \   00000180   0500A0E1           MOV      R0,R5
   \   00000184   28D08DE2           ADD      SP,SP,#+40
   \   00000188   F083BDE8           POP      {R4-R9,PC}
   \                     ??GetNAMETIMEbySSFFILE_0:
   \   0000018C   0100A0E3           MOV      R0,#+1
   \   00000190   4000C5E5           STRB     R0,[R5, #+64]
   \   00000194   0500A0E1           MOV      R0,R5
   \   00000198   28D08DE2           ADD      SP,SP,#+40
   \   0000019C   F083BDE8           POP      {R4-R9,PC}       ;; return
   \                     ??GetNAMETIMEbySSFFILE_1:
   \   000001A0   ........           DC32     `?<Constant "%02d:%02d %02d.%02d.%04d">`

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void Create(char *, char *)
   \                     Create:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   400EA0E3           MOV      R0,#+1024
   \   00000010   140000EF           SWI      +20
   \   00000014   0060A0E1           MOV      R6,R0
   \   00000018   207F8FE2           ADR      R7,??Create_0    ;; "XEP"
   \   0000001C   0710A0E1           MOV      R1,R7
   \   00000020   0500A0E1           MOV      R0,R5
   \   00000024   ........           BL       GetNAMETIMEbySSFFILE
   \   00000028   0080A0E1           MOV      R8,R0
   \   0000002C   0710A0E1           MOV      R1,R7
   \   00000030   0500A0E1           MOV      R0,R5
   \   00000034   ........           BL       GetNAMETIMEbySSFFILE
   \   00000038   64109FE5           LDR      R1,??Create_0+0x4  ;; `?<Constant "%s %s">`
   \   0000003C   0830A0E1           MOV      R3,R8
   \   00000040   202080E2           ADD      R2,R0,#+32
   \   00000044   0600A0E1           MOV      R0,R6
   \   00000048   160000EF           SWI      +22
   \   0000004C   0010A0E3           MOV      R1,#+0
   \   00000050   0400A0E1           MOV      R0,R4
   \   00000054   6B0100EF           SWI      +363
   \   00000058   0030A0E3           MOV      R3,#+0
   \   0000005C   402FA0E3           MOV      R2,#+256
   \   00000060   0110A0E3           MOV      R1,#+1
   \   00000064   811C81E3           ORR      R1,R1,#0x8100
   \   00000068   0400A0E1           MOV      R0,R4
   \   0000006C   0A0000EF           SWI      +10
   \   00000070   0040A0E1           MOV      R4,R0
   \   00000074   0600A0E1           MOV      R0,R6
   \   00000078   1B0000EF           SWI      +27
   \   0000007C   0020A0E1           MOV      R2,R0
   \   00000080   0030A0E3           MOV      R3,#+0
   \   00000084   0610A0E1           MOV      R1,R6
   \   00000088   0400A0E1           MOV      R0,R4
   \   0000008C   0C0000EF           SWI      +12
   \   00000090   0010A0E3           MOV      R1,#+0
   \   00000094   0400A0E1           MOV      R0,R4
   \   00000098   0D0000EF           SWI      +13
   \   0000009C   F081BDE8           POP      {R4-R8,PC}       ;; return
   \                     ??Create_0:
   \   000000A0   58455000           DC8      "XEP"
   \   000000A4   ........           DC32     `?<Constant "%s %s">`

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void MemFreeOfSSF_NT(struct <unnamed> *)
   \                     MemFreeOfSSF_NT:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   150000EF           SWI      +21
   \   00000008   0080BDE8           POP      {PC}             ;; return
     98          #include "engine\fileop\elffolder.h" //Библиотека ф-ий для работы с фаилами из рабочей папки elf - приложения

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void ElfFolderOperations(char *)
   \                     ElfFolderOperations:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   0050A0E1           MOV      R5,R0
   \   00000008   1B0000EF           SWI      +27
   \   0000000C   0040A0E1           MOV      R4,R0
   \   00000010   5C10A0E3           MOV      R1,#+92
   \   00000014   0500A0E1           MOV      R0,R5
   \   00000018   170100EF           SWI      +279
   \   0000001C   010080E2           ADD      R0,R0,#+1
   \   00000020   1B0000EF           SWI      +27
   \   00000024   000044E0           SUB      R0,R4,R0
   \   00000028   ........           LDR      R4,??DataTable26  ;; elffolder
   \   0000002C   0010A0E3           MOV      R1,#+0
   \   00000030   0120A0E3           MOV      R2,#+1
   \   00000034   402F82E3           ORR      R2,R2,#0x100
   \                     ??ElfFolderOperations_0:
   \   00000038   0530D1E7           LDRB     R3,[R1, +R5]
   \   0000003C   0430C1E7           STRB     R3,[R1, +R4]
   \   00000040   011081E2           ADD      R1,R1,#+1
   \   00000044   020051E1           CMP      R1,R2
   \   00000048   FAFFFFBA           BLT      ??ElfFolderOperations_0
   \   0000004C   B8519FE5           LDR      R5,??ElfFolderOperations_1  ;; imgfolder
   \   00000050   B8619FE5           LDR      R6,??ElfFolderOperations_1+0x4  ;; cfgfolder
   \   00000054   B8719FE5           LDR      R7,??ElfFolderOperations_1+0x8  ;; `?<Constant "%s%s">`
   \   00000058   B8819FE5           LDR      R8,??ElfFolderOperations_1+0xC  ;; smffolder
   \   0000005C   0010A0E3           MOV      R1,#+0
   \   00000060   0410C0E7           STRB     R1,[R0, +R4]
   \   00000064   B0119FE5           LDR      R1,??ElfFolderOperations_1+0x10  ;; `?<Constant "%s%dx%d\\\\">`
   \   00000068   A000A0E3           MOV      R0,#+160
   \   0000006C   01002DE9           PUSH     {R0}
   \   00000070   8030A0E3           MOV      R3,#+128
   \   00000074   0420A0E1           MOV      R2,R4
   \   00000078   0500A0E1           MOV      R0,R5
   \   0000007C   160000EF           SWI      +22
   \   00000080   98319FE5           LDR      R3,??ElfFolderOperations_1+0x14  ;; `?<Constant "cfg\\\\">`
   \   00000084   0420A0E1           MOV      R2,R4
   \   00000088   0710A0E1           MOV      R1,R7
   \   0000008C   0600A0E1           MOV      R0,R6
   \   00000090   160000EF           SWI      +22
   \   00000094   88319FE5           LDR      R3,??ElfFolderOperations_1+0x18  ;; `?<Constant "smf\\\\">`
   \   00000098   0420A0E1           MOV      R2,R4
   \   0000009C   0710A0E1           MOV      R1,R7
   \   000000A0   0800A0E1           MOV      R0,R8
   \   000000A4   160000EF           SWI      +22
   \   000000A8   0010A0E3           MOV      R1,#+0
   \   000000AC   0500A0E1           MOV      R0,R5
   \   000000B0   910000EF           SWI      +145
   \   000000B4   010050E3           CMP      R0,#+1
   \   000000B8   04D08DE2           ADD      SP,SP,#+4
   \   000000BC   0200000A           BEQ      ??ElfFolderOperations_2
   \   000000C0   0010A0E3           MOV      R1,#+0
   \   000000C4   0500A0E1           MOV      R0,R5
   \   000000C8   100000EF           SWI      +16
   \                     ??ElfFolderOperations_2:
   \   000000CC   0010A0E3           MOV      R1,#+0
   \   000000D0   0600A0E1           MOV      R0,R6
   \   000000D4   910000EF           SWI      +145
   \   000000D8   010050E3           CMP      R0,#+1
   \   000000DC   0200000A           BEQ      ??ElfFolderOperations_3
   \   000000E0   0010A0E3           MOV      R1,#+0
   \   000000E4   0600A0E1           MOV      R0,R6
   \   000000E8   100000EF           SWI      +16
   \                     ??ElfFolderOperations_3:
   \   000000EC   0010A0E3           MOV      R1,#+0
   \   000000F0   0800A0E1           MOV      R0,R8
   \   000000F4   910000EF           SWI      +145
   \   000000F8   010050E3           CMP      R0,#+1
   \   000000FC   0200000A           BEQ      ??ElfFolderOperations_4
   \   00000100   0010A0E3           MOV      R1,#+0
   \   00000104   0800A0E1           MOV      R0,R8
   \   00000108   100000EF           SWI      +16
   \                     ??ElfFolderOperations_4:
   \   0000010C   ........           LDR      R8,??DataTable32  ;; dig
   \   00000110   0070A0E3           MOV      R7,#+0
   \                     ??ElfFolderOperations_5:
   \   00000114   0C119FE5           LDR      R1,??ElfFolderOperations_1+0x1C  ;; `?<Constant "%s%d.png">`
   \   00000118   0730A0E1           MOV      R3,R7
   \   0000011C   0520A0E1           MOV      R2,R5
   \   00000120   070488E0           ADD      R0,R8,R7, LSL #+8
   \   00000124   160000EF           SWI      +22
   \   00000128   017087E2           ADD      R7,R7,#+1
   \   0000012C   0A0057E3           CMP      R7,#+10
   \   00000130   F7FFFFBA           BLT      ??ElfFolderOperations_5
   \   00000134   0A70A0E3           MOV      R7,#+10
   \                     ??ElfFolderOperations_6:
   \   00000138   EC109FE5           LDR      R1,??ElfFolderOperations_1+0x20  ;; `?<Constant "%s%ds.png">`
   \   0000013C   093047E2           SUB      R3,R7,#+9
   \   00000140   0520A0E1           MOV      R2,R5
   \   00000144   070488E0           ADD      R0,R8,R7, LSL #+8
   \   00000148   160000EF           SWI      +22
   \   0000014C   017087E2           ADD      R7,R7,#+1
   \   00000150   130057E3           CMP      R7,#+19
   \   00000154   F7FFFFBA           BLT      ??ElfFolderOperations_6
   \   00000158   1370A0E3           MOV      R7,#+19
   \                     ??ElfFolderOperations_7:
   \   0000015C   CC109FE5           LDR      R1,??ElfFolderOperations_1+0x24  ;; `?<Constant "%s%da.png">`
   \   00000160   123047E2           SUB      R3,R7,#+18
   \   00000164   0520A0E1           MOV      R2,R5
   \   00000168   070488E0           ADD      R0,R8,R7, LSL #+8
   \   0000016C   160000EF           SWI      +22
   \   00000170   017087E2           ADD      R7,R7,#+1
   \   00000174   1C0057E3           CMP      R7,#+28
   \   00000178   F7FFFFBA           BLT      ??ElfFolderOperations_7
   \   0000017C   B0109FE5           LDR      R1,??ElfFolderOperations_1+0x28  ;; `?<Constant "%ssudoku.png">`
   \   00000180   ........           LDR      R0,??DataTable38  ;; sudoku
   \   00000184   AC709FE5           LDR      R7,??ElfFolderOperations_1+0x2C  ;; ssffile
   \   00000188   0520A0E1           MOV      R2,R5
   \   0000018C   160000EF           SWI      +22
   \   00000190   A4109FE5           LDR      R1,??ElfFolderOperations_1+0x30  ;; `?<Constant "%sbgm.png">`
   \   00000194   ........           LDR      R0,??DataTable35  ;; bgm
   \   00000198   0520A0E1           MOV      R2,R5
   \   0000019C   160000EF           SWI      +22
   \   000001A0   98109FE5           LDR      R1,??ElfFolderOperations_1+0x34  ;; `?<Constant "%sbgg.png">`
   \   000001A4   ........           LDR      R0,??DataTable37  ;; bgg
   \   000001A8   0520A0E1           MOV      R2,R5
   \   000001AC   160000EF           SWI      +22
   \   000001B0   0000A0E3           MOV      R0,#+0
   \                     ??ElfFolderOperations_8:
   \   000001B4   88109FE5           LDR      R1,??ElfFolderOperations_1+0x38  ;; `?<Constant "%ssudoku_%02d.ssf">`
   \   000001B8   015080E2           ADD      R5,R0,#+1
   \   000001BC   0530A0E1           MOV      R3,R5
   \   000001C0   0620A0E1           MOV      R2,R6
   \   000001C4   000487E0           ADD      R0,R7,R0, LSL #+8
   \   000001C8   160000EF           SWI      +22
   \   000001CC   0500A0E1           MOV      R0,R5
   \   000001D0   050050E3           CMP      R0,#+5
   \   000001D4   F6FFFFBA           BLT      ??ElfFolderOperations_8
   \   000001D8   68109FE5           LDR      R1,??ElfFolderOperations_1+0x3C  ;; `?<Constant "%ssudoku.hlp">`
   \   000001DC   ........           LDR      R0,??DataTable24  ;; hlpfile
   \   000001E0   0620A0E1           MOV      R2,R6
   \   000001E4   160000EF           SWI      +22
   \   000001E8   5C109FE5           LDR      R1,??ElfFolderOperations_1+0x40  ;; `?<Constant "%ssmfeditor.elf">`
   \   000001EC   ........           LDR      R0,??DataTable25  ;; seditor
   \   000001F0   0420A0E1           MOV      R2,R4
   \   000001F4   160000EF           SWI      +22
   \   000001F8   50109FE5           LDR      R1,??ElfFolderOperations_1+0x44  ;; `?<Constant "%ssudoku.bcfg">`
   \   000001FC   ........           LDR      R0,??DataTable73  ;; cfgfile
   \   00000200   0620A0E1           MOV      R2,R6
   \   00000204   160000EF           SWI      +22
   \   00000208   F081BDE8           POP      {R4-R8,PC}       ;; return
   \                     ??ElfFolderOperations_1:
   \   0000020C   ........           DC32     imgfolder
   \   00000210   ........           DC32     cfgfolder
   \   00000214   ........           DC32     `?<Constant "%s%s">`
   \   00000218   ........           DC32     smffolder
   \   0000021C   ........           DC32     `?<Constant "%s%dx%d\\\\">`
   \   00000220   ........           DC32     `?<Constant "cfg\\\\">`
   \   00000224   ........           DC32     `?<Constant "smf\\\\">`
   \   00000228   ........           DC32     `?<Constant "%s%d.png">`
   \   0000022C   ........           DC32     `?<Constant "%s%ds.png">`
   \   00000230   ........           DC32     `?<Constant "%s%da.png">`
   \   00000234   ........           DC32     `?<Constant "%ssudoku.png">`
   \   00000238   ........           DC32     ssffile
   \   0000023C   ........           DC32     `?<Constant "%sbgm.png">`
   \   00000240   ........           DC32     `?<Constant "%sbgg.png">`
   \   00000244   ........           DC32     `?<Constant "%ssudoku_%02d.ssf">`
   \   00000248   ........           DC32     `?<Constant "%ssudoku.hlp">`
   \   0000024C   ........           DC32     `?<Constant "%ssmfeditor.elf">`
   \   00000250   ........           DC32     `?<Constant "%ssudoku.bcfg">`

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs struct <unnamed> *ElfFolderCheckFiles(struct <unnamed> *, char *)
   \                     ElfFolderCheckFiles:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   \   00000004   4ADF4DE2           SUB      SP,SP,#+296
   \   00000008   0050A0E1           MOV      R5,R0
   \   0000000C   0160A0E1           MOV      R6,R1
   \   00000010   0400A0E3           MOV      R0,#+4
   \   00000014   140000EF           SWI      +20
   \   00000018   0040A0E1           MOV      R4,R0
   \   0000001C   0080A0E3           MOV      R8,#+0
   \   00000020   0080C4E5           STRB     R8,[R4, #+0]
   \   00000024   0090A0E3           MOV      R9,#+0
   \   00000028   0870E0E1           MVN      R7,R8
   \                     ??ElfFolderCheckFiles_0:
   \   0000002C   ........           LDR      R0,??DataTable32  ;; dig
   \   00000030   0020A0E3           MOV      R2,#+0
   \   00000034   0D10A0E1           MOV      R1,SP
   \   00000038   090480E0           ADD      R0,R0,R9, LSL #+8
   \   0000003C   840000EF           SWI      +132
   \   00000040   070050E1           CMP      R0,R7
   \   00000044   0400001A           BNE      ??ElfFolderCheckFiles_1
   \   00000048   04009DE5           LDR      R0,[SP, #+4]
   \   0000004C   000050E3           CMP      R0,#+0
   \   00000050   0000D415           LDRBNE   R0,[R4, #+0]
   \   00000054   01008012           ADDNE    R0,R0,#+1
   \   00000058   0000C415           STRBNE   R0,[R4, #+0]
   \                     ??ElfFolderCheckFiles_1:
   \   0000005C   019089E2           ADD      R9,R9,#+1
   \   00000060   1C0059E3           CMP      R9,#+28
   \   00000064   F0FFFFBA           BLT      ??ElfFolderCheckFiles_0
   \   00000068   ........           LDR      R0,??DataTable38  ;; sudoku
   \   0000006C   0020A0E3           MOV      R2,#+0
   \   00000070   0D10A0E1           MOV      R1,SP
   \   00000074   840000EF           SWI      +132
   \   00000078   070050E1           CMP      R0,R7
   \   0000007C   0400001A           BNE      ??ElfFolderCheckFiles_2
   \   00000080   04009DE5           LDR      R0,[SP, #+4]
   \   00000084   000050E3           CMP      R0,#+0
   \   00000088   0000D415           LDRBNE   R0,[R4, #+0]
   \   0000008C   01008012           ADDNE    R0,R0,#+1
   \   00000090   0000C415           STRBNE   R0,[R4, #+0]
   \                     ??ElfFolderCheckFiles_2:
   \   00000094   ........           LDR      R0,??DataTable35  ;; bgm
   \   00000098   0020A0E3           MOV      R2,#+0
   \   0000009C   0D10A0E1           MOV      R1,SP
   \   000000A0   840000EF           SWI      +132
   \   000000A4   070050E1           CMP      R0,R7
   \   000000A8   0400001A           BNE      ??ElfFolderCheckFiles_3
   \   000000AC   04009DE5           LDR      R0,[SP, #+4]
   \   000000B0   000050E3           CMP      R0,#+0
   \   000000B4   0000D415           LDRBNE   R0,[R4, #+0]
   \   000000B8   01008012           ADDNE    R0,R0,#+1
   \   000000BC   0000C415           STRBNE   R0,[R4, #+0]
   \                     ??ElfFolderCheckFiles_3:
   \   000000C0   ........           LDR      R0,??DataTable37  ;; bgg
   \   000000C4   0020A0E3           MOV      R2,#+0
   \   000000C8   0D10A0E1           MOV      R1,SP
   \   000000CC   840000EF           SWI      +132
   \   000000D0   070050E1           CMP      R0,R7
   \   000000D4   0400001A           BNE      ??ElfFolderCheckFiles_4
   \   000000D8   04009DE5           LDR      R0,[SP, #+4]
   \   000000DC   000050E3           CMP      R0,#+0
   \   000000E0   0000D415           LDRBNE   R0,[R4, #+0]
   \   000000E4   01008012           ADDNE    R0,R0,#+1
   \   000000E8   0000C415           STRBNE   R0,[R4, #+0]
   \                     ??ElfFolderCheckFiles_4:
   \   000000EC   ........           LDR      R0,??DataTable24  ;; hlpfile
   \   000000F0   0180C4E5           STRB     R8,[R4, #+1]
   \   000000F4   0280C4E5           STRB     R8,[R4, #+2]
   \   000000F8   0180A0E3           MOV      R8,#+1
   \   000000FC   0020A0E3           MOV      R2,#+0
   \   00000100   0D10A0E1           MOV      R1,SP
   \   00000104   840000EF           SWI      +132
   \   00000108   070050E1           CMP      R0,R7
   \   0000010C   0200001A           BNE      ??ElfFolderCheckFiles_5
   \   00000110   04009DE5           LDR      R0,[SP, #+4]
   \   00000114   000050E3           CMP      R0,#+0
   \   00000118   0180C415           STRBNE   R8,[R4, #+1]
   \                     ??ElfFolderCheckFiles_5:
   \   0000011C   ........           LDR      R0,??DataTable25  ;; seditor
   \   00000120   0020A0E3           MOV      R2,#+0
   \   00000124   0D10A0E1           MOV      R1,SP
   \   00000128   840000EF           SWI      +132
   \   0000012C   070050E1           CMP      R0,R7
   \   00000130   0200001A           BNE      ??ElfFolderCheckFiles_6
   \   00000134   04009DE5           LDR      R0,[SP, #+4]
   \   00000138   000050E3           CMP      R0,#+0
   \   0000013C   0280C415           STRBNE   R8,[R4, #+2]
   \                     ??ElfFolderCheckFiles_6:
   \   00000140   0100D6E5           LDRB     R0,[R6, #+1]
   \   00000144   3A0050E3           CMP      R0,#+58
   \   00000148   C700D505           LDRBEQ   R0,[R5, #+199]
   \   0000014C   ........           LDR      R5,??DataTable26  ;; elffolder
   \   00000150   6400A013           MOVNE    R0,#+100
   \   00000154   0300C4E5           STRB     R0,[R4, #+3]
   \   00000158   0000D4E5           LDRB     R0,[R4, #+0]
   \   0000015C   000050E3           CMP      R0,#+0
   \   00000160   0800000A           BEQ      ??ElfFolderCheckFiles_7
   \   00000164   5C109FE5           LDR      R1,??ElfFolderCheckFiles_8  ;; `?<Constant "%spng_help.txt">`
   \   00000168   0520A0E1           MOV      R2,R5
   \   0000016C   28008DE2           ADD      R0,SP,#+40
   \   00000170   160000EF           SWI      +22
   \   00000174   50109FE5           LDR      R1,??ElfFolderCheckFiles_8+0x4  ;; png_help_txt
   \   00000178   DE20A0E3           MOV      R2,#+222
   \   0000017C   402E82E3           ORR      R2,R2,#0x400
   \   00000180   28008DE2           ADD      R0,SP,#+40
   \   00000184   ........           BL       fileext
   \                     ??ElfFolderCheckFiles_7:
   \   00000188   0100D4E5           LDRB     R0,[R4, #+1]
   \   0000018C   010050E3           CMP      R0,#+1
   \   00000190   0200D415           LDRBNE   R0,[R4, #+2]
   \   00000194   01005013           CMPNE    R0,#+1
   \   00000198   0700001A           BNE      ??ElfFolderCheckFiles_9
   \   0000019C   2C109FE5           LDR      R1,??ElfFolderCheckFiles_8+0x8  ;; `?<Constant "%setc_help.txt">`
   \   000001A0   0520A0E1           MOV      R2,R5
   \   000001A4   28008DE2           ADD      R0,SP,#+40
   \   000001A8   160000EF           SWI      +22
   \   000001AC   20109FE5           LDR      R1,??ElfFolderCheckFiles_8+0xC  ;; etc_help_txt
   \   000001B0   E420A0E3           MOV      R2,#+228
   \   000001B4   28008DE2           ADD      R0,SP,#+40
   \   000001B8   ........           BL       fileext
   \                     ??ElfFolderCheckFiles_9:
   \   000001BC   0400A0E1           MOV      R0,R4
   \   000001C0   4ADF8DE2           ADD      SP,SP,#+296
   \   000001C4   F083BDE8           POP      {R4-R9,PC}       ;; return
   \                     ??ElfFolderCheckFiles_8:
   \   000001C8   ........           DC32     `?<Constant "%spng_help.txt">`
   \   000001CC   ........           DC32     png_help_txt
   \   000001D0   ........           DC32     `?<Constant "%setc_help.txt">`
   \   000001D4   ........           DC32     etc_help_txt
     99          
    100          

   \                                 In segment DATA_Z, align 4, align-sorted
    101          SUDOKUMAP *sdm = 0;
   \                     sdm:
   \   00000000                      DS8 4

   \                                 In segment DATA_Z, align 4, align-sorted
    102          ERRORSTRUCT *errs = 0;
   \                     errs:
   \   00000000                      DS8 4
    103          
    104          #include "engine\render\logow.c"     //Рендеринг Лого Окна

   \                                 In segment DATA_I, align 4, align-sorted
   \   int __data counter
   \                     counter:
   \   00000000                      DS8 4
   \   00000004                      REQUIRE `?<Initializer for counter>`

   \                                 In segment DATA_Z, align 4, align-sorted
   \   int __data loadbar_x
   \                     loadbar_x:
   \   00000000                      DS8 4

   \                                 In segment DATA_Z, align 4, align-sorted
   \   int __data error_logo
   \                     error_logo:
   \   00000000                      DS8 4

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void LOGOW_RENDER()
   \                     LOGOW_RENDER:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000004   ........           LDR      R4,??DataTable56  ;; errs
   \   00000008   ........           LDR      R6,??DataTable59  ;; counter
   \   0000000C   ........           LDR      R7,??DataTable64  ;; GBSTIMER_KOEFFICENT
   \   00000010   54859FE5           LDR      R8,??LOGOW_RENDER_0  ;; error_logo
   \   00000014   40DF4DE2           SUB      SP,SP,#+256
   \   00000018   000094E5           LDR      R0,[R4, #+0]
   \   0000001C   0150A0E3           MOV      R5,#+1
   \   00000020   0010D0E5           LDRB     R1,[R0, #+0]
   \   00000024   000051E3           CMP      R1,#+0
   \   00000028   00109805           LDREQ    R1,[R8, #+0]
   \   0000002C   00005103           CMPEQ    R1,#+0
   \   00000030   2301001A           BNE      ??LOGOW_RENDER_1
   \   00000034   34959FE5           LDR      R9,??LOGOW_RENDER_0+0x4  ;; logo_img
   \   00000038   34A59FE5           LDR      R10,??LOGOW_RENDER_0+0x8  ;; red
   \   0000003C   ........           LDR      R11,??DataTable30  ;; alpha
   \   00000040   1400A0E3           MOV      R0,#+20
   \   00000044   000087E5           STR      R0,[R7, #+0]
   \   00000048   28059FE5           LDR      R0,??LOGOW_RENDER_0+0xC  ;; logo_color
   \   0000004C   9F30A0E3           MOV      R3,#+159
   \   00000050   0010A0E1           MOV      R1,R0
   \   00000054   02002DE9           PUSH     {R1}
   \   00000058   01002DE9           PUSH     {R0}
   \   0000005C   7F20A0E3           MOV      R2,#+127
   \   00000060   0010A0E3           MOV      R1,#+0
   \   00000064   0000A0E3           MOV      R0,#+0
   \   00000068   01002DE9           PUSH     {R0}
   \   0000006C   B40100EF           SWI      +436
   \   00000070   0000A0E3           MOV      R0,#+0
   \   00000074   01002DE9           PUSH     {R0}
   \   00000078   0030A0E1           MOV      R3,R0
   \   0000007C   B200D9E1           LDRH     R0,[R9, #+2]
   \   00000080   A000A0E1           LSR      R0,R0,#+1
   \   00000084   502060E2           RSB      R2,R0,#+80
   \   00000088   B000D9E1           LDRH     R0,[R9, #+0]
   \   0000008C   A000A0E1           LSR      R0,R0,#+1
   \   00000090   401060E2           RSB      R1,R0,#+64
   \   00000094   0900A0E1           MOV      R0,R9
   \   00000098   ........           BL       DrwImg
   \   0000009C   0000A0E3           MOV      R0,#+0
   \   000000A0   01002DE9           PUSH     {R0}
   \   000000A4   ........           LDR      R0,??DataTable31  ;; black
   \   000000A8   8030A0E3           MOV      R3,#+128
   \   000000AC   01002DE9           PUSH     {R0}
   \   000000B0   0220A0E3           MOV      R2,#+2
   \   000000B4   0210A0E1           MOV      R1,R2
   \   000000B8   0000A0E3           MOV      R0,#+0
   \   000000BC   01002DE9           PUSH     {R0}
   \   000000C0   0800A0E3           MOV      R0,#+8
   \   000000C4   01002DE9           PUSH     {R0}
   \   000000C8   A000A0E3           MOV      R0,#+160
   \   000000CC   01002DE9           PUSH     {R0}
   \   000000D0   A4049FE5           LDR      R0,??LOGOW_RENDER_0+0x10  ;; `?<Constant "\\307\\340\\343\\360\\363\\347\\352\\340 .`
   \   000000D4   ........           BL       DrawStringV2
   \   000000D8   24D08DE2           ADD      SP,SP,#+36
   \   000000DC   000094E5           LDR      R0,[R4, #+0]
   \   000000E0   0300D0E5           LDRB     R0,[R0, #+3]
   \   000000E4   000050E3           CMP      R0,#+0
   \   000000E8   1300001A           BNE      ??LOGOW_RENDER_2
   \   000000EC   0800A0E3           MOV      R0,#+8
   \   000000F0   C50100EF           SWI      +453
   \   000000F4   0B10A0E1           MOV      R1,R11
   \   000000F8   02002DE9           PUSH     {R1}
   \   000000FC   8030A0E3           MOV      R3,#+128
   \   00000100   022080E2           ADD      R2,R0,#+2
   \   00000104   74049FE5           LDR      R0,??LOGOW_RENDER_0+0x14  ;; `?<Constant "\\324\\340\\350\\353 \\352\\340\\360\\362 `
   \   00000108   0A10A0E1           MOV      R1,R10
   \   0000010C   02002DE9           PUSH     {R1}
   \   00000110   0010A0E3           MOV      R1,#+0
   \   00000114   02002DE9           PUSH     {R1}
   \   00000118   0810A0E3           MOV      R1,#+8
   \   0000011C   02002DE9           PUSH     {R1}
   \   00000120   B210D9E1           LDRH     R1,[R9, #+2]
   \   00000124   A110A0E1           LSR      R1,R1,#+1
   \   00000128   501061E2           RSB      R1,R1,#+80
   \   0000012C   02002DE9           PUSH     {R1}
   \   00000130   0210A0E3           MOV      R1,#+2
   \   00000134   ........           BL       DrawStringV2
   \   00000138   14D08DE2           ADD      SP,SP,#+20
   \                     ??LOGOW_RENDER_2:
   \   0000013C   000094E5           LDR      R0,[R4, #+0]
   \   00000140   0300D0E5           LDRB     R0,[R0, #+3]
   \   00000144   010050E3           CMP      R0,#+1
   \   00000148   1300001A           BNE      ??LOGOW_RENDER_3
   \   0000014C   0800A0E3           MOV      R0,#+8
   \   00000150   C50100EF           SWI      +453
   \   00000154   0B10A0E1           MOV      R1,R11
   \   00000158   02002DE9           PUSH     {R1}
   \   0000015C   8030A0E3           MOV      R3,#+128
   \   00000160   022080E2           ADD      R2,R0,#+2
   \   00000164   18049FE5           LDR      R0,??LOGOW_RENDER_0+0x18  ;; `?<Constant "\\316\\370\\350\\341\\352\\340 \\356\\362\\`
   \   00000168   0A10A0E1           MOV      R1,R10
   \   0000016C   02002DE9           PUSH     {R1}
   \   00000170   0010A0E3           MOV      R1,#+0
   \   00000174   02002DE9           PUSH     {R1}
   \   00000178   0810A0E3           MOV      R1,#+8
   \   0000017C   02002DE9           PUSH     {R1}
   \   00000180   B210D9E1           LDRH     R1,[R9, #+2]
   \   00000184   A110A0E1           LSR      R1,R1,#+1
   \   00000188   501061E2           RSB      R1,R1,#+80
   \   0000018C   02002DE9           PUSH     {R1}
   \   00000190   0210A0E3           MOV      R1,#+2
   \   00000194   ........           BL       DrawStringV2
   \   00000198   14D08DE2           ADD      SP,SP,#+20
   \                     ??LOGOW_RENDER_3:
   \   0000019C   000094E5           LDR      R0,[R4, #+0]
   \   000001A0   0300D0E5           LDRB     R0,[R0, #+3]
   \   000001A4   020050E3           CMP      R0,#+2
   \   000001A8   1300001A           BNE      ??LOGOW_RENDER_4
   \   000001AC   0800A0E3           MOV      R0,#+8
   \   000001B0   C50100EF           SWI      +453
   \   000001B4   0B10A0E1           MOV      R1,R11
   \   000001B8   02002DE9           PUSH     {R1}
   \   000001BC   8030A0E3           MOV      R3,#+128
   \   000001C0   022080E2           ADD      R2,R0,#+2
   \   000001C4   BC039FE5           LDR      R0,??LOGOW_RENDER_0+0x1C  ;; `?<Constant "\\316\\370\\350\\341\\352\\340 ID \\364\\3`
   \   000001C8   0A10A0E1           MOV      R1,R10
   \   000001CC   02002DE9           PUSH     {R1}
   \   000001D0   0010A0E3           MOV      R1,#+0
   \   000001D4   02002DE9           PUSH     {R1}
   \   000001D8   0810A0E3           MOV      R1,#+8
   \   000001DC   02002DE9           PUSH     {R1}
   \   000001E0   B210D9E1           LDRH     R1,[R9, #+2]
   \   000001E4   A110A0E1           LSR      R1,R1,#+1
   \   000001E8   501061E2           RSB      R1,R1,#+80
   \   000001EC   02002DE9           PUSH     {R1}
   \   000001F0   0210A0E3           MOV      R1,#+2
   \   000001F4   ........           BL       DrawStringV2
   \   000001F8   14D08DE2           ADD      SP,SP,#+20
   \                     ??LOGOW_RENDER_4:
   \   000001FC   000094E5           LDR      R0,[R4, #+0]
   \   00000200   0300D0E5           LDRB     R0,[R0, #+3]
   \   00000204   030050E3           CMP      R0,#+3
   \   00000208   1300001A           BNE      ??LOGOW_RENDER_5
   \   0000020C   0800A0E3           MOV      R0,#+8
   \   00000210   C50100EF           SWI      +453
   \   00000214   0B10A0E1           MOV      R1,R11
   \   00000218   02002DE9           PUSH     {R1}
   \   0000021C   8030A0E3           MOV      R3,#+128
   \   00000220   022080E2           ADD      R2,R0,#+2
   \   00000224   60039FE5           LDR      R0,??LOGOW_RENDER_0+0x20  ;; `?<Constant "\\315\\345\\350\\347\\342. \\342\\345\\360`
   \   00000228   0A10A0E1           MOV      R1,R10
   \   0000022C   02002DE9           PUSH     {R1}
   \   00000230   0010A0E3           MOV      R1,#+0
   \   00000234   02002DE9           PUSH     {R1}
   \   00000238   0810A0E3           MOV      R1,#+8
   \   0000023C   02002DE9           PUSH     {R1}
   \   00000240   B210D9E1           LDRH     R1,[R9, #+2]
   \   00000244   A110A0E1           LSR      R1,R1,#+1
   \   00000248   501061E2           RSB      R1,R1,#+80
   \   0000024C   02002DE9           PUSH     {R1}
   \   00000250   0210A0E3           MOV      R1,#+2
   \   00000254   ........           BL       DrawStringV2
   \   00000258   14D08DE2           ADD      SP,SP,#+20
   \                     ??LOGOW_RENDER_5:
   \   0000025C   000094E5           LDR      R0,[R4, #+0]
   \   00000260   0300D0E5           LDRB     R0,[R0, #+3]
   \   00000264   040050E3           CMP      R0,#+4
   \   00000268   1100001A           BNE      ??LOGOW_RENDER_6
   \   0000026C   0800A0E3           MOV      R0,#+8
   \   00000270   C50100EF           SWI      +453
   \   00000274   00082DE9           PUSH     {R11}
   \   00000278   00042DE9           PUSH     {R10}
   \   0000027C   0010A0E3           MOV      R1,#+0
   \   00000280   02002DE9           PUSH     {R1}
   \   00000284   8030A0E3           MOV      R3,#+128
   \   00000288   022080E2           ADD      R2,R0,#+2
   \   0000028C   FC029FE5           LDR      R0,??LOGOW_RENDER_0+0x24  ;; `?<Constant "\\316\\370\\350\\341\\352\\340 \\361\\362\\`
   \   00000290   0810A0E3           MOV      R1,#+8
   \   00000294   02002DE9           PUSH     {R1}
   \   00000298   B210D9E1           LDRH     R1,[R9, #+2]
   \   0000029C   A110A0E1           LSR      R1,R1,#+1
   \   000002A0   501061E2           RSB      R1,R1,#+80
   \   000002A4   02002DE9           PUSH     {R1}
   \   000002A8   0210A0E3           MOV      R1,#+2
   \   000002AC   ........           BL       DrawStringV2
   \   000002B0   14D08DE2           ADD      SP,SP,#+20
   \                     ??LOGOW_RENDER_6:
   \   000002B4   000096E5           LDR      R0,[R6, #+0]
   \   000002B8   010070E3           CMN      R0,#+1
   \   000002BC   0000A003           MOVEQ    R0,#+0
   \   000002C0   00008605           STREQ    R0,[R6, #+0]
   \   000002C4   5200000A           BEQ      ??LOGOW_RENDER_7
   \   000002C8   000050E3           CMP      R0,#+0
   \   000002CC   1E00004A           BMI      ??LOGOW_RENDER_8
   \   000002D0   1C0050E3           CMP      R0,#+28
   \   000002D4   1C0000AA           BGE      ??LOGOW_RENDER_8
   \   000002D8   ........           LDR      R2,??DataTable32  ;; dig
   \   000002DC   0310A0E3           MOV      R1,#+3
   \   000002E0   000482E0           ADD      R0,R2,R0, LSL #+8
   \   000002E4   E90100EF           SWI      +489
   \   000002E8   001096E5           LDR      R1,[R6, #+0]
   \   000002EC   ........           LDR      R2,??DataTable33  ;; dig_img
   \   000002F0   013182E0           ADD      R3,R2,R1, LSL #+2
   \   000002F4   000083E5           STR      R0,[R3, #+0]
   \   000002F8   002092E5           LDR      R2,[R2, #+0]
   \   000002FC   B040D0E1           LDRH     R4,[R0, #+0]
   \   00000300   B030D2E1           LDRH     R3,[R2, #+0]
   \   00000304   040053E1           CMP      R3,R4
   \   00000308   0100001A           BNE      ??LOGOW_RENDER_9
   \   0000030C   030053E3           CMP      R3,#+3
   \   00000310   0100002A           BCS      ??LOGOW_RENDER_10
   \                     ??LOGOW_RENDER_9:
   \   00000314   005088E5           STR      R5,[R8, #+0]
   \   00000318   770000EA           B        ??LOGOW_RENDER_11
   \                     ??LOGOW_RENDER_10:
   \   0000031C   B230D2E1           LDRH     R3,[R2, #+2]
   \   00000320   B200D0E1           LDRH     R0,[R0, #+2]
   \   00000324   000053E1           CMP      R3,R0
   \   00000328   F9FFFF1A           BNE      ??LOGOW_RENDER_9
   \   0000032C   030053E3           CMP      R3,#+3
   \   00000330   F7FFFF3A           BCC      ??LOGOW_RENDER_9
   \   00000334   000098E5           LDR      R0,[R8, #+0]
   \   00000338   000050E3           CMP      R0,#+0
   \   0000033C   3100001A           BNE      ??LOGOW_RENDER_12
   \   00000340   010081E2           ADD      R0,R1,#+1
   \                     ??LOGOW_RENDER_13:
   \   00000344   000086E5           STR      R0,[R6, #+0]
   \   00000348   2E0000EA           B        ??LOGOW_RENDER_12
   \                     ??LOGOW_RENDER_8:
   \   0000034C   1C0050E3           CMP      R0,#+28
   \   00000350   1200001A           BNE      ??LOGOW_RENDER_14
   \   00000354   ........           LDR      R4,??DataTable46  ;; bgm_img
   \   00000358   ........           LDR      R0,??DataTable35  ;; bgm
   \   0000035C   0210A0E3           MOV      R1,#+2
   \   00000360   E90100EF           SWI      +489
   \   00000364   000084E5           STR      R0,[R4, #+0]
   \   00000368   B010D0E1           LDRH     R1,[R0, #+0]
   \   0000036C   800051E3           CMP      R1,#+128
   \   00000370   B200D001           LDRHEQ   R0,[R0, #+2]
   \   00000374   A0005003           CMPEQ    R0,#+160
   \   00000378   0200000A           BEQ      ??LOGOW_RENDER_15
   \                     ??LOGOW_RENDER_16:
   \   0000037C   0200A0E3           MOV      R0,#+2
   \   00000380   000088E5           STR      R0,[R8, #+0]
   \   00000384   5C0000EA           B        ??LOGOW_RENDER_11
   \                     ??LOGOW_RENDER_15:
   \   00000388   000098E5           LDR      R0,[R8, #+0]
   \   0000038C   000050E3           CMP      R0,#+0
   \   00000390   1C00001A           BNE      ??LOGOW_RENDER_12
   \   00000394   000096E5           LDR      R0,[R6, #+0]
   \   00000398   010080E2           ADD      R0,R0,#+1
   \   0000039C   E8FFFFEA           B        ??LOGOW_RENDER_13
   \                     ??LOGOW_RENDER_14:
   \   000003A0   1D0050E3           CMP      R0,#+29
   \   000003A4   0A00001A           BNE      ??LOGOW_RENDER_17
   \   000003A8   ........           LDR      R4,??DataTable36  ;; bgg_img
   \   000003AC   ........           LDR      R0,??DataTable37  ;; bgg
   \   000003B0   0210A0E3           MOV      R1,#+2
   \   000003B4   E90100EF           SWI      +489
   \   000003B8   000084E5           STR      R0,[R4, #+0]
   \   000003BC   B010D0E1           LDRH     R1,[R0, #+0]
   \   000003C0   800051E3           CMP      R1,#+128
   \   000003C4   B200D001           LDRHEQ   R0,[R0, #+2]
   \   000003C8   A0005003           CMPEQ    R0,#+160
   \   000003CC   EAFFFF1A           BNE      ??LOGOW_RENDER_16
   \   000003D0   ECFFFFEA           B        ??LOGOW_RENDER_15
   \                     ??LOGOW_RENDER_17:
   \   000003D4   1E0050E3           CMP      R0,#+30
   \   000003D8   0700001A           BNE      ??LOGOW_RENDER_18
   \   000003DC   ........           LDR      R0,??DataTable38  ;; sudoku
   \   000003E0   0310A0E3           MOV      R1,#+3
   \   000003E4   E90100EF           SWI      +489
   \   000003E8   ........           LDR      R1,??DataTable50  ;; sudoku_img
   \   000003EC   000081E5           STR      R0,[R1, #+0]
   \   000003F0   000096E5           LDR      R0,[R6, #+0]
   \   000003F4   010080E2           ADD      R0,R0,#+1
   \   000003F8   D1FFFFEA           B        ??LOGOW_RENDER_13
   \                     ??LOGOW_RENDER_18:
   \   000003FC   ........           LDR      R0,??DataTable69  ;; RENDERWINDOW
   \   00000400   005087E5           STR      R5,[R7, #+0]
   \   00000404   005080E5           STR      R5,[R0, #+0]
   \                     ??LOGOW_RENDER_12:
   \   00000408   000096E5           LDR      R0,[R6, #+0]
   \   0000040C   1E0050E3           CMP      R0,#+30
   \   00000410   090000AA           BGE      ??LOGOW_RENDER_19
   \                     ??LOGOW_RENDER_7:
   \   00000414   000096E5           LDR      R0,[R6, #+0]
   \   00000418   7810A0E3           MOV      R1,#+120
   \   0000041C   910000E0           MUL      R0,R1,R0
   \   00000420   6C119FE5           LDR      R1,??LOGOW_RENDER_0+0x28  ;; 0xffffffff88888889
   \   00000424   9120C3E0           SMULL    R2,R3,R1,R0
   \   00000428   003083E0           ADD      R3,R3,R0
   \   0000042C   4332A0E1           ASR      R3,R3,#+4
   \   00000430   A00F83E0           ADD      R0,R3,R0, LSR #+31
   \   00000434   040080E2           ADD      R0,R0,#+4
   \   00000438   000000EA           B        ??LOGOW_RENDER_20
   \                     ??LOGOW_RENDER_19:
   \   0000043C   7B00A0E3           MOV      R0,#+123
   \                     ??LOGOW_RENDER_20:
   \   00000440   50419FE5           LDR      R4,??LOGOW_RENDER_0+0x2C  ;; loadbar_x
   \   00000444   50919FE5           LDR      R9,??LOGOW_RENDER_0+0x30  ;; logo_loadbar
   \   00000448   000084E5           STR      R0,[R4, #+0]
   \   0000044C   0000A0E3           MOV      R0,#+0
   \   00000450   01002DE9           PUSH     {R0}
   \   00000454   9D30A0E3           MOV      R3,#+157
   \   00000458   7D20A0E3           MOV      R2,#+125
   \   0000045C   9710A0E3           MOV      R1,#+151
   \   00000460   0900A0E1           MOV      R0,R9
   \   00000464   01002DE9           PUSH     {R0}
   \   00000468   0000A0E3           MOV      R0,#+0
   \   0000046C   01002DE9           PUSH     {R0}
   \   00000470   0200A0E3           MOV      R0,#+2
   \   00000474   B40100EF           SWI      +436
   \   00000478   0900A0E1           MOV      R0,R9
   \   0000047C   01002DE9           PUSH     {R0}
   \   00000480   00022DE9           PUSH     {R9}
   \   00000484   9B30A0E3           MOV      R3,#+155
   \   00000488   0000A0E3           MOV      R0,#+0
   \   0000048C   01002DE9           PUSH     {R0}
   \   00000490   002094E5           LDR      R2,[R4, #+0]
   \   00000494   9910A0E3           MOV      R1,#+153
   \   00000498   0400A0E3           MOV      R0,#+4
   \   0000049C   B40100EF           SWI      +436
   \   000004A0   ........           LDR      R2,??DataTable63  ;; REDRAW_CONTROL
   \   000004A4   001097E5           LDR      R1,[R7, #+0]
   \   000004A8   0600A0E3           MOV      R0,#+6
   \   000004AC   400F80E3           ORR      R0,R0,#0x100
   \   000004B0   ........           _BLF     ??div32_a,??rA??div32_a
   \   000004B4   ........           LDR      R0,??DataTable65  ;; timer
   \   000004B8   4D0000EF           SWI      +77
   \   000004BC   18D08DE2           ADD      SP,SP,#+24
   \   000004C0   0A0000EA           B        ??LOGOW_RENDER_21
   \                     ??LOGOW_RENDER_1:
   \   000004C4   ........           LDR      R1,??DataTable69  ;; RENDERWINDOW
   \   000004C8   002065E2           RSB      R2,R5,#+0
   \   000004CC   002081E5           STR      R2,[R1, #+0]
   \   000004D0   0020D0E5           LDRB     R2,[R0, #+0]
   \   000004D4   C4109FE5           LDR      R1,??LOGOW_RENDER_0+0x34  ;; `?<Constant "\\315\\345\\362 %d png - \\364\\340\\350`
   \   000004D8   0D00A0E1           MOV      R0,SP
   \   000004DC   160000EF           SWI      +22
   \   000004E0   0020A0E3           MOV      R2,#+0
   \   000004E4   0810A0E3           MOV      R1,#+8
   \   000004E8   0D00A0E1           MOV      R0,SP
   \   000004EC   ........           BL       ShowMessage
   \                     ??LOGOW_RENDER_21:
   \   000004F0   000098E5           LDR      R0,[R8, #+0]
   \   000004F4   010050E3           CMP      R0,#+1
   \   000004F8   190000BA           BLT      ??LOGOW_RENDER_22
   \                     ??LOGOW_RENDER_11:
   \   000004FC   000096E5           LDR      R0,[R6, #+0]
   \   00000500   001065E2           RSB      R1,R5,#+0
   \   00000504   010080E2           ADD      R0,R0,#+1
   \   00000508   000086E5           STR      R0,[R6, #+0]
   \   0000050C   ........           LDR      R0,??DataTable69  ;; RENDERWINDOW
   \   00000510   005087E5           STR      R5,[R7, #+0]
   \   00000514   001080E5           STR      R1,[R0, #+0]
   \   00000518   84109FE5           LDR      R1,??LOGOW_RENDER_0+0x38  ;; `?<Constant "PNG \\324\\340\\350\\353\\373:\\n\\320\\34_1`
   \   0000051C   A030A0E3           MOV      R3,#+160
   \   00000520   8020A0E3           MOV      R2,#+128
   \   00000524   80008DE2           ADD      R0,SP,#+128
   \   00000528   160000EF           SWI      +22
   \   0000052C   000098E5           LDR      R0,[R8, #+0]
   \   00000530   010050E3           CMP      R0,#+1
   \   00000534   0300001A           BNE      ??LOGOW_RENDER_23
   \   00000538   68009FE5           LDR      R0,??LOGOW_RENDER_0+0x3C  ;; `?<Constant "PNG \\324\\340\\350\\353\\373:\\n\\320\\34`
   \   0000053C   0020A0E3           MOV      R2,#+0
   \   00000540   0810A0E3           MOV      R1,#+8
   \   00000544   ........           BL       ShowMessage
   \                     ??LOGOW_RENDER_23:
   \   00000548   000098E5           LDR      R0,[R8, #+0]
   \   0000054C   020050E3           CMP      R0,#+2
   \   00000550   0300001A           BNE      ??LOGOW_RENDER_22
   \   00000554   0020A0E3           MOV      R2,#+0
   \   00000558   0810A0E3           MOV      R1,#+8
   \   0000055C   80008DE2           ADD      R0,SP,#+128
   \   00000560   ........           BL       ShowMessage
   \                     ??LOGOW_RENDER_22:
   \   00000564   40DF8DE2           ADD      SP,SP,#+256      ;; stack cleaning
   \   00000568   F08FBDE8           POP      {R4-R11,PC}      ;; return
   \                     ??LOGOW_RENDER_0:
   \   0000056C   ........           DC32     error_logo
   \   00000570   ........           DC32     logo_img
   \   00000574   ........           DC32     red
   \   00000578   ........           DC32     logo_color
   \   0000057C   ........           DC32     `?<Constant "\\307\\340\\343\\360\\363\\347\\352\\340 .`
   \   00000580   ........           DC32     `?<Constant "\\324\\340\\350\\353 \\352\\340\\360\\362 `
   \   00000584   ........           DC32     `?<Constant "\\316\\370\\350\\341\\352\\340 \\356\\362\\`
   \   00000588   ........           DC32     `?<Constant "\\316\\370\\350\\341\\352\\340 ID \\364\\3`
   \   0000058C   ........           DC32     `?<Constant "\\315\\345\\350\\347\\342. \\342\\345\\360`
   \   00000590   ........           DC32     `?<Constant "\\316\\370\\350\\341\\352\\340 \\361\\362\\`
   \   00000594   89888888           DC32     0xffffffff88888889
   \   00000598   ........           DC32     loadbar_x
   \   0000059C   ........           DC32     logo_loadbar
   \   000005A0   ........           DC32     `?<Constant "\\315\\345\\362 %d png - \\364\\340\\350`
   \   000005A4   ........           DC32     `?<Constant "PNG \\324\\340\\350\\353\\373:\\n\\320\\34_1`
   \   000005A8   ........           DC32     `?<Constant "PNG \\324\\340\\350\\353\\373:\\n\\320\\34`
    105          #include "engine\render\mmenu.c"     //Рендеринг Главного Меню

   \                                 In segment DATA_Z, align 1, align-sorted
   \   char __data load_canvas1
   \                     load_canvas1:
   \   00000000                      DS8 1

   \                                 In segment DATA_Z, align 1, align-sorted
   \   char __data mmenu_cur
   \                     mmenu_cur:
   \   00000000                      DS8 1

   \                                 In segment DATA_I, align 4, align-sorted
   \   char __data mmenu_str[7][16]
   \                     mmenu_str:
   \   00000000                      DS8 112
   \   00000070                      REQUIRE `?<Initializer for mmenu_str>`

   \                                 In segment DATA_Z, align 4, align-sorted
   \   struct <unnamed> *__data bgm_canvas_mmenu
   \                     bgm_canvas_mmenu:
   \   00000000                      DS8 4

   \                                 In segment DATA_Z, align 4, align-sorted
   \   struct <unnamed> *__data bgm_canvas_mrsoft
   \                     bgm_canvas_mrsoft:
   \   00000000                      DS8 4

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void MMENU_RENDER()
   \                     MMENU_RENDER:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000004   28439FE5           LDR      R4,??MMENU_RENDER_0  ;; bcfg_mmenu_font
   \   00000008   28739FE5           LDR      R7,??MMENU_RENDER_0+0x4  ;; bcfg_sh_softfont
   \   0000000C   ........           LDR      R8,??DataTable57  ;; bgm_canvas_mmenu
   \   00000010   ........           LDR      R9,??DataTable46  ;; bgm_img
   \   00000014   20A39FE5           LDR      R10,??MMENU_RENDER_0+0x8  ;; load_canvas1
   \   00000018   10D04DE2           SUB      SP,SP,#+16
   \   0000001C   000094E5           LDR      R0,[R4, #+0]
   \   00000020   C50100EF           SWI      +453
   \   00000024   0050A0E1           MOV      R5,R0
   \   00000028   850165E0           RSB      R0,R5,R5, LSL #+3
   \   0000002C   5010A0E3           MOV      R1,#+80
   \   00000030   A02F80E0           ADD      R2,R0,R0, LSR #+31
   \   00000034   C26041E0           SUB      R6,R1,R2, ASR #+1
   \   00000038   ........           LDR      R2,??DataTable50  ;; sudoku_img
   \   0000003C   002092E5           LDR      R2,[R2, #+0]
   \   00000040   B020D2E1           LDRH     R2,[R2, #+0]
   \   00000044   A220A0E1           LSR      R2,R2,#+1
   \   00000048   402062E2           RSB      R2,R2,#+64
   \   0000004C   0C208DE5           STR      R2,[SP, #+12]
   \   00000050   0010DAE5           LDRB     R1,[R10, #+0]
   \   00000054   000051E3           CMP      R1,#+0
   \   00000058   1E00001A           BNE      ??MMENU_RENDER_1
   \   0000005C   010080E2           ADD      R0,R0,#+1
   \   00000060   0008A0E1           MOV      R0,R0, LSL #+16
   \   00000064   4008A0E1           MOV      R0,R0, ASR #+16
   \   00000068   01002DE9           PUSH     {R0}
   \   0000006C   000099E5           LDR      R0,[R9, #+0]
   \   00000070   7330A0E3           MOV      R3,#+115
   \   00000074   0628A0E1           MOV      R2,R6, LSL #+16
   \   00000078   4228A0E1           MOV      R2,R2, ASR #+16
   \   0000007C   ........           BL       CreateIMGHDRbyfragmentIMGHDR
   \   00000080   000088E5           STR      R0,[R8, #+0]
   \   00000084   000097E5           LDR      R0,[R7, #+0]
   \   00000088   C50100EF           SWI      +453
   \   0000008C   00B0A0E1           MOV      R11,R0
   \   00000090   000097E5           LDR      R0,[R7, #+0]
   \   00000094   C50100EF           SWI      +453
   \   00000098   01108BE2           ADD      R1,R11,#+1
   \   0000009C   0118A0E1           MOV      R1,R1, LSL #+16
   \   000000A0   4118A0E1           MOV      R1,R1, ASR #+16
   \   000000A4   02002DE9           PUSH     {R1}
   \   000000A8   4C30A0E3           MOV      R3,#+76
   \   000000AC   9E2060E2           RSB      R2,R0,#+158
   \   000000B0   000099E5           LDR      R0,[R9, #+0]
   \   000000B4   0228A0E1           MOV      R2,R2, LSL #+16
   \   000000B8   4228A0E1           MOV      R2,R2, ASR #+16
   \   000000BC   3310A0E3           MOV      R1,#+51
   \   000000C0   ........           BL       CreateIMGHDRbyfragmentIMGHDR
   \   000000C4   ........           LDR      R1,??DataTable58  ;; bgm_canvas_mrsoft
   \   000000C8   000081E5           STR      R0,[R1, #+0]
   \   000000CC   0100A0E3           MOV      R0,#+1
   \   000000D0   0000CAE5           STRB     R0,[R10, #+0]
   \   000000D4   08D08DE2           ADD      SP,SP,#+8
   \                     ??MMENU_RENDER_1:
   \   000000D8   ........           LDR      R0,??DataTable74  ;; TYPEREDRAW
   \   000000DC   0000D0E5           LDRB     R0,[R0, #+0]
   \   000000E0   000050E3           CMP      R0,#+0
   \   000000E4   0C00001A           BNE      ??MMENU_RENDER_2
   \   000000E8   01002DE9           PUSH     {R0}
   \   000000EC   0030A0E3           MOV      R3,#+0
   \   000000F0   000099E5           LDR      R0,[R9, #+0]
   \   000000F4   0020A0E3           MOV      R2,#+0
   \   000000F8   0210A0E1           MOV      R1,R2
   \   000000FC   ........           BL       DrwImg
   \   00000100   0000A0E3           MOV      R0,#+0
   \   00000104   01002DE9           PUSH     {R0}
   \   00000108   14109DE5           LDR      R1,[SP, #+20]
   \   0000010C   0030A0E1           MOV      R3,R0
   \   00000110   ........           LDR      R0,??DataTable50  ;; sudoku_img
   \   00000114   0220A0E3           MOV      R2,#+2
   \   00000118   1D0000EA           B        ??MMENU_RENDER_3
   \                     ??MMENU_RENDER_2:
   \   0000011C   ........           LDR      R0,??DataTable71  ;; pravda
   \   00000120   000090E5           LDR      R0,[R0, #+0]
   \   00000124   010050E3           CMP      R0,#+1
   \   00000128   0A00001A           BNE      ??MMENU_RENDER_4
   \   0000012C   0C029FE5           LDR      R0,??MMENU_RENDER_0+0xC  ;; white
   \   00000130   9F30A0E3           MOV      R3,#+159
   \   00000134   0010A0E1           MOV      R1,R0
   \   00000138   02002DE9           PUSH     {R1}
   \   0000013C   01002DE9           PUSH     {R0}
   \   00000140   7F20A0E3           MOV      R2,#+127
   \   00000144   0010A0E3           MOV      R1,#+0
   \   00000148   0000A0E3           MOV      R0,#+0
   \   0000014C   01002DE9           PUSH     {R0}
   \   00000150   B40100EF           SWI      +436
   \   00000154   0CD08DE2           ADD      SP,SP,#+12
   \                     ??MMENU_RENDER_4:
   \   00000158   0000A0E3           MOV      R0,#+0
   \   0000015C   01002DE9           PUSH     {R0}
   \   00000160   0030A0E3           MOV      R3,#+0
   \   00000164   0620A0E1           MOV      R2,R6
   \   00000168   0010A0E1           MOV      R1,R0
   \   0000016C   000098E5           LDR      R0,[R8, #+0]
   \   00000170   ........           BL       DrwImg
   \   00000174   000097E5           LDR      R0,[R7, #+0]
   \   00000178   C50100EF           SWI      +453
   \   0000017C   0010A0E3           MOV      R1,#+0
   \   00000180   02002DE9           PUSH     {R1}
   \   00000184   0130A0E1           MOV      R3,R1
   \   00000188   9E2060E2           RSB      R2,R0,#+158
   \   0000018C   ........           LDR      R0,??DataTable58  ;; bgm_canvas_mrsoft
   \   00000190   3310A0E3           MOV      R1,#+51
   \                     ??MMENU_RENDER_3:
   \   00000194   000090E5           LDR      R0,[R0, #+0]
   \   00000198   0080A0E3           MOV      R8,#+0
   \   0000019C   ........           BL       DrwImg
   \   000001A0   08D08DE2           ADD      SP,SP,#+8
   \                     ??MMENU_RENDER_5:
   \   000001A4   0090A0E3           MOV      R9,#+0
   \                     ??MMENU_RENDER_6:
   \   000001A8   6400A0E3           MOV      R0,#+100
   \   000001AC   900901E0           MUL      R1,R0,R9
   \   000001B0   8C019FE5           LDR      R0,??MMENU_RENDER_0+0x10  ;; 0x473c1ab7
   \   000001B4   9021C3E0           SMULL    R2,R3,R0,R1
   \   000001B8   0920A0E1           MOV      R2,R9
   \   000001BC   C332A0E1           ASR      R3,R3,#+5
   \   000001C0   A10F83E0           ADD      R0,R3,R1, LSR #+31
   \   000001C4   7C119FE5           LDR      R1,??MMENU_RENDER_0+0x14  ;; bcfg_mmenu_bgcol_u
   \   000001C8   640060E2           RSB      R0,R0,#+100
   \   000001CC   0030D1E5           LDRB     R3,[R1, #+0]
   \   000001D0   0030CDE5           STRB     R3,[SP, #+0]
   \   000001D4   0130D1E5           LDRB     R3,[R1, #+1]
   \   000001D8   0130CDE5           STRB     R3,[SP, #+1]
   \   000001DC   0210D1E5           LDRB     R1,[R1, #+2]
   \   000001E0   0210CDE5           STRB     R1,[SP, #+2]
   \   000001E4   60119FE5           LDR      R1,??MMENU_RENDER_0+0x18  ;; bcfg_mmenu_bgcol_m
   \   000001E8   0300CDE5           STRB     R0,[SP, #+3]
   \   000001EC   0030D1E5           LDRB     R3,[R1, #+0]
   \   000001F0   0430CDE5           STRB     R3,[SP, #+4]
   \   000001F4   0130D1E5           LDRB     R3,[R1, #+1]
   \   000001F8   0530CDE5           STRB     R3,[SP, #+5]
   \   000001FC   0210D1E5           LDRB     R1,[R1, #+2]
   \   00000200   0610CDE5           STRB     R1,[SP, #+6]
   \   00000204   0700CDE5           STRB     R0,[SP, #+7]
   \   00000208   ........           LDR      R0,??DataTable72  ;; mmenu_cur
   \   0000020C   956821E0           MLA      R1,R5,R8,R6
   \   00000210   0000D0E5           LDRB     R0,[R0, #+0]
   \   00000214   013085E0           ADD      R3,R5,R1
   \   00000218   000058E1           CMP      R8,R0
   \   0000021C   04008D02           ADDEQ    R0,SP,#+4
   \   00000220   0D00A011           MOVNE    R0,SP
   \   00000224   01002DE9           PUSH     {R0}
   \   00000228   01002DE9           PUSH     {R0}
   \   0000022C   0000A0E3           MOV      R0,#+0
   \   00000230   01002DE9           PUSH     {R0}
   \   00000234   01002DE9           PUSH     {R0}
   \   00000238   01002DE9           PUSH     {R0}
   \   0000023C   0900A0E1           MOV      R0,R9
   \   00000240   019089E2           ADD      R9,R9,#+1
   \   00000244   500100EF           SWI      +336
   \   00000248   14D08DE2           ADD      SP,SP,#+20
   \   0000024C   730059E3           CMP      R9,#+115
   \   00000250   D4FFFFBA           BLT      ??MMENU_RENDER_6
   \   00000254   018088E2           ADD      R8,R8,#+1
   \   00000258   070058E3           CMP      R8,#+7
   \   0000025C   D0FFFFBA           BLT      ??MMENU_RENDER_5
   \   00000260   0080A0E3           MOV      R8,#+0
   \                     ??MMENU_RENDER_7:
   \   00000264   E4109FE5           LDR      R1,??MMENU_RENDER_0+0x1C  ;; `?<Constant "%t">_2`
   \   00000268   08008DE2           ADD      R0,SP,#+8
   \   0000026C   0020D1E5           LDRB     R2,[R1, #0]
   \   00000270   0020C0E5           STRB     R2,[R0, #+0]
   \   00000274   0120D1E5           LDRB     R2,[R1, #+1]
   \   00000278   0120C0E5           STRB     R2,[R0, #+1]
   \   0000027C   0220D1E5           LDRB     R2,[R1, #+2]
   \   00000280   0220C0E5           STRB     R2,[R0, #+2]
   \   00000284   1000A0E3           MOV      R0,#+16
   \   00000288   250100EF           SWI      +293
   \   0000028C   0090A0E1           MOV      R9,R0
   \   00000290   BC009FE5           LDR      R0,??MMENU_RENDER_0+0x20  ;; mmenu_str
   \   00000294   08108DE2           ADD      R1,SP,#+8
   \   00000298   082280E0           ADD      R2,R0,R8, LSL #+4
   \   0000029C   0900A0E1           MOV      R0,R9
   \   000002A0   240100EF           SWI      +292
   \   000002A4   0010A0E3           MOV      R1,#+0
   \   000002A8   02002DE9           PUSH     {R1}
   \   000002AC   A4109FE5           LDR      R1,??MMENU_RENDER_0+0x24  ;; bcfg_mmenu_col
   \   000002B0   950800E0           MUL      R0,R5,R8
   \   000002B4   02002DE9           PUSH     {R1}
   \   000002B8   6630A0E3           MOV      R3,#+102
   \   000002BC   062080E0           ADD      R2,R0,R6
   \   000002C0   018088E2           ADD      R8,R8,#+1
   \   000002C4   0010A0E3           MOV      R1,#+0
   \   000002C8   02002DE9           PUSH     {R1}
   \   000002CC   001094E5           LDR      R1,[R4, #+0]
   \   000002D0   02002DE9           PUSH     {R1}
   \   000002D4   061085E0           ADD      R1,R5,R6
   \   000002D8   011080E0           ADD      R1,R0,R1
   \   000002DC   02002DE9           PUSH     {R1}
   \   000002E0   0900A0E1           MOV      R0,R9
   \   000002E4   0210A0E3           MOV      R1,#+2
   \   000002E8   4C0100EF           SWI      +332
   \   000002EC   0900A0E1           MOV      R0,R9
   \   000002F0   290100EF           SWI      +297
   \   000002F4   070058E3           CMP      R8,#+7
   \   000002F8   14D08DE2           ADD      SP,SP,#+20
   \   000002FC   D8FFFFBA           BLT      ??MMENU_RENDER_7
   \   00000300   ........           LDR      R0,??DataTable56  ;; errs
   \   00000304   001097E5           LDR      R1,[R7, #+0]
   \   00000308   000090E5           LDR      R0,[R0, #+0]
   \   0000030C   48209FE5           LDR      R2,??MMENU_RENDER_0+0x28  ;; bcfg_sh_softcolt
   \   00000310   0300D0E5           LDRB     R0,[R0, #+3]
   \   00000314   44309FE5           LDR      R3,??MMENU_RENDER_0+0x2C  ;; bcfg_sh_softcolg
   \   00000318   000050E3           CMP      R0,#+0
   \   0000031C   40009F05           LDREQ    R0,??MMENU_RENDER_0+0x30  ;; `?<Constant "\\317\\360\\356\\344\\356\\353\\346\\350\\3`
   \   00000320   40009F15           LDRNE    R0,??MMENU_RENDER_0+0x34  ;; `?<Constant "\\316\\341\\347\\356\\360">`
   \   00000324   ........           BL       DrawRightSoft
   \   00000328   ........           LDR      R0,??DataTable65  ;; timer
   \   0000032C   440100EF           SWI      +324
   \   00000330   FF8FBDE8           POP      {R0-R11,PC}      ;; return
   \                     ??MMENU_RENDER_0:
   \   00000334   ........           DC32     bcfg_mmenu_font
   \   00000338   ........           DC32     bcfg_sh_softfont
   \   0000033C   ........           DC32     load_canvas1
   \   00000340   ........           DC32     white
   \   00000344   B71A3C47           DC32     0x473c1ab7
   \   00000348   ........           DC32     bcfg_mmenu_bgcol_u
   \   0000034C   ........           DC32     bcfg_mmenu_bgcol_m
   \   00000350   ........           DC32     `?<Constant "%t">_2`
   \   00000354   ........           DC32     mmenu_str
   \   00000358   ........           DC32     bcfg_mmenu_col
   \   0000035C   ........           DC32     bcfg_sh_softcolt
   \   00000360   ........           DC32     bcfg_sh_softcolg
   \   00000364   ........           DC32     `?<Constant "\\317\\360\\356\\344\\356\\353\\346\\350\\3`
   \   00000368   ........           DC32     `?<Constant "\\316\\341\\347\\356\\360">`
    106          
    107          //General programs functions - Основные функции игры/программы
    108          
    109          

   \                                 In segment CODE, align 4, keep-with-next
    110          void START_CONTROL(char *exename, char *fname) // Выполнение ф-ий при старте приложения, exename - путь запущенного эльфа, fname - параметр при запуске, например, путь какого-либо фаила
    111          {
   \                     START_CONTROL:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
    112            //if (SECRETFUNCTION(exename)==1) {ShowMSG(1,(int)"AAAAA!");SUBPROC((void *)ElfKiller); }
    113           
    114            
    115           sdm = CreateSUDOKUMAPbyEXTFILE(fname);
   \   00000004   34609FE5           LDR      R6,??START_CONTROL_0  ;; sdm
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   0500A0E1           MOV      R0,R5
   \   00000014   ........           BL       CreateSUDOKUMAPbyEXTFILE
   \   00000018   000086E5           STR      R0,[R6, #+0]
    116           
    117           ElfFolderOperations(exename);
   \   0000001C   0400A0E1           MOV      R0,R4
   \   00000020   ........           BL       ElfFolderOperations
    118           errs = ElfFolderCheckFiles(sdm, fname);
   \   00000024   000096E5           LDR      R0,[R6, #+0]
   \   00000028   0510A0E1           MOV      R1,R5
   \   0000002C   ........           BL       ElfFolderCheckFiles
   \   00000030   ........           LDR      R1,??DataTable56  ;; errs
   \   00000034   000081E5           STR      R0,[R1, #+0]
    119           InitConfig(); 
   \   00000038   7040BDE8           POP      {R4-R6,LR}       ;; Pop
   \   0000003C   ........           _BF      InitConfig,??InitConfig??rA  ;; tailcall
   \                     ??START_CONTROL_0:
   \   00000040   ........           DC32     sdm
    120          }
    121          
    122          

   \                                 In segment CODE, align 4, keep-with-next
    123          void END_CONTROL() // Выполнение ф-ий при завершении приложения
    124          {
    125            MemFreeOfIMGHDR(bgm_canvas_mmenu);
   \                     END_CONTROL:
   \   00000000   ........           LDR      R0,??DataTable57  ;; bgm_canvas_mmenu
   \   00000004   00402DE9           PUSH     {LR}
   \   00000008   000090E5           LDR      R0,[R0, #+0]
   \   0000000C   ........           BL       MemFreeOfIMGHDR
    126            MemFreeOfIMGHDR(bgm_canvas_mrsoft);
   \   00000010   ........           LDR      R0,??DataTable58  ;; bgm_canvas_mrsoft
   \   00000014   000090E5           LDR      R0,[R0, #+0]
   \   00000018   ........           BL       MemFreeOfIMGHDR
    127            MEMORYFREE(counter); 
   \   0000001C   ........           LDR      R0,??DataTable59  ;; counter
   \   00000020   000090E5           LDR      R0,[R0, #+0]
   \   00000024   ........           BL       MEMORYFREE
    128            GBS_DelTimer(&timer);
   \   00000028   ........           LDR      R0,??DataTable65  ;; timer
   \   0000002C   8C0100EF           SWI      +396
    129            
    130          }
   \   00000030   0080BDE8           POP      {PC}             ;; return
    131          

   \                                 In segment CODE, align 4, keep-with-next
    132          void MINIMIZE_CONTROL() // Выполнение ф-ий при "сворачивании" приложения
    133          {
    134            
    135           GBS_StopTimer(&timer);
   \                     MINIMIZE_CONTROL:
   \   00000000   ........           LDR      R0,??DataTable65  ;; timer
   \   00000004   00402DE9           PUSH     {LR}
   \   00000008   440100EF           SWI      +324
    136            
    137          }
   \   0000000C   0080BDE8           POP      {PC}             ;; return
    138          

   \                                 In segment CODE, align 4, keep-with-next
    139          void MAXIMIZE_CONTROL() // Выполнение ф-ий при "разворачивании" приложения
    140          { 
    141           FULLREDRAW();
   \                     MAXIMIZE_CONTROL:
   \   00000000   ........           LDR      R0,??DataTable74  ;; TYPEREDRAW
   \   00000004   00402DE9           PUSH     {LR}
   \   00000008   0010A0E3           MOV      R1,#+0
   \   0000000C   0010C0E5           STRB     R1,[R0, #+0]
   \   00000010   720100EF           SWI      +370
    142          }
   \   00000014   0080BDE8           POP      {PC}             ;; return
    143          

   \                                 In segment CODE, align 4, keep-with-next
    144          void CREATE_CONTROL() // Выполнение ф-ий при создания окна приложения
    145          {
    146           GBS_StartTimerProc(&timer,TIMER_SECOND/GBSTIMER_KOEFFICENT,REDRAW_CONTROL);
   \                     CREATE_CONTROL:
   \   00000000   ........           LDR      R2,??DataTable63  ;; REDRAW_CONTROL
   \   00000004   ........           LDR      R1,??DataTable64  ;; GBSTIMER_KOEFFICENT
   \   00000008   00402DE9           PUSH     {LR}
   \   0000000C   001091E5           LDR      R1,[R1, #+0]
   \   00000010   0600A0E3           MOV      R0,#+6
   \   00000014   400F80E3           ORR      R0,R0,#0x100
   \   00000018   ........           _BLF     ??div32_a,??rA??div32_a
   \   0000001C   ........           LDR      R0,??DataTable65  ;; timer
   \   00000020   4D0000EF           SWI      +77
    147           FULLREDRAW();
   \   00000024   ........           LDR      R0,??DataTable74  ;; TYPEREDRAW
   \   00000028   0010A0E3           MOV      R1,#+0
   \   0000002C   0010C0E5           STRB     R1,[R0, #+0]
   \   00000030   720100EF           SWI      +370
    148          }
   \   00000034   0080BDE8           POP      {PC}             ;; return
    149          

   \                                 In segment CODE, align 4, keep-with-next
    150          void MESSAGES_CONTROL() // Выполнение ф-ий при приходе сообщений
    151          {
    152          
    153          }
   \                     MESSAGES_CONTROL:
   \   00000000   1EFF2FE1           BX       LR               ;; return
    154          

   \                                 In segment CODE, align 4, keep-with-next
    155          void REDRAW_CONTROL() // Выполнение ф-ий прорисовки экрана, REDRAW() - для вызова этой ф-ии
    156          {
    157          if (MESSAGEWINDOW == 0)
   \                     REDRAW_CONTROL:
   \   00000000   ........           LDR      R0,??DataTable70  ;; MESSAGEWINDOW
   \   00000004   10402DE9           PUSH     {R4,LR}
   \   00000008   000090E5           LDR      R0,[R0, #+0]
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   1080BD18           POPNE    {R4,PC}
    158          {
    159            if (RENDERWINDOW  == 0) LOGOW_RENDER();
   \   00000014   ........           LDR      R4,??DataTable69  ;; RENDERWINDOW
   \   00000018   000094E5           LDR      R0,[R4, #+0]
   \   0000001C   000050E3           CMP      R0,#+0
   \   00000020   0000001A           BNE      ??REDRAW_CONTROL_0
   \   00000024   ........           BL       LOGOW_RENDER
    160            if (RENDERWINDOW  == 1) MMENU_RENDER();
   \                     ??REDRAW_CONTROL_0:
   \   00000028   000094E5           LDR      R0,[R4, #+0]
   \   0000002C   010050E3           CMP      R0,#+1
   \   00000030   1080BD18           POPNE    {R4,PC}
   \   00000034   ........           BL       MMENU_RENDER
    161          } 
    162          
    163          }
   \   00000038   1080BDE8           POP      {R4,PC}          ;; return
    164          
    165          

   \                                 In segment CODE, align 4, keep-with-next
    166          int KEY_CONTROL(GUI_MSG *msg) // Выполнение ф-ий при нажатии клавиш, KEYMSG - тип нажатия, KEYSMSG - код клавиши, END - завершение программы, NEXT - ожидание следующего нажатия клавиши
    167          { 
   \                     KEY_CONTROL:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
    168          int MT=0;
    169           if (KEYMSG == KEY_DOWN || KEYMSG == LONG_PRESS)
   \   00000004   040090E5           LDR      R0,[R0, #+4]
   \   00000008   ........           LDR      R5,??DataTable69  ;; RENDERWINDOW
   \   0000000C   041090E5           LDR      R1,[R0, #+4]
   \   00000010   0040A0E3           MOV      R4,#+0
   \   00000014   0160A0E3           MOV      R6,#+1
   \   00000018   0070A0E3           MOV      R7,#+0
   \   0000001C   9320A0E3           MOV      R2,#+147
   \   00000020   402F82E3           ORR      R2,R2,#0x100
   \   00000024   020051E1           CMP      R1,R2
   \   00000028   02208212           ADDNE    R2,R2,#+2
   \   0000002C   02005111           CMPNE    R1,R2
   \   00000030   4F00001A           BNE      ??KEY_CONTROL_0
    170            {
    171              if (MESSAGEWINDOW == 1)
   \   00000034   ........           LDR      R2,??DataTable70  ;; MESSAGEWINDOW
   \   00000038   001095E5           LDR      R1,[R5, #+0]
   \   0000003C   003092E5           LDR      R3,[R2, #+0]
   \   00000040   010053E3           CMP      R3,#+1
   \   00000044   0E00001A           BNE      ??KEY_CONTROL_1
    172               {
    173                 if (KEYSMSG > 0 && RENDERWINDOW == -1) END;
   \   00000048   088090E5           LDR      R8,[R0, #+8]
   \   0000004C   0430E0E1           MVN      R3,R4
   \   00000050   010058E3           CMP      R8,#+1
   \   00000054   030000BA           BLT      ??KEY_CONTROL_2
   \   00000058   030051E1           CMP      R1,R3
   \   0000005C   0100001A           BNE      ??KEY_CONTROL_2
   \                     ??KEY_CONTROL_3:
   \   00000060   0100A0E3           MOV      R0,#+1
   \   00000064   F081BDE8           POP      {R4-R8,PC}
    174                 if (KEYSMSG > 0 && RENDERWINDOW != -1) {MESSAGEWINDOW = 0;MT=1; GKEYEND;}
   \                     ??KEY_CONTROL_2:
   \   00000068   010058E3           CMP      R8,#+1
   \   0000006C   400000BA           BLT      ??KEY_CONTROL_0
   \   00000070   030051E1           CMP      R1,R3
   \   00000074   3E00000A           BEQ      ??KEY_CONTROL_0
   \   00000078   007082E5           STR      R7,[R2, #+0]
   \   0000007C   0140A0E3           MOV      R4,#+1
   \   00000080   3B0000EA           B        ??KEY_CONTROL_0
    175               }
    176              else
    177              {
    178                if (RENDERWINDOW == 1)
   \                     ??KEY_CONTROL_1:
   \   00000084   010051E3           CMP      R1,#+1
   \   00000088   3900001A           BNE      ??KEY_CONTROL_0
    179                 {
    180                   if (KEYSMSG == '0') if (pravda == 0) pravda = 1; else pravda = 0;
   \   0000008C   081090E5           LDR      R1,[R0, #+8]
   \   00000090   300051E3           CMP      R1,#+48
   \   00000094   0400001A           BNE      ??KEY_CONTROL_4
   \   00000098   ........           LDR      R1,??DataTable71  ;; pravda
   \   0000009C   002091E5           LDR      R2,[R1, #+0]
   \   000000A0   000052E3           CMP      R2,#+0
   \   000000A4   00608105           STREQ    R6,[R1, #+0]
   \   000000A8   00708115           STRNE    R7,[R1, #+0]
    181                   if (KEYSMSG == UP_BUTTON    || KEYSMSG == '2') {if (mmenu_cur==0) mmenu_cur=(MMENU_CT - 1); else mmenu_cur--; GKEYEND;}
   \                     ??KEY_CONTROL_4:
   \   000000AC   ........           LDR      R1,??DataTable72  ;; mmenu_cur
   \   000000B0   083090E5           LDR      R3,[R0, #+8]
   \   000000B4   0020D1E5           LDRB     R2,[R1, #+0]
   \   000000B8   3B0053E3           CMP      R3,#+59
   \   000000BC   32005313           CMPNE    R3,#+50
   \   000000C0   0400001A           BNE      ??KEY_CONTROL_5
   \   000000C4   000052E3           CMP      R2,#+0
   \   000000C8   01004212           SUBNE    R0,R2,#+1
   \   000000CC   0600A003           MOVEQ    R0,#+6
   \                     ??KEY_CONTROL_6:
   \   000000D0   0000C1E5           STRB     R0,[R1, #+0]
   \   000000D4   260000EA           B        ??KEY_CONTROL_0
    182                   if (KEYSMSG == DOWN_BUTTON  || KEYSMSG == '8') {if (mmenu_cur==(MMENU_CT - 1)) mmenu_cur=0; else mmenu_cur++; GKEYEND;}
   \                     ??KEY_CONTROL_5:
   \   000000D8   3C0053E3           CMP      R3,#+60
   \   000000DC   38005313           CMPNE    R3,#+56
   \   000000E0   0400001A           BNE      ??KEY_CONTROL_7
   \   000000E4   060052E3           CMP      R2,#+6
   \   000000E8   0070C105           STRBEQ   R7,[R1, #+0]
   \   000000EC   2000000A           BEQ      ??KEY_CONTROL_0
   \   000000F0   010082E2           ADD      R0,R2,#+1
   \   000000F4   F5FFFFEA           B        ??KEY_CONTROL_6
    183                   if (KEYSMSG == ENTER_BUTTON || KEYSMSG == '5')
   \                     ??KEY_CONTROL_7:
   \   000000F8   1A0053E3           CMP      R3,#+26
   \   000000FC   35005313           CMPNE    R3,#+53
   \   00000100   1B00001A           BNE      ??KEY_CONTROL_0
    184                   {
    185                     if (mmenu_cur == 0) {RENDERWINDOW = 2;    GKEYEND;}
   \   00000104   000052E3           CMP      R2,#+0
   \   00000108   0200001A           BNE      ??KEY_CONTROL_8
   \   0000010C   0200A0E3           MOV      R0,#+2
   \                     ??KEY_CONTROL_9:
   \   00000110   000085E5           STR      R0,[R5, #+0]
   \   00000114   160000EA           B        ??KEY_CONTROL_0
    186                     if (mmenu_cur == 1) {RENDERWINDOW = 3;    GKEYEND;}
   \                     ??KEY_CONTROL_8:
   \   00000118   010052E3           CMP      R2,#+1
   \   0000011C   0300A003           MOVEQ    R0,#+3
   \   00000120   FAFFFF0A           BEQ      ??KEY_CONTROL_9
    187                     if (mmenu_cur == 2) {OpenFile(cfgfile,0); GKEYEND;}
   \   00000124   020052E3           CMP      R2,#+2
   \   00000128   0300001A           BNE      ??KEY_CONTROL_10
   \   0000012C   ........           LDR      R0,??DataTable73  ;; cfgfile
   \   00000130   0010A0E3           MOV      R1,#+0
   \   00000134   ........           BL       OpenFile
   \   00000138   0D0000EA           B        ??KEY_CONTROL_0
    188                     if (mmenu_cur == 3) {ShowMessage(LG_MMENU_ERROR, 7, MSGINFO); GKEYEND;}
   \                     ??KEY_CONTROL_10:
   \   0000013C   030052E3           CMP      R2,#+3
   \   00000140   0400001A           BNE      ??KEY_CONTROL_11
   \                     ??KEY_CONTROL_12:
   \   00000144   68009FE5           LDR      R0,??KEY_CONTROL_13  ;; `?<Constant "\\310\\347\\342\\350\\355\\350\\362\\345, `
   \   00000148   0120A0E3           MOV      R2,#+1
   \   0000014C   0710A0E3           MOV      R1,#+7
   \   00000150   ........           BL       ShowMessage
   \   00000154   060000EA           B        ??KEY_CONTROL_0
    189                     if (mmenu_cur == 4) {ShowMessage(LG_MMENU_ERROR, 7, MSGINFO); GKEYEND;}
   \                     ??KEY_CONTROL_11:
   \   00000158   040052E3           CMP      R2,#+4
   \   0000015C   F8FFFF0A           BEQ      ??KEY_CONTROL_12
    190                     if (mmenu_cur == 5) {RENDERWINDOW = 5;    GKEYEND;}
   \   00000160   050052E3           CMP      R2,#+5
   \   00000164   0500A003           MOVEQ    R0,#+5
   \   00000168   E8FFFF0A           BEQ      ??KEY_CONTROL_9
    191                     if (mmenu_cur == 6) END;  
   \   0000016C   060052E3           CMP      R2,#+6
   \   00000170   BAFFFF0A           BEQ      ??KEY_CONTROL_3
    192                   }
    193                 }
    194                   
    195              }
    196              
    197              
    198                
    199            }
    200           
    201           
    202          KEYEND:
    203          
    204          if (TEMPREDRAW != RENDERWINDOW || MT == 1) FULLREDRAW(); else SMARTREDRAW();
   \                     ??KEY_CONTROL_0:
   \   00000174   3C809FE5           LDR      R8,??KEY_CONTROL_13+0x4  ;; TEMPREDRAW
   \   00000178   002095E5           LDR      R2,[R5, #+0]
   \   0000017C   0010D8E5           LDRB     R1,[R8, #+0]
   \   00000180   ........           LDR      R0,??DataTable74  ;; TYPEREDRAW
   \   00000184   020051E1           CMP      R1,R2
   \   00000188   0100001A           BNE      ??KEY_CONTROL_14
   \   0000018C   010054E3           CMP      R4,#+1
   \   00000190   0100001A           BNE      ??KEY_CONTROL_15
   \                     ??KEY_CONTROL_14:
   \   00000194   0070C0E5           STRB     R7,[R0, #+0]
   \   00000198   000000EA           B        ??KEY_CONTROL_16
   \                     ??KEY_CONTROL_15:
   \   0000019C   0060C0E5           STRB     R6,[R0, #+0]
   \                     ??KEY_CONTROL_16:
   \   000001A0   720100EF           SWI      +370
    205          TEMPREDRAW = RENDERWINDOW; 
   \   000001A4   000095E5           LDR      R0,[R5, #+0]
   \   000001A8   0000C8E5           STRB     R0,[R8, #+0]
    206           
    207           NEXT; 
   \   000001AC   0000A0E3           MOV      R0,#+0
   \   000001B0   F081BDE8           POP      {R4-R8,PC}       ;; return
   \                     ??KEY_CONTROL_13:
   \   000001B4   ........           DC32     `?<Constant "\\310\\347\\342\\350\\355\\350\\362\\345, `
   \   000001B8   ........           DC32     TEMPREDRAW
    208          }

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   ........           DC32     timer

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   ........           DC32     black

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable5:
   \   00000000   ........           DC32     alpha

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable6:
   \   00000000   ........           DC32     MESSAGEWINDOW

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable7:
   \   00000000   ........           DC32     TYPEREDRAW

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable8:
   \   00000000   ........           DC32     bgm_img

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable9:
   \   00000000   ........           DC32     bgg_img

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable10:
   \   00000000   ........           DC32     sudoku_img

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable11:
   \   00000000   ........           DC32     dig_img

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable24:
   \   00000000   ........           DC32     hlpfile

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable25:
   \   00000000   ........           DC32     seditor

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable26:
   \   00000000   ........           DC32     elffolder

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable30:
   \   00000000   ........           DC32     alpha

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable31:
   \   00000000   ........           DC32     black

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable32:
   \   00000000   ........           DC32     dig

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable33:
   \   00000000   ........           DC32     dig_img

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable35:
   \   00000000   ........           DC32     bgm

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable36:
   \   00000000   ........           DC32     bgg_img

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable37:
   \   00000000   ........           DC32     bgg

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable38:
   \   00000000   ........           DC32     sudoku

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable46:
   \   00000000   ........           DC32     bgm_img

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable50:
   \   00000000   ........           DC32     sudoku_img

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable56:
   \   00000000   ........           DC32     errs

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable57:
   \   00000000   ........           DC32     bgm_canvas_mmenu

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable58:
   \   00000000   ........           DC32     bgm_canvas_mrsoft

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable59:
   \   00000000   ........           DC32     counter

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable63:
   \   00000000   ........           DC32     REDRAW_CONTROL

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable64:
   \   00000000   ........           DC32     GBSTIMER_KOEFFICENT

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable65:
   \   00000000   ........           DC32     timer

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable69:
   \   00000000   ........           DC32     RENDERWINDOW

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable70:
   \   00000000   ........           DC32     MESSAGEWINDOW

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable71:
   \   00000000   ........           DC32     pravda

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable72:
   \   00000000   ........           DC32     mmenu_cur

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable73:
   \   00000000   ........           DC32     cfgfile

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable74:
   \   00000000   ........           DC32     TYPEREDRAW

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for png_help_txt>`:
   \   00000000   706E675F6865       DC8 112, 110, 103, 95, 104, 101, 108, 112, 46, 116, 120, 116, 58, 13
   \              6C702E747874
   \              3A0D        
   \   0000000E   0A5C24454C46       DC8 10, 92, 36, 69, 76, 70, 70, 79, 76, 68, 69, 82, 36, 92, 36, 87, 120
   \              464F4C444552
   \              245C245778  
   \   0000001F   48245C202D20       DC8 72, 36, 92, 32, 45, 32, 207, 224, 239, 234, 224, 32, 228, 235, 255
   \              CFE0EFEAE020
   \              E4EBFF      
   \   0000002E   20706E67202D       DC8 32, 112, 110, 103, 32, 45, 32, 227, 240, 224, 244, 232, 234, 232
   \              20E3F0E0F4E8
   \              EAE8        
   \   0000003C   202857202D20       DC8 32, 40, 87, 32, 45, 32, 248, 232, 240, 232, 237, 224, 32, 226, 224
   \              F8E8F0E8EDE0
   \              20E2E0      
   \   0000004B   F8E5E3EE20FD       DC8 248, 229, 227, 238, 32, 253, 234, 240, 224, 237, 224, 44, 32, 72
   \              EAF0E0EDE02C
   \              2048        
   \   00000059   202D20E2FBF1       DC8 32, 45, 32, 226, 251, 241, 238, 242, 224, 32, 226, 224, 248, 229
   \              EEF2E020E2E0
   \              F8E5        
   \   00000067   E3EE20FDEAF0       DC8 227, 238, 32, 253, 234, 240, 224, 237, 224, 41, 13, 10, 13, 10, 48
   \              E0EDE0290D0A
   \              0D0A30      
   \   00000076   2E706E672020       DC8 46, 112, 110, 103, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32
   \              202020202020
   \              20202020    
   \   00000086   2020202D20CA       DC8 32, 32, 32, 45, 32, 202, 224, 240, 242, 232, 237, 234, 224, 32, 241
   \              E0F0F2E8EDEA
   \              E020F1      
   \   00000095   EAF0FBF2EEE9       DC8 234, 240, 251, 242, 238, 233, 32, 255, 247, 229, 233, 234, 232, 32
   \              20FFF7E5E9EA
   \              E820        
   \   000000A3   202020202020       DC8 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32
   \              202020202020
   \              2020202020  
   \   000000B4   202020202020       DC8 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32
   \              202020202020
   \              2020202020  
   \   000000C5   202020202020       DC8 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32
   \              202020202020
   \              2020202020  
   \   000000D6   202020202020       DC8 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 91, 49, 48, 120
   \              202020202020
   \              205B313078  
   \   000000E7   31305D28CFEE       DC8 49, 48, 93, 40, 207, 238, 32, 241, 242, 224, 237, 228, 224, 240
   \              20F1F2E0EDE4
   \              E0F0        
   \   000000F5   F2F3290D0A31       DC8 242, 243, 41, 13, 10, 49, 46, 112, 110, 103, 32, 32, 45, 32, 57, 46
   \              2E706E672020
   \              2D20392E    
   \   00000105   706E67202020       DC8 112, 110, 103, 32, 32, 32, 32, 32, 32, 45, 32, 202, 224, 240, 242
   \              2020202D20CA
   \              E0F0F2      
   \   00000114   E8EDEAE820EE       DC8 232, 237, 234, 232, 32, 238, 242, 234, 240, 251, 242, 251, 245, 32
   \              F2EAF0FBF2FB
   \              F520        
   \   00000122   E820E7E0E2E5       DC8 232, 32, 231, 224, 226, 229, 228, 238, 236, 238, 32, 226, 229, 240
   \              E4EEECEE20E2
   \              E5F0        
   \   00000130   EDFBF520FFF7       DC8 237, 251, 245, 32, 255, 247, 229, 229, 234, 44, 32, 241, 232, 237
   \              E5E5EA2C20F1
   \              E8ED        
   \   0000013E   E8E920F6E2E5       DC8 232, 233, 32, 246, 226, 229, 242, 46, 32, 32, 32, 32, 32, 32, 32
   \              F22E20202020
   \              202020      
   \   0000014D   202020202020       DC8 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32
   \              202020202020
   \              2020202020  
   \   0000015E   202020202020       DC8 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 91, 49, 48, 120, 49, 48, 93
   \              202020205B31
   \              307831305D  
   \   0000016F   28CFEE20F1F2       DC8 40, 207, 238, 32, 241, 242, 224, 237, 228, 224, 240, 242, 243, 41
   \              E0EDE4E0F0F2
   \              F329        
   \   0000017D   0D0A31732E70       DC8 13, 10, 49, 115, 46, 112, 110, 103, 32, 45, 32, 57, 115, 46, 112
   \              6E67202D2039
   \              732E70      
   \   0000018C   6E6720202020       DC8 110, 103, 32, 32, 32, 32, 32, 45, 32, 202, 224, 240, 242, 232, 237
   \              202D20CAE0F0
   \              F2E8ED      
   \   0000019B   EAE820EEF2EA       DC8 234, 232, 32, 238, 242, 234, 240, 251, 242, 251, 245, 32, 255, 247
   \              F0FBF2FBF520
   \              FFF7        
   \   000001A9   E5E5EA2C2020       DC8 229, 229, 234, 44, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32
   \              202020202020
   \              20202020    
   \   000001B9   2020202020EA       DC8 32, 32, 32, 32, 32, 234, 240, 224, 241, 237, 251, 233, 32, 246, 226
   \              F0E0F1EDFBE9
   \              20F6E2      
   \   000001C8   E5F22E202020       DC8 229, 242, 46, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32
   \              202020202020
   \              20202020    
   \   000001D8   202020202020       DC8 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32
   \              202020202020
   \              2020202020  
   \   000001E9   202020205B31       DC8 32, 32, 32, 32, 91, 49, 48, 120, 49, 48, 93, 40, 207, 238, 32, 241
   \              307831305D28
   \              CFEE20F1    
   \   000001F9   F2E0EDE4E0F0       DC8 242, 224, 237, 228, 224, 240, 242, 243, 41, 13, 10, 49, 97, 46, 112
   \              F2F3290D0A31
   \              612E70      
   \   00000208   6E67202D2039       DC8 110, 103, 32, 45, 32, 57, 97, 46, 112, 110, 103, 32, 32, 32, 32, 32
   \              612E706E6720
   \              20202020    
   \   00000218   2D20CAE0F0F2       DC8 45, 32, 202, 224, 240, 242, 232, 237, 234, 232, 32, 238, 242, 234
   \              E8EDEAE820EE
   \              F2EA        
   \   00000226   F0FBF2FBF520       DC8 240, 251, 242, 251, 245, 32, 232, 32, 239, 238, 236, 229, 247, 224
   \              E820EFEEECE5
   \              F7E0        
   \   00000234   EDEDFBF520EA       DC8 237, 237, 251, 245, 32, 234, 224, 234, 32, 239, 240, 224, 226, 232
   \              E0EA20EFF0E0
   \              E2E8        
   \   00000242   EBFCEDFBE520       DC8 235, 252, 237, 251, 229, 32, 40, 205, 243, 32, 239, 238, 32, 236
   \              28CDF320EFEE
   \              20EC        
   \   00000250   EDE5EDE8FE20       DC8 237, 229, 237, 232, 254, 32, 239, 238, 235, 252, 231, 238, 226, 224
   \              EFEEEBFCE7EE
   \              E2E0        
   \   0000025E   F2E5EBFF292C       DC8 242, 229, 235, 255, 41, 44, 32, 231, 229, 235, 184, 237, 251, 233
   \              20E7E5EBB8ED
   \              FBE9        
   \   0000026C   20F6E2E5F22E       DC8 32, 246, 226, 229, 242, 46, 91, 49, 48, 120, 49, 48, 93, 40, 207
   \              5B3130783130
   \              5D28CF      
   \   0000027B   EE20F1F2E0ED       DC8 238, 32, 241, 242, 224, 237, 228, 224, 240, 242, 243, 41, 13, 10
   \              E4E0F0F2F329
   \              0D0A        
   \   00000289   0D0A6267672E       DC8 13, 10, 98, 103, 103, 46, 112, 110, 103, 32, 32, 32, 32, 32, 32, 32
   \              706E67202020
   \              20202020    
   \   00000299   202020202020       DC8 32, 32, 32, 32, 32, 32, 45, 32, 202, 224, 240, 242, 232, 237, 234
   \              2D20CAE0F0F2
   \              E8EDEA      
   \   000002A8   E020F4EEEDE0       DC8 224, 32, 244, 238, 237, 224, 32, 232, 227, 240, 238, 226, 238, 227
   \              20E8E3F0EEE2
   \              EEE3        
   \   000002B6   EE20EEEAEDE0       DC8 238, 32, 238, 234, 237, 224, 46, 32, 32, 32, 32, 32, 32, 32, 32, 32
   \              2E2020202020
   \              20202020    
   \   000002C6   202020202020       DC8 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32
   \              202020202020
   \              2020202020  
   \   000002D7   202020202020       DC8 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32
   \              202020202020
   \              2020202020  
   \   000002E8   202020202020       DC8 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32
   \              202020202020
   \              2020202020  
   \   000002F9   5B5720782048       DC8 91, 87, 32, 120, 32, 72, 93, 13, 10, 98, 103, 109, 46, 112, 110
   \              5D0D0A62676D
   \              2E706E      
   \   00000308   672020202020       DC8 103, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 45, 32
   \              202020202020
   \              20202D20    
   \   00000318   CAE0F0F2E8ED       DC8 202, 224, 240, 242, 232, 237, 234, 224, 32, 244, 238, 237, 224, 32
   \              EAE020F4EEED
   \              E020        
   \   00000326   ECE5EDFE2E20       DC8 236, 229, 237, 254, 46, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32
   \              202020202020
   \              20202020    
   \   00000336   202020202020       DC8 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32
   \              202020202020
   \              2020202020  
   \   00000347   202020202020       DC8 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32
   \              202020202020
   \              2020202020  
   \   00000358   202020202020       DC8 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32
   \              202020202020
   \              2020202020  
   \   00000369   202020202020       DC8 32, 32, 32, 32, 32, 32, 32, 91, 87, 32, 120, 32, 72, 93, 13, 10, 13
   \              205B57207820
   \              485D0D0A0D  
   \   0000037A   0A7375646F6B       DC8 10, 115, 117, 100, 111, 107, 117, 46, 112, 110, 103, 32, 32, 32, 32
   \              752E706E6720
   \              202020      
   \   00000389   202020202020       DC8 32, 32, 32, 32, 32, 32, 45, 32, 202, 224, 240, 242, 232, 237, 234
   \              2D20CAE0F0F2
   \              E8EDEA      
   \   00000398   E020E7E0E3EE       DC8 224, 32, 231, 224, 227, 238, 235, 238, 226, 234, 224, 32, 236, 229
   \              EBEEE2EAE020
   \              ECE5        
   \   000003A6   EDFE2E2028C4       DC8 237, 254, 46, 32, 40, 196, 235, 255, 32, 72, 32, 62, 32, 49, 51, 48
   \              EBFF2048203E
   \              20313330    
   \   000003B6   292020202020       DC8 41, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32
   \              202020202020
   \              2020202020  
   \   000003C7   202020202020       DC8 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32
   \              202020202020
   \              2020202020  
   \   000003D8   202020202020       DC8 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 91
   \              202020202020
   \              202020205B  
   \   000003E9   313238783231       DC8 49, 50, 56, 120, 50, 49, 93, 40, 207, 238, 32, 241, 242, 224, 237
   \              5D28CFEE20F1
   \              F2E0ED      
   \   000003F8   E4E0F0F2F329       DC8 228, 224, 240, 242, 243, 41, 13, 10, 13, 10, 197, 241, 235, 232, 32
   \              0D0A0D0AC5F1
   \              EBE820      
   \   00000407   FDF2E8F520EA       DC8 253, 242, 232, 245, 32, 234, 224, 234, 232, 245, 45, 242, 238, 32
   \              E0EAE8F52DF2
   \              EE20        
   \   00000415   F4E0E8EBEEE2       DC8 244, 224, 232, 235, 238, 226, 32, 237, 229, 242, 32, 232, 235, 232
   \              20EDE5F220E8
   \              EBE8        
   \   00000423   20EDE520F1EE       DC8 32, 237, 229, 32, 241, 238, 225, 235, 254, 228, 224, 254, 242, 241
   \              E1EBFEE4E0FE
   \              F2F1        
   \   00000431   FF20EEEFF0E5       DC8 255, 32, 238, 239, 240, 229, 228, 229, 235, 184, 237, 237, 251, 229
   \              E4E5EBB8EDED
   \              FBE5        
   \   0000043F   20F2F0E5E1EE       DC8 32, 242, 240, 229, 225, 238, 226, 224, 237, 232, 255, 44, 32, 242
   \              E2E0EDE8FF2C
   \              20F2        
   \   0000044D   EE20E8E3F0F3       DC8 238, 32, 232, 227, 240, 243, 32, 226, 251, 32, 237, 229, 32, 231
   \              20E2FB20EDE5
   \              20E7        
   \   0000045B   E0EFF3F1F2E8       DC8 224, 239, 243, 241, 242, 232, 242, 229, 33, 13, 10, 13, 10, 40, 33
   \              F2E5210D0A0D
   \              0A2821      
   \   0000046A   2928CFEE20F1       DC8 41, 40, 207, 238, 32, 241, 242, 224, 237, 228, 224, 240, 242, 243
   \              F2E0EDE4E0F0
   \              F2F3        
   \   00000478   29202D20DDF2       DC8 41, 32, 45, 32, 221, 242, 238, 32, 238, 231, 237, 224, 247, 224
   \              EE20EEE7EDE0
   \              F7E0        
   \   00000486   E5F22C20F7F2       DC8 229, 242, 44, 32, 247, 242, 238, 32, 240, 224, 231, 240, 229, 248
   \              EE20F0E0E7F0
   \              E5F8        
   \   00000494   E5EDE8E520EC       DC8 229, 237, 232, 229, 32, 236, 238, 230, 229, 242, 32, 225, 251, 242
   \              EEE6E5F220E1
   \              FBF2        
   \   000004A2   FC20E4F0F3E3       DC8 252, 32, 228, 240, 243, 227, 232, 236, 32, 234, 224, 234, 32, 234
   \              E8EC20EAE0EA
   \              20EA        
   \   000004B0   E2E0E4F0E0F2       DC8 226, 224, 228, 240, 224, 242, 237, 251, 236, 44, 32, 242, 224, 234
   \              EDFBEC2C20F2
   \              E0EA        
   \   000004BE   20E820EFF0FF       DC8 32, 232, 32, 239, 240, 255, 236, 238, 243, 227, 238, 235, 252, 237
   \              ECEEF3E3EEEB
   \              FCED        
   \   000004CC   FBEC202E2E2E       DC8 251, 236, 32, 46, 46, 46, 13, 10, 40, 99, 41, 68, 105, 109, 97, 100
   \              0D0A28632944
   \              696D6164    
   \   000004DC   7A650000           DC8 122, 101, 0, 0

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for etc_help_txt>`:
   \   00000000   6574635F6865       DC8 101, 116, 99, 95, 104, 101, 108, 112, 46, 116, 120, 116, 58, 13, 10
   \              6C702E747874
   \              3A0D0A      
   \   0000000F   5C24454C4646       DC8 92, 36, 69, 76, 70, 70, 79, 76, 68, 69, 82, 36, 92, 99, 102, 103
   \              4F4C44455224
   \              5C636667    
   \   0000001F   5C7375646F6B       DC8 92, 115, 117, 100, 111, 107, 117, 46, 104, 108, 112, 32, 45, 32
   \              752E686C7020
   \              2D20        
   \   0000002D   CFEEECEEF9FC       DC8 207, 238, 236, 238, 249, 252, 44, 32, 238, 239, 232, 241, 224, 237
   \              2C20EEEFE8F1
   \              E0ED        
   \   0000003B   E8E520535544       DC8 232, 229, 32, 83, 85, 68, 79, 75, 85, 13, 10, 92, 36, 69, 76, 70
   \              4F4B550D0A5C
   \              24454C46    
   \   0000004B   464F4C444552       DC8 70, 79, 76, 68, 69, 82, 36, 92, 115, 109, 102, 101, 100, 105, 116
   \              245C736D6665
   \              646974      
   \   0000005A   6F722E656C66       DC8 111, 114, 46, 101, 108, 102, 32, 32, 45, 32, 221, 235, 252, 244, 32
   \              20202D20DDEB
   \              FCF420      
   \   00000069   2D20F0E5E4E0       DC8 45, 32, 240, 229, 228, 224, 234, 242, 238, 240, 32, 244, 224, 232
   \              EAF2EEF020F4
   \              E0E8        
   \   00000077   EBEEE220EAE0       DC8 235, 238, 226, 32, 234, 224, 240, 242, 32, 83, 117, 68, 111, 75
   \              F0F220537544
   \              6F4B        
   \   00000085   7520282A2E73       DC8 117, 32, 40, 42, 46, 115, 109, 102, 41, 13, 10, 13, 10, 197, 241
   \              6D66290D0A0D
   \              0AC5F1      
   \   00000094   EBE820FDF2E8       DC8 235, 232, 32, 253, 242, 232, 245, 32, 244, 224, 232, 235, 238, 226
   \              F520F4E0E8EB
   \              EEE2        
   \   000000A2   20EDE5F22C20       DC8 32, 237, 229, 242, 44, 32, 226, 32, 236, 229, 237, 254, 32, 241
   \              E220ECE5EDFE
   \              20F1        
   \   000000B0   EEEEF2E2E5F2       DC8 238, 238, 242, 226, 229, 242, 241, 242, 226, 243, 254, 249, 232
   \              F1F2E2F3FEF9
   \              E8          
   \   000000BD   E520EFF3EDEA       DC8 229, 32, 239, 243, 237, 234, 242, 251, 32, 225, 243, 228, 243, 242
   \              F2FB20E1F3E4
   \              F3F2        
   \   000000CB   20EDE5E4EEF1       DC8 32, 237, 229, 228, 238, 241, 242, 243, 239, 237, 251, 33, 13, 10
   \              F2F3EFEDFB21
   \              0D0A        
   \   000000D9   286329204469       DC8 40, 99, 41, 32, 68, 105, 109, 97, 100, 122, 101
   \              6D61647A65  

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for logo_bitmap>`:
   \   00000000   25DFFFF059FE       DC8 37, 223, 255, 240, 89, 254, 77, 251, 73, 250, 12, 251, 203, 250, 73
   \              4DFB49FA0CFB
   \              CBFA49      
   \   0000000F   FAC7F982F804       DC8 250, 199, 249, 130, 248, 4, 249, 73, 250, 203, 250, 12, 251, 142
   \              F949FACBFA0C
   \              FB8E        
   \   0000001D   FB86F951FC59       DC8 251, 134, 249, 81, 252, 89, 254, 70, 223, 255, 253, 142, 251, 207
   \              FE46DFFFFD8E
   \              FBCF        
   \   0000002B   FB49FA1200F8       DC8 251, 73, 250, 18, 0, 248, 253, 203, 250, 207, 251, 77, 251, 63, 223
   \              FDCBFACFFB4D
   \              FB3FDF      
   \   0000003A   FFFE59FECFFB       DC8 255, 254, 89, 254, 207, 251, 26, 0, 248, 254, 142, 251, 89, 254, 57
   \              1A00F8FE8EFB
   \              59FE39      
   \   00000049   DFFFFD9AFECF       DC8 223, 255, 253, 154, 254, 207, 251, 203, 250, 30, 0, 248, 253, 8
   \              FBCBFA1E00F8
   \              FD08        
   \   00000057   FA0CFB9AFE35       DC8 250, 12, 251, 154, 254, 53, 223, 255, 255, 211, 252, 10, 0, 248
   \              DFFFFFD3FC0A
   \              00F8        
   \   00000065   FA49FA8EFB10       DC8 250, 73, 250, 142, 251, 16, 252, 85, 253, 24, 254, 219, 254, 4, 223
   \              FC55FD18FEDB
   \              FE04DF      
   \   00000074   FFFA9AFE18FE       DC8 255, 250, 154, 254, 24, 254, 150, 253, 142, 251, 77, 251, 199, 249
   \              96FD8EFB4DFB
   \              C7F9        
   \   00000082   0A00F8FF92FC       DC8 10, 0, 248, 255, 146, 252, 50, 223, 255, 254, 20, 253, 8, 250, 7, 0
   \              32DFFFFE14FD
   \              08FA0700    
   \   00000092   F8FD04F9CBFA       DC8 248, 253, 4, 249, 203, 250, 215, 253, 18, 223, 255, 253, 215, 253
   \              D7FD12DFFFFD
   \              D7FD        
   \   000000A0   8AFA08FA0700       DC8 138, 250, 8, 250, 7, 0, 248, 254, 4, 249, 85, 253, 46, 223, 255
   \              F8FE04F955FD
   \              2EDFFF      
   \   000000AF   FE51FC08FA06       DC8 254, 81, 252, 8, 250, 6, 0, 248, 253, 199, 249, 77, 251, 24, 254
   \              00F8FDC7F94D
   \              FB18FE      
   \   000000BE   18DFFFFD18FE       DC8 24, 223, 255, 253, 24, 254, 77, 251, 69, 249, 6, 0, 248, 254, 4
   \              4DFB45F90600
   \              F8FE04      
   \   000000CD   F914FD2BDFFF       DC8 249, 20, 253, 43, 223, 255, 255, 211, 252, 6, 0, 248, 254, 69, 249
   \              FFD3FC0600F8
   \              FE45F9      
   \   000000DC   10FC1EDFFFFE       DC8 16, 252, 30, 223, 255, 254, 77, 251, 8, 250, 6, 0, 248, 255, 207
   \              4DFB08FA0600
   \              F8FFCF      
   \   000000EB   FB29DFFFFF0C       DC8 251, 41, 223, 255, 255, 12, 251, 5, 0, 248, 254, 73, 250, 146, 252
   \              FB0500F8FE49
   \              FA92FC      
   \   000000FA   22DFFFFE92FC       DC8 34, 223, 255, 254, 146, 252, 65, 248, 5, 0, 248, 255, 138, 250, 38
   \              41F80500F8FF
   \              8AFA26      
   \   00000109   DFFFFED7FD49       DC8 223, 255, 254, 215, 253, 73, 250, 5, 0, 248, 255, 12, 251, 38, 223
   \              FA0500F8FF0C
   \              FB26DF      
   \   00000118   FFFF8EFB0500       DC8 255, 255, 142, 251, 5, 0, 248, 254, 69, 249, 20, 253, 35, 223, 255
   \              F8FE45F914FD
   \              23DFFF      
   \   00000127   FF55FD0500F8       DC8 255, 85, 253, 5, 0, 248, 254, 138, 250, 24, 254, 40, 223, 255, 255
   \              FE8AFA18FE28
   \              DFFFFF      
   \   00000136   8EFB0600F8FF       DC8 142, 251, 6, 0, 248, 255, 150, 253, 33, 223, 255, 255, 85, 253, 5
   \              96FD21DFFFFF
   \              55FD05      
   \   00000145   00F8FF0CFB29       DC8 0, 248, 255, 12, 251, 41, 223, 255, 255, 150, 253, 8, 0, 248, 255
   \              DFFFFF96FD08
   \              00F8FF      
   \   00000154   96FD1FDFFFFF       DC8 150, 253, 31, 223, 255, 255, 150, 253, 5, 0, 248, 255, 81, 252, 41
   \              96FD0500F8FF
   \              51FC29      
   \   00000163   DFFFFFDBFE04       DC8 223, 255, 255, 219, 254, 4, 0, 248, 255, 130, 248, 5, 0, 248, 255
   \              00F8FF82F805
   \              00F8FF      
   \   00000172   55FD1DDFFFFF       DC8 85, 253, 29, 223, 255, 255, 150, 253, 5, 0, 248, 255, 150, 253, 42
   \              96FD0500F8FF
   \              96FD2A      
   \   00000181   DFFFFF8AFA04       DC8 223, 255, 255, 138, 250, 4, 0, 248, 254, 89, 254, 20, 253, 5, 0
   \              00F8FE59FE14
   \              FD0500      
   \   00000190   F8FF55FD1BDF       DC8 248, 255, 85, 253, 27, 223, 255, 255, 20, 253, 5, 0, 248, 255, 150
   \              FFFF14FD0500
   \              F8FF96      
   \   0000019F   FD2ADFFFFF0C       DC8 253, 42, 223, 255, 255, 12, 251, 4, 0, 248, 255, 85, 253, 2, 223
   \              FB0400F8FF55
   \              FD02DF      
   \   000001AE   FFFF96FD0500       DC8 255, 255, 150, 253, 5, 0, 248, 255, 215, 253, 26, 223, 255, 255
   \              F8FFD7FD1ADF
   \              FFFF        
   \   000001BC   8AFA0400F8FF       DC8 138, 250, 4, 0, 248, 255, 150, 253, 42, 223, 255, 255, 16, 252, 4
   \              96FD2ADFFFFF
   \              10FC04      
   \   000001CB   00F8FFCFFB04       DC8 0, 248, 255, 207, 251, 4, 223, 255, 255, 150, 253, 4, 0, 248, 255
   \              DFFFFF96FD04
   \              00F8FF      
   \   000001DA   49FA19DFFFFF       DC8 73, 250, 25, 223, 255, 255, 203, 250, 4, 0, 248, 255, 20, 253, 42
   \              CBFA0400F8FF
   \              14FD2A      
   \   000001E9   DFFFFFD7FD04       DC8 223, 255, 255, 215, 253, 4, 0, 248, 255, 138, 250, 6, 223, 255, 255
   \              00F8FF8AFA06
   \              DFFFFF      
   \   000001F8   96FD0400F8FF       DC8 150, 253, 4, 0, 248, 255, 12, 251, 23, 223, 255, 255, 81, 252, 4, 0
   \              0CFB17DFFFFF
   \              51FC0400    
   \   00000208   F8FFD3FC2ADF       DC8 248, 255, 211, 252, 42, 223, 255, 255, 219, 254, 4, 0, 248, 255
   \              FFFFDBFE0400
   \              F8FF        
   \   00000216   8AFA08DFFFFF       DC8 138, 250, 8, 223, 255, 255, 81, 252, 4, 0, 248, 255, 211, 252, 21
   \              51FC0400F8FF
   \              D3FC15      
   \   00000225   DFFFFF14FD04       DC8 223, 255, 255, 20, 253, 4, 0, 248, 255, 12, 251, 43, 223, 255, 255
   \              00F8FF0CFB2B
   \              DFFFFF      
   \   00000234   86F90400F8FF       DC8 134, 249, 4, 0, 248, 255, 89, 254, 9, 223, 255, 255, 12, 251, 4, 0
   \              59FE09DFFFFF
   \              0CFB0400    
   \   00000244   F8FF51FC14DF       DC8 248, 255, 81, 252, 20, 223, 255, 255, 4, 249, 3, 0, 248, 255, 73
   \              FFFF04F90300
   \              F8FF49      
   \   00000253   FA2BDFFFFF4D       DC8 250, 43, 223, 255, 255, 77, 251, 4, 0, 248, 255, 20, 253, 11, 223
   \              FB0400F8FF14
   \              FD0BDF      
   \   00000262   FFFF8AFA0300       DC8 255, 255, 138, 250, 3, 0, 248, 255, 8, 250, 19, 223, 255, 255, 85
   \              F8FF08FA13DF
   \              FFFF55      
   \   00000271   FD0400F8FF18       DC8 253, 4, 0, 248, 255, 24, 254, 42, 223, 255, 255, 81, 252, 4, 0, 248
   \              FE2ADFFFFF51
   \              FC0400F8    
   \   00000281   FF10FC0CDFFF       DC8 255, 16, 252, 12, 223, 255, 255, 24, 254, 4, 0, 248, 255, 20, 253
   \              FF18FE0400F8
   \              FF14FD      
   \   00000290   12DFFFFF04F9       DC8 18, 223, 255, 255, 4, 249, 3, 0, 248, 255, 207, 251, 42, 223, 255
   \              0300F8FFCFFB
   \              2ADFFF      
   \   0000029F   FF96FD0400F8       DC8 255, 150, 253, 4, 0, 248, 255, 12, 251, 14, 223, 255, 255, 12, 251
   \              FF0CFB0EDFFF
   \              FF0CFB      
   \   000002AE   0300F8FF49FA       DC8 3, 0, 248, 255, 73, 250, 17, 223, 255, 255, 146, 252, 3, 0, 248
   \              11DFFFFF92FC
   \              0300F8      
   \   000002BD   FF41F82BDFFF       DC8 255, 65, 248, 43, 223, 255, 4, 0, 248, 255, 8, 250, 16, 223, 255
   \              0400F8FF08FA
   \              10DFFF      
   \   000002CC   FF8AFA0300F8       DC8 255, 138, 250, 3, 0, 248, 255, 146, 252, 15, 223, 255, 254, 154
   \              FF92FC0FDFFF
   \              FE9A        
   \   000002DA   FE08FA0300F8       DC8 254, 8, 250, 3, 0, 248, 255, 146, 252, 42, 223, 255, 255, 203, 250
   \              FF92FC2ADFFF
   \              FFCBFA      
   \   000002E9   0400F8FF9AFE       DC8 4, 0, 248, 255, 154, 254, 16, 223, 255, 255, 81, 252, 3, 0, 248
   \              10DFFFFF51FC
   \              0300F8      
   \   000002F8   FE82F89AFE0E       DC8 254, 130, 248, 154, 254, 14, 223, 255, 255, 12, 251, 3, 0, 248, 255
   \              DFFFFF0CFB03
   \              00F8FF      
   \   00000307   C7F92ADFFFFF       DC8 199, 249, 42, 223, 255, 255, 12, 251, 4, 0, 248, 255, 150, 253, 18
   \              0CFB0400F8FF
   \              96FD12      
   \   00000316   DFFFFF45F903       DC8 223, 255, 255, 69, 249, 3, 0, 248, 255, 207, 251, 14, 223, 255, 255
   \              00F8FFCFFB0E
   \              DFFFFF      
   \   00000325   08FA0300F8FF       DC8 8, 250, 3, 0, 248, 255, 142, 251, 41, 223, 255, 255, 16, 252, 4, 0
   \              8EFB29DFFFFF
   \              10FC0400    
   \   00000335   F8FF10FC13DF       DC8 248, 255, 16, 252, 19, 223, 255, 255, 16, 252, 3, 0, 248, 255, 203
   \              FFFF10FC0300
   \              F8FFCB      
   \   00000344   FA0DDFFFFF59       DC8 250, 13, 223, 255, 255, 89, 254, 3, 0, 248, 255, 69, 249, 41, 223
   \              FE0300F8FF45
   \              F929DF      
   \   00000353   FFFF96FD0400       DC8 255, 255, 150, 253, 4, 0, 248, 255, 138, 250, 21, 223, 255, 255
   \              F8FF8AFA15DF
   \              FFFF        
   \   00000361   C7F90300F8FF       DC8 199, 249, 3, 0, 248, 255, 89, 254, 12, 223, 255, 255, 142, 251, 3
   \              59FE0CDFFFFF
   \              8EFB03      
   \   00000370   00F8FF8EFB0B       DC8 0, 248, 255, 142, 251, 11, 223, 255, 3, 0, 0, 26, 223, 255, 255, 89
   \              DFFF0300001A
   \              DFFFFF59    
   \   00000380   FE0400F8FF86       DC8 254, 4, 0, 248, 255, 134, 249, 22, 223, 255, 255, 77, 251, 3, 0
   \              F916DFFFFF4D
   \              FB0300      
   \   0000038F   F8FF10FC0CDF       DC8 248, 255, 16, 252, 12, 223, 255, 255, 195, 248, 3, 0, 248, 255, 24
   \              FFFFC3F80300
   \              F8FF18      
   \   0000039E   FE0BDFFF0300       DC8 254, 11, 223, 255, 3, 0, 0, 26, 223, 255, 255, 134, 249, 3, 0, 248
   \              001ADFFFFF86
   \              F90300F8    
   \   000003AE   FE8AFA59FE16       DC8 254, 138, 250, 89, 254, 22, 223, 255, 255, 24, 254, 3, 0, 248, 255
   \              DFFFFF18FE03
   \              00F8FF      
   \   000003BD   8AFA0BDFFFFF       DC8 138, 250, 11, 223, 255, 255, 77, 251, 3, 0, 248, 255, 8, 250, 12
   \              4DFB0300F8FF
   \              08FA0C      
   \   000003CC   DFFF03000019       DC8 223, 255, 3, 0, 0, 25, 223, 255, 255, 138, 250, 4, 0, 248, 255, 150
   \              DFFFFF8AFA04
   \              00F8FF96    
   \   000003DC   FD18DFFFFF04       DC8 253, 24, 223, 255, 255, 4, 249, 3, 0, 248, 255, 142, 251, 10, 223
   \              F90300F8FF8E
   \              FB0ADF      
   \   000003EB   FFFFCFFB0300       DC8 255, 255, 207, 251, 3, 0, 248, 255, 138, 250, 12, 223, 255, 3, 0, 0
   \              F8FF8AFA0CDF
   \              FF030000    
   \   000003FB   18DFFFFF10FC       DC8 24, 223, 255, 255, 16, 252, 4, 0, 248, 255, 16, 252, 25, 223, 255
   \              0400F8FF10FC
   \              19DFFF      
   \   0000040A   FF0CFB0300F8       DC8 255, 12, 251, 3, 0, 248, 255, 142, 251, 10, 223, 255, 255, 203, 250
   \              FF8EFB0ADFFF
   \              FFCBFA      
   \   00000419   0300F8FFD7FD       DC8 3, 0, 248, 255, 215, 253, 12, 223, 255, 3, 0, 0, 23, 223, 255, 255
   \              0CDFFF030000
   \              17DFFFFF    
   \   00000429   55FD0400F8FF       DC8 85, 253, 4, 0, 248, 255, 12, 251, 26, 223, 255, 255, 215, 253, 3, 0
   \              0CFB1ADFFFFF
   \              D7FD0300    
   \   00000439   F8FF49FA0ADF       DC8 248, 255, 73, 250, 10, 223, 255, 4, 0, 248, 13, 223, 255, 3, 0, 0
   \              FF0400F80DDF
   \              FF030000    
   \   00000449   16DFFFFF9AFE       DC8 22, 223, 255, 255, 154, 254, 4, 0, 248, 255, 203, 250, 28, 223, 255
   \              0400F8FFCBFA
   \              1CDFFF      
   \   00000458   0400F809DFFF       DC8 4, 0, 248, 9, 223, 255, 255, 154, 254, 3, 0, 248, 255, 199, 249, 13
   \              FF9AFE0300F8
   \              FFC7F90D    
   \   00000468   DFFF03000007       DC8 223, 255, 3, 0, 0, 7, 223, 255, 253, 154, 214, 52, 165, 239, 123, 3
   \              DFFFFD9AD634
   \              A5EF7B03    
   \   00000478   0000FE4D6B34       DC8 0, 0, 254, 77, 107, 52, 165, 5, 223, 255, 253, 239, 123, 0, 32, 0
   \              A505DFFFFDEF
   \              7B002000    
   \   00000488   B80300F8FE41       DC8 184, 3, 0, 248, 254, 65, 248, 219, 254, 4, 223, 255, 2, 0, 0, 255
   \              F8DBFE04DFFF
   \              020000FF    
   \   00000498   EF7B04DFFFFD       DC8 239, 123, 4, 223, 255, 253, 154, 214, 52, 165, 239, 123, 3, 0, 0
   \              9AD634A5EF7B
   \              030000      
   \   000004A7   FE4D6B34A509       DC8 254, 77, 107, 52, 165, 9, 223, 255, 255, 73, 250, 3, 0, 248, 255
   \              DFFFFF49FA03
   \              00F8FF      
   \   000004B6   9AFE08DFFFFF       DC8 154, 254, 8, 223, 255, 255, 146, 252, 3, 0, 248, 255, 77, 251, 13
   \              92FC0300F8FF
   \              4DFB0D      
   \   000004C5   DFFF03000006       DC8 223, 255, 3, 0, 0, 6, 223, 255, 255, 239, 123, 9, 0, 0, 255, 52
   \              DFFFFFEF7B09
   \              0000FF34    
   \   000004D5   A503DFFFFE9A       DC8 165, 3, 223, 255, 254, 154, 214, 0, 160, 4, 0, 248, 255, 215, 253
   \              D600A00400F8
   \              FFD7FD      
   \   000004E4   04DFFFFF96B5       DC8 4, 223, 255, 255, 150, 181, 2, 0, 0, 255, 154, 214, 3, 223, 255
   \              020000FF9AD6
   \              03DFFF      
   \   000004F3   FFEF7B090000       DC8 255, 239, 123, 9, 0, 0, 255, 52, 165, 7, 223, 255, 255, 142, 251, 3
   \              FF34A507DFFF
   \              FF8EFB03    
   \   00000503   00F8FF4DFB08       DC8 0, 248, 255, 77, 251, 8, 223, 255, 255, 199, 249, 3, 0, 248, 255
   \              DFFFFFC7F903
   \              00F8FF      
   \   00000512   8EFB0DDFFF03       DC8 142, 251, 13, 223, 255, 3, 0, 0, 5, 223, 255, 255, 105, 74, 11, 0
   \              000005DFFFFF
   \              694A0B00    
   \   00000522   00FF9AD602DF       DC8 0, 255, 154, 214, 2, 223, 255, 255, 207, 243, 4, 0, 248, 255, 81
   \              FFFFCFF30400
   \              F8FF51      
   \   00000531   FC05DFFFFF4D       DC8 252, 5, 223, 255, 255, 77, 107, 2, 0, 0, 3, 223, 255, 255, 105, 74
   \              6B02000003DF
   \              FFFF694A    
   \   00000541   0B0000FF9AD6       DC8 11, 0, 0, 255, 154, 214, 6, 223, 255, 255, 16, 252, 3, 0, 248, 255
   \              06DFFFFF10FC
   \              0300F8FF    
   \   00000551   49FA08DFFFFF       DC8 73, 250, 8, 223, 255, 255, 142, 251, 3, 0, 248, 255, 150, 253, 13
   \              8EFB0300F8FF
   \              96FD0D      
   \   00000560   DFFF03000004       DC8 223, 255, 3, 0, 0, 4, 223, 255, 255, 247, 189, 2, 0, 0, 254, 105
   \              DFFFFFF7BD02
   \              0000FE69    
   \   00000570   4A9AD604DFFF       DC8 74, 154, 214, 4, 223, 255, 254, 154, 214, 77, 107, 2, 0, 0, 253
   \              FE9AD64D6B02
   \              0000FD      
   \   0000057F   EF7BDFFF14FD       DC8 239, 123, 223, 255, 20, 253, 4, 0, 248, 255, 235, 242, 6, 223, 255
   \              0400F8FFEBF2
   \              06DFFF      
   \   0000058E   020000FFD39C       DC8 2, 0, 0, 255, 211, 156, 2, 223, 255, 255, 247, 189, 2, 0, 0, 254
   \              02DFFFFFF7BD
   \              020000FE    
   \   0000059E   694A9AD604DF       DC8 105, 74, 154, 214, 4, 223, 255, 254, 154, 214, 77, 107, 2, 0, 0
   \              FFFE9AD64D6B
   \              020000      
   \   000005AD   FFEF7B06DFFF       DC8 255, 239, 123, 6, 223, 255, 255, 150, 253, 3, 0, 248, 255, 77, 251
   \              FF96FD0300F8
   \              FF4DFB      
   \   000005BC   08DFFFFF0CFB       DC8 8, 223, 255, 255, 12, 251, 3, 0, 248, 255, 24, 254, 13, 223, 255, 3
   \              0300F8FF18FE
   \              0DDFFF03    
   \   000005CC   000004DFFFFF       DC8 0, 0, 4, 223, 255, 255, 77, 107, 2, 0, 0, 8, 223, 255, 3, 0, 0, 255
   \              4D6B02000008
   \              DFFF030000FF
   \   000005DE   59FE0400F8FE       DC8 89, 254, 4, 0, 248, 254, 0, 208, 85, 181, 5, 223, 255, 255, 150
   \              00D055B505DF
   \              FFFF96      
   \   000005ED   B5020000FFDB       DC8 181, 2, 0, 0, 255, 219, 222, 2, 223, 255, 255, 77, 107, 2, 0, 0, 8
   \              DE02DFFFFF4D
   \              6B02000008  
   \   000005FE   DFFF03000006       DC8 223, 255, 3, 0, 0, 6, 223, 255, 255, 24, 254, 3, 0, 248, 255, 12
   \              DFFFFF18FE03
   \              00F8FF0C    
   \   0000060E   FB08DFFFFFCB       DC8 251, 8, 223, 255, 255, 203, 250, 3, 0, 248, 255, 154, 254, 13, 223
   \              FA0300F8FF9A
   \              FE0DDF      
   \   0000061D   FF0300000FDF       DC8 255, 3, 0, 0, 15, 223, 255, 2, 0, 0, 254, 0, 16, 138, 250, 3, 0
   \              FF020000FE00
   \              108AFA0300  
   \   0000062E   F8FDC3C00028       DC8 248, 253, 195, 192, 0, 40, 77, 107, 5, 223, 255, 253, 77, 107, 0, 0
   \              4D6B05DFFFFD
   \              4D6B0000    
   \   0000063E   694A0EDFFF03       DC8 105, 74, 14, 223, 255, 3, 0, 0, 6, 223, 255, 255, 219, 254, 3, 0
   \              000006DFFFFF
   \              DBFE0300    
   \   0000064E   F8FF49FA08DF       DC8 248, 255, 73, 250, 8, 223, 255, 255, 138, 250, 3, 0, 248, 14, 223
   \              FFFF8AFA0300
   \              F80EDF      
   \   0000065D   FF0300000CDF       DC8 255, 3, 0, 0, 12, 223, 255, 250, 154, 214, 150, 181, 77, 107, 0, 0
   \              FFFA9AD696B5
   \              4D6B0000    
   \   0000066D   000800B00400       DC8 0, 8, 0, 176, 4, 0, 248, 255, 174, 195, 2, 0, 0, 5, 223, 255, 2, 0
   \              F8FFAEC30200
   \              0005DFFF0200
   \   0000067F   00FF34A50BDF       DC8 0, 255, 52, 165, 11, 223, 255, 253, 154, 214, 150, 181, 77, 107, 3
   \              FFFD9AD696B5
   \              4D6B03      
   \   0000068E   000007DFFF03       DC8 0, 0, 7, 223, 255, 3, 0, 248, 255, 8, 250, 8, 223, 255, 255, 69
   \              00F8FF08FA08
   \              DFFFFF45    
   \   0000069E   F90300F80EDF       DC8 249, 3, 0, 248, 14, 223, 255, 3, 0, 0, 7, 223, 255, 253, 154, 214
   \              FF03000007DF
   \              FFFD9AD6    
   \   000006AE   718C694A0600       DC8 113, 140, 105, 74, 6, 0, 0, 255, 0, 136, 4, 0, 248, 254, 16, 252
   \              00FF00880400
   \              F8FE10FC    
   \   000006BE   DFFF020000FF       DC8 223, 255, 2, 0, 0, 255, 150, 181, 3, 223, 255, 255, 150, 181, 2, 0
   \              96B503DFFFFF
   \              96B50200    
   \   000006CE   00FFDBDE06DF       DC8 0, 255, 219, 222, 6, 223, 255, 253, 154, 214, 113, 140, 105, 74, 8
   \              FFFD9AD6718C
   \              694A08      
   \   000006DD   000007DFFF03       DC8 0, 0, 7, 223, 255, 3, 0, 248, 255, 130, 248, 8, 223, 255, 255, 130
   \              00F8FF82F808
   \              DFFFFF82    
   \   000006ED   F80300F80EDF       DC8 248, 3, 0, 248, 14, 223, 255, 3, 0, 0, 5, 223, 255, 254, 219, 222
   \              FF03000005DF
   \              FFFEDBDE    
   \   000006FD   694A080000FF       DC8 105, 74, 8, 0, 0, 255, 0, 88, 4, 0, 248, 255, 77, 251, 2, 223, 255
   \              00580400F8FF
   \              4DFB02DFFF  
   \   0000070E   FD4D6B00004D       DC8 253, 77, 107, 0, 0, 77, 107, 3, 223, 255, 253, 77, 107, 0, 0, 77
   \              6B03DFFFFD4D
   \              6B00004D    
   \   0000071E   6B05DFFFFEDB       DC8 107, 5, 223, 255, 254, 219, 222, 105, 74, 11, 0, 0, 7, 223, 255, 3
   \              DE694A0B0000
   \              07DFFF03    
   \   0000072E   00F8FF45F908       DC8 0, 248, 255, 69, 249, 8, 223, 255, 255, 8, 250, 3, 0, 248, 14, 223
   \              DFFFFF08FA03
   \              00F80EDF    
   \   0000073E   FF03000005DF       DC8 255, 3, 0, 0, 5, 223, 255, 5, 0, 0, 251, 239, 123, 113, 140, 150
   \              FF050000FBEF
   \              7B718C96    
   \   0000074E   B5DBDE18F604       DC8 181, 219, 222, 24, 246, 4, 0, 248, 255, 138, 250, 3, 223, 255, 255
   \              00F8FF8AFA03
   \              DFFFFF      
   \   0000075D   F7BD02000003       DC8 247, 189, 2, 0, 0, 3, 223, 255, 2, 0, 0, 255, 150, 181, 5, 223, 255
   \              DFFF020000FF
   \              96B505DFFF  
   \   0000076E   050000FBEF7B       DC8 5, 0, 0, 251, 239, 123, 113, 140, 150, 181, 219, 222, 223, 255, 3
   \              718C96B5DBDE
   \              DFFF03      
   \   0000077D   000007DFFF03       DC8 0, 0, 7, 223, 255, 3, 0, 248, 255, 138, 250, 8, 223, 255, 255, 73
   \              00F8FF8AFA08
   \              DFFFFF49    
   \   0000078D   FA0300F8FFDB       DC8 250, 3, 0, 248, 255, 219, 254, 4, 223, 255, 2, 113, 140, 255, 0, 0
   \              FE04DFFF0271
   \              8CFF0000    
   \   0000079D   06DFFF030000       DC8 6, 223, 255, 3, 0, 0, 4, 223, 255, 255, 211, 156, 2, 0, 0, 255, 239
   \              04DFFFFFD39C
   \              020000FFEF  
   \   000007AE   7B06DFFFFFC3       DC8 123, 6, 223, 255, 255, 195, 248, 3, 0, 248, 254, 199, 249, 219, 254
   \              F80300F8FEC7
   \              F9DBFE      
   \   000007BD   04DFFF020000       DC8 4, 223, 255, 2, 0, 0, 253, 150, 181, 223, 255, 150, 181, 2, 0, 0, 5
   \              FD96B5DFFF96
   \              B502000005  
   \   000007CE   DFFFFFD39C02       DC8 223, 255, 255, 211, 156, 2, 0, 0, 255, 239, 123, 7, 223, 255, 3, 0
   \              0000FFEF7B07
   \              DFFF0300    
   \   000007DE   0006DFFFFF9A       DC8 0, 6, 223, 255, 255, 154, 254, 3, 0, 248, 255, 203, 250, 8, 223
   \              FE0300F8FFCB
   \              FA08DF      
   \   000007ED   FFFF0CFB0300       DC8 255, 255, 12, 251, 3, 0, 248, 255, 24, 254, 4, 223, 255, 3, 0, 0, 6
   \              F8FF18FE04DF
   \              FF03000006  
   \   000007FE   DFFF020000FF       DC8 223, 255, 2, 0, 0, 255, 105, 74, 4, 223, 255, 3, 0, 0, 6, 223, 255
   \              694A04DFFF03
   \              000006DFFF  
   \   0000080F   FF0CFB0400F8       DC8 255, 12, 251, 4, 0, 248, 255, 150, 253, 5, 223, 255, 249, 239, 123
   \              FF96FD05DFFF
   \              F9EF7B      
   \   0000081E   00004D6BDFFF       DC8 0, 0, 77, 107, 223, 255, 77, 107, 0, 0, 239, 123, 5, 223, 255, 3, 0
   \              4D6B0000EF7B
   \              05DFFF0300  
   \   0000082F   0008DFFF0300       DC8 0, 8, 223, 255, 3, 0, 0, 6, 223, 255, 255, 24, 254, 3, 0, 248, 255
   \              0006DFFFFF18
   \              FE0300F8FF  
   \   00000840   4DFB08DFFFFF       DC8 77, 251, 8, 223, 255, 255, 77, 251, 3, 0, 248, 255, 150, 253, 4
   \              4DFB0300F8FF
   \              96FD04      
   \   0000084F   DFFFFFEF7B02       DC8 223, 255, 255, 239, 123, 2, 0, 0, 255, 247, 189, 4, 223, 255, 255
   \              0000FFF7BD04
   \              DFFFFF      
   \   0000085E   9AD6020000FF       DC8 154, 214, 2, 0, 0, 255, 113, 140, 4, 223, 255, 3, 0, 0, 5, 223, 255
   \              718C04DFFF03
   \              000005DFFF  
   \   0000086F   FFCFFB0400F8       DC8 255, 207, 251, 4, 0, 248, 255, 0, 104, 6, 223, 255, 255, 154, 214
   \              FF006806DFFF
   \              FF9AD6      
   \   0000087E   020000FF9AD6       DC8 2, 0, 0, 255, 154, 214, 2, 0, 0, 255, 154, 214, 5, 223, 255, 3, 0
   \              020000FF9AD6
   \              05DFFF0300  
   \   0000088F   0007DFFFFF69       DC8 0, 7, 223, 255, 255, 105, 74, 3, 0, 0, 6, 223, 255, 255, 215, 253
   \              4A03000006DF
   \              FFFFD7FD    
   \   0000089F   0300F8FF8EFB       DC8 3, 0, 248, 255, 142, 251, 8, 223, 255, 255, 73, 250, 3, 0, 248, 255
   \              08DFFFFF49FA
   \              0300F8FF    
   \   000008AF   10FC04DFFFFF       DC8 16, 252, 4, 223, 255, 255, 52, 165, 2, 0, 0, 254, 105, 74, 219, 222
   \              34A5020000FE
   \              694ADBDE    
   \   000008BF   02DFFFFE9AD6       DC8 2, 223, 255, 254, 154, 214, 105, 74, 2, 0, 0, 255, 154, 214, 4, 223
   \              694A020000FF
   \              9AD604DF    
   \   000008CF   FFFF4D6B0200       DC8 255, 255, 77, 107, 2, 0, 0, 255, 239, 123, 3, 223, 255, 255, 211
   \              00FFEF7B03DF
   \              FFFFD3      
   \   000008DE   FC0400F8FE00       DC8 252, 4, 0, 248, 254, 0, 152, 0, 0, 7, 223, 255, 2, 0, 0, 255, 77
   \              98000007DFFF
   \              020000FF4D  
   \   000008EF   6B02000006DF       DC8 107, 2, 0, 0, 6, 223, 255, 255, 77, 107, 2, 0, 0, 255, 239, 123, 4
   \              FFFF4D6B0200
   \              00FFEF7B04  
   \   00000900   DFFFFEF7BD69       DC8 223, 255, 254, 247, 189, 105, 74, 4, 0, 0, 6, 223, 255, 255, 142
   \              4A04000006DF
   \              FFFF8E      
   \   0000090F   FB0300F8FFC7       DC8 251, 3, 0, 248, 255, 199, 249, 8, 223, 255, 255, 77, 251, 3, 0, 248
   \              F908DFFFFF4D
   \              FB0300F8    
   \   0000091F   FF8EFB05DFFF       DC8 255, 142, 251, 5, 223, 255, 9, 0, 0, 255, 105, 74, 5, 223, 255, 255
   \              090000FF694A
   \              05DFFFFF    
   \   0000092F   F7BD050000FF       DC8 247, 189, 5, 0, 0, 255, 0, 48, 4, 0, 248, 253, 0, 184, 0, 16, 0, 0
   \              00300400F8FD
   \              00B800100000
   \   00000941   07DFFFFF34A5       DC8 7, 223, 255, 255, 52, 165, 3, 0, 0, 255, 211, 156, 6, 223, 255, 255
   \              030000FFD39C
   \              06DFFFFF    
   \   00000951   F7BD0D000006       DC8 247, 189, 13, 0, 0, 6, 223, 255, 255, 77, 251, 3, 0, 248, 255, 146
   \              DFFFFF4DFB03
   \              00F8FF92    
   \   00000961   FC08DFFFFF9A       DC8 252, 8, 223, 255, 255, 154, 254, 3, 0, 248, 255, 73, 250, 5, 223
   \              FE0300F8FF49
   \              FA05DF      
   \   00000970   FFFF9AD60700       DC8 255, 255, 154, 214, 7, 0, 0, 255, 105, 74, 7, 223, 255, 255, 211
   \              00FF694A07DF
   \              FFFFD3      
   \   0000097F   9C030000FE00       DC8 156, 3, 0, 0, 254, 0, 32, 0, 160, 3, 0, 248, 254, 69, 241, 235, 114
   \              2000A00300F8
   \              FE45F1EB72  
   \   00000990   020000FF9AD6       DC8 2, 0, 0, 255, 154, 214, 7, 223, 255, 3, 0, 0, 255, 154, 214, 7, 223
   \              07DFFF030000
   \              FF9AD607DF  
   \   000009A1   FFFFD39C0700       DC8 255, 255, 211, 156, 7, 0, 0, 253, 105, 74, 154, 214, 77, 107, 2, 0
   \              00FD694A9AD6
   \              4D6B0200    
   \   000009B1   00FF9AD605DF       DC8 0, 255, 154, 214, 5, 223, 255, 255, 199, 249, 3, 0, 248, 255, 89
   \              FFFFC7F90300
   \              F8FF59      
   \   000009C0   FE09DFFF0400       DC8 254, 9, 223, 255, 4, 0, 248, 7, 223, 255, 254, 52, 165, 77, 107, 2
   \              F807DFFFFE34
   \              A54D6B02    
   \   000009D0   0000FEEF7BF7       DC8 0, 0, 254, 239, 123, 247, 189, 9, 223, 255, 252, 219, 222, 113, 140
   \              BD09DFFFFCDB
   \              DE718C      
   \   000009DF   000000B00400       DC8 0, 0, 0, 176, 4, 0, 248, 254, 215, 253, 219, 222, 2, 0, 0, 255, 239
   \              F8FED7FDDBDE
   \              020000FFEF  
   \   000009F0   7B07DFFFFD69       DC8 123, 7, 223, 255, 253, 105, 74, 0, 0, 105, 74, 9, 223, 255, 254
   \              4A0000694A09
   \              DFFFFE      
   \   000009FF   DBDE718C0300       DC8 219, 222, 113, 140, 3, 0, 0, 254, 113, 140, 154, 214, 2, 223, 255
   \              00FE718C9AD6
   \              02DFFF      
   \   00000A0E   FFDBDE020000       DC8 255, 219, 222, 2, 0, 0, 255, 239, 123, 5, 223, 255, 3, 0, 248, 255
   \              FFEF7B05DFFF
   \              0300F8FF    
   \   00000A1E   08FA0ADFFFFF       DC8 8, 250, 10, 223, 255, 255, 73, 250, 3, 0, 248, 255, 215, 253, 23
   \              49FA0300F8FF
   \              D7FD17      
   \   00000A2D   DFFFFF4DFB04       DC8 223, 255, 255, 77, 251, 4, 0, 248, 255, 146, 252, 41, 223, 255, 255
   \              00F8FF92FC29
   \              DFFFFF      
   \   00000A3C   D7FD0300F8FF       DC8 215, 253, 3, 0, 248, 255, 203, 250, 10, 223, 255, 255, 207, 251, 3
   \              CBFA0ADFFFFF
   \              CFFB03      
   \   00000A4B   00F8FF0CFB16       DC8 0, 248, 255, 12, 251, 22, 223, 255, 255, 211, 252, 4, 0, 248, 255
   \              DFFFFFD3FC04
   \              00F8FF      
   \   00000A5A   0CFB2ADFFFFF       DC8 12, 251, 42, 223, 255, 255, 138, 250, 3, 0, 248, 255, 207, 251, 10
   \              8AFA0300F8FF
   \              CFFB0A      
   \   00000A69   DFFFFF8EFB03       DC8 223, 255, 255, 142, 251, 3, 0, 248, 255, 4, 249, 21, 223, 255, 255
   \              00F8FF04F915
   \              DFFFFF      
   \   00000A78   18FE0400F8FF       DC8 24, 254, 4, 0, 248, 255, 8, 250, 43, 223, 255, 255, 8, 250, 3, 0
   \              08FA2BDFFFFF
   \              08FA0300    
   \   00000A88   F8FF4DFB0BDF       DC8 248, 255, 77, 251, 11, 223, 255, 255, 138, 250, 3, 0, 248, 255, 24
   \              FFFF8AFA0300
   \              F8FF18      
   \   00000A97   FE14DFFFFF45       DC8 254, 20, 223, 255, 255, 69, 249, 3, 0, 248, 254, 138, 250, 219, 254
   \              F90300F8FE8A
   \              FADBFE      
   \   00000AA6   2ADFFFFF18FE       DC8 42, 223, 255, 255, 24, 254, 3, 0, 248, 255, 195, 248, 12, 223, 255
   \              0300F8FFC3F8
   \              0CDFFF      
   \   00000AB5   FFCFFB0300F8       DC8 255, 207, 251, 3, 0, 248, 255, 77, 251, 19, 223, 255, 255, 138, 250
   \              FF4DFB13DFFF
   \              FF8AFA      
   \   00000AC4   0400F8FF18FE       DC8 4, 0, 248, 255, 24, 254, 43, 223, 255, 255, 142, 251, 3, 0, 248
   \              2BDFFFFF8EFB
   \              0300F8      
   \   00000AD3   FF8EFB0CDFFF       DC8 255, 142, 251, 12, 223, 255, 255, 89, 254, 4, 0, 248, 18, 223, 255
   \              FF59FE0400F8
   \              12DFFF      
   \   00000AE2   FF8EFB0400F8       DC8 255, 142, 251, 4, 0, 248, 255, 211, 252, 44, 223, 255, 4, 0, 248
   \              FFD3FC2CDFFF
   \              0400F8      
   \   00000AF1   FF59FE0DDFFF       DC8 255, 89, 254, 13, 223, 255, 255, 203, 250, 3, 0, 248, 255, 16, 252
   \              FFCBFA0300F8
   \              FF10FC      
   \   00000B00   10DFFFFF14FD       DC8 16, 223, 255, 255, 20, 253, 4, 0, 248, 255, 142, 251, 44, 223, 255
   \              0400F8FF8EFB
   \              2CDFFF      
   \   00000B0F   FF8EFB0300F8       DC8 255, 142, 251, 3, 0, 248, 255, 8, 250, 14, 223, 255, 255, 207, 251
   \              FF08FA0EDFFF
   \              FFCFFB      
   \   00000B1E   0300F8FF45F9       DC8 3, 0, 248, 255, 69, 249, 15, 223, 255, 255, 215, 253, 4, 0, 248
   \              0FDFFFFFD7FD
   \              0400F8      
   \   00000B2D   FFCBFA2DDFFF       DC8 255, 203, 250, 45, 223, 255, 255, 199, 249, 3, 0, 248, 255, 12, 251
   \              FFC7F90300F8
   \              FF0CFB      
   \   00000B3C   0EDFFFFE9AFE       DC8 14, 223, 255, 254, 154, 254, 65, 248, 3, 0, 248, 255, 146, 252, 13
   \              41F80300F8FF
   \              92FC0D      
   \   00000B4B   DFFFFEDBFE49       DC8 223, 255, 254, 219, 254, 73, 250, 3, 0, 248, 255, 130, 248, 45, 223
   \              FA0300F8FF82
   \              F82DDF      
   \   00000B5A   FFFF92FC0300       DC8 255, 255, 146, 252, 3, 0, 248, 254, 8, 250, 154, 254, 15, 223, 255
   \              F8FE08FA9AFE
   \              0FDFFF      
   \   00000B69   FF92FC0400F8       DC8 255, 146, 252, 4, 0, 248, 13, 223, 255, 255, 138, 250, 4, 0, 248
   \              0DDFFFFF8AFA
   \              0400F8      
   \   00000B78   FF18FE2DDFFF       DC8 255, 24, 254, 45, 223, 255, 4, 0, 248, 255, 146, 252, 17, 223, 255
   \              0400F8FF92FC
   \              11DFFF      
   \   00000B87   FF08FA0300F8       DC8 255, 8, 250, 3, 0, 248, 255, 12, 251, 11, 223, 255, 255, 142, 251
   \              FF0CFB0BDFFF
   \              FF8EFB      
   \   00000B96   0400F8FFD3FC       DC8 4, 0, 248, 255, 211, 252, 45, 223, 255, 255, 207, 251, 3, 0, 248
   \              2DDFFFFFCFFB
   \              0300F8      
   \   00000BA5   FF04F912DFFF       DC8 255, 4, 249, 18, 223, 255, 255, 85, 253, 4, 0, 248, 255, 89, 254, 9
   \              FF55FD0400F8
   \              FF59FE09    
   \   00000BB5   DFFFFF51FC04       DC8 223, 255, 255, 81, 252, 4, 0, 248, 255, 142, 251, 45, 223, 255, 255
   \              00F8FF8EFB2D
   \              DFFFFF      
   \   00000BC4   18FE0400F8FF       DC8 24, 254, 4, 0, 248, 255, 85, 253, 19, 223, 255, 255, 8, 250, 3, 0
   \              55FD13DFFFFF
   \              08FA0300    
   \   00000BD4   F8FF8AFA08DF       DC8 248, 255, 138, 250, 8, 223, 255, 255, 24, 254, 4, 0, 248, 255, 8
   \              FFFF18FE0400
   \              F8FF08      
   \   00000BE3   FA2EDFFFFF49       DC8 250, 46, 223, 255, 255, 73, 250, 3, 0, 248, 255, 4, 249, 20, 223
   \              FA0300F8FF04
   \              F914DF      
   \   00000BF2   FFFF51FC0400       DC8 255, 255, 81, 252, 4, 0, 248, 255, 12, 251, 7, 223, 255, 255, 138
   \              F8FF0CFB07DF
   \              FFFF8A      
   \   00000C01   FA0300F8FFCB       DC8 250, 3, 0, 248, 255, 203, 250, 46, 223, 255, 255, 203, 250, 4, 0
   \              FA2EDFFFFFCB
   \              FA0400      
   \   00000C10   F8FF14FD15DF       DC8 248, 255, 20, 253, 21, 223, 255, 255, 211, 252, 4, 0, 248, 255, 16
   \              FFFFD3FC0400
   \              F8FF10      
   \   00000C1F   FC05DFFFFF08       DC8 252, 5, 223, 255, 255, 8, 250, 4, 0, 248, 255, 24, 254, 45, 223
   \              FA0400F8FF18
   \              FE2DDF      
   \   00000C2E   FFFFD3FC0400       DC8 255, 255, 211, 252, 4, 0, 248, 255, 81, 252, 23, 223, 255, 255, 12
   \              F8FF51FC17DF
   \              FFFF0C      
   \   00000C3D   FB0400F8FF96       DC8 251, 4, 0, 248, 255, 150, 253, 3, 223, 255, 255, 77, 251, 4, 0, 248
   \              FD03DFFFFF4D
   \              FB0400F8    
   \   00000C4D   FF92FC2DDFFF       DC8 255, 146, 252, 45, 223, 255, 255, 211, 252, 4, 0, 248, 255, 203
   \              FFD3FC0400F8
   \              FFCB        
   \   00000C5B   FA19DFFFFF49       DC8 250, 25, 223, 255, 255, 73, 250, 4, 0, 248, 253, 150, 253, 223, 255
   \              FA0400F8FD96
   \              FDDFFF      
   \   00000C6A   D3FC0400F8FF       DC8 211, 252, 4, 0, 248, 255, 207, 251, 45, 223, 255, 255, 150, 253, 4
   \              CFFB2DDFFFFF
   \              96FD04      
   \   00000C79   00F8FF8AFA1A       DC8 0, 248, 255, 138, 250, 26, 223, 255, 255, 215, 253, 5, 0, 248, 255
   \              DFFFFFD7FD05
   \              00F8FF      
   \   00000C88   10FC0400F8FF       DC8 16, 252, 4, 0, 248, 255, 12, 251, 45, 223, 255, 255, 150, 253, 5, 0
   \              0CFB2DDFFFFF
   \              96FD0500    
   \   00000C98   F8FF14FD1BDF       DC8 248, 255, 20, 253, 27, 223, 255, 255, 20, 253, 8, 0, 248, 255, 199
   \              FFFF14FD0800
   \              F8FFC7      
   \   00000CA7   F92DDFFFFF96       DC8 249, 45, 223, 255, 255, 150, 253, 5, 0, 248, 255, 150, 253, 29, 223
   \              FD0500F8FF96
   \              FD1DDF      
   \   00000CB6   FFFF55FD0700       DC8 255, 255, 85, 253, 7, 0, 248, 255, 89, 254, 44, 223, 255, 255, 81
   \              F8FF59FE2CDF
   \              FFFF51      
   \   00000CC5   FC0500F8FF96       DC8 252, 5, 0, 248, 255, 150, 253, 31, 223, 255, 255, 150, 253, 5, 0
   \              FD1FDFFFFF96
   \              FD0500      
   \   00000CD4   F8FFC7F92CDF       DC8 248, 255, 199, 249, 44, 223, 255, 255, 12, 251, 5, 0, 248, 255, 85
   \              FFFF0CFB0500
   \              F8FF55      
   \   00000CE3   FD21DFFFFF96       DC8 253, 33, 223, 255, 255, 150, 253, 5, 0, 248, 254, 73, 250, 24, 254
   \              FD0500F8FE49
   \              FA18FE      
   \   00000CF2   28DFFFFE18FE       DC8 40, 223, 255, 254, 24, 254, 138, 250, 5, 0, 248, 255, 20, 253, 35
   \              8AFA0500F8FF
   \              14FD23      
   \   00000D01   DFFFFE14FD8A       DC8 223, 255, 254, 20, 253, 138, 250, 5, 0, 248, 255, 142, 251, 38, 223
   \              FA0500F8FF8E
   \              FB26DF      
   \   00000D10   FFFF0CFB0500       DC8 255, 255, 12, 251, 5, 0, 248, 254, 73, 250, 215, 253, 38, 223, 255
   \              F8FE49FAD7FD
   \              26DFFF      
   \   00000D1F   FFCBFA0600F8       DC8 255, 203, 250, 6, 0, 248, 255, 146, 252, 34, 223, 255, 255, 146
   \              FF92FC22DFFF
   \              FF92        
   \   00000D2D   FC0600F8FFCB       DC8 252, 6, 0, 248, 255, 203, 250, 41, 223, 255, 255, 81, 252, 6, 0
   \              FA29DFFFFF51
   \              FC0600      
   \   00000D3C   F8FEC7F94DFB       DC8 248, 254, 199, 249, 77, 251, 30, 223, 255, 254, 16, 252, 69, 249, 6
   \              1EDFFFFE10FC
   \              45F906      
   \   00000D4B   00F8FFD3FC2B       DC8 0, 248, 255, 211, 252, 43, 223, 255, 254, 20, 253, 4, 249, 7, 0
   \              DFFFFE14FD04
   \              F90700      
   \   00000D5A   F8FE8EFB18FE       DC8 248, 254, 142, 251, 24, 254, 24, 223, 255, 254, 215, 253, 142, 251
   \              18DFFFFED7FD
   \              8EFB        
   \   00000D68   0700F8FE08FA       DC8 7, 0, 248, 254, 8, 250, 81, 252, 46, 223, 255, 254, 20, 253, 4, 249
   \              51FC2EDFFFFE
   \              14FD04F9    
   \   00000D78   0700F8FD08FA       DC8 7, 0, 248, 253, 8, 250, 138, 250, 215, 253, 18, 223, 255, 253, 215
   \              8AFAD7FD12DF
   \              FFFDD7      
   \   00000D87   FDCBFA04F907       DC8 253, 203, 250, 4, 249, 7, 0, 248, 254, 8, 250, 85, 253, 50, 223
   \              00F8FE08FA55
   \              FD32DF      
   \   00000D96   FFFE92FC08FA       DC8 255, 254, 146, 252, 8, 250, 9, 0, 248, 250, 199, 249, 77, 251, 142
   \              0900F8FAC7F9
   \              4DFB8E      
   \   00000DA5   FBD7FD18FE9A       DC8 251, 215, 253, 24, 254, 154, 254, 4, 223, 255, 250, 154, 254, 89
   \              FE04DFFFFA9A
   \              FE59        
   \   00000DB3   FE55FD10FC8E       DC8 254, 85, 253, 16, 252, 142, 251, 73, 250, 9, 0, 248, 254, 130, 248
   \              FB49FA0900F8
   \              FE82F8      
   \   00000DC2   92FC35DFFFFD       DC8 146, 252, 53, 223, 255, 253, 154, 254, 203, 250, 8, 250, 30, 0, 248
   \              9AFECBFA08FA
   \              1E00F8      
   \   00000DD1   FD8AFACFFB59       DC8 253, 138, 250, 207, 251, 89, 254, 57, 223, 255, 253, 24, 254, 142
   \              FE39DFFFFD18
   \              FE8E        
   \   00000DDF   FBC3F81800F8       DC8 251, 195, 248, 24, 0, 248, 253, 138, 250, 207, 251, 89, 254, 63
   \              FD8AFACFFB59
   \              FE3F        
   \   00000DED   DFFFFC4DFBCF       DC8 223, 255, 252, 77, 251, 207, 251, 203, 250, 199, 249, 16, 0, 248
   \              FBCBFAC7F910
   \              00F8        
   \   00000DFB   FCC3F849FACF       DC8 252, 195, 248, 73, 250, 207, 251, 142, 251, 47, 223, 255, 5, 0, 0
   \              FB8EFB2FDFFF
   \              050000      
   \   00000E0A   FEDFFF000005       DC8 254, 223, 255, 0, 0, 5, 223, 255, 5, 0, 0, 254, 223, 255, 0, 0, 4
   \              DFFF050000FE
   \              DFFF000004  
   \   00000E1B   DFFFFA59FE51       DC8 223, 255, 250, 89, 254, 81, 252, 199, 249, 142, 251, 12, 251, 203
   \              FCC7F98EFB0C
   \              FBCB        
   \   00000E29   FA050000FBCB       DC8 250, 5, 0, 0, 251, 203, 250, 77, 251, 0, 0, 77, 251, 89, 254, 2
   \              FA4DFB00004D
   \              FB59FE02    
   \   00000E39   DFFFFD0000DF       DC8 223, 255, 253, 0, 0, 223, 255, 0, 0, 5, 223, 255, 5, 0, 0, 2, 223
   \              FF000005DFFF
   \              05000002DF  
   \   00000E4A   FF04000002DF       DC8 255, 4, 0, 0, 2, 223, 255, 255, 0, 0, 27, 223, 255, 255, 0, 0, 5
   \              FFFF00001BDF
   \              FFFF000005  
   \   00000E5B   DFFFFF000005       DC8 223, 255, 255, 0, 0, 5, 223, 255, 255, 0, 0, 5, 223, 255, 255, 0, 0
   \              DFFFFF000005
   \              DFFFFF0000  
   \   00000E6C   0ADFFFFF0000       DC8 10, 223, 255, 255, 0, 0, 4, 223, 255, 253, 0, 0, 223, 255, 0, 0, 4
   \              04DFFFFD0000
   \              DFFF000004  
   \   00000E7D   DFFFFD0000DF       DC8 223, 255, 253, 0, 0, 223, 255, 0, 0, 5, 223, 255, 255, 0, 0, 5, 223
   \              FF000005DFFF
   \              FF000005DF  
   \   00000E8E   FFFF000004DF       DC8 255, 255, 0, 0, 4, 223, 255, 253, 0, 0, 223, 255, 0, 0, 27, 223
   \              FFFD0000DFFF
   \              00001BDF    
   \   00000E9E   FFFF000005DF       DC8 255, 255, 0, 0, 5, 223, 255, 255, 0, 0, 5, 223, 255, 255, 0, 0, 5
   \              FFFF000005DF
   \              FFFF000005  
   \   00000EAF   DFFFFF000002       DC8 223, 255, 255, 0, 0, 2, 223, 255, 3, 0, 0, 5, 223, 255, 255, 0, 0
   \              DFFF03000005
   \              DFFFFF0000  
   \   00000EC0   04DFFFFD0000       DC8 4, 223, 255, 253, 0, 0, 223, 255, 0, 0, 4, 223, 255, 253, 0, 0, 223
   \              DFFF000004DF
   \              FFFD0000DF  
   \   00000ED1   FF000005DFFF       DC8 255, 0, 0, 5, 223, 255, 255, 0, 0, 5, 223, 255, 255, 0, 0, 6, 223
   \              FF000005DFFF
   \              FF000006DF  
   \   00000EE2   FFFF00001BDF       DC8 255, 255, 0, 0, 27, 223, 255, 5, 0, 0, 254, 223, 255, 0, 0, 5, 223
   \              FF050000FEDF
   \              FF000005DF  
   \   00000EF3   FF04000004DF       DC8 255, 4, 0, 0, 4, 223, 255, 255, 0, 0, 3, 223, 255, 255, 0, 0, 4
   \              FFFF000003DF
   \              FFFF000004  
   \   00000F04   DFFF05000002       DC8 223, 255, 5, 0, 0, 2, 223, 255, 255, 0, 0, 4, 223, 255, 253, 0, 0
   \              DFFFFF000004
   \              DFFFFD0000  
   \   00000F15   DFFF000005DF       DC8 223, 255, 0, 0, 5, 223, 255, 5, 0, 0, 2, 223, 255, 2, 0, 0, 4, 223
   \              FF05000002DF
   \              FF02000004DF
   \   00000F27   FFFF00001BDF       DC8 255, 255, 0, 0, 27, 223, 255, 255, 0, 0, 5, 223, 255, 255, 0, 0, 5
   \              FFFF000005DF
   \              FFFF000005  
   \   00000F38   DFFFFF000008       DC8 223, 255, 255, 0, 0, 8, 223, 255, 2, 0, 0, 6, 223, 255, 255, 0, 0
   \              DFFF02000006
   \              DFFFFF0000  
   \   00000F49   02DFFFFF0000       DC8 2, 223, 255, 255, 0, 0, 3, 223, 255, 255, 0, 0, 4, 223, 255, 253, 0
   \              03DFFFFF0000
   \              04DFFFFD00  
   \   00000F5A   00DFFF000005       DC8 0, 223, 255, 0, 0, 5, 223, 255, 255, 0, 0, 8, 223, 255, 2, 0, 0, 2
   \              DFFFFF000008
   \              DFFF02000002
   \   00000F6C   DFFFFF00001B       DC8 223, 255, 255, 0, 0, 27, 223, 255, 255, 0, 0, 5, 223, 255, 255, 0
   \              DFFFFF000005
   \              DFFFFF00    
   \   00000F7C   0005DFFFFF00       DC8 0, 5, 223, 255, 255, 0, 0, 10, 223, 255, 255, 0, 0, 5, 223, 255
   \              000ADFFFFF00
   \              0005DFFF    
   \   00000F8C   FF000003DFFF       DC8 255, 0, 0, 3, 223, 255, 255, 0, 0, 2, 223, 255, 255, 0, 0, 4, 223
   \              FF000002DFFF
   \              FF000004DF  
   \   00000F9D   FFFD0000DFFF       DC8 255, 253, 0, 0, 223, 255, 0, 0, 5, 223, 255, 255, 0, 0, 10, 223
   \              000005DFFFFF
   \              00000ADF    
   \   00000FAD   FFFD0000DFFF       DC8 255, 253, 0, 0, 223, 255, 0, 0, 27, 223, 255, 255, 0, 0, 5, 223
   \              00001BDFFFFF
   \              000005DF    
   \   00000FBD   FFFF000005DF       DC8 255, 255, 0, 0, 5, 223, 255, 255, 0, 0, 7, 223, 255, 255, 0, 0, 3
   \              FFFF000007DF
   \              FFFF000003  
   \   00000FCE   DFFFFF000004       DC8 223, 255, 255, 0, 0, 4, 223, 255, 255, 0, 0, 3, 223, 255, 255, 0, 0
   \              DFFFFF000003
   \              DFFFFF0000  
   \   00000FDF   02DFFFFF0000       DC8 2, 223, 255, 255, 0, 0, 4, 223, 255, 253, 0, 0, 223, 255, 0, 0, 5
   \              04DFFFFD0000
   \              DFFF000005  
   \   00000FF0   DFFFFF000005       DC8 223, 255, 255, 0, 0, 5, 223, 255, 255, 0, 0, 4, 223, 255, 255, 0, 0
   \              DFFFFF000004
   \              DFFFFF0000  
   \   00001001   1DDFFF050000       DC8 29, 223, 255, 5, 0, 0, 255, 223, 255, 5, 0, 0, 254, 223, 255, 0, 0
   \              FFDFFF050000
   \              FEDFFF0000  
   \   00001012   08DFFF030000       DC8 8, 223, 255, 3, 0, 0, 5, 223, 255, 255, 0, 0, 4, 223, 255, 255, 0
   \              05DFFFFF0000
   \              04DFFFFF00  
   \   00001023   0002DFFF0400       DC8 0, 2, 223, 255, 4, 0, 0, 2, 223, 255, 5, 0, 0, 255, 223, 255, 5, 0
   \              0002DFFF0500
   \              00FFDFFF0500
   \   00001035   0002DFFF0400       DC8 0, 2, 223, 255, 4, 0, 0, 2, 223, 255, 255, 0, 0, 103, 223, 255
   \              0002DFFFFF00
   \              0067DFFF    
   \   00001045   000000             DC8 0, 0, 0

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for GBSTIMER_KOEFFICENT>`:
   \   00000000   01000000           DC32 1

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for logo_img>`:
   \   00000000   5A005A00           DC16 90, 90
   \   00000004   88000000....       DC32 136, logo_bitmap
   \              ....        

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for bcfg_mmenu_font>`:
   \   00000000   07000000           DC32 7

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for bcfg_mmenu_col>`:
   \   00000000   0000FF64           DC8 0, 0, 255, 100

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for bcfg_mmenu_bgcol_u>`:
   \   00000000   00000064           DC8 0, 0, 0, 100

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for bcfg_mmenu_bgcol_m>`:
   \   00000000   FF000064           DC8 255, 0, 0, 100

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for bcfg_sh_headfont>`:
   \   00000000   07000000           DC32 7

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for bcfg_sh_headcolt>`:
   \   00000000   00000064           DC8 0, 0, 0, 100

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for bcfg_sh_headcolg>`:
   \   00000000   00000064           DC8 0, 0, 0, 100

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for bcfg_sh_softfont>`:
   \   00000000   07000000           DC32 7

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for bcfg_sh_softcolt>`:
   \   00000000   FF000064           DC8 255, 0, 0, 100

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for bcfg_sh_softcolg>`:
   \   00000000   00000064           DC8 0, 0, 0, 100

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for white>`:
   \   00000000   FFFFFF64           DC8 255, 255, 255, 100

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for red>`:
   \   00000000   FF000064           DC8 255, 0, 0, 100

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for green>`:
   \   00000000   00FF0064           DC8 0, 255, 0, 100

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for blue>`:
   \   00000000   0000FF64           DC8 0, 0, 255, 100

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for yellow>`:
   \   00000000   FFFF0064           DC8 255, 255, 0, 100

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for black>`:
   \   00000000   00000064           DC8 0, 0, 0, 100

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for logo_color>`:
   \   00000000   FFFBFF64           DC8 255, 251, 255, 100

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for logo_loadbar>`:
   \   00000000   FCCA0364           DC8 252, 202, 3, 100

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for white_85>`:
   \   00000000   FFFFFF55           DC8 255, 255, 255, 85

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for msg_error>`:
   \   00000000   FA000046           DC8 250, 0, 0, 70

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for msg_info>`:
   \   00000000   00FA0046           DC8 0, 250, 0, 70

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for counter>`:
   \   00000000   FFFFFFFF           DC32 -1

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for mmenu_str>`:
   \   00000000   CDEEE2E0FF20       DC8 "\315\356\342\340\377 \350\343\360\340"
   \              E8E3F0E000  
   \   0000000B   0000000000         DC8 0, 0, 0, 0, 0
   \   00000010   C7E0E3F0F3E7       DC8 "\307\340\343\360\363\347\350\362\374"
   \              E8F2FC00    
   \   0000001A   000000000000       DC8 0, 0, 0, 0, 0, 0
   \   00000020   CDE0F1F2F0EE       DC8 "\315\340\361\362\360\356\351\352\350"
   \              E9EAE800    
   \   0000002A   000000000000       DC8 0, 0, 0, 0, 0, 0
   \   00000030   D0E5E4E0EAF2       DC8 "\320\345\344\340\352\362\356\360"
   \              EEF000      
   \   00000039   000000000000       DC8 0, 0, 0, 0, 0, 0, 0
   \              00          
   \   00000040   CFEEECEEF9FC       DC8 "\317\356\354\356\371\374"
   \              00          
   \   00000047   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000      
   \   00000050   CE20E8E3F0E5       DC8 "\316 \350\343\360\345"
   \              00          
   \   00000057   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000      
   \   00000060   C2FBF5EEE400       DC8 "\302\373\365\356\344"
   \   00000066   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              00000000    

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\317\\360\\356\\344\\356\\353\\346\\350\\3`:
   \   00000000   CFF0EEE4EEEB       DC8 "\317\360\356\344\356\353\346\350\362\374"
   \              E6E8F2FC00  
   \   0000000B   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "%08d">`:
   \   00000000   2530386400         DC8 "%08d"
   \   00000005   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "%04d">`:
   \   00000000   2530346400         DC8 "%04d"
   \   00000005   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "This may be your market!">`:
   \   00000000   54686973206D       DC8 "This may be your market!"
   \              617920626520
   \              796F7572206D
   \              61726B657421
   \              00          
   \   00000019   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 1, align-sorted
   \                     `?<Constant "%t">`:
   \   00000000   257400             DC8 "%t"

   \                                 In segment DATA_C, align 1, align-sorted
   \                     `?<Constant "%t">_1`:
   \   00000000   257400             DC8 "%t"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\316\\370\\350\\341\\352\\340 (x)">`:
   \   00000000   CEF8E8E1EAE0       DC8 "\316\370\350\341\352\340 (x)"
   \              2028782900  
   \   0000000B   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "%ssudoku.hlp">`:
   \   00000000   25737375646F       DC8 "%ssudoku.hlp"
   \              6B752E686C70
   \              00          
   \   0000000D   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "%s\\n%s">`:
   \   00000000   25730A257300       DC8 "%s\012%s"
   \   00000006   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\316\\370\\350\\341\\352\\340!\\n\\324\\36`:
   \   00000000   CEF8E8E1EAE0       DC8 "\316\370\350\341\352\340!\012\324\360\340\343\354\345\355\362 \341\356\353\374\370\345 \347\340\344\340\355\355\356\343\356!"
   \              210AD4F0E0E3
   \              ECE5EDF220E1
   \              EEEBFCF8E520
   \              E7E0E4E0EDED
   \              EEE3EE2100  
   \   00000023   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\304\\340\\355\\355\\373\\351 \\375\\353\\`:
   \   00000000   C4E0EDEDFBE9       DC8 "\304\340\355\355\373\351 \375\353\374\364\012\344\353\377 E/EL71!"
   \              20FDEBFCF40A
   \              E4EBFF20452F
   \              454C37312100

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "SuDoKu">`:
   \   00000000   5375446F4B75       DC8 "SuDoKu"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\316\\341\\347\\356\\360">`:
   \   00000000   CEE1E7EEF000       DC8 "\316\341\347\356\360"
   \   00000006   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "%setc_help.txt">`:
   \   00000000   25736574635F       DC8 "%setc_help.txt"
   \              68656C702E74
   \              787400      
   \   0000000F   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\310\\347\\342\\350\\355\\350\\362\\345, `:
   \   00000000   C8E7E2E8EDE8       DC8 0C8H, 0E7H, 0E2H, 0E8H, 0EDH, 0E8H, 0F2H, 0E5H
   \              F2E5        
   \   00000008   2C20FDF2EEF2       DC8 2CH, 20H, 0FDH, 0F2H, 0EEH, 0F2H, 20H, 0EFH
   \              20EF        
   \   00000010   F3EDEAF220ED       DC8 0F3H, 0EDH, 0EAH, 0F2H, 20H, 0EDH, 0E5H, 20H
   \              E520        
   \   00000018   E4EEF1F2F3EF       DC8 0E4H, 0EEH, 0F1H, 0F2H, 0F3H, 0EFH, 0E5H, 0EDH
   \              E5ED        
   \   00000020   2C20E2F1FF20       DC8 2CH, 20H, 0E2H, 0F1H, 0FFH, 20H, 0E8H, 0EDH
   \              E8ED        
   \   00000028   F4E020E22065       DC8 0F4H, 0E0H, 20H, 0E2H, 20H, 65H, 74H, 63H
   \              7463        
   \   00000030   5F68656C702E       DC8 5FH, 68H, 65H, 6CH, 70H, 2EH, 74H, 78H
   \              7478        
   \   00000038   742C20F0FFE4       DC8 74H, 2CH, 20H, 0F0H, 0FFH, 0E4H, 0EEH, 0ECH
   \              EEEC        
   \   00000040   20F120FDEBFC       DC8 20H, 0F1H, 20H, 0FDH, 0EBH, 0FCH, 0F4H, 0EEH
   \              F4EE        
   \   00000048   EC2E00             DC8 0ECH, 2EH, 0
   \   0000004B   00                 DC8 0

   \                                 In segment DATA_C, align 1, align-sorted
   \                     `?<Constant "%t">_2`:
   \   00000000   257400             DC8 "%t"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "PNG \\324\\340\\350\\353\\373:\\n\\320\\34`:
   \   00000000   504E4720D4E0       DC8 50H, 4EH, 47H, 20H, 0D4H, 0E0H, 0E8H, 0EBH
   \              E8EB        
   \   00000008   FB3A0AD0E0E7       DC8 0FBH, 3AH, 0AH, 0D0H, 0E0H, 0E7H, 0F0H, 0E5H
   \              F0E5        
   \   00000010   F8E5EDE8E520       DC8 0F8H, 0E5H, 0EDH, 0E8H, 0E5H, 20H, 0E2H, 0F1H
   \              E2F1        
   \   00000018   E5F520EAE0F0       DC8 0E5H, 0F5H, 20H, 0EAH, 0E0H, 0F0H, 0F2H, 0E8H
   \              F2E8        
   \   00000020   EDEEEA20FFF7       DC8 0EDH, 0EEH, 0EAH, 20H, 0FFH, 0F7H, 0E5H, 0E5H
   \              E5E5        
   \   00000028   EA20E4EEEBE6       DC8 0EAH, 20H, 0E4H, 0EEH, 0EBH, 0E6H, 0EDH, 0EEH
   \              EDEE        
   \   00000030   20E1FBF2FC20       DC8 20H, 0E1H, 0FBH, 0F2H, 0FCH, 20H, 0EEH, 0E4H
   \              EEE4        
   \   00000038   E8EDE0EAEEE2       DC8 0E8H, 0EDH, 0E0H, 0EAH, 0EEH, 0E2H, 0FBH, 0ECH
   \              FBEC        
   \   00000040   20E820EDE520       DC8 20H, 0E8H, 20H, 0EDH, 0E5H, 20H, 0ECH, 0E5H
   \              ECE5        
   \   00000048   EDE5E5203378       DC8 0EDH, 0E5H, 0E5H, 20H, 33H, 78H, 33H, 2EH
   \              332E        
   \   00000050   00                 DC8 0
   \   00000051   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "PNG \\324\\340\\350\\353\\373:\\n\\320\\34_1`:
   \   00000000   504E4720D4E0       DC8 50H, 4EH, 47H, 20H, 0D4H, 0E0H, 0E8H, 0EBH
   \              E8EB        
   \   00000008   FB3A0AD0E0E7       DC8 0FBH, 3AH, 0AH, 0D0H, 0E0H, 0E7H, 0F0H, 0E5H
   \              F0E5        
   \   00000010   F8E5EDE8E520       DC8 0F8H, 0E5H, 0EDH, 0E8H, 0E5H, 20H, 62H, 67H
   \              6267        
   \   00000018   672E706E6720       DC8 67H, 2EH, 70H, 6EH, 67H, 20H, 0E8H, 20H
   \              E820        
   \   00000020   62676D2E706E       DC8 62H, 67H, 6DH, 2EH, 70H, 6EH, 67H, 20H
   \              6720        
   \   00000028   E4EEEBE6EDEE       DC8 0E4H, 0EEH, 0EBH, 0E6H, 0EDH, 0EEH, 20H, 0E1H
   \              20E1        
   \   00000030   FBF2FC202564       DC8 0FBH, 0F2H, 0FCH, 20H, 25H, 64H, 78H, 25H
   \              7825        
   \   00000038   642E00             DC8 64H, 2EH, 0
   \   0000003B   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\315\\345\\362 %d png - \\364\\340\\350`:
   \   00000000   CDE5F2202564       DC8 0CDH, 0E5H, 0F2H, 20H, 25H, 64H, 20H, 70H
   \              2070        
   \   00000008   6E67202D20F4       DC8 6EH, 67H, 20H, 2DH, 20H, 0F4H, 0E0H, 0E8H
   \              E0E8        
   \   00000010   EBE028EEE229       DC8 0EBH, 0E0H, 28H, 0EEH, 0E2H, 29H, 2CH, 20H
   \              2C20        
   \   00000018   E2F1FF20E8ED       DC8 0E2H, 0F1H, 0FFH, 20H, 0E8H, 0EDH, 0F4H, 0E0H
   \              F4E0        
   \   00000020   20E220F4E0E8       DC8 20H, 0E2H, 20H, 0F4H, 0E0H, 0E8H, 0EBH, 0E5H
   \              EBE5        
   \   00000028   20706E675F68       DC8 20H, 70H, 6EH, 67H, 5FH, 68H, 65H, 6CH
   \              656C        
   \   00000030   702E7478742C       DC8 70H, 2EH, 74H, 78H, 74H, 2CH, 20H, 0F0H
   \              20F0        
   \   00000038   FFE4EEEC20F1       DC8 0FFH, 0E4H, 0EEH, 0ECH, 20H, 0F1H, 20H, 0FDH
   \              20FD        
   \   00000040   EBFCF4EEEC2E       DC8 0EBH, 0FCH, 0F4H, 0EEH, 0ECH, 2EH, 0
   \              00          
   \   00000047   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\316\\370\\350\\341\\352\\340 \\361\\362\\`:
   \   00000000   CEF8E8E1EAE0       DC8 "\316\370\350\341\352\340 \361\362\360\363\352\362\363\360\373"
   \              20F1F2F0F3EA
   \              F2F3F0FB00  
   \   00000011   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\315\\345\\350\\347\\342. \\342\\345\\360`:
   \   00000000   CDE5E8E7E22E       DC8 "\315\345\350\347\342. \342\345\360\361\350\377 \364\340\350\353\340"
   \              20E2E5F0F1E8
   \              FF20F4E0E8EB
   \              E000        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\316\\370\\350\\341\\352\\340 ID \\364\\3`:
   \   00000000   CEF8E8E1EAE0       DC8 "\316\370\350\341\352\340 ID \364\340\350\353\340"
   \              20494420F4E0
   \              E8EBE000    

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\316\\370\\350\\341\\352\\340 \\356\\362\\`:
   \   00000000   CEF8E8E1EAE0       DC8 "\316\370\350\341\352\340 \356\362\352\360\373\362\350\377"
   \              20EEF2EAF0FB
   \              F2E8FF00    

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\324\\340\\350\\353 \\352\\340\\360\\362 `:
   \   00000000   D4E0E8EB20EA       DC8 "\324\340\350\353 \352\340\360\362 \347\340\343\360\363\346\345\355"
   \              E0F0F220E7E0
   \              E3F0F3E6E5ED
   \              00          
   \   00000013   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\307\\340\\343\\360\\363\\347\\352\\340 .`:
   \   00000000   C7E0E3F0F3E7       DC8 "\307\340\343\360\363\347\352\340 ..."
   \              EAE0202E2E2E
   \              00          
   \   0000000D   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "%spng_help.txt">`:
   \   00000000   2573706E675F       DC8 "%spng_help.txt"
   \              68656C702E74
   \              787400      
   \   0000000F   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "%ssudoku.bcfg">`:
   \   00000000   25737375646F       DC8 "%ssudoku.bcfg"
   \              6B752E626366
   \              6700        
   \   0000000E   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "%ssmfeditor.elf">`:
   \   00000000   2573736D6665       DC8 "%ssmfeditor.elf"
   \              6469746F722E
   \              656C6600    

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\310\\355\\364\\356 (!)">`:
   \   00000000   C8EDF4EE2028       DC8 "\310\355\364\356 (!)"
   \              212900      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "%ssudoku_%02d.ssf">`:
   \   00000000   25737375646F       DC8 "%ssudoku_%02d.ssf"
   \              6B755F253032
   \              642E73736600
   \   00000012   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "%sbgg.png">`:
   \   00000000   25736267672E       DC8 "%sbgg.png"
   \              706E6700    
   \   0000000A   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "%sbgm.png">`:
   \   00000000   257362676D2E       DC8 "%sbgm.png"
   \              706E6700    
   \   0000000A   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "%ssudoku.png">`:
   \   00000000   25737375646F       DC8 "%ssudoku.png"
   \              6B752E706E67
   \              00          
   \   0000000D   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "%s%da.png">`:
   \   00000000   25732564612E       DC8 "%s%da.png"
   \              706E6700    
   \   0000000A   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "%s%ds.png">`:
   \   00000000   25732564732E       DC8 "%s%ds.png"
   \              706E6700    
   \   0000000A   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "%s%d.png">`:
   \   00000000   257325642E70       DC8 "%s%d.png"
   \              6E6700      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "smf\\\\">`:
   \   00000000   736D665C00         DC8 "smf\\"
   \   00000005   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "cfg\\\\">`:
   \   00000000   6366675C00         DC8 "cfg\\"
   \   00000005   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "%s%s">`:
   \   00000000   2573257300         DC8 "%s%s"
   \   00000005   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "%s%dx%d\\\\">`:
   \   00000000   257325647825       DC8 "%s%dx%d\\"
   \              645C00      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \   00000000   58455000           DC8 "XEP"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "%s %s">`:
   \   00000000   257320257300       DC8 "%s %s"
   \   00000006   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\316\\370\\350\\341\\352\\340!\\n\\324\\36_1`:
   \   00000000   CEF8E8E1EAE0       DC8 "\316\370\350\341\352\340!\012\324\360\340\343\354\345\355\362 \341\356\353\374\370\345 \375\352\360\340\355\340!"
   \              210AD4F0E0E3
   \              ECE5EDF220E1
   \              EEEBFCF8E520
   \              FDEAF0E0EDE0
   \              2100        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "%02d:%02d %02d.%02d.%04d">`:
   \   00000000   253032643A25       DC8 "%02d:%02d %02d.%02d.%04d"
   \              303264202530
   \              32642E253032
   \              642E25303464
   \              00          
   \   00000019   000000             DC8 0, 0, 0

   Maximum stack usage in bytes:

     Function                     CSTACK
     --------                     ------
     CREATE_CONTROL                   4
     CheckSUDOKUMAP                  12
     ClearSUDOKUMAP                   0
     Create                          24
     CreateEXTFILEV20bySUDOKUMAP    208
     CreateIMGHDRbyLastScreen        40
     CreateIMGHDRbyfragmentIMGHDR    40
     CreateSSFFILEbySUDOKUMAP       264
     CreateSUDOKUMAPbyEXTFILE        80
     CreateSUDOKUMAPbySSFFILE        80
     DrawRightSoft                   64
     DrawSoftHeader                  96
     DrawStringV2                    64
     DrwImg                          64
     END_CONTROL                      4
     ElfFolderCheckFiles            324
     ElfFolderOperations             28
     ElfKiller                        4
     FULLREDRAW                       4
     GetNAMETIMEbySSFFILE            88
     KEY_CONTROL                     24
     LOGOW_RENDER                   328
     MAXIMIZE_CONTROL                 4
     MEMORYFREE                      12
     MESSAGES_CONTROL                 0
     MINIMIZE_CONTROL                 4
     MMENU_RENDER                    72
     MemFreeOfERRORSTRUCT             4
     MemFreeOfIMGHDR                  8
     MemFreeOfSSF_NT                  4
     MemFreeOfSUDOKUMAP               4
     OnKey                            4
     OnRedraw                         4
     OpenFile                        16
     REDRAW_CONTROL                   8
     SECRETFUNCTION                 140
     SMARTREDRAW                      4
     START_CONTROL                   16
     ShowMessage                    192
     UpdateCSMname                    4
     ascii2ws                        12
     char8to16                        0
     debuglog                         0
     extmapv10_2_cell                 0
     fileext                         16
     gcell_2_rcell                    4
     int_2_fourchar                  24
     int_2_twochar                   16
     main                            56
     maincsm_onclose                  4
     maincsm_oncreate                16
     maincsm_onmessage                4
     make_dirs                      276
     method8                          0
     method9                          0
     onClose                          8
     onCreate                         8
     onFocus                          8
     onUnfocus                        8
     strcmp_nocase                    0


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     png_help_txt                   1248
     etc_help_txt                    228
     logo_bitmap                    4168
     timer                            16
     GBSTIMER_KOEFFICENT               4
     RENDERWINDOW                      4
     MESSAGEWINDOW                     4
     TYPEREDRAW                        1
     TEMPREDRAW                        1
     pravda                            4
     sudoku                          256
     bgg                             256
     bgm                             256
     dig                            7168
     ssffile                        1280
     hlpfile                         256
     seditor                         256
     cfgfile                         256
     elffolder                       256
     imgfolder                       256
     cfgfolder                       256
     smffolder                       256
     logo_img                         12
     sudoku_img                        4
     bgg_img                           4
     bgm_img                           4
     dig_img                         112
     bcfg_mmenu_font                   4
     bcfg_mmenu_col                    4
     bcfg_mmenu_bgcol_u                4
     bcfg_mmenu_bgcol_m                4
     bcfg_sh_headfont                  4
     bcfg_sh_headcolt                  4
     bcfg_sh_headcolg                  4
     bcfg_sh_softfont                  4
     bcfg_sh_softcolt                  4
     bcfg_sh_softcolg                  4
     minus11                           4
     maincsm_name_body               280
     MAINCSM_ID                        4
     MAINGUI_ID                        4
     OnRedraw                          4
     onCreate                         32
     onClose                          24
     onFocus                          48
     onUnfocus                        36
     OnKey                             8
     method8                           8
     method9                           8
     gui_methods                      44
     maincsm_oncreate                136
     Canvas                            8
     ElfKiller                        28
     maincsm_onclose                  20
     ??strcmp_nocase_0                76
     maincsm_onmessage               108
     MAINCSM                          60
     UpdateCSMname                    28
     main                            112
     white                             4
     red                               4
     green                             4
     blue                              4
     yellow                            4
     black                             4
     alpha                             4
     logo_color                        4
     logo_loadbar                      4
     white_85                          4
     msg_error                         4
     msg_info                          4
     debuglog                          4
     FULLREDRAW                       24
     SMARTREDRAW                      24
     fileext                          80
     make_dirs                        96
     char8to16                       128
     ascii2ws                         56
     DrwImg                           92
     CreateIMGHDRbyLastScreen        208
     CreateIMGHDRbyfragmentIMGHDR    252
     MemFreeOfIMGHDR                  24
     DrawStringV2                    112
     ShowMessage                     376
     MEMORYFREE                      132
     OpenFile                         60
     DrawSoftHeader                  924
     DrawRightSoft                   308
     SECRETFUNCTION                  520
     CheckSUDOKUMAP                  996
     ClearSUDOKUMAP                  144
     MemFreeOfSUDOKUMAP               12
     MemFreeOfERRORSTRUCT             12
     extmapv10_2_cell                108
     gcell_2_rcell                   204
     CreateSUDOKUMAPbyEXTFILE        976
     CreateEXTFILEV20bySUDOKUMAP     424
     int_2_twochar                    80
     int_2_fourchar                  132
     CreateSUDOKUMAPbySSFFILE       1032
     CreateSSFFILEbySUDOKUMAP        576
     GetNAMETIMEbySSFFILE            420
     Create                          168
     MemFreeOfSSF_NT                  12
     ElfFolderOperations             596
     ElfFolderCheckFiles             472
     sdm                               4
     errs                              4
     counter                           4
     loadbar_x                         4
     error_logo                        4
     LOGOW_RENDER                   1452
     load_canvas1                      1
     mmenu_cur                         1
     mmenu_str                       112
     bgm_canvas_mmenu                  4
     bgm_canvas_mrsoft                 4
     MMENU_RENDER                    876
     START_CONTROL                    68
     END_CONTROL                      52
     MINIMIZE_CONTROL                 16
     MAXIMIZE_CONTROL                 24
     CREATE_CONTROL                   56
     MESSAGES_CONTROL                  4
     REDRAW_CONTROL                   60
     KEY_CONTROL                     444
     ??DataTable1                      4
     ??DataTable4                      4
     ??DataTable5                      4
     ??DataTable6                      4
     ??DataTable7                      4
     ??DataTable8                      4
     ??DataTable9                      4
     ??DataTable10                     4
     ??DataTable11                     4
     ??DataTable24                     4
     ??DataTable25                     4
     ??DataTable26                     4
     ??DataTable30                     4
     ??DataTable31                     4
     ??DataTable32                     4
     ??DataTable33                     4
     ??DataTable35                     4
     ??DataTable36                     4
     ??DataTable37                     4
     ??DataTable38                     4
     ??DataTable46                     4
     ??DataTable50                     4
     ??DataTable56                     4
     ??DataTable57                     4
     ??DataTable58                     4
     ??DataTable59                     4
     ??DataTable63                     4
     ??DataTable64                     4
     ??DataTable65                     4
     ??DataTable69                     4
     ??DataTable70                     4
     ??DataTable71                     4
     ??DataTable72                     4
     ??DataTable73                     4
     ??DataTable74                     4
     ?<Initializer for png_help_txt>
                                    1248
     ?<Initializer for etc_help_txt>
                                     228
     ?<Initializer for logo_bitmap> 4168
     ?<Initializer for GBSTIMER_KOEFFICENT>
                                       4
     ?<Initializer for logo_img>      12
     ?<Initializer for bcfg_mmenu_font>
                                       4
     ?<Initializer for bcfg_mmenu_col>
                                       4
     ?<Initializer for bcfg_mmenu_bgcol_u>
                                       4
     ?<Initializer for bcfg_mmenu_bgcol_m>
                                       4
     ?<Initializer for bcfg_sh_headfont>
                                       4
     ?<Initializer for bcfg_sh_headcolt>
                                       4
     ?<Initializer for bcfg_sh_headcolg>
                                       4
     ?<Initializer for bcfg_sh_softfont>
                                       4
     ?<Initializer for bcfg_sh_softcolt>
                                       4
     ?<Initializer for bcfg_sh_softcolg>
                                       4
     ?<Initializer for white>          4
     ?<Initializer for red>            4
     ?<Initializer for green>          4
     ?<Initializer for blue>           4
     ?<Initializer for yellow>         4
     ?<Initializer for black>          4
     ?<Initializer for logo_color>     4
     ?<Initializer for logo_loadbar>
                                       4
     ?<Initializer for white_85>       4
     ?<Initializer for msg_error>      4
     ?<Initializer for msg_info>       4
     ?<Initializer for counter>        4
     ?<Initializer for mmenu_str>    112
     ?<Constant "\317\360\356\344\356\353\346\350\3
                                      12
     ?<Constant "%08d">                8
     ?<Constant "%04d">                8
     ?<Constant "This may be your market!">
                                      28
     ?<Constant "%t">                  3
     ?<Constant "%t">_1                3
     ?<Constant "\316\370\350\341\352\340 (x)">
                                      12
     ?<Constant "%ssudoku.hlp">       16
     ?<Constant "%s\n%s">              8
     ?<Constant "\316\370\350\341\352\340!\n\324\36
                                      36
     ?<Constant "\304\340\355\355\373\351 \375\353\
                                      24
     ?<Constant "SuDoKu">              8
     ?<Constant "\316\341\347\356\360">
                                       8
     ?<Constant "%setc_help.txt">     16
     ?<Constant "\310\347\342\350\355\350\362\345,
                                      76
     ?<Constant "%t">_2                3
     ?<Constant "PNG \324\340\350\353\373:\n\320\34
                                      84
     ?<Constant "PNG \324\340\350\353\373:\n\320\34_1
                                      60
     ?<Constant "\315\345\362 %d png - \364\340\350
                                      72
     ?<Constant "\316\370\350\341\352\340 \361\362\
                                      20
     ?<Constant "\315\345\350\347\342. \342\345\360
                                      20
     ?<Constant "\316\370\350\341\352\340 ID \364\3
                                      16
     ?<Constant "\316\370\350\341\352\340 \356\362\
                                      16
     ?<Constant "\324\340\350\353 \352\340\360\362
                                      20
     ?<Constant "\307\340\343\360\363\347\352\340 .
                                      16
     ?<Constant "%spng_help.txt">     16
     ?<Constant "%ssudoku.bcfg">      16
     ?<Constant "%ssmfeditor.elf">    16
     ?<Constant "\310\355\364\356 (!)">
                                      12
     ?<Constant "%ssudoku_%02d.ssf">
                                      20
     ?<Constant "%sbgg.png">          12
     ?<Constant "%sbgm.png">          12
     ?<Constant "%ssudoku.png">       16
     ?<Constant "%s%da.png">          12
     ?<Constant "%s%ds.png">          12
     ?<Constant "%s%d.png">           12
     ?<Constant "smf\\">               8
     ?<Constant "cfg\\">               8
     ?<Constant "%s%s">                8
     ?<Constant "%s%dx%d\\">          12
     ?<Constant "XEP">                 4
     ?<Constant "%s %s">               8
     ?<Constant "\316\370\350\341\352\340!\n\324\36_1
                                      32
     ?<Constant "%02d:%02d %02d.%02d.%04d">
                                      28
      Others                         300

 
 13 928 bytes in segment CODE
    973 bytes in segment DATA_C
  5 860 bytes in segment DATA_I
  5 860 bytes in segment DATA_ID
 11 480 bytes in segment DATA_Z
     24 bytes in segment INITTAB
 
 13 652 bytes of CODE  memory (+ 300 bytes shared)
  6 833 bytes of CONST memory
 17 340 bytes of DATA  memory

Errors: none
Warnings: none
