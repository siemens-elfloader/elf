##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION    24/Sep/2010  19:57:37 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  C:\arm\CPUD\conf_loader.c                            #
#    Command line    =  C:\arm\CPUD\conf_loader.c -D NEWSGOLD -D ELKA -lC    #
#                       C:\arm\CPUD\Release_ELKA\List\ -o                    #
#                       C:\arm\CPUD\Release_ELKA\Obj\ -s9 --no_inline        #
#                       --no_clustering --cpu_mode arm --endian little       #
#                       --cpu ARM926EJ-S --stack_align 4 --interwork -e      #
#                       --fpu None                                           #
#    List file       =  C:\arm\CPUD\Release_ELKA\List\conf_loader.lst        #
#    Object file     =  C:\arm\CPUD\Release_ELKA\Obj\conf_loader.r79         #
#                                                                            #
#                                                                            #
##############################################################################

C:\arm\CPUD\conf_loader.c
      1          #include "..\inc\swilib.h"

     typedef size_t png_size_t;
             ^
"C:\arm\inc\pngconf.h",1097  Error[Pe020]: identifier "size_t" is undefined

  int CRYPTO_set_mem_functions(void *(*m)(size_t),void *(*r)(void *,size_t), void (*f)(void *));
                                          ^
"C:\arm\inc\crypto.h",298  Error[Pe092]: identifier-list parameters may only
          be used in a function definition

  int CRYPTO_set_mem_functions(void *(*m)(size_t),void *(*r)(void *,size_t), void (*f)(void *));
                                                                    ^
"C:\arm\inc\crypto.h",298  Error[Pe020]: identifier "size_t" is undefined

  int CRYPTO_set_locked_mem_functions(void *(*m)(size_t), void (*free_func)(void *));
                                                 ^
"C:\arm\inc\crypto.h",299  Error[Pe092]: identifier-list parameters may only
          be used in a function definition

  void CRYPTO_get_mem_functions(void *(**m)(size_t),void *(**r)(void *, size_t), void (**f)(void *));
                                            ^
"C:\arm\inc\crypto.h",301  Error[Pe092]: identifier-list parameters may only
          be used in a function definition

  void CRYPTO_get_mem_functions(void *(**m)(size_t),void *(**r)(void *, size_t), void (**f)(void *));
                                                                        ^
"C:\arm\inc\crypto.h",301  Error[Pe020]: identifier "size_t" is undefined

  void CRYPTO_get_locked_mem_functions(void *(**m)(size_t), void (**f)(void *));
                                                   ^
"C:\arm\inc\crypto.h",302  Error[Pe092]: identifier-list parameters may only
          be used in a function definition

  __swi __arm void *calloc(size_t nelem, size_t elsize);
                           ^
"C:\arm\inc\swilib.h",1616  Error[Pe020]: identifier "size_t" is undefined

  __swi __arm void *calloc(size_t nelem, size_t elsize);
                                         ^
"C:\arm\inc\swilib.h",1616  Error[Pe020]: identifier "size_t" is undefined
      2          #include "..\inc\cfg_items.h"
      3          #include "conf_loader.h"
      4          
      5          const char *successed_config_filename="";
      6          
      7          #pragma segment="CONFIG_C"
      8          int LoadConfigData(const char *fname)
      9          {
     10            int f;
     11            unsigned int ul;
     12            char *buf;
     13            int result=0;
     14            void *cfg;
     15          
     16            extern const CFG_HDR cfghdr0; //first var in CONFIG
     17            cfg=(void*)&cfghdr0;
     18          
     19            unsigned int len=(int)__segment_end("CONFIG_C")-(int)__segment_begin("CONFIG_C");
     20          
     21            if (!(buf=malloc(len))) return -1;
     22            if ((f=fopen(fname,A_ReadOnly+A_BIN,P_READ,&ul))!=-1)
     23            {
     24              if (fread(f,buf,len,&ul)==len)
     25              {
     26                memcpy(cfg,buf,len);
     27                fclose(f,&ul);
     28              }
     29              else
     30              {
     31                fclose(f,&ul);
     32                goto L_SAVENEWCFG;
     33              }
     34            }
     35            else
     36            {
     37            L_SAVENEWCFG:
     38              if ((f=fopen(fname,A_ReadWrite+A_Create+A_Truncate,P_READ+P_WRITE,&ul))!=-1)
     39              {
     40                if (fwrite(f,cfg,len,&ul)!=len) result=-1;
     41                fclose(f,&ul);
     42              }
     43              else
     44                result=-1;
     45            }
     46            mfree(buf);
     47            if (result>=0) successed_config_filename=fname;
     48            return(result);
     49          }
     50          
     51          void InitConfig()
     52          {
     53            if (LoadConfigData("4:\\ZBin\\etc\\CPUD.bcfg")<0)
     54            {
     55              LoadConfigData("0:\\ZBin\\etc\\CPUD.bcfg");
     56            }
     57          }

Errors: 9
Warnings: none
