##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION    27/Dec/2010  18:20:01 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  C:\arm\BalletMini\history.c                          #
#    Command line    =  C:\arm\BalletMini\history.c -D NEWSGOLD -D ELKA -lC  #
#                       C:\arm\BalletMini\Release_ELKA\List\ -o              #
#                       C:\arm\BalletMini\Release_ELKA\Obj\ -s9 --no_unroll  #
#                       --no_inline --cpu_mode arm --endian little --cpu     #
#                       ARM926EJ-S --stack_align 4 --interwork -e --fpu      #
#                       None --dlib_config "C:\arm2\Embedded Workbench 4.0   #
#                       Evaluation\ARM\LIB\dl5tpainl8n.h" -I                 #
#                       "C:\arm2\Embedded Workbench 4.0 Evaluation\ARM\INC\" #
#    List file       =  C:\arm\BalletMini\Release_ELKA\List\history.lst      #
#    Object file     =  C:\arm\BalletMini\Release_ELKA\Obj\history.r79       #
#                                                                            #
#                                                                            #
##############################################################################

C:\arm\BalletMini\history.c
      1          #include "../inc/swilib.h"
      2          #include "history.h"
      3          #include "file_works.h"
      4          #include "string_works.h"
      5          #include "lang.h"
      6          
      7          extern const int HISTORY_DEPTH;

   \                                 In segment DATA_C, align 4, align-sorted
      8          const int MAX_FILE_SIZE = 32768;
   \                     MAX_FILE_SIZE:
   \   00000000   00800000           DC32 32768

   \                                 In segment DATA_I, align 4, align-sorted
      9          const char *NEW_LINE = "\r\n";
   \                     NEW_LINE:
   \   00000000                      DS8 4
   \   00000004                      REQUIRE `?<Initializer for NEW_LINE>`
     10          

   \                                 In segment CODE, align 4, keep-with-next
     11          void CheckHistory(const char *url)
     12          {
   \                     CheckHistory:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0040A0E1           MOV      R4,R0
     13            char *default_url;
     14            int f;
     15            unsigned ul;
     16            char * history_file = getSymbolicPath("$urlcache\\history.txt");
   \   00000008   ........           LDR      R0,??DataTable7  ;; `?<Constant "$urlcache\\\\history.txt">`
   \   0000000C   04D04DE2           SUB      SP,SP,#+4
   \   00000010   ........           _BLF     getSymbolicPath,??getSymbolicPath??rA
   \   00000014   0050A0E1           MOV      R5,R0
     17            if ((f = fopen(history_file, A_ReadOnly + A_Create + A_BIN, P_READ + P_WRITE, &ul)) == -1)
   \   00000018   0D30A0E1           MOV      R3,SP
   \   0000001C   602FA0E3           MOV      R2,#+384
   \   00000020   811CA0E3           MOV      R1,#+33024
   \   00000024   0A0000EF           SWI      +10
   \   00000028   0070E0E3           MVN      R7,#+0
   \   0000002C   070050E1           CMP      R0,R7
   \   00000030   2900001A           BNE      ??CheckHistory_0
     18            {
     19              if ((f = fopen(history_file, A_WriteOnly+A_Create+A_BIN,P_READ+P_WRITE,&ul)) == -1)
   \   00000034   0D30A0E1           MOV      R3,SP
   \   00000038   602FA0E3           MOV      R2,#+384
   \   0000003C   0110A0E3           MOV      R1,#+1
   \   00000040   811C81E3           ORR      R1,R1,#0x8100
   \   00000044   0500A0E1           MOV      R0,R5
   \   00000048   0A0000EF           SWI      +10
   \   0000004C   0060A0E1           MOV      R6,R0
   \   00000050   070056E1           CMP      R6,R7
   \   00000054   0600001A           BNE      ??CheckHistory_1
     20              {
     21                LockSched();
   \   00000058   460100EF           SWI      +326
     22                ShowMSG(1,(int)lgpData[LGP_HistoryFileFailed]);
   \   0000005C   ........           LDR      R0,??DataTable12  ;; lgpData + 8
   \   00000060   001090E5           LDR      R1,[R0, #+0]
   \   00000064   0100A0E3           MOV      R0,#+1
   \   00000068   480100EF           SWI      +328
     23                UnlockSched();
   \   0000006C   470100EF           SWI      +327
     24                mfree(history_file);
   \   00000070   1B0000EA           B        ??CheckHistory_2
     25                return;
     26              }
     27          
     28              default_url = (char *) malloc(strlen(url) + 3);
   \                     ??CheckHistory_1:
   \   00000074   0400A0E1           MOV      R0,R4
   \   00000078   1B0000EF           SWI      +27
   \   0000007C   030080E2           ADD      R0,R0,#+3
   \   00000080   140000EF           SWI      +20
   \   00000084   0070A0E1           MOV      R7,R0
     29              strcpy(default_url, url); strcat(default_url, NEW_LINE);
   \   00000088   0410A0E1           MOV      R1,R4
   \   0000008C   1A0000EF           SWI      +26
   \   00000090   ........           LDR      R0,??DataTable11  ;; NEW_LINE
   \   00000094   001090E5           LDR      R1,[R0, #+0]
   \   00000098   0700A0E1           MOV      R0,R7
   \   0000009C   170000EF           SWI      +23
     30              
     31              fwrite(f,default_url,strlen(default_url), &ul);
   \   000000A0   0700A0E1           MOV      R0,R7
   \   000000A4   1B0000EF           SWI      +27
   \   000000A8   0020A0E1           MOV      R2,R0
   \   000000AC   0D30A0E1           MOV      R3,SP
   \   000000B0   0710A0E1           MOV      R1,R7
   \   000000B4   0600A0E1           MOV      R0,R6
   \   000000B8   0C0000EF           SWI      +12
     32              fclose(f, &ul);
   \   000000BC   0D10A0E1           MOV      R1,SP
   \   000000C0   0600A0E1           MOV      R0,R6
   \   000000C4   0D0000EF           SWI      +13
     33          
     34              mfree(default_url);
   \   000000C8   0700A0E1           MOV      R0,R7
   \   000000CC   150000EF           SWI      +21
     35              mfree(history_file);
   \   000000D0   0500A0E1           MOV      R0,R5
   \   000000D4   150000EF           SWI      +21
     36              return;
   \   000000D8   F180BDE8           POP      {R0,R4-R7,PC}
     37            }
     38            fclose(f, &ul);
   \                     ??CheckHistory_0:
   \   000000DC   0D10A0E1           MOV      R1,SP
   \   000000E0   0D0000EF           SWI      +13
     39            mfree(history_file);
   \                     ??CheckHistory_2:
   \   000000E4   0500A0E1           MOV      R0,R5
   \   000000E8   150000EF           SWI      +21
   \   000000EC   F180BDE8           POP      {R0,R4-R7,PC}
     40          }
     41          
     42          //------------------------------------------------------------------------------
     43          

   \                                 In segment CODE, align 4, keep-with-next
     44          char **GetHistory(int *cnt)
     45          {
   \                     GetHistory:
   \   00000000   F14F2DE9           PUSH     {R0,R4-R11,LR}
     46            char *history_buf,*s,*tmp;
     47            char **history;
     48            int f,flen,history_depth=0,i;
     49            unsigned ul;
     50            char * history_file = getSymbolicPath("$urlcache\\history.txt");
   \   00000004   ........           LDR      R0,??DataTable7  ;; `?<Constant "$urlcache\\\\history.txt">`
   \   00000008   10D04DE2           SUB      SP,SP,#+16
   \   0000000C   0010A0E3           MOV      R1,#+0
   \   00000010   08108DE5           STR      R1,[SP, #+8]
   \   00000014   ........           _BLF     getSymbolicPath,??getSymbolicPath??rA
   \   00000018   0C008DE5           STR      R0,[SP, #+12]
     51            f=fopen(history_file, A_ReadOnly+A_Create+A_BIN,P_READ+P_WRITE,&ul);
   \   0000001C   0D30A0E1           MOV      R3,SP
   \   00000020   602FA0E3           MOV      R2,#+384
   \   00000024   811CA0E3           MOV      R1,#+33024
   \   00000028   0A0000EF           SWI      +10
   \   0000002C   0060A0E1           MOV      R6,R0
   \   00000030   010076E3           CMN      R6,#+1
   \   00000034   0D00001A           BNE      ??GetHistory_0
     52            if (f==-1)
     53            {
     54              LockSched();
   \   00000038   460100EF           SWI      +326
     55              ShowMSG(1,(int)lgpData[LGP_HistoryFileFailed]);
   \   0000003C   ........           LDR      R0,??DataTable12  ;; lgpData + 8
   \   00000040   001090E5           LDR      R1,[R0, #+0]
   \   00000044   0100A0E3           MOV      R0,#+1
   \   00000048   480100EF           SWI      +328
     56              UnlockSched();
   \   0000004C   470100EF           SWI      +327
     57              *cnt=history_depth;
   \   00000050   10009DE5           LDR      R0,[SP, #+16]
   \   00000054   0010A0E3           MOV      R1,#+0
   \   00000058   001080E5           STR      R1,[R0, #+0]
     58              mfree(history_file);
   \   0000005C   0C009DE5           LDR      R0,[SP, #+12]
   \   00000060   150000EF           SWI      +21
     59              return 0;
   \   00000064   0000A0E3           MOV      R0,#+0
   \   00000068   14D08DE2           ADD      SP,SP,#+20
   \   0000006C   F08FBDE8           POP      {R4-R11,PC}
     60            }
     61            flen=lseek(f,0,2,&ul,&ul)+1;
   \                     ??GetHistory_0:
   \   00000070   0D00A0E1           MOV      R0,SP
   \   00000074   01002DE9           PUSH     {R0}
   \   00000078   04308DE2           ADD      R3,SP,#+4
   \   0000007C   0220A0E3           MOV      R2,#+2
   \   00000080   0010A0E3           MOV      R1,#+0
   \   00000084   0600A0E1           MOV      R0,R6
   \   00000088   0F0000EF           SWI      +15
   \   0000008C   014080E2           ADD      R4,R0,#+1
     62            lseek(f,0,0,&ul,&ul);
   \   00000090   04008DE2           ADD      R0,SP,#+4
   \   00000094   01002DE9           PUSH     {R0}
   \   00000098   08308DE2           ADD      R3,SP,#+8
   \   0000009C   0020A0E3           MOV      R2,#+0
   \   000000A0   0010A0E3           MOV      R1,#+0
   \   000000A4   0600A0E1           MOV      R0,R6
   \   000000A8   0F0000EF           SWI      +15
     63          
     64            flen=(flen>MAX_FILE_SIZE)?MAX_FILE_SIZE:flen;
   \   000000AC   0100A0E3           MOV      R0,#+1
   \   000000B0   800C80E3           ORR      R0,R0,#0x8000
   \   000000B4   000054E1           CMP      R4,R0
   \   000000B8   08D08DE2           ADD      SP,SP,#+8
   \   000000BC   804CA0A3           MOVGE    R4,#+32768
     65            history_buf=(char*)malloc(MAX_FILE_SIZE);
   \   000000C0   800CA0E3           MOV      R0,#+32768
   \   000000C4   140000EF           SWI      +20
   \   000000C8   0050A0E1           MOV      R5,R0
     66            history_buf[flen-1]=0;
   \   000000CC   050084E0           ADD      R0,R4,R5
   \   000000D0   0010A0E3           MOV      R1,#+0
   \   000000D4   011040E5           STRB     R1,[R0, #-1]
     67            fread(f,history_buf,flen,&ul);
   \   000000D8   0D30A0E1           MOV      R3,SP
   \   000000DC   0420A0E1           MOV      R2,R4
   \   000000E0   0510A0E1           MOV      R1,R5
   \   000000E4   0600A0E1           MOV      R0,R6
   \   000000E8   0B0000EF           SWI      +11
     68            fclose(f,&ul);
   \   000000EC   0D10A0E1           MOV      R1,SP
   \   000000F0   0600A0E1           MOV      R0,R6
   \   000000F4   0D0000EF           SWI      +13
     69          
     70            history=(char**)malloc(sizeof(char *)*HISTORY_DEPTH);
   \   000000F8   ........           LDR      R1,??DataTable9  ;; HISTORY_DEPTH
   \   000000FC   001091E5           LDR      R1,[R1, #+0]
   \   00000100   04108DE5           STR      R1,[SP, #+4]
   \   00000104   0100A0E1           MOV      R0,R1
   \   00000108   0001A0E1           LSL      R0,R0,#+2
   \   0000010C   140000EF           SWI      +20
     71            for(i=0;i<HISTORY_DEPTH;i++)
   \   00000110   04109DE5           LDR      R1,[SP, #+4]
   \   00000114   0060A0E1           MOV      R6,R0
   \   00000118   0000A0E3           MOV      R0,#+0
   \   0000011C   010051E3           CMP      R1,#+1
   \   00000120   030000AA           BGE      ??GetHistory_1
   \   00000124   050000EA           B        ??GetHistory_2
     72            history[i]=0;
   \                     ??GetHistory_3:
   \   00000128   0010A0E3           MOV      R1,#+0
   \   0000012C   001186E7           STR      R1,[R6, +R0, LSL #+2]
   \   00000130   010080E2           ADD      R0,R0,#+1
   \                     ??GetHistory_1:
   \   00000134   04109DE5           LDR      R1,[SP, #+4]
   \   00000138   010050E1           CMP      R0,R1
   \   0000013C   F9FFFFBA           BLT      ??GetHistory_3
     73            s=history_buf;
   \                     ??GetHistory_2:
   \   00000140   0590A0E1           MOV      R9,R5
     74            tmp=history_buf;
   \   00000144   0570A0E1           MOV      R7,R5
     75            for(i=0;i<HISTORY_DEPTH&&s&&tmp<history_buf+flen;i++)
   \   00000148   0080A0E3           MOV      R8,#+0
   \   0000014C   150000EA           B        ??GetHistory_4
     76            {
     77              s=strstr(tmp,NEW_LINE);
   \                     ??GetHistory_5:
   \   00000150   ........           LDR      R0,??DataTable11  ;; NEW_LINE
   \   00000154   001090E5           LDR      R1,[R0, #+0]
   \   00000158   0700A0E1           MOV      R0,R7
   \   0000015C   180100EF           SWI      +280
   \   00000160   0090B0E1           MOVS     R9,R0
     78              if(s)
   \   00000164   0E00000A           BEQ      ??GetHistory_6
     79              {
     80                history[i]=(char*)malloc(s-tmp+1);
   \   00000168   08A186E0           ADD      R10,R6,R8, LSL #+2
   \   0000016C   07B049E0           SUB      R11,R9,R7
   \   00000170   01008BE2           ADD      R0,R11,#+1
   \   00000174   140000EF           SWI      +20
   \   00000178   00008AE5           STR      R0,[R10, #+0]
     81                memcpy(history[i],tmp,s-tmp);
   \   0000017C   0B20A0E1           MOV      R2,R11
   \   00000180   0710A0E1           MOV      R1,R7
   \   00000184   1E0100EF           SWI      +286
     82                history[i][s-tmp]=0;
   \   00000188   00009AE5           LDR      R0,[R10, #+0]
   \   0000018C   0010A0E3           MOV      R1,#+0
   \   00000190   0010CBE7           STRB     R1,[R11, +R0]
     83                tmp=s+2;
     84                history_depth++;
   \   00000194   08109DE5           LDR      R1,[SP, #+8]
   \   00000198   027089E2           ADD      R7,R9,#+2
   \   0000019C   011081E2           ADD      R1,R1,#+1
   \   000001A0   08108DE5           STR      R1,[SP, #+8]
     85              }
     86            }
   \                     ??GetHistory_6:
   \   000001A4   018088E2           ADD      R8,R8,#+1
   \                     ??GetHistory_4:
   \   000001A8   04009DE5           LDR      R0,[SP, #+4]
   \   000001AC   000058E1           CMP      R8,R0
   \   000001B0   040000AA           BGE      ??GetHistory_7
   \   000001B4   000059E3           CMP      R9,#+0
   \   000001B8   0200000A           BEQ      ??GetHistory_7
   \   000001BC   050084E0           ADD      R0,R4,R5
   \   000001C0   000057E1           CMP      R7,R0
   \   000001C4   E1FFFF3A           BCC      ??GetHistory_5
     87            *cnt=history_depth;
   \                     ??GetHistory_7:
   \   000001C8   10009DE5           LDR      R0,[SP, #+16]
   \   000001CC   08109DE5           LDR      R1,[SP, #+8]
   \   000001D0   001080E5           STR      R1,[R0, #+0]
     88            mfree(history_buf);
   \   000001D4   0500A0E1           MOV      R0,R5
   \   000001D8   150000EF           SWI      +21
     89            mfree(history_file);
   \   000001DC   0C009DE5           LDR      R0,[SP, #+12]
   \   000001E0   150000EF           SWI      +21
     90            return history;
   \   000001E4   0600A0E1           MOV      R0,R6
   \   000001E8   14D08DE2           ADD      SP,SP,#+20
   \   000001EC   F08FBDE8           POP      {R4-R11,PC}      ;; return
     91          }
     92          
     93          //------------------------------------------------------------------------------
     94          

   \                                 In segment CODE, align 4, keep-with-next
     95          void AddURLToHistory(const char *url)
     96          {
   \                     AddURLToHistory:
   \   00000000   F14F2DE9           PUSH     {R0,R4-R11,LR}
     97            char *history_buf, **history, *s, *tmp;
     98            int f, flen, history_depth = 0, i;
     99            unsigned ul;
    100            char * history_file = getSymbolicPath("$urlcache\\history.txt");
   \   00000004   ........           LDR      R0,??DataTable7  ;; `?<Constant "$urlcache\\\\history.txt">`
   \   00000008   0CD04DE2           SUB      SP,SP,#+12
   \   0000000C   0040A0E3           MOV      R4,#+0
   \   00000010   ........           _BLF     getSymbolicPath,??getSymbolicPath??rA
   \   00000014   0050A0E1           MOV      R5,R0
    101            if ((f=fopen(history_file, A_ReadWrite+A_Create+A_BIN,P_READ+P_WRITE,&ul))==-1)
   \   00000018   0D30A0E1           MOV      R3,SP
   \   0000001C   602FA0E3           MOV      R2,#+384
   \   00000020   0210A0E3           MOV      R1,#+2
   \   00000024   811C81E3           ORR      R1,R1,#0x8100
   \   00000028   0A0000EF           SWI      +10
   \   0000002C   0070A0E1           MOV      R7,R0
   \   00000030   010077E3           CMN      R7,#+1
   \   00000034   0800001A           BNE      ??AddURLToHistory_0
    102            {
    103              LockSched();
   \   00000038   460100EF           SWI      +326
    104              ShowMSG(1,(int)lgpData[LGP_HistoryFileFailed]);
   \   0000003C   ........           LDR      R0,??DataTable12  ;; lgpData + 8
   \   00000040   001090E5           LDR      R1,[R0, #+0]
   \   00000044   0100A0E3           MOV      R0,#+1
   \   00000048   480100EF           SWI      +328
    105              UnlockSched();
   \   0000004C   470100EF           SWI      +327
    106              mfree(history_file);
   \   00000050   0500A0E1           MOV      R0,R5
   \   00000054   150000EF           SWI      +21
   \   00000058   FF8FBDE8           POP      {R0-R11,PC}
    107              return;
    108            }
    109          
    110            flen = lseek(f, 0, 2, &ul, &ul)+1;
   \                     ??AddURLToHistory_0:
   \   0000005C   0D00A0E1           MOV      R0,SP
   \   00000060   01002DE9           PUSH     {R0}
   \   00000064   04308DE2           ADD      R3,SP,#+4
   \   00000068   0220A0E3           MOV      R2,#+2
   \   0000006C   0010A0E3           MOV      R1,#+0
   \   00000070   0700A0E1           MOV      R0,R7
   \   00000074   0F0000EF           SWI      +15
   \   00000078   010080E2           ADD      R0,R0,#+1
   \   0000007C   08008DE5           STR      R0,[SP, #+8]
    111            lseek(f, 0, 0, &ul, &ul);
   \   00000080   04008DE2           ADD      R0,SP,#+4
   \   00000084   01002DE9           PUSH     {R0}
   \   00000088   08308DE2           ADD      R3,SP,#+8
   \   0000008C   0420A0E1           MOV      R2,R4
   \   00000090   0210A0E1           MOV      R1,R2
   \   00000094   0700A0E1           MOV      R0,R7
   \   00000098   0F0000EF           SWI      +15
    112          
    113          
    114            flen = (flen>MAX_FILE_SIZE)?MAX_FILE_SIZE:flen;
   \   0000009C   0C009DE5           LDR      R0,[SP, #+12]
   \   000000A0   0110A0E3           MOV      R1,#+1
   \   000000A4   801C81E3           ORR      R1,R1,#0x8000
   \   000000A8   010050E1           CMP      R0,R1
   \   000000AC   08D08DE2           ADD      SP,SP,#+8
   \   000000B0   801CA0A3           MOVGE    R1,#+32768
   \   000000B4   04108DA5           STRGE    R1,[SP, #+4]
    115            history_buf = (char*)malloc(MAX_FILE_SIZE);
   \   000000B8   800CA0E3           MOV      R0,#+32768
   \   000000BC   140000EF           SWI      +20
   \   000000C0   0060A0E1           MOV      R6,R0
   \   000000C4   04009DE5           LDR      R0,[SP, #+4]
   \   000000C8   0010A0E3           MOV      R1,#+0
   \   000000CC   060080E0           ADD      R0,R0,R6
   \   000000D0   011040E5           STRB     R1,[R0, #-1]
    116            history_buf[flen-1] = 0;
    117            fread(f,history_buf,flen,&ul);
   \   000000D4   04209DE5           LDR      R2,[SP, #+4]
   \   000000D8   0D30A0E1           MOV      R3,SP
   \   000000DC   0610A0E1           MOV      R1,R6
   \   000000E0   0700A0E1           MOV      R0,R7
   \   000000E4   0B0000EF           SWI      +11
    118            fclose(f,&ul);
   \   000000E8   0D10A0E1           MOV      R1,SP
   \   000000EC   0700A0E1           MOV      R0,R7
   \   000000F0   0D0000EF           SWI      +13
    119          
    120            history = (char**)malloc(sizeof(char *) * HISTORY_DEPTH);
   \   000000F4   ........           LDR      R0,??DataTable9  ;; HISTORY_DEPTH
   \   000000F8   007090E5           LDR      R7,[R0, #+0]
   \   000000FC   0701A0E1           LSL      R0,R7,#+2
   \   00000100   140000EF           SWI      +20
   \   00000104   0080A0E1           MOV      R8,R0
    121            for(i = 0; i < HISTORY_DEPTH; i++)
   \   00000108   0400A0E1           MOV      R0,R4
   \   0000010C   010057E3           CMP      R7,#+1
   \   00000110   0010A0E1           MOV      R1,R0
   \   00000114   020000AA           BGE      ??AddURLToHistory_1
   \   00000118   030000EA           B        ??AddURLToHistory_2
    122            history[i] = 0;
   \                     ??AddURLToHistory_3:
   \   0000011C   001188E7           STR      R1,[R8, +R0, LSL #+2]
   \   00000120   010080E2           ADD      R0,R0,#+1
   \                     ??AddURLToHistory_1:
   \   00000124   070050E1           CMP      R0,R7
   \   00000128   FBFFFFBA           BLT      ??AddURLToHistory_3
    123          
    124            s = history_buf;
   \                     ??AddURLToHistory_2:
   \   0000012C   0690A0E1           MOV      R9,R6
    125            tmp = history_buf;
   \   00000130   06A0A0E1           MOV      R10,R6
    126            for(i = 0; i < HISTORY_DEPTH && s && tmp < history_buf + flen; i++)
   \   00000134   00B0A0E3           MOV      R11,#+0
   \   00000138   140000EA           B        ??AddURLToHistory_4
    127            {
    128              s = strstr(tmp, NEW_LINE);
   \                     ??AddURLToHistory_5:
   \   0000013C   ........           LDR      R0,??DataTable11  ;; NEW_LINE
   \   00000140   001090E5           LDR      R1,[R0, #+0]
   \   00000144   0A00A0E1           MOV      R0,R10
   \   00000148   180100EF           SWI      +280
   \   0000014C   0090B0E1           MOVS     R9,R0
    129              if(s)
   \   00000150   0D00000A           BEQ      ??AddURLToHistory_6
   \   00000154   0A1049E0           SUB      R1,R9,R10
   \   00000158   08108DE5           STR      R1,[SP, #+8]
   \   0000015C   010081E2           ADD      R0,R1,#+1
    130              {
    131                history[i] = (char*)malloc(s - tmp + 1);
   \   00000160   140000EF           SWI      +20
   \   00000164   0B0188E7           STR      R0,[R8, +R11, LSL #+2]
    132                memcpy(history[i], tmp, s-tmp);
   \   00000168   08209DE5           LDR      R2,[SP, #+8]
   \   0000016C   0A10A0E1           MOV      R1,R10
   \   00000170   1E0100EF           SWI      +286
    133                history[i][s-tmp] = 0;
   \   00000174   08009DE5           LDR      R0,[SP, #+8]
   \   00000178   0B1198E7           LDR      R1,[R8, +R11, LSL #+2]
   \   0000017C   0020A0E3           MOV      R2,#+0
   \   00000180   0120C0E7           STRB     R2,[R0, +R1]
    134                tmp = s + 2;
   \   00000184   02A089E2           ADD      R10,R9,#+2
    135                history_depth++;
   \   00000188   014084E2           ADD      R4,R4,#+1
    136              }
    137            }
   \                     ??AddURLToHistory_6:
   \   0000018C   01B08BE2           ADD      R11,R11,#+1
   \                     ??AddURLToHistory_4:
   \   00000190   07005BE1           CMP      R11,R7
   \   00000194   050000AA           BGE      ??AddURLToHistory_7
   \   00000198   000059E3           CMP      R9,#+0
   \   0000019C   0300000A           BEQ      ??AddURLToHistory_7
   \   000001A0   04009DE5           LDR      R0,[SP, #+4]
   \   000001A4   060080E0           ADD      R0,R0,R6
   \   000001A8   00005AE1           CMP      R10,R0
   \   000001AC   E2FFFF3A           BCC      ??AddURLToHistory_5
    138            for(i = 0; i < history_depth; i++)
   \                     ??AddURLToHistory_7:
   \   000001B0   00A0A0E3           MOV      R10,#+0
   \   000001B4   000000EA           B        ??AddURLToHistory_8
   \                     ??AddURLToHistory_9:
   \   000001B8   01A08AE2           ADD      R10,R10,#+1
   \                     ??AddURLToHistory_8:
   \   000001BC   04005AE1           CMP      R10,R4
   \   000001C0   0D0000AA           BGE      ??AddURLToHistory_10
    139            {
    140              if(!strcmp(history[i], url))
   \   000001C4   0A0198E7           LDR      R0,[R8, +R10, LSL #+2]
   \   000001C8   0C109DE5           LDR      R1,[SP, #+12]
   \   000001CC   190000EF           SWI      +25
   \   000001D0   000050E3           CMP      R0,#+0
   \   000001D4   F7FFFF1A           BNE      ??AddURLToHistory_9
    141              {
    142                while(i)
   \                     ??AddURLToHistory_11:
   \   000001D8   00005AE3           CMP      R10,#+0
   \   000001DC   0600000A           BEQ      ??AddURLToHistory_10
    143                {
    144                  s = history[i];
   \   000001E0   0A0188E0           ADD      R0,R8,R10, LSL #+2
   \   000001E4   009090E5           LDR      R9,[R0, #+0]
    145                  history[i] = history[i-1];
   \   000001E8   041010E5           LDR      R1,[R0, #-4]
    146                  history[i-1] = s;
    147                  i--;
   \   000001EC   01A04AE2           SUB      R10,R10,#+1
   \   000001F0   001080E5           STR      R1,[R0, #+0]
   \   000001F4   049000E5           STR      R9,[R0, #-4]
   \   000001F8   F6FFFFEA           B        ??AddURLToHistory_11
    148                }
    149                break;
    150              }
    151            }
    152            if(HISTORY_DEPTH && strcmp(history[0], url))
   \                     ??AddURLToHistory_10:
   \   000001FC   000057E3           CMP      R7,#+0
   \   00000200   1D00000A           BEQ      ??AddURLToHistory_12
   \   00000204   000098E5           LDR      R0,[R8, #+0]
   \   00000208   0C109DE5           LDR      R1,[SP, #+12]
   \   0000020C   190000EF           SWI      +25
   \   00000210   000050E3           CMP      R0,#+0
   \   00000214   1900000A           BEQ      ??AddURLToHistory_13
    153            {
    154              if(history[HISTORY_DEPTH-1])
   \   00000218   070188E0           ADD      R0,R8,R7, LSL #+2
   \   0000021C   041010E5           LDR      R1,[R0, #-4]
   \   00000220   000051E3           CMP      R1,#+0
   \   00000224   0100000A           BEQ      ??AddURLToHistory_14
    155                mfree(history[HISTORY_DEPTH-1]);
   \   00000228   0100A0E1           MOV      R0,R1
   \   0000022C   150000EF           SWI      +21
    156              for(i = HISTORY_DEPTH-1; i>0; i--)
   \                     ??AddURLToHistory_14:
   \   00000230   01A047E2           SUB      R10,R7,#+1
   \   00000234   01005AE3           CMP      R10,#+1
   \   00000238   050000BA           BLT      ??AddURLToHistory_15
    157                history[i] = history[i-1];
   \                     ??AddURLToHistory_16:
   \   0000023C   040048E2           SUB      R0,R8,#+4
   \   00000240   0A0190E7           LDR      R0,[R0, +R10, LSL #+2]
   \   00000244   0A0188E7           STR      R0,[R8, +R10, LSL #+2]
   \   00000248   01A04AE2           SUB      R10,R10,#+1
   \   0000024C   01005AE3           CMP      R10,#+1
   \   00000250   F9FFFFAA           BGE      ??AddURLToHistory_16
    158              history[0] = (char*)malloc(strlen(url)+1);
   \                     ??AddURLToHistory_15:
   \   00000254   0C009DE5           LDR      R0,[SP, #+12]
    159              strcpy(history[0], url);
    160              history_depth++;
   \   00000258   014084E2           ADD      R4,R4,#+1
   \   0000025C   1B0000EF           SWI      +27
   \   00000260   010080E2           ADD      R0,R0,#+1
   \   00000264   140000EF           SWI      +20
   \   00000268   000088E5           STR      R0,[R8, #+0]
   \   0000026C   0C109DE5           LDR      R1,[SP, #+12]
   \   00000270   1A0000EF           SWI      +26
    161              history_depth = (history_depth>HISTORY_DEPTH)?HISTORY_DEPTH:history_depth;
   \   00000274   040057E1           CMP      R7,R4
   \   00000278   0740A0B1           MOVLT    R4,R7
    162            }
    163          
    164          
    165            tmp = history_buf;
    166            tmp[0] = 0;
   \                     ??AddURLToHistory_12:
   \   0000027C   0000A0E3           MOV      R0,#+0
   \                     ??AddURLToHistory_13:
   \   00000280   0000C6E5           STRB     R0,[R6, #+0]
    167            for(i = 0; i < history_depth; i++)
   \   00000284   0070A0E3           MOV      R7,#+0
   \   00000288   010054E3           CMP      R4,#+1
   \   0000028C   0B0000AA           BGE      ??AddURLToHistory_17
   \   00000290   0C0000EA           B        ??AddURLToHistory_18
    168            {
    169              strcat(tmp, history[i]);
   \                     ??AddURLToHistory_19:
   \   00000294   079188E0           ADD      R9,R8,R7, LSL #+2
   \   00000298   001099E5           LDR      R1,[R9, #+0]
   \   0000029C   0600A0E1           MOV      R0,R6
   \   000002A0   170000EF           SWI      +23
    170              strcat(tmp, NEW_LINE);
   \   000002A4   ........           LDR      R0,??DataTable11  ;; NEW_LINE
    171              mfree(history[i]);
    172            }
   \   000002A8   017087E2           ADD      R7,R7,#+1
   \   000002AC   001090E5           LDR      R1,[R0, #+0]
   \   000002B0   0600A0E1           MOV      R0,R6
   \   000002B4   170000EF           SWI      +23
   \   000002B8   000099E5           LDR      R0,[R9, #+0]
   \   000002BC   150000EF           SWI      +21
   \                     ??AddURLToHistory_17:
   \   000002C0   040057E1           CMP      R7,R4
   \   000002C4   F2FFFFBA           BLT      ??AddURLToHistory_19
    173            mfree(history);
   \                     ??AddURLToHistory_18:
   \   000002C8   0800A0E1           MOV      R0,R8
   \   000002CC   150000EF           SWI      +21
    174          
    175            unlink(history_file, &ul);
   \   000002D0   0D10A0E1           MOV      R1,SP
   \   000002D4   0500A0E1           MOV      R0,R5
   \   000002D8   6B0100EF           SWI      +363
    176          
    177            f=fopen(history_file,A_WriteOnly+A_Create+A_BIN,P_READ+P_WRITE,&ul);
   \   000002DC   0D30A0E1           MOV      R3,SP
   \   000002E0   602FA0E3           MOV      R2,#+384
   \   000002E4   0110A0E3           MOV      R1,#+1
   \   000002E8   811C81E3           ORR      R1,R1,#0x8100
   \   000002EC   0500A0E1           MOV      R0,R5
   \   000002F0   0A0000EF           SWI      +10
   \   000002F4   0070A0E1           MOV      R7,R0
    178            if (f==-1)
   \   000002F8   010077E3           CMN      R7,#+1
   \   000002FC   0600001A           BNE      ??AddURLToHistory_20
    179            {
    180              LockSched();
   \   00000300   460100EF           SWI      +326
    181              ShowMSG(1,(int)lgpData[LGP_HistoryFileFailed]);
   \   00000304   ........           LDR      R0,??DataTable12  ;; lgpData + 8
   \   00000308   001090E5           LDR      R1,[R0, #+0]
   \   0000030C   0100A0E3           MOV      R0,#+1
   \   00000310   480100EF           SWI      +328
    182              UnlockSched();
   \   00000314   470100EF           SWI      +327
    183              mfree(history_buf);
   \   00000318   090000EA           B        ??AddURLToHistory_21
    184              mfree(history_file);
    185              return;
    186            }
    187            fwrite(f,history_buf,strlen(history_buf), &ul);
   \                     ??AddURLToHistory_20:
   \   0000031C   0600A0E1           MOV      R0,R6
   \   00000320   1B0000EF           SWI      +27
   \   00000324   0020A0E1           MOV      R2,R0
   \   00000328   0D30A0E1           MOV      R3,SP
   \   0000032C   0610A0E1           MOV      R1,R6
   \   00000330   0700A0E1           MOV      R0,R7
   \   00000334   0C0000EF           SWI      +12
    188            fclose(f, &ul);
   \   00000338   0D10A0E1           MOV      R1,SP
   \   0000033C   0700A0E1           MOV      R0,R7
   \   00000340   0D0000EF           SWI      +13
    189            mfree(history_buf);
   \                     ??AddURLToHistory_21:
   \   00000344   0600A0E1           MOV      R0,R6
   \   00000348   150000EF           SWI      +21
    190            mfree(history_file);
   \   0000034C   0500A0E1           MOV      R0,R5
   \   00000350   150000EF           SWI      +21
    191          }
   \   00000354   FF8FBDE8           POP      {R0-R11,PC}      ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable7:
   \   00000000   ........           DC32     `?<Constant "$urlcache\\\\history.txt">`

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable9:
   \   00000000   ........           DC32     HISTORY_DEPTH

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable11:
   \   00000000   ........           DC32     NEW_LINE

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable12:
   \   00000000   ........           DC32     lgpData + 8

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for NEW_LINE>`:
   \   00000000   ........           DC32 `?<Constant "\\r\\n">`

   \                                 In segment DATA_C, align 1, align-sorted
   \                     `?<Constant "\\r\\n">`:
   \   00000000   0D0A00             DC8 "\015\012"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "$urlcache\\\\history.txt">`:
   \   00000000   2475726C6361       DC8 "$urlcache\\history.txt"
   \              6368655C6869
   \              73746F72792E
   \              74787400    
   \   00000016   0000               DC8 0, 0

   Maximum stack usage in bytes:

     Function        CSTACK
     --------        ------
     AddURLToHistory    60
     CheckHistory       24
     GetHistory         64


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     MAX_FILE_SIZE                     4
     NEW_LINE                          4
     CheckHistory                    240
     GetHistory                      496
     AddURLToHistory                 856
     ??DataTable7                      4
     ??DataTable9                      4
     ??DataTable11                     4
     ??DataTable12                     4
     ?<Initializer for NEW_LINE>       4
     ?<Constant "\r\n">                3
     ?<Constant "$urlcache\\history.txt">
                                      24
      Others                          36

 
 1 632 bytes in segment CODE
    31 bytes in segment DATA_C
     4 bytes in segment DATA_I
     4 bytes in segment DATA_ID
    12 bytes in segment INITTAB
 
 1 608 bytes of CODE  memory (+ 36 bytes shared)
    35 bytes of CONST memory
     4 bytes of DATA  memory

Errors: none
Warnings: none
