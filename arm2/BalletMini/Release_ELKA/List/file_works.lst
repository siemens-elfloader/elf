##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION    27/Dec/2010  18:20:00 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  C:\arm\BalletMini\file_works.c                       #
#    Command line    =  C:\arm\BalletMini\file_works.c -D NEWSGOLD -D ELKA   #
#                       -lC C:\arm\BalletMini\Release_ELKA\List\ -o          #
#                       C:\arm\BalletMini\Release_ELKA\Obj\ -s9 --no_unroll  #
#                       --no_inline --cpu_mode arm --endian little --cpu     #
#                       ARM926EJ-S --stack_align 4 --interwork -e --fpu      #
#                       None --dlib_config "C:\arm2\Embedded Workbench 4.0   #
#                       Evaluation\ARM\LIB\dl5tpainl8n.h" -I                 #
#                       "C:\arm2\Embedded Workbench 4.0 Evaluation\ARM\INC\" #
#    List file       =  C:\arm\BalletMini\Release_ELKA\List\file_works.lst   #
#    Object file     =  C:\arm\BalletMini\Release_ELKA\Obj\file_works.r79    #
#                                                                            #
#                                                                            #
##############################################################################

C:\arm\BalletMini\file_works.c
      1          #include "../inc/swilib.h"
      2          #include "string_works.h"
      3          #include "file_works.h"
      4          
      5          extern char BALLET_PATH[256];
      6          

   \                                 In segment CODE, align 4, keep-with-next
      7          char * getSymbolicPath(const char * cFileName)
      8          {
   \                     getSymbolicPath:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
      9            int ps = NULL;
     10            int pp = NULL;
     11            char * path = (char *)malloc(strlen(BALLET_PATH) + strlen(cFileName) + 32);
   \   00000004   D4529FE5           LDR      R5,??getSymbolicPath_1+0x4  ;; BALLET_PATH
   \   00000008   1CD04DE2           SUB      SP,SP,#+28
   \   0000000C   D0929FE5           LDR      R9,??getSymbolicPath_1+0x8  ;; `?<Constant "Bookmarks">`
   \   00000010   0040A0E1           MOV      R4,R0
   \   00000014   0070A0E3           MOV      R7,#+0
   \   00000018   0060A0E3           MOV      R6,#+0
   \   0000001C   0500A0E1           MOV      R0,R5
   \   00000020   1B0000EF           SWI      +27
   \   00000024   0080A0E1           MOV      R8,R0
   \   00000028   0400A0E1           MOV      R0,R4
   \   0000002C   1B0000EF           SWI      +27
   \   00000030   080080E0           ADD      R0,R0,R8
   \   00000034   200080E2           ADD      R0,R0,#+32
   \   00000038   140000EF           SWI      +20
   \   0000003C   0080A0E1           MOV      R8,R0
   \   00000040   070000EA           B        ??getSymbolicPath_2
     12            while (ps<strlen(cFileName))
     13            {
     14              if (cFileName[ps]=='$')
     15              {
     16                ps++;
     17                switch (cFileName[ps])
     18                {
     19                case 'b':
     20                  if (cFileName[ps+1]=='a') // ballet
     21                  {
     22                    strcpy(path + pp, BALLET_PATH);
   \                     ??getSymbolicPath_3:
   \   00000044   0510A0E1           MOV      R1,R5
   \   00000048   080086E0           ADD      R0,R6,R8
   \   0000004C   1A0000EF           SWI      +26
     23                    pp+=strlen(BALLET_PATH)-1;
   \   00000050   0500A0E1           MOV      R0,R5
   \   00000054   1B0000EF           SWI      +27
   \   00000058   000086E0           ADD      R0,R6,R0
   \   0000005C   016040E2           SUB      R6,R0,#+1
     24                    ps+=6;
   \                     ??getSymbolicPath_4:
   \   00000060   067087E2           ADD      R7,R7,#+6
     25                    continue;
     26                  }
   \                     ??getSymbolicPath_2:
   \   00000064   0400A0E1           MOV      R0,R4
   \   00000068   1B0000EF           SWI      +27
   \   0000006C   000057E1           CMP      R7,R0
   \   00000070   9200002A           BCS      ??getSymbolicPath_5
   \   00000074   0420D7E7           LDRB     R2,[R7, +R4]
   \   00000078   010086E2           ADD      R0,R6,#+1
   \   0000007C   011087E2           ADD      R1,R7,#+1
   \   00000080   240052E3           CMP      R2,#+36
   \   00000084   8A00001A           BNE      ??getSymbolicPath_6
   \   00000088   0170A0E1           MOV      R7,R1
   \   0000008C   0410D7E7           LDRB     R1,[R7, +R4]
   \   00000090   621041E2           SUB      R1,R1,#+98
   \   00000094   130051E3           CMP      R1,#+19
   \   00000098   8100008A           BHI      ??getSymbolicPath_7
   \   0000009C   012F8FE2           ADR      R2,??getSymbolicPath_0
   \   000000A0   0120D2E7           LDRB     R2,[R2, R1]
   \   000000A4   02F18FE0           ADD      PC,PC,R2, LSL #+2
   \                     ??getSymbolicPath_0:
   \   000000A8   047E247E           DC8      +4,+126,+36,+126
   \   000000AC   7E7E7E7E           DC8      +126,+126,+126,+126
   \   000000B0   7E7E7E7E           DC8      +126,+126,+126,+126
   \   000000B4   7E35187E           DC8      +126,+53,+24,+126
   \   000000B8   415C6F67           DC8      +65,+92,+111,+103
   \                     ??getSymbolicPath_8:
   \   000000BC   040087E0           ADD      R0,R7,R4
   \   000000C0   0100D0E5           LDRB     R0,[R0, #+1]
   \   000000C4   610050E3           CMP      R0,#+97
   \   000000C8   DDFFFF0A           BEQ      ??getSymbolicPath_3
     27                  if (cFileName[ps+1]=='o') // bookmakrs
   \   000000CC   040087E0           ADD      R0,R7,R4
   \   000000D0   0100D0E5           LDRB     R0,[R0, #+1]
   \   000000D4   6F0050E3           CMP      R0,#+111
   \   000000D8   0B00001A           BNE      ??getSymbolicPath_9
     28                  {
     29                    strcpy(path+pp,BALLET_PATH);
   \   000000DC   0510A0E1           MOV      R1,R5
   \   000000E0   080086E0           ADD      R0,R6,R8
   \   000000E4   1A0000EF           SWI      +26
     30                    pp+=strlen(BALLET_PATH);
   \   000000E8   0500A0E1           MOV      R0,R5
   \   000000EC   1B0000EF           SWI      +27
   \   000000F0   066080E0           ADD      R6,R0,R6
     31                    strcpy(path+pp,"Bookmarks");
   \   000000F4   0910A0E1           MOV      R1,R9
   \   000000F8   080086E0           ADD      R0,R6,R8
   \   000000FC   1A0000EF           SWI      +26
     32                    pp+=9;
   \   00000100   096086E2           ADD      R6,R6,#+9
     33                    ps+=9;
   \   00000104   097087E2           ADD      R7,R7,#+9
     34                    continue;
   \   00000108   D5FFFFEA           B        ??getSymbolicPath_2
     35                  }
     36                case 'p':
     37                   {
     38                    strcpy(path + pp, BALLET_PATH);
   \                     ??getSymbolicPath_9:
   \   0000010C   0510A0E1           MOV      R1,R5
   \   00000110   080086E0           ADD      R0,R6,R8
   \   00000114   1A0000EF           SWI      +26
     39                    pp+=strlen(BALLET_PATH);
   \   00000118   0500A0E1           MOV      R0,R5
   \   0000011C   1B0000EF           SWI      +27
   \   00000120   066080E0           ADD      R6,R0,R6
     40                    strcpy(path+pp,"Bookmarks\\oms_pages");
   \   00000124   0C1089E2           ADD      R1,R9,#+12
   \   00000128   080086E0           ADD      R0,R6,R8
   \   0000012C   1A0000EF           SWI      +26
     41                    pp+=19;
   \   00000130   136086E2           ADD      R6,R6,#+19
     42                    ps+=5;
   \   00000134   057087E2           ADD      R7,R7,#+5
     43                    continue;
   \   00000138   C9FFFFEA           B        ??getSymbolicPath_2
     44                  }
     45                case 'd': // date
     46                  {
     47                    TDate d;
     48                    GetDateTime(&d,NULL);
   \                     ??getSymbolicPath_10:
   \   0000013C   0010A0E3           MOV      R1,#+0
   \   00000140   0D00A0E1           MOV      R0,SP
   \   00000144   B40000EF           SWI      +180
     49                    char c[9];
     50                    sprintf(c,"%.4d%.2d%.2d",d.year,d.month,d.day);
   \   00000148   0500DDE5           LDRB     R0,[SP, #+5]
   \   0000014C   201089E2           ADD      R1,R9,#+32
   \   00000150   01002DE9           PUSH     {R0}
   \   00000154   0830DDE5           LDRB     R3,[SP, #+8]
   \   00000158   04209DE5           LDR      R2,[SP, #+4]
   \   0000015C   14008DE2           ADD      R0,SP,#+20
   \   00000160   160000EF           SWI      +22
     51                    strcpy(path+pp,c);
   \   00000164   14108DE2           ADD      R1,SP,#+20
   \   00000168   080086E0           ADD      R0,R6,R8
   \   0000016C   1A0000EF           SWI      +26
     52                    pp+=8;
   \   00000170   086086E2           ADD      R6,R6,#+8
     53                    ps+=4;
   \                     ??getSymbolicPath_11:
   \   00000174   047087E2           ADD      R7,R7,#+4
     54                    continue;
   \   00000178   04D08DE2           ADD      SP,SP,#+4
   \   0000017C   B8FFFFEA           B        ??getSymbolicPath_2
     55                  }
     56                case 'o': // omscache
     57                  {
     58                    strcpy(path+pp,BALLET_PATH);
   \                     ??getSymbolicPath_12:
   \   00000180   0510A0E1           MOV      R1,R5
   \   00000184   080086E0           ADD      R0,R6,R8
   \   00000188   1A0000EF           SWI      +26
     59                    pp+=strlen(BALLET_PATH);
   \   0000018C   0500A0E1           MOV      R0,R5
   \   00000190   1B0000EF           SWI      +27
   \   00000194   066080E0           ADD      R6,R0,R6
     60                    strcpy(path+pp,"OmsCache");
   \   00000198   301089E2           ADD      R1,R9,#+48
   \                     ??getSymbolicPath_13:
   \   0000019C   080086E0           ADD      R0,R6,R8
   \   000001A0   1A0000EF           SWI      +26
     61                    pp+=8;
   \   000001A4   086086E2           ADD      R6,R6,#+8
     62                    ps+=8;
   \   000001A8   087087E2           ADD      R7,R7,#+8
     63                    continue;
   \   000001AC   ACFFFFEA           B        ??getSymbolicPath_2
     64                  }
     65                case 'r':
     66                  if (cFileName[ps+1]=='e') // resources
   \                     ??getSymbolicPath_14:
   \   000001B0   040087E0           ADD      R0,R7,R4
   \   000001B4   0100D0E5           LDRB     R0,[R0, #+1]
   \   000001B8   650050E3           CMP      R0,#+101
   \   000001BC   0B00001A           BNE      ??getSymbolicPath_15
     67                  {
     68                    strcpy(path+pp,BALLET_PATH);
   \   000001C0   0510A0E1           MOV      R1,R5
   \   000001C4   080086E0           ADD      R0,R6,R8
   \   000001C8   1A0000EF           SWI      +26
     69                    pp+=strlen(BALLET_PATH);
   \   000001CC   0500A0E1           MOV      R0,R5
   \   000001D0   1B0000EF           SWI      +27
   \   000001D4   066080E0           ADD      R6,R0,R6
     70          //          strcpy(path+pp,"Resouces");
     71          //          pp+=9;
     72                    ps+=9;
     73                    strcpy(path+pp,"img");
   \   000001D8   3F1F8FE2           ADR      R1,??getSymbolicPath_1  ;; "img"
   \   000001DC   080086E0           ADD      R0,R6,R8
   \   000001E0   1A0000EF           SWI      +26
   \   000001E4   097087E2           ADD      R7,R7,#+9
     74                    pp+=3;
   \   000001E8   036086E2           ADD      R6,R6,#+3
     75                    continue;
   \   000001EC   9CFFFFEA           B        ??getSymbolicPath_2
     76                  }
     77                  if (cFileName[ps+1]=='o') // root
   \                     ??getSymbolicPath_15:
   \   000001F0   040087E0           ADD      R0,R7,R4
   \   000001F4   0100D0E5           LDRB     R0,[R0, #+1]
   \   000001F8   6F0050E3           CMP      R0,#+111
   \   000001FC   0600001A           BNE      ??getSymbolicPath_16
     78                  {
     79                    memcpy(path+pp,BALLET_PATH,2);
   \   00000200   0220A0E3           MOV      R2,#+2
   \   00000204   0510A0E1           MOV      R1,R5
   \   00000208   080086E0           ADD      R0,R6,R8
   \   0000020C   1E0100EF           SWI      +286
     80                    pp+=2;
   \   00000210   026086E2           ADD      R6,R6,#+2
     81                    ps+=4;
   \   00000214   047087E2           ADD      R7,R7,#+4
     82                    continue;
   \   00000218   91FFFFEA           B        ??getSymbolicPath_2
     83                  }
     84                case 's': // search
     85                  {
     86                    strcpy(path + pp, BALLET_PATH);
   \                     ??getSymbolicPath_16:
   \   0000021C   0510A0E1           MOV      R1,R5
   \   00000220   080086E0           ADD      R0,R6,R8
   \   00000224   1A0000EF           SWI      +26
     87                    pp+=strlen(BALLET_PATH);
   \   00000228   0500A0E1           MOV      R0,R5
   \   0000022C   1B0000EF           SWI      +27
   \   00000230   066080E0           ADD      R6,R0,R6
     88                    strcpy(path+pp,"Search");
   \   00000234   3C1089E2           ADD      R1,R9,#+60
   \   00000238   080086E0           ADD      R0,R6,R8
   \   0000023C   1A0000EF           SWI      +26
     89                    pp+=6;
   \   00000240   066086E2           ADD      R6,R6,#+6
     90                    ps+=6;
   \   00000244   85FFFFEA           B        ??getSymbolicPath_4
     91                    continue;
     92                  }
     93                case 'u': // urlcache
     94                  {
     95                    strcpy(path+pp,BALLET_PATH);
   \                     ??getSymbolicPath_17:
   \   00000248   0510A0E1           MOV      R1,R5
   \   0000024C   080086E0           ADD      R0,R6,R8
   \   00000250   1A0000EF           SWI      +26
     96                    pp+=strlen(BALLET_PATH);
   \   00000254   0500A0E1           MOV      R0,R5
   \   00000258   1B0000EF           SWI      +27
   \   0000025C   066080E0           ADD      R6,R0,R6
     97                    strcpy(path+pp,"UrlCache");
   \   00000260   441089E2           ADD      R1,R9,#+68
   \   00000264   CCFFFFEA           B        ??getSymbolicPath_13
     98                    pp+=8;
     99                    ps+=8;
    100                    continue;
    101                  }
    102                case 't': // time
    103                  {
    104                    TTime t;
    105                    GetDateTime(NULL,&t);
   \                     ??getSymbolicPath_18:
   \   00000268   0D10A0E1           MOV      R1,SP
   \   0000026C   0000A0E3           MOV      R0,#+0
   \   00000270   B40000EF           SWI      +180
    106                    char c[7];
    107                    sprintf(c,"%.2d%.2d%.2d",t.hour,t.min,t.sec);
   \   00000274   0200DDE5           LDRB     R0,[SP, #+2]
   \   00000278   501089E2           ADD      R1,R9,#+80
   \   0000027C   01002DE9           PUSH     {R0}
   \   00000280   0530DDE5           LDRB     R3,[SP, #+5]
   \   00000284   0420DDE5           LDRB     R2,[SP, #+4]
   \   00000288   0C008DE2           ADD      R0,SP,#+12
   \   0000028C   160000EF           SWI      +22
    108                    strcpy(path+pp,c);
   \   00000290   0C108DE2           ADD      R1,SP,#+12
   \   00000294   080086E0           ADD      R0,R6,R8
   \   00000298   1A0000EF           SWI      +26
    109                    pp+=6;
   \   0000029C   066086E2           ADD      R6,R6,#+6
    110                    ps+=4;
   \   000002A0   B3FFFFEA           B        ??getSymbolicPath_11
    111                    continue;
    112                  }
    113                default:
    114                  path[pp++]='$';
   \                     ??getSymbolicPath_7:
   \   000002A4   2410A0E3           MOV      R1,#+36
   \   000002A8   0810C6E7           STRB     R1,[R6, +R8]
   \                     ??getSymbolicPath_19:
   \   000002AC   0060A0E1           MOV      R6,R0
   \   000002B0   6BFFFFEA           B        ??getSymbolicPath_2
    115                }
    116              }
    117              else
    118              {
    119                path[pp++]=cFileName[ps++];
   \                     ??getSymbolicPath_6:
   \   000002B4   0820C6E7           STRB     R2,[R6, +R8]
   \   000002B8   0170A0E1           MOV      R7,R1
   \   000002BC   FAFFFFEA           B        ??getSymbolicPath_19
    120              }
    121            }
    122            path[pp]=0;
   \                     ??getSymbolicPath_5:
   \   000002C0   0000A0E3           MOV      R0,#+0
   \   000002C4   0800C6E7           STRB     R0,[R6, +R8]
    123            make_dirs(path);
   \   000002C8   0800A0E1           MOV      R0,R8
   \   000002CC   ........           BL       make_dirs
    124            return path;
   \   000002D0   0800A0E1           MOV      R0,R8
   \   000002D4   1CD08DE2           ADD      SP,SP,#+28
   \   000002D8   F083BDE8           POP      {R4-R9,PC}       ;; return
   \                     ??getSymbolicPath_1:
   \   000002DC   696D6700           DC8      "img"
   \   000002E0   ........           DC32     BALLET_PATH
   \   000002E4   ........           DC32     `?<Constant "Bookmarks">`
    125          }
    126          

   \                                 In segment CODE, align 4, keep-with-next
    127          int ballet_fexists(const char * cFileName)
    128          {
   \                     ballet_fexists:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   2CD04DE2           SUB      SP,SP,#+44
    129            char * path = getSymbolicPath(cFileName);
   \   00000008   ........           BL       getSymbolicPath
   \   0000000C   0040A0E1           MOV      R4,R0
    130            FSTATS fs;
    131            unsigned int ul;
    132            int res = (GetFileStats(path, &fs, &ul)!=-1);
   \   00000010   0D20A0E1           MOV      R2,SP
   \   00000014   04108DE2           ADD      R1,SP,#+4
   \   00000018   840000EF           SWI      +132
   \   0000001C   010070E3           CMN      R0,#+1
   \   00000020   0150A013           MOVNE    R5,#+1
   \   00000024   0050A003           MOVEQ    R5,#+0
    133            mfree(path);
   \   00000028   0400A0E1           MOV      R0,R4
   \   0000002C   150000EF           SWI      +21
    134            return res;
   \   00000030   0500A0E1           MOV      R0,R5
   \   00000034   2CD08DE2           ADD      SP,SP,#+44
   \   00000038   3080BDE8           POP      {R4,R5,PC}       ;; return
    135          }
    136          

   \                                 In segment CODE, align 4, keep-with-next
    137          int make_dirs(const char * path)
    138          {
   \                     make_dirs:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   41DF4DE2           SUB      SP,SP,#+260
    139            int c, i = 0;
   \   00000008   0040A0E3           MOV      R4,#+0
    140            unsigned int io_error;
    141            char tmp[256], * s;
    142            strcpy(tmp, path);
   \   0000000C   0010A0E1           MOV      R1,R0
   \   00000010   04008DE2           ADD      R0,SP,#+4
   \   00000014   1A0000EF           SWI      +26
    143            s = tmp;
   \   00000018   04508DE2           ADD      R5,SP,#+4
   \   0000001C   070000EA           B        ??make_dirs_0
    144            while((s = strchr(s, '\\')))
    145            {
    146              s++;
    147              c = *s;
   \                     ??make_dirs_1:
   \   00000020   0160F5E5           LDRB     R6,[R5, #+1]!
    148              *s = 0;
   \   00000024   0000A0E3           MOV      R0,#+0
   \   00000028   0000C5E5           STRB     R0,[R5, #+0]
    149              i += mkdir(tmp, &io_error);
   \   0000002C   0D10A0E1           MOV      R1,SP
   \   00000030   04008DE2           ADD      R0,SP,#+4
   \   00000034   100000EF           SWI      +16
   \   00000038   044080E0           ADD      R4,R0,R4
    150              *s = c;
   \   0000003C   0060C5E5           STRB     R6,[R5, #+0]
    151            }
   \                     ??make_dirs_0:
   \   00000040   5C10A0E3           MOV      R1,#+92
   \   00000044   0500A0E1           MOV      R0,R5
   \   00000048   180000EF           SWI      +24
   \   0000004C   0050B0E1           MOVS     R5,R0
   \   00000050   F2FFFF1A           BNE      ??make_dirs_1
    152            return (i);
   \   00000054   0400A0E1           MOV      R0,R4
   \   00000058   41DF8DE2           ADD      SP,SP,#+260
   \   0000005C   7080BDE8           POP      {R4-R6,PC}       ;; return
    153          }

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Bookmarks">`:
   \   00000000   426F6F6B6D61       DC8 "Bookmarks"
   \              726B7300    
   \   0000000A   0000               DC8 0, 0
   \   0000000C   426F6F6B6D61       DC8 "Bookmarks\\oms_pages"
   \              726B735C6F6D
   \              735F70616765
   \              7300        
   \   00000020   252E3464252E       DC8 "%.4d%.2d%.2d"
   \              3264252E3264
   \              00          
   \   0000002D   000000             DC8 0, 0, 0
   \   00000030   4F6D73436163       DC8 "OmsCache"
   \              686500      
   \   00000039   000000             DC8 0, 0, 0
   \   0000003C   536561726368       DC8 "Search"
   \              00          
   \   00000043   00                 DC8 0
   \   00000044   55726C436163       DC8 "UrlCache"
   \              686500      
   \   0000004D   000000             DC8 0, 0, 0
   \   00000050   252E3264252E       DC8 "%.2d%.2d%.2d"
   \              3264252E3264
   \              00          
   \   0000005D   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \   00000000   696D6700           DC8 "img"

   Maximum stack usage in bytes:

     Function        CSTACK
     --------        ------
     ballet_fexists     56
     getSymbolicPath    60
     make_dirs         276


   Segment part sizes:

     Function/Label          Bytes
     --------------          -----
     getSymbolicPath          744
     ballet_fexists            60
     make_dirs                 96
     ?<Constant "Bookmarks">   96
     ?<Constant "img">          4
      Others                   12

 
 912 bytes in segment CODE
 100 bytes in segment DATA_C
 
 900 bytes of CODE  memory (+ 12 bytes shared)
 100 bytes of CONST memory

Errors: none
Warnings: none
