//////////////////////////////////////////////////////////////////////////////
//                                                                           /
// IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION   01/Jul/2011  14:14:59 /
// Copyright 1999-2005 IAR Systems. All rights reserved.                     /
//                                                                           /
//    Cpu mode        =  interwork                                           /
//    Endian          =  little                                              /
//    Stack alignment =  4                                                   /
//    Source file     =  C:\arm\Change_the_text_v2\c_empty.c                 /
//    Command line    =  C:\arm\Change_the_text_v2\c_empty.c -D E71v45 -lC   /
//                       C:\arm\Change_the_text_v2\E71v45\List\ -la          /
//                       C:\arm\Change_the_text_v2\E71v45\List\ -o           /
//                       C:\arm\Change_the_text_v2\E71v45\Obj\ -z9           /
//                       --no_unroll --no_clustering --cpu_mode thumb        /
//                       --endian little --cpu ARM926EJ-S --stack_align 4    /
//                       --interwork -e --fpu None --dlib_config             /
//                       "C:\arm2\Embedded Workbench 4.0                     /
//                       Evaluation\ARM\LIB\dl5tptinl8n.h" -I                /
//                       "C:\arm2\Embedded Workbench 4.0                     /
//                       Evaluation\ARM\INC\" --inline_threshold=2           /
//    List file       =  C:\arm\Change_the_text_v2\E71v45\List\c_empty.s79   /
//                                                                           /
//                                                                           /
//////////////////////////////////////////////////////////////////////////////

        NAME c_empty

        RTMODEL "StackAlign4", "USED"
        RTMODEL "__cpu_mode", "__pcs__interwork"
        RTMODEL "__data_model", "absolute"
        RTMODEL "__endian", "little"
        RTMODEL "__rt_version", "6"

        RSEG CSTACK:DATA:NOROOT(2)

        MULTWEAK ??IsDisabledIconBar??rT
        PUBLIC IsDisabledIconBar
        FUNCTION IsDisabledIconBar,0201H
        
        CFI Names cfiNames0
        CFI StackFrame CFA R13 HUGEDATA
        CFI Resource R0:32, R1:32, R2:32, R3:32, R4:32, R5:32, R6:32, R7:32
        CFI Resource R8:32, R9:32, R10:32, R11:32, R12:32, CPSR:32, R13:32
        CFI Resource R14:32, SPSR:32
        CFI VirtualResource ?RET:32
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 2
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon0
        
        
        CFI Common cfiCommon1 Using cfiNames0
        CFI CodeAlign 4
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon1
        
IsDisabledIconBar   SYMBOL "IsDisabledIconBar"
??IsDisabledIconBar??rT SYMBOL "??rT", IsDisabledIconBar


        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock0 Using cfiCommon0
        CFI NoFunction
        THUMB
??IsDisabledIconBar??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock0
        REQUIRE IsDisabledIconBar

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock1 Using cfiCommon1
        CFI Function IsDisabledIconBar
        ARM
IsDisabledIconBar:
        LDR      R0,??IsDisabledIconBar_0  ;; 0xffffffffa8e9509c
        LDR      R0,[R0, #+0]
        LDRB     R0,[R0, #+24]
        BX       LR               ;; return
        DATA
??IsDisabledIconBar_0:
        DC32     0xffffffffa8e9509c
        CFI EndBlock cfiBlock1

        END
// 
// 24 bytes in segment CODE
// 
// 20 bytes of CODE memory (+ 4 bytes shared)
//
//Errors: none
//Warnings: none
