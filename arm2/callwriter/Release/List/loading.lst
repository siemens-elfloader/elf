##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION    27/Aug/2009  10:33:31 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  C:\arm\nsd\loading.c                                 #
#    Command line    =  C:\arm\nsd\loading.c -D NEWSGOLD -D ELKA -lC         #
#                       C:\arm\nsd\Release\List\ -o C:\arm\nsd\Release\Obj\  #
#                       -s9 --no_unroll --no_clustering --cpu_mode arm       #
#                       --endian little --cpu ARM926EJ-S --stack_align 4     #
#                       --interwork -e --fpu None -I "C:\arm2\Embedded       #
#                       Workbench 4.0 Evaluation\ARM\INC\"                   #
#                       --inline_threshold=2                                 #
#    List file       =  C:\arm\nsd\Release\List\loading.lst                  #
#    Object file     =  C:\arm\nsd\Release\Obj\loading.r79                   #
#                                                                            #
#                                                                            #
##############################################################################

C:\arm\nsd\loading.c
      1          char path[64];
      2          
      3          static void tmethod0(MAIN_GUI *data)
                                      ^
Error[Pe020]: identifier "MAIN_GUI" is undefined
      4          { 
      5            WSHDR *ws = AllocWS(256);
                   ^
Error[Pe020]: identifier "WSHDR" is undefined

    WSHDR *ws = AllocWS(256);
           ^
"C:\arm\nsd\loading.c",5  Error[Pe020]: identifier "ws" is undefined

    WSHDR *ws = AllocWS(256);
                ^
"C:\arm\nsd\loading.c",5  Warning[Pe223]: function "AllocWS" declared
          implicitly
      6            sprintf(path,"%s%s",folder,"img\\fon.png");
                   ^
Warning[Pe223]: function "sprintf" declared implicitly

    sprintf(path,"%s%s",folder,"img\\fon.png");
                        ^
"C:\arm\nsd\loading.c",6  Error[Pe020]: identifier "folder" is undefined
      7            DrawImg(0,0,(int)path);
                   ^
Warning[Pe223]: function "DrawImg" declared implicitly
      8            wsprintf(ws,"%t %t\0","Уровень:",name);
                   ^
Warning[Pe223]: function "wsprintf" declared implicitly

    wsprintf(ws,"%t %t\0","Уровень:",name);
                                     ^
"C:\arm\nsd\loading.c",8  Error[Pe020]: identifier "name" is undefined
      9            DrawString(ws,5,10,ScreenW()-5,28,FONT_SMALL_BOLD,0,GOLD,GetPaletteAdrByColorIndex(23)); 
                   ^
Warning[Pe223]: function "DrawString" declared implicitly

    DrawString(ws,5,10,ScreenW()-5,28,FONT_SMALL_BOLD,0,GOLD,GetPaletteAdrByColorIndex(23)); 
                       ^
"C:\arm\nsd\loading.c",9  Warning[Pe223]: function "ScreenW" declared
          implicitly

    DrawString(ws,5,10,ScreenW()-5,28,FONT_SMALL_BOLD,0,GOLD,GetPaletteAdrByColorIndex(23)); 
                                      ^
"C:\arm\nsd\loading.c",9  Error[Pe020]: identifier "FONT_SMALL_BOLD" is
          undefined

    DrawString(ws,5,10,ScreenW()-5,28,FONT_SMALL_BOLD,0,GOLD,GetPaletteAdrByColorIndex(23)); 
                                                        ^
"C:\arm\nsd\loading.c",9  Error[Pe020]: identifier "GOLD" is undefined

    DrawString(ws,5,10,ScreenW()-5,28,FONT_SMALL_BOLD,0,GOLD,GetPaletteAdrByColorIndex(23)); 
                                                             ^
"C:\arm\nsd\loading.c",9  Warning[Pe223]: function "GetPaletteAdrByColorIndex"
          declared implicitly
     10            FreeWS(ws);
                   ^
Warning[Pe223]: function "FreeWS" declared implicitly
     11          }
     12          
     13          static void tmethod1(MAIN_GUI *data,void *(*malloc_adr)(int))
                                      ^
Error[Pe020]: identifier "MAIN_GUI" is undefined
     14          {
     15            data->gui.state=1;
                   ^
Error[Pe132]: expression must have pointer-to-struct-or-union type
     16          }
     17          
     18          static void tmethod2(MAIN_GUI *data,void (*mfree_adr)(void *))
                                      ^
Error[Pe020]: identifier "MAIN_GUI" is undefined
     19          {
     20            data->gui.state=0;
                   ^
Error[Pe132]: expression must have pointer-to-struct-or-union type
     21          }
     22          
     23          static void tmethod3(MAIN_GUI *data,void *(*malloc_adr)(int),void (*mfree_adr)(void *))
                                      ^
Error[Pe020]: identifier "MAIN_GUI" is undefined
     24          {
     25            DisableIDLETMR();
                   ^
Warning[Pe223]: function "DisableIDLETMR" declared implicitly
     26            data->gui.state=2;
                   ^
Error[Pe132]: expression must have pointer-to-struct-or-union type
     27          }
     28          
     29          static void tmethod4(MAIN_GUI *data,void (*mfree_adr)(void *))
                                      ^
Error[Pe020]: identifier "MAIN_GUI" is undefined
     30          {
     31            if (data->gui.state!=2)
                       ^
Error[Pe132]: expression must have pointer-to-struct-or-union type
     32              return;
     33            data->gui.state=1;
                   ^
Error[Pe132]: expression must have pointer-to-struct-or-union type
     34          }
     35          
     36          static int tmethod5(MAIN_GUI *data,GUI_MSG *msg)
                                     ^
Error[Pe020]: identifier "MAIN_GUI" is undefined

  static int tmethod5(MAIN_GUI *data,GUI_MSG *msg)
                                     ^
"C:\arm\nsd\loading.c",36  Error[Pe020]: identifier "GUI_MSG" is undefined
     37          {
     38            if (msg->gbsmsg->msg==KEY_DOWN)
                       ^
Error[Pe132]: expression must have pointer-to-struct-or-union type

    if (msg->gbsmsg->msg==KEY_DOWN)
                          ^
"C:\arm\nsd\loading.c",38  Error[Pe020]: identifier "KEY_DOWN" is undefined
     39            {
     40              switch(msg->gbsmsg->submess)
                            ^
Error[Pe132]: expression must have pointer-to-struct-or-union type
     41              {
     42              case ENTER_BUTTON: case '5': case RED_BUTTON: case RIGHT_SOFT: return(1);
                          ^
Error[Pe020]: identifier "ENTER_BUTTON" is undefined

      case ENTER_BUTTON: case '5': case RED_BUTTON: case RIGHT_SOFT: return(1);
                                        ^
"C:\arm\nsd\loading.c",42  Error[Pe020]: identifier "RED_BUTTON" is undefined

      case ENTER_BUTTON: case '5': case RED_BUTTON: case RIGHT_SOFT: return(1);
                                                         ^
"C:\arm\nsd\loading.c",42  Error[Pe020]: identifier "RIGHT_SOFT" is undefined
     43              }
     44              
     45            }
     46            return(0);
     47          }
     48          
     49          static int tmethod8(void){return(0);}
     50          
     51          static int tmethod9(void){return(0);}
     52          
     53          extern void kill_data(void *p, void (*func_p)(void *));
     54          static const void * const gui_tmethods[11]={
     55            (void *)tmethod0,  //Redraw
     56            (void *)tmethod1,  //Create
     57            (void *)tmethod2,  //Close
     58            (void *)tmethod3,  //Focus
     59            (void *)tmethod4,  //Unfocus
     60            (void *)tmethod5,  //OnKey
     61            0,
     62            (void *)kill_data, //method7, //Destroy
     63            (void *)tmethod8,
     64            (void *)tmethod9,
     65            0
     66          };
     67          
     68          const RECT Canvt={0,0,0,0};
                       ^
Error[Pe020]: identifier "RECT" is undefined
     69          
     70          
     71          
     72          int load()
     73          {
     74            MAIN_GUI *main_gui=malloc(sizeof(MAIN_GUI));
                   ^
Error[Pe020]: identifier "MAIN_GUI" is undefined

    MAIN_GUI *main_gui=malloc(sizeof(MAIN_GUI));
              ^
"C:\arm\nsd\loading.c",74  Error[Pe020]: identifier "main_gui" is undefined

    MAIN_GUI *main_gui=malloc(sizeof(MAIN_GUI));
                       ^
"C:\arm\nsd\loading.c",74  Warning[Pe223]: function "malloc" declared
          implicitly
     75            zeromem(main_gui,sizeof(MAIN_GUI));
                   ^
Warning[Pe223]: function "zeromem" declared implicitly
     76            main_gui->gui.canvas=(void *)(&Canvt);
     77            main_gui->gui.flag30=2;
     78            main_gui->gui.methods=(void *)gui_tmethods;
     79            main_gui->gui.item_ll.data_mfree=(void (*)(void *))mfree_adr();
                                                                      ^
Warning[Pe223]: function "mfree_adr" declared implicitly
     80            return(CreateGUI(main_gui));
                          ^
Warning[Pe223]: function "CreateGUI" declared implicitly
     81          }

Errors: 27
Warnings: 13
