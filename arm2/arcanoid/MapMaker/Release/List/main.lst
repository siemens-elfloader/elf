##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION    07/Feb/2009  15:01:13 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  D:\создание эльфов\мои проекты\3D1_new\3D_1\MapMaker #
#                       \main.c                                              #
#    Command line    =  "D:\создание эльфов\мои проекты\3D1_new\3D_1\MapMake #
#                       r\main.c" -D NEWSGOLD -D ELKA -lC "D:\создание       #
#                       эльфов\мои проекты\3D1_new\3D_1\MapMaker\Release\Lis #
#                       t\" -o "D:\создание эльфов\мои                       #
#                       проекты\3D1_new\3D_1\MapMaker\Release\Obj\" -s9      #
#                       --cpu_mode arm --endian little --cpu ARM926EJ-S      #
#                       --stack_align 4 --interwork -e --fpu None            #
#                       --dlib_config "D:\Embedded Workbench 4.0             #
#                       Evaluation\ARM\LIB\dl5tpainl8n.h" -I "D:\Embedded    #
#                       Workbench 4.0 Evaluation\ARM\INC\"                   #
#                       --inline_threshold=2                                 #
#    List file       =  D:\создание эльфов\мои проекты\3D1_new\3D_1\MapMaker #
#                       \Release\List\main.lst                               #
#    Object file     =  D:\создание эльфов\мои проекты\3D1_new\3D_1\MapMaker #
#                       \Release\Obj\main.r79                                #
#                                                                            #
#                                                                            #
##############################################################################

D:\создание эльфов\мои проекты\3D1_new\3D_1\MapMaker\main.c
      1          #include "..\inc\swilib.h"
      2          #include "rect_patcher.h"
      3          #include "../inc/cfg_items.h"
      4          #include "conf_loader.h"
      5          #include "random.h"

   \                                 In segment DATA_C, align 4, align-sorted
   \   unsigned char const __data rndtable[170]
   \                     rndtable:
   \   00000000   00086D956B4B       DC8 0, 8, 109, 149, 107, 75, 140, 16, 66, 74, 21, 47, 80, 154, 27, 128
   \              8C10424A152F
   \              509A1B80    
   \   00000010   A1594D245F6E       DC8 161, 89, 77, 36, 95, 110, 85, 48, 140, 22, 79, 50, 28, 52, 140, 120
   \              55308C164F32
   \              1C348C78    
   \   00000020   44913E465B98       DC8 68, 145, 62, 70, 91, 152, 149, 104, 25, 141, 4, 81, 145, 42, 39
   \              9568198D0451
   \              912A27      
   \   0000002F   9C5D7A008F46       DC8 156, 93, 122, 0, 143, 70, 46, 163, 53, 163, 109, 168, 135, 2, 25
   \              2EA335A36DA8
   \              870219      
   \   0000003E   5C14918A4D45       DC8 92, 20, 145, 138, 77, 69, 166, 78, 166, 113, 94, 161, 41, 50, 49
   \              A64EA6715EA1
   \              293231      
   \   0000004D   6FA4463C0225       DC8 111, 164, 70, 60, 2, 37, 75, 136, 156, 11, 56, 42, 146, 138, 73
   \              4B889C0B382A
   \              928A49      
   \   0000005C   924D3D62876A       DC8 146, 77, 61, 98, 135, 106, 63, 86, 96, 113, 101, 170, 113, 80, 108
   \              3F56607165AA
   \              71506C      
   \   0000006B   07814F6B70A6       DC8 7, 129, 79, 107, 112, 166, 103, 24, 120, 58, 60, 82, 128, 3, 66
   \              6718783A3C52
   \              800342      
   \   0000007A   8F9151A32D3F       DC8 143, 145, 81, 163, 45, 63, 90, 168, 114, 59, 33, 159, 95, 28, 139
   \              5AA8723B219F
   \              5F1C8B      
   \   00000089   7B627D0F4636       DC8 123, 98, 125, 15, 70, 54, 14, 109, 71, 17, 161, 93, 87, 138, 20, 52
   \              0E6D4711A15D
   \              578A1434    
   \   00000099   7B1A24112E34       DC8 123, 26, 36, 17, 46, 52, 76, 31, 84, 37, 165, 106, 98, 43, 39, 145
   \              4C1F5425A56A
   \              622B2791    
   \   000000A9   540000             DC8 84, 0, 0

   \                                 In segment DATA_Z, align 1, align-sorted
   \   unsigned char __data rndindex
   \                     rndindex:
   \   00000000                      DS8 1

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void Randomize()
   \                     Randomize:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   10D04DE2           SUB      SP,SP,#+16
   \   00000008   0D10A0E1           MOV      R1,SP
   \   0000000C   08008DE2           ADD      R0,SP,#+8
   \   00000010   B40000EF           SWI      +180
   \   00000014   0210DDE5           LDRB     R1,[SP, #+2]
   \   00000018   04009FE5           LDR      R0,??Randomize_0  ;; rndindex
   \   0000001C   0010C0E5           STRB     R1,[R0, #+0]
   \   00000020   0F80BDE8           POP      {R0-R3,PC}       ;; return
   \                     ??Randomize_0:
   \   00000024   ........           DC32     rndindex
      6          
      7          
      8          //-----------------------------------------------------//
      9          //Ёт стремные переменные,но они нужны в любом проекте :)

   \                                 In segment DATA_C, align 4, align-sorted
     10          const int minus11=-11;
   \                     minus11:
   \   00000000   F5FFFFFF           DC32 -11

   \                                 In segment DATA_Z, align 4, align-sorted
     11          unsigned short maincsm_name_body[140];
   \                     maincsm_name_body:
   \   00000000                      DS8 280
     12          

   \                                 In segment DATA_Z, align 4, align-sorted
     13          unsigned int MAINCSM_ID = 0;
   \                     MAINCSM_ID:
   \   00000000                      DS8 4

   \                                 In segment DATA_Z, align 4, align-sorted
     14          unsigned int MAINGUI_ID = 0;
   \                     MAINGUI_ID:
   \   00000000                      DS8 4
     15          typedef struct
     16          {
     17            CSM_RAM csm;
     18            int gui_id;
     19          }MAIN_CSM;
     20          
     21          typedef struct
     22          {
     23            GUI gui;
     24            WSHDR *ws1;
     25            WSHDR *ws2;
     26            WSHDR *ws5;
     27            int i1;
     28          }MAIN_GUI;
     29          
     30          //ќбъ€вл€ем переменные из конфига
     31          extern void InitConfig();
     32          
     33          //----------------------------------//
     34          

   \                                 In segment DATA_Z, align 4, align-sorted
     35          GBSTMR mytmr;
   \                     mytmr:
   \   00000000                      DS8 16
     36          
     37          

   \                                 In segment DATA_Z, align 4, align-sorted
     38          TDate date; TTime time;
   \                     `date`:
   \   00000000                      DS8 8
   \                     time:
   \   00000008                      DS8 8
     39          #ifndef NO_LOG

   \                                 In segment CODE, align 4, keep-with-next
     40          void Tlog (char *string)
     41          {
   \                     Tlog:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
     42            int logfile=fopenA("4:\\zbin\\3d\\MapMaker.log",A_ReadWrite+A_TXT+A_Append+A_Create,P_READ+P_WRITE,0);
   \   00000004   C4409FE5           LDR      R4,??Tlog_0      ;; `?<Constant "4:\\\\zbin\\\\3d\\\\MapMaker.log">`
     43            char *data=malloc(4096);
     44            GetDateTime(&date,&time); 
   \   00000008   C4709FE5           LDR      R7,??Tlog_0+0x4  ;; `date`
   \   0000000C   0080A0E1           MOV      R8,R0
   \   00000010   0030A0E3           MOV      R3,#+0
   \   00000014   602FA0E3           MOV      R2,#+384
   \   00000018   0A10A0E3           MOV      R1,#+10
   \   0000001C   411C81E3           ORR      R1,R1,#0x4100
   \   00000020   0400A0E1           MOV      R0,R4
   \   00000024   0A0000EF           SWI      +10
   \   00000028   0050A0E1           MOV      R5,R0
   \   0000002C   400DA0E3           MOV      R0,#+4096
   \   00000030   140000EF           SWI      +20
   \   00000034   0060A0E1           MOV      R6,R0
   \   00000038   081087E2           ADD      R1,R7,#+8
   \   0000003C   0700A0E1           MOV      R0,R7
   \   00000040   B40000EF           SWI      +180
     45            sprintf(data,">%d:%02d:%02d/%02d-%02d-%04d< >kernel<   %s\n",time.hour,time.min,time.sec,date.day, date.month,date.year,string);
   \   00000044   00012DE9           PUSH     {R8}
   \   00000048   000097E5           LDR      R0,[R7, #+0]
   \   0000004C   181084E2           ADD      R1,R4,#+24
   \   00000050   01002DE9           PUSH     {R0}
   \   00000054   0400D7E5           LDRB     R0,[R7, #+4]
   \   00000058   01002DE9           PUSH     {R0}
   \   0000005C   0500D7E5           LDRB     R0,[R7, #+5]
   \   00000060   01002DE9           PUSH     {R0}
   \   00000064   0A00D7E5           LDRB     R0,[R7, #+10]
   \   00000068   01002DE9           PUSH     {R0}
   \   0000006C   0930D7E5           LDRB     R3,[R7, #+9]
   \   00000070   0820D7E5           LDRB     R2,[R7, #+8]
   \   00000074   0600A0E1           MOV      R0,R6
   \   00000078   160000EF           SWI      +22
     46            lseek(logfile, 0x0, S_END, 0, 0);
   \   0000007C   0000A0E3           MOV      R0,#+0
   \   00000080   01002DE9           PUSH     {R0}
   \   00000084   0030A0E3           MOV      R3,#+0
   \   00000088   0220A0E3           MOV      R2,#+2
   \   0000008C   0010A0E1           MOV      R1,R0
   \   00000090   0500A0E1           MOV      R0,R5
   \   00000094   0F0000EF           SWI      +15
     47            fwrite(logfile,data,strlen(data),0);
   \   00000098   0600A0E1           MOV      R0,R6
   \   0000009C   1B0000EF           SWI      +27
   \   000000A0   0030A0E3           MOV      R3,#+0
   \   000000A4   0020A0E1           MOV      R2,R0
   \   000000A8   0610A0E1           MOV      R1,R6
   \   000000AC   0500A0E1           MOV      R0,R5
   \   000000B0   0C0000EF           SWI      +12
     48            mfree(data);
   \   000000B4   0600A0E1           MOV      R0,R6
   \   000000B8   150000EF           SWI      +21
     49            fclose(logfile,0);
   \   000000BC   0010A0E3           MOV      R1,#+0
   \   000000C0   0500A0E1           MOV      R0,R5
   \   000000C4   0D0000EF           SWI      +13
     50          }
   \   000000C8   18D08DE2           ADD      SP,SP,#+24
   \   000000CC   F081BDE8           POP      {R4-R8,PC}       ;; return
   \                     ??Tlog_0:
   \   000000D0   ........           DC32     `?<Constant "4:\\\\zbin\\\\3d\\\\MapMaker.log">`
   \   000000D4   ........           DC32     `date`
     51          #else 
     52          void Tlog (char *string){}
     53          #endif
     54          
     55          
     56          

   \                                 In segment CODE, align 4, keep-with-next
     57          static void OnRedraw(MAIN_GUI *data){ }
   \                     OnRedraw:
   \   00000000   1EFF2FE1           BX       LR               ;; return
     58          
     59          
     60          typedef struct
     61          {
     62            char sign[5];
     63            short w;
     64            short h;
     65            short posX;
     66            short posY;
     67            short tNum;
     68            short offset;
     69            char *data;
     70          }MAP;
     71          
     72          

   \                                 In segment CODE, align 4, keep-with-next
     73          void checkMap()
     74          {
   \                     checkMap:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
     75            Tlog("start checkMap...");
   \   00000004   ........           LDR      R4,??DataTable1  ;; `?<Constant "height=%d">`
   \   00000008   440084E2           ADD      R0,R4,#+68
   \   0000000C   ........           BL       Tlog
     76            char *lg=malloc(128);
   \   00000010   8000A0E3           MOV      R0,#+128
   \   00000014   140000EF           SWI      +20
   \   00000018   0050A0E1           MOV      R5,R0
     77            MAP *map=malloc(sizeof(MAP));
   \   0000001C   1800A0E3           MOV      R0,#+24
   \   00000020   140000EF           SWI      +20
   \   00000024   0060A0E1           MOV      R6,R0
     78            int file=fopenA("4:\\zbin\\3d\\maps\\start.map",A_ReadOnly+A_BIN,P_READ,0);
   \   00000028   0030A0E3           MOV      R3,#+0
   \   0000002C   8020A0E3           MOV      R2,#+128
   \   00000030   801CA0E3           MOV      R1,#+32768
   \   00000034   580084E2           ADD      R0,R4,#+88
   \   00000038   0A0000EF           SWI      +10
   \   0000003C   0070A0E1           MOV      R7,R0
     79            
     80            fread(file,(void *)&map->sign,5,0);
   \   00000040   0030A0E3           MOV      R3,#+0
   \   00000044   0520A0E3           MOV      R2,#+5
   \   00000048   0610A0E1           MOV      R1,R6
   \   0000004C   0B0000EF           SWI      +11
     81            fread(file,(void *)&map->w,sizeof(short),0);
   \   00000050   0030A0E3           MOV      R3,#+0
   \   00000054   0220A0E3           MOV      R2,#+2
   \   00000058   061086E2           ADD      R1,R6,#+6
   \   0000005C   0700A0E1           MOV      R0,R7
   \   00000060   0B0000EF           SWI      +11
     82            fread(file,(void *)&map->h,sizeof(short),0);
   \   00000064   0030A0E3           MOV      R3,#+0
   \   00000068   0220A0E3           MOV      R2,#+2
   \   0000006C   081086E2           ADD      R1,R6,#+8
   \   00000070   0700A0E1           MOV      R0,R7
   \   00000074   0B0000EF           SWI      +11
     83            fread(file,(void *)&map->posX,sizeof(short),0);
   \   00000078   0030A0E3           MOV      R3,#+0
   \   0000007C   0220A0E3           MOV      R2,#+2
   \   00000080   0A1086E2           ADD      R1,R6,#+10
   \   00000084   0700A0E1           MOV      R0,R7
   \   00000088   0B0000EF           SWI      +11
     84            fread(file,(void *)&map->posY,sizeof(short),0);
   \   0000008C   0030A0E3           MOV      R3,#+0
   \   00000090   0220A0E3           MOV      R2,#+2
   \   00000094   0C1086E2           ADD      R1,R6,#+12
   \   00000098   0700A0E1           MOV      R0,R7
   \   0000009C   0B0000EF           SWI      +11
     85            fread(file,(void *)&map->tNum,sizeof(short),0);
   \   000000A0   0030A0E3           MOV      R3,#+0
   \   000000A4   0220A0E3           MOV      R2,#+2
   \   000000A8   0E1086E2           ADD      R1,R6,#+14
   \   000000AC   0700A0E1           MOV      R0,R7
   \   000000B0   0B0000EF           SWI      +11
     86            fread(file,(void *)&map->offset,sizeof(short),0);
   \   000000B4   0030A0E3           MOV      R3,#+0
   \   000000B8   0220A0E3           MOV      R2,#+2
   \   000000BC   101086E2           ADD      R1,R6,#+16
   \   000000C0   0700A0E1           MOV      R0,R7
   \   000000C4   0B0000EF           SWI      +11
     87            fclose(file,0);
   \   000000C8   0010A0E3           MOV      R1,#+0
   \   000000CC   0700A0E1           MOV      R0,R7
   \   000000D0   0D0000EF           SWI      +13
     88            
     89            
     90            sprintf(lg,"sign=%s",map->sign);Tlog(lg);
   \   000000D4   0620A0E1           MOV      R2,R6
   \   000000D8   741084E2           ADD      R1,R4,#+116
   \   000000DC   0500A0E1           MOV      R0,R5
   \   000000E0   160000EF           SWI      +22
   \   000000E4   0500A0E1           MOV      R0,R5
   \   000000E8   ........           BL       Tlog
     91            sprintf(lg,"width=%d",map->w);Tlog(lg);
   \   000000EC   F620D6E1           LDRSH    R2,[R6, #+6]
   \   000000F0   7C1084E2           ADD      R1,R4,#+124
   \   000000F4   0500A0E1           MOV      R0,R5
   \   000000F8   160000EF           SWI      +22
   \   000000FC   0500A0E1           MOV      R0,R5
   \   00000100   ........           BL       Tlog
     92            sprintf(lg,"height=%d",map->h);Tlog(lg);
   \   00000104   F820D6E1           LDRSH    R2,[R6, #+8]
   \   00000108   0410A0E1           MOV      R1,R4
   \   0000010C   0500A0E1           MOV      R0,R5
   \   00000110   160000EF           SWI      +22
   \   00000114   0500A0E1           MOV      R0,R5
   \   00000118   ........           BL       Tlog
     93            sprintf(lg,"posX=%d",map->posX);Tlog(lg);
   \   0000011C   FA20D6E1           LDRSH    R2,[R6, #+10]
   \   00000120   881084E2           ADD      R1,R4,#+136
   \   00000124   0500A0E1           MOV      R0,R5
   \   00000128   160000EF           SWI      +22
   \   0000012C   0500A0E1           MOV      R0,R5
   \   00000130   ........           BL       Tlog
     94            sprintf(lg,"posY=%d",map->posY);Tlog(lg);
   \   00000134   FC20D6E1           LDRSH    R2,[R6, #+12]
   \   00000138   901084E2           ADD      R1,R4,#+144
   \   0000013C   0500A0E1           MOV      R0,R5
   \   00000140   160000EF           SWI      +22
   \   00000144   0500A0E1           MOV      R0,R5
   \   00000148   ........           BL       Tlog
     95            sprintf(lg,"tNum=%d",map->tNum);Tlog(lg);
   \   0000014C   FE20D6E1           LDRSH    R2,[R6, #+14]
   \   00000150   981084E2           ADD      R1,R4,#+152
   \   00000154   0500A0E1           MOV      R0,R5
   \   00000158   160000EF           SWI      +22
   \   0000015C   0500A0E1           MOV      R0,R5
   \   00000160   ........           BL       Tlog
     96            sprintf(lg,"offset=%d",map->offset);Tlog(lg);
   \   00000164   F021D6E1           LDRSH    R2,[R6, #+16]
   \   00000168   A01084E2           ADD      R1,R4,#+160
   \   0000016C   0500A0E1           MOV      R0,R5
   \   00000170   160000EF           SWI      +22
   \   00000174   0500A0E1           MOV      R0,R5
   \   00000178   ........           BL       Tlog
     97            
     98            mfree(map);
   \   0000017C   0600A0E1           MOV      R0,R6
   \   00000180   150000EF           SWI      +21
     99            mfree(lg);
   \   00000184   0500A0E1           MOV      R0,R5
   \   00000188   150000EF           SWI      +21
    100            Tlog("map successfully checking");
   \   0000018C   AC0084E2           ADD      R0,R4,#+172
   \   00000190   ........           BL       Tlog
    101          }
   \   00000194   F080BDE8           POP      {R4-R7,PC}       ;; return
    102          
    103          
    104          
    105          

   \                                 In segment CODE, align 4, keep-with-next
    106          MAP *initMap()
    107          {
   \                     initMap:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
    108            Tlog("start initMap...");
   \   00000004   D4409FE5           LDR      R4,??initMap_0   ;; `?<Constant "start initMap...">`
    109            MAP *map=malloc(sizeof(MAP));
    110            memcpy(&map->sign,"3Dmap",5);
    111            map->w=30;
    112            map->h=30;
    113            map->posX=15;
    114            map->posY=15;
    115            map->tNum=1;
   \   00000008   0160A0E3           MOV      R6,#+1
   \   0000000C   0400A0E1           MOV      R0,R4
   \   00000010   ........           BL       Tlog
   \   00000014   1800A0E3           MOV      R0,#+24
   \   00000018   140000EF           SWI      +20
   \   0000001C   0050A0E1           MOV      R5,R0
   \   00000020   0520A0E3           MOV      R2,#+5
   \   00000024   141084E2           ADD      R1,R4,#+20
   \   00000028   1E0100EF           SWI      +286
   \   0000002C   1E00A0E3           MOV      R0,#+30
   \   00000030   B600C5E1           STRH     R0,[R5, #+6]
   \   00000034   B800C5E1           STRH     R0,[R5, #+8]
   \   00000038   0F00A0E3           MOV      R0,#+15
   \   0000003C   BA00C5E1           STRH     R0,[R5, #+10]
   \   00000040   BC00C5E1           STRH     R0,[R5, #+12]
   \   00000044   BE60C5E1           STRH     R6,[R5, #+14]
    116            map->offset=17;
   \   00000048   1100A0E3           MOV      R0,#+17
   \   0000004C   B001C5E1           STRH     R0,[R5, #+16]
    117            map->data=malloc(map->w*map->h);
   \   00000050   F600D5E1           LDRSH    R0,[R5, #+6]
   \   00000054   0010A0E1           MOV      R1,R0
   \   00000058   910000E0           MUL      R0,R1,R0
   \   0000005C   140000EF           SWI      +20
   \   00000060   140085E5           STR      R0,[R5, #+20]
    118            
    119            for(int y=0;y<map->h;y++)
   \   00000064   F810D5E1           LDRSH    R1,[R5, #+8]
   \   00000068   0000A0E3           MOV      R0,#+0
   \   0000006C   00C0A0E3           MOV      R12,#+0
   \   00000070   010051E3           CMP      R1,#+1
   \   00000074   110000AA           BGE      ??initMap_1
    120            {
    121              for(int x=0;x<map->w;x++)
    122              {
    123                map->data[y*map->w+x]=0;
    124              }
    125            }
    126            
    127            for(int i=10;i<20;i++)
   \                     ??initMap_2:
   \   00000078   0A00A0E3           MOV      R0,#+10
    128            {
    129             map->data[i] = 1;
   \                     ??initMap_3:
   \   0000007C   141095E5           LDR      R1,[R5, #+20]
   \   00000080   0160C0E7           STRB     R6,[R0, +R1]
    130            }
   \   00000084   010080E2           ADD      R0,R0,#+1
   \   00000088   140050E3           CMP      R0,#+20
   \   0000008C   FAFFFFBA           BLT      ??initMap_3
    131            Tlog("initMap completed");
   \   00000090   1C0084E2           ADD      R0,R4,#+28
   \   00000094   ........           BL       Tlog
    132            return map;
   \   00000098   0500A0E1           MOV      R0,R5
   \   0000009C   7080BDE8           POP      {R4-R6,PC}       ;; return
   \                     ??initMap_4:
   \   000000A0   912023E0           MLA      R3,R1,R0,R2
   \   000000A4   141095E5           LDR      R1,[R5, #+20]
   \   000000A8   012082E2           ADD      R2,R2,#+1
   \   000000AC   01C0C3E7           STRB     R12,[R3, +R1]
   \                     ??initMap_5:
   \   000000B0   F610D5E1           LDRSH    R1,[R5, #+6]
   \   000000B4   010052E1           CMP      R2,R1
   \   000000B8   F8FFFFBA           BLT      ??initMap_4
   \                     ??initMap_6:
   \   000000BC   010080E2           ADD      R0,R0,#+1
   \                     ??initMap_1:
   \   000000C0   F810D5E1           LDRSH    R1,[R5, #+8]
   \   000000C4   010050E1           CMP      R0,R1
   \   000000C8   EAFFFFAA           BGE      ??initMap_2
   \   000000CC   F610D5E1           LDRSH    R1,[R5, #+6]
   \   000000D0   0020A0E3           MOV      R2,#+0
   \   000000D4   010051E3           CMP      R1,#+1
   \   000000D8   F4FFFFAA           BGE      ??initMap_5
   \   000000DC   F6FFFFEA           B        ??initMap_6
   \                     ??initMap_0:
   \   000000E0   ........           DC32     `?<Constant "start initMap...">`
    133          }
    134          
    135          

   \                                 In segment CODE, align 4, keep-with-next
    136          void saveMap()
    137          {
   \                     saveMap:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
    138            Tlog("start saveMap...");
   \   00000004   ........           LDR      R4,??DataTable1  ;; `?<Constant "height=%d">`
   \   00000008   0C0084E2           ADD      R0,R4,#+12
   \   0000000C   ........           BL       Tlog
    139            MAP *m=NULL;
    140            m=initMap();
   \   00000010   ........           BL       initMap
   \   00000014   0050A0E1           MOV      R5,R0
    141            int f;
    142            if((f=fopenA("4:\\zbin\\3d\\maps\\start.map",A_WriteOnly+A_BIN+A_Create+A_Truncate,P_WRITE,0))==-1) return;
   \   00000018   0030A0E3           MOV      R3,#+0
   \   0000001C   402FA0E3           MOV      R2,#+256
   \   00000020   0110A0E3           MOV      R1,#+1
   \   00000024   831C81E3           ORR      R1,R1,#0x8300
   \   00000028   580084E2           ADD      R0,R4,#+88
   \   0000002C   0A0000EF           SWI      +10
   \   00000030   0060A0E1           MOV      R6,R0
   \   00000034   010076E3           CMN      R6,#+1
   \   00000038   7080BD08           POPEQ    {R4-R6,PC}
    143            fwrite(f,&m->sign,5,0);
   \   0000003C   0030A0E3           MOV      R3,#+0
   \   00000040   0520A0E3           MOV      R2,#+5
   \   00000044   0510A0E1           MOV      R1,R5
   \   00000048   0C0000EF           SWI      +12
    144            fwrite(f,&m->w,2,0);
   \   0000004C   0030A0E3           MOV      R3,#+0
   \   00000050   0220A0E3           MOV      R2,#+2
   \   00000054   061085E2           ADD      R1,R5,#+6
   \   00000058   0600A0E1           MOV      R0,R6
   \   0000005C   0C0000EF           SWI      +12
    145            fwrite(f,&m->h,2,0);
   \   00000060   0030A0E3           MOV      R3,#+0
   \   00000064   0220A0E3           MOV      R2,#+2
   \   00000068   081085E2           ADD      R1,R5,#+8
   \   0000006C   0600A0E1           MOV      R0,R6
   \   00000070   0C0000EF           SWI      +12
    146            fwrite(f,&m->posX,2,0);
   \   00000074   0030A0E3           MOV      R3,#+0
   \   00000078   0220A0E3           MOV      R2,#+2
   \   0000007C   0A1085E2           ADD      R1,R5,#+10
   \   00000080   0600A0E1           MOV      R0,R6
   \   00000084   0C0000EF           SWI      +12
    147            fwrite(f,&m->posY,2,0);
   \   00000088   0030A0E3           MOV      R3,#+0
   \   0000008C   0220A0E3           MOV      R2,#+2
   \   00000090   0C1085E2           ADD      R1,R5,#+12
   \   00000094   0600A0E1           MOV      R0,R6
   \   00000098   0C0000EF           SWI      +12
    148            fwrite(f,&m->tNum,2,0);
   \   0000009C   0030A0E3           MOV      R3,#+0
   \   000000A0   0220A0E3           MOV      R2,#+2
   \   000000A4   0E1085E2           ADD      R1,R5,#+14
   \   000000A8   0600A0E1           MOV      R0,R6
   \   000000AC   0C0000EF           SWI      +12
    149            fwrite(f,&m->offset,2,0);
   \   000000B0   0030A0E3           MOV      R3,#+0
   \   000000B4   0220A0E3           MOV      R2,#+2
   \   000000B8   101085E2           ADD      R1,R5,#+16
   \   000000BC   0600A0E1           MOV      R0,R6
   \   000000C0   0C0000EF           SWI      +12
    150            fwrite(f,&m->data,m->w*m->h,0);
   \   000000C4   F600D5E1           LDRSH    R0,[R5, #+6]
   \   000000C8   F810D5E1           LDRSH    R1,[R5, #+8]
   \   000000CC   0030A0E3           MOV      R3,#+0
   \   000000D0   910002E0           MUL      R2,R1,R0
   \   000000D4   141085E2           ADD      R1,R5,#+20
   \   000000D8   0600A0E1           MOV      R0,R6
   \   000000DC   0C0000EF           SWI      +12
    151            fclose(f,0);
   \   000000E0   0010A0E3           MOV      R1,#+0
   \   000000E4   0600A0E1           MOV      R0,R6
   \   000000E8   0D0000EF           SWI      +13
    152            
    153            Tlog("-all reading");
   \   000000EC   200084E2           ADD      R0,R4,#+32
   \   000000F0   ........           BL       Tlog
    154            
    155            mfree(m->data);
   \   000000F4   140095E5           LDR      R0,[R5, #+20]
   \   000000F8   150000EF           SWI      +21
    156            mfree(m);
   \   000000FC   0500A0E1           MOV      R0,R5
   \   00000100   150000EF           SWI      +21
    157            Tlog("saveMap completed");
   \   00000104   300084E2           ADD      R0,R4,#+48
   \   00000108   ........           BL       Tlog
    158            checkMap();
   \   0000010C   ........           BL       checkMap
    159          }
   \   00000110   7080BDE8           POP      {R4-R6,PC}       ;; return
    160          
    161          
    162          
    163          
    164          
    165          
    166          
    167          

   \                                 In segment CODE, align 4, keep-with-next
    168          static void onCreate(MAIN_GUI *data, void *(*malloc_adr)(int))//“ут делаем что либо при создании гуи
    169          {
   \                     onCreate:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    170          #ifdef ELKA//≈сли елка,то отключаем иконбар
    171            DisableIconBar(1);
   \   00000008   0100A0E3           MOV      R0,#+1
   \   0000000C   3B0200EF           SWI      +571
    172          #endif
    173            data->ws1=AllocWS(256);//¬ыдел€ем пам€ть под строку
   \   00000010   400FA0E3           MOV      R0,#+256
   \   00000014   250100EF           SWI      +293
   \   00000018   340084E5           STR      R0,[R4, #+52]
    174            data->ws5=AllocWS(256);
   \   0000001C   400FA0E3           MOV      R0,#+256
   \   00000020   250100EF           SWI      +293
    175            wsprintf(data->ws5,"%t","You Loooser!!!");
   \   00000024   18209FE5           LDR      R2,??onCreate_0+0x4  ;; `?<Constant "You Loooser!!!">`
   \   00000028   3C0084E5           STR      R0,[R4, #+60]
   \   0000002C   031F8FE2           ADR      R1,??onCreate_0  ;; "%t"
   \   00000030   240100EF           SWI      +292
    176            data->gui.state=1;
   \   00000034   0100A0E3           MOV      R0,#+1
   \   00000038   0C00C4E5           STRB     R0,[R4, #+12]
    177          }
   \   0000003C   1080BDE8           POP      {R4,PC}          ;; return
   \                     ??onCreate_0:
   \   00000040   25740000           DC8      "%t",+0
   \   00000044   ........           DC32     `?<Constant "You Loooser!!!">`
    178          

   \                                 In segment CODE, align 4, keep-with-next
    179          static void onClose(MAIN_GUI *data, void (*mfree_adr)(void *))//—десь делаем что нить при закрытии гуи:)
    180          {
   \                     onClose:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    181            data->gui.state=0;
   \   00000008   0000A0E3           MOV      R0,#+0
   \   0000000C   0C00C4E5           STRB     R0,[R4, #+12]
    182            FreeWS(data->ws1);//например, освобождаем пам€ть
   \   00000010   340094E5           LDR      R0,[R4, #+52]
   \   00000014   290100EF           SWI      +297
    183            FreeWS(data->ws5);
   \   00000018   3C0094E5           LDR      R0,[R4, #+60]
   \   0000001C   290100EF           SWI      +297
    184          }
   \   00000020   1080BDE8           POP      {R4,PC}          ;; return
    185          

   \                                 In segment CODE, align 4, keep-with-next
    186          static void onFocus(MAIN_GUI *data, void *(*malloc_adr)(int), void (*mfree_adr)(void *))//≈сли гуи на верху то оп€ть же делаем что нужно
    187          {
   \                     onFocus:
   \   00000000   00402DE9           PUSH     {LR}
    188            data->gui.state=2;
   \   00000004   0210A0E3           MOV      R1,#+2
   \   00000008   0C10C0E5           STRB     R1,[R0, #+12]
    189            DisableIDLETMR();//отключаем таймер,иначе через 2 минуты эльф закроетс€
   \   0000000C   7F0100EF           SWI      +383
    190          }
   \   00000010   0080BDE8           POP      {PC}             ;; return
    191          

   \                                 In segment CODE, align 4, keep-with-next
    192          static void onUnfocus(MAIN_GUI *data, void (*mfree_adr)(void *))//а если гуи не вверху,то можно закрыть эльф например:)
    193          {
    194            if (data->gui.state!=2) return;
   \                     onUnfocus:
   \   00000000   0C10D0E5           LDRB     R1,[R0, #+12]
   \   00000004   020051E3           CMP      R1,#+2
    195            data->gui.state=1;
   \   00000008   0110A003           MOVEQ    R1,#+1
   \   0000000C   0C10C005           STRBEQ   R1,[R0, #+12]
    196          }
   \   00000010   1EFF2FE1           BX       LR               ;; return
    197          

   \                                 In segment CODE, align 4, keep-with-next
    198          static int OnKey(MAIN_GUI *data, GUI_MSG *msg)
    199          {
   \                     OnKey:
   \   00000000   00402DE9           PUSH     {LR}
    200            if (msg->gbsmsg->msg==KEY_DOWN)
   \   00000004   040091E5           LDR      R0,[R1, #+4]
   \   00000008   9320A0E3           MOV      R2,#+147
   \   0000000C   041090E5           LDR      R1,[R0, #+4]
   \   00000010   402F82E3           ORR      R2,R2,#0x100
   \   00000014   020051E1           CMP      R1,R2
   \   00000018   0600001A           BNE      ??OnKey_0
    201            {
    202              if(msg->gbsmsg->submess==RIGHT_SOFT) return 1;
   \   0000001C   081090E5           LDR      R1,[R0, #+8]
   \   00000020   040051E3           CMP      R1,#+4
   \   00000024   0100A003           MOVEQ    R0,#+1
   \   00000028   0080BD08           POPEQ    {PC}
    203              if(msg->gbsmsg->submess==LEFT_SOFT) {saveMap();return 0;}
   \   0000002C   010051E3           CMP      R1,#+1
   \   00000030   0000001A           BNE      ??OnKey_0
   \   00000034   ........           BL       saveMap
    204            }
    205          
    206            
    207           
    208            return(0);
   \                     ??OnKey_0:
   \   00000038   0000A0E3           MOV      R0,#+0
   \   0000003C   0080BDE8           POP      {PC}             ;; return
    209          }
    210          
    211          
    212          
    213          
    214          
    215          
    216          
    217          
    218          
    219          
    220          
    221          extern void kill_data(void *p, void (*func_p)(void *));//Ёта функци€ убивает эльф и освобождает пам€ть
    222          

   \                                 In segment CODE, align 4, keep-with-next
    223          int method8(void){return(0);}
   \                     method8:
   \   00000000   0000A0E3           MOV      R0,#+0
   \   00000004   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
    224          int method9(void){return(0);}
   \                     method9:
   \   00000000   0000A0E3           MOV      R0,#+0
   \   00000004   1EFF2FE1           BX       LR               ;; return
    225          
    226          const void * const gui_methods[11]={
    227            (void *)OnRedraw,
    228            (void *)onCreate,
    229            (void *)onClose,
    230            (void *)onFocus,
    231            (void *)onUnfocus,
    232            (void *)OnKey,
    233            0,
    234            (void *)kill_data,
    235            (void *)method8,
    236            (void *)method9,
    237            0
    238          };
    239          

   \                                 In segment CODE, align 4, keep-with-next
    240          static void maincsm_oncreate(CSM_RAM *data)//¬ызываетс€ при открытии эльфа,делаем что нужно
    241          {
   \                     maincsm_oncreate:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    242            //тут хитрые махинации дл€ получени€ ид гу€ чтобы мона было с ним манипулировать
    243            static const RECT Canvas={0,0,0,0};
    244            MAIN_GUI *main_gui=malloc(sizeof(MAIN_GUI));
   \   00000008   4400A0E3           MOV      R0,#+68
   \   0000000C   140000EF           SWI      +20
   \   00000010   0050A0E1           MOV      R5,R0
    245            MAIN_CSM*csm=(MAIN_CSM*)data;
    246            zeromem(main_gui,sizeof(MAIN_GUI));
   \   00000014   4410A0E3           MOV      R1,#+68
   \   00000018   1D0100EF           SWI      +285
    247            patch_rect((RECT*)&Canvas,0,YDISP,ScreenW()-1,ScreenH()-1);
   \   0000001C   898100EF           SWI      +33161
   \   00000020   0060A0E1           MOV      R6,R0
   \   00000024   888100EF           SWI      +33160
   \   00000028   50209FE5           LDR      R2,??maincsm_oncreate_0  ;; ??Canvas
   \   0000002C   011046E2           SUB      R1,R6,#+1
   \   00000030   010040E2           SUB      R0,R0,#+1
   \   00000034   0060A0E3           MOV      R6,#+0
   \   00000038   B060C2E1           STRH     R6,[R2, #+0]
   \   0000003C   1830A0E3           MOV      R3,#+24
   \   00000040   B230C2E1           STRH     R3,[R2, #+2]
   \   00000044   B400C2E1           STRH     R0,[R2, #+4]
   \   00000048   B610C2E1           STRH     R1,[R2, #+6]
    248            main_gui->gui.canvas=(void *)(&Canvas);
   \   0000004C   002085E5           STR      R2,[R5, #+0]
    249            main_gui->gui.flag30=2;
   \   00000050   0200A0E3           MOV      R0,#+2
   \   00000054   300085E5           STR      R0,[R5, #+48]
    250            main_gui->gui.methods=(void *)gui_methods;
   \   00000058   080082E2           ADD      R0,R2,#+8
   \   0000005C   040085E5           STR      R0,[R5, #+4]
    251            main_gui->gui.item_ll.data_mfree=(void (*)(void *))mfree_adr();
   \   00000060   158000EF           SWI      +32789
   \   00000064   200085E5           STR      R0,[R5, #+32]
    252            csm->csm.state=0;
   \   00000068   106084E5           STR      R6,[R4, #+16]
    253            csm->csm.unk1=0;
   \   0000006C   146084E5           STR      R6,[R4, #+20]
    254            csm->gui_id=CreateGUI(main_gui);
   \   00000070   0500A0E1           MOV      R0,R5
   \   00000074   370100EF           SWI      +311
   \   00000078   280084E5           STR      R0,[R4, #+40]
    255          }
   \   0000007C   7080BDE8           POP      {R4-R6,PC}       ;; return
   \                     ??maincsm_oncreate_0:
   \   00000080   ........           DC32     ??Canvas

   \                                 In segment DATA_C, align 4, align-sorted
   \                     ??Canvas:
   \   00000000   000000000000       DC16 0, 0, 0, 0
   \              0000        
   \                     gui_methods:
   \   00000008   ............       DC32 OnRedraw, onCreate, onClose, onFocus, onUnfocus, OnKey, 0H
   \              ............
   \              ............
   \              ............
   \              00000000    
   \   00000024   ............       DC32 kill_data, method8, method9, 0H
   \              ............
   \              00000000    
    256          

   \                                 In segment CODE, align 4, keep-with-next
    257          void ElfKiller(void)//освобождаем все зан€тое место эльфом в оперативе
    258          {
   \                     ElfKiller:
   \   00000000   00402DE9           PUSH     {LR}
    259            extern void *ELF_BEGIN;
    260            kill_data(&ELF_BEGIN,(void (*)(void *))mfree_adr());
   \   00000004   158000EF           SWI      +32789
   \   00000008   0010A0E1           MOV      R1,R0
   \   0000000C   04009FE5           LDR      R0,??ElfKiller_0  ;; ELF_BEGIN
   \   00000010   0040BDE8           POP      {LR}             ;; Pop
   \   00000014   ........           _BF      kill_data,??kill_data??rA  ;; tailcall
   \                     ??ElfKiller_0:
   \   00000018   ........           DC32     ELF_BEGIN
    261          }
    262          
    263          

   \                                 In segment CODE, align 4, keep-with-next
    264          static void maincsm_onclose(CSM_RAM *csm)//функци€ закрыти€ эльфа,тут освобождаем памчть если нужно и т.п.
    265          {
    266            SUBPROC((void *)ElfKiller);
   \                     maincsm_onclose:
   \   00000000   08009FE5           LDR      R0,??maincsm_onclose_0  ;; ElfKiller
   \   00000004   00402DE9           PUSH     {LR}
   \   00000008   710100EF           SWI      +369
    267          }
   \   0000000C   0080BDE8           POP      {PC}             ;; return
   \                     ??maincsm_onclose_0:
   \   00000010   ........           DC32     ElfKiller
    268          
    269          
    270          #pragma inline=forced
    271          int toupper(int c)
    272          {
    273            if ((c>='a')&&(c<='z')) c+='A'-'a';
    274            return(c);
    275          }
    276          #pragma inline
    277          int strcmp_nocase(const char *s1,const char *s2)
    278          {
    279            int i;
    280            int c;
    281            while(!(i=(c=toupper(*s1++))-toupper(*s2++))) if (!c) break;
    282            return(i);
    283          }
    284          

   \                                 In segment CODE, align 4, keep-with-next
    285          static int maincsm_onmessage(CSM_RAM *data, GBS_MSG *msg)//тут вообщем протекают все сообщени€ поступаемые из эльфа так сказать:)
    286          {
   \                     maincsm_onmessage:
   \   00000000   00402DE9           PUSH     {LR}
    287            //сообщение о реконфигурации например,ипц и т.д. и т.п.
    288            MAIN_CSM *csm=(MAIN_CSM*)data;
    289            if ((msg->msg==MSG_GUI_DESTROYED)&&((int)msg->data0==csm->gui_id))
   \   00000004   042091E5           LDR      R2,[R1, #+4]
   \   00000008   0E30A0E3           MOV      R3,#+14
   \   0000000C   643C83E3           ORR      R3,R3,#0x6400
   \   00000010   030052E1           CMP      R2,R3
   \   00000014   0500001A           BNE      ??maincsm_onmessage_0
   \   00000018   0C2091E5           LDR      R2,[R1, #+12]
   \   0000001C   283090E5           LDR      R3,[R0, #+40]
   \   00000020   030052E1           CMP      R2,R3
   \   00000024   1D00001A           BNE      ??maincsm_onmessage_1
    290            {
    291              csm->csm.state=-3;
   \   00000028   0220E0E3           MVN      R2,#+2
   \   0000002C   102080E5           STR      R2,[R0, #+16]
    292            }
    293            if (msg->msg==MSG_RECONFIGURE_REQ)//≈лси была реконфигураци€,то обновл€ем настройки эльфа
   \                     ??maincsm_onmessage_0:
   \   00000030   040091E5           LDR      R0,[R1, #+4]
   \   00000034   AF20A0E3           MOV      R2,#+175
   \   00000038   DE2C82E3           ORR      R2,R2,#0xDE00
   \   0000003C   020050E1           CMP      R0,R2
   \   00000040   1600001A           BNE      ??maincsm_onmessage_1
    294            {
    295              extern const char *successed_config_filename;
    296              if (strcmp_nocase(successed_config_filename,(char *)msg->data0)==0)
   \   00000044   0C0091E5           LDR      R0,[R1, #+12]
   \   00000048   58109FE5           LDR      R1,??maincsm_onmessage_2  ;; successed_config_filename
   \   0000004C   001091E5           LDR      R1,[R1, #+0]
   \                     ??maincsm_onmessage_3:
   \   00000050   0020D1E5           LDRB     R2,[R1, #+0]
   \   00000054   610052E3           CMP      R2,#+97
   \   00000058   010000BA           BLT      ??maincsm_onmessage_4
   \   0000005C   7B0052E3           CMP      R2,#+123
   \   00000060   202042B2           SUBLT    R2,R2,#+32
   \                     ??maincsm_onmessage_4:
   \   00000064   0030D0E5           LDRB     R3,[R0, #+0]
   \   00000068   011081E2           ADD      R1,R1,#+1
   \   0000006C   610053E3           CMP      R3,#+97
   \   00000070   010000BA           BLT      ??maincsm_onmessage_5
   \   00000074   7B0053E3           CMP      R3,#+123
   \   00000078   203043B2           SUBLT    R3,R3,#+32
   \                     ??maincsm_onmessage_5:
   \   0000007C   010080E2           ADD      R0,R0,#+1
   \   00000080   033052E0           SUBS     R3,R2,R3
   \   00000084   0500001A           BNE      ??maincsm_onmessage_1
   \   00000088   000052E3           CMP      R2,#+0
   \   0000008C   EFFFFF1A           BNE      ??maincsm_onmessage_3
    297              {
    298                ShowMSG(1,(int)"конфиг обновлен!");
   \   00000090   14109FE5           LDR      R1,??maincsm_onmessage_2+0x4  ;; `?<Constant "\\352\\356\\355\\364\\350\\343 \\356\\341\\`
   \   00000094   0100A0E3           MOV      R0,#+1
   \   00000098   480100EF           SWI      +328
    299                InitConfig();
   \   0000009C   ........           _BLF     InitConfig,??InitConfig??rA
    300              }
    301            }
    302          
    303            return(1);
   \                     ??maincsm_onmessage_1:
   \   000000A0   0100A0E3           MOV      R0,#+1
   \   000000A4   0080BDE8           POP      {PC}             ;; return
   \                     ??maincsm_onmessage_2:
   \   000000A8   ........           DC32     successed_config_filename
   \   000000AC   ........           DC32     `?<Constant "\\352\\356\\355\\364\\350\\343 \\356\\341\\`
    304          }
    305          
    306          
    307          static const struct//это структура цсм,разбиратьс€ не надо:)
    308          {
    309            CSM_DESC maincsm;
    310            WSHDR maincsm_name;

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Ball Off 0.1 (c)half65">`:
   \   00000000   42616C6C204F       DC8 "Ball Off 0.1 (c)half65"
   \              666620302E31
   \              202863296861
   \              6C66363500  
   \   00000017   00                 DC8 0
   \   00000018   454C46207374       DC8 "ELF started"
   \              617274656400
   \   00000024   ............       DC32 maincsm_onmessage, maincsm_oncreate, 0, 0, 0, 0, maincsm_onclose
   \              ....00000000
   \              000000000000
   \              000000000000
   \              ........    
   \   00000040   2C0000000100       DC32 44, 1, minus11, maincsm_name_body, 55AACCCCH, 3333AA55H, 0
   \              0000........
   \              ........CCCC
   \              AA5555AA3333
   \              00000000    
   \   0000005C   8B00               DC16 139
   \   0000005E   0000               DC8 0, 0
    311          }MAINCSM =
    312          {
    313            {
    314            maincsm_onmessage,
    315            maincsm_oncreate,
    316          #ifdef NEWSGOLD
    317            0,
    318            0,
    319            0,
    320            0,
    321          #endif
    322            maincsm_onclose,
    323            sizeof(MAIN_CSM),
    324            1,
    325            &minus11
    326            },
    327            {
    328              maincsm_name_body,
    329              NAMECSM_MAGIC1,
    330              NAMECSM_MAGIC2,
    331              0x0,
    332              139
    333            }
    334          };
    335          

   \                                 In segment CODE, align 4, keep-with-next
    336          void UpdateCSMname(void)//ну собственно им€ эльфа передаваемое хтаску
    337          {
    338            wsprintf((WSHDR *)(&MAINCSM.maincsm_name),"Ball Off 0.1 (c)half65");
   \                     UpdateCSMname:
   \   00000000   ........           LDR      R0,??DataTable3  ;; `?<Constant "Ball Off 0.1 (c)half65">`
   \   00000004   00402DE9           PUSH     {LR}
   \   00000008   0010A0E1           MOV      R1,R0
   \   0000000C   4C0080E2           ADD      R0,R0,#+76
   \   00000010   240100EF           SWI      +292
    339          }
   \   00000014   0080BDE8           POP      {PC}             ;; return
    340          
    341          

   \                                 In segment CODE, align 4, keep-with-next
    342          int main(char *exename, char *fname)//exename-путь запускаемого эльфа, fname параметр передаваемый эльфу
    343          {
   \                     main:
   \   00000000   10402DE9           PUSH     {R4,LR}
    344            Tlog("ELF started");
   \   00000004   ........           LDR      R4,??DataTable3  ;; `?<Constant "Ball Off 0.1 (c)half65">`
   \   00000008   2CD04DE2           SUB      SP,SP,#+44
   \   0000000C   180084E2           ADD      R0,R4,#+24
   \   00000010   ........           BL       Tlog
    345            MAIN_CSM main_csm;
    346            InitConfig();//инициируем конфиг,тобишь читаем настройки из него
   \   00000014   ........           _BLF     InitConfig,??InitConfig??rA
    347            LockSched();
   \   00000018   460100EF           SWI      +326
    348            UpdateCSMname();//обновл€ем им€ дл€ хтаска
   \   0000001C   ........           BL       UpdateCSMname
    349            CreateCSM(&MAINCSM.maincsm,&main_csm,0);//создаем цсм
   \   00000020   0020A0E3           MOV      R2,#+0
   \   00000024   0D10A0E1           MOV      R1,SP
   \   00000028   240084E2           ADD      R0,R4,#+36
   \   0000002C   070100EF           SWI      +263
    350            UnlockSched();
   \   00000030   470100EF           SWI      +327
    351            return 0;
   \   00000034   0000A0E3           MOV      R0,#+0
   \   00000038   2CD08DE2           ADD      SP,SP,#+44
   \   0000003C   1080BDE8           POP      {R4,PC}          ;; return
    352          }

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   ........           DC32     `?<Constant "height=%d">`

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   ........           DC32     `?<Constant "Ball Off 0.1 (c)half65">`

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "height=%d">`:
   \   00000000   686569676874       DC8 "height=%d"
   \              3D256400    
   \   0000000A   0000               DC8 0, 0
   \   0000000C   737461727420       DC8 "start saveMap..."
   \              736176654D61
   \              702E2E2E00  
   \   0000001D   000000             DC8 0, 0, 0
   \   00000020   2D616C6C2072       DC8 "-all reading"
   \              656164696E67
   \              00          
   \   0000002D   000000             DC8 0, 0, 0
   \   00000030   736176654D61       DC8 "saveMap completed"
   \              7020636F6D70
   \              6C6574656400
   \   00000042   0000               DC8 0, 0
   \   00000044   737461727420       DC8 "start checkMap..."
   \              636865636B4D
   \              61702E2E2E00
   \   00000056   0000               DC8 0, 0
   \   00000058   343A5C7A6269       DC8 "4:\\zbin\\3d\\maps\\start.map"
   \              6E5C33645C6D
   \              6170735C7374
   \              6172742E6D61
   \              7000        
   \   00000072   0000               DC8 0, 0
   \   00000074   7369676E3D25       DC8 "sign=%s"
   \              7300        
   \   0000007C   77696474683D       DC8 "width=%d"
   \              256400      
   \   00000085   000000             DC8 0, 0, 0
   \   00000088   706F73583D25       DC8 "posX=%d"
   \              6400        
   \   00000090   706F73593D25       DC8 "posY=%d"
   \              6400        
   \   00000098   744E756D3D25       DC8 "tNum=%d"
   \              6400        
   \   000000A0   6F6666736574       DC8 "offset=%d"
   \              3D256400    
   \   000000AA   0000               DC8 0, 0
   \   000000AC   6D6170207375       DC8 "map successfully checking"
   \              636365737366
   \              756C6C792063
   \              6865636B696E
   \              6700        
   \   000000C6   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "start initMap...">`:
   \   00000000   737461727420       DC8 "start initMap..."
   \              696E69744D61
   \              702E2E2E00  
   \   00000011   000000             DC8 0, 0, 0
   \   00000014   33446D617000       DC8 "3Dmap"
   \   0000001A   0000               DC8 0, 0
   \   0000001C   696E69744D61       DC8 "initMap completed"
   \              7020636F6D70
   \              6C6574656400
   \   0000002E   0000               DC8 0, 0

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   257400             DC8 "%t"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "You Loooser!!!">`:
   \   00000000   596F75204C6F       DC8 "You Loooser!!!"
   \              6F6F73657221
   \              212100      
   \   0000000F   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\352\\356\\355\\364\\350\\343 \\356\\341\\`:
   \   00000000   EAEEEDF4E8E3       DC8 "\352\356\355\364\350\343 \356\341\355\356\342\353\345\355!"
   \              20EEE1EDEEE2
   \              EBE5ED2100  
   \   00000011   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "4:\\\\zbin\\\\3d\\\\MapMaker.log">`:
   \   00000000   343A5C7A6269       DC8 "4:\\zbin\\3d\\MapMaker.log"
   \              6E5C33645C4D
   \              61704D616B65
   \              722E6C6F6700
   \   00000018   3E25643A2530       DC8 ">%d:%02d:%02d/%02d-%02d-%04d< >kernel<   %s\012"
   \              32643A253032
   \              642F25303264
   \              2D253032642D
   \              253034643C20
   \              3E6B65726E65
   \              6C3C20202025
   \              730A00      
   \   00000045   000000             DC8 0, 0, 0

   Maximum stack usage in bytes:

     Function          CSTACK
     --------          ------
     ElfKiller             4
     OnKey                 4
     OnRedraw              0
     Randomize            20
     Tlog                 48
     UpdateCSMname         4
     checkMap             20
     initMap              16
     main                 52
     maincsm_onclose       4
     maincsm_oncreate     16
     maincsm_onmessage     4
     method8               0
     method9               0
     onClose               8
     onCreate              8
     onFocus               4
     onUnfocus             0
     saveMap              16


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     rndtable                        172
     rndindex                          1
     Randomize                        40
     minus11                           4
     maincsm_name_body               280
     MAINCSM_ID                        4
     MAINGUI_ID                        4
     mytmr                            16
     date                             16
     Tlog                            216
     OnRedraw                          4
     checkMap                        408
     initMap                         228
     saveMap                         276
     onCreate                         72
     onClose                          36
     onFocus                          20
     onUnfocus                        20
     OnKey                            64
     method8                           8
     method9                           8
     maincsm_oncreate                132
     Canvas                           52
     ElfKiller                        28
     maincsm_onclose                  20
     maincsm_onmessage               176
     ?<Constant "Ball Off 0.1 (c)half65">
                                      96
     UpdateCSMname                    24
     main                             64
     ??DataTable1                      4
     ??DataTable3                      4
     ?<Constant "height=%d">         200
     ?<Constant "start initMap...">   48
     ?<Constant "%t">                  3
     ?<Constant "You Loooser!!!">     16
     ?<Constant "\352\356\355\364\350\343 \356\341\
                                      20
     ?<Constant "4:\\zbin\\3d\\MapMaker.log">
                                      72
      Others                         112

 
 1 952 bytes in segment CODE
   683 bytes in segment DATA_C
   321 bytes in segment DATA_Z
    12 bytes in segment INITTAB
 
 1 852 bytes of CODE  memory (+ 112 bytes shared)
   683 bytes of CONST memory
   321 bytes of DATA  memory

Errors: none
Warnings: none
