##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION    15/Dec/2009  16:38:12 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  D:\programming\мои проекты\ArcanoidStudio\MapMaker\T #
#                       extInput.c                                           #
#    Command line    =  "D:\programming\мои проекты\ArcanoidStudio\MapMaker\ #
#                       TextInput.c" -D NEWSGOLD -D ELKA -lC                 #
#                       "D:\programming\мои проекты\ArcanoidStudio\MapMaker\ #
#                       Release_ELKA\List\" -o "D:\programming\мои           #
#                       проекты\ArcanoidStudio\MapMaker\Release_ELKA\Obj\"   #
#                       -s9 --cpu_mode arm --endian little --cpu ARM926EJ-S  #
#                       --stack_align 4 --interwork -e --fpu None            #
#                       --dlib_config "D:\Embedded Workbench 4.0             #
#                       Evaluation\ARM\LIB\dl5tpainl8n.h" -I "D:\Embedded    #
#                       Workbench 4.0 Evaluation\ARM\INC\"                   #
#                       --inline_threshold=2                                 #
#    List file       =  D:\programming\мои проекты\ArcanoidStudio\MapMaker\R #
#                       elease_ELKA\List\TextInput.lst                       #
#    Object file     =  D:\programming\мои проекты\ArcanoidStudio\MapMaker\R #
#                       elease_ELKA\Obj\TextInput.r79                        #
#                                                                            #
#                                                                            #
##############################################################################

D:\programming\мои проекты\ArcanoidStudio\MapMaker\TextInput.c
      1          #include "..\inc\swilib.h"
      2          
      3          
      4          
      5          extern WSHDR *e_ws;
      6          
      7          

   \                                 In segment CODE, align 4, keep-with-next
      8          void patch_inputT(INPUTDIA_DESC* inp)
      9          {
   \                     patch_inputT:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
     10            inp->rc.x=0;
   \   00000008   0000A0E3           MOV      R0,#+0
   \   0000000C   B801C4E1           STRH     R0,[R4, #+24]
     11            inp->rc.y=HeaderH()+1+YDISP;
   \   00000010   8A8100EF           SWI      +33162
   \   00000014   190080E2           ADD      R0,R0,#+25
   \   00000018   BA01C4E1           STRH     R0,[R4, #+26]
     12            inp->rc.x2=ScreenW()-1;
   \   0000001C   888100EF           SWI      +33160
   \   00000020   010040E2           SUB      R0,R0,#+1
   \   00000024   BC01C4E1           STRH     R0,[R4, #+28]
     13            inp->rc.y2=ScreenH()-SoftkeyH()-1;
   \   00000028   898100EF           SWI      +33161
   \   0000002C   0050A0E1           MOV      R5,R0
   \   00000030   8B8100EF           SWI      +33163
   \   00000034   000045E0           SUB      R0,R5,R0
   \   00000038   010040E2           SUB      R0,R0,#+1
   \   0000003C   BE01C4E1           STRH     R0,[R4, #+30]
     14          }
   \   00000040   3080BDE8           POP      {R4,R5,PC}       ;; return
     15          

   \                                 In segment CODE, align 4, keep-with-next
     16          void patch_header2T(HEADER_DESC* head)
     17          {
   \                     patch_header2T:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
     18            head->rc.x=0;
   \   00000008   0000A0E3           MOV      R0,#+0
   \   0000000C   B000C4E1           STRH     R0,[R4, #+0]
     19            head->rc.y=YDISP;
   \   00000010   1800A0E3           MOV      R0,#+24
   \   00000014   B200C4E1           STRH     R0,[R4, #+2]
     20            head->rc.x2=ScreenW()-1;
   \   00000018   888100EF           SWI      +33160
   \   0000001C   010040E2           SUB      R0,R0,#+1
   \   00000020   B400C4E1           STRH     R0,[R4, #+4]
     21            head->rc.y2=HeaderH()+YDISP;
   \   00000024   8A8100EF           SWI      +33162
   \   00000028   180080E2           ADD      R0,R0,#+24
   \   0000002C   B600C4E1           STRH     R0,[R4, #+6]
     22          }
   \   00000030   1080BDE8           POP      {R4,PC}          ;; return
     23          

   \                                 In segment DATA_I, align 4, align-sorted
     24          SOFTKEY_DESC menu_skT[]=
   \                     menu_skT:
   \   00000000                      DS8 24
   \   00000018                      REQUIRE `?<Initializer for menu_skT>`
     25          {
     26            {0x0018,0x0000,(int)"Select"},
     27            {0x0001,0x0000,(int)"Back"},
     28            {0x003D,0x0000,(int)"blabla"}
     29          };
     30          

   \                                 In segment DATA_I, align 4, align-sorted
     31          SOFTKEYSTAB menu_sktT=
   \                     menu_sktT:
   \   00000000                      DS8 8
   \   00000008                      REQUIRE `?<Initializer for menu_sktT>`
     32          {
     33            menu_skT,0
     34          };
     35          
     36          int edit_type;
     37          extern void Edit_endproc(int type,char *dest);
     38          

   \                                 In segment CODE, align 4, keep-with-next
     39          int sf_inp_onkey(GUI *data, GUI_MSG *msg)
     40          {
   \                     sf_inp_onkey:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   ACD04DE2           SUB      SP,SP,#+172
     41            if (msg->keys==0xFFF)
   \   00000008   F210D1E1           LDRSH    R1,[R1, #+2]
   \   0000000C   FF20A0E3           MOV      R2,#+255
   \   00000010   F02E82E3           ORR      R2,R2,#0xF00
   \   00000014   020051E1           CMP      R1,R2
   \   00000018   0D00001A           BNE      ??sf_inp_onkey_0
     42            {
     43              EDITCONTROL ec;
     44              ExtractEditControl(data,1,&ec);
   \   0000001C   80208DE2           ADD      R2,SP,#+128
   \   00000020   0110A0E3           MOV      R1,#+1
   \   00000024   690100EF           SWI      +361
     45              char dest[128];
     46              ws_2str(ec.pWS,dest,127);
   \   00000028   A8009DE5           LDR      R0,[SP, #+168]
   \   0000002C   7F20A0E3           MOV      R2,#+127
   \   00000030   0D10A0E1           MOV      R1,SP
   \   00000034   A30000EF           SWI      +163
     47              Edit_endproc(edit_type,dest);
   \   00000038   ........           LDR      R0,??DataTable1  ;; edit_type
   \   0000003C   0D10A0E1           MOV      R1,SP
   \   00000040   000090E5           LDR      R0,[R0, #+0]
   \   00000044   ........           _BLF     Edit_endproc,??Edit_endproc??rA
     48              return(1); //Close
   \   00000048   0100A0E3           MOV      R0,#+1
   \   0000004C   ACD08DE2           ADD      SP,SP,#+172
   \   00000050   0080BDE8           POP      {PC}
     49            }
     50            return(0);
   \                     ??sf_inp_onkey_0:
   \   00000054   0000A0E3           MOV      R0,#+0
   \   00000058   ACD08DE2           ADD      SP,SP,#+172
   \   0000005C   0080BDE8           POP      {PC}             ;; return
     51          }
     52          

   \                                 In segment CODE, align 4, keep-with-next
     53          void sf_inp_ghook(GUI *data, int cmd)
     54          {
   \                     sf_inp_ghook:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   2CD04DE2           SUB      SP,SP,#+44
     55            static SOFTKEY_DESC sk={0x0FFF,0x0000,(int)"save"};
     56            EDITCONTROL ec;
     57            if (cmd==7)
   \   00000008   070051E3           CMP      R1,#+7
   \   0000000C   0040A0E1           MOV      R4,R0
   \   00000010   0600001A           BNE      ??sf_inp_ghook_0
     58            {
     59              SetSoftKey(data,&sk,SET_SOFT_KEY_N);
   \   00000014   1C109FE5           LDR      R1,??sf_inp_ghook_1  ;; ??sk
   \   00000018   0020A0E3           MOV      R2,#+0
   \   0000001C   680100EF           SWI      +360
     60              ExtractEditControl(data,1,&ec);
   \   00000020   0D20A0E1           MOV      R2,SP
   \   00000024   0110A0E3           MOV      R1,#+1
   \   00000028   0400A0E1           MOV      R0,R4
   \   0000002C   690100EF           SWI      +361
     61            }
     62          }
   \                     ??sf_inp_ghook_0:
   \   00000030   2CD08DE2           ADD      SP,SP,#+44       ;; stack cleaning
   \   00000034   1080BDE8           POP      {R4,PC}          ;; return
   \                     ??sf_inp_ghook_1:
   \   00000038   ........           DC32     ??sk
     63          

   \                                 In segment CODE, align 4, keep-with-next
     64          void sf_inp_locret(void){}
   \                     sf_inp_locret:
   \   00000000   1EFF2FE1           BX       LR               ;; return

   \                                 In segment DATA_I, align 4, align-sorted
   \                     edit_type:
   \   00000000                      DS8 4
   \   00000004                      REQUIRE `?<Initializer for edit_type>`
     65          
     66          HEADER_DESC sf_inp_hdr={0,0,0,0,NULL,(int)"имя уровня",LGP_NULL};
   \                     sf_inp_hdr:
   \   00000004                      DS8 20
   \   00000018                      REQUIRE `?<Initializer for sf_inp_hdr>`
     67          
     68          INPUTDIA_DESC sf_inp_desc=
   \                     sf_inp_desc:
   \   00000018                      DS8 56
   \   00000050                      REQUIRE `?<Initializer for sf_inp_desc>`

   \                                 In segment DATA_I, align 4, align-sorted
   \                     ??sk:
   \   00000000                      DS8 8
   \   00000008                      REQUIRE `?<Initializer for sk>`
     69          {
     70            1,
     71            sf_inp_onkey,
     72            sf_inp_ghook,
     73            (void *)sf_inp_locret,
     74            0,
     75            &menu_sktT,
     76            {0,0,0,0},
     77            4,
     78            100,
     79            101,
     80            0,
     81            0,
     82            0x40000000
     83          };
     84          
     85          extern const char perc_t[];

   \                                 In segment CODE, align 4, keep-with-next
     86          void CreateTextEditDialog(int type,char *src,int maxlen)
     87          {
   \                     CreateTextEditDialog:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
     88            edit_type = type;
   \   00000004   ........           LDR      R6,??DataTable1  ;; edit_type
     89            void *ma=malloc_adr();
     90            void *eq;
     91            EDITCONTROL ec;
     92            
     93            PrepareEditControl(&ec);
     94            eq=AllocEQueue(ma,mfree_adr());
     95            
     96            
     97            utf8_2ws(e_ws,src,126);
   \   00000008   9C909FE5           LDR      R9,??CreateTextEditDialog_0  ;; e_ws
   \   0000000C   2CD04DE2           SUB      SP,SP,#+44
   \   00000010   0140A0E1           MOV      R4,R1
   \   00000014   0250A0E1           MOV      R5,R2
   \   00000018   000086E5           STR      R0,[R6, #+0]
   \   0000001C   148000EF           SWI      +32788
   \   00000020   0070A0E1           MOV      R7,R0
   \   00000024   0D00A0E1           MOV      R0,SP
   \   00000028   640100EF           SWI      +356
   \   0000002C   158000EF           SWI      +32789
   \   00000030   0010A0E1           MOV      R1,R0
   \   00000034   0700A0E1           MOV      R0,R7
   \   00000038   630100EF           SWI      +355
   \   0000003C   0080A0E1           MOV      R8,R0
   \   00000040   000099E5           LDR      R0,[R9, #+0]
   \   00000044   7E20A0E3           MOV      R2,#+126
   \   00000048   0410A0E1           MOV      R1,R4
   \   0000004C   E30100EF           SWI      +483
     98            ConstructEditControl(&ec,3,0x40,e_ws,maxlen);
   \   00000050   20002DE9           PUSH     {R5}
   \   00000054   003099E5           LDR      R3,[R9, #+0]
   \   00000058   4020A0E3           MOV      R2,#+64
   \   0000005C   0310A0E3           MOV      R1,#+3
   \   00000060   04008DE2           ADD      R0,SP,#+4
   \   00000064   650100EF           SWI      +357
     99            AddEditControlToEditQend(eq,&ec,ma);
   \   00000068   0720A0E1           MOV      R2,R7
   \   0000006C   04108DE2           ADD      R1,SP,#+4
   \   00000070   0800A0E1           MOV      R0,R8
   \   00000074   660100EF           SWI      +358
    100            
    101            
    102            patch_header2T(&sf_inp_hdr);
   \   00000078   040086E2           ADD      R0,R6,#+4
   \   0000007C   ........           BL       patch_header2T
    103            patch_inputT(&sf_inp_desc);
   \   00000080   180086E2           ADD      R0,R6,#+24
   \   00000084   ........           BL       patch_inputT
    104            CreateInputTextDialog(&sf_inp_desc,&sf_inp_hdr,eq,1,0);
   \   00000088   0000A0E3           MOV      R0,#+0
   \   0000008C   01002DE9           PUSH     {R0}
   \   00000090   0130A0E3           MOV      R3,#+1
   \   00000094   0820A0E1           MOV      R2,R8
   \   00000098   041086E2           ADD      R1,R6,#+4
   \   0000009C   180086E2           ADD      R0,R6,#+24
   \   000000A0   670100EF           SWI      +359
    105          }
   \   000000A4   34D08DE2           ADD      SP,SP,#+52
   \   000000A8   F083BDE8           POP      {R4-R9,PC}       ;; return
   \                     ??CreateTextEditDialog_0:
   \   000000AC   ........           DC32     e_ws

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   ........           DC32     edit_type

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for menu_skT>`:
   \   00000000   18000000           DC16 24, 0
   \   00000004   ........           DC32 `?<Constant "Select">`
   \   00000008   01000000           DC16 1, 0
   \   0000000C   ........           DC32 `?<Constant "Back">`
   \   00000010   3D000000           DC16 61, 0
   \   00000014   ........           DC32 `?<Constant "blabla">`

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for menu_sktT>`:
   \   00000000   ........0000       DC32 menu_skT, 0
   \              0000        

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for edit_type>`:
   \   00000000   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for sf_inp_hdr>`:
   \   00000004   000000000000       DC16 0, 0, 0, 0
   \              0000        
   \   0000000C   00000000....       DC32 0H, `?<Constant "\\350\\354\\377 \\363\\360\\356\\342\\355\\`
   \              ....        
   \   00000014   FFFFFF7F           DC32 2147483647
   \                     `?<Initializer for sf_inp_desc>`:
   \   00000018   01000000....       DC32 1, sf_inp_onkey, sf_inp_ghook, sf_inp_locret, 0, menu_sktT
   \              ............
   \              ........0000
   \              0000........
   \   00000030   000000000000       DC16 0, 0, 0, 0
   \              0000        
   \   00000038   040000006400       DC32 4, 100, 101, 0, 0, 1073741824
   \              000065000000
   \              000000000000
   \              000000000040

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for sk>`:
   \   00000000   FF0F0000           DC16 4095, 0
   \   00000004   ........           DC32 `?<Constant "save">`

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Select">`:
   \   00000000   53656C656374       DC8 "Select"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Back">`:
   \   00000000   4261636B00         DC8 "Back"
   \   00000005   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "blabla">`:
   \   00000000   626C61626C61       DC8 "blabla"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\350\\354\\377 \\363\\360\\356\\342\\355\\`:
   \   00000000   E8ECFF20F3F0       DC8 "\350\354\377 \363\360\356\342\355\377"
   \              EEE2EDFF00  
   \   0000000B   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "save">`:
   \   00000000   7361766500         DC8 "save"
   \   00000005   000000             DC8 0, 0, 0
    106          
    107          
    108          
    109          
    110          
    111          
    112          
    113          
    114          
    115          
    116          
    117          

   Maximum stack usage in bytes:

     Function             CSTACK
     --------             ------
     CreateTextEditDialog    80
     patch_header2T           8
     patch_inputT            12
     sf_inp_ghook            52
     sf_inp_locret            0
     sf_inp_onkey           176


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     patch_inputT                     68
     patch_header2T                   52
     menu_skT                         24
     menu_sktT                         8
     sf_inp_onkey                     96
     sf_inp_ghook                     60
     sf_inp_locret                     4
     edit_type                        80
     sk                                8
     CreateTextEditDialog            176
     ??DataTable1                      4
     ?<Initializer for menu_skT>      24
     ?<Initializer for menu_sktT>      8
     ?<Initializer for edit_type>     80
     ?<Initializer for sk>             8
     ?<Constant "Select">              8
     ?<Constant "Back">                8
     ?<Constant "blabla">              8
     ?<Constant "\350\354\377 \363\360\356\342\355\
                                      12
     ?<Constant "save">                8
      Others                          48

 
 496 bytes in segment CODE
  44 bytes in segment DATA_C
 120 bytes in segment DATA_I
 120 bytes in segment DATA_ID
  12 bytes in segment INITTAB
 
 460 bytes of CODE  memory (+ 48 bytes shared)
 164 bytes of CONST memory
 120 bytes of DATA  memory

Errors: none
Warnings: none
