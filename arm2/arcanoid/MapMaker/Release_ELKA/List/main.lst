##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION    27/Dec/2009  13:23:00 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  D:\programming\мои проекты\ArcanoidStudio\MapMaker\m #
#                       ain.c                                                #
#    Command line    =  "D:\programming\мои проекты\ArcanoidStudio\MapMaker\ #
#                       main.c" -D NEWSGOLD -D ELKA -lC "D:\programming\мои  #
#                       проекты\ArcanoidStudio\MapMaker\Release_ELKA\List\"  #
#                       -o "D:\programming\мои проекты\ArcanoidStudio\MapMak #
#                       er\Release_ELKA\Obj\" -s9 --cpu_mode arm --endian    #
#                       little --cpu ARM926EJ-S --stack_align 4 --interwork  #
#                       -e --fpu None --dlib_config "D:\Embedded Workbench   #
#                       4.0 Evaluation\ARM\LIB\dl5tpainl8n.h" -I             #
#                       "D:\Embedded Workbench 4.0 Evaluation\ARM\INC\"      #
#                       --inline_threshold=2                                 #
#    List file       =  D:\programming\мои проекты\ArcanoidStudio\MapMaker\R #
#                       elease_ELKA\List\main.lst                            #
#    Object file     =  D:\programming\мои проекты\ArcanoidStudio\MapMaker\R #
#                       elease_ELKA\Obj\main.r79                             #
#                                                                            #
#                                                                            #
##############################################################################

D:\programming\мои проекты\ArcanoidStudio\MapMaker\main.c
      1          #include "..\inc\swilib.h"
      2          #include "rect_patcher.h"
      3          //nclude "../inc/cfg_items.h"
      4          #include "conf_loader.h"
      5          
      6          
      7          //-----------------------------------------------------//
      8          //Ёт стремные переменные,но они нужны в любом проекте :)

   \                                 In segment DATA_C, align 4, align-sorted
      9          const int minus11=-11;
   \                     minus11:
   \   00000000   F5FFFFFF           DC32 -11

   \                                 In segment DATA_Z, align 4, align-sorted
     10          unsigned short maincsm_name_body[140];
   \                     maincsm_name_body:
   \   00000000                      DS8 280
     11          

   \                                 In segment DATA_Z, align 4, align-sorted
     12          unsigned int MAINCSM_ID = 0;
   \                     MAINCSM_ID:
   \   00000000                      DS8 4

   \                                 In segment DATA_Z, align 4, align-sorted
     13          unsigned int MAINGUI_ID = 0;
   \                     MAINGUI_ID:
   \   00000000                      DS8 4
     14          typedef struct
     15          {
     16            CSM_RAM csm;
     17            int gui_id;
     18          }MAIN_CSM;
     19          
     20          typedef struct
     21          {
     22            GUI gui;
     23            WSHDR *ws1;
     24            WSHDR *ws2;
     25            int i1;
     26          }MAIN_GUI;
     27          
     28          //ќбъ€вл€ем переменные из конфига
     29          extern void InitConfig();
     30          
     31          //----------------------------------//
     32          
     33          //GBSTMR timer;
     34          
     35          
     36          #ifndef ELKA
     37          #define W 133
     38          #define H 177
     39          #define FONT_SM 7
     40          #define FONT_MD 5
     41          #define FONT_LG 4
     42          #else
     43          #define W 240
     44          #define H 320
     45          #define FONT_SM 8
     46          #define FONT_MD 7
     47          #define FONT_LG 5
     48          #endif
     49          
     50          
     51          extern const char CFG_menu_frbgcolor[]; //цвет огранки фона меню
     52          extern const char CFG_menu_bgcolor[]; //цвет фона меню
     53          extern const char CFG_menu_fontcolor[]; //цвет шрифта меню
     54          extern const char CFG_menu_curcolor[]; //цвет курсора в меню
     55          extern const unsigned int CFG_menu_font; //шрифт меню
     56          extern const unsigned int CFG_menu_rounded; //коэффициент скругливани€ краев фона
     57          extern const unsigned int CFG_menu_currounded; //коэффициент скругливани€ краев фона
     58          extern const unsigned int CFG_menu_curspeed; //скорость движени€ курсора
     59          
     60          
     61          extern const char CFG_edit_bgcolor[];
     62          extern const char CFG_edit_cur_bgcolor[];
     63          extern const char CFG_edit_cur_frcolor[];
     64          extern const unsigned int CFG_edit_curround;
     65          
     66          extern const char CFG_edit_panel_bgcolor[];
     67          extern const char CFG_edit_panel_frcolor[];
     68          extern const unsigned int CFG_edit_panel_xc;
     69          extern const unsigned int CFG_edit_panel_offset;
     70          extern const unsigned int CFG_edit_panel_drawcount;
     71          
     72          extern const unsigned int CFG_edit_scaleW;
     73          extern const unsigned int CFG_edit_scaleH;
     74          
     75          extern const char CFG_edit_comment_color[];
     76          extern const unsigned int CFG_edit_comment_font;
     77          
     78          extern const unsigned int CFG_edit_font;
     79          

   \                                 In segment DATA_C, align 4, align-sorted
     80          const char perc_s[]="%s";
   \                     perc_s:
   \   00000000   257300             DC8 "%s"
   \   00000003   00                 DC8 0
   \   00000004   25736D617073       DC8 "%smaps\\level%d.log"
   \              5C6C6576656C
   \              25642E6C6F67
   \              00          
   \   00000017   00                 DC8 0

   \                                 In segment DATA_C, align 1, align-sorted
     81          const char perc_d[]="%d";
   \                     perc_d:
   \   00000000   256400             DC8 "%d"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant {70, 70, 70, 90}>`:
   \   00000000   4646465A           DC8 70, 70, 70, 90
     82          const char perc_t[]="%t";
   \                     perc_t:
   \   00000004   257400             DC8 "%t"
   \   00000007   00                 DC8 0
   \   00000008   ECE0EFEEF1EE       DC8 0ECH, 0E0H, 0EFH, 0EEH, 0F1H, 0EEH, 0E7H, 0E4H
   \              E7E4        
   \   00000010   E0E2E0EBEAEE       DC8 0E0H, 0E2H, 0E0H, 0EBH, 0EAH, 0EEH, 20H, 0E2H
   \              20E2        
   \   00000018   E5F0F1E8E820       DC8 0E5H, 0F0H, 0F1H, 0E8H, 0E8H, 20H, 30H, 2EH
   \              302E        
   \   00000020   330A20E4EBFF       DC8 33H, 0AH, 20H, 0E4H, 0EBH, 0FFH, 20H, 0C0H
   \              20C0        
   \   00000028   F0EAE0EDEEE9       DC8 0F0H, 0EAH, 0E0H, 0EDH, 0EEH, 0E9H, 0E4H, 0E0H
   \              E4E0        
   \   00000030   20E2E5F0F1E8       DC8 20H, 0E2H, 0E5H, 0F0H, 0F1H, 0E8H, 0E8H, 20H
   \              E820        
   \   00000038   312E330A2863       DC8 31H, 2EH, 33H, 0AH, 28H, 63H, 29H, 48H
   \              2948        
   \   00000040   616C66363500       DC8 61H, 6CH, 66H, 36H, 35H, 0
   \   00000046   0000               DC8 0, 0
   \   00000048   0AE2F1E520E1       DC8 "\012\342\361\345 \341\340\343\350 \350 \357\356\346\345\353\340\355\350\377 \342 404558107"
   \              E0E3E820E820
   \              EFEEE6E5EBE0
   \              EDE8FF20E220
   \              343034353538
   \              31303700    
   \   0000006A   0000               DC8 0, 0
     83          
     84          
     85          
     86          
     87          int ShowAbout=0;
     88          int menu_active=0;
     89          char ShowEdit=0;
     90          
     91          
     92          char *menu_items[]= 
     93          {
     94            "создать новый",
     95            "параметры уровн€",
     96            "сохранить",
     97            ">dump map",
     98            "настройки",
     99            "о программе",
    100            "выход"
    101          };
    102          #define NUM_MENU_ITEMS 7
    103          
    104          #define FONT_SDVIG_X 5
    105          #define FONT_SDVIG_Y 4
    106          char cur_pos = 0;
    107          

   \                                 In segment CODE, align 4, keep-with-next
    108          void DrawMenu()
    109          {
   \                     DrawMenu:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
    110            WSHDR *ws=AllocWS(128);
    111            short line_h = GetFontYSIZE(CFG_menu_font)-FONT_SDVIG_Y;
    112            short menu_ypos=ScreenH()-line_h*NUM_MENU_ITEMS; //игрек позици€ дл€ меню
    113            short sdvig_y=menu_ypos;
    114            
    115            wsprintf(ws,perc_t,menu_items[1]);
   \   00000004   ........           LDR      R8,??DataTable11  ;; `?<Constant {70, 70, 70, 90}>`
   \   00000008   ........           LDR      R9,??DataTable13  ;; bricks
   \   0000000C   8000A0E3           MOV      R0,#+128
   \   00000010   250100EF           SWI      +293
   \   00000014   0040A0E1           MOV      R4,R0
   \   00000018   ........           LDR      R0,??DataTable4  ;; CFG_menu_font
   \   0000001C   005090E5           LDR      R5,[R0, #+0]
   \   00000020   0500A0E1           MOV      R0,R5
   \   00000024   C50100EF           SWI      +453
   \   00000028   046040E2           SUB      R6,R0,#+4
   \   0000002C   0668A0E1           MOV      R6,R6, LSL #+16
   \   00000030   4668A0E1           MOV      R6,R6, ASR #+16
   \   00000034   898100EF           SWI      +33161
   \   00000038   B42099E5           LDR      R2,[R9, #+180]
   \   0000003C   0610A0E1           MOV      R1,R6
   \   00000040   811161E0           RSB      R1,R1,R1, LSL #+3
   \   00000044   01B040E0           SUB      R11,R0,R1
   \   00000048   041088E2           ADD      R1,R8,#+4
   \   0000004C   0400A0E1           MOV      R0,R4
   \   00000050   240100EF           SWI      +292
    116            short max_width = Get_WS_width(ws,CFG_menu_font);
   \   00000054   0510A0E1           MOV      R1,R5
   \   00000058   0400A0E1           MOV      R0,R4
   \   0000005C   080200EF           SWI      +520
   \   00000060   00A8A0E1           MOV      R10,R0, LSL #+16
    117            
    118            //фон
    119            DrawRoundedFrame(0,menu_ypos-FONT_SDVIG_Y,max_width+(FONT_SDVIG_X*2),ScreenH(),CFG_menu_rounded,CFG_menu_rounded,0,CFG_menu_frbgcolor,CFG_menu_bgcolor);
   \   00000064   898100EF           SWI      +33161
   \   00000068   28119FE5           LDR      R1,??DrawMenu_0  ;; CFG_menu_bgcolor
   \   0000006C   0030A0E1           MOV      R3,R0
   \   00000070   24019FE5           LDR      R0,??DrawMenu_0+0x4  ;; CFG_menu_rounded
   \   00000074   0BB8A0E1           MOV      R11,R11, LSL #+16
   \   00000078   000090E5           LDR      R0,[R0, #+0]
   \   0000007C   02002DE9           PUSH     {R1}
   \   00000080   18119FE5           LDR      R1,??DrawMenu_0+0x8  ;; CFG_menu_frbgcolor
   \   00000084   4BB8A0E1           MOV      R11,R11, ASR #+16
   \   00000088   02002DE9           PUSH     {R1}
   \   0000008C   4AA8A0E1           MOV      R10,R10, ASR #+16
   \   00000090   0A208AE2           ADD      R2,R10,#+10
   \   00000094   0B70A0E1           MOV      R7,R11
   \   00000098   0010A0E3           MOV      R1,#+0
   \   0000009C   02002DE9           PUSH     {R1}
   \   000000A0   0010A0E1           MOV      R1,R0
   \   000000A4   02002DE9           PUSH     {R1}
   \   000000A8   01002DE9           PUSH     {R0}
   \   000000AC   04104BE2           SUB      R1,R11,#+4
   \   000000B0   0000A0E3           MOV      R0,#+0
   \   000000B4   500100EF           SWI      +336
    120            //курсор
    121            DrawRoundedFrame(FONT_SDVIG_X-2,menu_ypos+(line_h*cur_pos)-2,max_width+FONT_SDVIG_X+2,menu_ypos+(line_h*cur_pos)+line_h,CFG_menu_currounded,CFG_menu_currounded,0,NULL,CFG_menu_curcolor);
   \   000000B8   FD10D9E5           LDRB     R1,[R9, #+253]
   \   000000BC   E0209FE5           LDR      R2,??DrawMenu_0+0xC  ;; CFG_menu_curcolor
   \   000000C0   91B620E0           MLA      R0,R1,R6,R11
   \   000000C4   DC109FE5           LDR      R1,??DrawMenu_0+0x10  ;; CFG_menu_currounded
   \   000000C8   003086E0           ADD      R3,R6,R0
   \   000000CC   001091E5           LDR      R1,[R1, #+0]
   \   000000D0   04002DE9           PUSH     {R2}
    122            
    123            for(int i=0;i<NUM_MENU_ITEMS;i++)
   \   000000D4   0060A0E3           MOV      R6,#+0
   \   000000D8   0020A0E3           MOV      R2,#+0
   \   000000DC   04002DE9           PUSH     {R2}
   \   000000E0   04002DE9           PUSH     {R2}
   \   000000E4   0120A0E1           MOV      R2,R1
   \   000000E8   04002DE9           PUSH     {R2}
   \   000000EC   02002DE9           PUSH     {R1}
   \   000000F0   07208AE2           ADD      R2,R10,#+7
   \   000000F4   021040E2           SUB      R1,R0,#+2
   \   000000F8   0300A0E3           MOV      R0,#+3
   \   000000FC   500100EF           SWI      +336
   \   00000100   28D08DE2           ADD      SP,SP,#+40
    124            {
    125             wsprintf(ws,perc_t,menu_items[i]);
   \                     ??DrawMenu_1:
   \   00000104   060189E0           ADD      R0,R9,R6, LSL #+2
   \   00000108   B02090E5           LDR      R2,[R0, #+176]
   \   0000010C   041088E2           ADD      R1,R8,#+4
   \   00000110   0400A0E1           MOV      R0,R4
   \   00000114   240100EF           SWI      +292
    126             DrawString(ws,FONT_SDVIG_X,sdvig_y-FONT_SDVIG_Y,Get_WS_width(ws,CFG_menu_font)+FONT_SDVIG_X,ScreenH(),CFG_menu_font,TEXT_ALIGNLEFT,CFG_menu_fontcolor,NULL);
   \   00000118   898100EF           SWI      +33161
   \   0000011C   00A0A0E1           MOV      R10,R0
   \   00000120   0510A0E1           MOV      R1,R5
   \   00000124   0400A0E1           MOV      R0,R4
   \   00000128   080200EF           SWI      +520
   \   0000012C   0010A0E3           MOV      R1,#+0
   \   00000130   02002DE9           PUSH     {R1}
   \   00000134   70109FE5           LDR      R1,??DrawMenu_0+0x14  ;; CFG_menu_fontcolor
   \   00000138   053080E2           ADD      R3,R0,#+5
   \   0000013C   02002DE9           PUSH     {R1}
   \   00000140   042047E2           SUB      R2,R7,#+4
   \   00000144   0400A0E1           MOV      R0,R4
    127             sdvig_y+=GetFontYSIZE(CFG_menu_font)-FONT_SDVIG_Y; 
    128            }
   \   00000148   016086E2           ADD      R6,R6,#+1
   \   0000014C   0110A0E3           MOV      R1,#+1
   \   00000150   02002DE9           PUSH     {R1}
   \   00000154   0510A0E1           MOV      R1,R5
   \   00000158   02002DE9           PUSH     {R1}
   \   0000015C   00042DE9           PUSH     {R10}
   \   00000160   0510A0E3           MOV      R1,#+5
   \   00000164   4C0100EF           SWI      +332
   \   00000168   0500A0E1           MOV      R0,R5
   \   0000016C   C50100EF           SWI      +453
   \   00000170   000087E0           ADD      R0,R7,R0
   \   00000174   047040E2           SUB      R7,R0,#+4
   \   00000178   0778A0E1           MOV      R7,R7, LSL #+16
   \   0000017C   4778A0E1           MOV      R7,R7, ASR #+16
   \   00000180   070056E3           CMP      R6,#+7
   \   00000184   14D08DE2           ADD      SP,SP,#+20
   \   00000188   DDFFFFBA           BLT      ??DrawMenu_1
    129            
    130            FreeWS(ws);
   \   0000018C   0400A0E1           MOV      R0,R4
   \   00000190   290100EF           SWI      +297
    131            //if(menu_active) GBS_StartTimerProc(&timer,9,DrawMenu);
    132            //else GBS_DelTimer(&timer);
    133          }
   \   00000194   F08FBDE8           POP      {R4-R11,PC}      ;; return
   \                     ??DrawMenu_0:
   \   00000198   ........           DC32     CFG_menu_bgcolor
   \   0000019C   ........           DC32     CFG_menu_rounded
   \   000001A0   ........           DC32     CFG_menu_frbgcolor
   \   000001A4   ........           DC32     CFG_menu_curcolor
   \   000001A8   ........           DC32     CFG_menu_currounded
   \   000001AC   ........           DC32     CFG_menu_fontcolor
    134          

   \                                 In segment CODE, align 4, keep-with-next
    135          void About()
    136          {
   \                     About:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
    137            char bgcol[4]={70,70,70,90};
   \   00000004   ........           LDR      R6,??DataTable11  ;; `?<Constant {70, 70, 70, 90}>`
   \   00000008   0CD04DE2           SUB      SP,SP,#+12
   \   0000000C   001096E5           LDR      R1,[R6, #0]
   \   00000010   04008DE2           ADD      R0,SP,#+4
   \   00000014   001080E5           STR      R1,[R0, #+0]
    138            char frbgcol[4]={0,0,100,100};
   \   00000018   30119FE5           LDR      R1,??About_0     ;; `?<Constant {0, 0, 100, 100}>`
   \   0000001C   08008DE2           ADD      R0,SP,#+8
   \   00000020   002091E5           LDR      R2,[R1, #0]
    139            char fontcol[4]={0,170,10,100};
   \   00000024   28119FE5           LDR      R1,??About_0+0x4  ;; `?<Constant {0, 170, 10, 100}>`
   \   00000028   002080E5           STR      R2,[R0, #+0]
   \   0000002C   002091E5           LDR      R2,[R1, #0]
   \   00000030   0D00A0E1           MOV      R0,SP
   \   00000034   002080E5           STR      R2,[R0, #+0]
    140            int height=ScreenH()/2;
   \   00000038   898100EF           SWI      +33161
   \   0000003C   A00F80E0           ADD      R0,R0,R0, LSR #+31
   \   00000040   C040A0E1           ASR      R4,R0,#+1
    141            WSHDR *ws=AllocWS(512);
   \   00000044   800FA0E3           MOV      R0,#+512
   \   00000048   250100EF           SWI      +293
   \   0000004C   0050A0E1           MOV      R5,R0
    142            
    143            DrawRoundedFrame(0,height-(height/2),ScreenW(),height+(height/2),0,0,1,frbgcol,bgcol);
   \   00000050   888100EF           SWI      +33160
   \   00000054   0020A0E1           MOV      R2,R0
   \   00000058   A40F84E0           ADD      R0,R4,R4, LSR #+31
   \   0000005C   C000A0E1           ASR      R0,R0,#+1
   \   00000060   007044E0           SUB      R7,R4,R0
   \   00000064   048080E0           ADD      R8,R0,R4
   \   00000068   04008DE2           ADD      R0,SP,#+4
   \   0000006C   01002DE9           PUSH     {R0}
   \   00000070   0830A0E1           MOV      R3,R8
   \   00000074   0710A0E1           MOV      R1,R7
    144            wsprintf(ws,perc_t,"мапосоздавалко версии 0.3\n дл€ јрканойда версии 1.3\n(c)Half65");
    145            DrawString(ws,3,(height-(height/2)-3),ScreenW(),(height+(height/2)+3),CFG_menu_font,TEXT_ALIGNMIDDLE,fontcol,NULL);
   \   00000078   038088E2           ADD      R8,R8,#+3
   \   0000007C   0C008DE2           ADD      R0,SP,#+12
   \   00000080   01002DE9           PUSH     {R0}
   \   00000084   0100A0E3           MOV      R0,#+1
   \   00000088   01002DE9           PUSH     {R0}
   \   0000008C   0000A0E3           MOV      R0,#+0
   \   00000090   01002DE9           PUSH     {R0}
   \   00000094   01002DE9           PUSH     {R0}
   \   00000098   500100EF           SWI      +336
   \   0000009C   082086E2           ADD      R2,R6,#+8
   \   000000A0   041086E2           ADD      R1,R6,#+4
   \   000000A4   0500A0E1           MOV      R0,R5
   \   000000A8   240100EF           SWI      +292
   \   000000AC   888100EF           SWI      +33160
   \   000000B0   0030A0E1           MOV      R3,R0
   \   000000B4   ........           LDR      R0,??DataTable4  ;; CFG_menu_font
   \   000000B8   032047E2           SUB      R2,R7,#+3
   \   000000BC   009090E5           LDR      R9,[R0, #+0]
   \   000000C0   0000A0E3           MOV      R0,#+0
   \   000000C4   01002DE9           PUSH     {R0}
   \   000000C8   0310A0E3           MOV      R1,#+3
   \   000000CC   18008DE2           ADD      R0,SP,#+24
   \   000000D0   01002DE9           PUSH     {R0}
   \   000000D4   0200A0E3           MOV      R0,#+2
   \   000000D8   01002DE9           PUSH     {R0}
   \   000000DC   0900A0E1           MOV      R0,R9
   \   000000E0   01002DE9           PUSH     {R0}
   \   000000E4   0800A0E1           MOV      R0,R8
   \   000000E8   01002DE9           PUSH     {R0}
   \   000000EC   0500A0E1           MOV      R0,R5
   \   000000F0   4C0100EF           SWI      +332
   \   000000F4   28D08DE2           ADD      SP,SP,#+40
    146            wsprintf(ws,perc_t,"\nвсе баги и пожелани€ в 404558107");
   \   000000F8   482086E2           ADD      R2,R6,#+72
   \   000000FC   041086E2           ADD      R1,R6,#+4
   \   00000100   0500A0E1           MOV      R0,R5
   \   00000104   240100EF           SWI      +292
    147            DrawString(ws,3,height,ScreenW(),(height+(height/2)+3),CFG_menu_font,TEXT_ALIGNMIDDLE,fontcol,NULL);
   \   00000108   888100EF           SWI      +33160
   \   0000010C   0010A0E3           MOV      R1,#+0
   \   00000110   02002DE9           PUSH     {R1}
   \   00000114   0030A0E1           MOV      R3,R0
   \   00000118   0420A0E1           MOV      R2,R4
   \   0000011C   0500A0E1           MOV      R0,R5
   \   00000120   04108DE2           ADD      R1,SP,#+4
   \   00000124   02002DE9           PUSH     {R1}
   \   00000128   0210A0E3           MOV      R1,#+2
   \   0000012C   02002DE9           PUSH     {R1}
   \   00000130   00022DE9           PUSH     {R9}
   \   00000134   00012DE9           PUSH     {R8}
   \   00000138   0310A0E3           MOV      R1,#+3
   \   0000013C   4C0100EF           SWI      +332
    148            FreeWS(ws);
   \   00000140   0500A0E1           MOV      R0,R5
   \   00000144   290100EF           SWI      +297
    149          }
   \   00000148   20D08DE2           ADD      SP,SP,#+32
   \   0000014C   F083BDE8           POP      {R4-R9,PC}       ;; return
   \                     ??About_0:
   \   00000150   ........           DC32     `?<Constant {0, 0, 100, 100}>`
   \   00000154   ........           DC32     `?<Constant {0, 170, 10, 100}>`
    150          
    151          
    152          
    153          char *pwd;
    154          WSHDR *e_ws;
    155          
    156          typedef unsigned char trigger;
    157          
    158          

   \                                 In segment CODE, align 4, keep-with-next
    159          int fopen(const char * filename, unsigned int fileflags, unsigned int filemode, unsigned int *errornumber)
    160          {
   \                     fopen:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0260A0E1           MOV      R6,R2
   \   00000010   0370A0E1           MOV      R7,R3
    161            char *realpath=malloc(512);
   \   00000014   800FA0E3           MOV      R0,#+512
   \   00000018   140000EF           SWI      +20
    162            sprintf(realpath,"%s%s",pwd,filename);
   \   0000001C   3C109FE5           LDR      R1,??fopen_0     ;; `?<Constant "%s%s">`
   \   00000020   0080A0E1           MOV      R8,R0
   \   00000024   38009FE5           LDR      R0,??fopen_0+0x4  ;; bricks + 212
   \   00000028   0430A0E1           MOV      R3,R4
   \   0000002C   002090E5           LDR      R2,[R0, #+0]
   \   00000030   0800A0E1           MOV      R0,R8
   \   00000034   160000EF           SWI      +22
    163            int f=fopenA(realpath,fileflags,filemode,errornumber);
   \   00000038   0730A0E1           MOV      R3,R7
   \   0000003C   0620A0E1           MOV      R2,R6
   \   00000040   0510A0E1           MOV      R1,R5
   \   00000044   0800A0E1           MOV      R0,R8
   \   00000048   0A0000EF           SWI      +10
   \   0000004C   0040A0E1           MOV      R4,R0
    164            mfree(realpath);
   \   00000050   0800A0E1           MOV      R0,R8
   \   00000054   150000EF           SWI      +21
    165            return(f);
   \   00000058   0400A0E1           MOV      R0,R4
   \   0000005C   F081BDE8           POP      {R4-R8,PC}       ;; return
   \                     ??fopen_0:
   \   00000060   ........           DC32     `?<Constant "%s%s">`
   \   00000064   ........           DC32     bricks + 212
    166          }
    167          
    168          
    169          #define NO_LOG
    170          

   \                                 In segment DATA_Z, align 4, align-sorted
    171          TDate date; TTime time;
   \                     `date`:
   \   00000000                      DS8 8

   \                                 In segment DATA_Z, align 4, align-sorted
   \                     time:
   \   00000000                      DS8 8
    172          #ifndef NO_LOG
    173          void Tlog (char *string)
    174          {
    175            int logfile=fopen("ArcanoidMapMaker_0.4.log",A_ReadWrite+A_TXT+A_Append+A_Create,P_READ+P_WRITE,0);
    176            char *data=malloc(4096);
    177            GetDateTime(&date,&time); 
    178            sprintf(data,">%d:%02d:%02d/%02d-%02d-%04d< >kernel<   %s\n",time.hour,time.min,time.sec,date.day, date.month,date.year,string);
    179            lseek(logfile, 0x0, S_END, 0, 0);
    180            fwrite(logfile,data,strlen(data),0);
    181            mfree(data);
    182            fclose(logfile,0);
    183          }
    184          #else 

   \                                 In segment CODE, align 4, keep-with-next
    185          void Tlog (char *string){}
   \                     Tlog:
   \   00000000   1EFF2FE1           BX       LR               ;; return
    186          #endif
    187          /////////////////////////////////////////////
    188          /////////////////////////////////////////////
    189          /////////////////////////////////////////////

   \                                 In segment CODE, align 4, keep-with-next
    190          DrwImg(IMGHDR *img, int x, int y, char *pen, char *brush)
    191          {
   \                     DrwImg:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   2CD04DE2           SUB      SP,SP,#+44
   \   00000008   3C609DE5           LDR      R6,[SP, #+60]
   \   0000000C   0040A0E1           MOV      R4,R0
    192            RECT rc;
    193            DRWOBJ drwobj;
    194            StoreXYWHtoRECT(&rc,x,y,img->w,img->h);
   \   00000010   B200D4E1           LDRH     R0,[R4, #+2]
   \   00000014   0350A0E1           MOV      R5,R3
   \   00000018   01002DE9           PUSH     {R0}
   \   0000001C   B030D4E1           LDRH     R3,[R4, #+0]
   \   00000020   04008DE2           ADD      R0,SP,#+4
   \   00000024   330100EF           SWI      +307
    195            SetPropTo_Obj5(&drwobj,&rc,0,img);
   \   00000028   0430A0E1           MOV      R3,R4
   \   0000002C   0020A0E3           MOV      R2,#+0
   \   00000030   04108DE2           ADD      R1,SP,#+4
   \   00000034   0C008DE2           ADD      R0,SP,#+12
   \   00000038   510100EF           SWI      +337
    196            //SetColor(&drwobj, (char*)pen, (char*)brush);
    197            SetColor(&drwobj,pen,brush);
   \   0000003C   0620A0E1           MOV      R2,R6
   \   00000040   0510A0E1           MOV      R1,R5
   \   00000044   0C008DE2           ADD      R0,SP,#+12
   \   00000048   4B0100EF           SWI      +331
    198            DrawObject(&drwobj);
   \   0000004C   0C008DE2           ADD      R0,SP,#+12
   \   00000050   2A0100EF           SWI      +298
    199          }
   \   00000054   30D08DE2           ADD      SP,SP,#+48
   \   00000058   7080BDE8           POP      {R4-R6,PC}       ;; return
    200          
    201          IMGHDR *bricks[10];
    202          IMGHDR *big_bricks[30]; //включает все брики кроме бонусных,вместо них рисуютс€ сами бонусы
    203          //1,2,3 = normal bricks;
    204          //4 = double collised brick;
    205          //5 = thirst collised brick;
    206          //6 = undestroyed brick;
    207          //7 = bonus brick;
    208          
    209          
    210          
    211          
    212          //8 = teleport brick; не юзаетс€ пока
    213          //9 = mine brick; не юзаетс€ пока
    214          
    215          
    216          
    217          //20 = bonus bigest user
    218          //21 = bonus smallest user
    219          //22 = bonus заморозка биты на 3 сек
    220          //23 = bonus ускорение шара на 1
    221          //24 = bonus замедление шара на 1
    222          //25 = bonus +1 жизнь
    223          
    224          
    225          
    226          //26 = bonus супер шар,летит почти через все :)
    227          //27 = bonus шар летит почти через все,но ничего не бьет
    228          //28 = bonus стрел€ем пульками
    229          //29 = bonus стрел€ем ракетницей
    230          //30 = bonus прилипалка на 30 сек
    231          //31 = bonus страховка на 30 сек
    232          //32 = bonus увеличение шара
    233          //33 = bonus уменьшение шара
    234          //34 = bonus неизвестный
    235          //35 = bonus +100 очков пока не юзаетс€
    236          
    237          
    238          #define MAX_LEVELS 60
    239          #define MAX_WIDTH 15
    240          #define MAX_HEIGHT 32
    241          
    242          char used_level[MAX_HEIGHT][MAX_WIDTH];
    243          
    244          typedef struct
    245          {
    246            char sign[4];
    247            char version[4]; //new
    248            char bg_num; //номер фона дл€ текущего уровн€
    249            char snd_num; //номер песни
    250            char type; //0=normal;1=boss.
    251            char boss_diff; //new
    252            char boss_lives;
    253          }MAP;
    254          MAP map;
    255          
    256          char lgn[128];
    257          
    258          char num_to_save;
    259          
    260          

   \                                 In segment CODE, align 4, keep-with-next
    261          void ZeroLevel()
    262          {
    263            map.sign[0] = 'A';
   \                     ZeroLevel:
   \   00000000   ........           LDR      R0,??DataTable13  ;; bricks
   \   00000004   4110A0E3           MOV      R1,#+65
   \   00000008   A010C0E5           STRB     R1,[R0, #+160]
    264            map.sign[1] = 'D';
   \   0000000C   4410A0E3           MOV      R1,#+68
   \   00000010   A110C0E5           STRB     R1,[R0, #+161]
    265            map.sign[2] = 'M';
   \   00000014   4D10A0E3           MOV      R1,#+77
   \   00000018   A210C0E5           STRB     R1,[R0, #+162]
    266            map.sign[3] = 0x00;
   \   0000001C   0010A0E3           MOV      R1,#+0
   \   00000020   A310C0E5           STRB     R1,[R0, #+163]
    267            
    268            map.version[0] = '0';
   \   00000024   3020A0E3           MOV      R2,#+48
   \   00000028   A420C0E5           STRB     R2,[R0, #+164]
    269            map.version[1] = '0';
   \   0000002C   A520C0E5           STRB     R2,[R0, #+165]
    270            map.version[2] = '4';
   \   00000030   3420A0E3           MOV      R2,#+52
   \   00000034   A620C0E5           STRB     R2,[R0, #+166]
    271            map.version[3] = 0x00;
   \   00000038   A710C0E5           STRB     R1,[R0, #+167]
    272            
    273            map.bg_num = 0;
   \   0000003C   A81080E5           STR      R1,[R0, #+168]
    274            map.snd_num = 0;
    275            map.type = 0;
    276            map.boss_diff = 0;
    277            map.boss_lives = 0;
   \   00000040   AC10C0E5           STRB     R1,[R0, #+172]
    278            num_to_save = 1;
   \   00000044   0120A0E3           MOV      R2,#+1
   \   00000048   FE20C0E5           STRB     R2,[R0, #+254]
    279            
    280            for(int y=0;y<MAX_HEIGHT;y++)
   \   0000004C   0020A0E3           MOV      R2,#+0
    281            {
    282              for(int x=0;x<MAX_WIDTH;x++)
   \                     ??ZeroLevel_0:
   \   00000050   0030A0E3           MOV      R3,#+0
    283              {
    284                used_level[y][x]=0;
   \                     ??ZeroLevel_1:
   \   00000054   02C262E0           RSB      R12,R2,R2, LSL #+4
   \   00000058   00C08CE0           ADD      R12,R12,R0
   \   0000005C   0CC083E0           ADD      R12,R3,R12
   \   00000060   0411CCE5           STRB     R1,[R12, #+260]
    285              }
   \   00000064   013083E2           ADD      R3,R3,#+1
   \   00000068   0F0053E3           CMP      R3,#+15
   \   0000006C   F8FFFFBA           BLT      ??ZeroLevel_1
    286            }
   \   00000070   012082E2           ADD      R2,R2,#+1
   \   00000074   200052E3           CMP      R2,#+32
   \   00000078   F4FFFFBA           BLT      ??ZeroLevel_0
    287          }
   \   0000007C   1EFF2FE1           BX       LR               ;; return
    288          
    289          
    290          
    291          
    292          const char *comments[]= 
    293          {
    294            "нормальный кирпичик",
    295            "2 попадани€",
    296            "3 попадани€",
    297            "неразбиваемый кирпичик",
    298            "кирпичик-телепорт",
    299            "кирпичик-мина",
    300            "увеличалка платформы",
    301            "уменьшалка платформы",
    302            "заморозка юзера",
    303            "ускорение м€ча",
    304            "замедление м€ча",
    305            "+1 жизнь!",
    306            "супер м€чик",
    307            "м€ч-привидение",
    308            "стрел€ем пульками",
    309            "стрел€ем рокетом",
    310            "прилипалка",
    311            "страховка",
    312            "увеличение шара",
    313            "уменьшение шара",
    314            "неизвестный бонус",
    315            "+100 очков",
    316            "<пусто типа>"
    317          };

   \                                 In segment DATA_Z, align 4, align-sorted
    318          WSHDR *comment_buffer;
   \                     comment_buffer:
   \   00000000                      DS8 4
    319          char cmt[128];
    320          
    321          
    322          

   \                                 In segment CODE, align 4, keep-with-next
    323          static void OnRedraw(MAIN_GUI *data) {}
   \                     OnRedraw:
   \   00000000   1EFF2FE1           BX       LR               ;; return
    324          
    325          
    326          int cur_ypos = 6;
    327          int cur_xpos;
    328          
    329          int p_pos;
    330          int p_counter;
    331          
    332          
    333          int offset1;
    334          
    335          
    336          
    337          

   \                                 In segment CODE, align 4, keep-with-next
    338          void DrawEditor()
    339          {
   \                     DrawEditor:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
    340            int bx=0;
    341            int by=0;
    342            for(int y=0;y<MAX_HEIGHT;y++)
   \   00000004   ........           LDR      R4,??DataTable15  ;; bricks
   \   00000008   0050A0E3           MOV      R5,#+0
    343            {
    344              for(int x=0;x<MAX_WIDTH;x++)
   \                     ??DrawEditor_0:
   \   0000000C   0060A0E3           MOV      R6,#+0
    345              {
    346                char num = used_level[y][x];
   \                     ??DrawEditor_1:
   \   00000010   050265E0           RSB      R0,R5,R5, LSL #+4
   \   00000014   040080E0           ADD      R0,R0,R4
   \   00000018   000086E0           ADD      R0,R6,R0
   \   0000001C   0401D0E5           LDRB     R0,[R0, #+260]
    347                if(num>0)
   \   00000020   0010B0E1           MOVS     R1,R0
   \   00000024   0F00000A           BEQ      ??DrawEditor_2
    348                {
    349                  if(num<9)
   \   00000028   090050E3           CMP      R0,#+9
   \   0000002C   00018430           ADDCC    R0,R4,R0, LSL #+2
   \   00000030   04001035           LDRCC    R0,[R0, #-4]
   \   00000034   0200003A           BCC      ??DrawEditor_3
    350                  {
    351                    by=bricks[num-1]->h*y;
    352                    bx=bricks[num-1]->w*x;
    353                    DrwImg(bricks[num-1],bx,by,NULL,NULL);
    354                  }
    355                  else if(num>=20)
   \   00000038   140050E3           CMP      R0,#+20
   \   0000003C   0900003A           BCC      ??DrawEditor_2
    356                  {
    357                    by=bricks[8]->h*y;
    358                    bx=bricks[8]->w*x;
    359                    DrwImg(bricks[8],bx,by,NULL,NULL);
   \   00000040   200094E5           LDR      R0,[R4, #+32]
   \                     ??DrawEditor_3:
   \   00000044   0010A0E3           MOV      R1,#+0
   \   00000048   02002DE9           PUSH     {R1}
   \   0000004C   B210D0E1           LDRH     R1,[R0, #+2]
   \   00000050   0030A0E3           MOV      R3,#+0
   \   00000054   950102E0           MUL      R2,R5,R1
   \   00000058   B010D0E1           LDRH     R1,[R0, #+0]
   \   0000005C   960101E0           MUL      R1,R6,R1
   \   00000060   ........           BL       DrwImg
   \   00000064   04D08DE2           ADD      SP,SP,#+4
    360                  }
    361                }
    362              }
   \                     ??DrawEditor_2:
   \   00000068   016086E2           ADD      R6,R6,#+1
   \   0000006C   0F0056E3           CMP      R6,#+15
   \   00000070   E6FFFFBA           BLT      ??DrawEditor_1
    363            }
   \   00000074   015085E2           ADD      R5,R5,#+1
   \   00000078   200055E3           CMP      R5,#+32
   \   0000007C   E2FFFFBA           BLT      ??DrawEditor_0
    364            
    365            //типа курсор рисуем
    366            by=bricks[0]->h*cur_ypos;
   \   00000080   002094E5           LDR      R2,[R4, #+0]
   \   00000084   DC3094E5           LDR      R3,[R4, #+220]
   \   00000088   B200D2E1           LDRH     R0,[R2, #+2]
    367            bx=bricks[0]->w*cur_xpos;
    368            DrawRoundedFrame(bx,by,bx+bricks[0]->w-1,by+bricks[0]->h-1,CFG_edit_curround,CFG_edit_curround,0,CFG_edit_cur_frcolor,CFG_edit_cur_bgcolor);
   \   0000008C   64629FE5           LDR      R6,??DrawEditor_4  ;; CFG_edit_cur_bgcolor
   \   00000090   64529FE5           LDR      R5,??DrawEditor_4+0x4  ;; CFG_edit_cur_frcolor
   \   00000094   930001E0           MUL      R1,R3,R0
   \   00000098   B000D2E1           LDRH     R0,[R2, #+0]
   \   0000009C   E03094E5           LDR      R3,[R4, #+224]
   \   000000A0   0670A0E1           MOV      R7,R6
   \   000000A4   930000E0           MUL      R0,R3,R0
   \   000000A8   50329FE5           LDR      R3,??DrawEditor_4+0x8  ;; CFG_edit_curround
    369            
    370            DrawRoundedFrame(0,(bricks[0]->h*MAX_HEIGHT)+1,ScreenW()-1,ScreenH()-1,0,0,0,CFG_edit_panel_frcolor,CFG_edit_panel_bgcolor); //панель внизу
    371            
    372            //пишем коммент к элементу под курсором
    373            WSHDR *ws = AllocWS(128);
    374            wsprintf(ws,"map[%d]\n%t[%d]",num_to_save,cmt,used_level[cur_ypos][cur_xpos]);
    375            DrawString(ws,0,(bricks[0]->h*MAX_HEIGHT)+1+3,ScreenW(),(bricks[0]->h*MAX_HEIGHT)+3+(GetFontYSIZE(CFG_edit_comment_font)*2),CFG_edit_comment_font,TEXT_ALIGNMIDDLE,CFG_edit_comment_color,NULL);
    376            FreeWS(ws);
    377            
    378            int offset = (bricks[0]->h*MAX_HEIGHT)+1+3+(GetFontYSIZE(CFG_edit_comment_font)*2);
    379            //расчитываем...
    380            by=offset+((ScreenH()-offset)/2) - (big_bricks[0]->h/2);
    381            
    382            
    383            for(int i=0;i<CFG_edit_panel_drawcount;i++)
   \   000000AC   00A0A0E3           MOV      R10,#+0
   \   000000B0   003093E5           LDR      R3,[R3, #+0]
   \   000000B4   80002DE9           PUSH     {R7}
   \   000000B8   0570A0E1           MOV      R7,R5
   \   000000BC   80002DE9           PUSH     {R7}
   \   000000C0   0070A0E3           MOV      R7,#+0
   \   000000C4   80002DE9           PUSH     {R7}
   \   000000C8   0370A0E1           MOV      R7,R3
   \   000000CC   80002DE9           PUSH     {R7}
   \   000000D0   08002DE9           PUSH     {R3}
   \   000000D4   B230D2E1           LDRH     R3,[R2, #+2]
   \   000000D8   B020D2E1           LDRH     R2,[R2, #+0]
   \   000000DC   013083E0           ADD      R3,R3,R1
   \   000000E0   013043E2           SUB      R3,R3,#+1
   \   000000E4   002082E0           ADD      R2,R2,R0
   \   000000E8   012042E2           SUB      R2,R2,#+1
   \   000000EC   500100EF           SWI      +336
   \   000000F0   898100EF           SWI      +33161
   \   000000F4   0070A0E1           MOV      R7,R0
   \   000000F8   888100EF           SWI      +33160
   \   000000FC   00129FE5           LDR      R1,??DrawEditor_4+0xC  ;; CFG_edit_panel_bgcolor
   \   00000100   013047E2           SUB      R3,R7,#+1
   \   00000104   02002DE9           PUSH     {R1}
   \   00000108   F8119FE5           LDR      R1,??DrawEditor_4+0x10  ;; CFG_edit_panel_frcolor
   \   0000010C   012040E2           SUB      R2,R0,#+1
   \   00000110   02002DE9           PUSH     {R1}
   \   00000114   0010A0E3           MOV      R1,#+0
   \   00000118   02002DE9           PUSH     {R1}
   \   0000011C   02002DE9           PUSH     {R1}
   \   00000120   02002DE9           PUSH     {R1}
   \   00000124   000094E5           LDR      R0,[R4, #+0]
   \   00000128   0110A0E3           MOV      R1,#+1
   \   0000012C   B200D0E1           LDRH     R0,[R0, #+2]
   \   00000130   801281E0           ADD      R1,R1,R0, LSL #+5
   \   00000134   0000A0E3           MOV      R0,#+0
   \   00000138   500100EF           SWI      +336
   \   0000013C   28D08DE2           ADD      SP,SP,#+40
   \   00000140   8000A0E3           MOV      R0,#+128
   \   00000144   250100EF           SWI      +293
   \   00000148   DC1094E5           LDR      R1,[R4, #+220]
   \   0000014C   0070A0E1           MOV      R7,R0
   \   00000150   E00094E5           LDR      R0,[R4, #+224]
   \   00000154   011261E0           RSB      R1,R1,R1, LSL #+4
   \   00000158   041081E0           ADD      R1,R1,R4
   \   0000015C   010080E0           ADD      R0,R0,R1
   \   00000160   0401D0E5           LDRB     R0,[R0, #+260]
   \   00000164   A0119FE5           LDR      R1,??DrawEditor_4+0x14  ;; `?<Constant "map[%d]\\n%t[%d]">`
   \   00000168   D93F84E2           ADD      R3,R4,#+868
   \   0000016C   01002DE9           PUSH     {R0}
   \   00000170   FE20D4E5           LDRB     R2,[R4, #+254]
   \   00000174   0700A0E1           MOV      R0,R7
   \   00000178   240100EF           SWI      +292
   \   0000017C   8C019FE5           LDR      R0,??DrawEditor_4+0x18  ;; CFG_edit_comment_font
   \   00000180   008090E5           LDR      R8,[R0, #+0]
   \   00000184   0800A0E1           MOV      R0,R8
   \   00000188   C50100EF           SWI      +453
   \   0000018C   0090A0E1           MOV      R9,R0
   \   00000190   888100EF           SWI      +33160
   \   00000194   0030A0E1           MOV      R3,R0
   \   00000198   000094E5           LDR      R0,[R4, #+0]
   \   0000019C   0010A0E3           MOV      R1,#+0
   \   000001A0   02002DE9           PUSH     {R1}
   \   000001A4   68119FE5           LDR      R1,??DrawEditor_4+0x1C  ;; CFG_edit_comment_color
   \   000001A8   8920A0E1           LSL      R2,R9,#+1
   \   000001AC   02002DE9           PUSH     {R1}
   \   000001B0   0210A0E3           MOV      R1,#+2
   \   000001B4   02002DE9           PUSH     {R1}
   \   000001B8   0810A0E1           MOV      R1,R8
   \   000001BC   02002DE9           PUSH     {R1}
   \   000001C0   B210D0E1           LDRH     R1,[R0, #+2]
   \   000001C4   811282E0           ADD      R1,R2,R1, LSL #+5
   \   000001C8   031081E2           ADD      R1,R1,#+3
   \   000001CC   02002DE9           PUSH     {R1}
   \   000001D0   B200D0E1           LDRH     R0,[R0, #+2]
   \   000001D4   0410A0E3           MOV      R1,#+4
   \   000001D8   802281E0           ADD      R2,R1,R0, LSL #+5
   \   000001DC   0010A0E3           MOV      R1,#+0
   \   000001E0   0700A0E1           MOV      R0,R7
   \   000001E4   4C0100EF           SWI      +332
   \   000001E8   0700A0E1           MOV      R0,R7
   \   000001EC   290100EF           SWI      +297
   \   000001F0   0800A0E1           MOV      R0,R8
   \   000001F4   C50100EF           SWI      +453
   \   000001F8   001094E5           LDR      R1,[R4, #+0]
   \   000001FC   8000A0E1           LSL      R0,R0,#+1
   \   00000200   B210D1E1           LDRH     R1,[R1, #+2]
   \   00000204   810280E0           ADD      R0,R0,R1, LSL #+5
   \   00000208   047080E2           ADD      R7,R0,#+4
   \   0000020C   898100EF           SWI      +33161
   \   00000210   281094E5           LDR      R1,[R4, #+40]
   \   00000214   070040E0           SUB      R0,R0,R7
   \   00000218   B210D1E1           LDRH     R1,[R1, #+2]
   \   0000021C   A00F80E0           ADD      R0,R0,R0, LSR #+31
   \   00000220   C00087E0           ADD      R0,R7,R0, ASR #+1
   \   00000224   A110A0E1           LSR      R1,R1,#+1
   \   00000228   017040E0           SUB      R7,R0,R1
   \   0000022C   E4009FE5           LDR      R0,??DrawEditor_4+0x20  ;; CFG_edit_panel_offset
   \   00000230   008090E5           LDR      R8,[R0, #+0]
   \   00000234   ........           LDR      R0,??DataTable22  ;; CFG_edit_panel_xc
   \   00000238   009090E5           LDR      R9,[R0, #+0]
   \   0000023C   ........           LDR      R0,??DataTable8  ;; CFG_edit_panel_drawcount
   \   00000240   00B090E5           LDR      R11,[R0, #+0]
   \   00000244   18D08DE2           ADD      SP,SP,#+24
   \   00000248   00005BE3           CMP      R11,#+0
   \   0000024C   0F00001A           BNE      ??DrawEditor_5
   \   00000250   100000EA           B        ??DrawEditor_6
    384            {
    385              bx=CFG_edit_panel_xc+((big_bricks[0]->w+CFG_edit_panel_offset)*i);
    386              DrwImg(big_bricks[i+p_counter],bx,by,NULL,NULL);
   \                     ??DrawEditor_7:
   \   00000254   0000A0E3           MOV      R0,#+0
   \   00000258   01002DE9           PUSH     {R0}
   \   0000025C   280094E5           LDR      R0,[R4, #+40]
   \   00000260   0030A0E3           MOV      R3,#+0
   \   00000264   B000D0E1           LDRH     R0,[R0, #+0]
   \   00000268   0720A0E1           MOV      R2,R7
   \   0000026C   000088E0           ADD      R0,R8,R0
   \   00000270   9A9021E0           MLA      R1,R10,R0,R9
   \   00000274   E80094E5           LDR      R0,[R4, #+232]
   \   00000278   0A0080E0           ADD      R0,R0,R10
   \   0000027C   000184E0           ADD      R0,R4,R0, LSL #+2
   \   00000280   280090E5           LDR      R0,[R0, #+40]
    387            }
   \   00000284   01A08AE2           ADD      R10,R10,#+1
   \   00000288   ........           BL       DrwImg
   \   0000028C   04D08DE2           ADD      SP,SP,#+4
   \                     ??DrawEditor_5:
   \   00000290   0B005AE1           CMP      R10,R11
   \   00000294   EEFFFF3A           BCC      ??DrawEditor_7
    388            //еще один курсор,который на нижней панельке ходит :)
    389            DrawRoundedFrame(CFG_edit_panel_xc+((big_bricks[0]->w+CFG_edit_panel_offset)*p_pos),by,CFG_edit_panel_xc+((big_bricks[0]->w+CFG_edit_panel_offset)*p_pos+big_bricks[0]->w-1),by+big_bricks[0]->h-1,0,0,0,CFG_edit_cur_frcolor,CFG_edit_cur_bgcolor);
   \                     ??DrawEditor_6:
   \   00000298   E4A094E5           LDR      R10,[R4, #+228]
   \   0000029C   280094E5           LDR      R0,[R4, #+40]
   \   000002A0   40002DE9           PUSH     {R6}
   \   000002A4   20002DE9           PUSH     {R5}
   \   000002A8   0010A0E3           MOV      R1,#+0
   \   000002AC   02002DE9           PUSH     {R1}
   \   000002B0   02002DE9           PUSH     {R1}
   \   000002B4   02002DE9           PUSH     {R1}
   \   000002B8   B020D0E1           LDRH     R2,[R0, #+0]
   \   000002BC   B210D0E1           LDRH     R1,[R0, #+2]
   \   000002C0   071081E0           ADD      R1,R1,R7
   \   000002C4   013041E2           SUB      R3,R1,#+1
   \   000002C8   B010D0E1           LDRH     R1,[R0, #+0]
   \   000002CC   B000D0E1           LDRH     R0,[R0, #+0]
   \   000002D0   011088E0           ADD      R1,R8,R1
   \   000002D4   9A9121E0           MLA      R1,R10,R1,R9
   \   000002D8   000088E0           ADD      R0,R8,R0
   \   000002DC   011082E0           ADD      R1,R2,R1
   \   000002E0   012041E2           SUB      R2,R1,#+1
   \   000002E4   0710A0E1           MOV      R1,R7
   \   000002E8   9A9020E0           MLA      R0,R10,R0,R9
   \   000002EC   500100EF           SWI      +336
    390            
    391            
    392            /*WSHDR *ws = AllocWS(64);
    393            const char fontcol[4]={0,175,0,100};
    394            wsprintf(ws,"pos=%d\ncounter=%d",p_pos,p_counter);
    395            DrawString(ws,10,ScreenH()/2,ScreenW(),ScreenH()/2+50,CFG_menu_font,TEXT_ALIGNMIDDLE,fontcol,NULL);
    396            FreeWS(ws);*/
    397          }
   \   000002F0   14D08DE2           ADD      SP,SP,#+20
   \   000002F4   F08FBDE8           POP      {R4-R11,PC}      ;; return
   \                     ??DrawEditor_4:
   \   000002F8   ........           DC32     CFG_edit_cur_bgcolor
   \   000002FC   ........           DC32     CFG_edit_cur_frcolor
   \   00000300   ........           DC32     CFG_edit_curround
   \   00000304   ........           DC32     CFG_edit_panel_bgcolor
   \   00000308   ........           DC32     CFG_edit_panel_frcolor
   \   0000030C   ........           DC32     `?<Constant "map[%d]\\n%t[%d]">`
   \   00000310   ........           DC32     CFG_edit_comment_font
   \   00000314   ........           DC32     CFG_edit_comment_color
   \   00000318   ........           DC32     CFG_edit_panel_offset
    398          
    399          
    400          
    401          
    402          
    403          

   \                                 In segment CODE, align 4, keep-with-next
    404          void CheckComments()
    405          {
    406            switch(used_level[cur_ypos][cur_xpos])
   \                     CheckComments:
   \   00000000   ........           LDR      R2,??DataTable13  ;; bricks
   \   00000004   20119FE5           LDR      R1,??CheckComments_1  ;; `?<Constant "2 \\357\\356\\357\\340\\344\\340\\355\\350`
   \   00000008   00402DE9           PUSH     {LR}
   \   0000000C   E03092E5           LDR      R3,[R2, #+224]
   \   00000010   DCC092E5           LDR      R12,[R2, #+220]
   \   00000014   D90FA0E3           MOV      R0,#+868
   \   00000018   0CC26CE0           RSB      R12,R12,R12, LSL #+4
   \   0000001C   02C08CE0           ADD      R12,R12,R2
   \   00000020   0C3083E0           ADD      R3,R3,R12
   \   00000024   0431D3E5           LDRB     R3,[R3, #+260]
   \   00000028   230053E3           CMP      R3,#+35
   \   0000002C   3C00008A           BHI      ??CheckComments_2
   \   00000030   01CF8FE2           ADR      R12,??CheckComments_0
   \   00000034   03C0DCE7           LDRB     R12,[R12, R3]
   \   00000038   0CF18FE0           ADD      PC,PC,R12, LSL #+2
   \                     ??CheckComments_0:
   \   0000003C   080A0A0A           DC8      +8,+10,+10,+10
   \   00000040   0E111315           DC8      +14,+17,+19,+21
   \   00000044   17393939           DC8      +23,+57,+57,+57
   \   00000048   39393939           DC8      +57,+57,+57,+57
   \   0000004C   39393939           DC8      +57,+57,+57,+57
   \   00000050   191B1D1F           DC8      +25,+27,+29,+31
   \   00000054   21232527           DC8      +33,+35,+37,+39
   \   00000058   292B2D2F           DC8      +41,+43,+45,+47
   \   0000005C   31333537           DC8      +49,+51,+53,+55
    407            {
    408              /*case 0:{wsprintf(comment_buffer,perc_t,comments[21]);break;}
    409              case 1:{wsprintf(comment_buffer,perc_t,comments[0]);break;}
    410              case 2:{wsprintf(comment_buffer,perc_t,comments[0]);break;}
    411              case 3:{wsprintf(comment_buffer,perc_t,comments[0]);break;}
    412              case 4:{wsprintf(comment_buffer,perc_t,comments[21]);break;}
    413              case 5:{wsprintf(comment_buffer,perc_t,comments[1]);break;}
    414              case 6:{wsprintf(comment_buffer,perc_t,comments[2]);break;}
    415              case 7:{wsprintf(comment_buffer,perc_t,comments[3]);break;}
    416              case 8:{wsprintf(comment_buffer,perc_t,comments[4]);break;}
    417              case 9:{wsprintf(comment_buffer,perc_t,comments[5]);break;}
    418              case 20:{wsprintf(comment_buffer,perc_t,comments[6]);break;}
    419              case 21:{wsprintf(comment_buffer,perc_t,comments[7]);break;}
    420              case 22:{wsprintf(comment_buffer,perc_t,comments[8]);break;}
    421              case 23:{wsprintf(comment_buffer,perc_t,comments[9]);break;}
    422              case 24:{wsprintf(comment_buffer,perc_t,comments[10]);break;}
    423              case 25:{wsprintf(comment_buffer,perc_t,comments[11]);break;}
    424              case 26:{wsprintf(comment_buffer,perc_t,comments[12]);break;}
    425              case 27:{wsprintf(comment_buffer,perc_t,comments[13]);break;}
    426              case 28:{wsprintf(comment_buffer,perc_t,comments[14]);break;}
    427              case 29:{wsprintf(comment_buffer,perc_t,comments[15]);break;}
    428              case 30:{wsprintf(comment_buffer,perc_t,comments[16]);break;}
    429              case 31:{wsprintf(comment_buffer,perc_t,comments[17]);break;}
    430              case 32:{wsprintf(comment_buffer,perc_t,comments[18]);break;}
    431              case 33:{wsprintf(comment_buffer,perc_t,comments[19]);break;}
    432              case 34:{wsprintf(comment_buffer,perc_t,comments[20]);break;}
    433              case 35:{wsprintf(comment_buffer,perc_t,comments[21]);break;}*/
    434              case 0:{strcpy(cmt,"<типа пусто>");break;}
   \                     ??CheckComments_3:
   \   00000060   D01081E2           ADD      R1,R1,#+208
   \   00000064   030000EA           B        ??CheckComments_4
    435              case 1:case 2:case 3:{strcpy(cmt,"обычный кирпичик");break;}
   \                     ??CheckComments_5:
   \   00000068   E01081E2           ADD      R1,R1,#+224
   \   0000006C   020080E0           ADD      R0,R0,R2
   \   00000070   1A0000EF           SWI      +26
   \   00000074   0080BDE8           POP      {PC}
    436              case 4:{strcpy(cmt,"2 попадани€");break;}
   \                     ??CheckComments_4:
   \   00000078   020080E0           ADD      R0,R0,R2
   \   0000007C   1A0000EF           SWI      +26
   \   00000080   0080BDE8           POP      {PC}
    437              case 5:{strcpy(cmt,"3 попадани€");break;}
   \                     ??CheckComments_6:
   \   00000084   0C1081E2           ADD      R1,R1,#+12
   \   00000088   FAFFFFEA           B        ??CheckComments_4
    438              case 6:{strcpy(cmt,"стенка");break;}
   \                     ??CheckComments_7:
   \   0000008C   F41081E2           ADD      R1,R1,#+244
   \   00000090   F8FFFFEA           B        ??CheckComments_4
    439              case 7:{strcpy(cmt,"мина");break;}
   \                     ??CheckComments_8:
   \   00000094   FC1081E2           ADD      R1,R1,#+252
   \   00000098   F6FFFFEA           B        ??CheckComments_4
    440              case 8:{strcpy(cmt,"телепорт");break;}
   \                     ??CheckComments_9:
   \   0000009C   411F81E2           ADD      R1,R1,#+260
   \   000000A0   F4FFFFEA           B        ??CheckComments_4
    441              case 20:{strcpy(cmt,"увеличение платформы");break;}
   \                     ??CheckComments_10:
   \   000000A4   441F81E2           ADD      R1,R1,#+272
   \   000000A8   F2FFFFEA           B        ??CheckComments_4
    442              case 21:{strcpy(cmt,"уменьшение платформы");break;}
   \                     ??CheckComments_11:
   \   000000AC   4A1F81E2           ADD      R1,R1,#+296
   \   000000B0   F0FFFFEA           B        ??CheckComments_4
    443              case 22:{strcpy(cmt,"заморозка юзера");break;}
   \                     ??CheckComments_12:
   \   000000B4   181081E2           ADD      R1,R1,#+24
   \   000000B8   EEFFFFEA           B        ??CheckComments_4
    444              case 23:{strcpy(cmt,"ускорение м€ча");break;}
   \                     ??CheckComments_13:
   \   000000BC   281081E2           ADD      R1,R1,#+40
   \   000000C0   ECFFFFEA           B        ??CheckComments_4
    445              case 24:{strcpy(cmt,"замедление м€ча");break;}
   \                     ??CheckComments_14:
   \   000000C4   381081E2           ADD      R1,R1,#+56
   \   000000C8   EAFFFFEA           B        ??CheckComments_4
    446              case 25:{strcpy(cmt,"+1 жизнь!");break;}
   \                     ??CheckComments_15:
   \   000000CC   481081E2           ADD      R1,R1,#+72
   \   000000D0   E8FFFFEA           B        ??CheckComments_4
    447              case 26:{strcpy(cmt,"крутой м€чик");break;}
   \                     ??CheckComments_16:
   \   000000D4   501F81E2           ADD      R1,R1,#+320
   \   000000D8   E6FFFFEA           B        ??CheckComments_4
    448              case 27:{strcpy(cmt,"м€ч-привидение");break;}
   \                     ??CheckComments_17:
   \   000000DC   541081E2           ADD      R1,R1,#+84
   \   000000E0   E4FFFFEA           B        ??CheckComments_4
    449              case 28:{strcpy(cmt,"стрел€ем пульками");break;}
   \                     ??CheckComments_18:
   \   000000E4   641081E2           ADD      R1,R1,#+100
   \   000000E8   E2FFFFEA           B        ??CheckComments_4
    450              case 29:{strcpy(cmt,"стрел€ем рокетом");break;}
   \                     ??CheckComments_19:
   \   000000EC   781081E2           ADD      R1,R1,#+120
   \   000000F0   E0FFFFEA           B        ??CheckComments_4
    451              case 30:{strcpy(cmt,"прилипалка");break;}
   \                     ??CheckComments_20:
   \   000000F4   8C1081E2           ADD      R1,R1,#+140
   \   000000F8   DEFFFFEA           B        ??CheckComments_4
    452              case 31:{strcpy(cmt,"страховка");break;}
   \                     ??CheckComments_21:
   \   000000FC   981081E2           ADD      R1,R1,#+152
   \   00000100   DCFFFFEA           B        ??CheckComments_4
    453              case 32:{strcpy(cmt,"увеличение шара");break;}
   \                     ??CheckComments_22:
   \   00000104   A41081E2           ADD      R1,R1,#+164
   \   00000108   DAFFFFEA           B        ??CheckComments_4
    454              case 33:{strcpy(cmt,"уменьшение шара");break;}
   \                     ??CheckComments_23:
   \   0000010C   B41081E2           ADD      R1,R1,#+180
   \   00000110   D8FFFFEA           B        ??CheckComments_4
    455              case 34:{strcpy(cmt,"случайный бонус");break;}
   \                     ??CheckComments_24:
   \   00000114   541F81E2           ADD      R1,R1,#+336
   \   00000118   D6FFFFEA           B        ??CheckComments_4
    456              case 35:{strcpy(cmt,"+100 очков");break;}
   \                     ??CheckComments_25:
   \   0000011C   C41081E2           ADD      R1,R1,#+196
   \   00000120   D4FFFFEA           B        ??CheckComments_4
    457              default:{strcpy(cmt,"unknown error 1");break;}
   \                     ??CheckComments_2:
   \   00000124   581F81E2           ADD      R1,R1,#+352
   \   00000128   D2FFFFEA           B        ??CheckComments_4
   \                     ??CheckComments_1:
   \   0000012C   ........           DC32     `?<Constant "2 \\357\\356\\357\\340\\344\\340\\355\\350`
    458            }
    459          }
    460          
    461          
    462          
    463          
    464          char edit_cur=0;
    465          

   \                                 In segment CODE, align 4, keep-with-next
    466          void EditLevel()
    467          {
   \                     EditLevel:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
    468            short height = (bricks[0]->h*MAX_HEIGHT)+3; //конец рисовани€ по высоте
   \   00000004   ........           LDR      R4,??DataTable15  ;; bricks
    469          #define EDIT_START_XPOS 0
    470          #define EDIT_START_YPOS 20
    471            char bg_col[4]={0,0,0,100};
   \   00000008   E4639FE5           LDR      R6,??EditLevel_0  ;; `?<Constant {0, 0, 0, 100}>`
    472            char font_col[4]={0,180,0,100};
    473            char cur_frcol[4]={0,180,180,100};
    474            char cur_bgcol[4]={90,90,80,100};
    475            WSHDR *ws = AllocWS(64);
    476            short fontH = GetFontYSIZE(CFG_edit_font)+3;
    477            short sdvig = fontH+13;
    478            
    479            
    480            DrawRoundedFrame(0,0,ScreenW()-1,height,0,0,0,NULL,bg_col); //фон
    481            
    482            DrawRoundedFrame(0,EDIT_START_YPOS+(edit_cur*sdvig)-1,ScreenW()-1,EDIT_START_YPOS+(edit_cur*sdvig)+fontH+1,0,0,0,cur_frcol,cur_bgcol); //курсор
    483            
    484            wsprintf(ws,"%t:%d","номер уровн€",num_to_save);
    485            DrawString(ws,EDIT_START_XPOS,EDIT_START_YPOS+(sdvig*0),ScreenW(),EDIT_START_YPOS+(sdvig*0)+fontH,CFG_edit_font,TEXT_ALIGNMIDDLE,font_col,NULL);
    486            
    487            wsprintf(ws,"%t:%d","номер фона",map.bg_num);
    488            DrawString(ws,EDIT_START_XPOS,EDIT_START_YPOS+(sdvig*1),ScreenW(),EDIT_START_YPOS+(sdvig*1)+fontH,CFG_edit_font,TEXT_ALIGNMIDDLE,font_col,NULL);
    489            
    490            if(map.type==0) wsprintf(ws,perc_t,"тип уровн€: обычный");
   \   0000000C   ........           LDR      R11,??DataTable11  ;; `?<Constant {70, 70, 70, 90}>`
   \   00000010   10D04DE2           SUB      SP,SP,#+16
   \   00000014   000094E5           LDR      R0,[R4, #+0]
   \   00000018   0310A0E3           MOV      R1,#+3
   \   0000001C   F200D0E1           LDRSH    R0,[R0, #+2]
   \   00000020   805281E0           ADD      R5,R1,R0, LSL #+5
   \   00000024   001096E5           LDR      R1,[R6, #0]
   \   00000028   04008DE2           ADD      R0,SP,#+4
   \   0000002C   001080E5           STR      R1,[R0, #+0]
   \   00000030   C0139FE5           LDR      R1,??EditLevel_0+0x4  ;; `?<Constant {0, 180, 0, 100}>`
   \   00000034   0D00A0E1           MOV      R0,SP
   \   00000038   002091E5           LDR      R2,[R1, #0]
   \   0000003C   B8139FE5           LDR      R1,??EditLevel_0+0x8  ;; `?<Constant {0, 180, 180, 100}>`
   \   00000040   002080E5           STR      R2,[R0, #+0]
   \   00000044   002091E5           LDR      R2,[R1, #0]
   \   00000048   B0139FE5           LDR      R1,??EditLevel_0+0xC  ;; `?<Constant {90, 90, 80, 100}>`
   \   0000004C   08008DE2           ADD      R0,SP,#+8
   \   00000050   002080E5           STR      R2,[R0, #+0]
   \   00000054   002091E5           LDR      R2,[R1, #0]
   \   00000058   0C008DE2           ADD      R0,SP,#+12
   \   0000005C   002080E5           STR      R2,[R0, #+0]
   \   00000060   4000A0E3           MOV      R0,#+64
   \   00000064   250100EF           SWI      +293
   \   00000068   0070A0E1           MOV      R7,R0
   \   0000006C   90039FE5           LDR      R0,??EditLevel_0+0x10  ;; CFG_edit_font
   \   00000070   0558A0E1           MOV      R5,R5, LSL #+16
   \   00000074   008090E5           LDR      R8,[R0, #+0]
   \   00000078   4558A0E1           MOV      R5,R5, ASR #+16
   \   0000007C   0800A0E1           MOV      R0,R8
   \   00000080   C50100EF           SWI      +453
   \   00000084   039080E2           ADD      R9,R0,#+3
   \   00000088   888100EF           SWI      +33160
   \   0000008C   04108DE2           ADD      R1,SP,#+4
   \   00000090   02002DE9           PUSH     {R1}
   \   00000094   0530A0E1           MOV      R3,R5
   \   00000098   012040E2           SUB      R2,R0,#+1
   \   0000009C   0000A0E3           MOV      R0,#+0
   \   000000A0   0010A0E3           MOV      R1,#+0
   \   000000A4   02002DE9           PUSH     {R1}
   \   000000A8   02002DE9           PUSH     {R1}
   \   000000AC   02002DE9           PUSH     {R1}
   \   000000B0   02002DE9           PUSH     {R1}
   \   000000B4   0998A0E1           MOV      R9,R9, LSL #+16
   \   000000B8   4998A0E1           MOV      R9,R9, ASR #+16
   \   000000BC   0DA089E2           ADD      R10,R9,#+13
   \   000000C0   500100EF           SWI      +336
   \   000000C4   888100EF           SWI      +33160
   \   000000C8   FF10D4E5           LDRB     R1,[R4, #+255]
   \   000000CC   20208DE2           ADD      R2,SP,#+32
   \   000000D0   04002DE9           PUSH     {R2}
   \   000000D4   0AA8A0E1           MOV      R10,R10, LSL #+16
   \   000000D8   4AA8A0E1           MOV      R10,R10, ASR #+16
   \   000000DC   20208DE2           ADD      R2,SP,#+32
   \   000000E0   04002DE9           PUSH     {R2}
   \   000000E4   9A0101E0           MUL      R1,R10,R1
   \   000000E8   0020A0E3           MOV      R2,#+0
   \   000000EC   04002DE9           PUSH     {R2}
   \   000000F0   04002DE9           PUSH     {R2}
   \   000000F4   04002DE9           PUSH     {R2}
   \   000000F8   012089E0           ADD      R2,R9,R1
   \   000000FC   153082E2           ADD      R3,R2,#+21
   \   00000100   131081E2           ADD      R1,R1,#+19
   \   00000104   012040E2           SUB      R2,R0,#+1
   \   00000108   0000A0E3           MOV      R0,#+0
   \   0000010C   500100EF           SWI      +336
   \   00000110   28D08DE2           ADD      SP,SP,#+40
   \   00000114   FE30D4E5           LDRB     R3,[R4, #+254]
   \   00000118   E02086E2           ADD      R2,R6,#+224
   \   0000011C   D81086E2           ADD      R1,R6,#+216
   \   00000120   0700A0E1           MOV      R0,R7
   \   00000124   240100EF           SWI      +292
   \   00000128   888100EF           SWI      +33160
   \   0000012C   0030A0E1           MOV      R3,R0
   \   00000130   0000A0E3           MOV      R0,#+0
   \   00000134   01002DE9           PUSH     {R0}
   \   00000138   1420A0E3           MOV      R2,#+20
   \   0000013C   0010A0E3           MOV      R1,#+0
   \   00000140   04008DE2           ADD      R0,SP,#+4
   \   00000144   01002DE9           PUSH     {R0}
   \   00000148   0200A0E3           MOV      R0,#+2
   \   0000014C   01002DE9           PUSH     {R0}
   \   00000150   0800A0E1           MOV      R0,R8
   \   00000154   01002DE9           PUSH     {R0}
   \   00000158   140089E2           ADD      R0,R9,#+20
   \   0000015C   01002DE9           PUSH     {R0}
   \   00000160   0700A0E1           MOV      R0,R7
   \   00000164   4C0100EF           SWI      +332
   \   00000168   A830D4E5           LDRB     R3,[R4, #+168]
   \   0000016C   F02086E2           ADD      R2,R6,#+240
   \   00000170   D81086E2           ADD      R1,R6,#+216
   \   00000174   0700A0E1           MOV      R0,R7
   \   00000178   240100EF           SWI      +292
   \   0000017C   888100EF           SWI      +33160
   \   00000180   0010A0E3           MOV      R1,#+0
   \   00000184   02002DE9           PUSH     {R1}
   \   00000188   0030A0E1           MOV      R3,R0
   \   0000018C   14208AE2           ADD      R2,R10,#+20
   \   00000190   0700A0E1           MOV      R0,R7
   \   00000194   18108DE2           ADD      R1,SP,#+24
   \   00000198   02002DE9           PUSH     {R1}
   \   0000019C   0210A0E3           MOV      R1,#+2
   \   000001A0   02002DE9           PUSH     {R1}
   \   000001A4   0810A0E1           MOV      R1,R8
   \   000001A8   02002DE9           PUSH     {R1}
   \   000001AC   0A1089E0           ADD      R1,R9,R10
   \   000001B0   141081E2           ADD      R1,R1,#+20
   \   000001B4   02002DE9           PUSH     {R1}
   \   000001B8   0010A0E3           MOV      R1,#+0
   \   000001BC   4C0100EF           SWI      +332
   \   000001C0   28D08DE2           ADD      SP,SP,#+40
   \   000001C4   AA00D4E5           LDRB     R0,[R4, #+170]
   \   000001C8   000050E3           CMP      R0,#+0
   \   000001CC   0300001A           BNE      ??EditLevel_1
   \   000001D0   042086E2           ADD      R2,R6,#+4
   \   000001D4   04108BE2           ADD      R1,R11,#+4
   \   000001D8   0700A0E1           MOV      R0,R7
   \   000001DC   240100EF           SWI      +292
    491            if(map.type==1) wsprintf(ws,perc_t,"тип уровн€: уровень-босс");
   \                     ??EditLevel_1:
   \   000001E0   AA00D4E5           LDRB     R0,[R4, #+170]
   \   000001E4   010050E3           CMP      R0,#+1
   \   000001E8   0300001A           BNE      ??EditLevel_2
   \   000001EC   182086E2           ADD      R2,R6,#+24
   \   000001F0   04108BE2           ADD      R1,R11,#+4
   \   000001F4   0700A0E1           MOV      R0,R7
   \   000001F8   240100EF           SWI      +292
    492            DrawString(ws,EDIT_START_XPOS,EDIT_START_YPOS+(sdvig*2),ScreenW(),EDIT_START_YPOS+(sdvig*2)+fontH,CFG_edit_font,TEXT_ALIGNMIDDLE,font_col,NULL);
   \                     ??EditLevel_2:
   \   000001FC   888100EF           SWI      +33160
   \   00000200   0020A0E3           MOV      R2,#+0
   \   00000204   04002DE9           PUSH     {R2}
   \   00000208   8A10A0E1           LSL      R1,R10,#+1
   \   0000020C   0030A0E1           MOV      R3,R0
   \   00000210   0700A0E1           MOV      R0,R7
   \   00000214   04208DE2           ADD      R2,SP,#+4
   \   00000218   04002DE9           PUSH     {R2}
   \   0000021C   0220A0E3           MOV      R2,#+2
   \   00000220   04002DE9           PUSH     {R2}
   \   00000224   0820A0E1           MOV      R2,R8
   \   00000228   04002DE9           PUSH     {R2}
   \   0000022C   012089E0           ADD      R2,R9,R1
   \   00000230   142082E2           ADD      R2,R2,#+20
   \   00000234   04002DE9           PUSH     {R2}
   \   00000238   142081E2           ADD      R2,R1,#+20
   \   0000023C   0010A0E3           MOV      R1,#+0
   \   00000240   4C0100EF           SWI      +332
    493            
    494            if(map.boss_diff==0) wsprintf(ws,perc_t,"сложность босса: очень легко");
   \   00000244   AB00D4E5           LDRB     R0,[R4, #+171]
   \   00000248   14D08DE2           ADD      SP,SP,#+20
   \   0000024C   000050E3           CMP      R0,#+0
   \   00000250   0300001A           BNE      ??EditLevel_3
   \   00000254   342086E2           ADD      R2,R6,#+52
   \   00000258   04108BE2           ADD      R1,R11,#+4
   \   0000025C   0700A0E1           MOV      R0,R7
   \   00000260   240100EF           SWI      +292
    495            if(map.boss_diff==1) wsprintf(ws,perc_t,"сложность босса: легко");
   \                     ??EditLevel_3:
   \   00000264   AB00D4E5           LDRB     R0,[R4, #+171]
   \   00000268   010050E3           CMP      R0,#+1
   \   0000026C   0300001A           BNE      ??EditLevel_4
   \   00000270   542086E2           ADD      R2,R6,#+84
   \   00000274   04108BE2           ADD      R1,R11,#+4
   \   00000278   0700A0E1           MOV      R0,R7
   \   0000027C   240100EF           SWI      +292
    496            if(map.boss_diff==2) wsprintf(ws,perc_t,"сложность босса: нормально");
   \                     ??EditLevel_4:
   \   00000280   AB00D4E5           LDRB     R0,[R4, #+171]
   \   00000284   020050E3           CMP      R0,#+2
   \   00000288   0300001A           BNE      ??EditLevel_5
   \   0000028C   6C2086E2           ADD      R2,R6,#+108
   \   00000290   04108BE2           ADD      R1,R11,#+4
   \   00000294   0700A0E1           MOV      R0,R7
   \   00000298   240100EF           SWI      +292
    497            if(map.boss_diff==3) wsprintf(ws,perc_t,"сложность босса: сложно");
   \                     ??EditLevel_5:
   \   0000029C   AB00D4E5           LDRB     R0,[R4, #+171]
   \   000002A0   030050E3           CMP      R0,#+3
   \   000002A4   0300001A           BNE      ??EditLevel_6
   \   000002A8   882086E2           ADD      R2,R6,#+136
   \   000002AC   04108BE2           ADD      R1,R11,#+4
   \   000002B0   0700A0E1           MOV      R0,R7
   \   000002B4   240100EF           SWI      +292
    498            if(map.boss_diff==4) wsprintf(ws,perc_t,"сложность босса: очень сложно");
   \                     ??EditLevel_6:
   \   000002B8   AB00D4E5           LDRB     R0,[R4, #+171]
   \   000002BC   040050E3           CMP      R0,#+4
   \   000002C0   0300001A           BNE      ??EditLevel_7
   \   000002C4   A02086E2           ADD      R2,R6,#+160
   \   000002C8   04108BE2           ADD      R1,R11,#+4
   \   000002CC   0700A0E1           MOV      R0,R7
   \   000002D0   240100EF           SWI      +292
    499            DrawString(ws,EDIT_START_XPOS,EDIT_START_YPOS+(sdvig*3),ScreenW(),EDIT_START_YPOS+(sdvig*3)+fontH,CFG_edit_font,TEXT_ALIGNMIDDLE,font_col,NULL);
   \                     ??EditLevel_7:
   \   000002D4   888100EF           SWI      +33160
   \   000002D8   0020A0E3           MOV      R2,#+0
   \   000002DC   04002DE9           PUSH     {R2}
   \   000002E0   8A108AE0           ADD      R1,R10,R10, LSL #+1
   \   000002E4   0030A0E1           MOV      R3,R0
   \   000002E8   0700A0E1           MOV      R0,R7
   \   000002EC   04208DE2           ADD      R2,SP,#+4
   \   000002F0   04002DE9           PUSH     {R2}
   \   000002F4   0220A0E3           MOV      R2,#+2
   \   000002F8   04002DE9           PUSH     {R2}
   \   000002FC   0820A0E1           MOV      R2,R8
   \   00000300   04002DE9           PUSH     {R2}
   \   00000304   012089E0           ADD      R2,R9,R1
   \   00000308   142082E2           ADD      R2,R2,#+20
   \   0000030C   04002DE9           PUSH     {R2}
   \   00000310   142081E2           ADD      R2,R1,#+20
   \   00000314   0010A0E3           MOV      R1,#+0
   \   00000318   4C0100EF           SWI      +332
    500            
    501            wsprintf(ws,"%t:%d","номер мелодии",map.snd_num);
   \   0000031C   A930D4E5           LDRB     R3,[R4, #+169]
   \   00000320   C02086E2           ADD      R2,R6,#+192
   \   00000324   D81086E2           ADD      R1,R6,#+216
   \   00000328   0700A0E1           MOV      R0,R7
   \   0000032C   240100EF           SWI      +292
    502            DrawString(ws,EDIT_START_XPOS,EDIT_START_YPOS+(sdvig*4),ScreenW(),EDIT_START_YPOS+(sdvig*4)+fontH,CFG_edit_font,TEXT_ALIGNMIDDLE,font_col,NULL);
   \   00000330   888100EF           SWI      +33160
   \   00000334   0020A0E3           MOV      R2,#+0
   \   00000338   04002DE9           PUSH     {R2}
   \   0000033C   0A11A0E1           LSL      R1,R10,#+2
   \   00000340   0030A0E1           MOV      R3,R0
   \   00000344   0700A0E1           MOV      R0,R7
   \   00000348   18208DE2           ADD      R2,SP,#+24
   \   0000034C   04002DE9           PUSH     {R2}
   \   00000350   0220A0E3           MOV      R2,#+2
   \   00000354   04002DE9           PUSH     {R2}
   \   00000358   0820A0E1           MOV      R2,R8
   \   0000035C   04002DE9           PUSH     {R2}
   \   00000360   012089E0           ADD      R2,R9,R1
   \   00000364   142082E2           ADD      R2,R2,#+20
   \   00000368   04002DE9           PUSH     {R2}
   \   0000036C   142081E2           ADD      R2,R1,#+20
   \   00000370   0010A0E3           MOV      R1,#+0
   \   00000374   4C0100EF           SWI      +332
   \   00000378   28D08DE2           ADD      SP,SP,#+40
    503            
    504            
    505            //wsprintf(ws,perc_t,"назад");
    506            //DrawString(ws,0,height-fontH,ScreenW()/2,height,CFG_edit_font,TEXT_ALIGNLEFT,font_col,NULL);
    507            wsprintf(ws,perc_t,"назад");
   \   0000037C   D02086E2           ADD      R2,R6,#+208
   \   00000380   04108BE2           ADD      R1,R11,#+4
   \   00000384   0700A0E1           MOV      R0,R7
   \   00000388   240100EF           SWI      +292
    508            DrawString(ws,ScreenW()-Get_WS_width(ws,CFG_edit_font)-3,height-fontH,ScreenW(),height,CFG_edit_font,TEXT_ALIGNRIGHT,font_col,NULL);
   \   0000038C   888100EF           SWI      +33160
   \   00000390   0040A0E1           MOV      R4,R0
   \   00000394   888100EF           SWI      +33160
   \   00000398   0060A0E1           MOV      R6,R0
   \   0000039C   0810A0E1           MOV      R1,R8
   \   000003A0   0700A0E1           MOV      R0,R7
   \   000003A4   080200EF           SWI      +520
   \   000003A8   0010A0E3           MOV      R1,#+0
   \   000003AC   02002DE9           PUSH     {R1}
   \   000003B0   0430A0E1           MOV      R3,R4
   \   000003B4   092045E0           SUB      R2,R5,R9
   \   000003B8   000046E0           SUB      R0,R6,R0
   \   000003BC   04108DE2           ADD      R1,SP,#+4
   \   000003C0   02002DE9           PUSH     {R1}
   \   000003C4   0410A0E3           MOV      R1,#+4
   \   000003C8   02002DE9           PUSH     {R1}
   \   000003CC   00012DE9           PUSH     {R8}
   \   000003D0   0510A0E1           MOV      R1,R5
   \   000003D4   02002DE9           PUSH     {R1}
   \   000003D8   031040E2           SUB      R1,R0,#+3
   \   000003DC   0700A0E1           MOV      R0,R7
   \   000003E0   4C0100EF           SWI      +332
    509            
    510            
    511            FreeWS(ws);
   \   000003E4   0700A0E1           MOV      R0,R7
   \   000003E8   290100EF           SWI      +297
    512          }
   \   000003EC   24D08DE2           ADD      SP,SP,#+36
   \   000003F0   F08FBDE8           POP      {R4-R11,PC}      ;; return
   \                     ??EditLevel_0:
   \   000003F4   ........           DC32     `?<Constant {0, 0, 0, 100}>`
   \   000003F8   ........           DC32     `?<Constant {0, 180, 0, 100}>`
   \   000003FC   ........           DC32     `?<Constant {0, 180, 180, 100}>`
   \   00000400   ........           DC32     `?<Constant {90, 90, 80, 100}>`
   \   00000404   ........           DC32     CFG_edit_font
    513          
    514          
    515          
    516          

   \                                 In segment CODE, align 4, keep-with-next
    517          void RedrawScreen()
    518          {
   \                     RedrawScreen:
   \   00000000   10402DE9           PUSH     {R4,LR}
    519            DrawRoundedFrame(0,0,ScreenW()-1,ScreenH()-1,0,0,0,NULL,CFG_edit_bgcolor);
   \   00000004   898100EF           SWI      +33161
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   888100EF           SWI      +33160
   \   00000010   68109FE5           LDR      R1,??RedrawScreen_0  ;; CFG_edit_bgcolor
   \   00000014   013044E2           SUB      R3,R4,#+1
    520            
    521            CheckComments();
    522            DrawEditor();
    523            
    524            if(ShowAbout)   About();
   \   00000018   ........           LDR      R4,??DataTable13  ;; bricks
   \   0000001C   02002DE9           PUSH     {R1}
   \   00000020   012040E2           SUB      R2,R0,#+1
   \   00000024   0000A0E3           MOV      R0,#+0
   \   00000028   0010A0E3           MOV      R1,#+0
   \   0000002C   02002DE9           PUSH     {R1}
   \   00000030   02002DE9           PUSH     {R1}
   \   00000034   02002DE9           PUSH     {R1}
   \   00000038   02002DE9           PUSH     {R1}
   \   0000003C   500100EF           SWI      +336
   \   00000040   ........           BL       CheckComments
   \   00000044   ........           BL       DrawEditor
   \   00000048   CC0094E5           LDR      R0,[R4, #+204]
   \   0000004C   14D08DE2           ADD      SP,SP,#+20
   \   00000050   000050E3           CMP      R0,#+0
   \   00000054   0000000A           BEQ      ??RedrawScreen_1
   \   00000058   ........           BL       About
    525            if(ShowEdit)    EditLevel();
   \                     ??RedrawScreen_1:
   \   0000005C   FC00D4E5           LDRB     R0,[R4, #+252]
   \   00000060   000050E3           CMP      R0,#+0
   \   00000064   0000000A           BEQ      ??RedrawScreen_2
   \   00000068   ........           BL       EditLevel
    526            if(menu_active) DrawMenu();
   \                     ??RedrawScreen_2:
   \   0000006C   D00094E5           LDR      R0,[R4, #+208]
   \   00000070   000050E3           CMP      R0,#+0
   \   00000074   1080BD08           POPEQ    {R4,PC}
   \   00000078   ........           BL       DrawMenu
    527          }
   \   0000007C   1080BDE8           POP      {R4,PC}          ;; return
   \                     ??RedrawScreen_0:
   \   00000080   ........           DC32     CFG_edit_bgcolor
    528          
    529          
    530          
    531          

   \                                 In segment CODE, align 4, keep-with-next
    532          void SaveMap()
    533          {
   \                     SaveMap:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
    534            Tlog("start saveMap...");
    535            
    536            int f;
    537            char *temp = malloc(512);
    538            sprintf(temp,"maps\\level%d.adm",num_to_save);
   \   00000004   ........           LDR      R5,??DataTable13  ;; bricks
   \   00000008   5C419FE5           LDR      R4,??SaveMap_0   ;; `?<Constant "maps\\\\level%d.adm">`
   \   0000000C   800FA0E3           MOV      R0,#+512
   \   00000010   140000EF           SWI      +20
   \   00000014   FE20D5E5           LDRB     R2,[R5, #+254]
   \   00000018   0070A0E1           MOV      R7,R0
   \   0000001C   0410A0E1           MOV      R1,R4
   \   00000020   160000EF           SWI      +22
    539            sprintf(lgn,"SaveMap-%s",temp);Tlog(lgn);
   \   00000024   0720A0E1           MOV      R2,R7
   \   00000028   141084E2           ADD      R1,R4,#+20
   \   0000002C   B90F85E2           ADD      R0,R5,#+740
   \   00000030   160000EF           SWI      +22
    540            if((f=fopen(temp,A_WriteOnly+A_BIN+A_Create+A_Truncate,P_WRITE,0))==-1) {ShowMSG(1,(int)"error while writing!");return;}
   \   00000034   0030A0E3           MOV      R3,#+0
   \   00000038   402FA0E3           MOV      R2,#+256
   \   0000003C   0110A0E3           MOV      R1,#+1
   \   00000040   831C81E3           ORR      R1,R1,#0x8300
   \   00000044   0700A0E1           MOV      R0,R7
   \   00000048   ........           BL       fopen
   \   0000004C   0060A0E1           MOV      R6,R0
   \   00000050   010076E3           CMN      R6,#+1
   \   00000054   20108402           ADDEQ    R1,R4,#+32
   \   00000058   4000000A           BEQ      ??SaveMap_1
    541            
    542            mfree(temp);
   \   0000005C   0700A0E1           MOV      R0,R7
   \   00000060   150000EF           SWI      +21
    543            
    544            map.sign[0] = 'A';
   \   00000064   4100A0E3           MOV      R0,#+65
   \   00000068   A000C5E5           STRB     R0,[R5, #+160]
    545            map.sign[1] = 'D';
   \   0000006C   4400A0E3           MOV      R0,#+68
   \   00000070   A100C5E5           STRB     R0,[R5, #+161]
    546            map.sign[2] = 'M';
   \   00000074   4D00A0E3           MOV      R0,#+77
   \   00000078   A200C5E5           STRB     R0,[R5, #+162]
    547            map.sign[3] = 0x00;
   \   0000007C   0070A0E3           MOV      R7,#+0
   \   00000080   A370C5E5           STRB     R7,[R5, #+163]
    548            fwrite(f,&map.sign,4,0);
   \   00000084   0030A0E3           MOV      R3,#+0
   \   00000088   0420A0E3           MOV      R2,#+4
   \   0000008C   A01085E2           ADD      R1,R5,#+160
   \   00000090   0600A0E1           MOV      R0,R6
   \   00000094   0C0000EF           SWI      +12
    549            
    550            map.version[0] = '0';
   \   00000098   3000A0E3           MOV      R0,#+48
   \   0000009C   A400C5E5           STRB     R0,[R5, #+164]
    551            map.version[1] = '0';
   \   000000A0   A500C5E5           STRB     R0,[R5, #+165]
    552            map.version[2] = '4';
   \   000000A4   3400A0E3           MOV      R0,#+52
   \   000000A8   A600C5E5           STRB     R0,[R5, #+166]
    553            map.version[3] = 0x00;
   \   000000AC   A770C5E5           STRB     R7,[R5, #+167]
    554            fwrite(f,&map.version,4,0);
   \   000000B0   0730A0E1           MOV      R3,R7
   \   000000B4   0420A0E3           MOV      R2,#+4
   \   000000B8   A41085E2           ADD      R1,R5,#+164
   \   000000BC   0600A0E1           MOV      R0,R6
   \   000000C0   0C0000EF           SWI      +12
    555            
    556            fwrite(f,&map.bg_num,1,0);
   \   000000C4   0730A0E1           MOV      R3,R7
   \   000000C8   0120A0E3           MOV      R2,#+1
   \   000000CC   A81085E2           ADD      R1,R5,#+168
   \   000000D0   0600A0E1           MOV      R0,R6
   \   000000D4   0C0000EF           SWI      +12
    557            fwrite(f,&map.snd_num,1,0);
   \   000000D8   0730A0E1           MOV      R3,R7
   \   000000DC   0120A0E3           MOV      R2,#+1
   \   000000E0   A91085E2           ADD      R1,R5,#+169
   \   000000E4   0600A0E1           MOV      R0,R6
   \   000000E8   0C0000EF           SWI      +12
    558            fwrite(f,&map.type,1,0);
   \   000000EC   0730A0E1           MOV      R3,R7
   \   000000F0   0120A0E3           MOV      R2,#+1
   \   000000F4   AA1085E2           ADD      R1,R5,#+170
   \   000000F8   0600A0E1           MOV      R0,R6
   \   000000FC   0C0000EF           SWI      +12
    559            fwrite(f,&map.boss_diff,1,0);
   \   00000100   0730A0E1           MOV      R3,R7
   \   00000104   0120A0E3           MOV      R2,#+1
   \   00000108   AB1085E2           ADD      R1,R5,#+171
   \   0000010C   0600A0E1           MOV      R0,R6
   \   00000110   0C0000EF           SWI      +12
    560            
    561            for(int y=0;y<MAX_HEIGHT;y++)
    562            {
    563              for(int x=0;x<MAX_WIDTH;x++)
   \                     ??SaveMap_2:
   \   00000114   0080A0E3           MOV      R8,#+0
    564              {
    565                fwrite(f,&used_level[y][x],1,0);
   \                     ??SaveMap_3:
   \   00000118   0030A0E3           MOV      R3,#+0
   \   0000011C   0120A0E3           MOV      R2,#+1
   \   00000120   070267E0           RSB      R0,R7,R7, LSL #+4
   \   00000124   050080E0           ADD      R0,R0,R5
   \   00000128   000088E0           ADD      R0,R8,R0
   \   0000012C   411F80E2           ADD      R1,R0,#+260
   \   00000130   0600A0E1           MOV      R0,R6
   \   00000134   0C0000EF           SWI      +12
    566              }
   \   00000138   018088E2           ADD      R8,R8,#+1
   \   0000013C   0F0058E3           CMP      R8,#+15
   \   00000140   F4FFFFBA           BLT      ??SaveMap_3
    567            }
   \   00000144   017087E2           ADD      R7,R7,#+1
   \   00000148   200057E3           CMP      R7,#+32
   \   0000014C   F0FFFFBA           BLT      ??SaveMap_2
    568            
    569            fclose(f,0);
   \   00000150   0010A0E3           MOV      R1,#+0
   \   00000154   0600A0E1           MOV      R0,R6
   \   00000158   0D0000EF           SWI      +13
    570            ShowMSG(1,(int)"мапа сохранена");
   \   0000015C   381084E2           ADD      R1,R4,#+56
   \                     ??SaveMap_1:
   \   00000160   0100A0E3           MOV      R0,#+1
   \   00000164   480100EF           SWI      +328
    571          }
   \   00000168   F081BDE8           POP      {R4-R8,PC}       ;; return
   \                     ??SaveMap_0:
   \   0000016C   ........           DC32     `?<Constant "maps\\\\level%d.adm">`
    572          
    573          
    574          

   \                                 In segment CODE, align 4, keep-with-next
    575          void DumpMap()
    576          {
   \                     DumpMap:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
    577            char *temp = malloc(256);
    578            sprintf(temp,"%smaps\\level%d.log",pwd,num_to_save);
   \   00000004   ........           LDR      R6,??DataTable27  ;; bricks
   \   00000008   14519FE5           LDR      R5,??DumpMap_0+0xC  ;; perc_s
   \   0000000C   400FA0E3           MOV      R0,#+256
   \   00000010   140000EF           SWI      +20
   \   00000014   FE30D6E5           LDRB     R3,[R6, #+254]
   \   00000018   D42096E5           LDR      R2,[R6, #+212]
   \   0000001C   0040A0E1           MOV      R4,R0
   \   00000020   041085E2           ADD      R1,R5,#+4
   \   00000024   160000EF           SWI      +22
    579            int file = fopenA(temp,A_WriteOnly+A_BIN+A_Create,P_WRITE,0);
   \   00000028   0030A0E3           MOV      R3,#+0
   \   0000002C   402FA0E3           MOV      R2,#+256
   \   00000030   0110A0E3           MOV      R1,#+1
   \   00000034   811C81E3           ORR      R1,R1,#0x8100
   \   00000038   0400A0E1           MOV      R0,R4
   \   0000003C   0A0000EF           SWI      +10
   \   00000040   0070A0E1           MOV      R7,R0
    580            
    581            for(int y=0;y<MAX_HEIGHT;y++)
   \   00000044   0080A0E3           MOV      R8,#+0
    582            {
    583              sprintf(temp,perc_s,"{");
   \                     ??DumpMap_1:
   \   00000048   322F8FE2           ADR      R2,??DumpMap_0   ;; "{"
   \   0000004C   0510A0E1           MOV      R1,R5
   \   00000050   0400A0E1           MOV      R0,R4
   \   00000054   160000EF           SWI      +22
    584              fwrite(file,temp,1,0);
   \   00000058   0030A0E3           MOV      R3,#+0
   \   0000005C   0120A0E3           MOV      R2,#+1
   \   00000060   0410A0E1           MOV      R1,R4
   \   00000064   0700A0E1           MOV      R0,R7
   \   00000068   0C0000EF           SWI      +12
    585              for(int x=0;x<MAX_WIDTH;x++)
   \   0000006C   0090A0E3           MOV      R9,#+0
    586              {
    587                sprintf(temp,"%d,",used_level[y][x]);
   \                     ??DumpMap_2:
   \   00000070   080268E0           RSB      R0,R8,R8, LSL #+4
   \   00000074   060080E0           ADD      R0,R0,R6
   \   00000078   000089E0           ADD      R0,R9,R0
   \   0000007C   0421D0E5           LDRB     R2,[R0, #+260]
   \   00000080   251F8FE2           ADR      R1,??DumpMap_0+0x4  ;; "%d,"
   \   00000084   0400A0E1           MOV      R0,R4
   \   00000088   160000EF           SWI      +22
    588                fwrite(file,temp,strlen(temp),0);
   \   0000008C   0400A0E1           MOV      R0,R4
   \   00000090   1B0000EF           SWI      +27
   \   00000094   0030A0E3           MOV      R3,#+0
   \   00000098   0020A0E1           MOV      R2,R0
   \   0000009C   0410A0E1           MOV      R1,R4
   \   000000A0   0700A0E1           MOV      R0,R7
   \   000000A4   0C0000EF           SWI      +12
    589              }
   \   000000A8   019089E2           ADD      R9,R9,#+1
   \   000000AC   0F0059E3           CMP      R9,#+15
   \   000000B0   EEFFFFBA           BLT      ??DumpMap_2
    590              sprintf(temp,perc_s,"}");
   \   000000B4   192F8FE2           ADR      R2,??DumpMap_0+0x8  ;; "}"
   \   000000B8   0510A0E1           MOV      R1,R5
   \   000000BC   0400A0E1           MOV      R0,R4
   \   000000C0   160000EF           SWI      +22
    591              fwrite(file,temp,1,0);
   \   000000C4   0030A0E3           MOV      R3,#+0
   \   000000C8   0120A0E3           MOV      R2,#+1
   \   000000CC   0410A0E1           MOV      R1,R4
   \   000000D0   0700A0E1           MOV      R0,R7
   \   000000D4   0C0000EF           SWI      +12
    592              temp[0]=0x0D;
   \   000000D8   0D00A0E3           MOV      R0,#+13
   \   000000DC   0000C4E5           STRB     R0,[R4, #+0]
    593              fwrite(file,&temp[0],1,0);
   \   000000E0   0030A0E3           MOV      R3,#+0
   \   000000E4   0120A0E3           MOV      R2,#+1
   \   000000E8   0410A0E1           MOV      R1,R4
   \   000000EC   0700A0E1           MOV      R0,R7
   \   000000F0   0C0000EF           SWI      +12
    594            }
   \   000000F4   018088E2           ADD      R8,R8,#+1
   \   000000F8   200058E3           CMP      R8,#+32
   \   000000FC   D1FFFFBA           BLT      ??DumpMap_1
    595            
    596            fclose(file,0);
   \   00000100   0010A0E3           MOV      R1,#+0
   \   00000104   0700A0E1           MOV      R0,R7
   \   00000108   0D0000EF           SWI      +13
    597            mfree(temp);
   \   0000010C   0400A0E1           MOV      R0,R4
   \   00000110   150000EF           SWI      +21
    598          }
   \   00000114   F083BDE8           POP      {R4-R9,PC}       ;; return
   \                     ??DumpMap_0:
   \   00000118   7B000000           DC8      "{",+0,+0
   \   0000011C   25642C00           DC8      "%d,"
   \   00000120   7D000000           DC8      "}",+0,+0
   \   00000124   ........           DC32     perc_s
    599          
    600          
    601          
    602          

   \                                 In segment CODE, align 4, keep-with-next
    603          static void onCreate(MAIN_GUI *data, void *(*malloc_adr)(int))//“ут делаем что либо при создании гуи
    604          {
   \                     onCreate:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    605          #ifdef ELKA//≈сли елка,то отключаем иконбар
    606            DisableIconBar(1);
   \   00000008   0100A0E3           MOV      R0,#+1
   \   0000000C   3B0200EF           SWI      +571
    607          #endif
    608            data->ws1=AllocWS(256);//¬ыдел€ем пам€ть под строку
   \   00000010   400FA0E3           MOV      R0,#+256
   \   00000014   250100EF           SWI      +293
   \   00000018   340084E5           STR      R0,[R4, #+52]
    609            data->gui.state=1;
   \   0000001C   0100A0E3           MOV      R0,#+1
   \   00000020   0C00C4E5           STRB     R0,[R4, #+12]
    610          }
   \   00000024   1080BDE8           POP      {R4,PC}          ;; return
    611          
    612          
    613          
    614          
    615          
    616          
    617          
    618          

   \                                 In segment CODE, align 4, keep-with-next
    619          void FreeImages()
    620          {
   \                     FreeImages:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
    621            for(int i=0;i<8;i++)
   \   00000004   ........           LDR      R5,??DataTable15  ;; bricks
   \   00000008   0040A0E3           MOV      R4,#+0
    622            {
    623              if(bricks[i] && bricks[i]->bitmap)
   \                     ??FreeImages_0:
   \   0000000C   040195E7           LDR      R0,[R5, +R4, LSL #+2]
   \   00000010   000050E3           CMP      R0,#+0
   \   00000014   08109015           LDRNE    R1,[R0, #+8]
   \   00000018   00005113           CMPNE    R1,#+0
   \   0000001C   0300000A           BEQ      ??FreeImages_1
    624              {
    625                mfree(bricks[i]->bitmap);
   \   00000020   0100A0E1           MOV      R0,R1
   \   00000024   150000EF           SWI      +21
    626                mfree(bricks[i]);
   \   00000028   040195E7           LDR      R0,[R5, +R4, LSL #+2]
   \   0000002C   150000EF           SWI      +21
    627              }
    628            }
   \                     ??FreeImages_1:
   \   00000030   014084E2           ADD      R4,R4,#+1
   \   00000034   080054E3           CMP      R4,#+8
   \   00000038   F3FFFFBA           BLT      ??FreeImages_0
    629            Tlog("bricks free");
    630            for(int i1=0;i1<23;i1++)
   \   0000003C   0040A0E3           MOV      R4,#+0
    631            {
    632              if(big_bricks[i1] && big_bricks[i1]->bitmap)
   \                     ??FreeImages_2:
   \   00000040   046185E0           ADD      R6,R5,R4, LSL #+2
   \   00000044   280096E5           LDR      R0,[R6, #+40]
   \   00000048   000050E3           CMP      R0,#+0
   \   0000004C   08109015           LDRNE    R1,[R0, #+8]
   \   00000050   00005113           CMPNE    R1,#+0
   \   00000054   0300000A           BEQ      ??FreeImages_3
    633              {
    634                //sprintf(lgn,"free[%d]...",i1);Tlog(lgn);
    635                mfree(big_bricks[i1]->bitmap);
   \   00000058   0100A0E1           MOV      R0,R1
   \   0000005C   150000EF           SWI      +21
    636                mfree(big_bricks[i1]);
   \   00000060   280096E5           LDR      R0,[R6, #+40]
   \   00000064   150000EF           SWI      +21
    637              }
    638            }
   \                     ??FreeImages_3:
   \   00000068   014084E2           ADD      R4,R4,#+1
   \   0000006C   170054E3           CMP      R4,#+23
   \   00000070   F2FFFFBA           BLT      ??FreeImages_2
    639            
    640          }
   \   00000074   7080BDE8           POP      {R4-R6,PC}       ;; return
    641          

   \                                 In segment CODE, align 4, keep-with-next
    642          static void onClose(MAIN_GUI *data, void (*mfree_adr)(void *))//—десь делаем что нить при закрытии гуи:)
    643          {
   \                     onClose:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    644            FreeWS(e_ws);
   \   00000008   1C009FE5           LDR      R0,??onClose_0   ;; bricks + 216
   \   0000000C   000090E5           LDR      R0,[R0, #+0]
   \   00000010   290100EF           SWI      +297
    645            FreeImages();
   \   00000014   ........           BL       FreeImages
    646            
    647            data->gui.state=0;
   \   00000018   0000A0E3           MOV      R0,#+0
   \   0000001C   0C00C4E5           STRB     R0,[R4, #+12]
    648            FreeWS(data->ws1);//например, освобождаем пам€ть
   \   00000020   340094E5           LDR      R0,[R4, #+52]
   \   00000024   290100EF           SWI      +297
    649          }
   \   00000028   1080BDE8           POP      {R4,PC}          ;; return
   \                     ??onClose_0:
   \   0000002C   ........           DC32     bricks + 216
    650          

   \                                 In segment CODE, align 4, keep-with-next
    651          static void onFocus(MAIN_GUI *data, void *(*malloc_adr)(int), void (*mfree_adr)(void *))//≈сли гуи на верху то оп€ть же делаем что нужно
    652          {
   \                     onFocus:
   \   00000000   00402DE9           PUSH     {LR}
    653            //GBS_StartTimerProc(&timer,20,RedrawScreen);
    654            data->gui.state=2;
   \   00000004   0210A0E3           MOV      R1,#+2
   \   00000008   0C10C0E5           STRB     R1,[R0, #+12]
    655            DisableIDLETMR();//отключаем таймер,иначе через 2 минуты эльф закроетс€
   \   0000000C   7F0100EF           SWI      +383
    656          }
   \   00000010   0080BDE8           POP      {PC}             ;; return
    657          

   \                                 In segment CODE, align 4, keep-with-next
    658          static void onUnfocus(MAIN_GUI *data, void (*mfree_adr)(void *))//а если гуи не вверху,то можно закрыть эльф например:)
    659          {
    660            //GBS_DelTimer(&timer);
    661            if (data->gui.state!=2) return;
   \                     onUnfocus:
   \   00000000   0C10D0E5           LDRB     R1,[R0, #+12]
   \   00000004   020051E3           CMP      R1,#+2
    662            data->gui.state=1;
   \   00000008   0110A003           MOVEQ    R1,#+1
   \   0000000C   0C10C005           STRBEQ   R1,[R0, #+12]
    663          }
   \   00000010   1EFF2FE1           BX       LR               ;; return
    664          
    665          
    666          
    667          
    668          

   \                                 In segment CODE, align 4, keep-with-next
    669          int openconf()
    670          {
   \                     openconf:
   \   00000000   10402DE9           PUSH     {R4,LR}
    671            WSHDR *fws=AllocWS(256);
   \   00000004   400FA0E3           MOV      R0,#+256
   \   00000008   250100EF           SWI      +293
    672            extern const char *successed_config_filename;
    673            wsprintf(fws,perc_t,successed_config_filename);
   \   0000000C   30109FE5           LDR      R1,??openconf_0  ;; `?<Constant {70, 70, 70, 90}>` + 4
   \   00000010   0040A0E1           MOV      R4,R0
   \   00000014   ........           LDR      R0,??DataTable29  ;; successed_config_filename
   \   00000018   002090E5           LDR      R2,[R0, #+0]
   \   0000001C   0400A0E1           MOV      R0,R4
   \   00000020   240100EF           SWI      +292
    674            ExecuteFile(fws,NULL,NULL);
   \   00000024   0020A0E3           MOV      R2,#+0
   \   00000028   0010A0E3           MOV      R1,#+0
   \   0000002C   0400A0E1           MOV      R0,R4
   \   00000030   940000EF           SWI      +148
    675            FreeWS(fws);
   \   00000034   0400A0E1           MOV      R0,R4
   \   00000038   290100EF           SWI      +297
    676            return 0;
   \   0000003C   0000A0E3           MOV      R0,#+0
   \   00000040   1080BDE8           POP      {R4,PC}          ;; return
   \                     ??openconf_0:
   \   00000044   ........           DC32     `?<Constant {70, 70, 70, 90}>` + 4
    677          }
    678          
    679          
    680          //extern void CreateTextEditDialog(int type,char *src,int maxlen);
    681          

   \                                 In segment CODE, align 4, keep-with-next
    682          void RenameLevel()
    683          {
    684            //CreateTextEditDialog(1,map.name,64); //просто создаем диалог
    685          }
   \                     RenameLevel:
   \   00000000   1EFF2FE1           BX       LR               ;; return
    686          

   \                                 In segment CODE, align 4, keep-with-next
    687          void NewLevel() //сперва создаем диалог,а потом прочие параметры
    688          {
    689            ZeroLevel();
   \                     NewLevel:
   \   00000000   ........           B        ZeroLevel        ;; tailcall
    690            //CreateTextEditDialog(0,"New Level",64);
    691          }
    692          
    693          
    694          
    695          

   \                                 In segment CODE, align 4, keep-with-next
    696          int MenuKeyhook(GUI_MSG *msg)
    697          {
   \                     MenuKeyhook:
   \   00000000   00402DE9           PUSH     {LR}
    698            if(msg->gbsmsg->msg==KEY_DOWN)
   \   00000004   040090E5           LDR      R0,[R0, #+4]
   \   00000008   9320A0E3           MOV      R2,#+147
   \   0000000C   041090E5           LDR      R1,[R0, #+4]
   \   00000010   402F82E3           ORR      R2,R2,#0x100
   \   00000014   020051E1           CMP      R1,R2
   \   00000018   1500001A           BNE      ??MenuKeyhook_0
    699            {
    700               if(msg->gbsmsg->submess==LEFT_SOFT) {menu_active=0;Tlog("menu disable");RedrawScreen();return 0;}
   \   0000001C   ........           LDR      R1,??DataTable27  ;; bricks
   \   00000020   083090E5           LDR      R3,[R0, #+8]
   \   00000024   0020A0E3           MOV      R2,#+0
   \   00000028   010053E3           CMP      R3,#+1
   \   0000002C   D0208105           STREQ    R2,[R1, #+208]
   \   00000030   0E00000A           BEQ      ??MenuKeyhook_1
    701              
    702                if((msg->gbsmsg->submess==DOWN_BUTTON || msg->gbsmsg->submess=='8') && cur_pos<NUM_MENU_ITEMS-1) {cur_pos+=1;RedrawScreen();return 0;}
   \   00000034   08C090E5           LDR      R12,[R0, #+8]
   \   00000038   FD30D1E5           LDRB     R3,[R1, #+253]
   \   0000003C   3C005CE3           CMP      R12,#+60
   \   00000040   38005C13           CMPNE    R12,#+56
   \   00000044   0200001A           BNE      ??MenuKeyhook_2
   \   00000048   060053E3           CMP      R3,#+6
   \   0000004C   01008332           ADDCC    R0,R3,#+1
   \   00000050   0500003A           BCC      ??MenuKeyhook_3
    703                if((msg->gbsmsg->submess==UP_BUTTON || msg->gbsmsg->submess=='2') && cur_pos>0) {cur_pos-=1;RedrawScreen();return 0;}
   \                     ??MenuKeyhook_2:
   \   00000054   3B005CE3           CMP      R12,#+59
   \   00000058   32005C13           CMPNE    R12,#+50
   \   0000005C   0600001A           BNE      ??MenuKeyhook_4
   \   00000060   000053E3           CMP      R3,#+0
   \   00000064   0400000A           BEQ      ??MenuKeyhook_4
   \   00000068   010043E2           SUB      R0,R3,#+1
   \                     ??MenuKeyhook_3:
   \   0000006C   FD00C1E5           STRB     R0,[R1, #+253]
   \                     ??MenuKeyhook_1:
   \   00000070   ........           BL       RedrawScreen
   \                     ??MenuKeyhook_0:
   \   00000074   0000A0E3           MOV      R0,#+0
   \   00000078   0080BDE8           POP      {PC}
    704                
    705                if((msg->gbsmsg->submess==ENTER_BUTTON || msg->gbsmsg->submess=='5' || msg->gbsmsg->submess==RIGHT_BUTTON) && cur_pos==0) {menu_active=0;NewLevel();RedrawScreen();return 0;}
   \                     ??MenuKeyhook_4:
   \   0000007C   1A005CE3           CMP      R12,#+26
   \   00000080   35005C13           CMPNE    R12,#+53
   \   00000084   3E005C13           CMPNE    R12,#+62
   \   00000088   00005303           CMPEQ    R3,#+0
   \   0000008C   0200001A           BNE      ??MenuKeyhook_5
   \   00000090   D02081E5           STR      R2,[R1, #+208]
   \   00000094   ........           BL       ZeroLevel
   \   00000098   F4FFFFEA           B        ??MenuKeyhook_1
    706                if((msg->gbsmsg->submess==ENTER_BUTTON || msg->gbsmsg->submess=='5' || msg->gbsmsg->submess==RIGHT_BUTTON) && cur_pos==1) {menu_active=0;ShowEdit=1;RedrawScreen();return 0;}
   \                     ??MenuKeyhook_5:
   \   0000009C   08E090E5           LDR      LR,[R0, #+8]
   \   000000A0   01C0A0E3           MOV      R12,#+1
   \   000000A4   1A005EE3           CMP      LR,#+26
   \   000000A8   35005E13           CMPNE    LR,#+53
   \   000000AC   3E005E13           CMPNE    LR,#+62
   \   000000B0   01005303           CMPEQ    R3,#+1
   \   000000B4   D0208105           STREQ    R2,[R1, #+208]
   \   000000B8   FCC0C105           STRBEQ   R12,[R1, #+252]
   \   000000BC   EBFFFF0A           BEQ      ??MenuKeyhook_1
    707                if((msg->gbsmsg->submess==ENTER_BUTTON || msg->gbsmsg->submess=='5' || msg->gbsmsg->submess==RIGHT_BUTTON) && cur_pos==2) {menu_active=0;SaveMap();RedrawScreen();return 0;}
   \   000000C0   1A005EE3           CMP      LR,#+26
   \   000000C4   35005E13           CMPNE    LR,#+53
   \   000000C8   3E005E13           CMPNE    LR,#+62
   \   000000CC   02005303           CMPEQ    R3,#+2
   \   000000D0   0200001A           BNE      ??MenuKeyhook_6
   \   000000D4   D02081E5           STR      R2,[R1, #+208]
   \   000000D8   ........           BL       SaveMap
   \   000000DC   E3FFFFEA           B        ??MenuKeyhook_1
    708                if((msg->gbsmsg->submess==ENTER_BUTTON || msg->gbsmsg->submess=='5' || msg->gbsmsg->submess==RIGHT_BUTTON) && cur_pos==3) {menu_active=0;DumpMap();return 0;}
   \                     ??MenuKeyhook_6:
   \   000000E0   1A005EE3           CMP      LR,#+26
   \   000000E4   35005E13           CMPNE    LR,#+53
   \   000000E8   3E005E13           CMPNE    LR,#+62
   \   000000EC   03005303           CMPEQ    R3,#+3
   \   000000F0   0200001A           BNE      ??MenuKeyhook_7
   \   000000F4   D02081E5           STR      R2,[R1, #+208]
   \   000000F8   ........           BL       DumpMap
   \   000000FC   060000EA           B        ??MenuKeyhook_8
    709                if((msg->gbsmsg->submess==ENTER_BUTTON || msg->gbsmsg->submess=='5' || msg->gbsmsg->submess==RIGHT_BUTTON) && cur_pos==4) {menu_active=0;openconf();return 0;}
   \                     ??MenuKeyhook_7:
   \   00000100   1A005EE3           CMP      LR,#+26
   \   00000104   35005E13           CMPNE    LR,#+53
   \   00000108   3E005E13           CMPNE    LR,#+62
   \   0000010C   04005303           CMPEQ    R3,#+4
   \   00000110   0300001A           BNE      ??MenuKeyhook_9
   \   00000114   D02081E5           STR      R2,[R1, #+208]
   \   00000118   ........           BL       openconf
   \                     ??MenuKeyhook_8:
   \   0000011C   0000A0E3           MOV      R0,#+0
   \   00000120   0080BDE8           POP      {PC}
    710                if((msg->gbsmsg->submess==ENTER_BUTTON || msg->gbsmsg->submess=='5' || msg->gbsmsg->submess==RIGHT_BUTTON) && cur_pos==5) {menu_active=0;ShowAbout=1;RedrawScreen();return 0;}
   \                     ??MenuKeyhook_9:
   \   00000124   1A005EE3           CMP      LR,#+26
   \   00000128   35005E13           CMPNE    LR,#+53
   \   0000012C   3E005E13           CMPNE    LR,#+62
   \   00000130   05005303           CMPEQ    R3,#+5
   \   00000134   D0208105           STREQ    R2,[R1, #+208]
   \   00000138   CCC08105           STREQ    R12,[R1, #+204]
   \   0000013C   CBFFFF0A           BEQ      ??MenuKeyhook_1
    711                if((msg->gbsmsg->submess==ENTER_BUTTON || msg->gbsmsg->submess=='5' || msg->gbsmsg->submess==RIGHT_BUTTON) && cur_pos==6) {return 1;} //exit
   \   00000140   1A005EE3           CMP      LR,#+26
   \   00000144   35005E13           CMPNE    LR,#+53
   \   00000148   3E005E13           CMPNE    LR,#+62
   \   0000014C   06005303           CMPEQ    R3,#+6
   \   00000150   C7FFFF1A           BNE      ??MenuKeyhook_0
   \   00000154   0100A0E3           MOV      R0,#+1
   \   00000158   0080BDE8           POP      {PC}
    712            }
    713            return(0);
    714          }
    715          
    716          
    717          

   \                                 In segment CODE, align 4, keep-with-next
    718          int EditKeyhook(GUI_MSG *msg)
    719          {
   \                     EditKeyhook:
   \   00000000   00402DE9           PUSH     {LR}
    720            if(msg->gbsmsg->msg==KEY_DOWN)
   \   00000004   040090E5           LDR      R0,[R0, #+4]
   \   00000008   9320A0E3           MOV      R2,#+147
   \   0000000C   041090E5           LDR      R1,[R0, #+4]
   \   00000010   402F82E3           ORR      R2,R2,#0x100
   \   00000014   020051E1           CMP      R1,R2
   \   00000018   1500001A           BNE      ??EditKeyhook_0
    721            {
    722               if(msg->gbsmsg->submess==RIGHT_SOFT) {ShowEdit=0;RedrawScreen();return 0;}
   \   0000001C   ........           LDR      R1,??DataTable27  ;; bricks
   \   00000020   082090E5           LDR      R2,[R0, #+8]
   \   00000024   0030A0E3           MOV      R3,#+0
   \   00000028   040052E3           CMP      R2,#+4
   \   0000002C   FC30C105           STRBEQ   R3,[R1, #+252]
   \   00000030   0E00000A           BEQ      ??EditKeyhook_1
    723               if((msg->gbsmsg->submess==DOWN_BUTTON || msg->gbsmsg->submess=='8') && edit_cur<4) {edit_cur++;RedrawScreen();return 0;}
   \   00000034   08C090E5           LDR      R12,[R0, #+8]
   \   00000038   FF20D1E5           LDRB     R2,[R1, #+255]
   \   0000003C   3C005CE3           CMP      R12,#+60
   \   00000040   38005C13           CMPNE    R12,#+56
   \   00000044   0200001A           BNE      ??EditKeyhook_2
   \   00000048   040052E3           CMP      R2,#+4
   \   0000004C   01008232           ADDCC    R0,R2,#+1
   \   00000050   0500003A           BCC      ??EditKeyhook_3
    724               if((msg->gbsmsg->submess==UP_BUTTON   || msg->gbsmsg->submess=='2') && edit_cur>0) {edit_cur--;RedrawScreen();return 0;}  
   \                     ??EditKeyhook_2:
   \   00000054   3B005CE3           CMP      R12,#+59
   \   00000058   32005C13           CMPNE    R12,#+50
   \   0000005C   0600001A           BNE      ??EditKeyhook_4
   \   00000060   000052E3           CMP      R2,#+0
   \   00000064   0400000A           BEQ      ??EditKeyhook_4
   \   00000068   010042E2           SUB      R0,R2,#+1
   \                     ??EditKeyhook_3:
   \   0000006C   FF00C1E5           STRB     R0,[R1, #+255]
   \                     ??EditKeyhook_1:
   \   00000070   ........           BL       RedrawScreen
   \                     ??EditKeyhook_0:
   \   00000074   0000A0E3           MOV      R0,#+0
   \   00000078   0080BDE8           POP      {PC}
    725               
    726               if(msg->gbsmsg->submess==RIGHT_BUTTON && edit_cur==0 && num_to_save<250) {num_to_save++;RedrawScreen();return 0;}
   \                     ??EditKeyhook_4:
   \   0000007C   08E090E5           LDR      LR,[R0, #+8]
   \   00000080   FEC0D1E5           LDRB     R12,[R1, #+254]
   \   00000084   3E005EE3           CMP      LR,#+62
   \   00000088   00005203           CMPEQ    R2,#+0
   \   0000008C   0300001A           BNE      ??EditKeyhook_5
   \   00000090   FA005CE3           CMP      R12,#+250
   \   00000094   01008C32           ADDCC    R0,R12,#+1
   \   00000098   FE00C135           STRBCC   R0,[R1, #+254]
   \   0000009C   F3FFFF3A           BCC      ??EditKeyhook_1
    727               if(msg->gbsmsg->submess==LEFT_BUTTON && edit_cur==0 && num_to_save>1) {num_to_save--;RedrawScreen();return 0;}
   \                     ??EditKeyhook_5:
   \   000000A0   3D005EE3           CMP      LR,#+61
   \   000000A4   00005203           CMPEQ    R2,#+0
   \   000000A8   0300001A           BNE      ??EditKeyhook_6
   \   000000AC   02005CE3           CMP      R12,#+2
   \   000000B0   01004C22           SUBCS    R0,R12,#+1
   \   000000B4   FE00C125           STRBCS   R0,[R1, #+254]
   \   000000B8   ECFFFF2A           BCS      ??EditKeyhook_1
    728               if(msg->gbsmsg->submess==RIGHT_BUTTON && edit_cur==1 && map.bg_num<250) {map.bg_num++;RedrawScreen();return 0;}
   \                     ??EditKeyhook_6:
   \   000000BC   A8C0D1E5           LDRB     R12,[R1, #+168]
   \   000000C0   3E005EE3           CMP      LR,#+62
   \   000000C4   01005203           CMPEQ    R2,#+1
   \   000000C8   0300001A           BNE      ??EditKeyhook_7
   \   000000CC   FA005CE3           CMP      R12,#+250
   \   000000D0   01008C32           ADDCC    R0,R12,#+1
   \   000000D4   A800C135           STRBCC   R0,[R1, #+168]
   \   000000D8   E4FFFF3A           BCC      ??EditKeyhook_1
    729               if(msg->gbsmsg->submess==LEFT_BUTTON && edit_cur==1 && map.bg_num>0) {map.bg_num--;RedrawScreen();return 0;}
   \                     ??EditKeyhook_7:
   \   000000DC   3D005EE3           CMP      LR,#+61
   \   000000E0   01005203           CMPEQ    R2,#+1
   \   000000E4   0300001A           BNE      ??EditKeyhook_8
   \   000000E8   00005CE3           CMP      R12,#+0
   \   000000EC   01004C12           SUBNE    R0,R12,#+1
   \   000000F0   A800C115           STRBNE   R0,[R1, #+168]
   \   000000F4   DDFFFF1A           BNE      ??EditKeyhook_1
    730               if(msg->gbsmsg->submess==RIGHT_BUTTON && edit_cur==2) {map.type=1;RedrawScreen();return 0;}
   \                     ??EditKeyhook_8:
   \   000000F8   3E005EE3           CMP      LR,#+62
   \   000000FC   02005203           CMPEQ    R2,#+2
   \   00000100   0100A003           MOVEQ    R0,#+1
   \   00000104   AA00C105           STRBEQ   R0,[R1, #+170]
   \   00000108   D8FFFF0A           BEQ      ??EditKeyhook_1
    731               if(msg->gbsmsg->submess==LEFT_BUTTON && edit_cur==2) {map.type=0;RedrawScreen();return 0;}
   \   0000010C   3D005EE3           CMP      LR,#+61
   \   00000110   02005203           CMPEQ    R2,#+2
   \   00000114   AA30C105           STRBEQ   R3,[R1, #+170]
   \   00000118   D4FFFF0A           BEQ      ??EditKeyhook_1
    732               if(msg->gbsmsg->submess==RIGHT_BUTTON && edit_cur==3 && map.boss_diff<4) {map.boss_diff++;RedrawScreen();return 0;}
   \   0000011C   AB30D1E5           LDRB     R3,[R1, #+171]
   \   00000120   3E005EE3           CMP      LR,#+62
   \   00000124   03005203           CMPEQ    R2,#+3
   \   00000128   0300001A           BNE      ??EditKeyhook_9
   \   0000012C   040053E3           CMP      R3,#+4
   \   00000130   01008332           ADDCC    R0,R3,#+1
   \   00000134   AB00C135           STRBCC   R0,[R1, #+171]
   \   00000138   CCFFFF3A           BCC      ??EditKeyhook_1
    733               if(msg->gbsmsg->submess==LEFT_BUTTON && edit_cur==3 && map.boss_diff>0) {map.boss_diff--;RedrawScreen();return 0;}
   \                     ??EditKeyhook_9:
   \   0000013C   3D005EE3           CMP      LR,#+61
   \   00000140   03005203           CMPEQ    R2,#+3
   \   00000144   0300001A           BNE      ??EditKeyhook_10
   \   00000148   000053E3           CMP      R3,#+0
   \   0000014C   01004312           SUBNE    R0,R3,#+1
   \   00000150   AB00C115           STRBNE   R0,[R1, #+171]
   \   00000154   C5FFFF1A           BNE      ??EditKeyhook_1
    734               if(msg->gbsmsg->submess==RIGHT_BUTTON && edit_cur==4 && map.snd_num<250) {map.snd_num++;RedrawScreen();return 0;}
   \                     ??EditKeyhook_10:
   \   00000158   A930D1E5           LDRB     R3,[R1, #+169]
   \   0000015C   3E005EE3           CMP      LR,#+62
   \   00000160   04005203           CMPEQ    R2,#+4
   \   00000164   0300001A           BNE      ??EditKeyhook_11
   \   00000168   FA0053E3           CMP      R3,#+250
   \   0000016C   01008332           ADDCC    R0,R3,#+1
   \   00000170   A900C135           STRBCC   R0,[R1, #+169]
   \   00000174   BDFFFF3A           BCC      ??EditKeyhook_1
    735               if(msg->gbsmsg->submess==LEFT_BUTTON && edit_cur==4 && map.snd_num>0) {map.snd_num--;RedrawScreen();return 0;}
   \                     ??EditKeyhook_11:
   \   00000178   3D005EE3           CMP      LR,#+61
   \   0000017C   04005203           CMPEQ    R2,#+4
   \   00000180   BBFFFF1A           BNE      ??EditKeyhook_0
   \   00000184   000053E3           CMP      R3,#+0
   \   00000188   B9FFFF0A           BEQ      ??EditKeyhook_0
   \   0000018C   010043E2           SUB      R0,R3,#+1
   \   00000190   A900C1E5           STRB     R0,[R1, #+169]
   \   00000194   B5FFFFEA           B        ??EditKeyhook_1
    736               
    737               
    738            }
    739            return 0;
    740          }
    741          
    742          
    743          
    744          

   \                                 In segment CODE, align 4, keep-with-next
    745          void PanelCursorLeft()
    746          {
    747            if(CFG_edit_panel_xc+(big_bricks[0]->w*p_pos) > 0+big_bricks[0]->w-1 && p_pos+p_counter>0) p_pos--;
   \                     PanelCursorLeft:
   \   00000000   ........           LDR      R0,??DataTable27  ;; bricks
   \   00000004   ........           LDR      R12,??DataTable22  ;; CFG_edit_panel_xc
   \   00000008   282090E5           LDR      R2,[R0, #+40]
   \   0000000C   E41090E5           LDR      R1,[R0, #+228]
   \   00000010   B030D2E1           LDRH     R3,[R2, #+0]
   \   00000014   B020D2E1           LDRH     R2,[R2, #+0]
   \   00000018   00C09CE5           LDR      R12,[R12, #+0]
   \   0000001C   013043E2           SUB      R3,R3,#+1
   \   00000020   91C222E0           MLA      R2,R1,R2,R12
   \   00000024   020053E1           CMP      R3,R2
   \   00000028   1EFF2F21           BXCS     LR
   \   0000002C   E82090E5           LDR      R2,[R0, #+232]
   \   00000030   012082E0           ADD      R2,R2,R1
   \   00000034   010052E3           CMP      R2,#+1
   \   00000038   011041A2           SUBGE    R1,R1,#+1
   \   0000003C   E41080A5           STRGE    R1,[R0, #+228]
    748            //else if(p_pos+p_counter>1) p_counter++;
    749          }
   \   00000040   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
    750          void PanelCursorRight()
    751          {
   \                     PanelCursorRight:
   \   00000000   00402DE9           PUSH     {LR}
    752            if(CFG_edit_panel_xc+(big_bricks[0]->w*p_pos) < ScreenW()-((big_bricks[0]->w-1)*2) && p_pos+p_counter<24) p_pos++;
   \   00000004   888100EF           SWI      +33160
   \   00000008   ........           LDR      R1,??DataTable27  ;; bricks
   \   0000000C   ........           LDR      R12,??DataTable22  ;; CFG_edit_panel_xc
   \   00000010   283091E5           LDR      R3,[R1, #+40]
   \   00000014   E42091E5           LDR      R2,[R1, #+228]
   \   00000018   B0E0D3E1           LDRH     LR,[R3, #+0]
   \   0000001C   00C09CE5           LDR      R12,[R12, #+0]
   \   00000020   92CE2CE0           MLA      R12,R2,LR,R12
   \   00000024   01304EE2           SUB      R3,LR,#+1
   \   00000028   830040E0           SUB      R0,R0,R3, LSL #+1
   \   0000002C   00005CE1           CMP      R12,R0
   \   00000030   0080BD28           POPCS    {PC}
   \   00000034   E80091E5           LDR      R0,[R1, #+232]
   \   00000038   020080E0           ADD      R0,R0,R2
   \   0000003C   180050E3           CMP      R0,#+24
   \   00000040   010082B2           ADDLT    R0,R2,#+1
   \   00000044   E40081B5           STRLT    R0,[R1, #+228]
    753            //else if(p_pos+p_counter<8) p_counter++;
    754          }
   \   00000048   0080BDE8           POP      {PC}             ;; return
    755          
    756          
    757          
    758          #define PS (p_pos+p_counter)
    759          
    760          

   \                                 In segment CODE, align 4, keep-with-next
    761          void FillLevelByPos()
    762          {
    763            char dest;
    764            if(PS<8) dest=PS+1;
   \                     FillLevelByPos:
   \   00000000   ........           LDR      R0,??DataTable27  ;; bricks
   \   00000004   E81090E5           LDR      R1,[R0, #+232]
   \   00000008   E42090E5           LDR      R2,[R0, #+228]
   \   0000000C   023081E0           ADD      R3,R1,R2
   \   00000010   021081E0           ADD      R1,R1,R2
    765            else dest=PS+12;
    766            /*else switch(PS)
    767            {
    768              case 9: {dest = 20;break;} //bigest user
    769              case 10: {dest = 21;break;} //smallest user
    770              case 11: {dest = 22;break;} //freeze
    771              case 11: {dest = 23;break;} //speedy
    772              case 12: {dest = 24;break;} //slowly
    773              case 13: {dest = 25;break;} //live++
    774              case 14: {dest = 26;break;} //super ball
    775              case 15: {dest = 27;break;} //nightmare-ball
    776              case 16: {dest = 28;break;} //shells1
    777              case 17: {dest = 29;break;} //rockets
    778              case 18: {dest = 30;break;} //prilipalka
    779              case 19: {dest = 31;break;} //защита
    780              case 20: {dest = 32;break;} //увеличение м€ча
    781              case 21: {dest = 33;break;} //уменьшение м€ча
    782              case 22: {dest = 34;break;} //неизвестный бонус
    783              case 23: {dest = 35;break;} //+100 points
    784            }*/
    785            used_level[cur_ypos][cur_xpos] = dest;
   \   00000014   E02090E5           LDR      R2,[R0, #+224]
   \   00000018   080051E3           CMP      R1,#+8
   \   0000001C   011083B2           ADDLT    R1,R3,#+1
   \   00000020   0C1083A2           ADDGE    R1,R3,#+12
   \   00000024   DC3090E5           LDR      R3,[R0, #+220]
   \   00000028   033263E0           RSB      R3,R3,R3, LSL #+4
   \   0000002C   000083E0           ADD      R0,R3,R0
   \   00000030   000082E0           ADD      R0,R2,R0
   \   00000034   0411C0E5           STRB     R1,[R0, #+260]
    786          }
   \   00000038   1EFF2FE1           BX       LR               ;; return

   \                                 In segment DATA_I, align 4, align-sorted
   \                     bricks:
   \   00000000                      DS8 40
   \   00000028                      REQUIRE `?<Initializer for bricks>`
   \                     big_bricks:
   \   00000028                      DS8 120
   \   000000A0                      REQUIRE `?<Initializer for big_bricks>`
   \                     map:
   \   000000A0                      DS8 16
   \   000000B0                      REQUIRE `?<Initializer for map>`
   \                     menu_items:
   \   000000B0                      DS8 28
   \   000000CC                      REQUIRE `?<Initializer for menu_items>`
   \                     ShowAbout:
   \   000000CC                      DS8 4
   \   000000D0                      REQUIRE `?<Initializer for ShowAbout>`
   \                     menu_active:
   \   000000D0                      DS8 4
   \   000000D4                      REQUIRE `?<Initializer for menu_active>`
   \                     pwd:
   \   000000D4                      DS8 4
   \   000000D8                      REQUIRE `?<Initializer for pwd>`
   \                     e_ws:
   \   000000D8                      DS8 4
   \   000000DC                      REQUIRE `?<Initializer for e_ws>`
   \                     cur_ypos:
   \   000000DC                      DS8 4
   \   000000E0                      REQUIRE `?<Initializer for cur_ypos>`
   \                     cur_xpos:
   \   000000E0                      DS8 4
   \   000000E4                      REQUIRE `?<Initializer for cur_xpos>`
   \                     p_pos:
   \   000000E4                      DS8 4
   \   000000E8                      REQUIRE `?<Initializer for p_pos>`
   \                     p_counter:
   \   000000E8                      DS8 4
   \   000000EC                      REQUIRE `?<Initializer for p_counter>`
   \                     offset1:
   \   000000EC                      DS8 4
   \   000000F0                      REQUIRE `?<Initializer for offset1>`
    787          
    788          
    789          char sp_type; //0-right;1-left;2-up;3-down
    790          int sp_count;
   \                     sp_count:
   \   000000F0                      DS8 4
   \   000000F4                      REQUIRE `?<Initializer for sp_count>`
    791          int sp_utime;
   \                     sp_utime:
   \   000000F4                      DS8 4
   \   000000F8                      REQUIRE `?<Initializer for sp_utime>`
    792          int sp_time;
   \                     sp_time:
   \   000000F8                      DS8 4
   \   000000FC                      REQUIRE `?<Initializer for sp_time>`
   \                     ShowEdit:
   \   000000FC                      DS8 1
   \   000000FD                      REQUIRE `?<Initializer for ShowEdit>`
   \                     cur_pos:
   \   000000FD                      DS8 1
   \   000000FE                      REQUIRE `?<Initializer for cur_pos>`
   \                     num_to_save:
   \   000000FE                      DS8 1
   \   000000FF                      REQUIRE `?<Initializer for num_to_save>`
   \                     edit_cur:
   \   000000FF                      DS8 1
   \   00000100                      REQUIRE `?<Initializer for edit_cur>`
   \                     sp_type:
   \   00000100                      DS8 1
   \   00000101                      REQUIRE `?<Initializer for sp_type>`
   \   00000101                      DS8 3
   \                     used_level:
   \   00000104                      DS8 480
   \   000002E4                      REQUIRE `?<Initializer for used_level>`
   \                     lgn:
   \   000002E4                      DS8 128
   \   00000364                      REQUIRE `?<Initializer for lgn>`
   \                     cmt:
   \   00000364                      DS8 128
   \   000003E4                      REQUIRE `?<Initializer for cmt>`
    793          GBSTMR sptimer;
   \                     sptimer:
   \   000003E4                      DS8 16
   \   000003F4                      REQUIRE `?<Initializer for sptimer>`

   \                                 In segment DATA_I, align 4, align-sorted
   \                     comments:
   \   00000000                      DS8 92
   \   0000005C                      REQUIRE `?<Initializer for comments>`
    794          
    795          

   \                                 In segment CODE, align 4, keep-with-next
    796          void MoveCursor()
    797          {
   \                     MoveCursor:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
    798            if(sp_type==0 && cur_xpos<14) cur_xpos++;
   \   00000004   ........           LDR      R4,??DataTable27  ;; bricks
   \   00000008   E00094E5           LDR      R0,[R4, #+224]
   \   0000000C   0011D4E5           LDRB     R1,[R4, #+256]
   \   00000010   000051E3           CMP      R1,#+0
   \   00000014   0300001A           BNE      ??MoveCursor_0
   \   00000018   0E0050E3           CMP      R0,#+14
   \   0000001C   050000AA           BGE      ??MoveCursor_1
   \   00000020   010080E2           ADD      R0,R0,#+1
   \   00000024   030000EA           B        ??MoveCursor_1
    799            if(sp_type==1 && cur_xpos>0) cur_xpos--;
   \                     ??MoveCursor_0:
   \   00000028   010051E3           CMP      R1,#+1
   \   0000002C   0100001A           BNE      ??MoveCursor_1
   \   00000030   010050E3           CMP      R0,#+1
   \   00000034   010040A2           SUBGE    R0,R0,#+1
   \                     ??MoveCursor_1:
   \   00000038   E00084E5           STR      R0,[R4, #+224]
    800            if(sp_type==2 ) 
   \   0000003C   DC0094E5           LDR      R0,[R4, #+220]
   \   00000040   020051E3           CMP      R1,#+2
   \   00000044   0300001A           BNE      ??MoveCursor_2
    801            {
    802             if(cur_ypos>3) cur_ypos--;
   \   00000048   040050E3           CMP      R0,#+4
   \   0000004C   050000BA           BLT      ??MoveCursor_3
   \   00000050   010040E2           SUB      R0,R0,#+1
   \   00000054   030000EA           B        ??MoveCursor_3
    803            }
    804            if(sp_type==3 && cur_ypos<31) cur_ypos++;
   \                     ??MoveCursor_2:
   \   00000058   030051E3           CMP      R1,#+3
   \   0000005C   0100001A           BNE      ??MoveCursor_3
   \   00000060   1F0050E3           CMP      R0,#+31
   \   00000064   010080B2           ADDLT    R0,R0,#+1
    805            
    806            sp_utime++;
    807            if(sp_utime<sp_time) GBS_StartTimerProc(&sptimer,sp_count,MoveCursor);
   \                     ??MoveCursor_3:
   \   00000068   F81094E5           LDR      R1,[R4, #+248]
   \   0000006C   DC0084E5           STR      R0,[R4, #+220]
   \   00000070   F40094E5           LDR      R0,[R4, #+244]
   \   00000074   F95FA0E3           MOV      R5,#+996
   \   00000078   010080E2           ADD      R0,R0,#+1
   \   0000007C   F40084E5           STR      R0,[R4, #+244]
   \   00000080   010050E1           CMP      R0,R1
   \   00000084   040000AA           BGE      ??MoveCursor_4
   \   00000088   2C209FE5           LDR      R2,??MoveCursor_5  ;; MoveCursor
   \   0000008C   F01094E5           LDR      R1,[R4, #+240]
   \   00000090   040085E0           ADD      R0,R5,R4
   \   00000094   4D0000EF           SWI      +77
    808            else {sp_utime=0;GBS_StopTimer(&sptimer);GBS_DelTimer(&sptimer);RedrawScreen();return;}
    809          }
   \   00000098   3080BDE8           POP      {R4,R5,PC}
   \                     ??MoveCursor_4:
   \   0000009C   0000A0E3           MOV      R0,#+0
   \   000000A0   F40084E5           STR      R0,[R4, #+244]
   \   000000A4   040085E0           ADD      R0,R5,R4
   \   000000A8   440100EF           SWI      +324
   \   000000AC   040085E0           ADD      R0,R5,R4
   \   000000B0   8C0100EF           SWI      +396
   \   000000B4   ........           BL       RedrawScreen
   \   000000B8   3080BDE8           POP      {R4,R5,PC}       ;; return
   \                     ??MoveCursor_5:
   \   000000BC   ........           DC32     MoveCursor
    810          
    811          

   \                                 In segment CODE, align 4, keep-with-next
    812          void StartSpeedCursor(char type,int count,int time)
    813          {
    814            sp_type = type;
   \                     StartSpeedCursor:
   \   00000000   ........           LDR      R3,??DataTable27  ;; bricks
   \   00000004   0001C3E5           STRB     R0,[R3, #+256]
    815            sp_count = count;
   \   00000008   F01083E5           STR      R1,[R3, #+240]
    816            sp_time = time;
   \   0000000C   F82083E5           STR      R2,[R3, #+248]
    817            MoveCursor();
   \   00000010   ........           B        MoveCursor       ;; tailcall
    818          }
    819          
    820          extern const unsigned int CFG_cur_count;
    821          extern const unsigned int CFG_cur_time;
    822          

   \                                 In segment CODE, align 4, keep-with-next
    823          void NavCursor(GUI_MSG *msg)
    824          {
   \                     NavCursor:
   \   00000000   00402DE9           PUSH     {LR}
    825            if(msg->gbsmsg->msg==KEY_DOWN)
   \   00000004   041090E5           LDR      R1,[R0, #+4]
   \   00000008   ........           LDR      R0,??DataTable27  ;; bricks
   \   0000000C   042091E5           LDR      R2,[R1, #+4]
   \   00000010   9330A0E3           MOV      R3,#+147
   \   00000014   403F83E3           ORR      R3,R3,#0x100
   \   00000018   030052E1           CMP      R2,R3
   \   0000001C   2000001A           BNE      ??NavCursor_0
    826            {
    827              if((msg->gbsmsg->submess==RIGHT_BUTTON || msg->gbsmsg->submess=='6') && cur_xpos<14) {cur_xpos++;RedrawScreen();return;}
   \   00000020   083091E5           LDR      R3,[R1, #+8]
   \   00000024   E02090E5           LDR      R2,[R0, #+224]
   \   00000028   3E0053E3           CMP      R3,#+62
   \   0000002C   36005313           CMPNE    R3,#+54
   \   00000030   0300001A           BNE      ??NavCursor_1
   \   00000034   0E0052E3           CMP      R2,#+14
   \   00000038   011082B2           ADDLT    R1,R2,#+1
   \   0000003C   E01080B5           STRLT    R1,[R0, #+224]
   \   00000040   3A0000BA           BLT      ??NavCursor_2
    828              if((msg->gbsmsg->submess==LEFT_BUTTON || msg->gbsmsg->submess=='4') && cur_xpos>0) {cur_xpos--;RedrawScreen();return;}
   \                     ??NavCursor_1:
   \   00000044   3D0053E3           CMP      R3,#+61
   \   00000048   34005313           CMPNE    R3,#+52
   \   0000004C   0300001A           BNE      ??NavCursor_3
   \   00000050   010052E3           CMP      R2,#+1
   \   00000054   011042A2           SUBGE    R1,R2,#+1
   \   00000058   E01080A5           STRGE    R1,[R0, #+224]
   \   0000005C   330000AA           BGE      ??NavCursor_2
    829              if((msg->gbsmsg->submess==DOWN_BUTTON || msg->gbsmsg->submess=='8') && cur_ypos<31) {cur_ypos++;RedrawScreen();return;}
   \                     ??NavCursor_3:
   \   00000060   DC2090E5           LDR      R2,[R0, #+220]
   \   00000064   3C0053E3           CMP      R3,#+60
   \   00000068   38005313           CMPNE    R3,#+56
   \   0000006C   0300001A           BNE      ??NavCursor_4
   \   00000070   1F0052E3           CMP      R2,#+31
   \   00000074   011082B2           ADDLT    R1,R2,#+1
   \   00000078   DC1080B5           STRLT    R1,[R0, #+220]
   \   0000007C   2B0000BA           BLT      ??NavCursor_2
    830              if((msg->gbsmsg->submess==UP_BUTTON || msg->gbsmsg->submess=='2')) 
   \                     ??NavCursor_4:
   \   00000080   3B0053E3           CMP      R3,#+59
   \   00000084   32005313           CMPNE    R3,#+50
   \   00000088   0500001A           BNE      ??NavCursor_0
    831              {
    832                if(cur_ypos>3) cur_ypos--;
   \   0000008C   040052E3           CMP      R2,#+4
   \   00000090   260000BA           BLT      ??NavCursor_2
   \   00000094   011042E2           SUB      R1,R2,#+1
   \   00000098   DC1080E5           STR      R1,[R0, #+220]
    833                RedrawScreen();return;
   \   0000009C   ........           BL       RedrawScreen
   \   000000A0   0080BDE8           POP      {PC}
    834              }
    835            }
    836            if(msg->gbsmsg->msg==LONG_PRESS)
   \                     ??NavCursor_0:
   \   000000A4   042091E5           LDR      R2,[R1, #+4]
   \   000000A8   9530A0E3           MOV      R3,#+149
   \   000000AC   403F83E3           ORR      R3,R3,#0x100
   \   000000B0   030052E1           CMP      R2,R3
   \   000000B4   0080BD18           POPNE    {PC}
    837            {
    838              if(msg->gbsmsg->submess==RIGHT_BUTTON || msg->gbsmsg->submess=='6') {StartSpeedCursor(0,CFG_cur_count,CFG_cur_time);RedrawScreen();return;}
   \   000000B8   78209FE5           LDR      R2,??NavCursor_5  ;; CFG_cur_count
   \   000000BC   78309FE5           LDR      R3,??NavCursor_5+0x4  ;; CFG_cur_time
   \   000000C0   08C091E5           LDR      R12,[R1, #+8]
   \   000000C4   002092E5           LDR      R2,[R2, #+0]
   \   000000C8   003093E5           LDR      R3,[R3, #+0]
   \   000000CC   3E005CE3           CMP      R12,#+62
   \   000000D0   36005C13           CMPNE    R12,#+54
   \   000000D4   0010A003           MOVEQ    R1,#+0
   \   000000D8   0300000A           BEQ      ??NavCursor_6
    839              if(msg->gbsmsg->submess==LEFT_BUTTON || msg->gbsmsg->submess=='4') {StartSpeedCursor(1,CFG_cur_count,CFG_cur_time);RedrawScreen();return;}
   \   000000DC   3D005CE3           CMP      R12,#+61
   \   000000E0   34005C13           CMPNE    R12,#+52
   \   000000E4   0500001A           BNE      ??NavCursor_7
   \   000000E8   0110A0E3           MOV      R1,#+1
   \                     ??NavCursor_6:
   \   000000EC   0011C0E5           STRB     R1,[R0, #+256]
   \   000000F0   F02080E5           STR      R2,[R0, #+240]
   \   000000F4   F83080E5           STR      R3,[R0, #+248]
   \   000000F8   ........           BL       MoveCursor
   \                     ??NavCursor_8:
   \   000000FC   0B0000EA           B        ??NavCursor_2
    840              if(msg->gbsmsg->submess==DOWN_BUTTON || msg->gbsmsg->submess=='8') {StartSpeedCursor(3,CFG_cur_count,CFG_cur_time);RedrawScreen();return;}
   \                     ??NavCursor_7:
   \   00000100   3C005CE3           CMP      R12,#+60
   \   00000104   38005C13           CMPNE    R12,#+56
   \   00000108   0310A003           MOVEQ    R1,#+3
   \   0000010C   F6FFFF0A           BEQ      ??NavCursor_6
    841              if(msg->gbsmsg->submess==UP_BUTTON || msg->gbsmsg->submess=='2') {StartSpeedCursor(2,CFG_cur_count,CFG_cur_time);RedrawScreen();return;}
   \   00000110   3B005CE3           CMP      R12,#+59
   \   00000114   32005C13           CMPNE    R12,#+50
   \   00000118   0080BD18           POPNE    {PC}
   \   0000011C   0210A0E3           MOV      R1,#+2
   \   00000120   0011C0E5           STRB     R1,[R0, #+256]
   \   00000124   F02080E5           STR      R2,[R0, #+240]
   \   00000128   F83080E5           STR      R3,[R0, #+248]
   \   0000012C   ........           BL       MoveCursor
   \                     ??NavCursor_2:
   \   00000130   ........           BL       RedrawScreen
   \   00000134   0080BDE8           POP      {PC}             ;; return
   \                     ??NavCursor_5:
   \   00000138   ........           DC32     CFG_cur_count
   \   0000013C   ........           DC32     CFG_cur_time
    842            }
    843            
    844          }
    845          
    846          

   \                                 In segment CODE, align 4, keep-with-next
    847          static int OnKey(MAIN_GUI *data, GUI_MSG *msg)
    848          {
   \                     OnKey:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
    849            
    850            if(menu_active) return(MenuKeyhook(msg));
   \   00000004   ........           LDR      R4,??DataTable27  ;; bricks
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   D00094E5           LDR      R0,[R4, #+208]
   \   00000010   000050E3           CMP      R0,#+0
   \   00000014   0200000A           BEQ      ??OnKey_0
   \   00000018   0500A0E1           MOV      R0,R5
   \   0000001C   ........           BL       MenuKeyhook
   \   00000020   3080BDE8           POP      {R4,R5,PC}
    851            if(ShowEdit) return(EditKeyhook(msg));
   \                     ??OnKey_0:
   \   00000024   FC00D4E5           LDRB     R0,[R4, #+252]
   \   00000028   000050E3           CMP      R0,#+0
   \   0000002C   0500A0E1           MOV      R0,R5
   \   00000030   0100000A           BEQ      ??OnKey_1
   \   00000034   ........           BL       EditKeyhook
   \   00000038   3080BDE8           POP      {R4,R5,PC}
    852            
    853            NavCursor(msg);
   \                     ??OnKey_1:
   \   0000003C   ........           BL       NavCursor
    854            
    855            if(msg->gbsmsg->msg==KEY_DOWN)
   \   00000040   040095E5           LDR      R0,[R5, #+4]
   \   00000044   9320A0E3           MOV      R2,#+147
   \   00000048   041090E5           LDR      R1,[R0, #+4]
   \   0000004C   402F82E3           ORR      R2,R2,#0x100
   \   00000050   020051E1           CMP      R1,R2
   \   00000054   2A00001A           BNE      ??OnKey_2
    856            {
    857              if((msg->gbsmsg->submess==ENTER_BUTTON || msg->gbsmsg->submess=='5' || msg->gbsmsg->submess==RIGHT_BUTTON) && ShowAbout) {ShowAbout=0;RedrawScreen();return 0;}
   \   00000058   082090E5           LDR      R2,[R0, #+8]
   \   0000005C   0010A0E3           MOV      R1,#+0
   \   00000060   1A0052E3           CMP      R2,#+26
   \   00000064   35005213           CMPNE    R2,#+53
   \   00000068   3E005213           CMPNE    R2,#+62
   \   0000006C   0300001A           BNE      ??OnKey_3
   \   00000070   CC2094E5           LDR      R2,[R4, #+204]
   \   00000074   000052E3           CMP      R2,#+0
   \   00000078   CC108415           STRNE    R1,[R4, #+204]
   \   0000007C   1F00001A           BNE      ??OnKey_4
    858              if(msg->gbsmsg->submess==LEFT_SOFT && menu_active==0) {menu_active=1;Tlog("menu enable");RedrawScreen();return 0;}
   \                     ??OnKey_3:
   \   00000080   082090E5           LDR      R2,[R0, #+8]
   \   00000084   010052E3           CMP      R2,#+1
   \   00000088   D0209405           LDREQ    R2,[R4, #+208]
   \   0000008C   00005203           CMPEQ    R2,#+0
   \   00000090   0100A003           MOVEQ    R0,#+1
   \   00000094   D0008405           STREQ    R0,[R4, #+208]
   \   00000098   1800000A           BEQ      ??OnKey_4
    859              
    860              if(msg->gbsmsg->submess=='3') {PanelCursorRight();RedrawScreen();return 0;}
   \   0000009C   082090E5           LDR      R2,[R0, #+8]
   \   000000A0   330052E3           CMP      R2,#+51
   \   000000A4   0100001A           BNE      ??OnKey_5
   \   000000A8   ........           BL       PanelCursorRight
   \   000000AC   130000EA           B        ??OnKey_4
    861              if(msg->gbsmsg->submess=='1') {PanelCursorLeft();RedrawScreen();return 0;}
   \                     ??OnKey_5:
   \   000000B0   310052E3           CMP      R2,#+49
   \   000000B4   0100001A           BNE      ??OnKey_6
   \   000000B8   ........           BL       PanelCursorLeft
   \   000000BC   0F0000EA           B        ??OnKey_4
    862              
    863              if(msg->gbsmsg->submess=='7' && p_counter>0) {p_counter--;RedrawScreen();return 0;}
   \                     ??OnKey_6:
   \   000000C0   083090E5           LDR      R3,[R0, #+8]
   \   000000C4   E82094E5           LDR      R2,[R4, #+232]
   \   000000C8   370053E3           CMP      R3,#+55
   \   000000CC   0200001A           BNE      ??OnKey_7
   \   000000D0   010052E3           CMP      R2,#+1
   \   000000D4   010042A2           SUBGE    R0,R2,#+1
   \   000000D8   070000AA           BGE      ??OnKey_8
    864              if(msg->gbsmsg->submess=='9' && p_counter<24-CFG_edit_panel_drawcount) {p_counter++;RedrawScreen();return 0;}
   \                     ??OnKey_7:
   \   000000DC   390053E3           CMP      R3,#+57
   \   000000E0   0900001A           BNE      ??OnKey_9
   \   000000E4   ........           LDR      R3,??DataTable28  ;; CFG_edit_panel_drawcount
   \   000000E8   003093E5           LDR      R3,[R3, #+0]
   \   000000EC   183063E2           RSB      R3,R3,#+24
   \   000000F0   030052E1           CMP      R2,R3
   \   000000F4   0400002A           BCS      ??OnKey_9
   \   000000F8   010082E2           ADD      R0,R2,#+1
   \                     ??OnKey_8:
   \   000000FC   E80084E5           STR      R0,[R4, #+232]
   \                     ??OnKey_4:
   \   00000100   ........           BL       RedrawScreen
   \                     ??OnKey_2:
   \   00000104   0000A0E3           MOV      R0,#+0
   \   00000108   3080BDE8           POP      {R4,R5,PC}
    865              
    866              if(msg->gbsmsg->submess==ENTER_BUTTON || msg->gbsmsg->submess=='5') {FillLevelByPos();RedrawScreen();return 0;}
   \                     ??OnKey_9:
   \   0000010C   082090E5           LDR      R2,[R0, #+8]
   \   00000110   1A0052E3           CMP      R2,#+26
   \   00000114   35005213           CMPNE    R2,#+53
   \   00000118   0100001A           BNE      ??OnKey_10
   \   0000011C   ........           BL       FillLevelByPos
   \   00000120   F6FFFFEA           B        ??OnKey_4
    867              if(msg->gbsmsg->submess==GREEN_BUTTON) {used_level[cur_ypos][cur_xpos] = 0;RedrawScreen();return 0;}
   \                     ??OnKey_10:
   \   00000124   0B0052E3           CMP      R2,#+11
   \   00000128   F5FFFF1A           BNE      ??OnKey_2
   \   0000012C   E00094E5           LDR      R0,[R4, #+224]
   \   00000130   DC2094E5           LDR      R2,[R4, #+220]
   \   00000134   022262E0           RSB      R2,R2,R2, LSL #+4
   \   00000138   042082E0           ADD      R2,R2,R4
   \   0000013C   020080E0           ADD      R0,R0,R2
   \   00000140   0411C0E5           STRB     R1,[R0, #+260]
   \   00000144   EDFFFFEA           B        ??OnKey_4
    868              //if(msg->gbsmsg->submess==RIGHT_SOFT) return 1;
    869            }
    870            
    871            return 0;
    872          }
    873          
    874          
    875          
    876          
    877          
    878          
    879          
    880          
    881          
    882          
    883          
    884          extern void kill_data(void *p, void (*func_p)(void *));//Ёта функци€ убивает эльф и освобождает пам€ть
    885          

   \                                 In segment CODE, align 4, keep-with-next
    886          int method8(void){return(0);}
   \                     method8:
   \   00000000   0000A0E3           MOV      R0,#+0
   \   00000004   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
    887          int method9(void){return(0);}
   \                     method9:
   \   00000000   0000A0E3           MOV      R0,#+0
   \   00000004   1EFF2FE1           BX       LR               ;; return
    888          
    889          const void * const gui_methods[11]={
    890            (void *)OnRedraw,
    891            (void *)onCreate,
    892            (void *)onClose,
    893            (void *)onFocus,
    894            (void *)onUnfocus,
    895            (void *)OnKey,
    896            0,
    897            (void *)kill_data,
    898            (void *)method8,
    899            (void *)method9,
    900            0
    901          };
    902          
    903          

   \                                 In segment DATA_Z, align 4, align-sorted
    904          int gui_id;
   \                     gui_id:
   \   00000000                      DS8 4
    905          MAIN_GUI *main_gui;
   \                     main_gui:
   \   00000004                      DS8 4
    906          

   \                                 In segment CODE, align 4, keep-with-next
    907          static void maincsm_oncreate(CSM_RAM *data)//¬ызываетс€ при открытии эльфа,делаем что нужно
    908          {
   \                     maincsm_oncreate:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
    909            /*//тут хитрые махинации дл€ получени€ ид гу€ чтобы мона было с ним манипулировать
    910            static const RECT Canvas={0,0,0,0};
    911            MAIN_GUI *main_gui=malloc(sizeof(MAIN_GUI));
    912            MAIN_CSM*csm=(MAIN_CSM*)data;
    913            zeromem(main_gui,sizeof(MAIN_GUI));
    914            patch_rect((RECT*)&Canvas,0,YDISP,ScreenW()-1,ScreenH()-1);
    915            main_gui->gui.canvas=(void *)(&Canvas);
    916            main_gui->gui.flag30=2;
    917            main_gui->gui.methods=(void *)gui_methods;
    918            main_gui->gui.item_ll.data_mfree=(void (*)(void *))mfree_adr();
    919            csm->csm.state=0;
    920            csm->csm.unk1=0;
    921            csm->gui_id=CreateGUI(main_gui);*/
    922            
    923            static const RECT Canvas={0,0,0,0};
    924            StoreXYXYtoRECT((RECT*)&Canvas,0,0,ScreenW()-1,ScreenH()-1);
   \   00000004   8C609FE5           LDR      R6,??maincsm_oncreate_0  ;; gui_methods
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   898100EF           SWI      +33161
   \   00000010   0050A0E1           MOV      R5,R0
   \   00000014   888100EF           SWI      +33160
   \   00000018   011045E2           SUB      R1,R5,#+1
    925            main_gui=malloc(sizeof(MAIN_GUI));
   \   0000001C   78509FE5           LDR      R5,??maincsm_oncreate_0+0x4  ;; gui_id
   \   00000020   02002DE9           PUSH     {R1}
   \   00000024   013040E2           SUB      R3,R0,#+1
   \   00000028   0020A0E3           MOV      R2,#+0
   \   0000002C   2C0086E2           ADD      R0,R6,#+44
   \   00000030   0010A0E3           MOV      R1,#+0
   \   00000034   340100EF           SWI      +308
   \   00000038   4000A0E3           MOV      R0,#+64
   \   0000003C   140000EF           SWI      +20
   \   00000040   040085E5           STR      R0,[R5, #+4]
    926            MAIN_CSM*csm=(MAIN_CSM*)data;
    927            zeromem(main_gui,sizeof(MAIN_GUI));
   \   00000044   4010A0E3           MOV      R1,#+64
   \   00000048   1D0100EF           SWI      +285
    928            //patch_rect((RECT*)&Canvas,0,YDISP,ScreenW()-1,ScreenH()-1);
    929            main_gui->gui.canvas=(void *)(&Canvas);
   \   0000004C   040095E5           LDR      R0,[R5, #+4]
   \   00000050   2C1086E2           ADD      R1,R6,#+44
   \   00000054   001080E5           STR      R1,[R0, #+0]
    930            main_gui->gui.flag30=2;
   \   00000058   040095E5           LDR      R0,[R5, #+4]
   \   0000005C   0210A0E3           MOV      R1,#+2
   \   00000060   301080E5           STR      R1,[R0, #+48]
    931            main_gui->gui.methods=(void *)gui_methods;
   \   00000064   040095E5           LDR      R0,[R5, #+4]
   \   00000068   046080E5           STR      R6,[R0, #+4]
    932            main_gui->gui.item_ll.data_mfree=(void (*)(void *))mfree_adr();
   \   0000006C   158000EF           SWI      +32789
   \   00000070   041095E5           LDR      R1,[R5, #+4]
   \   00000074   200081E5           STR      R0,[R1, #+32]
    933            csm->csm.state=0;
   \   00000078   0000A0E3           MOV      R0,#+0
   \   0000007C   100084E5           STR      R0,[R4, #+16]
    934            csm->csm.unk1=0;
   \   00000080   140084E5           STR      R0,[R4, #+20]
    935            gui_id=csm->gui_id=CreateGUI(main_gui);
   \   00000084   040095E5           LDR      R0,[R5, #+4]
   \   00000088   370100EF           SWI      +311
   \   0000008C   280084E5           STR      R0,[R4, #+40]
   \   00000090   000085E5           STR      R0,[R5, #+0]
    936          }
   \   00000094   7180BDE8           POP      {R0,R4-R6,PC}    ;; return
   \                     ??maincsm_oncreate_0:
   \   00000098   ........           DC32     gui_methods
   \   0000009C   ........           DC32     gui_id

   \                                 In segment DATA_C, align 4, align-sorted
   \                     gui_methods:
   \   00000000   ............       DC32 OnRedraw, onCreate, onClose, onFocus, onUnfocus, OnKey, 0H
   \              ............
   \              ............
   \              ............
   \              00000000    
   \   0000001C   ............       DC32 kill_data, method8, method9, 0H
   \              ............
   \              00000000    
   \   0000002C   000000000000       DC16 0, 0, 0, 0
   \              0000        
    937          

   \                                 In segment CODE, align 4, keep-with-next
    938          void ElfKiller(void)//освобождаем все зан€тое место эльфом в оперативе
    939          {
   \                     ElfKiller:
   \   00000000   00402DE9           PUSH     {LR}
    940            extern void *ELF_BEGIN;
    941            kill_data(&ELF_BEGIN,(void (*)(void *))mfree_adr());
   \   00000004   158000EF           SWI      +32789
   \   00000008   0010A0E1           MOV      R1,R0
   \   0000000C   04009FE5           LDR      R0,??ElfKiller_0  ;; ELF_BEGIN
   \   00000010   0040BDE8           POP      {LR}             ;; Pop
   \   00000014   ........           _BF      kill_data,??kill_data??rA  ;; tailcall
   \                     ??ElfKiller_0:
   \   00000018   ........           DC32     ELF_BEGIN
    942          }
    943          
    944          

   \                                 In segment CODE, align 4, keep-with-next
    945          static void maincsm_onclose(CSM_RAM *csm)//функци€ закрыти€ эльфа,тут освобождаем памчть если нужно и т.п.
    946          {
    947            SUBPROC((void *)ElfKiller);
   \                     maincsm_onclose:
   \   00000000   08009FE5           LDR      R0,??maincsm_onclose_0  ;; ElfKiller
   \   00000004   00402DE9           PUSH     {LR}
   \   00000008   710100EF           SWI      +369
    948          }
   \   0000000C   0080BDE8           POP      {PC}             ;; return
   \                     ??maincsm_onclose_0:
   \   00000010   ........           DC32     ElfKiller
    949          
    950          
    951          #pragma inline=forced
    952          int toupper(int c)
    953          {
    954            if ((c>='a')&&(c<='z')) c+='A'-'a';
    955            return(c);
    956          }
    957          #pragma inline
    958          int strcmp_nocase(const char *s1,const char *s2)
    959          {
    960            int i;
    961            int c;
    962            while(!(i=(c=toupper(*s1++))-toupper(*s2++))) if (!c) break;
    963            return(i);
    964          }
    965          

   \                                 In segment CODE, align 4, keep-with-next
    966          static int maincsm_onmessage(CSM_RAM *data, GBS_MSG *msg)//тут вообщем протекают все сообщени€ поступаемые из эльфа так сказать:)
    967          {
   \                     maincsm_onmessage:
   \   00000000   00402DE9           PUSH     {LR}
    968            //сообщение о реконфигурации например,ипц и т.д. и т.п.
    969            MAIN_CSM *csm=(MAIN_CSM*)data;
    970            if ((msg->msg==MSG_GUI_DESTROYED)&&((int)msg->data0==csm->gui_id))
   \   00000004   042091E5           LDR      R2,[R1, #+4]
   \   00000008   0E30A0E3           MOV      R3,#+14
   \   0000000C   643C83E3           ORR      R3,R3,#0x6400
   \   00000010   030052E1           CMP      R2,R3
   \   00000014   0500001A           BNE      ??maincsm_onmessage_0
   \   00000018   0C2091E5           LDR      R2,[R1, #+12]
   \   0000001C   283090E5           LDR      R3,[R0, #+40]
   \   00000020   030052E1           CMP      R2,R3
   \   00000024   1D00001A           BNE      ??maincsm_onmessage_1
    971            {
    972              csm->csm.state=-3;
   \   00000028   0220E0E3           MVN      R2,#+2
   \   0000002C   102080E5           STR      R2,[R0, #+16]
    973            }
    974            if (msg->msg==MSG_RECONFIGURE_REQ)//≈лси была реконфигураци€,то обновл€ем настройки эльфа
   \                     ??maincsm_onmessage_0:
   \   00000030   040091E5           LDR      R0,[R1, #+4]
   \   00000034   AF20A0E3           MOV      R2,#+175
   \   00000038   DE2C82E3           ORR      R2,R2,#0xDE00
   \   0000003C   020050E1           CMP      R0,R2
   \   00000040   1600001A           BNE      ??maincsm_onmessage_1
    975            {
    976              extern const char *successed_config_filename;
    977              if (strcmp_nocase(successed_config_filename,(char *)msg->data0)==0)
   \   00000044   0C0091E5           LDR      R0,[R1, #+12]
   \   00000048   ........           LDR      R1,??DataTable29  ;; successed_config_filename
   \   0000004C   001091E5           LDR      R1,[R1, #+0]
   \                     ??maincsm_onmessage_2:
   \   00000050   0020D1E5           LDRB     R2,[R1, #+0]
   \   00000054   610052E3           CMP      R2,#+97
   \   00000058   010000BA           BLT      ??maincsm_onmessage_3
   \   0000005C   7B0052E3           CMP      R2,#+123
   \   00000060   202042B2           SUBLT    R2,R2,#+32
   \                     ??maincsm_onmessage_3:
   \   00000064   0030D0E5           LDRB     R3,[R0, #+0]
   \   00000068   011081E2           ADD      R1,R1,#+1
   \   0000006C   610053E3           CMP      R3,#+97
   \   00000070   010000BA           BLT      ??maincsm_onmessage_4
   \   00000074   7B0053E3           CMP      R3,#+123
   \   00000078   203043B2           SUBLT    R3,R3,#+32
   \                     ??maincsm_onmessage_4:
   \   0000007C   010080E2           ADD      R0,R0,#+1
   \   00000080   033052E0           SUBS     R3,R2,R3
   \   00000084   0500001A           BNE      ??maincsm_onmessage_1
   \   00000088   000052E3           CMP      R2,#+0
   \   0000008C   EFFFFF1A           BNE      ??maincsm_onmessage_2
    978              {
    979                ShowMSG(1,(int)"конфиг обновлен!");
   \   00000090   10109FE5           LDR      R1,??maincsm_onmessage_5  ;; `?<Constant "\\352\\356\\355\\364\\350\\343 \\356\\341\\`
   \   00000094   0100A0E3           MOV      R0,#+1
   \   00000098   480100EF           SWI      +328
    980                InitConfig();
   \   0000009C   ........           _BLF     InitConfig,??InitConfig??rA
    981              }
    982            }
    983          
    984            return(1);
   \                     ??maincsm_onmessage_1:
   \   000000A0   0100A0E3           MOV      R0,#+1
   \   000000A4   0080BDE8           POP      {PC}             ;; return
   \                     ??maincsm_onmessage_5:
   \   000000A8   ........           DC32     `?<Constant "\\352\\356\\355\\364\\350\\343 \\356\\341\\`
    985          }
    986          
    987          
    988          static const struct//это структура цсм,разбиратьс€ не надо:)
    989          {
    990            CSM_DESC maincsm;
    991            WSHDR maincsm_name;

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "ArcanoidMapMaker v0.4...">`:
   \   00000000   417263616E6F       DC8 "ArcanoidMapMaker v0.4 (c)half65"
   \              69644D61704D
   \              616B65722076
   \              302E34202863
   \              2968616C6636
   \              3500        
   \   00000020   456E7669726F       DC8 "Environment variable PWD = %s"
   \              6E6D656E7420
   \              766172696162
   \              6C6520505744
   \              203D20257300
   \   0000003E   0000               DC8 0, 0
   \   00000040   666E616D653A       DC8 "fname:%s"
   \              257300      
   \   00000049   000000             DC8 0, 0, 0
   \   0000004C   2E61646D00         DC8 ".adm"
   \   00000051   000000             DC8 0, 0, 0
   \   00000054   2E41444D00         DC8 ".ADM"
   \   00000059   000000             DC8 0, 0, 0
   \   0000005C   ............       DC32 maincsm_onmessage, maincsm_oncreate, 0, 0, 0, 0, maincsm_onclose
   \              ....00000000
   \              000000000000
   \              000000000000
   \              ........    
   \   00000078   2C0000000100       DC32 44, 1, minus11, maincsm_name_body, 55AACCCCH, 3333AA55H, 0
   \              0000........
   \              ........CCCC
   \              AA5555AA3333
   \              00000000    
   \   00000094   8B00               DC16 139
   \   00000096   0000               DC8 0, 0
    992          }MAINCSM =
    993          {
    994            {
    995            maincsm_onmessage,
    996            maincsm_oncreate,
    997          #ifdef NEWSGOLD
    998            0,
    999            0,
   1000            0,
   1001            0,
   1002          #endif
   1003            maincsm_onclose,
   1004            sizeof(MAIN_CSM),
   1005            1,
   1006            &minus11
   1007            },
   1008            {
   1009              maincsm_name_body,
   1010              NAMECSM_MAGIC1,
   1011              NAMECSM_MAGIC2,
   1012              0x0,
   1013              139
   1014            }
   1015          };
   1016          

   \                                 In segment CODE, align 4, keep-with-next
   1017          void UpdateCSMname(void)//ну собственно им€ эльфа передаваемое хтаску
   1018          {
   1019            wsprintf((WSHDR *)(&MAINCSM.maincsm_name),"ArcanoidMapMaker v0.4 (c)half65");
   \                     UpdateCSMname:
   \   00000000   ........           LDR      R0,??DataTable34  ;; `?<Constant "ArcanoidMapMaker v0.4...">`
   \   00000004   00402DE9           PUSH     {LR}
   \   00000008   0010A0E1           MOV      R1,R0
   \   0000000C   840080E2           ADD      R0,R0,#+132
   \   00000010   240100EF           SWI      +292
   1020          }
   \   00000014   0080BDE8           POP      {PC}             ;; return
   1021          
   1022          
   1023          
   1024          
   1025          
   1026          
   1027          
   1028          #define NUM_BRICKS 9
   1029          
   1030          
   1031          
   1032          
   1033          

   \                                 In segment CODE, align 4, keep-with-next
   1034          int tolower(int toLower)
   1035          {
   1036              if ((toLower >= 'A') && (toLower <= 'Z')) return (toLower + 0x20);
   \                     tolower:
   \   00000000   410050E3           CMP      R0,#+65
   \   00000004   1EFF2FB1           BXLT     LR
   \   00000008   5B0050E3           CMP      R0,#+91
   \   0000000C   200080B2           ADDLT    R0,R0,#+32
   1037              return toLower;
   \   00000010   1EFF2FE1           BX       LR               ;; return
   1038          }

   \                                 In segment CODE, align 4, keep-with-next
   1039          IMGHDR* CreateImgHdrByAnyFile (char * name,short width, short height, int rot,int scale,int origin_size)
   1040          {
   \                     CreateImgHdrByAnyFile:
   \   00000000   F64F2DE9           PUSH     {R1,R2,R4-R11,LR}
   \   00000004   14D04DE2           SUB      SP,SP,#+20
   \   00000008   40609DE5           LDR      R6,[SP, #+64]
   \   0000000C   44709DE5           LDR      R7,[SP, #+68]
   \   00000010   0040A0E1           MOV      R4,R0
   \   00000014   0350A0E1           MOV      R5,R3
   1041            WSHDR *path=AllocWS(256);
   \   00000018   400FA0E3           MOV      R0,#+256
   \   0000001C   250100EF           SWI      +293
   \   00000020   0080A0E1           MOV      R8,R0
   1042            str_2ws(path,name,256);
   \   00000024   402FA0E3           MOV      R2,#+256
   \   00000028   0410A0E1           MOV      R1,R4
   \   0000002C   6C0100EF           SWI      +364
   1043            unsigned int err=0;
   \   00000030   0040A0E3           MOV      R4,#+0
   \   00000034   00408DE5           STR      R4,[SP, #+0]
   1044            int msz,uid;
   1045            IMGHDR *tmpimg,*myimg=NULL;  
   1046            WSHDR *ext;
   1047            HObj  mypicObj;
   1048            short pos;
   1049            int len;
   1050            if (!path)goto exit0;
   \   00000038   000058E3           CMP      R8,#+0
   \   0000003C   9900000A           BEQ      ??CreateImgHdrByAnyFile_0
   1051            len=wstrlen(path); 
   \   00000040   0800A0E1           MOV      R0,R8
   \   00000044   230100EF           SWI      +291
   \   00000048   0090A0E1           MOV      R9,R0
   1052            pos= wstrrchr(path,len,'.'); 
   \   0000004C   2E20A0E3           MOV      R2,#+46
   \   00000050   0910A0E1           MOV      R1,R9
   \   00000054   0800A0E1           MOV      R0,R8
   \   00000058   DD0100EF           SWI      +477
   \   0000005C   00A0B0E1           MOVS     R10,R0
   1053            if (!pos)goto exit0;
   \   00000060   9000000A           BEQ      ??CreateImgHdrByAnyFile_0
   1054          
   1055            ext=AllocWS(len-pos);
   \   00000064   0AB049E0           SUB      R11,R9,R10
   \   00000068   0B00A0E1           MOV      R0,R11
   \   0000006C   250100EF           SWI      +293
   \   00000070   0090A0E1           MOV      R9,R0
   1056            wstrcpybypos(ext,path,pos+1,len-pos);
   \   00000074   0B30A0E1           MOV      R3,R11
   \   00000078   01208AE2           ADD      R2,R10,#+1
   \   0000007C   0810A0E1           MOV      R1,R8
   \   00000080   140200EF           SWI      +532
   1057            char e_ext[8];
   1058            ws_2str(ext,e_ext,wstrlen(ext));
   \   00000084   0900A0E1           MOV      R0,R9
   \   00000088   230100EF           SWI      +291
   \   0000008C   0020A0E1           MOV      R2,R0
   \   00000090   0C108DE2           ADD      R1,SP,#+12
   \   00000094   0900A0E1           MOV      R0,R9
   \   00000098   A30000EF           SWI      +163
   1059            for(int tl=0;tl<strlen(e_ext);tl++)
   \   0000009C   00A0A0E3           MOV      R10,#+0
   \   000000A0   040000EA           B        ??CreateImgHdrByAnyFile_1
   1060            {
   1061              e_ext[tl] = tolower(e_ext[tl]);
   \                     ??CreateImgHdrByAnyFile_2:
   \   000000A4   00B08AE0           ADD      R11,R10,R0
   \   000000A8   0000DBE5           LDRB     R0,[R11, #+0]
   1062            }
   \   000000AC   01A08AE2           ADD      R10,R10,#+1
   \   000000B0   ........           BL       tolower
   \   000000B4   0000CBE5           STRB     R0,[R11, #+0]
   \                     ??CreateImgHdrByAnyFile_1:
   \   000000B8   0C008DE2           ADD      R0,SP,#+12
   \   000000BC   1B0000EF           SWI      +27
   \   000000C0   00005AE1           CMP      R10,R0
   \   000000C4   0C008DE2           ADD      R0,SP,#+12
   \   000000C8   F5FFFF3A           BCC      ??CreateImgHdrByAnyFile_2
   1063            str_2ws(ext,e_ext,strlen(e_ext));
   \   000000CC   1B0000EF           SWI      +27
   \   000000D0   0020A0E1           MOV      R2,R0
   \   000000D4   0C108DE2           ADD      R1,SP,#+12
   \   000000D8   0900A0E1           MOV      R0,R9
   \   000000DC   6C0100EF           SWI      +364
   1064            
   1065            uid=GetExtUid_ws(ext);      
   \   000000E0   0900A0E1           MOV      R0,R9
   \   000000E4   D00100EF           SWI      +464
   \   000000E8   00A0A0E1           MOV      R10,R0
   1066            FreeWS(ext);
   \   000000EC   0900A0E1           MOV      R0,R9
   \   000000F0   290100EF           SWI      +297
   1067            
   1068            mypicObj=Obs_CreateObject(uid,0x2d,0x02,0x80A8,1,1,&err);    
   \   000000F4   0D00A0E1           MOV      R0,SP
   \   000000F8   01002DE9           PUSH     {R0}
   \   000000FC   A830A0E3           MOV      R3,#+168
   \   00000100   803C83E3           ORR      R3,R3,#0x8000
   \   00000104   0220A0E3           MOV      R2,#+2
   \   00000108   0100A0E3           MOV      R0,#+1
   \   0000010C   01002DE9           PUSH     {R0}
   \   00000110   01002DE9           PUSH     {R0}
   \   00000114   2D10A0E3           MOV      R1,#+45
   \   00000118   0A00A0E1           MOV      R0,R10
   \   0000011C   590200EF           SWI      +601
   \   00000120   0090A0E1           MOV      R9,R0
   1069              if (err)  return 0;
   \   00000124   0C009DE5           LDR      R0,[SP, #+12]
   \   00000128   0CD08DE2           ADD      SP,SP,#+12
   \   0000012C   000050E3           CMP      R0,#+0
   \   00000130   5C00001A           BNE      ??CreateImgHdrByAnyFile_0
   1070            err=Obs_SetInput_File(mypicObj,0,path);
   \   00000134   0820A0E1           MOV      R2,R8
   \   00000138   0010A0E3           MOV      R1,#+0
   \   0000013C   0900A0E1           MOV      R0,R9
   \   00000140   5B0200EF           SWI      +603
   \   00000144   00008DE5           STR      R0,[SP, #+0]
   1071            FreeWS(path);
   \   00000148   0800A0E1           MOV      R0,R8
   \   0000014C   290100EF           SWI      +297
   1072              if (err)  goto exit1;
   \   00000150   00009DE5           LDR      R0,[SP, #+0]
   \   00000154   000050E3           CMP      R0,#+0
   \   00000158   5000001A           BNE      ??CreateImgHdrByAnyFile_3
   1073              
   1074            if (width!=0){ 
   \   0000015C   F401DDE1           LDRSH    R0,[SP, #+20]
   \   00000160   000050E3           CMP      R0,#+0
   \   00000164   2700000A           BEQ      ??CreateImgHdrByAnyFile_4
   1075              short w=width;  
   \   00000168   0010A0E1           MOV      R1,R0
   \   0000016C   B810CDE1           STRH     R1,[SP, #+8]
   1076              short h=height;      
   \   00000170   F811DDE1           LDRSH    R1,[SP, #+24]
   1077              if(origin_size)
   \   00000174   000057E3           CMP      R7,#+0
   \   00000178   BA10CDE1           STRH     R1,[SP, #+10]
   \   0000017C   0C00000A           BEQ      ??CreateImgHdrByAnyFile_5
   1078              {
   1079                err=Obs_GetInfo(mypicObj,0);    
   \   00000180   0010A0E3           MOV      R1,#+0
   \   00000184   0900A0E1           MOV      R0,R9
   \   00000188   620200EF           SWI      +610
   \   0000018C   00008DE5           STR      R0,[SP, #+0]
   1080                if (err)  goto exit1;  
   \   00000190   000050E3           CMP      R0,#+0
   \   00000194   4100001A           BNE      ??CreateImgHdrByAnyFile_3
   1081                err=Obs_GetInputImageSize(mypicObj,&w,&h);    
   \   00000198   0A208DE2           ADD      R2,SP,#+10
   \   0000019C   08108DE2           ADD      R1,SP,#+8
   \   000001A0   0900A0E1           MOV      R0,R9
   \   000001A4   5C0200EF           SWI      +604
   \   000001A8   00008DE5           STR      R0,[SP, #+0]
   1082                if (err)  goto exit1;  
   \   000001AC   000050E3           CMP      R0,#+0
   \   000001B0   3A00001A           BNE      ??CreateImgHdrByAnyFile_3
   1083                //x_size=w;
   1084                //y_size=h;
   1085              }
   1086              err=Obs_SetOutputImageSize(mypicObj,w,h);
   \                     ??CreateImgHdrByAnyFile_5:
   \   000001B4   FA20DDE1           LDRSH    R2,[SP, #+10]
   \   000001B8   F810DDE1           LDRSH    R1,[SP, #+8]
   \   000001BC   0900A0E1           MOV      R0,R9
   \   000001C0   5D0200EF           SWI      +605
   \   000001C4   00008DE5           STR      R0,[SP, #+0]
   1087                if (err)  goto exit1;      
   \   000001C8   000050E3           CMP      R0,#+0
   \   000001CC   3300001A           BNE      ??CreateImgHdrByAnyFile_3
   1088              if (rot){  
   \   000001D0   000055E3           CMP      R5,#+0
   \   000001D4   0500000A           BEQ      ??CreateImgHdrByAnyFile_6
   1089                err= Obs_SetRotation(mypicObj,rot);
   \   000001D8   0510A0E1           MOV      R1,R5
   \   000001DC   0900A0E1           MOV      R0,R9
   \   000001E0   610200EF           SWI      +609
   \   000001E4   00008DE5           STR      R0,[SP, #+0]
   1090                  if (err)  goto exit1;      
   \   000001E8   000050E3           CMP      R0,#+0
   \   000001EC   2B00001A           BNE      ??CreateImgHdrByAnyFile_3
   1091              }
   1092              err=Obs_SetScaling(mypicObj,scale);
   \                     ??CreateImgHdrByAnyFile_6:
   \   000001F0   0610A0E1           MOV      R1,R6
   \   000001F4   0900A0E1           MOV      R0,R9
   \   000001F8   630200EF           SWI      +611
   \   000001FC   00008DE5           STR      R0,[SP, #+0]
   1093                if (err)  goto exit1;          
   \   00000200   000050E3           CMP      R0,#+0
   \   00000204   2500001A           BNE      ??CreateImgHdrByAnyFile_3
   1094            }
   1095            err=Obs_Start(mypicObj);
   \                     ??CreateImgHdrByAnyFile_4:
   \   00000208   0900A0E1           MOV      R0,R9
   \   0000020C   5E0200EF           SWI      +606
   \   00000210   00008DE5           STR      R0,[SP, #+0]
   1096              if (err)  goto exit1;            
   \   00000214   000050E3           CMP      R0,#+0
   \   00000218   2000001A           BNE      ??CreateImgHdrByAnyFile_3
   1097            err=Obs_Output_GetPictstruct(mypicObj,&tmpimg);
   \   0000021C   04108DE2           ADD      R1,SP,#+4
   \   00000220   0900A0E1           MOV      R0,R9
   \   00000224   5F0200EF           SWI      +607
   \   00000228   00008DE5           STR      R0,[SP, #+0]
   1098              if (err)  goto exit1;             
   \   0000022C   000050E3           CMP      R0,#+0
   \   00000230   1A00001A           BNE      ??CreateImgHdrByAnyFile_3
   1099            msz=CalcBitmapSize (tmpimg->w,tmpimg->h,tmpimg->bpnum);
   \   00000234   04009DE5           LDR      R0,[SP, #+4]
   \   00000238   042090E5           LDR      R2,[R0, #+4]
   \   0000023C   F210D0E1           LDRSH    R1,[R0, #+2]
   \   00000240   F000D0E1           LDRSH    R0,[R0, #+0]
   \   00000244   FF2002E2           AND      R2,R2,#0xFF
   \   00000248   580200EF           SWI      +600
   \   0000024C   0050A0E1           MOV      R5,R0
   1100            myimg=malloc(sizeof(IMGHDR));
   \   00000250   0C00A0E3           MOV      R0,#+12
   \   00000254   140000EF           SWI      +20
   \   00000258   0040A0E1           MOV      R4,R0
   1101            myimg->w=tmpimg->w;
   \   0000025C   04009DE5           LDR      R0,[SP, #+4]
   \   00000260   B000D0E1           LDRH     R0,[R0, #+0]
   \   00000264   B000C4E1           STRH     R0,[R4, #+0]
   1102            myimg->h=tmpimg->h;
   \   00000268   04009DE5           LDR      R0,[SP, #+4]
   \   0000026C   B200D0E1           LDRH     R0,[R0, #+2]
   \   00000270   B200C4E1           STRH     R0,[R4, #+2]
   1103            myimg->bpnum=tmpimg->bpnum;
   \   00000274   04009DE5           LDR      R0,[SP, #+4]
   \   00000278   040090E5           LDR      R0,[R0, #+4]
   \   0000027C   040084E5           STR      R0,[R4, #+4]
   1104            myimg->bitmap=malloc(msz);
   \   00000280   0500A0E1           MOV      R0,R5
   \   00000284   140000EF           SWI      +20
   \   00000288   080084E5           STR      R0,[R4, #+8]
   1105            memcpy(myimg->bitmap,tmpimg->bitmap,msz);
   \   0000028C   04009DE5           LDR      R0,[SP, #+4]
   \   00000290   0520A0E1           MOV      R2,R5
   \   00000294   081090E5           LDR      R1,[R0, #+8]
   \   00000298   080094E5           LDR      R0,[R4, #+8]
   \   0000029C   1E0100EF           SWI      +286
   1106          exit1:
   1107            Obs_DestroyObject(mypicObj);
   \                     ??CreateImgHdrByAnyFile_3:
   \   000002A0   0900A0E1           MOV      R0,R9
   \   000002A4   5A0200EF           SWI      +602
   1108          exit0:  
   1109            return myimg;
   \                     ??CreateImgHdrByAnyFile_0:
   \   000002A8   0400A0E1           MOV      R0,R4
   \   000002AC   1CD08DE2           ADD      SP,SP,#+28
   \   000002B0   F08FBDE8           POP      {R4-R11,PC}      ;; return
   1110          }
   1111          

   \                                 In segment CODE, align 4, keep-with-next
   1112          void LoadImages()
   1113          {
   \                     LoadImages:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   1114            char *temp = malloc(512);
   1115             // sprintf(temp,"%spics\\brick1.png",pwd);
   1116            //bricks[0] = CreateImgHdrByAnyFile(temp,0,0,0,0,1);
   1117            
   1118            //int hh = ScreenH()-((bricks[0]->h*32)+4); //это высота нового брика
   1119            int hh = CFG_edit_scaleH;
   1120            int ww = CFG_edit_scaleW;
   1121            
   1122            //big_bricks[0] = CreateImgHdrByAnyFile(temp,ww,hh,0,6,0);
   1123            
   1124            /*
   1125              sprintf(temp,"%spics\\brick2.png",pwd);
   1126            bricks[1] = CreateImgHdrByAnyFile(temp,0,0,0,0,1);
   1127            big_bricks[1] = CreateImgHdrByAnyFile(temp,ww,hh,0,6,0);
   1128              sprintf(temp,"%spics\\brick3.png",pwd);
   1129            bricks[2] = CreateImgHdrByAnyFile(temp,0,0,0,0,1);
   1130            big_bricks[2] = CreateImgHdrByAnyFile(temp,ww,hh,0,6,0);
   1131              sprintf(temp,"%spics\\brick4.png",pwd);
   1132            bricks[3] = CreateImgHdrByAnyFile(temp,0,0,0,0,1);
   1133            big_bricks[3] = CreateImgHdrByAnyFile(temp,ww,hh,0,6,0);
   1134              sprintf(temp,"%spics\\brick5.png",pwd);
   1135            bricks[4] = CreateImgHdrByAnyFile(temp,0,0,0,0,1);
   1136            big_bricks[4] = CreateImgHdrByAnyFile(temp,ww,hh,0,6,0);
   1137              sprintf(temp,"%spics\\brick6.png",pwd);
   1138            bricks[5] = CreateImgHdrByAnyFile(temp,0,0,0,0,1);
   1139            big_bricks[5] = CreateImgHdrByAnyFile(temp,ww,hh,0,6,0);
   1140              sprintf(temp,"%spics\\brick_bon.png",pwd);
   1141            bricks[6] = CreateImgHdrByAnyFile(temp,0,0,0,0,1);
   1142            //big_bricks[6] = CreateImgHdrByAnyFile(temp,ww,hh,0,6,0);
   1143              sprintf(temp,"%spics\\brick_teleport.png",pwd);
   1144            bricks[7] = CreateImgHdrByAnyFile(temp,0,0,0,0,1);
   1145            big_bricks[6] = CreateImgHdrByAnyFile(temp,ww,hh,0,6,0);
   1146              sprintf(temp,"%spics\\brick_mine.png",pwd);
   1147            bricks[8] = CreateImgHdrByAnyFile(temp,0,0,0,0,1);
   1148            big_bricks[7] = CreateImgHdrByAnyFile(temp,ww,hh,0,6,0);
   1149            */
   1150            
   1151            for(int i=0;i<NUM_BRICKS;i++) //грузим картинки бонусов
   \   00000004   18719FE5           LDR      R7,??LoadImages_0  ;; `?<Constant "%spics\\\\bon_%d.png">`
   \   00000008   ........           LDR      R8,??DataTable31  ;; bricks
   \   0000000C   800FA0E3           MOV      R0,#+512
   \   00000010   140000EF           SWI      +20
   \   00000014   0040A0E1           MOV      R4,R0
   \   00000018   08019FE5           LDR      R0,??LoadImages_0+0x4  ;; CFG_edit_scaleH
   \   0000001C   0090A0E3           MOV      R9,#+0
   \   00000020   005090E5           LDR      R5,[R0, #+0]
   \   00000024   00019FE5           LDR      R0,??LoadImages_0+0x8  ;; CFG_edit_scaleW
   \   00000028   006090E5           LDR      R6,[R0, #+0]
   1152            {
   1153              sprintf(temp,"%spics\\brick%d.png",pwd,i+1);
   \                     ??LoadImages_1:
   \   0000002C   01A089E2           ADD      R10,R9,#+1
   \   00000030   D42098E5           LDR      R2,[R8, #+212]
   \   00000034   0A30A0E1           MOV      R3,R10
   \   00000038   141087E2           ADD      R1,R7,#+20
   \   0000003C   0400A0E1           MOV      R0,R4
   \   00000040   160000EF           SWI      +22
   1154              bricks[i] = CreateImgHdrByAnyFile(temp,0,0,0,0,1);
   \   00000044   0100A0E3           MOV      R0,#+1
   \   00000048   01002DE9           PUSH     {R0}
   \   0000004C   0030A0E3           MOV      R3,#+0
   \   00000050   0000A0E3           MOV      R0,#+0
   \   00000054   01002DE9           PUSH     {R0}
   \   00000058   0020A0E1           MOV      R2,R0
   \   0000005C   0010A0E1           MOV      R1,R0
   \   00000060   0400A0E1           MOV      R0,R4
   \   00000064   ........           BL       CreateImgHdrByAnyFile
   \   00000068   090188E7           STR      R0,[R8, +R9, LSL #+2]
   1155              if(i<NUM_BRICKS-1) big_bricks[i] = CreateImgHdrByAnyFile(temp,ww,hh,0,6,0);
   \   0000006C   080059E3           CMP      R9,#+8
   \   00000070   08D08DE2           ADD      SP,SP,#+8
   \   00000074   0D0000AA           BGE      ??LoadImages_2
   \   00000078   0000A0E3           MOV      R0,#+0
   \   0000007C   01002DE9           PUSH     {R0}
   \   00000080   0030A0E3           MOV      R3,#+0
   \   00000084   0528A0E1           MOV      R2,R5, LSL #+16
   \   00000088   4228A0E1           MOV      R2,R2, ASR #+16
   \   0000008C   0600A0E3           MOV      R0,#+6
   \   00000090   01002DE9           PUSH     {R0}
   \   00000094   0618A0E1           MOV      R1,R6, LSL #+16
   \   00000098   4118A0E1           MOV      R1,R1, ASR #+16
   \   0000009C   0400A0E1           MOV      R0,R4
   \   000000A0   ........           BL       CreateImgHdrByAnyFile
   \   000000A4   091188E0           ADD      R1,R8,R9, LSL #+2
   \   000000A8   280081E5           STR      R0,[R1, #+40]
   \   000000AC   08D08DE2           ADD      SP,SP,#+8
   1156            }
   \                     ??LoadImages_2:
   \   000000B0   0A90A0E1           MOV      R9,R10
   \   000000B4   090059E3           CMP      R9,#+9
   \   000000B8   DBFFFFBA           BLT      ??LoadImages_1
   1157            
   1158            for(int i=0;i<16;i++) //грузим картинки бонусов
   \   000000BC   0090A0E3           MOV      R9,#+0
   1159            {
   1160              sprintf(temp,"%spics\\bon_%d.png",pwd,i);
   \                     ??LoadImages_3:
   \   000000C0   D42098E5           LDR      R2,[R8, #+212]
   \   000000C4   0930A0E1           MOV      R3,R9
   \   000000C8   0710A0E1           MOV      R1,R7
   \   000000CC   0400A0E1           MOV      R0,R4
   \   000000D0   160000EF           SWI      +22
   1161              big_bricks[NUM_BRICKS-1+i] = CreateImgHdrByAnyFile(temp,ww,hh,0,6,0);
   \   000000D4   0000A0E3           MOV      R0,#+0
   \   000000D8   01002DE9           PUSH     {R0}
   \   000000DC   0030A0E3           MOV      R3,#+0
   \   000000E0   0528A0E1           MOV      R2,R5, LSL #+16
   \   000000E4   4228A0E1           MOV      R2,R2, ASR #+16
   \   000000E8   0600A0E3           MOV      R0,#+6
   \   000000EC   01002DE9           PUSH     {R0}
   \   000000F0   0618A0E1           MOV      R1,R6, LSL #+16
   \   000000F4   4118A0E1           MOV      R1,R1, ASR #+16
   \   000000F8   0400A0E1           MOV      R0,R4
   \   000000FC   ........           BL       CreateImgHdrByAnyFile
   \   00000100   091188E0           ADD      R1,R8,R9, LSL #+2
   \   00000104   480081E5           STR      R0,[R1, #+72]
   1162            }
   \   00000108   019089E2           ADD      R9,R9,#+1
   \   0000010C   100059E3           CMP      R9,#+16
   \   00000110   08D08DE2           ADD      SP,SP,#+8
   \   00000114   E9FFFFBA           BLT      ??LoadImages_3
   1163            
   1164            
   1165            mfree(temp);
   \   00000118   0400A0E1           MOV      R0,R4
   \   0000011C   150000EF           SWI      +21
   1166          }
   \   00000120   F087BDE8           POP      {R4-R10,PC}      ;; return
   \                     ??LoadImages_0:
   \   00000124   ........           DC32     `?<Constant "%spics\\\\bon_%d.png">`
   \   00000128   ........           DC32     CFG_edit_scaleH
   \   0000012C   ........           DC32     CFG_edit_scaleW
   1167          

   \                                 In segment DATA_C, align 4, align-sorted
   1168          const char perc_i[] = "%i";
   \                     perc_i:
   \   00000000   256900             DC8 "%i"
   \   00000003   00                 DC8 0
   \   00000004   73747232696E       DC8 "str2int(%s)"
   \              742825732900
   \   00000010   7363616E3A20       DC8 "scan: %d"
   \              256400      
   \   00000019   000000             DC8 0, 0, 0

   \                                 In segment CODE, align 4, keep-with-next
   1169          int str2int(char *str)
   1170          {
   \                     str2int:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   1171            sprintf(lgn,"str2int(%s)",str);Tlog(lgn);
   \   00000004   ........           LDR      R6,??DataTable35  ;; bricks
   \   00000008   48709FE5           LDR      R7,??str2int_0   ;; perc_i
   \   0000000C   04D04DE2           SUB      SP,SP,#+4
   \   00000010   0040A0E1           MOV      R4,R0
   \   00000014   B95FA0E3           MOV      R5,#+740
   \   00000018   0420A0E1           MOV      R2,R4
   \   0000001C   041087E2           ADD      R1,R7,#+4
   \   00000020   060085E0           ADD      R0,R5,R6
   \   00000024   160000EF           SWI      +22
   1172            int scan = -1;
   \   00000028   0010E0E3           MVN      R1,#+0
   \   0000002C   00108DE5           STR      R1,[SP, #+0]
   1173            sscanf(str,perc_i,&scan);
   \   00000030   0D20A0E1           MOV      R2,SP
   \   00000034   0710A0E1           MOV      R1,R7
   \   00000038   0400A0E1           MOV      R0,R4
   \   0000003C   F50100EF           SWI      +501
   1174            sprintf(lgn,"scan: %d",scan);Tlog(lgn);
   \   00000040   00209DE5           LDR      R2,[SP, #+0]
   \   00000044   101087E2           ADD      R1,R7,#+16
   \   00000048   060085E0           ADD      R0,R5,R6
   \   0000004C   160000EF           SWI      +22
   1175            return scan;
   \   00000050   00009DE5           LDR      R0,[SP, #+0]
   \   00000054   F280BDE8           POP      {R1,R4-R7,PC}    ;; return
   \                     ??str2int_0:
   \   00000058   ........           DC32     perc_i
   1176          }
   1177          
   1178          

   \                                 In segment CODE, align 4, keep-with-next
   1179          void LoadMapFromPath(char *path,char level[MAX_HEIGHT][MAX_WIDTH]) //грузим мапу
   1180          {
   \                     LoadMapFromPath:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   1181            unsigned int err;
   1182            sprintf(lgn,"LoadMap[%s]",path); Tlog(lgn);
   \   00000004   ........           LDR      R6,??DataTable35  ;; bricks
   \   00000008   AC719FE5           LDR      R7,??LoadMapFromPath_0+0x8  ;; `?<Constant "LoadMap[%s]">`
   \   0000000C   04D04DE2           SUB      SP,SP,#+4
   \   00000010   0080A0E1           MOV      R8,R0
   \   00000014   0140A0E1           MOV      R4,R1
   \   00000018   B95FA0E3           MOV      R5,#+740
   \   0000001C   0820A0E1           MOV      R2,R8
   \   00000020   0710A0E1           MOV      R1,R7
   \   00000024   060085E0           ADD      R0,R5,R6
   \   00000028   160000EF           SWI      +22
   1183            
   1184            char *tt = malloc(32);
   \   0000002C   2000A0E3           MOV      R0,#+32
   \   00000030   140000EF           SWI      +20
   \   00000034   0090A0E1           MOV      R9,R0
   1185            memcpy(tt,path+(strlen(path)-5),1);
   \   00000038   0800A0E1           MOV      R0,R8
   \   0000003C   1B0000EF           SWI      +27
   \   00000040   0120A0E3           MOV      R2,#+1
   \   00000044   080080E0           ADD      R0,R0,R8
   \   00000048   051040E2           SUB      R1,R0,#+5
   \   0000004C   0900A0E1           MOV      R0,R9
   \   00000050   1E0100EF           SWI      +286
   1186            tt[1]=0x00;
   \   00000054   0000A0E3           MOV      R0,#+0
   \   00000058   0100C9E5           STRB     R0,[R9, #+1]
   1187            num_to_save = str2int(tt);
   \   0000005C   0900A0E1           MOV      R0,R9
   \   00000060   ........           BL       str2int
   \   00000064   FE00C6E5           STRB     R0,[R6, #+254]
   1188            mfree(tt);
   \   00000068   0900A0E1           MOV      R0,R9
   \   0000006C   150000EF           SWI      +21
   1189            
   1190            
   1191            int file=fopenA(path,A_ReadOnly+A_BIN,P_READ,&err);
   \   00000070   0D30A0E1           MOV      R3,SP
   \   00000074   8020A0E3           MOV      R2,#+128
   \   00000078   801CA0E3           MOV      R1,#+32768
   \   0000007C   0800A0E1           MOV      R0,R8
   \   00000080   0A0000EF           SWI      +10
   \   00000084   0080A0E1           MOV      R8,R0
   1192            if(file==-1) {ShowMSG(0,(int)"Cant open map file!");return;}
   \   00000088   010078E3           CMN      R8,#+1
   \   0000008C   0300001A           BNE      ??LoadMapFromPath_1
   \   00000090   0C1087E2           ADD      R1,R7,#+12
   \   00000094   0000A0E3           MOV      R0,#+0
   \   00000098   480100EF           SWI      +328
   \   0000009C   F187BDE8           POP      {R0,R4-R10,PC}
   1193            fread(file,(void *)&map.sign,4,&err);
   \                     ??LoadMapFromPath_1:
   \   000000A0   0D30A0E1           MOV      R3,SP
   \   000000A4   0420A0E3           MOV      R2,#+4
   \   000000A8   A01086E2           ADD      R1,R6,#+160
   \   000000AC   0B0000EF           SWI      +11
   1194            if(strcmp(map.sign,"ADM")!=0) {ShowMSG(0,(int)"wrong map sign!");fclose(file,0);return;}
   \   000000B0   3F1F8FE2           ADR      R1,??LoadMapFromPath_0  ;; "ADM"
   \   000000B4   A00086E2           ADD      R0,R6,#+160
   \   000000B8   190000EF           SWI      +25
   \   000000BC   000050E3           CMP      R0,#+0
   \   000000C0   20108712           ADDNE    R1,R7,#+32
   \   000000C4   0A00001A           BNE      ??LoadMapFromPath_2
   1195            
   1196            fread(file,(void*)&map.version,4,0);
   \   000000C8   0030A0E3           MOV      R3,#+0
   \   000000CC   0420A0E3           MOV      R2,#+4
   \   000000D0   A41086E2           ADD      R1,R6,#+164
   \   000000D4   0800A0E1           MOV      R0,R8
   \   000000D8   0B0000EF           SWI      +11
   1197            if(strcmp(map.version,"004")!=0) {ShowMSG(0,(int)"wrong map version!");fclose(file,0);return;}
   \   000000DC   351F8FE2           ADR      R1,??LoadMapFromPath_0+0x4  ;; "004"
   \   000000E0   A40086E2           ADD      R0,R6,#+164
   \   000000E4   190000EF           SWI      +25
   \   000000E8   000050E3           CMP      R0,#+0
   \   000000EC   0600000A           BEQ      ??LoadMapFromPath_3
   \   000000F0   301087E2           ADD      R1,R7,#+48
   \                     ??LoadMapFromPath_2:
   \   000000F4   0000A0E3           MOV      R0,#+0
   \   000000F8   480100EF           SWI      +328
   \   000000FC   0010A0E3           MOV      R1,#+0
   \   00000100   0800A0E1           MOV      R0,R8
   \   00000104   0D0000EF           SWI      +13
   \   00000108   F187BDE8           POP      {R0,R4-R10,PC}
   1198            
   1199            fread(file,(void*)&map.bg_num,1,0);
   \                     ??LoadMapFromPath_3:
   \   0000010C   0030A0E3           MOV      R3,#+0
   \   00000110   0120A0E3           MOV      R2,#+1
   \   00000114   A81086E2           ADD      R1,R6,#+168
   \   00000118   0800A0E1           MOV      R0,R8
   \   0000011C   0B0000EF           SWI      +11
   1200            fread(file,(void*)&map.snd_num,1,0);
   \   00000120   0030A0E3           MOV      R3,#+0
   \   00000124   0120A0E3           MOV      R2,#+1
   \   00000128   A91086E2           ADD      R1,R6,#+169
   \   0000012C   0800A0E1           MOV      R0,R8
   \   00000130   0B0000EF           SWI      +11
   1201            fread(file,(void*)&map.type,1,0);
   \   00000134   0030A0E3           MOV      R3,#+0
   \   00000138   0120A0E3           MOV      R2,#+1
   \   0000013C   AA1086E2           ADD      R1,R6,#+170
   \   00000140   0800A0E1           MOV      R0,R8
   \   00000144   0B0000EF           SWI      +11
   1202            fread(file,(void*)&map.boss_diff,1,0);
   \   00000148   0030A0E3           MOV      R3,#+0
   \   0000014C   0120A0E3           MOV      R2,#+1
   \   00000150   AB1086E2           ADD      R1,R6,#+171
   \   00000154   0800A0E1           MOV      R0,R8
   \   00000158   0B0000EF           SWI      +11
   1203            
   1204            for(int y=0;y<MAX_HEIGHT;y++)
   \   0000015C   0090A0E3           MOV      R9,#+0
   1205            {
   1206              for(int x=0;x<MAX_WIDTH;x++)
   \                     ??LoadMapFromPath_4:
   \   00000160   00A0A0E3           MOV      R10,#+0
   1207              {
   1208                fread(file,&level[y][x],1,0);
   \                     ??LoadMapFromPath_5:
   \   00000164   0030A0E3           MOV      R3,#+0
   \   00000168   0120A0E3           MOV      R2,#+1
   \   0000016C   090269E0           RSB      R0,R9,R9, LSL #+4
   \   00000170   040080E0           ADD      R0,R0,R4
   \   00000174   00108AE0           ADD      R1,R10,R0
   \   00000178   0800A0E1           MOV      R0,R8
   \   0000017C   0B0000EF           SWI      +11
   1209              }
   \   00000180   01A08AE2           ADD      R10,R10,#+1
   \   00000184   0F005AE3           CMP      R10,#+15
   \   00000188   F5FFFFBA           BLT      ??LoadMapFromPath_5
   1210            }
   \   0000018C   019089E2           ADD      R9,R9,#+1
   \   00000190   200059E3           CMP      R9,#+32
   \   00000194   F1FFFFBA           BLT      ??LoadMapFromPath_4
   1211            
   1212            fclose(file,0);
   \   00000198   0010A0E3           MOV      R1,#+0
   \   0000019C   0800A0E1           MOV      R0,R8
   \   000001A0   0D0000EF           SWI      +13
   1213            sprintf(lgn,"map succesfully readed!"); Tlog(lgn);
   \   000001A4   441087E2           ADD      R1,R7,#+68
   \   000001A8   060085E0           ADD      R0,R5,R6
   \   000001AC   160000EF           SWI      +22
   1214          }
   \   000001B0   F187BDE8           POP      {R0,R4-R10,PC}   ;; return
   \                     ??LoadMapFromPath_0:
   \   000001B4   41444D00           DC8      "ADM"
   \   000001B8   30303400           DC8      "004"
   \   000001BC   ........           DC32     `?<Constant "LoadMap[%s]">`
   1215          
   1216          
   1217          
   1218          
   1219          

   \                                 In segment CODE, align 4, keep-with-next
   1220          int main(char *exename, char *fname)//exename-путь запускаемого эльфа, fname параметр передаваемый эльфу
   1221          {
   \                     main:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   D4D04DE2           SUB      SP,SP,#+212
   \   00000008   0050A0E1           MOV      R5,R0
   1222             char s[128];
   1223             const char *p=strrchr(exename,'\\')+1;
   1224             strncpy(s,exename,p-exename);
   1225             s[p-exename]='\0';
   1226             pwd=malloc(128);
   1227             sprintf(pwd,s);
   1228             Tlog("--------------------------------------------------------");
   1229             Tlog("Log started by root, UID=0. starting elf...");
   1230             char *tempstr = malloc(512);
   1231             sprintf(tempstr,"Environment variable PWD = %s",pwd);
   \   0000000C   ........           LDR      R7,??DataTable34  ;; `?<Constant "ArcanoidMapMaker v0.4...">`
   \   00000010   0140A0E1           MOV      R4,R1
   \   00000014   5C10A0E3           MOV      R1,#+92
   \   00000018   170100EF           SWI      +279
   \   0000001C   010080E2           ADD      R0,R0,#+1
   \   00000020   056040E0           SUB      R6,R0,R5
   \   00000024   0510A0E1           MOV      R1,R5
   \   00000028   ........           LDR      R5,??DataTable35  ;; bricks
   \   0000002C   0620A0E1           MOV      R2,R6
   \   00000030   0D00A0E1           MOV      R0,SP
   \   00000034   160100EF           SWI      +278
   \   00000038   0D00A0E1           MOV      R0,SP
   \   0000003C   0010A0E3           MOV      R1,#+0
   \   00000040   0010C6E7           STRB     R1,[R6, +R0]
   \   00000044   8000A0E3           MOV      R0,#+128
   \   00000048   140000EF           SWI      +20
   \   0000004C   D40085E5           STR      R0,[R5, #+212]
   \   00000050   0D10A0E1           MOV      R1,SP
   \   00000054   160000EF           SWI      +22
   \   00000058   800FA0E3           MOV      R0,#+512
   \   0000005C   140000EF           SWI      +20
   \   00000060   D42095E5           LDR      R2,[R5, #+212]
   \   00000064   0060A0E1           MOV      R6,R0
   \   00000068   201087E2           ADD      R1,R7,#+32
   \   0000006C   160000EF           SWI      +22
   1232             Tlog(tempstr);
   1233             Tlog("All seems to be OK...");
   1234             mfree(tempstr);
   \   00000070   0600A0E1           MOV      R0,R6
   \   00000074   150000EF           SWI      +21
   1235             
   1236            MAIN_CSM main_csm;
   1237            InitConfig();//инициируем конфиг,тобишь читаем настройки из него
   \   00000078   ........           _BLF     InitConfig,??InitConfig??rA
   1238            LockSched();
   \   0000007C   460100EF           SWI      +326
   1239            UpdateCSMname();//обновл€ем им€ дл€ хтаска
   \   00000080   ........           BL       UpdateCSMname
   1240            CreateCSM(&MAINCSM.maincsm,&main_csm,0);//создаем цсм
   \   00000084   0020A0E3           MOV      R2,#+0
   \   00000088   80108DE2           ADD      R1,SP,#+128
   \   0000008C   5C0087E2           ADD      R0,R7,#+92
   \   00000090   070100EF           SWI      +263
   1241            UnlockSched();
   \   00000094   470100EF           SWI      +327
   1242            
   1243            e_ws = AllocWS(128);
   \   00000098   8000A0E3           MOV      R0,#+128
   \   0000009C   250100EF           SWI      +293
   \   000000A0   D80085E5           STR      R0,[R5, #+216]
   1244            offset1 = 2+GetFontYSIZE(FONT_SM);
   \   000000A4   0800A0E3           MOV      R0,#+8
   \   000000A8   C50100EF           SWI      +453
   \   000000AC   020080E2           ADD      R0,R0,#+2
   \   000000B0   EC0085E5           STR      R0,[R5, #+236]
   1245            
   1246            LoadImages(); //грузим картинки
   \   000000B4   ........           BL       LoadImages
   1247            
   1248            FSTATS fs;
   1249            sprintf(lgn,"fname:%s",fname);Tlog(lgn);
   \   000000B8   0420A0E1           MOV      R2,R4
   \   000000BC   401087E2           ADD      R1,R7,#+64
   \   000000C0   B90F85E2           ADD      R0,R5,#+740
   \   000000C4   160000EF           SWI      +22
   1250            if((fname!=NULL && GetFileStats(fname,&fs,0)!=-1) && (strstr(fname,".adm") || strstr(fname,".ADM"))) //если запустили с параметром,то открываем левел
   \   000000C8   000054E3           CMP      R4,#+0
   \   000000CC   1300000A           BEQ      ??main_0
   \   000000D0   0020A0E3           MOV      R2,#+0
   \   000000D4   AC108DE2           ADD      R1,SP,#+172
   \   000000D8   0400A0E1           MOV      R0,R4
   \   000000DC   840000EF           SWI      +132
   \   000000E0   010070E3           CMN      R0,#+1
   \   000000E4   0D00000A           BEQ      ??main_0
   \   000000E8   4C1087E2           ADD      R1,R7,#+76
   \   000000EC   0400A0E1           MOV      R0,R4
   \   000000F0   180100EF           SWI      +280
   \   000000F4   000050E3           CMP      R0,#+0
   \   000000F8   0400001A           BNE      ??main_1
   \   000000FC   541087E2           ADD      R1,R7,#+84
   \   00000100   0400A0E1           MOV      R0,R4
   \   00000104   180100EF           SWI      +280
   \   00000108   000050E3           CMP      R0,#+0
   \   0000010C   0300000A           BEQ      ??main_0
   1251            {
   1252              LoadMapFromPath(fname,used_level);
   \                     ??main_1:
   \   00000110   411F85E2           ADD      R1,R5,#+260
   \   00000114   0400A0E1           MOV      R0,R4
   \   00000118   ........           BL       LoadMapFromPath
   \   0000011C   000000EA           B        ??main_2
   1253            }
   1254            else ZeroLevel(); //занул€ем текущий левел 
   \                     ??main_0:
   \   00000120   ........           BL       ZeroLevel
   1255            
   1256            RedrawScreen();
   \                     ??main_2:
   \   00000124   ........           BL       RedrawScreen
   1257            return 0;
   \   00000128   0000A0E3           MOV      R0,#+0
   \   0000012C   D4D08DE2           ADD      SP,SP,#+212
   \   00000130   F080BDE8           POP      {R4-R7,PC}       ;; return
   1258          }

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   ........           DC32     CFG_menu_font

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable8:
   \   00000000   ........           DC32     CFG_edit_panel_drawcount

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable11:
   \   00000000   ........           DC32     `?<Constant {70, 70, 70, 90}>`

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable13:
   \   00000000   ........           DC32     bricks

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable15:
   \   00000000   ........           DC32     bricks

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable22:
   \   00000000   ........           DC32     CFG_edit_panel_xc

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable27:
   \   00000000   ........           DC32     bricks

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable28:
   \   00000000   ........           DC32     CFG_edit_panel_drawcount

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable29:
   \   00000000   ........           DC32     successed_config_filename

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable31:
   \   00000000   ........           DC32     bricks

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable34:
   \   00000000   ........           DC32     `?<Constant "ArcanoidMapMaker v0.4...">`

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable35:
   \   00000000   ........           DC32     bricks

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for bricks>`:
   \   00000000   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000010   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000020   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0000        
   \                     `?<Initializer for big_bricks>`:
   \   00000028   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000038   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000048   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000058   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000068   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000078   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000088   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000098   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0000        
   \                     `?<Initializer for map>`:
   \   000000A0   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \                     `?<Initializer for menu_items>`:
   \   000000B0   ........           DC32 `?<Constant "\\361\\356\\347\\344\\340\\362\\374 \\355\\`
   \   000000B4   ........           DC32 `?<Constant "\\357\\340\\360\\340\\354\\345\\362\\360\\3`
   \   000000B8   ........           DC32 `?<Constant "\\361\\356\\365\\360\\340\\355\\350\\362\\3`
   \   000000BC   ........           DC32 `?<Constant ">dump map">`
   \   000000C0   ........           DC32 `?<Constant "\\355\\340\\361\\362\\360\\356\\351\\352\\3`
   \   000000C4   ........           DC32 `?<Constant "\\356 \\357\\360\\356\\343\\360\\340\\354\\`
   \   000000C8   ........           DC32 `?<Constant "\\342\\373\\365\\356\\344">`
   \                     `?<Initializer for ShowAbout>`:
   \   000000CC   00000000           DC32 0
   \                     `?<Initializer for menu_active>`:
   \   000000D0   00000000           DC32 0
   \                     `?<Initializer for pwd>`:
   \   000000D4   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for e_ws>`:
   \   000000D8   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for cur_ypos>`:
   \   000000DC   06000000           DC32 6
   \                     `?<Initializer for cur_xpos>`:
   \   000000E0   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for p_pos>`:
   \   000000E4   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for p_counter>`:
   \   000000E8   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for offset1>`:
   \   000000EC   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for sp_count>`:
   \   000000F0   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for sp_utime>`:
   \   000000F4   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for sp_time>`:
   \   000000F8   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for ShowEdit>`:
   \   000000FC   00                 DC8 0
   \                     `?<Initializer for cur_pos>`:
   \   000000FD   00                 DC8 0
   \                     `?<Initializer for num_to_save>`:
   \   000000FE   00                 DC8 0
   \                     `?<Initializer for edit_cur>`:
   \   000000FF   00                 DC8 0
   \                     `?<Initializer for sp_type>`:
   \   00000100   00                 DC8 0
   \   00000101   000000             DC8 0, 0, 0
   \                     `?<Initializer for used_level>`:
   \   00000104   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000114   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000124   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000134   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000144   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000154   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000164   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000174   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000184   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000194   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000001A4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000001B4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000001C4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000001D4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000001E4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000001F4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000204   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000214   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000224   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000234   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000244   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000254   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000264   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000274   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000284   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000294   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000002A4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000002B4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000002C4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000002D4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \                     `?<Initializer for lgn>`:
   \   000002E4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000002F4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000304   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000314   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000324   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000334   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000344   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000354   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \                     `?<Initializer for cmt>`:
   \   00000364   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000374   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000384   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000394   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000003A4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000003B4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000003C4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000003D4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \                     `?<Initializer for sptimer>`:
   \   000003E4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for comments>`:
   \   00000000   ........           DC32 `?<Constant "\\355\\356\\360\\354\\340\\353\\374\\355\\3`
   \   00000004   ........           DC32 `?<Constant "2 \\357\\356\\357\\340\\344\\340\\355\\350`
   \   00000008   ........           DC32 `?<Constant "3 \\357\\356\\357\\340\\344\\340\\355\\350`
   \   0000000C   ........           DC32 `?<Constant "\\355\\345\\360\\340\\347\\341\\350\\342\\3`
   \   00000010   ........           DC32 `?<Constant "\\352\\350\\360\\357\\350\\367\\350\\352-\\`
   \   00000014   ........           DC32 `?<Constant "\\352\\350\\360\\357\\350\\367\\350\\352-\\_1`
   \   00000018   ........           DC32 `?<Constant "\\363\\342\\345\\353\\350\\367\\340\\353\\3`
   \   0000001C   ........           DC32 `?<Constant "\\363\\354\\345\\355\\374\\370\\340\\353\\3`
   \   00000020   ........           DC32 `?<Constant "\\347\\340\\354\\356\\360\\356\\347\\352\\3`
   \   00000024   ........           DC32 `?<Constant "\\363\\361\\352\\356\\360\\345\\355\\350\\3`
   \   00000028   ........           DC32 `?<Constant "\\347\\340\\354\\345\\344\\353\\345\\355\\3`
   \   0000002C   ........           DC32 `?<Constant "+1 \\346\\350\\347\\355\\374!">`
   \   00000030   ........           DC32 `?<Constant "\\361\\363\\357\\345\\360 \\354\\377\\367\\`
   \   00000034   ........           DC32 `?<Constant "\\354\\377\\367-\\357\\360\\350\\342\\350\\`
   \   00000038   ........           DC32 `?<Constant "\\361\\362\\360\\345\\353\\377\\345\\354 \\`
   \   0000003C   ........           DC32 `?<Constant "\\361\\362\\360\\345\\353\\377\\345\\354 \\_1`
   \   00000040   ........           DC32 `?<Constant "\\357\\360\\350\\353\\350\\357\\340\\353\\3`
   \   00000044   ........           DC32 `?<Constant "\\361\\362\\360\\340\\365\\356\\342\\352\\3`
   \   00000048   ........           DC32 `?<Constant "\\363\\342\\345\\353\\350\\367\\345\\355\\3`
   \   0000004C   ........           DC32 `?<Constant "\\363\\354\\345\\355\\374\\370\\345\\355\\3`
   \   00000050   ........           DC32 `?<Constant "\\355\\345\\350\\347\\342\\345\\361\\362\\3`
   \   00000054   ........           DC32 `?<Constant "+100 \\356\\367\\352\\356\\342">`
   \   00000058   ........           DC32 `?<Constant "<\\357\\363\\361\\362\\356 \\362\\350\\357`

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant {0, 0, 0, 100}>`:
   \   00000000   00000064           DC8 0, 0, 0, 100
   \   00000004   F2E8EF20F3F0       DC8 "\362\350\357 \363\360\356\342\355\377: \356\341\373\367\355\373\351"
   \              EEE2EDFF3A20
   \              EEE1FBF7EDFB
   \              E900        
   \   00000018   F2E8EF20F3F0       DC8 "\362\350\357 \363\360\356\342\355\377: \363\360\356\342\345\355\374-\341\356\361\361"
   \              EEE2EDFF3A20
   \              F3F0EEE2E5ED
   \              FC2DE1EEF1F1
   \              00          
   \   00000031   000000             DC8 0, 0, 0
   \   00000034   F1EBEEE6EDEE       DC8 "\361\353\356\346\355\356\361\362\374 \341\356\361\361\340: \356\367\345\355\374 \353\345\343\352\356"
   \              F1F2FC20E1EE
   \              F1F1E03A20EE
   \              F7E5EDFC20EB
   \              E5E3EAEE00  
   \   00000051   000000             DC8 0, 0, 0
   \   00000054   F1EBEEE6EDEE       DC8 "\361\353\356\346\355\356\361\362\374 \341\356\361\361\340: \353\345\343\352\356"
   \              F1F2FC20E1EE
   \              F1F1E03A20EB
   \              E5E3EAEE00  
   \   0000006B   00                 DC8 0
   \   0000006C   F1EBEEE6EDEE       DC8 "\361\353\356\346\355\356\361\362\374 \341\356\361\361\340: \355\356\360\354\340\353\374\355\356"
   \              F1F2FC20E1EE
   \              F1F1E03A20ED
   \              EEF0ECE0EBFC
   \              EDEE00      
   \   00000087   00                 DC8 0
   \   00000088   F1EBEEE6EDEE       DC8 "\361\353\356\346\355\356\361\362\374 \341\356\361\361\340: \361\353\356\346\355\356"
   \              F1F2FC20E1EE
   \              F1F1E03A20F1
   \              EBEEE6EDEE00
   \   000000A0   F1EBEEE6EDEE       DC8 "\361\353\356\346\355\356\361\362\374 \341\356\361\361\340: \356\367\345\355\374 \361\353\356\346\355\356"
   \              F1F2FC20E1EE
   \              F1F1E03A20EE
   \              F7E5EDFC20F1
   \              EBEEE6EDEE00
   \   000000BE   0000               DC8 0, 0
   \   000000C0   EDEEECE5F020       DC8 "\355\356\354\345\360 \354\345\353\356\344\350\350"
   \              ECE5EBEEE4E8
   \              E800        
   \   000000CE   0000               DC8 0, 0
   \   000000D0   EDE0E7E0E400       DC8 "\355\340\347\340\344"
   \   000000D6   0000               DC8 0, 0
   \   000000D8   25743A256400       DC8 "%t:%d"
   \   000000DE   0000               DC8 0, 0
   \   000000E0   EDEEECE5F020       DC8 "\355\356\354\345\360 \363\360\356\342\355\377"
   \              F3F0EEE2EDFF
   \              00          
   \   000000ED   000000             DC8 0, 0, 0
   \   000000F0   EDEEECE5F020       DC8 "\355\356\354\345\360 \364\356\355\340"
   \              F4EEEDE000  
   \   000000FB   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "maps\\\\level%d.adm">`:
   \   00000000   6D6170735C6C       DC8 "maps\\level%d.adm"
   \              6576656C2564
   \              2E61646D00  
   \   00000011   000000             DC8 0, 0, 0
   \   00000014   536176654D61       DC8 "SaveMap-%s"
   \              702D257300  
   \   0000001F   00                 DC8 0
   \   00000020   6572726F7220       DC8 "error while writing!"
   \              7768696C6520
   \              77726974696E
   \              672100      
   \   00000035   000000             DC8 0, 0, 0
   \   00000038   ECE0EFE020F1       DC8 "\354\340\357\340 \361\356\365\360\340\355\345\355\340"
   \              EEF5F0E0EDE5
   \              EDE000      
   \   00000047   00                 DC8 0

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   7B00               DC8 "{"

   \                                 In segment DATA_C, align 4, align-sorted
   \   00000000   25642C00           DC8 "%d,"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\355\\345\\350\\347\\342\\345\\361\\362\\3`:
   \   00000000   EDE5E8E7E2E5       DC8 "\355\345\350\347\342\345\361\362\355\373\351 \341\356\355\363\361"
   \              F1F2EDFBE920
   \              E1EEEDF3F100
   \   00000012   0000               DC8 0, 0

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   7D00               DC8 "}"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\352\\356\\355\\364\\350\\343 \\356\\341\\`:
   \   00000000   EAEEEDF4E8E3       DC8 "\352\356\355\364\350\343 \356\341\355\356\342\353\345\355!"
   \              20EEE1EDEEE2
   \              EBE5ED2100  
   \   00000011   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "%spics\\\\bon_%d.png">`:
   \   00000000   257370696373       DC8 "%spics\\bon_%d.png"
   \              5C626F6E5F25
   \              642E706E6700
   \   00000012   0000               DC8 0, 0
   \   00000014   257370696373       DC8 "%spics\\brick%d.png"
   \              5C627269636B
   \              25642E706E67
   \              00          
   \   00000027   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "LoadMap[%s]">`:
   \   00000000   4C6F61644D61       DC8 "LoadMap[%s]"
   \              705B25735D00
   \   0000000C   43616E74206F       DC8 "Cant open map file!"
   \              70656E206D61
   \              702066696C65
   \              2100        
   \   00000020   77726F6E6720       DC8 "wrong map sign!"
   \              6D6170207369
   \              676E2100    
   \   00000030   77726F6E6720       DC8 "wrong map version!"
   \              6D6170207665
   \              7273696F6E21
   \              00          
   \   00000043   00                 DC8 0
   \   00000044   6D6170207375       DC8 "map succesfully readed!"
   \              636365736675
   \              6C6C79207265
   \              616465642100

   \                                 In segment DATA_C, align 4, align-sorted
   \   00000000   41444D00           DC8 "ADM"

   \                                 In segment DATA_C, align 4, align-sorted
   \   00000000   30303400           DC8 "004"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\361\\356\\347\\344\\340\\362\\374 \\355\\`:
   \   00000000   F1EEE7E4E0F2       DC8 "\361\356\347\344\340\362\374 \355\356\342\373\351"
   \              FC20EDEEE2FB
   \              E900        
   \   0000000E   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\357\\340\\360\\340\\354\\345\\362\\360\\3`:
   \   00000000   EFE0F0E0ECE5       DC8 "\357\340\360\340\354\345\362\360\373 \363\360\356\342\355\377"
   \              F2F0FB20F3F0
   \              EEE2EDFF00  
   \   00000011   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\361\\356\\365\\360\\340\\355\\350\\362\\3`:
   \   00000000   F1EEF5F0E0ED       DC8 "\361\356\365\360\340\355\350\362\374"
   \              E8F2FC00    
   \   0000000A   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant ">dump map">`:
   \   00000000   3E64756D7020       DC8 ">dump map"
   \              6D617000    
   \   0000000A   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\355\\340\\361\\362\\360\\356\\351\\352\\3`:
   \   00000000   EDE0F1F2F0EE       DC8 "\355\340\361\362\360\356\351\352\350"
   \              E9EAE800    
   \   0000000A   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\356 \\357\\360\\356\\343\\360\\340\\354\\`:
   \   00000000   EE20EFF0EEE3       DC8 "\356 \357\360\356\343\360\340\354\354\345"
   \              F0E0ECECE500

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\342\\373\\365\\356\\344">`:
   \   00000000   E2FBF5EEE400       DC8 "\342\373\365\356\344"
   \   00000006   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\355\\356\\360\\354\\340\\353\\374\\355\\3`:
   \   00000000   EDEEF0ECE0EB       DC8 "\355\356\360\354\340\353\374\355\373\351 \352\350\360\357\350\367\350\352"
   \              FCEDFBE920EA
   \              E8F0EFE8F7E8
   \              EA00        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "2 \\357\\356\\357\\340\\344\\340\\355\\350`:
   \   00000000   3220EFEEEFE0       DC8 "2 \357\356\357\340\344\340\355\350\377"
   \              E4E0EDE8FF00
   \                     `?<Constant "3 \\357\\356\\357\\340\\344\\340\\355\\350`:
   \   0000000C   3320EFEEEFE0       DC8 "3 \357\356\357\340\344\340\355\350\377"
   \              E4E0EDE8FF00
   \                     `?<Constant "\\347\\340\\354\\356\\360\\356\\347\\352\\3`:
   \   00000018   E7E0ECEEF0EE       DC8 "\347\340\354\356\360\356\347\352\340 \376\347\345\360\340"
   \              E7EAE020FEE7
   \              E5F0E000    
   \                     `?<Constant "\\363\\361\\352\\356\\360\\345\\355\\350\\3`:
   \   00000028   F3F1EAEEF0E5       DC8 "\363\361\352\356\360\345\355\350\345 \354\377\367\340"
   \              EDE8E520ECFF
   \              F7E000      
   \   00000037   00                 DC8 0
   \                     `?<Constant "\\347\\340\\354\\345\\344\\353\\345\\355\\3`:
   \   00000038   E7E0ECE5E4EB       DC8 "\347\340\354\345\344\353\345\355\350\345 \354\377\367\340"
   \              E5EDE8E520EC
   \              FFF7E000    
   \                     `?<Constant "+1 \\346\\350\\347\\355\\374!">`:
   \   00000048   2B3120E6E8E7       DC8 "+1 \346\350\347\355\374!"
   \              EDFC2100    
   \   00000052   0000               DC8 0, 0
   \                     `?<Constant "\\354\\377\\367-\\357\\360\\350\\342\\350\\`:
   \   00000054   ECFFF72DEFF0       DC8 "\354\377\367-\357\360\350\342\350\344\345\355\350\345"
   \              E8E2E8E4E5ED
   \              E8E500      
   \   00000063   00                 DC8 0
   \                     `?<Constant "\\361\\362\\360\\345\\353\\377\\345\\354 \\`:
   \   00000064   F1F2F0E5EBFF       DC8 "\361\362\360\345\353\377\345\354 \357\363\353\374\352\340\354\350"
   \              E5EC20EFF3EB
   \              FCEAE0ECE800
   \   00000076   0000               DC8 0, 0
   \                     `?<Constant "\\361\\362\\360\\345\\353\\377\\345\\354 \\_1`:
   \   00000078   F1F2F0E5EBFF       DC8 "\361\362\360\345\353\377\345\354 \360\356\352\345\362\356\354"
   \              E5EC20F0EEEA
   \              E5F2EEEC00  
   \   00000089   000000             DC8 0, 0, 0
   \                     `?<Constant "\\357\\360\\350\\353\\350\\357\\340\\353\\3`:
   \   0000008C   EFF0E8EBE8EF       DC8 "\357\360\350\353\350\357\340\353\352\340"
   \              E0EBEAE000  
   \   00000097   00                 DC8 0
   \                     `?<Constant "\\361\\362\\360\\340\\365\\356\\342\\352\\3`:
   \   00000098   F1F2F0E0F5EE       DC8 "\361\362\360\340\365\356\342\352\340"
   \              E2EAE000    
   \   000000A2   0000               DC8 0, 0
   \                     `?<Constant "\\363\\342\\345\\353\\350\\367\\345\\355\\3`:
   \   000000A4   F3E2E5EBE8F7       DC8 "\363\342\345\353\350\367\345\355\350\345 \370\340\360\340"
   \              E5EDE8E520F8
   \              E0F0E000    
   \                     `?<Constant "\\363\\354\\345\\355\\374\\370\\345\\355\\3`:
   \   000000B4   F3ECE5EDFCF8       DC8 "\363\354\345\355\374\370\345\355\350\345 \370\340\360\340"
   \              E5EDE8E520F8
   \              E0F0E000    
   \                     `?<Constant "+100 \\356\\367\\352\\356\\342">`:
   \   000000C4   2B31303020EE       DC8 "+100 \356\367\352\356\342"
   \              F7EAEEE200  
   \   000000CF   00                 DC8 0
   \   000000D0   3CF2E8EFE020       DC8 "<\362\350\357\340 \357\363\361\362\356>"
   \              EFF3F1F2EE3E
   \              00          
   \   000000DD   000000             DC8 0, 0, 0
   \   000000E0   EEE1FBF7EDFB       DC8 "\356\341\373\367\355\373\351 \352\350\360\357\350\367\350\352"
   \              E920EAE8F0EF
   \              E8F7E8EA00  
   \   000000F1   000000             DC8 0, 0, 0
   \   000000F4   F1F2E5EDEAE0       DC8 "\361\362\345\355\352\340"
   \              00          
   \   000000FB   00                 DC8 0
   \   000000FC   ECE8EDE000         DC8 "\354\350\355\340"
   \   00000101   000000             DC8 0, 0, 0
   \   00000104   F2E5EBE5EFEE       DC8 "\362\345\353\345\357\356\360\362"
   \              F0F200      
   \   0000010D   000000             DC8 0, 0, 0
   \   00000110   F3E2E5EBE8F7       DC8 "\363\342\345\353\350\367\345\355\350\345 \357\353\340\362\364\356\360\354\373"
   \              E5EDE8E520EF
   \              EBE0F2F4EEF0
   \              ECFB00      
   \   00000125   000000             DC8 0, 0, 0
   \   00000128   F3ECE5EDFCF8       DC8 "\363\354\345\355\374\370\345\355\350\345 \357\353\340\362\364\356\360\354\373"
   \              E5EDE8E520EF
   \              EBE0F2F4EEF0
   \              ECFB00      
   \   0000013D   000000             DC8 0, 0, 0
   \   00000140   EAF0F3F2EEE9       DC8 "\352\360\363\362\356\351 \354\377\367\350\352"
   \              20ECFFF7E8EA
   \              00          
   \   0000014D   000000             DC8 0, 0, 0
   \   00000150   F1EBF3F7E0E9       DC8 "\361\353\363\367\340\351\355\373\351 \341\356\355\363\361"
   \              EDFBE920E1EE
   \              EDF3F100    
   \   00000160   756E6B6E6F77       DC8 "unknown error 1"
   \              6E206572726F
   \              72203100    

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\355\\345\\360\\340\\347\\341\\350\\342\\3`:
   \   00000000   EDE5F0E0E7E1       DC8 "\355\345\360\340\347\341\350\342\340\345\354\373\351 \352\350\360\357\350\367\350\352"
   \              E8E2E0E5ECFB
   \              E920EAE8F0EF
   \              E8F7E8EA00  
   \   00000017   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\352\\350\\360\\357\\350\\367\\350\\352-\\`:
   \   00000000   EAE8F0EFE8F7       DC8 "\352\350\360\357\350\367\350\352-\362\345\353\345\357\356\360\362"
   \              E8EA2DF2E5EB
   \              E5EFEEF0F200
   \   00000012   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\352\\350\\360\\357\\350\\367\\350\\352-\\_1`:
   \   00000000   EAE8F0EFE8F7       DC8 "\352\350\360\357\350\367\350\352-\354\350\355\340"
   \              E8EA2DECE8ED
   \              E000        
   \   0000000E   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\363\\342\\345\\353\\350\\367\\340\\353\\3`:
   \   00000000   F3E2E5EBE8F7       DC8 "\363\342\345\353\350\367\340\353\352\340 \357\353\340\362\364\356\360\354\373"
   \              E0EBEAE020EF
   \              EBE0F2F4EEF0
   \              ECFB00      
   \   00000015   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\363\\354\\345\\355\\374\\370\\340\\353\\3`:
   \   00000000   F3ECE5EDFCF8       DC8 "\363\354\345\355\374\370\340\353\352\340 \357\353\340\362\364\356\360\354\373"
   \              E0EBEAE020EF
   \              EBE0F2F4EEF0
   \              ECFB00      
   \   00000015   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\361\\363\\357\\345\\360 \\354\\377\\367\\`:
   \   00000000   F1F3EFE5F020       DC8 "\361\363\357\345\360 \354\377\367\350\352"
   \              ECFFF7E8EA00

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "<\\357\\363\\361\\362\\356 \\362\\350\\357`:
   \   00000000   3CEFF3F1F2EE       DC8 "<\357\363\361\362\356 \362\350\357\340>"
   \              20F2E8EFE03E
   \              00          
   \   0000000D   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant {0, 0, 100, 100}>`:
   \   00000000   00006464           DC8 0, 0, 100, 100

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant {0, 170, 10, 100}>`:
   \   00000000   00AA0A64           DC8 0, 170, 10, 100

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "%s%s">`:
   \   00000000   2573257300         DC8 "%s%s"
   \   00000005   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "map[%d]\\n%t[%d]">`:
   \   00000000   6D61705B2564       DC8 "map[%d]\012%t[%d]"
   \              5D0A25745B25
   \              645D00      
   \   0000000F   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant {0, 180, 0, 100}>`:
   \   00000000   00B40064           DC8 0, 180, 0, 100

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant {0, 180, 180, 100}>`:
   \   00000000   00B4B464           DC8 0, 180, 180, 100

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant {90, 90, 80, 100}>`:
   \   00000000   5A5A5064           DC8 90, 90, 80, 100

   Maximum stack usage in bytes:

     Function              CSTACK
     --------              ------
     About                    80
     CheckComments             4
     CreateImgHdrByAnyFile    76
     DrawEditor               76
     DrawMenu                 76
     DrwImg                   64
     DumpMap                  28
     EditKeyhook               4
     EditLevel                92
     ElfKiller                 4
     FillLevelByPos            0
     FreeImages               16
     LoadImages               40
     LoadMapFromPath          36
     MenuKeyhook               4
     MoveCursor               12
     NavCursor                 4
     NewLevel                  4
     OnKey                    12
     OnRedraw                  0
     PanelCursorLeft           0
     PanelCursorRight          4
     RedrawScreen             28
     RenameLevel               0
     SaveMap                  24
     StartSpeedCursor          4
     Tlog                      0
     UpdateCSMname             4
     ZeroLevel                 0
     fopen                    24
     main                    232
     maincsm_onclose           4
     maincsm_oncreate         20
     maincsm_onmessage         4
     method8                   0
     method9                   0
     onClose                   8
     onCreate                  8
     onFocus                   4
     onUnfocus                 0
     openconf                  8
     str2int                  24
     tolower                   0


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     minus11                           4
     maincsm_name_body               280
     MAINCSM_ID                        4
     MAINGUI_ID                        4
     perc_s                           24
     perc_d                            3
     ?<Constant {70, 70, 70, 90}>    108
     DrawMenu                        432
     About                           344
     fopen                           104
     date                              8
     time                              8
     Tlog                              4
     DrwImg                           92
     ZeroLevel                       128
     comment_buffer                    4
     OnRedraw                          4
     DrawEditor                      796
     CheckComments                   304
     EditLevel                      1032
     RedrawScreen                    132
     SaveMap                         368
     DumpMap                         296
     onCreate                         40
     FreeImages                      120
     onClose                          48
     onFocus                          20
     onUnfocus                        20
     openconf                         72
     RenameLevel                       4
     NewLevel                          4
     MenuKeyhook                     348
     EditKeyhook                     408
     PanelCursorLeft                  68
     PanelCursorRight                 76
     FillLevelByPos                   60
     bricks                         1012
     comments                         92
     MoveCursor                      192
     StartSpeedCursor                 20
     NavCursor                       320
     OnKey                           328
     method8                           8
     method9                           8
     gui_id                            8
     maincsm_oncreate                160
     gui_methods                      52
     ElfKiller                        28
     maincsm_onclose                  20
     maincsm_onmessage               172
     ?<Constant "ArcanoidMapMaker v0.4...">
                                     152
     UpdateCSMname                    24
     tolower                          20
     CreateImgHdrByAnyFile           692
     LoadImages                      304
     perc_i                           28
     str2int                          92
     LoadMapFromPath                 448
     main                            308
     ??DataTable4                      4
     ??DataTable8                      4
     ??DataTable11                     4
     ??DataTable13                     4
     ??DataTable15                     4
     ??DataTable22                     4
     ??DataTable27                     4
     ??DataTable28                     4
     ??DataTable29                     4
     ??DataTable31                     4
     ??DataTable34                     4
     ??DataTable35                     4
     ?<Initializer for bricks>      1012
     ?<Initializer for comments>      92
     ?<Constant {0, 0, 0, 100}>      252
     ?<Constant "maps\\level%d.adm">
                                      72
     ?<Constant "{">                   2
     ?<Constant "%d,">                 4
     ?<Constant "\355\345\350\347\342\345\361\362\3
                                      20
     ?<Constant "}">                   2
     ?<Constant "\352\356\355\364\350\343 \356\341\
                                      20
     ?<Constant "%spics\\bon_%d.png">
                                      40
     ?<Constant "LoadMap[%s]">        92
     ?<Constant "ADM">                 4
     ?<Constant "004">                 4
     ?<Constant "\361\356\347\344\340\362\374 \355\
                                      16
     ?<Constant "\357\340\360\340\354\345\362\360\3
                                      20
     ?<Constant "\361\356\365\360\340\355\350\362\3
                                      12
     ?<Constant ">dump map">          12
     ?<Constant "\355\340\361\362\360\356\351\352\3
                                      12
     ?<Constant "\356 \357\360\356\343\360\340\354\
                                      12
     ?<Constant "\342\373\365\356\344">
                                       8
     ?<Constant "\355\356\360\354\340\353\374\355\3
                                      20
     ?<Constant "2 \357\356\357\340\344\340\355\350
                                     368
     ?<Constant "\355\345\360\340\347\341\350\342\3
                                      24
     ?<Constant "\352\350\360\357\350\367\350\352-\
                                      20
     ?<Constant "\352\350\360\357\350\367\350\352-\_1
                                      16
     ?<Constant "\363\342\345\353\350\367\340\353\3
                                      24
     ?<Constant "\363\354\345\355\374\370\340\353\3
                                      24
     ?<Constant "\361\363\357\345\360 \354\377\367\
                                      12
     ?<Constant "<\357\363\361\362\356 \362\350\357
                                      16
     ?<Constant {0, 0, 100, 100}>      4
     ?<Constant {0, 170, 10, 100}>     4
     ?<Constant "%s%s">                8
     ?<Constant "map[%d]\n%t[%d]">    16
     ?<Constant {0, 180, 0, 100}>      4
     ?<Constant {0, 180, 180, 100}>    4
     ?<Constant {90, 90, 80, 100}>     4
      Others                         220

 
 8 712 bytes in segment CODE
 1 543 bytes in segment DATA_C
 1 104 bytes in segment DATA_I
 1 104 bytes in segment DATA_ID
   316 bytes in segment DATA_Z
    24 bytes in segment INITTAB
 
 8 516 bytes of CODE  memory (+ 220 bytes shared)
 2 647 bytes of CONST memory
 1 420 bytes of DATA  memory

Errors: none
Warnings: none
