##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION    06/Oct/2008  21:46:17 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  D:\Pasha\elf\BelleteMini13.05.08\file_works.c        #
#    Command line    =  D:\Pasha\elf\BelleteMini13.05.08\file_works.c -D     #
#                       NEWSGOLD -D ELKA -lC D:\Pasha\elf\BelleteMini13.05.0 #
#                       8\Release_ELKA\List\ -o D:\Pasha\elf\BelleteMini13.0 #
#                       5.08\Release_ELKA\Obj\ -s9 --no_unroll --no_inline   #
#                       --cpu_mode arm --endian little --cpu ARM926EJ-S      #
#                       --stack_align 4 --interwork -e --fpu None            #
#                       --dlib_config "D:\Pasha\Embedded Workbench 4.0       #
#                       Evaluation2\ARM\LIB\dl5tpainl8n.h" -I                #
#                       "D:\Pasha\Embedded Workbench 4.0                     #
#                       Evaluation2\ARM\INC\"                                #
#    List file       =  D:\Pasha\elf\BelleteMini13.05.08\Release_ELKA\List\f #
#                       ile_works.lst                                        #
#    Object file     =  D:\Pasha\elf\BelleteMini13.05.08\Release_ELKA\Obj\fi #
#                       le_works.r79                                         #
#                                                                            #
#                                                                            #
##############################################################################

D:\Pasha\elf\BelleteMini13.05.08\file_works.c
      1          #include "../inc/swilib.h"
      2          #include "string_works.h"
      3          #include "file_works.h"
      4          
      5          extern char BALLET_PATH[256];
      6          

   \                                 In segment CODE, align 4, keep-with-next
      7          void getSymbolicPath(char * path,const char * cFileName)
      8          {
   \                     getSymbolicPath:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   \   00000004   1CD04DE2           SUB      SP,SP,#+28
   \   00000008   0040A0E1           MOV      R4,R0
      9            int ps=0,pp=0;
   \   0000000C   44929FE5           LDR      R9,??getSymbolicPath_1+0x4  ;; BALLET_PATH
   \   00000010   0150A0E1           MOV      R5,R1
   \   00000014   0060A0E3           MOV      R6,#+0
   \   00000018   0080A0E3           MOV      R8,#+0
   \   0000001C   070000EA           B        ??getSymbolicPath_2
     10            while (ps<strlen(cFileName))
     11            {
     12              if (cFileName[ps]=='$')
     13              {
     14                ps++;
     15                switch (cFileName[ps])
     16                {
     17                case 'b':
     18                  if (cFileName[ps+1]=='a') // ballet
     19                  {
     20                    strcpy(path+pp,BALLET_PATH);
   \                     ??getSymbolicPath_3:
   \   00000020   0910A0E1           MOV      R1,R9
   \   00000024   040088E0           ADD      R0,R8,R4
   \   00000028   1A0000EF           SWI      +26
     21                    pp+=strlen(BALLET_PATH)-1;
   \   0000002C   0900A0E1           MOV      R0,R9
   \   00000030   1B0000EF           SWI      +27
   \   00000034   000088E0           ADD      R0,R8,R0
   \   00000038   018040E2           SUB      R8,R0,#+1
     22                    ps+=6;
   \   0000003C   066086E2           ADD      R6,R6,#+6
     23                    continue;
     24                  }
   \                     ??getSymbolicPath_2:
   \   00000040   0500A0E1           MOV      R0,R5
   \   00000044   1B0000EF           SWI      +27
   \   00000048   000056E1           CMP      R6,R0
   \   0000004C   7C00002A           BCS      ??getSymbolicPath_4
   \   00000050   0520D6E7           LDRB     R2,[R6, +R5]
   \   00000054   010088E2           ADD      R0,R8,#+1
   \   00000058   011086E2           ADD      R1,R6,#+1
   \   0000005C   240052E3           CMP      R2,#+36
   \   00000060   7400001A           BNE      ??getSymbolicPath_5
   \   00000064   F0719FE5           LDR      R7,??getSymbolicPath_1+0x8  ;; `?<Constant "Bookmarks">`
   \   00000068   0160A0E1           MOV      R6,R1
   \   0000006C   0510D6E7           LDRB     R1,[R6, +R5]
   \   00000070   621041E2           SUB      R1,R1,#+98
   \   00000074   130051E3           CMP      R1,#+19
   \   00000078   6A00008A           BHI      ??getSymbolicPath_6
   \   0000007C   012F8FE2           ADR      R2,??getSymbolicPath_0
   \   00000080   0120D2E7           LDRB     R2,[R2, R1]
   \   00000084   02F18FE0           ADD      PC,PC,R2, LSL #+2
   \                     ??getSymbolicPath_0:
   \   00000088   04671867           DC8      +4,+103,+24,+103
   \   0000008C   67676767           DC8      +103,+103,+103,+103
   \   00000090   67676767           DC8      +103,+103,+103,+103
   \   00000094   67296767           DC8      +103,+41,+103,+103
   \   00000098   35675850           DC8      +53,+103,+88,+80
   \                     ??getSymbolicPath_7:
   \   0000009C   050086E0           ADD      R0,R6,R5
   \   000000A0   0100D0E5           LDRB     R0,[R0, #+1]
   \   000000A4   610050E3           CMP      R0,#+97
   \   000000A8   DCFFFF0A           BEQ      ??getSymbolicPath_3
     25                  if (cFileName[ps+1]=='o') // bookmakrs
   \   000000AC   050086E0           ADD      R0,R6,R5
   \   000000B0   0100D0E5           LDRB     R0,[R0, #+1]
   \   000000B4   6F0050E3           CMP      R0,#+111
   \   000000B8   0B00001A           BNE      ??getSymbolicPath_8
     26                  {
     27                    strcpy(path+pp,BALLET_PATH);
   \   000000BC   0910A0E1           MOV      R1,R9
   \   000000C0   040088E0           ADD      R0,R8,R4
   \   000000C4   1A0000EF           SWI      +26
     28                    pp+=strlen(BALLET_PATH);
   \   000000C8   0900A0E1           MOV      R0,R9
   \   000000CC   1B0000EF           SWI      +27
   \   000000D0   088080E0           ADD      R8,R0,R8
     29                    strcpy(path+pp,"Bookmarks");
   \   000000D4   0710A0E1           MOV      R1,R7
   \   000000D8   040088E0           ADD      R0,R8,R4
   \   000000DC   1A0000EF           SWI      +26
     30                    pp+=9;
   \   000000E0   098088E2           ADD      R8,R8,#+9
     31                    ps+=9;
   \   000000E4   096086E2           ADD      R6,R6,#+9
     32                    continue;
   \   000000E8   D4FFFFEA           B        ??getSymbolicPath_2
     33                  }
     34                case 'd': // date
     35                  {
     36                    TDate d;
     37                    GetDateTime(&d,NULL);
   \                     ??getSymbolicPath_8:
   \   000000EC   0010A0E3           MOV      R1,#+0
   \   000000F0   0D00A0E1           MOV      R0,SP
   \   000000F4   B40000EF           SWI      +180
     38                    char c[9];
     39                    sprintf(c,"%.4d%.2d%.2d",d.year,d.month,d.day);
   \   000000F8   0500DDE5           LDRB     R0,[SP, #+5]
   \   000000FC   0C1087E2           ADD      R1,R7,#+12
   \   00000100   01002DE9           PUSH     {R0}
   \   00000104   0830DDE5           LDRB     R3,[SP, #+8]
   \   00000108   04209DE5           LDR      R2,[SP, #+4]
   \   0000010C   14008DE2           ADD      R0,SP,#+20
   \   00000110   160000EF           SWI      +22
     40                    strcpy(path+pp,c);
   \   00000114   14108DE2           ADD      R1,SP,#+20
   \   00000118   040088E0           ADD      R0,R8,R4
   \   0000011C   1A0000EF           SWI      +26
     41                    pp+=8;
   \   00000120   088088E2           ADD      R8,R8,#+8
     42                    ps+=4;
   \                     ??getSymbolicPath_9:
   \   00000124   046086E2           ADD      R6,R6,#+4
     43                    continue;
   \   00000128   04D08DE2           ADD      SP,SP,#+4
   \   0000012C   C3FFFFEA           B        ??getSymbolicPath_2
     44                  }
     45                case 'o': // omscache
     46                  {
     47                    strcpy(path+pp,BALLET_PATH);
   \                     ??getSymbolicPath_10:
   \   00000130   0910A0E1           MOV      R1,R9
   \   00000134   040088E0           ADD      R0,R8,R4
   \   00000138   1A0000EF           SWI      +26
     48                    pp+=strlen(BALLET_PATH);
   \   0000013C   0900A0E1           MOV      R0,R9
   \   00000140   1B0000EF           SWI      +27
   \   00000144   088080E0           ADD      R8,R0,R8
     49                    strcpy(path+pp,"OmsCache");
   \   00000148   1C1087E2           ADD      R1,R7,#+28
   \                     ??getSymbolicPath_11:
   \   0000014C   040088E0           ADD      R0,R8,R4
   \   00000150   1A0000EF           SWI      +26
     50                    pp+=8;
   \   00000154   088088E2           ADD      R8,R8,#+8
     51                    ps+=8;
   \   00000158   086086E2           ADD      R6,R6,#+8
     52                    continue;
   \   0000015C   B7FFFFEA           B        ??getSymbolicPath_2
     53                  }
     54                case 'r':
     55                  if (cFileName[ps+1]=='e') // resources
   \                     ??getSymbolicPath_12:
   \   00000160   050086E0           ADD      R0,R6,R5
   \   00000164   0100D0E5           LDRB     R0,[R0, #+1]
   \   00000168   650050E3           CMP      R0,#+101
   \   0000016C   0B00001A           BNE      ??getSymbolicPath_13
     56                  {
     57                    strcpy(path+pp,BALLET_PATH);
   \   00000170   0910A0E1           MOV      R1,R9
   \   00000174   040088E0           ADD      R0,R8,R4
   \   00000178   1A0000EF           SWI      +26
     58                    pp+=strlen(BALLET_PATH);
   \   0000017C   0900A0E1           MOV      R0,R9
   \   00000180   1B0000EF           SWI      +27
   \   00000184   087080E0           ADD      R7,R0,R8
     59          //          strcpy(path+pp,"Resouces");
     60          //          pp+=9;
     61                    ps+=9;
     62                    strcpy(path+pp,"img");
   \   00000188   311F8FE2           ADR      R1,??getSymbolicPath_1  ;; "img"
   \   0000018C   040087E0           ADD      R0,R7,R4
   \   00000190   1A0000EF           SWI      +26
   \   00000194   096086E2           ADD      R6,R6,#+9
     63                    pp+=3;
   \   00000198   038087E2           ADD      R8,R7,#+3
     64                    continue;
   \   0000019C   A7FFFFEA           B        ??getSymbolicPath_2
     65                  }
     66                  if (cFileName[ps+1]=='o') // root
   \                     ??getSymbolicPath_13:
   \   000001A0   050086E0           ADD      R0,R6,R5
   \   000001A4   0100D0E5           LDRB     R0,[R0, #+1]
   \   000001A8   6F0050E3           CMP      R0,#+111
   \   000001AC   0600001A           BNE      ??getSymbolicPath_14
     67                  {
     68                    memcpy(path+pp,BALLET_PATH,2);
   \   000001B0   0220A0E3           MOV      R2,#+2
   \   000001B4   0910A0E1           MOV      R1,R9
   \   000001B8   040088E0           ADD      R0,R8,R4
   \   000001BC   1E0100EF           SWI      +286
     69                    pp+=2;
   \   000001C0   028088E2           ADD      R8,R8,#+2
     70                    ps+=4;
   \   000001C4   046086E2           ADD      R6,R6,#+4
     71                    continue;
   \   000001C8   9CFFFFEA           B        ??getSymbolicPath_2
     72                  }
     73                case 'u': // urlcache
     74                  {
     75                    strcpy(path+pp,BALLET_PATH);
   \                     ??getSymbolicPath_14:
   \   000001CC   0910A0E1           MOV      R1,R9
   \   000001D0   040088E0           ADD      R0,R8,R4
   \   000001D4   1A0000EF           SWI      +26
     76                    pp+=strlen(BALLET_PATH);
   \   000001D8   0900A0E1           MOV      R0,R9
   \   000001DC   1B0000EF           SWI      +27
   \   000001E0   088080E0           ADD      R8,R0,R8
     77                    strcpy(path+pp,"UrlCache");
   \   000001E4   281087E2           ADD      R1,R7,#+40
   \   000001E8   D7FFFFEA           B        ??getSymbolicPath_11
     78                    pp+=8;
     79                    ps+=8;
     80                    continue;
     81                  }
     82                case 't': // time
     83                  {
     84                    TTime t;
     85                    GetDateTime(NULL,&t);
   \                     ??getSymbolicPath_15:
   \   000001EC   0D10A0E1           MOV      R1,SP
   \   000001F0   0000A0E3           MOV      R0,#+0
   \   000001F4   B40000EF           SWI      +180
     86                    char c[7];
     87                    sprintf(c,"%.2d%.2d%.2d",t.hour,t.min,t.sec);
   \   000001F8   0200DDE5           LDRB     R0,[SP, #+2]
   \   000001FC   341087E2           ADD      R1,R7,#+52
   \   00000200   01002DE9           PUSH     {R0}
   \   00000204   0530DDE5           LDRB     R3,[SP, #+5]
   \   00000208   0420DDE5           LDRB     R2,[SP, #+4]
   \   0000020C   0C008DE2           ADD      R0,SP,#+12
   \   00000210   160000EF           SWI      +22
     88                    strcpy(path+pp,c);
   \   00000214   0C108DE2           ADD      R1,SP,#+12
   \   00000218   040088E0           ADD      R0,R8,R4
   \   0000021C   1A0000EF           SWI      +26
     89                    pp+=6;
   \   00000220   068088E2           ADD      R8,R8,#+6
     90                    ps+=4;
   \   00000224   BEFFFFEA           B        ??getSymbolicPath_9
     91                    continue;
     92                  }
     93                default:
     94                  path[pp++]='$';
   \                     ??getSymbolicPath_6:
   \   00000228   2410A0E3           MOV      R1,#+36
   \   0000022C   0410C8E7           STRB     R1,[R8, +R4]
   \                     ??getSymbolicPath_16:
   \   00000230   0080A0E1           MOV      R8,R0
   \   00000234   81FFFFEA           B        ??getSymbolicPath_2
     95                }
     96              }
     97              else
     98              {
     99                path[pp++]=cFileName[ps++];
   \                     ??getSymbolicPath_5:
   \   00000238   0420C8E7           STRB     R2,[R8, +R4]
   \   0000023C   0160A0E1           MOV      R6,R1
   \   00000240   FAFFFFEA           B        ??getSymbolicPath_16
    100              }
    101            }
    102            path[pp]=0;
   \                     ??getSymbolicPath_4:
   \   00000244   0000A0E3           MOV      R0,#+0
   \   00000248   0400C8E7           STRB     R0,[R8, +R4]
    103          }
   \   0000024C   1CD08DE2           ADD      SP,SP,#+28
   \   00000250   F083BDE8           POP      {R4-R9,PC}       ;; return
   \                     ??getSymbolicPath_1:
   \   00000254   696D6700           DC8      "img"
   \   00000258   ........           DC32     BALLET_PATH
   \   0000025C   ........           DC32     `?<Constant "Bookmarks">`
    104          

   \                                 In segment CODE, align 4, keep-with-next
    105          int ballet_fexists(const char * cFileName)
    106          {
   \                     ballet_fexists:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   4BDF4DE2           SUB      SP,SP,#+300
    107            char path[256];
    108            getSymbolicPath(path,cFileName);
   \   00000008   0010A0E1           MOV      R1,R0
   \   0000000C   04008DE2           ADD      R0,SP,#+4
   \   00000010   ........           BL       getSymbolicPath
    109          	FSTATS fs;
    110            unsigned int ul;
    111          	return (GetFileStats(path,&fs,&ul)!=-1);
   \   00000014   0D20A0E1           MOV      R2,SP
   \   00000018   411F8DE2           ADD      R1,SP,#+260
   \   0000001C   04008DE2           ADD      R0,SP,#+4
   \   00000020   840000EF           SWI      +132
   \   00000024   010070E3           CMN      R0,#+1
   \   00000028   0100A013           MOVNE    R0,#+1
   \   0000002C   0000A003           MOVEQ    R0,#+0
   \   00000030   4BDF8DE2           ADD      SP,SP,#+300
   \   00000034   0080BDE8           POP      {PC}             ;; return
    112          }

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Bookmarks">`:
   \   00000000   426F6F6B6D61       DC8 "Bookmarks"
   \              726B7300    
   \   0000000A   0000               DC8 0, 0
   \   0000000C   252E3464252E       DC8 "%.4d%.2d%.2d"
   \              3264252E3264
   \              00          
   \   00000019   000000             DC8 0, 0, 0
   \   0000001C   4F6D73436163       DC8 "OmsCache"
   \              686500      
   \   00000025   000000             DC8 0, 0, 0
   \   00000028   55726C436163       DC8 "UrlCache"
   \              686500      
   \   00000031   000000             DC8 0, 0, 0
   \   00000034   252E3264252E       DC8 "%.2d%.2d%.2d"
   \              3264252E3264
   \              00          
   \   00000041   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \   00000000   696D6700           DC8 "img"

   Maximum stack usage in bytes:

     Function        CSTACK
     --------        ------
     ballet_fexists    304
     getSymbolicPath    60


   Segment part sizes:

     Function/Label          Bytes
     --------------          -----
     getSymbolicPath          608
     ballet_fexists            56
     ?<Constant "Bookmarks">   68
     ?<Constant "img">          4
      Others                    8

 
 672 bytes in segment CODE
  72 bytes in segment DATA_C
 
 664 bytes of CODE  memory (+ 8 bytes shared)
  72 bytes of CONST memory

Errors: none
Warnings: none
