##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION    30/Jan/2009  13:57:40 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  G:\Pasha\elf\SVN2\NATICQ\main.c                      #
#    Command line    =  G:\Pasha\elf\SVN2\NATICQ\main.c -D NEWSGOLD -D ELKA  #
#                       --preprocess G:\Pasha\elf\SVN2\NATICQ\Release_ELKA\L #
#                       ist\ -lC G:\Pasha\elf\SVN2\NATICQ\Release_ELKA\List\ #
#                        -o G:\Pasha\elf\SVN2\NATICQ\Release_ELKA\Obj\ -s9   #
#                       --no_unroll --cpu_mode arm --endian little --cpu     #
#                       ARM926EJ-S --stack_align 4 --interwork -e --fpu      #
#                       None --dlib_config "G:\Pasha\Embedded Workbench 4.0  #
#                       Evaluation2\ARM\LIB\dl5tpainl8n.h" -I                #
#                       "G:\Pasha\Embedded Workbench 4.0                     #
#                       Evaluation2\ARM\INC\" --inline_threshold=2           #
#    List file       =  G:\Pasha\elf\SVN2\NATICQ\Release_ELKA\List\main.lst  #
#    Object file     =  G:\Pasha\elf\SVN2\NATICQ\Release_ELKA\Obj\main.r79   #
#                                                                            #
#                                                                            #
##############################################################################

G:\Pasha\elf\SVN2\NATICQ\main.c
      1          #include "../inc/swilib.h"
      2          #include "../inc/cfg_items.h"
      3          #include "../inc/pnglist.h"
      4          #include "NatICQ.h"
      5          #include "history.h"
      6          #include "conf_loader.h"
      7          #include "mainmenu.h"
      8          #include "main.h"
      9          #include "language.h"
     10          #include "../inc/xtask_ipc.h"
     11          #include "smiles.h"
     12          #include "../inc/naticq_ipc.h"
     13          #include "naticq_ipc.h"
     14          #include "status_change.h"
     15          #include "strings.h"
     16          #include "manage_cl.h"
     17          #include "cl_work.h"
     18          #include "select_smile.h"
     19          #include "revision.h"
     20          #include "lang.h"
     21          
     22          #ifndef NEWSGOLD
     23          #define SEND_TIMER
     24          #endif
     25          
     26          extern volatile int total_smiles;
     27          extern volatile int total_xstatuses;
     28          extern volatile int xstatuses_load;
     29          extern volatile int pictures_max;
     30          extern volatile int pictures_loaded;
     31          
     32          #define USE_MLMENU
     33          
     34          #define TMR_SECOND 216
     35          
     36          //IPC
     37          const char ipc_my_name[32]=IPC_NATICQ_NAME;
     38          const char ipc_xtask_name[]=IPC_XTASK_NAME;
     39          IPC_REQ gipc;
     40          
     41          
     42          char elf_path[256];
     43          int maincsm_id;
     44          int maingui_id;
     45          

   \                                 In segment CODE, align 4, keep-with-next
     46          void SMART_REDRAW(void)
     47          {
   \                     SMART_REDRAW:
   \   00000000   10402DE9           PUSH     {R4,LR}
     48            int f;
     49            LockSched();
   \   00000004   460100EF           SWI      +326
     50            f=IsGuiOnTop(maingui_id);
   \   00000008   1C009FE5           LDR      R0,??SMART_REDRAW_0  ;; contactlist_menuhdr + 480
   \   0000000C   000090E5           LDR      R0,[R0, #+0]
   \   00000010   350100EF           SWI      +309
   \   00000014   0040A0E1           MOV      R4,R0
     51            UnlockSched();
   \   00000018   470100EF           SWI      +327
     52            if (f) REDRAW();
   \   0000001C   000054E3           CMP      R4,#+0
   \   00000020   1080BD08           POPEQ    {R4,PC}
   \   00000024   720100EF           SWI      +370
     53          }
   \   00000028   1080BDE8           POP      {R4,PC}          ;; return
   \                     ??SMART_REDRAW_0:
   \   0000002C   ........           DC32     contactlist_menuhdr + 480
     54          
     55          //По 10 секунд
     56          #define ACTIVE_TIME 360
     57          
     58          //Максимальное количество сообщений в логе
     59          #define MAXLOGMSG (20)
     60          
     61          // Строковые описания статусов
     62          
     63          const char S_OFFLINE[]="Offline";
     64          const char S_INVISIBLE[]="Invisible";
     65          const char S_AWAY[]="Away";
     66          const char S_NA[]="N/A";
     67          const char S_OCCUPIED[]="Occupied";
     68          const char S_DND[]="DND";
     69          const char S_ONLINE[]="Online";
     70          const char S_FFC[]="FFC";
     71          
     72          volatile int SENDMSGCOUNT;
     73          
     74          int IsActiveUp=0;
     75          
     76          int Is_Vibra_Enabled;
     77          unsigned int Is_Sounds_Enabled;
     78          int Is_Show_Offline;
     79          int Is_Show_Groups;
     80          
     81          int S_ICONS[TOTAL_ICONS+1];
     82          
     83          #define EOP -10
     84          int CurrentStatus;
     85          int CurrentXStatus;
     86          
     87          WSHDR *ews;
     88          
     89          extern const unsigned int UIN;
     90          extern const char PASS[];
     91          
     92          static const char * const icons_names[TOTAL_ICONS]=
     93          {
     94            "offline.png",
     95            "invisible.png",
     96            "away.png",
     97            "na.png",
     98            "occupied.png",
     99            "dnd.png",
    100            "depression.png",
    101            "evil.png",
    102            "home.png",
    103            "lunch.png",
    104            "work.png",
    105            "online.png",
    106            "ffc.png",
    107            "message.png",
    108            "unknown.png",
    109            "groupon.png",
    110            "groupoff.png",
    111            "null.png",
    112            "addcont.png",
    113            "head.png",
    114            "logo.png",
    115            "ping.png",
    116            "settings.png",
    117            "vis1.png",
    118            "vis2.png",
    119            "vis3.png",
    120            "vis4.png",
    121            "vis5.png"
    122          };
    123          
    124          

   \                                 In segment CODE, align 4, keep-with-next
    125          void setup_ICONS(void)
    126          {
   \                     setup_ICONS:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
    127            extern const char ICON_PATH[];
    128            const char _slash[]="\\";
   \   00000004   98409FE5           LDR      R4,??setup_ICONS_0  ;; `?<Constant "\\\\">_3`
   \   00000008   84D04DE2           SUB      SP,SP,#+132
   \   0000000C   0010D4E5           LDRB     R1,[R4, #0]
   \   00000010   0D00A0E1           MOV      R0,SP
   \   00000014   0010C0E5           STRB     R1,[R0, #+0]
   \   00000018   0110D4E5           LDRB     R1,[R4, #+1]
   \   0000001C   0110C0E5           STRB     R1,[R0, #+1]
    129            char icon_path[128];
    130            zeromem(icon_path,128);
   \   00000020   8010A0E3           MOV      R1,#+128
   \   00000024   04008DE2           ADD      R0,SP,#+4
   \   00000028   1D0100EF           SWI      +285
    131            strcpy(icon_path,ICON_PATH);
   \   0000002C   74109FE5           LDR      R1,??setup_ICONS_0+0x4  ;; ICON_PATH
   \   00000030   04008DE2           ADD      R0,SP,#+4
   \   00000034   1A0000EF           SWI      +26
    132            if (icon_path[strlen(icon_path)-1]!='\\') strcat(icon_path,_slash);
   \   00000038   04008DE2           ADD      R0,SP,#+4
   \   0000003C   1B0000EF           SWI      +27
   \   00000040   04108DE2           ADD      R1,SP,#+4
   \   00000044   010080E0           ADD      R0,R0,R1
   \   00000048   010050E5           LDRB     R0,[R0, #-1]
   \   0000004C   5C0050E3           CMP      R0,#+92
   \   00000050   0200000A           BEQ      ??setup_ICONS_1
   \   00000054   0D10A0E1           MOV      R1,SP
   \   00000058   04008DE2           ADD      R0,SP,#+4
   \   0000005C   170000EF           SWI      +23
    133            int i=0;
   \                     ??setup_ICONS_1:
   \   00000060   0050A0E3           MOV      R5,#+0
    134            do
    135            {
    136              if (!S_ICONS[i]) S_ICONS[i]=(int)MakeGlobalString(icon_path,0,icons_names[i]);
   \                     ??setup_ICONS_2:
   \   00000064   ........           LDR      R0,??DataTable27  ;; contactlist_menuhdr
   \   00000068   056180E0           ADD      R6,R0,R5, LSL #+2
   \   0000006C   100196E5           LDR      R0,[R6, #+272]
   \   00000070   000050E3           CMP      R0,#+0
   \   00000074   0500001A           BNE      ??setup_ICONS_3
   \   00000078   050184E0           ADD      R0,R4,R5, LSL #+2
   \   0000007C   042090E5           LDR      R2,[R0, #+4]
   \   00000080   0010A0E3           MOV      R1,#+0
   \   00000084   04008DE2           ADD      R0,SP,#+4
   \   00000088   ........           _BLF     MakeGlobalString,??MakeGlobalString??rA
   \   0000008C   100186E5           STR      R0,[R6, #+272]
    137              i++;
   \                     ??setup_ICONS_3:
   \   00000090   015085E2           ADD      R5,R5,#+1
    138            }
    139            while(i<TOTAL_ICONS);
   \   00000094   1C0055E3           CMP      R5,#+28
   \   00000098   F1FFFF3A           BCC      ??setup_ICONS_2
    140            return;
   \   0000009C   84D08DE2           ADD      SP,SP,#+132      ;; stack cleaning
   \   000000A0   7080BDE8           POP      {R4-R6,PC}       ;; return
   \                     ??setup_ICONS_0:
   \   000000A4   ........           DC32     `?<Constant "\\\\">_3`
   \   000000A8   ........           DC32     ICON_PATH
    141          }
    142          

   \                                 In segment CODE, align 4, keep-with-next
    143          void free_ICONS(void)
    144          {
   \                     free_ICONS:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
    145            int i=0;
   \   00000004   0040A0E3           MOV      R4,#+0
   \   00000008   0050A0E3           MOV      R5,#+0
    146            do
    147            {
    148              mfree((void*)S_ICONS[i]);
   \                     ??free_ICONS_0:
   \   0000000C   ........           LDR      R0,??DataTable27  ;; contactlist_menuhdr
   \   00000010   046180E0           ADD      R6,R0,R4, LSL #+2
   \   00000014   100196E5           LDR      R0,[R6, #+272]
    149              S_ICONS[i]=0;
    150              i++;
   \   00000018   014084E2           ADD      R4,R4,#+1
   \   0000001C   150000EF           SWI      +21
   \   00000020   105186E5           STR      R5,[R6, #+272]
    151            }
    152            while(i<TOTAL_ICONS);
   \   00000024   1C0054E3           CMP      R4,#+28
   \   00000028   F7FFFF3A           BCC      ??free_ICONS_0
    153            return;
   \   0000002C   7080BDE8           POP      {R4-R6,PC}       ;; return
    154          }
    155          
    156          extern const unsigned int IDLEICON_X;
    157          extern const unsigned int IDLEICON_Y;
    158          
    159          extern const unsigned int I_COLOR;
    160          extern const unsigned int TO_COLOR;
    161          extern const unsigned int X_COLOR;
    162          extern const unsigned int O_I_COLOR;
    163          extern const unsigned int O_TO_COLOR;
    164          extern const unsigned int O_X_COLOR;
    165          
    166          extern const unsigned int ED_FONT_SIZE;
    167          extern const unsigned int ED_H_FONT_SIZE;
    168          extern const unsigned int ED_X_FONT_SIZE;
    169          extern const unsigned int O_ED_FONT_SIZE;
    170          extern const unsigned int O_ED_H_FONT_SIZE;
    171          extern const unsigned int O_ED_X_FONT_SIZE;
    172          
    173          extern const unsigned int ACK_COLOR;
    174          extern const unsigned int UNACK_COLOR;
    175          
    176          extern const int ENA_AUTO_XTXT;
    177          extern const int NOT_LOG_SAME_XTXT;
    178          extern const int LOG_XTXT;
    179          
    180          extern const int HISTORY_BUFFER;
    181          
    182          const char percent_t[]="%t";
    183          const char percent_d[]="%d";
    184          const char empty_str[]="";
    185          const char I_str[]="I";
    186          const char x_status_change[]="X-Status change";
    187          
    188          char logmsg[256];
    189          
    190          //Illumination by BoBa 19.04.2007
    191          ///////////
    192          extern const unsigned int ILL_DISP_RECV;
    193          extern const unsigned int ILL_KEYS_RECV;
    194          extern const unsigned int ILL_DISP_SEND;
    195          extern const unsigned int ILL_KEYS_SEND;
    196          extern const unsigned int ILL_SEND_TMR;
    197          extern const unsigned int ILL_SEND_FADE;
    198          extern const unsigned int ILL_RECV_TMR;
    199          extern const unsigned int ILL_RECV_FADE;
    200          extern const unsigned int ILL_OFF_FADE;
    201          
    202          GBSTMR tmr_illumination;
    203          

   \                                 In segment CODE, align 4, keep-with-next
    204          void IlluminationOff(){
    205            SetIllumination(0,1,0,ILL_OFF_FADE);
   \                     IlluminationOff:
   \   00000000   30009FE5           LDR      R0,??IlluminationOff_0  ;; ILL_OFF_FADE
   \   00000004   10402DE9           PUSH     {R4,LR}
   \   00000008   004090E5           LDR      R4,[R0, #+0]
   \   0000000C   0020A0E3           MOV      R2,#+0
   \   00000010   0430A0E1           MOV      R3,R4
   \   00000014   0110A0E3           MOV      R1,#+1
   \   00000018   0000A0E3           MOV      R0,#+0
   \   0000001C   080000EF           SWI      +8
    206            SetIllumination(1,1,0,ILL_OFF_FADE);
   \   00000020   0430A0E1           MOV      R3,R4
   \   00000024   0020A0E3           MOV      R2,#+0
   \   00000028   0110A0E3           MOV      R1,#+1
   \   0000002C   0100A0E1           MOV      R0,R1
   \   00000030   080000EF           SWI      +8
    207          }
   \   00000034   1080BDE8           POP      {R4,PC}          ;; return
   \                     ??IlluminationOff_0:
   \   00000038   ........           DC32     ILL_OFF_FADE
    208          

   \                                 In segment CODE, align 4, keep-with-next
    209          void IlluminationOn(const int disp, const int key, const int tmr, const int fade){
   \                     IlluminationOn:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0260A0E1           MOV      R6,R2
   \   00000010   0370A0E1           MOV      R7,R3
    210            if(!tmr) return;
   \   00000014   000056E3           CMP      R6,#+0
   \   00000018   F083BD08           POPEQ    {R4-R9,PC}
    211            GBS_DelTimer(&tmr_illumination);
   \   0000001C   ........           LDR      R9,??DataTable27  ;; contactlist_menuhdr
   \   00000020   D880A0E3           MOV      R8,#+216
   \   00000024   408E88E3           ORR      R8,R8,#0x400
   \   00000028   090088E0           ADD      R0,R8,R9
   \   0000002C   8C0100EF           SWI      +396
    212            SetIllumination(0,1,disp,fade);
   \   00000030   0730A0E1           MOV      R3,R7
   \   00000034   0428A0E1           MOV      R2,R4, LSL #+16
   \   00000038   2228A0E1           MOV      R2,R2, LSR #+16
   \   0000003C   0110A0E3           MOV      R1,#+1
   \   00000040   0000A0E3           MOV      R0,#+0
   \   00000044   080000EF           SWI      +8
    213            SetIllumination(1,1,key,fade);
   \   00000048   0730A0E1           MOV      R3,R7
   \   0000004C   0528A0E1           MOV      R2,R5, LSL #+16
   \   00000050   2228A0E1           MOV      R2,R2, LSR #+16
   \   00000054   0110A0E3           MOV      R1,#+1
   \   00000058   0100A0E3           MOV      R0,#+1
   \   0000005C   080000EF           SWI      +8
    214            GBS_StartTimerProc(&tmr_illumination,tmr*216,IlluminationOff);
   \   00000060   10209FE5           LDR      R2,??IlluminationOn_0  ;; IlluminationOff
   \   00000064   D800A0E3           MOV      R0,#+216
   \   00000068   900601E0           MUL      R1,R0,R6
   \   0000006C   090088E0           ADD      R0,R8,R9
   \   00000070   4D0000EF           SWI      +77
    215          }
   \   00000074   F083BDE8           POP      {R4-R9,PC}       ;; return
   \                     ??IlluminationOn_0:
   \   00000078   ........           DC32     IlluminationOff
    216          
    217          volatile int silenthide;    //by BoBa 25.06.07
    218          volatile int disautorecconect;	//by BoBa 10.07
    219          ///////////
    220          int Is_Vibra_Enabled;
    221          unsigned int Is_Sounds_Enabled;
    222          int Is_Show_Offline;
    223          int Is_Show_Groups;
    224          int CurrentStatus;
    225          int CurrentXStatus;
    226          int CurrentPrivateStatus;
    227          
    228          //===================================================================

   \                                 In segment CODE, align 4, keep-with-next
    229          int InAway()
    230          {
   \                     InAway:
   \   00000000   ........           LDR      R0,??DataTable3  ;; contactlist_menuhdr + 520
   \   00000004   000090E5           LDR      R0,[R0, #+0]
   \   00000008   030050E3           CMP      R0,#+3
   \   0000000C   05005013           CMPNE    R0,#+5
   \   00000010   04005013           CMPNE    R0,#+4
   \   00000014   0500001A           BNE      ??InAway_0
   \   00000018   18009FE5           LDR      R0,??InAway_1    ;; STRONG_AWAY
   \   0000001C   000090E5           LDR      R0,[R0, #+0]
   \   00000020   000050E3           CMP      R0,#+0
   \   00000024   1EFF2F01           BXEQ     LR
    231            extern const int STRONG_AWAY;
    232            if((CurrentStatus == IS_NA || 
    233               CurrentStatus == IS_DND || 
    234               CurrentStatus == IS_OCCUPIED) &&
    235               STRONG_AWAY)
    236              return 1;
   \   00000028   0100A0E3           MOV      R0,#+1
   \   0000002C   1EFF2FE1           BX       LR
    237            return 0;
   \                     ??InAway_0:
   \   00000030   0000A0E3           MOV      R0,#+0
   \   00000034   1EFF2FE1           BX       LR               ;; return
   \                     ??InAway_1:
   \   00000038   ........           DC32     STRONG_AWAY
    238          }
    239          //===================================================================
    240          const char def_setting[]="%sdef_settings_%d";
    241          

   \                                 In segment CODE, align 4, keep-with-next
    242          void ReadDefSettings(void)
    243          {
    244            DEF_SETTINGS def_set;
    245            int f;
    246            unsigned int err;
    247            char str[128];
    248            snprintf(str,127,def_setting,elf_path,UIN);
   \                     ReadDefSettings:
   \   00000000   ........           LDR      R0,??DataTable7  ;; UIN
   \   00000004   ........           LDR      R2,??DataTable8  ;; def_setting
   \   00000008   30402DE9           PUSH     {R4,R5,LR}
   \   0000000C   ........           LDR      R4,??DataTable27  ;; contactlist_menuhdr
   \   00000010   88D04DE2           SUB      SP,SP,#+136
   \   00000014   000090E5           LDR      R0,[R0, #+0]
   \   00000018   AE3F84E2           ADD      R3,R4,#+696
   \   0000001C   01002DE9           PUSH     {R0}
   \   00000020   7F10A0E3           MOV      R1,#+127
   \   00000024   0C008DE2           ADD      R0,SP,#+12
   \   00000028   1B0100EF           SWI      +283
    249            if ((f=fopen(str,A_ReadOnly+A_BIN,P_READ,&err))!=-1)
   \   0000002C   08308DE2           ADD      R3,SP,#+8
   \   00000030   8020A0E3           MOV      R2,#+128
   \   00000034   801CA0E3           MOV      R1,#+32768
   \   00000038   0C008DE2           ADD      R0,SP,#+12
   \   0000003C   0A0000EF           SWI      +10
   \   00000040   0050A0E1           MOV      R5,R0
   \   00000044   010075E3           CMN      R5,#+1
   \   00000048   04D08DE2           ADD      SP,SP,#+4
   \   0000004C   1600000A           BEQ      ??ReadDefSettings_0
    250            {
    251              fread(f,&def_set,sizeof(DEF_SETTINGS),&err);
   \   00000050   04308DE2           ADD      R3,SP,#+4
   \   00000054   0320A0E3           MOV      R2,#+3
   \   00000058   0D10A0E1           MOV      R1,SP
   \   0000005C   0B0000EF           SWI      +11
    252              fclose(f,&err);
   \   00000060   04108DE2           ADD      R1,SP,#+4
   \   00000064   0500A0E1           MOV      R0,R5
   \   00000068   0D0000EF           SWI      +13
    253              Is_Vibra_Enabled=def_set.vibra_status;
   \   0000006C   0000DDE5           LDRB     R0,[SP, #+0]
   \   00000070   010000E2           AND      R0,R0,#0x1
   \   00000074   F80184E5           STR      R0,[R4, #+504]
    254              Is_Sounds_Enabled=def_set.sound_status;
   \   00000078   0000DDE5           LDRB     R0,[SP, #+0]
    255              Is_Show_Offline=def_set.off_contacts;
   \   0000007C   0010DDE5           LDRB     R1,[SP, #+0]
    256              Is_Show_Groups=def_set.show_groups;
   \   00000080   0020DDE5           LDRB     R2,[SP, #+0]
    257              CurrentStatus=def_set.def_status+1;
   \   00000084   0130DDE5           LDRB     R3,[SP, #+1]
    258              CurrentXStatus=def_set.def_xstatus;
   \   00000088   0250DDE5           LDRB     R5,[SP, #+2]
   \   0000008C   020000E2           AND      R0,R0,#0x2
   \   00000090   A000A0E1           LSR      R0,R0,#+1
   \   00000094   041001E2           AND      R1,R1,#0x4
   \   00000098   2111A0E1           LSR      R1,R1,#+2
   \   0000009C   082002E2           AND      R2,R2,#0x8
   \   000000A0   A221A0E1           LSR      R2,R2,#+3
   \   000000A4   013083E2           ADD      R3,R3,#+1
   \   000000A8   050000EA           B        ??ReadDefSettings_1
    259            }
    260            else
    261            {
    262              Is_Vibra_Enabled=0;
   \                     ??ReadDefSettings_0:
   \   000000AC   0000A0E3           MOV      R0,#+0
   \   000000B0   F80184E5           STR      R0,[R4, #+504]
    263              Is_Sounds_Enabled=0;
    264              Is_Show_Offline=0;
   \   000000B4   0010A0E3           MOV      R1,#+0
    265              Is_Show_Groups=1;
   \   000000B8   0120A0E3           MOV      R2,#+1
    266              CurrentStatus=IS_ONLINE;
   \   000000BC   0B30A0E3           MOV      R3,#+11
    267              CurrentXStatus=0;
   \   000000C0   0050A0E1           MOV      R5,R0
   \                     ??ReadDefSettings_1:
   \   000000C4   0C5284E5           STR      R5,[R4, #+524]
   \   000000C8   083284E5           STR      R3,[R4, #+520]
   \   000000CC   042284E5           STR      R2,[R4, #+516]
   \   000000D0   001284E5           STR      R1,[R4, #+512]
   \   000000D4   FC0184E5           STR      R0,[R4, #+508]
    268            }
    269          }
   \   000000D8   88D08DE2           ADD      SP,SP,#+136
   \   000000DC   3080BDE8           POP      {R4,R5,PC}       ;; return
    270          

   \                                 In segment CODE, align 4, keep-with-next
    271          void WriteDefSettings(void)
    272          {
    273            DEF_SETTINGS def_set;
    274            int f;
    275            unsigned int err;
    276            char str[128];
    277            snprintf(str,127,def_setting,elf_path,UIN);
   \                     WriteDefSettings:
   \   00000000   ........           LDR      R0,??DataTable7  ;; UIN
   \   00000004   ........           LDR      R2,??DataTable8  ;; def_setting
   \   00000008   30402DE9           PUSH     {R4,R5,LR}
   \   0000000C   ........           LDR      R4,??DataTable27  ;; contactlist_menuhdr
   \   00000010   88D04DE2           SUB      SP,SP,#+136
   \   00000014   000090E5           LDR      R0,[R0, #+0]
   \   00000018   AE3F84E2           ADD      R3,R4,#+696
   \   0000001C   01002DE9           PUSH     {R0}
   \   00000020   7F10A0E3           MOV      R1,#+127
   \   00000024   0C008DE2           ADD      R0,SP,#+12
   \   00000028   1B0100EF           SWI      +283
    278            if ((f=fopen(str,A_WriteOnly+A_BIN+A_Create+A_Truncate,P_WRITE,&err))!=-1)
   \   0000002C   08308DE2           ADD      R3,SP,#+8
   \   00000030   402FA0E3           MOV      R2,#+256
   \   00000034   0110A0E3           MOV      R1,#+1
   \   00000038   831C81E3           ORR      R1,R1,#0x8300
   \   0000003C   0C008DE2           ADD      R0,SP,#+12
   \   00000040   0A0000EF           SWI      +10
   \   00000044   0050A0E1           MOV      R5,R0
   \   00000048   010075E3           CMN      R5,#+1
   \   0000004C   04D08DE2           ADD      SP,SP,#+4
   \   00000050   1D00000A           BEQ      ??WriteDefSettings_0
    279            {
    280              def_set.vibra_status=Is_Vibra_Enabled;
    281              def_set.sound_status=Is_Sounds_Enabled;
    282              def_set.off_contacts=Is_Show_Offline;
    283              def_set.show_groups=Is_Show_Groups;
   \   00000054   0010DDE5           LDRB     R1,[SP, #+0]
   \   00000058   F82194E5           LDR      R2,[R4, #+504]
   \   0000005C   F01001E2           AND      R1,R1,#0xF0
   \   00000060   012002E2           AND      R2,R2,#0x1
   \   00000064   011082E1           ORR      R1,R2,R1
   \   00000068   FC2194E5           LDR      R2,[R4, #+508]
   \   0000006C   0230A0E3           MOV      R3,#+2
   \   00000070   822003E0           AND      R2,R3,R2, LSL #+1
   \   00000074   011082E1           ORR      R1,R2,R1
   \   00000078   002294E5           LDR      R2,[R4, #+512]
   \   0000007C   0430A0E3           MOV      R3,#+4
   \   00000080   022103E0           AND      R2,R3,R2, LSL #+2
   \   00000084   011082E1           ORR      R1,R2,R1
   \   00000088   042294E5           LDR      R2,[R4, #+516]
   \   0000008C   0830A0E3           MOV      R3,#+8
   \   00000090   822103E0           AND      R2,R3,R2, LSL #+3
   \   00000094   011082E1           ORR      R1,R2,R1
   \   00000098   0010CDE5           STRB     R1,[SP, #+0]
    284              def_set.def_status=CurrentStatus-1;
   \   0000009C   081294E5           LDR      R1,[R4, #+520]
    285              def_set.def_xstatus=CurrentXStatus;
    286              fwrite(f,&def_set,sizeof(DEF_SETTINGS),&err);
   \   000000A0   04308DE2           ADD      R3,SP,#+4
   \   000000A4   011041E2           SUB      R1,R1,#+1
   \   000000A8   0110CDE5           STRB     R1,[SP, #+1]
   \   000000AC   0C1294E5           LDR      R1,[R4, #+524]
   \   000000B0   0320A0E3           MOV      R2,#+3
   \   000000B4   0210CDE5           STRB     R1,[SP, #+2]
   \   000000B8   0D10A0E1           MOV      R1,SP
   \   000000BC   0C0000EF           SWI      +12
    287              fclose(f,&err);
   \   000000C0   04108DE2           ADD      R1,SP,#+4
   \   000000C4   0500A0E1           MOV      R0,R5
   \   000000C8   0D0000EF           SWI      +13
    288            }
    289          }
   \                     ??WriteDefSettings_0:
   \   000000CC   88D08DE2           ADD      SP,SP,#+136      ;; stack cleaning
   \   000000D0   3080BDE8           POP      {R4,R5,PC}       ;; return
    290          //by KreN 27.09.2007
    291          //===================================================================
    292          extern S_SMILES *s_top;
    293          extern DYNPNGICONLIST *SmilesImgList;
    294          extern DYNPNGICONLIST *XStatusesImgList;
    295          
    296          //=============================Проигрывание звука=======================
    297          extern const char sndStartup[];
    298          extern const char sndSrvMsg[];
    299          extern const char sndGlobal[];
    300          extern const char sndMsg[];
    301          extern const char sndMsgSent[];
    302          extern const unsigned int sndVolume;
    303          
    304          

   \                                 In segment CODE, align 4, keep-with-next
    305          void Play(const char *fname)
    306          {
   \                     Play:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   D0D04DE2           SUB      SP,SP,#+208
   \   00000008   0060A0E1           MOV      R6,R0
    307            if ((!IsCalling())&&Is_Sounds_Enabled&&!InAway())
   \   0000000C   6E0000EF           SWI      +110
   \   00000010   000050E3           CMP      R0,#+0
   \   00000014   4400001A           BNE      ??Play_0
   \   00000018   14019FE5           LDR      R0,??Play_1      ;; contactlist_menuhdr + 508
   \   0000001C   000090E5           LDR      R0,[R0, #+0]
   \   00000020   000050E3           CMP      R0,#+0
   \   00000024   4000000A           BEQ      ??Play_0
   \   00000028   ........           BL       InAway
   \   0000002C   000050E3           CMP      R0,#+0
   \   00000030   3D00001A           BNE      ??Play_0
    308            {
    309              FSTATS fstats;
    310              unsigned int err;
    311              if (GetFileStats(fname,&fstats,&err)!=-1)
   \   00000034   0D20A0E1           MOV      R2,SP
   \   00000038   A8108DE2           ADD      R1,SP,#+168
   \   0000003C   0600A0E1           MOV      R0,R6
   \   00000040   840000EF           SWI      +132
   \   00000044   010070E3           CMN      R0,#+1
   \   00000048   3700000A           BEQ      ??Play_0
    312              {
    313                PLAYFILE_OPT _sfo1;
    314                WSHDR* sndPath=AllocWS(128);
   \   0000004C   8000A0E3           MOV      R0,#+128
   \   00000050   250100EF           SWI      +293
   \   00000054   0040A0E1           MOV      R4,R0
    315                WSHDR* sndFName=AllocWS(128);
   \   00000058   8000A0E3           MOV      R0,#+128
   \   0000005C   250100EF           SWI      +293
   \   00000060   0050A0E1           MOV      R5,R0
    316                char s[128];
    317                const char *p=strrchr(fname,'\\')+1;
   \   00000064   5C10A0E3           MOV      R1,#+92
   \   00000068   0600A0E1           MOV      R0,R6
   \   0000006C   170100EF           SWI      +279
   \   00000070   017080E2           ADD      R7,R0,#+1
    318                str_2ws(sndFName,p,128);
   \   00000074   8020A0E3           MOV      R2,#+128
   \   00000078   0710A0E1           MOV      R1,R7
   \   0000007C   0500A0E1           MOV      R0,R5
   \   00000080   6C0100EF           SWI      +364
    319                strncpy(s,fname,p-fname);
   \   00000084   067047E0           SUB      R7,R7,R6
   \   00000088   0720A0E1           MOV      R2,R7
   \   0000008C   0610A0E1           MOV      R1,R6
   \   00000090   28008DE2           ADD      R0,SP,#+40
   \   00000094   160100EF           SWI      +278
    320                s[p-fname]='\0';
   \   00000098   0060A0E3           MOV      R6,#+0
   \   0000009C   28008DE2           ADD      R0,SP,#+40
   \   000000A0   0060C7E7           STRB     R6,[R7, +R0]
    321                str_2ws(sndPath,s,128);
   \   000000A4   8020A0E3           MOV      R2,#+128
   \   000000A8   28108DE2           ADD      R1,SP,#+40
   \   000000AC   0400A0E1           MOV      R0,R4
   \   000000B0   6C0100EF           SWI      +364
    322          
    323                zeromem(&_sfo1,sizeof(PLAYFILE_OPT));
   \   000000B4   2410A0E3           MOV      R1,#+36
   \   000000B8   04008DE2           ADD      R0,SP,#+4
   \   000000BC   1D0100EF           SWI      +285
    324                _sfo1.repeat_num=1;
    325                _sfo1.time_between_play=0;
    326                _sfo1.play_first=0;
    327                _sfo1.volume=sndVolume;
   \   000000C0   70209FE5           LDR      R2,??Play_1+0x4  ;; sndVolume
   \   000000C4   0100A0E3           MOV      R0,#+1
   \   000000C8   B400CDE1           STRH     R0,[SP, #+4]
   \   000000CC   08608DE5           STR      R6,[SP, #+8]
   \   000000D0   0C608DE5           STR      R6,[SP, #+12]
   \   000000D4   002092E5           LDR      R2,[R2, #+0]
    328          #ifdef NEWSGOLD
    329                _sfo1.unk6=1;
    330                _sfo1.unk7=1;
    331                _sfo1.unk9=2;
   \   000000D8   0210A0E3           MOV      R1,#+2
   \   000000DC   10208DE5           STR      R2,[SP, #+16]
   \   000000E0   18008DE5           STR      R0,[SP, #+24]
   \   000000E4   1C008DE5           STR      R0,[SP, #+28]
   \   000000E8   24108DE5           STR      R1,[SP, #+36]
    332                PlayFile(0x10, sndPath, sndFName, GBS_GetCurCepid(), MSG_PLAYFILE_REPORT, &_sfo1);
   \   000000EC   450100EF           SWI      +325
   \   000000F0   04108DE2           ADD      R1,SP,#+4
   \   000000F4   02002DE9           PUSH     {R1}
   \   000000F8   0030A0E1           MOV      R3,R0
   \   000000FC   0520A0E1           MOV      R2,R5
   \   00000100   1000A0E3           MOV      R0,#+16
   \   00000104   BC10A0E3           MOV      R1,#+188
   \   00000108   701C81E3           ORR      R1,R1,#0x7000
   \   0000010C   02002DE9           PUSH     {R1}
   \   00000110   0410A0E1           MOV      R1,R4
   \   00000114   4A0000EF           SWI      +74
    333          #else
    334          #ifdef X75
    335                _sfo1.unk4=0x80000000;
    336                _sfo1.unk5=1;
    337                PlayFile(0xC, sndPath, sndFName, 0,GBS_GetCurCepid(), MSG_PLAYFILE_REPORT, &_sfo1);
    338          #else
    339                _sfo1.unk5=1;
    340                PlayFile(0xC, sndPath, sndFName, GBS_GetCurCepid(), MSG_PLAYFILE_REPORT, &_sfo1);
    341          #endif
    342          #endif
    343                FreeWS(sndPath);
   \   00000118   0400A0E1           MOV      R0,R4
   \   0000011C   290100EF           SWI      +297
    344                FreeWS(sndFName);
   \   00000120   0500A0E1           MOV      R0,R5
   \   00000124   290100EF           SWI      +297
   \   00000128   08D08DE2           ADD      SP,SP,#+8
    345              }
    346            }
    347          }
   \                     ??Play_0:
   \   0000012C   D0D08DE2           ADD      SP,SP,#+208      ;; stack cleaning
   \   00000130   F080BDE8           POP      {R4-R7,PC}       ;; return
   \                     ??Play_1:
   \   00000134   ........           DC32     contactlist_menuhdr + 508
   \   00000138   ........           DC32     sndVolume
    348          
    349          GBSTMR tmr_vibra;
    350          volatile int vibra_count;
    351          

   \                                 In segment CODE, align 4, keep-with-next
    352          void start_vibra(void)
    353          {
   \                     start_vibra:
   \   00000000   10402DE9           PUSH     {R4,LR}
    354            extern const int VIBR_TYPE;
    355            void stop_vibra(void);
    356            if((Is_Vibra_Enabled)&&(!IsCalling())&&!InAway())
   \   00000004   ........           LDR      R4,??DataTable27  ;; contactlist_menuhdr
   \   00000008   F80194E5           LDR      R0,[R4, #+504]
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   1080BD08           POPEQ    {R4,PC}
   \   00000014   6E0000EF           SWI      +110
   \   00000018   000050E3           CMP      R0,#+0
   \   0000001C   1080BD18           POPNE    {R4,PC}
   \   00000020   ........           BL       InAway
   \   00000024   000050E3           CMP      R0,#+0
   \   00000028   1080BD18           POPNE    {R4,PC}
    357            {
    358              extern const unsigned int vibraPower;
    359              SetVibration(vibraPower);
   \   0000002C   38009FE5           LDR      R0,??start_vibra_0  ;; vibraPower
   \   00000030   000090E5           LDR      R0,[R0, #+0]
   \   00000034   7C0000EF           SWI      +124
    360              if(VIBR_TYPE)
   \   00000038   ........           LDR      R1,??DataTable13  ;; VIBR_TYPE
   \   0000003C   2C209FE5           LDR      R2,??start_vibra_0+0x4  ;; stop_vibra
   \   00000040   001091E5           LDR      R1,[R1, #+0]
   \   00000044   E800A0E3           MOV      R0,#+232
   \   00000048   400E80E3           ORR      R0,R0,#0x400
   \   0000004C   000051E3           CMP      R1,#+0
   \   00000050   0100000A           BEQ      ??start_vibra_1
    361                GBS_StartTimerProc(&tmr_vibra,TMR_SECOND>>2,stop_vibra);
   \   00000054   3610A0E3           MOV      R1,#+54
   \   00000058   000000EA           B        ??start_vibra_2
    362              else
    363                GBS_StartTimerProc(&tmr_vibra,TMR_SECOND>>1,stop_vibra);
   \                     ??start_vibra_1:
   \   0000005C   6C10A0E3           MOV      R1,#+108
   \                     ??start_vibra_2:
   \   00000060   040080E0           ADD      R0,R0,R4
   \   00000064   4D0000EF           SWI      +77
    364            }
    365          }
   \   00000068   1080BDE8           POP      {R4,PC}          ;; return
   \                     ??start_vibra_0:
   \   0000006C   ........           DC32     vibraPower
   \   00000070   ........           DC32     stop_vibra
    366          

   \                                 In segment CODE, align 4, keep-with-next
    367          void stop_vibra(void)
    368          {
   \                     stop_vibra:
   \   00000000   00402DE9           PUSH     {LR}
    369            extern const int VIBR_TYPE;
    370            SetVibration(0);
   \   00000004   0000A0E3           MOV      R0,#+0
   \   00000008   7C0000EF           SWI      +124
    371            if (--vibra_count)
   \   0000000C   ........           LDR      R0,??DataTable27  ;; contactlist_menuhdr
   \   00000010   141290E5           LDR      R1,[R0, #+532]
   \   00000014   011051E2           SUBS     R1,R1,#+1
   \   00000018   141280E5           STR      R1,[R0, #+532]
   \   0000001C   0080BD08           POPEQ    {PC}
    372            {
    373              if(VIBR_TYPE)
   \   00000020   ........           LDR      R1,??DataTable13  ;; VIBR_TYPE
   \   00000024   28209FE5           LDR      R2,??stop_vibra_0  ;; start_vibra
   \   00000028   001091E5           LDR      R1,[R1, #+0]
   \   0000002C   E830A0E3           MOV      R3,#+232
   \   00000030   403E83E3           ORR      R3,R3,#0x400
   \   00000034   000051E3           CMP      R1,#+0
   \   00000038   0100000A           BEQ      ??stop_vibra_1
    374                GBS_StartTimerProc(&tmr_vibra,TMR_SECOND/40,start_vibra);
   \   0000003C   0510A0E3           MOV      R1,#+5
   \   00000040   000000EA           B        ??stop_vibra_2
    375              else
    376                GBS_StartTimerProc(&tmr_vibra,TMR_SECOND>>1,start_vibra);
   \                     ??stop_vibra_1:
   \   00000044   6C10A0E3           MOV      R1,#+108
   \                     ??stop_vibra_2:
   \   00000048   000083E0           ADD      R0,R3,R0
   \   0000004C   4D0000EF           SWI      +77
    377            }
    378          }
   \   00000050   0080BDE8           POP      {PC}             ;; return
   \                     ??stop_vibra_0:
   \   00000054   ........           DC32     start_vibra
    379          

   \                                 In segment CODE, align 4, keep-with-next
    380          void ChangeVibra(void)
    381          {
    382            if (!(Is_Vibra_Enabled=!(Is_Vibra_Enabled)))
   \                     ChangeVibra:
   \   00000000   ........           LDR      R0,??DataTable27  ;; contactlist_menuhdr
   \   00000004   00402DE9           PUSH     {LR}
   \   00000008   F81190E5           LDR      R1,[R0, #+504]
   \   0000000C   000051E3           CMP      R1,#+0
   \   00000010   0110A003           MOVEQ    R1,#+1
   \   00000014   0010A013           MOVNE    R1,#+0
   \   00000018   F81180E5           STR      R1,[R0, #+504]
   \   0000001C   ........           LDR      R0,??DataTable26  ;; lgpData
   \   00000020   000051E3           CMP      R1,#+0
    383              ShowMSG(1,(int)lgpData[LGP_MsgVibraDis]);
   \   00000024   28119005           LDREQ    R1,[R0, #+296]
    384            else
    385              ShowMSG(1,(int)lgpData[LGP_MsgVibraEna]);
   \   00000028   2C119015           LDRNE    R1,[R0, #+300]
   \   0000002C   0100A0E3           MOV      R0,#+1
   \   00000030   480100EF           SWI      +328
    386          }
   \   00000034   0080BDE8           POP      {PC}             ;; return
    387          

   \                                 In segment CODE, align 4, keep-with-next
    388          void ChangeSound(void)
    389          {
    390            if (!(Is_Sounds_Enabled=!(Is_Sounds_Enabled)))
   \                     ChangeSound:
   \   00000000   ........           LDR      R0,??DataTable27  ;; contactlist_menuhdr
   \   00000004   00402DE9           PUSH     {LR}
   \   00000008   FC1190E5           LDR      R1,[R0, #+508]
   \   0000000C   000051E3           CMP      R1,#+0
   \   00000010   0110A003           MOVEQ    R1,#+1
   \   00000014   0010A013           MOVNE    R1,#+0
   \   00000018   FC1180E5           STR      R1,[R0, #+508]
   \   0000001C   ........           LDR      R0,??DataTable26  ;; lgpData
   \   00000020   000051E3           CMP      R1,#+0
    391              ShowMSG(1,(int)lgpData[LGP_MsgSndDis]);
   \   00000024   30119005           LDREQ    R1,[R0, #+304]
    392            else
    393              ShowMSG(1,(int)lgpData[LGP_MsgSndEna]);
   \   00000028   34119015           LDRNE    R1,[R0, #+308]
   \   0000002C   0100A0E3           MOV      R0,#+1
   \   00000030   480100EF           SWI      +328
    394          }
   \   00000034   0080BDE8           POP      {PC}             ;; return
    395          
    396          //===================================================================
    397          //Templates
    398          char *templates_chars; //Собственно файл
    399          char **templates_lines; //Массив указателей на строки
    400          

   \                                 In segment CODE, align 4, keep-with-next
    401          void FreeTemplates(void)
    402          {
   \                     FreeTemplates:
   \   00000000   10402DE9           PUSH     {R4,LR}
    403            if (templates_lines) mfree(templates_lines);
   \   00000004   ........           LDR      R4,??DataTable27  ;; contactlist_menuhdr
   \   00000008   1C0294E5           LDR      R0,[R4, #+540]
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   0000000A           BEQ      ??FreeTemplates_0
   \   00000014   150000EF           SWI      +21
    404            if (templates_chars) mfree(templates_chars);
   \                     ??FreeTemplates_0:
   \   00000018   180294E5           LDR      R0,[R4, #+536]
   \   0000001C   000050E3           CMP      R0,#+0
   \   00000020   0100000A           BEQ      ??FreeTemplates_1
   \   00000024   150000EF           SWI      +21
    405            templates_lines=NULL;
   \   00000028   0000A0E3           MOV      R0,#+0
   \                     ??FreeTemplates_1:
   \   0000002C   1C0284E5           STR      R0,[R4, #+540]
    406            templates_chars=NULL;
   \   00000030   180284E5           STR      R0,[R4, #+536]
    407          }
   \   00000034   1080BDE8           POP      {R4,PC}          ;; return
    408          
    409          extern const char TEMPLATES_PATH[];
    410          

   \                                 In segment CODE, align 4, keep-with-next
    411          int LoadTemplates(unsigned int uin)
    412          {
   \                     LoadTemplates:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
    413            FSTATS stat;
    414            char fn[256];
    415            int f;
    416            unsigned int ul;
    417            int i;
    418            int fsize;
    419            char *p;
    420            char *pp;
    421            int c;
    422            const char _slash[]="\\";
   \   00000004   B8419FE5           LDR      R4,??LoadTemplates_0  ;; `?<Constant "\\\\">_2`
   \   00000008   4CDF4DE2           SUB      SP,SP,#+304
   \   0000000C   0010D4E5           LDRB     R1,[R4, #0]
   \   00000010   0050A0E1           MOV      R5,R0
   \   00000014   04008DE2           ADD      R0,SP,#+4
   \   00000018   0010C0E5           STRB     R1,[R0, #+0]
   \   0000001C   0110D4E5           LDRB     R1,[R4, #+1]
   \   00000020   0110C0E5           STRB     R1,[R0, #+1]
    423            FreeTemplates();
   \   00000024   ........           BL       FreeTemplates
    424            strcpy(fn,TEMPLATES_PATH);
   \   00000028   ........           LDR      R1,??DataTable19  ;; TEMPLATES_PATH
   \   0000002C   30008DE2           ADD      R0,SP,#+48
   \   00000030   1A0000EF           SWI      +26
    425            if (fn[strlen(fn)-1]!='\\') strcat(fn,_slash);
   \   00000034   30008DE2           ADD      R0,SP,#+48
   \   00000038   1B0000EF           SWI      +27
   \   0000003C   30108DE2           ADD      R1,SP,#+48
   \   00000040   010080E0           ADD      R0,R0,R1
   \   00000044   010050E5           LDRB     R0,[R0, #-1]
   \   00000048   5C0050E3           CMP      R0,#+92
   \   0000004C   0200000A           BEQ      ??LoadTemplates_1
   \   00000050   04108DE2           ADD      R1,SP,#+4
   \   00000054   30008DE2           ADD      R0,SP,#+48
   \   00000058   170000EF           SWI      +23
    426            i=strlen(fn);
   \                     ??LoadTemplates_1:
   \   0000005C   30008DE2           ADD      R0,SP,#+48
   \   00000060   1B0000EF           SWI      +27
   \   00000064   0060A0E1           MOV      R6,R0
    427            sprintf(fn+i,"%d.txt",uin);
   \   00000068   30008DE2           ADD      R0,SP,#+48
   \   0000006C   006086E0           ADD      R6,R6,R0
   \   00000070   0520A0E1           MOV      R2,R5
   \   00000074   0C1084E2           ADD      R1,R4,#+12
   \   00000078   0600A0E1           MOV      R0,R6
   \   0000007C   160000EF           SWI      +22
    428            if (GetFileStats(fn,&stat,&ul)==-1) goto L1;
   \   00000080   0050E0E3           MVN      R5,#+0
   \   00000084   0D20A0E1           MOV      R2,SP
   \   00000088   08108DE2           ADD      R1,SP,#+8
   \   0000008C   30008DE2           ADD      R0,SP,#+48
   \   00000090   840000EF           SWI      +132
   \   00000094   050050E1           CMP      R0,R5
   \   00000098   0A00000A           BEQ      ??LoadTemplates_2
    429            if ((fsize=stat.size)<=0) goto L1;
   \   0000009C   0C809DE5           LDR      R8,[SP, #+12]
   \   000000A0   010058E3           CMP      R8,#+1
   \   000000A4   070000BA           BLT      ??LoadTemplates_2
    430            if ((f=fopen(fn,A_ReadOnly+A_BIN,P_READ,&ul))==-1)
   \   000000A8   0D30A0E1           MOV      R3,SP
   \   000000AC   8020A0E3           MOV      R2,#+128
   \   000000B0   801CA0E3           MOV      R1,#+32768
   \   000000B4   30008DE2           ADD      R0,SP,#+48
   \   000000B8   0A0000EF           SWI      +10
   \   000000BC   0090A0E1           MOV      R9,R0
   \   000000C0   050059E1           CMP      R9,R5
   \   000000C4   1400001A           BNE      ??LoadTemplates_3
    431            {
    432            L1:
    433              strcpy(fn+i,"0.txt");
   \                     ??LoadTemplates_2:
   \   000000C8   041084E2           ADD      R1,R4,#+4
   \   000000CC   0600A0E1           MOV      R0,R6
   \   000000D0   1A0000EF           SWI      +26
    434              if (GetFileStats(fn,&stat,&ul)==-1) return 0;
   \   000000D4   0D20A0E1           MOV      R2,SP
   \   000000D8   08108DE2           ADD      R1,SP,#+8
   \   000000DC   30008DE2           ADD      R0,SP,#+48
   \   000000E0   840000EF           SWI      +132
   \   000000E4   050050E1           CMP      R0,R5
   \   000000E8   0200001A           BNE      ??LoadTemplates_4
   \                     ??LoadTemplates_5:
   \   000000EC   0000A0E3           MOV      R0,#+0
   \                     ??LoadTemplates_6:
   \   000000F0   4CDF8DE2           ADD      SP,SP,#+304      ;; stack cleaning
   \   000000F4   F087BDE8           POP      {R4-R10,PC}      ;; return
    435              if ((fsize=stat.size)<=0) return 0;
   \                     ??LoadTemplates_4:
   \   000000F8   0C809DE5           LDR      R8,[SP, #+12]
   \   000000FC   010058E3           CMP      R8,#+1
   \   00000100   F9FFFFBA           BLT      ??LoadTemplates_5
    436              f=fopen(fn,A_ReadOnly+A_BIN,P_READ,&ul);
   \   00000104   0D30A0E1           MOV      R3,SP
   \   00000108   8020A0E3           MOV      R2,#+128
   \   0000010C   801CA0E3           MOV      R1,#+32768
   \   00000110   30008DE2           ADD      R0,SP,#+48
   \   00000114   0A0000EF           SWI      +10
   \   00000118   0090A0E1           MOV      R9,R0
    437            }
    438            if (f==-1) return 0;
   \                     ??LoadTemplates_3:
   \   0000011C   050059E1           CMP      R9,R5
   \   00000120   F1FFFF0A           BEQ      ??LoadTemplates_5
    439            p=templates_chars=malloc(fsize+1);
   \   00000124   ........           LDR      R4,??DataTable27  ;; contactlist_menuhdr
   \   00000128   010088E2           ADD      R0,R8,#+1
   \   0000012C   140000EF           SWI      +20
   \   00000130   180284E5           STR      R0,[R4, #+536]
   \   00000134   0070A0E1           MOV      R7,R0
    440            p[fread(f,p,fsize,&ul)]=0;
   \   00000138   0050A0E3           MOV      R5,#+0
   \   0000013C   0D30A0E1           MOV      R3,SP
   \   00000140   0820A0E1           MOV      R2,R8
   \   00000144   0710A0E1           MOV      R1,R7
   \   00000148   0900A0E1           MOV      R0,R9
   \   0000014C   0B0000EF           SWI      +11
   \   00000150   0750C0E7           STRB     R5,[R0, +R7]
    441            fclose(f,&ul);
   \   00000154   0D10A0E1           MOV      R1,SP
   \   00000158   0900A0E1           MOV      R0,R9
   \   0000015C   0D0000EF           SWI      +13
    442            i=0;
   \   00000160   0060A0E3           MOV      R6,#+0
    443            pp=p;
   \   00000164   0780A0E1           MOV      R8,R7
   \   00000168   020000EA           B        ??LoadTemplates_7
    444            for(;;)
    445            {
    446              c=*p;
    447              if (c<32)
    448              {
    449                if (pp&&(pp!=p))
    450                {
    451          	templates_lines=realloc(templates_lines,(i+1)*sizeof(char *));
    452          	templates_lines[i++]=pp;
    453                }
    454                pp=NULL;
    455                if (!c) break;
    456                *p=0;
    457              }
    458              else
    459              {
    460                if (pp==NULL) pp=p;
   \                     ??LoadTemplates_8:
   \   0000016C   000058E3           CMP      R8,#+0
   \   00000170   0780A001           MOVEQ    R8,R7
    461              }
    462              p++;
   \                     ??LoadTemplates_9:
   \   00000174   017087E2           ADD      R7,R7,#+1
   \                     ??LoadTemplates_7:
   \   00000178   0090D7E5           LDRB     R9,[R7, #+0]
   \   0000017C   200059E3           CMP      R9,#+32
   \   00000180   F9FFFFAA           BGE      ??LoadTemplates_8
   \   00000184   000058E3           CMP      R8,#+0
   \   00000188   07005811           CMPNE    R8,R7
   \   0000018C   0600000A           BEQ      ??LoadTemplates_10
   \   00000190   1C0294E5           LDR      R0,[R4, #+540]
   \   00000194   01A086E2           ADD      R10,R6,#+1
   \   00000198   0A11A0E1           LSL      R1,R10,#+2
   \   0000019C   BA0000EF           SWI      +186
   \   000001A0   1C0284E5           STR      R0,[R4, #+540]
   \   000001A4   068180E7           STR      R8,[R0, +R6, LSL #+2]
   \   000001A8   0A60A0E1           MOV      R6,R10
   \                     ??LoadTemplates_10:
   \   000001AC   0080A0E3           MOV      R8,#+0
   \   000001B0   000059E3           CMP      R9,#+0
    463            }
    464            return i;
   \   000001B4   0600A001           MOVEQ    R0,R6
   \   000001B8   CCFFFF0A           BEQ      ??LoadTemplates_6
   \   000001BC   0050C7E5           STRB     R5,[R7, #+0]
   \   000001C0   EBFFFFEA           B        ??LoadTemplates_9
   \                     ??LoadTemplates_0:
   \   000001C4   ........           DC32     `?<Constant "\\\\">_2`
    465          }
    466          
    467          
    468          //===================================================================
    469          
    470          typedef struct
    471          {
    472            CSM_RAM csm;
    473            int gui_id;
    474          }MAIN_CSM;
    475          
    476          typedef struct
    477          {
    478            GUI gui;
    479            WSHDR *ws1;
    480            WSHDR *ws2;
    481            int i1;
    482          }MAIN_GUI;
    483          
    484          
    485          
    486          int RXstate=EOP; //-sizeof(RXpkt)..-1 - receive header, 0..RXpkt.data_len - receive data
    487          

   \                                 In segment DATA_Z, align 4, align-sorted
    488          TPKT RXbuf;
   \                     RXbuf:
   \   00000000                      DS8 16392

   \                                 In segment DATA_Z, align 4, align-sorted
    489          TPKT TXbuf;
   \                     TXbuf:
   \   00000000                      DS8 16392
    490          
    491          int connect_state=0;
    492          
    493          int sock=-1;
    494          
    495          volatile unsigned long TOTALRECEIVED;
    496          volatile unsigned long TOTALSENDED;
    497          volatile unsigned long ALLTOTALRECEIVED;	//by BoBa 10.07
    498          volatile unsigned long ALLTOTALSENDED;
    499          
    500          volatile int sendq_l=0; //Длинна очереди для send
    501          volatile void *sendq_p=NULL; //указатель очереди
    502          
    503          volatile int is_gprs_online=1;
    504          
    505          GBSTMR reconnect_tmr;
    506          
    507          extern void kill_data(void *p,void (*func_p)(void *));
    508          

   \                                 In segment CODE, align 4, keep-with-next
    509          void ElfKiller(void)
    510          {
   \                     ElfKiller:
   \   00000000   00402DE9           PUSH     {LR}
    511            extern void *ELF_BEGIN;
    512            kill_data(&ELF_BEGIN,(void (*)(void *))mfree_adr());
   \   00000004   158000EF           SWI      +32789
   \   00000008   0010A0E1           MOV      R1,R0
   \   0000000C   04009FE5           LDR      R0,??ElfKiller_0  ;; ELF_BEGIN
   \   00000010   0040BDE8           POP      {LR}             ;; Pop
   \   00000014   ........           _BF      kill_data,??kill_data??rA  ;; tailcall
   \                     ??ElfKiller_0:
   \   00000018   ........           DC32     ELF_BEGIN
    513          }
    514          
    515          int total_unread;
    516          
    517          //===============================================================================================
    518          #pragma inline
    519          void patch_rect(RECT*rc,int x,int y, int x2, int y2)
    520          {
    521            rc->x=x;
    522            rc->y=y;
    523            rc->x2=x2;
    524            rc->y2=y2;
    525          }
    526          
    527          #pragma inline
    528          void patch_header(const HEADER_DESC* head)
    529          {
    530            ((HEADER_DESC*)head)->rc.x=0;
    531            ((HEADER_DESC*)head)->rc.y=YDISP;
    532            ((HEADER_DESC*)head)->rc.x2=ScreenW()-1;
    533            ((HEADER_DESC*)head)->rc.y2=HeaderH()+YDISP-1;
    534          }
    535          #pragma inline
    536          void patch_input(const INPUTDIA_DESC* inp)
    537          {
    538            ((INPUTDIA_DESC*)inp)->rc.x=0;
    539            ((INPUTDIA_DESC*)inp)->rc.y=HeaderH()+1+YDISP;
    540            ((INPUTDIA_DESC*)inp)->rc.x2=ScreenW()-1;
    541            ((INPUTDIA_DESC*)inp)->rc.y2=ScreenH()-SoftkeyH()-1;
    542          }
    543          //===============================================================================================
    544          
    545          volatile CLIST *cltop;
    546          
    547          volatile unsigned int GROUP_CACHE; //Текущая группа для добавления
    548          
    549          volatile int contactlist_menu_id;
    550          
    551          GBSTMR tmr_active;
    552          
    553          volatile int edchat_id;
    554          
    555          //Применяется для добавления сообщений
    556          //CLIST *edcontact;
    557          //void *edgui_data;
    558          
    559          static int prev_clmenu_itemcount;
    560          
    561          char clm_hdr_text[48];
    562          static char def_clm_hdr_text[32] = "";//LgpData[LGP_ClTitle];
    563          static char key_clm_hdr_text[32] = "";//LgpData[LGP_ClT9Inp];
    564          
    565          static HEADER_DESC contactlist_menuhdr = {0, 0, 0, 0, S_ICONS+ICON_HEAD, (int)clm_hdr_text, LGP_NULL};
    566          static const int menusoftkeys[] = {0,1,2};
    567          
    568          static SOFTKEY_DESC menu_sk[] =
    569          {
    570            {0x0018, 0x0000, NULL},
    571            {0x0001, 0x0000, NULL},
    572            {0x003D, 0x0000, (int)LGP_DOIT_PIC}
    573          };
    574          
    575          char clmenu_sk_r[16];
    576          
    577          static char def_clmenu_sk_r[32] = "";
    578          static char key_clmenu_sk_r[32] = "";
    579          
    580          

   \                                 In segment CODE, align 4, keep-with-next
    581          void lgpUpdateClHdr()
    582          {
   \                     lgpUpdateClHdr:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
    583            strcpy(def_clm_hdr_text, (char*) lgpData[LGP_ClTitle]);
   \   00000004   ........           LDR      R4,??DataTable27  ;; contactlist_menuhdr
   \   00000008   ........           LDR      R5,??DataTable26  ;; lgpData
   \   0000000C   4800A0E3           MOV      R0,#+72
   \   00000010   041095E5           LDR      R1,[R5, #+4]
   \   00000014   500E80E3           ORR      R0,R0,#0x500
   \   00000018   040080E0           ADD      R0,R0,R4
   \   0000001C   1A0000EF           SWI      +26
    584            strcpy(key_clm_hdr_text, (char*) lgpData[LGP_ClT9Inp]);
   \   00000020   081095E5           LDR      R1,[R5, #+8]
   \   00000024   6800A0E3           MOV      R0,#+104
   \   00000028   500E80E3           ORR      R0,R0,#0x500
   \   0000002C   040080E0           ADD      R0,R0,R4
   \   00000030   1A0000EF           SWI      +26
    585            strcpy(def_clmenu_sk_r,  (char*) lgpData[LGP_Close]);
   \   00000034   201095E5           LDR      R1,[R5, #+32]
   \   00000038   9800A0E3           MOV      R0,#+152
   \   0000003C   500E80E3           ORR      R0,R0,#0x500
   \   00000040   040080E0           ADD      R0,R0,R4
   \   00000044   1A0000EF           SWI      +26
    586            strcpy(key_clmenu_sk_r,  (char*) lgpData[LGP_Clear]);
   \   00000048   241095E5           LDR      R1,[R5, #+36]
   \   0000004C   B800A0E3           MOV      R0,#+184
   \   00000050   500E80E3           ORR      R0,R0,#0x500
   \   00000054   040080E0           ADD      R0,R0,R4
   \   00000058   1A0000EF           SWI      +26
    587          }
   \   0000005C   3080BDE8           POP      {R4,R5,PC}       ;; return
    588          static SOFTKEY_DESC clmenu_sk[]=
    589          {
    590            {0x0018, 0x0000, NULL},
    591            {0x0001, 0x0000, (int)clmenu_sk_r},
    592            {0x003D, 0x0000, (int)LGP_DOIT_PIC}
    593          };
    594          
    595          const SOFTKEYSTAB menu_skt =
    596          {
    597            menu_sk, 0
    598          };
    599          
    600          static const SOFTKEYSTAB clmenu_skt =
    601          {
    602            clmenu_sk, 0
    603          };
    604          
    605          void contactlist_menu_ghook(void *data, int cmd);
    606          int contactlist_menu_onkey(void *data, GUI_MSG *msg);
    607          void contactlist_menu_iconhndl(void *data, int curitem, void *unk);
    608          
    609          #ifdef USE_MLMENU
    610          static const ML_MENU_DESC contactlist_menu=
    611          {
    612            8,contactlist_menu_onkey,contactlist_menu_ghook,NULL,
    613            menusoftkeys,
    614            &clmenu_skt,
    615            0x11, //+0x400
    616            contactlist_menu_iconhndl,
    617            NULL,   //Items
    618            NULL,   //Procs
    619            0,   //n
    620            1 //Добавочных строк
    621          };
    622          #else
    623          static const MENU_DESC contactlist_menu=
    624          {
    625            8,contactlist_menu_onkey,contactlist_menu_ghook,NULL,
    626            menusoftkeys,
    627            &clmenu_skt,
    628            0x11, //+0x400
    629            contactlist_menu_iconhndl,
    630            NULL,   //Items
    631            NULL,   //Procs
    632            0   //n
    633          };
    634          #endif
    635          
    636          //GBSTMR tmr_ping;
    637          int tenseconds_to_ping;
    638          

   \                                 In segment CODE, align 4, keep-with-next
    639          LOGQ *NewLOGQ(const char *s)
    640          {
   \                     NewLOGQ:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    641            LOGQ *p=malloc(sizeof(LOGQ)+1+strlen(s));
   \   00000008   1B0000EF           SWI      +27
   \   0000000C   610080E2           ADD      R0,R0,#+97
   \   00000010   140000EF           SWI      +20
   \   00000014   0050A0E1           MOV      R5,R0
    642            zeromem(p,sizeof(LOGQ));
   \   00000018   6010A0E3           MOV      R1,#+96
   \   0000001C   1D0100EF           SWI      +285
    643            strcpy(p->text,s);
   \   00000020   0410A0E1           MOV      R1,R4
   \   00000024   600085E2           ADD      R0,R5,#+96
   \   00000028   1A0000EF           SWI      +26
    644            return p;
   \   0000002C   0500A0E1           MOV      R0,R5
   \   00000030   3080BDE8           POP      {R4,R5,PC}       ;; return
    645          }
    646          

   \                                 In segment CODE, align 4, keep-with-next
    647          LOGQ *LastLOGQ(LOGQ **pp)
    648          {
    649            LOGQ *q=*pp;
   \                     LastLOGQ:
   \   00000000   000090E5           LDR      R0,[R0, #+0]
    650            if (q)
   \   00000004   000050E3           CMP      R0,#+0
   \   00000008   1EFF2F01           BXEQ     LR
   \   0000000C   000000EA           B        ??LastLOGQ_0
    651            {
    652              while(q->next) q=q->next;
   \                     ??LastLOGQ_1:
   \   00000010   0100A0E1           MOV      R0,R1
   \                     ??LastLOGQ_0:
   \   00000014   001090E5           LDR      R1,[R0, #+0]
   \   00000018   000051E3           CMP      R1,#+0
   \   0000001C   FBFFFF1A           BNE      ??LastLOGQ_1
    653            }
    654            return(q);
   \   00000020   1EFF2FE1           BX       LR               ;; return
    655          }
    656          
    657          //Уничтожить лог

   \                                 In segment CODE, align 4, keep-with-next
    658          void FreeLOGQ(LOGQ **pp)
    659          {
   \                     FreeLOGQ:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0010A0E1           MOV      R1,R0
    660            LOGQ *p=*pp;
   \   00000008   000091E5           LDR      R0,[R1, #+0]
    661            *pp=NULL; //Сразу обрежем
   \   0000000C   0020A0E3           MOV      R2,#+0
   \   00000010   002081E5           STR      R2,[R1, #+0]
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   1080BD08           POPEQ    {R4,PC}
    662            while(p)
    663            {
    664              LOGQ *np=p->next;
   \                     ??FreeLOGQ_0:
   \   0000001C   004090E5           LDR      R4,[R0, #+0]
    665              mfree(p);
   \   00000020   150000EF           SWI      +21
    666              p=np;
   \   00000024   0400B0E1           MOVS     R0,R4
    667            }
   \   00000028   FBFFFF1A           BNE      ??FreeLOGQ_0
    668          }
   \   0000002C   1080BDE8           POP      {R4,PC}          ;; return
    669          
    670          //Удалить элемент из лога

   \                                 In segment CODE, align 4, keep-with-next
    671          void RemoveLOGQ(LOGQ **queue, LOGQ *p)
    672          {
   \                     RemoveLOGQ:
   \   00000000   00402DE9           PUSH     {LR}
    673            LOGQ *q=(LOGQ *)queue;
   \   00000004   000000EA           B        ??RemoveLOGQ_0
    674            LOGQ *qp;
    675            while(qp=q->next)
    676            {
    677              if (qp==p)
    678              {
    679                q->next=p->next;
    680                break;
    681              }
    682              q=qp;
   \                     ??RemoveLOGQ_1:
   \   00000008   0200A0E1           MOV      R0,R2
   \                     ??RemoveLOGQ_0:
   \   0000000C   002090E5           LDR      R2,[R0, #+0]
   \   00000010   000052E3           CMP      R2,#+0
   \   00000014   0300000A           BEQ      ??RemoveLOGQ_2
   \   00000018   010052E1           CMP      R2,R1
   \   0000001C   F9FFFF1A           BNE      ??RemoveLOGQ_1
   \   00000020   002091E5           LDR      R2,[R1, #+0]
   \   00000024   002080E5           STR      R2,[R0, #+0]
    683            }
    684            mfree(p); //Если элемент вообще не в логе
   \                     ??RemoveLOGQ_2:
   \   00000028   0100A0E1           MOV      R0,R1
   \   0000002C   150000EF           SWI      +21
    685          }
   \   00000030   0080BDE8           POP      {PC}             ;; return
    686          
    687          //Добавить элемент в лог

   \                                 In segment CODE, align 4, keep-with-next
    688          int AddLOGQ(LOGQ **queue, LOGQ *p)
    689          {
    690            LOGQ *q=(LOGQ *)queue;
    691            LOGQ *qp;
    692            int i=0;
   \                     AddLOGQ:
   \   00000000   0020A0E3           MOV      R2,#+0
   \   00000004   000000EA           B        ??AddLOGQ_0
    693            while(qp=q->next) {q=qp;i++;}
   \                     ??AddLOGQ_1:
   \   00000008   0300A0E1           MOV      R0,R3
   \                     ??AddLOGQ_0:
   \   0000000C   003090E5           LDR      R3,[R0, #+0]
   \   00000010   012082E2           ADD      R2,R2,#+1
   \   00000014   000053E3           CMP      R3,#+0
   \   00000018   FAFFFF1A           BNE      ??AddLOGQ_1
    694            p->next=NULL;
   \   0000001C   003081E5           STR      R3,[R1, #+0]
    695            q->next=p;
   \   00000020   001080E5           STR      R1,[R0, #+0]
    696            return(i+1); //Теперь всего в логе элементов
   \   00000024   0200A0E1           MOV      R0,R2
   \   00000028   1EFF2FE1           BX       LR               ;; return
    697          }
    698          
    699          //Получаем последний полученный X-статус

   \                                 In segment CODE, align 4, keep-with-next
    700          char *GetLastXTextLOGQ(CLIST *t)
    701          {
    702            LOGQ *p = t->log;
   \                     GetLastXTextLOGQ:
   \   00000000   641090E5           LDR      R1,[R0, #+100]
    703            char *s = 0;
   \   00000004   0000A0E3           MOV      R0,#+0
    704            if(!p) return 0;
   \   00000008   000051E3           CMP      R1,#+0
   \   0000000C   0500001A           BNE      ??GetLastXTextLOGQ_0
   \   00000010   1EFF2FE1           BX       LR
    705            while(p->next)
    706            {
    707              if((p->type&0x0F)==3)
   \                     ??GetLastXTextLOGQ_1:
   \   00000014   0C3091E5           LDR      R3,[R1, #+12]
   \   00000018   0F3003E2           AND      R3,R3,#0xF
   \   0000001C   030053E3           CMP      R3,#+3
    708                s = p->text;
   \   00000020   60008102           ADDEQ    R0,R1,#+96
    709              p = p->next;
   \   00000024   0210A0E1           MOV      R1,R2
    710            }
   \                     ??GetLastXTextLOGQ_0:
   \   00000028   002091E5           LDR      R2,[R1, #+0]
   \   0000002C   000052E3           CMP      R2,#+0
   \   00000030   F7FFFF1A           BNE      ??GetLastXTextLOGQ_1
    711            if((p->type&0x0F)==3)
   \   00000034   0C2091E5           LDR      R2,[R1, #+12]
   \   00000038   0F2002E2           AND      R2,R2,#0xF
   \   0000003C   030052E3           CMP      R2,#+3
    712              s = p->text;
   \   00000040   60008102           ADDEQ    R0,R1,#+96
    713            return s;
   \   00000044   1EFF2FE1           BX       LR               ;; return
    714          }
    715          

   \                                 In segment CODE, align 4, keep-with-next
    716          int GetIconIndex(CLIST *t)
    717          {
    718            unsigned short s;
    719            if (t)
   \                     GetIconIndex:
   \   00000000   000050E3           CMP      R0,#+0
   \   00000004   3400000A           BEQ      ??GetIconIndex_0
    720            {
    721              s=t->state;
    722              if (t->isgroup) return(IS_GROUP);
   \   00000008   082090E5           LDR      R2,[R0, #+8]
   \   0000000C   B415D0E1           LDRH     R1,[R0, #+84]
   \   00000010   000052E3           CMP      R2,#+0
   \   00000014   0F00A013           MOVNE    R0,#+15
   \   00000018   1EFF2F11           BXNE     LR
    723              if (t->isunread)
   \   0000001C   580090E5           LDR      R0,[R0, #+88]
   \   00000020   000050E3           CMP      R0,#+0
    724                return(IS_MSG);
   \   00000024   0D00A013           MOVNE    R0,#+13
   \   00000028   1EFF2F11           BXNE     LR
    725              else
    726              {
    727                if (s==0xFFFF) return(IS_OFFLINE);
   \   0000002C   FF20A0E3           MOV      R2,#+255
   \   00000030   FF2C82E3           ORR      R2,R2,#0xFF00
   \   00000034   020051E1           CMP      R1,R2
   \   00000038   1EFF2F01           BXEQ     LR
    728                if ((s&0xF000)==0x2000) return (IS_LUNCH);
   \   0000003C   F02C01E2           AND      R2,R1,#0xF000
   \   00000040   800D52E3           CMP      R2,#+8192
   \   00000044   0900A003           MOVEQ    R0,#+9
   \   00000048   1EFF2F01           BXEQ     LR
    729                if ((s&0xF000)==0x3000) return (IS_EVIL);
   \   0000004C   C00D52E3           CMP      R2,#+12288
   \   00000050   0700A003           MOVEQ    R0,#+7
   \   00000054   1EFF2F01           BXEQ     LR
    730                if ((s&0xF000)==0x4000) return (IS_DEPRESSION);
   \   00000058   400C52E3           CMP      R2,#+16384
   \   0000005C   0600A003           MOVEQ    R0,#+6
   \   00000060   1EFF2F01           BXEQ     LR
    731                if ((s&0xF000)==0x5000) return (IS_HOME);
   \   00000064   500C52E3           CMP      R2,#+20480
   \   00000068   0800A003           MOVEQ    R0,#+8
   \   0000006C   1EFF2F01           BXEQ     LR
    732                if ((s&0xF000)==0x6000) return (IS_WORK);
   \   00000070   F00C01E2           AND      R0,R1,#0xF000
   \   00000074   600C50E3           CMP      R0,#+24576
   \   00000078   0A00A003           MOVEQ    R0,#+10
   \   0000007C   1EFF2F01           BXEQ     LR
    733                if (s & 0x0020) return(IS_FFC);
   \   00000080   200011E3           TST      R1,#0x20
   \   00000084   0100000A           BEQ      ??GetIconIndex_1
   \                     ??GetIconIndex_2:
   \   00000088   0C00A0E3           MOV      R0,#+12
   \   0000008C   1EFF2FE1           BX       LR
    734                if (s & 0x0001) return(IS_AWAY);
   \                     ??GetIconIndex_1:
   \   00000090   010011E3           TST      R1,#0x1
   \   00000094   0200A013           MOVNE    R0,#+2
   \   00000098   1EFF2F11           BXNE     LR
    735                if (s & 0x0005) return(IS_NA);
   \   0000009C   050011E3           TST      R1,#0x5
   \   000000A0   0300A013           MOVNE    R0,#+3
   \   000000A4   1EFF2F11           BXNE     LR
    736                if (s & 0x0011) return(IS_OCCUPIED);
   \   000000A8   110011E3           TST      R1,#0x11
   \   000000AC   0400A013           MOVNE    R0,#+4
   \   000000B0   1EFF2F11           BXNE     LR
    737                if (s & 0x0013) return(IS_DND);
   \   000000B4   130011E3           TST      R1,#0x13
   \   000000B8   0500A013           MOVNE    R0,#+5
   \   000000BC   1EFF2F11           BXNE     LR
    738                if (s & 0x0002) return(IS_FFC);
   \   000000C0   020011E3           TST      R1,#0x2
   \   000000C4   EFFFFF1A           BNE      ??GetIconIndex_2
    739                if (s & 0x0100) return(IS_INVISIBLE);
   \   000000C8   400F11E3           TST      R1,#0x100
   \   000000CC   0100A013           MOVNE    R0,#+1
   \   000000D0   1EFF2F11           BXNE     LR
    740              }
    741            }
    742            else
    743            {
    744              return(IS_UNKNOWN);
    745            }
    746            return(IS_ONLINE);
   \   000000D4   0B00A0E3           MOV      R0,#+11
   \   000000D8   1EFF2FE1           BX       LR
   \                     ??GetIconIndex_0:
   \   000000DC   0E00A0E3           MOV      R0,#+14
   \   000000E0   1EFF2FE1           BX       LR               ;; return
    747          }
    748          

   \                                 In segment CODE, align 4, keep-with-next
    749          LOGQ *FindContactLOGQByAck(TPKT *p)
    750          {
   \                     FindContactLOGQByAck:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    751            CLIST *t;
    752            LockSched();
   \   00000008   460100EF           SWI      +326
    753            t=FindContactByUin(p->pkt.uin);
   \   0000000C   000094E5           LDR      R0,[R4, #+0]
   \   00000010   ........           _BLF     FindContactByUin,??FindContactByUin??rA
   \   00000014   0050A0E1           MOV      R5,R0
    754            UnlockSched();
   \   00000018   470100EF           SWI      +327
    755            unsigned int id=*((unsigned short*)(p->data));
   \   0000001C   B840D4E1           LDRH     R4,[R4, #+8]
    756            LOGQ *q;
    757            if (!t) return NULL;
   \   00000020   000055E3           CMP      R5,#+0
   \   00000024   0000A003           MOVEQ    R0,#+0
   \   00000028   3080BD08           POPEQ    {R4,R5,PC}
    758            LockSched();
   \   0000002C   460100EF           SWI      +326
    759            q=t->log;
   \   00000030   645095E5           LDR      R5,[R5, #+100]
   \   00000034   000000EA           B        ??FindContactLOGQByAck_0
    760            while(q)
    761            {
    762              if (q->ID==id) break;
    763              q=q->next;
   \                     ??FindContactLOGQByAck_1:
   \   00000038   005095E5           LDR      R5,[R5, #+0]
   \                     ??FindContactLOGQByAck_0:
   \   0000003C   000055E3           CMP      R5,#+0
   \   00000040   08009515           LDRNE    R0,[R5, #+8]
   \   00000044   04005011           CMPNE    R0,R4
   \   00000048   FAFFFF1A           BNE      ??FindContactLOGQByAck_1
    764            }
    765            UnlockSched();
   \   0000004C   470100EF           SWI      +327
    766            return q;
   \   00000050   0500A0E1           MOV      R0,R5
   \   00000054   3080BDE8           POP      {R4,R5,PC}       ;; return
    767          }
    768          
    769          
    770          char ContactT9Key[32];
    771          

   \                                 In segment CODE, align 4, keep-with-next
    772          void UpdateCLheader(void)
    773          {
   \                     UpdateCLheader:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
    774            if (strlen(ContactT9Key))
   \   00000004   ........           LDR      R7,??DataTable27  ;; contactlist_menuhdr
   \   00000008   8840A0E3           MOV      R4,#+136
   \   0000000C   504E84E3           ORR      R4,R4,#0x500
   \   00000010   705044E2           SUB      R5,R4,#+112
   \   00000014   EE6FA0E3           MOV      R6,#+952
   \   00000018   070086E0           ADD      R0,R6,R7
   \   0000001C   1B0000EF           SWI      +27
   \   00000020   000050E3           CMP      R0,#+0
   \   00000024   0800000A           BEQ      ??UpdateCLheader_0
    775            {
    776              strcpy(clm_hdr_text,key_clm_hdr_text);
   \   00000028   200044E2           SUB      R0,R4,#+32
   \   0000002C   071080E0           ADD      R1,R0,R7
   \   00000030   070085E0           ADD      R0,R5,R7
   \   00000034   1A0000EF           SWI      +26
    777              strcat(clm_hdr_text,ContactT9Key);
   \   00000038   071086E0           ADD      R1,R6,R7
   \   0000003C   070085E0           ADD      R0,R5,R7
   \   00000040   170000EF           SWI      +23
    778              strcpy(clmenu_sk_r,key_clmenu_sk_r);
   \   00000044   300084E3           ORR      R0,R4,#0x30
   \   00000048   040000EA           B        ??UpdateCLheader_1
    779            }
    780            else
    781            {
    782              strcpy(clm_hdr_text,def_clm_hdr_text);
   \                     ??UpdateCLheader_0:
   \   0000004C   400044E2           SUB      R0,R4,#+64
   \   00000050   071080E0           ADD      R1,R0,R7
   \   00000054   070085E0           ADD      R0,R5,R7
   \   00000058   1A0000EF           SWI      +26
    783              strcpy(clmenu_sk_r,def_clmenu_sk_r);
   \   0000005C   100084E3           ORR      R0,R4,#0x10
   \                     ??UpdateCLheader_1:
   \   00000060   071080E0           ADD      R1,R0,R7
   \   00000064   070084E0           ADD      R0,R4,R7
   \   00000068   1A0000EF           SWI      +26
    784            }
    785          }
   \   0000006C   F080BDE8           POP      {R4-R7,PC}       ;; return
    786          

   \                                 In segment CODE, align 4, keep-with-next
    787          void ClearContactT9Key(void)
    788          {
    789            zeromem(ContactT9Key,sizeof(ContactT9Key));
   \                     ClearContactT9Key:
   \   00000000   0C009FE5           LDR      R0,??ClearContactT9Key_0  ;; contactlist_menuhdr + 952
   \   00000004   00402DE9           PUSH     {LR}
   \   00000008   2010A0E3           MOV      R1,#+32
   \   0000000C   1D0100EF           SWI      +285
    790          }
   \   00000010   0080BDE8           POP      {PC}             ;; return
   \                     ??ClearContactT9Key_0:
   \   00000014   ........           DC32     contactlist_menuhdr + 952
    791          

   \                                 In segment CODE, align 4, keep-with-next
    792          void AddContactT9Key(int chr)
    793          {
   \                     AddContactT9Key:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
    794            int l=strlen(ContactT9Key);
   \   00000004   ........           LDR      R5,??DataTable27  ;; contactlist_menuhdr
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   EE0F85E2           ADD      R0,R5,#+952
   \   00000010   1B0000EF           SWI      +27
    795            if (l<(sizeof(ContactT9Key)-1))
   \   00000014   1F0050E3           CMP      R0,#+31
    796            {
    797              ContactT9Key[l]=chr;
   \   00000018   05008030           ADDCC    R0,R0,R5
   \   0000001C   B843C035           STRBCC   R4,[R0, #+952]
    798            }
    799          }
   \   00000020   3080BDE8           POP      {R4,R5,PC}       ;; return
    800          

   \                                 In segment CODE, align 4, keep-with-next
    801          void BackSpaceContactT9(void)
    802          {
   \                     BackSpaceContactT9:
   \   00000000   10402DE9           PUSH     {R4,LR}
    803            int l=strlen(ContactT9Key);
   \   00000004   ........           LDR      R4,??DataTable27  ;; contactlist_menuhdr
   \   00000008   EE0F84E2           ADD      R0,R4,#+952
   \   0000000C   1B0000EF           SWI      +27
    804            if (l)
   \   00000010   000050E3           CMP      R0,#+0
    805            {
    806              l--;
    807              ContactT9Key[l]=0;
   \   00000014   04008010           ADDNE    R0,R0,R4
   \   00000018   0010A013           MOVNE    R1,#+0
   \   0000001C   B713C015           STRBNE   R1,[R0, #+951]
    808            }
    809          }
   \   00000020   1080BDE8           POP      {R4,PC}          ;; return
    810          

   \                                 In segment CODE, align 4, keep-with-next
    811          void create_contactlist_menu(void)
    812          {
   \                     create_contactlist_menu:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
    813            int i;
    814            i=CountContacts();
    815            prev_clmenu_itemcount=i;
   \   00000004   74509FE5           LDR      R5,??create_contactlist_menu_0  ;; contactlist_menuhdr
   \   00000008   ........           _BLF     CountContacts,??CountContacts??rA
   \   0000000C   0040A0E1           MOV      R4,R0
   \   00000010   5C4285E5           STR      R4,[R5, #+604]
    816            
    817            
    818            //strcpy(def_clm_hdr_text, (char*)lgpData[LGP_ClTitle]);
    819            //strcpy(key_clm_hdr_text, (char*)lgpData[LGP_ClT9Inp]);
    820            
    821            //strcpy(def_clmenu_sk_r,(char*) lgpData[LGP_Close]);
    822            //strcpy(key_clmenu_sk_r,(char*) lgpData[LGP_Clear]);
    823            
    824            UpdateCLheader();
   \   00000014   ........           BL       UpdateCLheader
    825            patch_header(&contactlist_menuhdr);
   \   00000018   0000A0E3           MOV      R0,#+0
   \   0000001C   B000C5E1           STRH     R0,[R5, #+0]
   \   00000020   1800A0E3           MOV      R0,#+24
   \   00000024   B200C5E1           STRH     R0,[R5, #+2]
   \   00000028   888100EF           SWI      +33160
   \   0000002C   010040E2           SUB      R0,R0,#+1
   \   00000030   B400C5E1           STRH     R0,[R5, #+4]
   \   00000034   8A8100EF           SWI      +33162
    826            
    827            clmenu_sk[0].lgp_id=(int)lgpData[LGP_Options];
    828            menu_sk[0].lgp_id=(int)lgpData[LGP_Select];
    829            menu_sk[1].lgp_id=(int)lgpData[LGP_Close];
    830            
    831          
    832          #ifdef USE_MLMENU
    833            contactlist_menu_id=CreateMultiLinesMenu(0,0,&contactlist_menu,&contactlist_menuhdr,0,i);
   \   00000038   44209FE5           LDR      R2,??create_contactlist_menu_0+0x4  ;; contactlist_menu
   \   0000003C   170080E2           ADD      R0,R0,#+23
   \   00000040   B600C5E1           STRH     R0,[R5, #+6]
   \   00000044   ........           LDR      R0,??DataTable26  ;; lgpData
   \   00000048   0530A0E1           MOV      R3,R5
   \   0000004C   1C1090E5           LDR      R1,[R0, #+28]
   \   00000050   B81185E5           STR      R1,[R5, #+440]
   \   00000054   301090E5           LDR      R1,[R0, #+48]
   \   00000058   200090E5           LDR      R0,[R0, #+32]
   \   0000005C   881185E5           STR      R1,[R5, #+392]
   \   00000060   900185E5           STR      R0,[R5, #+400]
   \   00000064   10002DE9           PUSH     {R4}
   \   00000068   0000A0E3           MOV      R0,#+0
   \   0000006C   01002DE9           PUSH     {R0}
   \   00000070   0010A0E3           MOV      R1,#+0
   \   00000074   170200EF           SWI      +535
   \   00000078   540285E5           STR      R0,[R5, #+596]
    834          #else
    835            contactlist_menu_id=CreateMenu(0,0,&contactlist_menu,&contactlist_menuhdr,0,i,0,0);
    836          #endif
    837            
    838          }
   \   0000007C   3380BDE8           POP      {R0,R1,R4,R5,PC}  ;; return
   \                     ??create_contactlist_menu_0:
   \   00000080   ........           DC32     contactlist_menuhdr
   \   00000084   ........           DC32     contactlist_menu
    839          

   \                                 In segment CODE, align 4, keep-with-next
    840          void contactlist_menu_ghook(void *data, int cmd)
    841          {
   \                     contactlist_menu_ghook:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0140A0E1           MOV      R4,R1
    842            PNGTOP_DESC *pltop=PNG_TOP();
   \   00000008   B98100EF           SWI      +33209
    843            if (cmd==9)
   \   0000000C   0010A0E3           MOV      R1,#+0
   \   00000010   090054E3           CMP      R4,#+9
    844            {
    845              pltop->dyn_pltop=NULL;
   \   00000014   08108005           STREQ    R1,[R0, #+8]
   \   00000018   1080BD08           POPEQ    {R4,PC}
    846            }
    847            if (cmd==0x0A)
   \   0000001C   0A0054E3           CMP      R4,#+10
   \   00000020   1080BD18           POPNE    {R4,PC}
    848            {
    849              silenthide=0;
   \   00000024   14209FE5           LDR      R2,??contactlist_menu_ghook_0  ;; contactlist_menuhdr + 496
   \   00000028   001082E5           STR      R1,[R2, #+0]
    850              pltop->dyn_pltop=XStatusesImgList;
   \   0000002C   10109FE5           LDR      R1,??contactlist_menu_ghook_0+0x4  ;; XStatusesImgList
   \   00000030   001091E5           LDR      R1,[R1, #+0]
   \   00000034   081080E5           STR      R1,[R0, #+8]
    851              DisableIDLETMR();
   \   00000038   7F0100EF           SWI      +383
    852            }
    853          }
   \   0000003C   1080BDE8           POP      {R4,PC}          ;; return
   \                     ??contactlist_menu_ghook_0:
   \   00000040   ........           DC32     contactlist_menuhdr + 496
   \   00000044   ........           DC32     XStatusesImgList
    854          

   \                                 In segment CODE, align 4, keep-with-next
    855          void RecountMenu(CLIST *req, int needfocus)
    856          {
   \                     RecountMenu:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
    857            int i;
    858            int j;
    859            void *data;
    860            UpdateCLheader();
    861            if (!contactlist_menu_id) return; //Нечего считать
   \   00000004   ........           LDR      R6,??DataTable27  ;; contactlist_menuhdr
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   ........           BL       UpdateCLheader
   \   00000014   540296E5           LDR      R0,[R6, #+596]
   \   00000018   000050E3           CMP      R0,#+0
   \   0000001C   F080BD08           POPEQ    {R4-R7,PC}
    862            data=FindGUIbyId(contactlist_menu_id,NULL);
   \   00000020   540296E5           LDR      R0,[R6, #+596]
   \   00000024   0010A0E3           MOV      R1,#+0
   \   00000028   090200EF           SWI      +521
   \   0000002C   0070A0E1           MOV      R7,R0
    863            if (req==NULL)
   \   00000030   000054E3           CMP      R4,#+0
   \   00000034   0200000A           BEQ      ??RecountMenu_0
    864            {
    865              j=0;
    866            }
    867            else
    868            {
    869              j=FindContactByContact(req);
   \   00000038   0400A0E1           MOV      R0,R4
   \   0000003C   ........           _BLF     FindContactByContact,??FindContactByContact??rA
   \   00000040   0040A0E1           MOV      R4,R0
    870            }
    871            i=CountContacts();
   \                     ??RecountMenu_0:
   \   00000044   ........           _BLF     CountContacts,??CountContacts??rA
    872            if (j>=i) j=i-1;
    873            if (j<0) j=0;
    874            if (i!=prev_clmenu_itemcount)
   \   00000048   5C1296E5           LDR      R1,[R6, #+604]
   \   0000004C   000054E1           CMP      R4,R0
   \   00000050   014040A2           SUBGE    R4,R0,#+1
   \   00000054   000054E3           CMP      R4,#+0
   \   00000058   0040A043           MOVMI    R4,#+0
   \   0000005C   010050E1           CMP      R0,R1
   \   00000060   0300000A           BEQ      ??RecountMenu_1
    875            {
    876              prev_clmenu_itemcount=i;
   \   00000064   5C0286E5           STR      R0,[R6, #+604]
    877              Menu_SetItemCountDyn(data,i);
   \   00000068   0010A0E1           MOV      R1,R0
   \   0000006C   0700A0E1           MOV      R0,R7
   \   00000070   E60100EF           SWI      +486
    878            }
    879            if(needfocus) SetCursorToMenuItem(data,j);
   \                     ??RecountMenu_1:
   \   00000074   000055E3           CMP      R5,#+0
   \   00000078   0200000A           BEQ      ??RecountMenu_2
   \   0000007C   0410A0E1           MOV      R1,R4
   \   00000080   0700A0E1           MOV      R0,R7
   \   00000084   C40100EF           SWI      +452
    880            if (IsGuiOnTop(contactlist_menu_id)) RefreshGUI();
   \                     ??RecountMenu_2:
   \   00000088   540296E5           LDR      R0,[R6, #+596]
   \   0000008C   350100EF           SWI      +309
   \   00000090   000050E3           CMP      R0,#+0
   \   00000094   F080BD08           POPEQ    {R4-R7,PC}
   \   00000098   960100EF           SWI      +406
   \   0000009C   F080BDE8           POP      {R4-R7,PC}       ;; return
    881          }
    882          

   \                                 In segment CODE, align 4, keep-with-next
    883          int contactlist_menu_onkey(void *data, GUI_MSG *msg)
    884          {
   \                     contactlist_menu_onkey:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000004   0140A0E1           MOV      R4,R1
    885            CLIST *t;
    886            int i;
    887            i=GetCurMenuItem(data);
   \   00000008   8F0100EF           SWI      +399
    888            t=FindContactByN(i);
   \   0000000C   ........           _BLF     FindContactByN,??FindContactByN??rA
   \   00000010   0080A0E1           MOV      R8,R0
    889            if (msg->keys==0x18)
   \   00000014   F200D4E1           LDRSH    R0,[R4, #+2]
   \   00000018   180050E3           CMP      R0,#+24
   \   0000001C   0100001A           BNE      ??contactlist_menu_onkey_0
    890            {
    891              ShowMainMenu();
   \   00000020   ........           _BLF     ShowMainMenu,??ShowMainMenu??rA
    892              return(-1);
   \   00000024   270000EA           B        ??contactlist_menu_onkey_1
    893            }
    894            if (msg->keys==0x3D)
   \                     ??contactlist_menu_onkey_0:
   \   00000028   ........           LDR      R5,??DataTable41  ;; contactlist_menuhdr
   \   0000002C   FF90A0E3           MOV      R9,#+255
   \   00000030   FF9C89E3           ORR      R9,R9,#0xFF00
   \   00000034   EE6FA0E3           MOV      R6,#+952
   \   00000038   3D0050E3           CMP      R0,#+61
   \   0000003C   2300001A           BNE      ??contactlist_menu_onkey_2
    895            {
    896              if (t)
   \   00000040   000058E3           CMP      R8,#+0
   \   00000044   2B00000A           BEQ      ??contactlist_menu_onkey_3
    897              {
    898                if (t->isgroup)
   \   00000048   080098E5           LDR      R0,[R8, #+8]
   \   0000004C   000050E3           CMP      R0,#+0
   \   00000050   0500000A           BEQ      ??contactlist_menu_onkey_4
    899                {
    900          	t->state^=0xFFFF;
   \   00000054   B405D8E1           LDRH     R0,[R8, #+84]
    901          	RecountMenu(t, 1);
   \   00000058   0110A0E3           MOV      R1,#+1
   \   0000005C   000029E0           EOR      R0,R9,R0
   \   00000060   B405C8E1           STRH     R0,[R8, #+84]
   \   00000064   0800A0E1           MOV      R0,R8
   \   00000068   210000EA           B        ??contactlist_menu_onkey_5
    902          	return(-1);
    903                }
    904                if (strlen(ContactT9Key))
   \                     ??contactlist_menu_onkey_4:
   \   0000006C   050086E0           ADD      R0,R6,R5
   \   00000070   1B0000EF           SWI      +27
   \   00000074   000050E3           CMP      R0,#+0
   \   00000078   0500000A           BEQ      ??contactlist_menu_onkey_6
    905                {
    906          	ClearContactT9Key();
   \   0000007C   2010A0E3           MOV      R1,#+32
   \   00000080   050086E0           ADD      R0,R6,R5
   \   00000084   1D0100EF           SWI      +285
    907          	RecountMenu(NULL, 1);
   \   00000088   0110A0E3           MOV      R1,#+1
   \   0000008C   0000A0E3           MOV      R0,#+0
   \   00000090   ........           BL       RecountMenu
    908                }
    909                if(!t->isactive && HISTORY_BUFFER) GetHistory(t, 64<<HISTORY_BUFFER);
   \                     ??contactlist_menu_onkey_6:
   \   00000094   700098E5           LDR      R0,[R8, #+112]
   \   00000098   000050E3           CMP      R0,#+0
   \   0000009C   0700001A           BNE      ??contactlist_menu_onkey_7
   \   000000A0   ........           LDR      R0,??DataTable29  ;; HISTORY_BUFFER
   \   000000A4   000090E5           LDR      R0,[R0, #+0]
   \   000000A8   000050E3           CMP      R0,#+0
   \   000000AC   0300000A           BEQ      ??contactlist_menu_onkey_7
   \   000000B0   4010A0E3           MOV      R1,#+64
   \   000000B4   1110A0E1           LSL      R1,R1,R0
   \   000000B8   0800A0E1           MOV      R0,R8
   \   000000BC   ........           _BLF     GetHistory,??GetHistory??rA
    910                CreateEditChat(t);
   \                     ??contactlist_menu_onkey_7:
   \   000000C0   0800A0E1           MOV      R0,R8
   \   000000C4   ........           BL       CreateEditChat
    911              }
    912              return(-1);
   \                     ??contactlist_menu_onkey_1:
   \   000000C8   0000E0E3           MVN      R0,#+0
   \   000000CC   F08FBDE8           POP      {R4-R11,PC}
    913            }
    914            if (msg->keys==1)
   \                     ??contactlist_menu_onkey_2:
   \   000000D0   010050E3           CMP      R0,#+1
   \   000000D4   0900001A           BNE      ??contactlist_menu_onkey_8
    915            {
    916              if (strlen(ContactT9Key))
   \   000000D8   050086E0           ADD      R0,R6,R5
   \   000000DC   1B0000EF           SWI      +27
   \   000000E0   000050E3           CMP      R0,#+0
   \   000000E4   0500000A           BEQ      ??contactlist_menu_onkey_8
    917              {
    918                BackSpaceContactT9();
   \   000000E8   ........           BL       BackSpaceContactT9
    919                RecountMenu(NULL, 1);
   \   000000EC   0110A0E3           MOV      R1,#+1
   \   000000F0   0000A0E3           MOV      R0,#+0
   \                     ??contactlist_menu_onkey_5:
   \   000000F4   ........           BL       RecountMenu
    920                return(-1);
   \                     ??contactlist_menu_onkey_3:
   \   000000F8   0000E0E3           MVN      R0,#+0
   \   000000FC   F08FBDE8           POP      {R4-R11,PC}
    921              }
    922            }
    923            if (msg->gbsmsg->msg==KEY_DOWN)
   \                     ??contactlist_menu_onkey_8:
   \   00000100   041094E5           LDR      R1,[R4, #+4]
   \   00000104   0070A0E3           MOV      R7,#+0
   \   00000108   040091E5           LDR      R0,[R1, #+4]
   \   0000010C   0140A0E3           MOV      R4,#+1
   \   00000110   9320A0E3           MOV      R2,#+147
   \   00000114   402F82E3           ORR      R2,R2,#0x100
   \   00000118   020050E1           CMP      R0,R2
   \   0000011C   3B00001A           BNE      ??contactlist_menu_onkey_9
    924            {
    925              int key=msg->gbsmsg->submess;
   \   00000120   080091E5           LDR      R0,[R1, #+8]
    926              if (((key>='0')&&(key<='9'))||(key=='#')||(key=='*'))
   \   00000124   300050E3           CMP      R0,#+48
   \   00000128   100000BA           BLT      ??contactlist_menu_onkey_10
   \   0000012C   3A0050E3           CMP      R0,#+58
   \   00000130   110000BA           BLT      ??contactlist_menu_onkey_11
    927              {
    928                AddContactT9Key(key);
    929                RecountMenu(NULL, 1);
    930                return(-1);
    931              }
    932              if (key==GREEN_BUTTON)
    933              {
    934                IsActiveUp=!IsActiveUp;
    935                RecountMenu(NULL, 1);
    936                return(-1);
    937              }
    938              if (key==RIGHT_BUTTON)
   \   00000134   082098E5           LDR      R2,[R8, #+8]
   \   00000138   3E0050E3           CMP      R0,#+62
   \   0000013C   1F00001A           BNE      ??contactlist_menu_onkey_12
    939              {
    940                //Послать запрос текста XStatus
    941                if (t)
   \   00000140   000058E3           CMP      R8,#+0
   \   00000144   3100000A           BEQ      ??contactlist_menu_onkey_9
    942                {
    943          	if (!t->isgroup)
   \   00000148   000052E3           CMP      R2,#+0
   \   0000014C   2F00001A           BNE      ??contactlist_menu_onkey_9
    944          	{
    945          	  FreeXText(t);
   \   00000150   0800A0E1           MOV      R0,R8
   \   00000154   ........           _BLF     FreeXText,??FreeXText??rA
    946                    t->req_xtext=0;
   \   00000158   7C7088E5           STR      R7,[R8, #+124]
    947                    RequestXText(t->uin);
   \   0000015C   0C0098E5           LDR      R0,[R8, #+12]
   \   00000160   ........           BL       RequestXText
    948          	  RefreshGUI();
   \   00000164   960100EF           SWI      +406
    949          	  return(-1);
   \   00000168   000064E2           RSB      R0,R4,#+0
   \   0000016C   F08FBDE8           POP      {R4-R11,PC}
    950          	}
    951                }
    952              }
   \                     ??contactlist_menu_onkey_10:
   \   00000170   230050E3           CMP      R0,#+35
   \   00000174   2A005013           CMPNE    R0,#+42
   \   00000178   0500001A           BNE      ??contactlist_menu_onkey_13
   \                     ??contactlist_menu_onkey_11:
   \   0000017C   ........           BL       AddContactT9Key
   \   00000180   0110A0E3           MOV      R1,#+1
   \   00000184   0700A0E1           MOV      R0,R7
   \   00000188   ........           BL       RecountMenu
   \   0000018C   000064E2           RSB      R0,R4,#+0
   \   00000190   F08FBDE8           POP      {R4-R11,PC}
   \                     ??contactlist_menu_onkey_13:
   \   00000194   0B0050E3           CMP      R0,#+11
   \   00000198   1C00001A           BNE      ??contactlist_menu_onkey_9
   \   0000019C   E80195E5           LDR      R0,[R5, #+488]
   \   000001A0   0110A0E3           MOV      R1,#+1
   \   000001A4   000050E3           CMP      R0,#+0
   \   000001A8   0040A013           MOVNE    R4,#+0
   \   000001AC   E84185E5           STR      R4,[R5, #+488]
   \   000001B0   0000A0E3           MOV      R0,#+0
   \   000001B4   ........           BL       RecountMenu
   \   000001B8   0700E0E1           MVN      R0,R7
   \   000001BC   F08FBDE8           POP      {R4-R11,PC}
    953              if (key==LEFT_BUTTON)
   \                     ??contactlist_menu_onkey_12:
   \   000001C0   3D0050E3           CMP      R0,#+61
   \   000001C4   1100001A           BNE      ??contactlist_menu_onkey_9
    954              {
    955                if (t && Is_Show_Groups) {//есть контакт и показываем группы?
   \   000001C8   000058E3           CMP      R8,#+0
   \   000001CC   04029515           LDRNE    R0,[R5, #+516]
   \   000001D0   00005013           CMPNE    R0,#+0
   \   000001D4   C7FFFF0A           BEQ      ??contactlist_menu_onkey_3
    956                 if (!t->isgroup)
   \   000001D8   000052E3           CMP      R2,#+0
   \   000001DC   0300001A           BNE      ??contactlist_menu_onkey_14
    957                  t=FindGroupByID(t->group);
   \   000001E0   100098E5           LDR      R0,[R8, #+16]
   \   000001E4   ........           _BLF     FindGroupByID,??FindGroupByID??rA
   \   000001E8   0080B0E1           MOVS     R8,R0
    958                 if (t && !t->state) {//группа нашлась и она открыта?
   \   000001EC   C1FFFF0A           BEQ      ??contactlist_menu_onkey_3
   \                     ??contactlist_menu_onkey_14:
   \   000001F0   B405D8E1           LDRH     R0,[R8, #+84]
   \   000001F4   000050E3           CMP      R0,#+0
   \   000001F8   BEFFFF1A           BNE      ??contactlist_menu_onkey_3
    959                  t->state^=0xFFFF;
   \   000001FC   B495C8E1           STRH     R9,[R8, #+84]
    960                  RecountMenu(t, 1);
   \   00000200   0110A0E3           MOV      R1,#+1
   \   00000204   0800A0E1           MOV      R0,R8
   \   00000208   ........           BL       RecountMenu
   \   0000020C   ADFFFFEA           B        ??contactlist_menu_onkey_1
    961                 }
    962                }
    963                return -1;
    964              }
    965            }
    966            if (msg->gbsmsg->msg==LONG_PRESS)
   \                     ??contactlist_menu_onkey_9:
   \   00000210   040091E5           LDR      R0,[R1, #+4]
   \   00000214   652F84E3           ORR      R2,R4,#0x194
   \   00000218   020050E1           CMP      R0,R2
   \   0000021C   3000001A           BNE      ??contactlist_menu_onkey_15
    967            {
    968              if (msg->gbsmsg->submess=='#')
   \   00000220   080091E5           LDR      R0,[R1, #+8]
   \   00000224   ........           LDR      R11,??DataTable32  ;; Canvas
   \   00000228   0980A0E3           MOV      R8,#+9
   \   0000022C   428C88E3           ORR      R8,R8,#0x4200
   \   00000230   B090A0E3           MOV      R9,#+176
   \   00000234   DE9C89E3           ORR      R9,R9,#0xDE00
   \   00000238   67AFA0E3           MOV      R10,#+412
   \   0000023C   230050E3           CMP      R0,#+35
   \   00000240   1400001A           BNE      ??contactlist_menu_onkey_16
    969              {
    970                ClearContactT9Key();
   \   00000244   2010A0E3           MOV      R1,#+32
   \   00000248   050086E0           ADD      R0,R6,R5
   \   0000024C   1D0100EF           SWI      +285
    971                RecountMenu(NULL, 1);
   \   00000250   0110A0E3           MOV      R1,#+1
   \   00000254   0700A0E1           MOV      R0,R7
   \   00000258   ........           BL       RecountMenu
    972                gipc.name_to=ipc_xtask_name;
   \   0000025C   500F8BE2           ADD      R0,R11,#+320
   \   00000260   05008AE7           STR      R0,[R10, +R5]
    973                gipc.name_from=ipc_my_name;
   \   00000264   480F8BE2           ADD      R0,R11,#+288
   \   00000268   A00185E5           STR      R0,[R5, #+416]
    974                gipc.data=0;
   \   0000026C   A47185E5           STR      R7,[R5, #+420]
    975                GBS_SendMessage(MMI_CEPID,MSG_IPC,IPC_XTASK_IDLE,&gipc);
   \   00000270   05308AE0           ADD      R3,R10,R5
   \   00000274   0420A0E1           MOV      R2,R4
   \   00000278   0910A0E1           MOV      R1,R9
   \   0000027C   0800A0E1           MOV      R0,R8
   \   00000280   000100EF           SWI      +256
    976                if (IsUnlocked())
   \   00000284   430000EF           SWI      +67
   \   00000288   000050E3           CMP      R0,#+0
   \   0000028C   99FFFF0A           BEQ      ??contactlist_menu_onkey_3
    977                {
    978                  KbdLock();
   \   00000290   A90000EF           SWI      +169
   \   00000294   8BFFFFEA           B        ??contactlist_menu_onkey_1
    979                }
    980                return(-1);
    981              }
    982              if (msg->gbsmsg->submess=='*'){
   \                     ??contactlist_menu_onkey_16:
   \   00000298   2A0050E3           CMP      R0,#+42
   \   0000029C   1000001A           BNE      ??contactlist_menu_onkey_15
    983                ClearContactT9Key();
   \   000002A0   2010A0E3           MOV      R1,#+32
   \   000002A4   050086E0           ADD      R0,R6,R5
   \   000002A8   1D0100EF           SWI      +285
    984                RecountMenu(NULL, 1);
   \   000002AC   0110A0E3           MOV      R1,#+1
   \   000002B0   0700A0E1           MOV      R0,R7
   \   000002B4   ........           BL       RecountMenu
    985                silenthide=1;
   \   000002B8   F04185E5           STR      R4,[R5, #+496]
    986                gipc.name_to=ipc_xtask_name;
   \   000002BC   500F8BE2           ADD      R0,R11,#+320
   \   000002C0   05008AE7           STR      R0,[R10, +R5]
    987                gipc.name_from=ipc_my_name;
   \   000002C4   480F8BE2           ADD      R0,R11,#+288
   \   000002C8   A00185E5           STR      R0,[R5, #+416]
    988                gipc.data=0;
   \   000002CC   A47185E5           STR      R7,[R5, #+420]
    989                GBS_SendMessage(MMI_CEPID,MSG_IPC,IPC_XTASK_IDLE,&gipc);
   \   000002D0   05308AE0           ADD      R3,R10,R5
   \   000002D4   0420A0E1           MOV      R2,R4
   \   000002D8   0910A0E1           MOV      R1,R9
   \   000002DC   0800A0E1           MOV      R0,R8
   \   000002E0   000100EF           SWI      +256
    990              }
    991            }
    992            return(0);
   \                     ??contactlist_menu_onkey_15:
   \   000002E4   0000A0E3           MOV      R0,#+0
   \   000002E8   F08FBDE8           POP      {R4-R11,PC}      ;; return
    993          }
    994          

   \                                 In segment CODE, align 4, keep-with-next
    995          void GetOnTotalContact(int group_id,int *_onlinetotal)
    996          {
    997            CLIST *t;
    998            t=(CLIST *)&cltop;
   \                     GetOnTotalContact:
   \   00000000   ........           LDR      R2,??DataTable31  ;; contactlist_menuhdr + 588
   \   00000004   30002DE9           PUSH     {R4,R5}
    999            int online=0,total=0;
   \   00000008   0030A0E3           MOV      R3,#+0
   \   0000000C   00C0A0E3           MOV      R12,#+0
   \   00000010   FF50A0E3           MOV      R5,#+255
   \   00000014   FF5C85E3           ORR      R5,R5,#0xFF00
   \   00000018   080000EA           B        ??GetOnTotalContact_0
   1000            while((t=t->next))
   1001            {
   1002              if(t->group==group_id && !t->isgroup)
   \                     ??GetOnTotalContact_1:
   \   0000001C   104092E5           LDR      R4,[R2, #+16]
   \   00000020   000054E1           CMP      R4,R0
   \   00000024   08409205           LDREQ    R4,[R2, #+8]
   \   00000028   00005403           CMPEQ    R4,#+0
   \   0000002C   0300001A           BNE      ??GetOnTotalContact_0
   1003              {
   1004                total++;
   1005                if (t->state!=0xFFFF) online++;
   \   00000030   B445D2E1           LDRH     R4,[R2, #+84]
   \   00000034   01C08CE2           ADD      R12,R12,#+1
   \   00000038   050054E1           CMP      R4,R5
   \   0000003C   01308312           ADDNE    R3,R3,#+1
   1006              }
   1007            }
   \                     ??GetOnTotalContact_0:
   \   00000040   002092E5           LDR      R2,[R2, #+0]
   \   00000044   000052E3           CMP      R2,#+0
   \   00000048   F3FFFF1A           BNE      ??GetOnTotalContact_1
   1008            _onlinetotal[0]=online;
   \   0000004C   003081E5           STR      R3,[R1, #+0]
   1009            _onlinetotal[1]=total;
   \   00000050   04C081E5           STR      R12,[R1, #+4]
   1010          }
   \   00000054   3000BDE8           POP      {R4,R5}
   \   00000058   1EFF2FE1           BX       LR               ;; return
   1011          
   1012          

   \                                 In segment CODE, align 4, keep-with-next
   1013          void contactlist_menu_iconhndl(void *data, int curitem, void *unk)
   1014          {
   \                     contactlist_menu_iconhndl:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000004   9CDF4DE2           SUB      SP,SP,#+624
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
   1015            CLIST *t;
   1016          #ifdef USE_MLMENU
   1017            void *item=AllocMLMenuItem(data);
   \   00000010   190200EF           SWI      +537
   \   00000014   0060A0E1           MOV      R6,R0
   1018          #else
   1019            void *item=AllocMenuItem(data);
   1020          #endif
   1021            int icon;
   1022          
   1023            WSHDR *ws2;
   1024          #ifdef USE_MLMENU
   1025            WSHDR *ws4;
   1026          #endif
   1027            WSHDR ws1loc, *ws1;
   1028            unsigned short num[128];
   1029            ws1=CreateLocalWS(&ws1loc,num,128);
   \   00000018   8020A0E3           MOV      R2,#+128
   \   0000001C   08108DE2           ADD      R1,SP,#+8
   \   00000020   920F8DE2           ADD      R0,SP,#+584
   \   00000024   270100EF           SWI      +295
   \   00000028   0070A0E1           MOV      R7,R0
   1030          #ifdef USE_MLMENU
   1031            WSHDR ws3loc, *ws3;
   1032            unsigned short num3[128];
   1033            ws3=CreateLocalWS(&ws3loc,num3,128);
   \   0000002C   8020A0E3           MOV      R2,#+128
   \   00000030   421F8DE2           ADD      R1,SP,#+264
   \   00000034   970F8DE2           ADD      R0,SP,#+604
   \   00000038   270100EF           SWI      +295
   \   0000003C   0080A0E1           MOV      R8,R0
   1034            char s[64];
   1035          #endif
   1036            t=FindContactByN(curitem);
   \   00000040   0500A0E1           MOV      R0,R5
   \   00000044   ........           _BLF     FindContactByN,??FindContactByN??rA
   \   00000048   00A0B0E1           MOVS     R10,R0
   1037            if (t)
   \   0000004C   4E00000A           BEQ      ??contactlist_menu_iconhndl_0
   1038            {
   1039              icon=GetIconIndex(t);
   1040              if (icon!=IS_GROUP)
   \   00000050   ........           LDR      R11,??DataTable32  ;; Canvas
   \   00000054   ........           BL       GetIconIndex
   \   00000058   0090A0E1           MOV      R9,R0
   \   0000005C   0F0059E3           CMP      R9,#+15
   \   00000060   3800000A           BEQ      ??contactlist_menu_iconhndl_1
   1041              {
   1042                wsprintf(ws1,percent_t,t->name);
   \   00000064   14208AE2           ADD      R2,R10,#+20
   \   00000068   08108BE2           ADD      R1,R11,#+8
   \   0000006C   0700A0E1           MOV      R0,R7
   \   00000070   240100EF           SWI      +292
   1043                if (t->isactive)
   \   00000074   70009AE5           LDR      R0,[R10, #+112]
   \   00000078   000050E3           CMP      R0,#+0
   \   0000007C   0800000A           BEQ      ??contactlist_menu_iconhndl_2
   1044                {
   1045                  wsInsertChar(ws1,0x0002,1);
   \   00000080   0120A0E3           MOV      R2,#+1
   \   00000084   0210A0E3           MOV      R1,#+2
   \   00000088   0700A0E1           MOV      R0,R7
   \   0000008C   1D0000EF           SWI      +29
   1046                  wsInsertChar(ws1,0xE008,1);
   \   00000090   0120A0E3           MOV      R2,#+1
   \   00000094   0810A0E3           MOV      R1,#+8
   \   00000098   E01C81E3           ORR      R1,R1,#0xE000
   \   0000009C   0700A0E1           MOV      R0,R7
   \   000000A0   1D0000EF           SWI      +29
   1047                }
   1048          #ifdef USE_MLMENU
   1049                if (t->xtext && t->xtext[0]!=0)
   \                     ??contactlist_menu_iconhndl_2:
   \   000000A4   78009AE5           LDR      R0,[R10, #+120]
   \   000000A8   000050E3           CMP      R0,#+0
   \   000000AC   0000D015           LDRBNE   R0,[R0, #+0]
   \   000000B0   00005013           CMPNE    R0,#+0
   \   000000B4   1000000A           BEQ      ??contactlist_menu_iconhndl_3
   1050                {
   1051          	int i;
   1052          	zeromem(s,64);
   \   000000B8   4010A0E3           MOV      R1,#+64
   \   000000BC   820F8DE2           ADD      R0,SP,#+520
   \   000000C0   1D0100EF           SWI      +285
   1053          	i=t->xtext[0];
   \   000000C4   78009AE5           LDR      R0,[R10, #+120]
   \   000000C8   0020D0E5           LDRB     R2,[R0, #+0]
   1054          	if (i>63) i=63;
   1055          	strncpy(s,t->xtext+1,i);
   \   000000CC   011080E2           ADD      R1,R0,#+1
   \   000000D0   820F8DE2           ADD      R0,SP,#+520
   \   000000D4   400052E3           CMP      R2,#+64
   \   000000D8   3F20A0A3           MOVGE    R2,#+63
   \   000000DC   160100EF           SWI      +278
   1056          	wsprintf(ws3,"%c%t",0xE012,s);
   \   000000E0   823F8DE2           ADD      R3,SP,#+520
   \   000000E4   1220A0E3           MOV      R2,#+18
   \   000000E8   E02C82E3           ORR      R2,R2,#0xE000
   \   000000EC   10108BE2           ADD      R1,R11,#+16
   \   000000F0   0800A0E1           MOV      R0,R8
   \   000000F4   240100EF           SWI      +292
   \   000000F8   030000EA           B        ??contactlist_menu_iconhndl_4
   1057                }
   1058                else
   1059          	wsprintf(ws3,percent_d,t->uin);
   \                     ??contactlist_menu_iconhndl_3:
   \   000000FC   0C209AE5           LDR      R2,[R10, #+12]
   \   00000100   0B108BE2           ADD      R1,R11,#+11
   \   00000104   0800A0E1           MOV      R0,R8
   \   00000108   240100EF           SWI      +292
   1060                if ((t->xstate<total_xstatuses)&&(t->xstate))
   \                     ??contactlist_menu_iconhndl_4:
   \   0000010C   B605DAE1           LDRH     R0,[R10, #+86]
   \   00000110   F4209FE5           LDR      R2,??contactlist_menu_iconhndl_5  ;; total_xstatuses
   \   00000114   0010A0E1           MOV      R1,R0
   \   00000118   002092E5           LDR      R2,[R2, #+0]
   \   0000011C   020051E1           CMP      R1,R2
   \   00000120   1D0000AA           BGE      ??contactlist_menu_iconhndl_6
   \   00000124   000050E3           CMP      R0,#+0
   \   00000128   1B00000A           BEQ      ??contactlist_menu_iconhndl_6
   1061                {
   1062          	wsInsertChar(ws3,FIRST_UCS2_BITMAP+t->xstate,1);
   \   0000012C   0120A0E3           MOV      R2,#+1
   \   00000130   2A00A0E3           MOV      R0,#+42
   \   00000134   E10C80E3           ORR      R0,R0,#0xE100
   \   00000138   011080E0           ADD      R1,R0,R1
   \   0000013C   0800A0E1           MOV      R0,R8
   \   00000140   1D0000EF           SWI      +29
   \   00000144   140000EA           B        ??contactlist_menu_iconhndl_6
   1063                }
   1064          #endif
   1065              }
   1066              else
   1067              {
   1068                int onlinetotal[2];
   1069                GetOnTotalContact(t->group,onlinetotal);
   \                     ??contactlist_menu_iconhndl_1:
   \   00000148   10009AE5           LDR      R0,[R10, #+16]
   \   0000014C   0D10A0E1           MOV      R1,SP
   \   00000150   ........           BL       GetOnTotalContact
   1070          #ifdef USE_MLMENU
   1071                wsprintf(ws1,percent_t,t->name);
   \   00000154   14208AE2           ADD      R2,R10,#+20
   \   00000158   08108BE2           ADD      R1,R11,#+8
   \   0000015C   0700A0E1           MOV      R0,R7
   \   00000160   240100EF           SWI      +292
   1072                wsprintf(ws3,"(%d/%d)",onlinetotal[0],onlinetotal[1]);
   \   00000164   04309DE5           LDR      R3,[SP, #+4]
   \   00000168   00209DE5           LDR      R2,[SP, #+0]
   \   0000016C   E8108BE2           ADD      R1,R11,#+232
   \   00000170   0800A0E1           MOV      R0,R8
   \   00000174   240100EF           SWI      +292
   1073          #else
   1074                wsprintf(ws1,"%t%c%c(%d/%d)",t->name,0xE01D,0xE012,onlinetotal[0],onlinetotal[1]);
   1075          #endif
   1076                if (t->state) icon++; //Модификация иконки группы
   \   00000178   B405DAE1           LDRH     R0,[R10, #+84]
   \   0000017C   000050E3           CMP      R0,#+0
   \   00000180   0500000A           BEQ      ??contactlist_menu_iconhndl_6
   \   00000184   019089E2           ADD      R9,R9,#+1
   \   00000188   030000EA           B        ??contactlist_menu_iconhndl_6
   1077              }
   1078            }
   1079            else
   1080            {
   1081              wsprintf(ws1, lgpData[LGP_ClError]);
   \                     ??contactlist_menu_iconhndl_0:
   \   0000018C   7C009FE5           LDR      R0,??contactlist_menu_iconhndl_5+0x4  ;; lgpData + 12
   \   00000190   001090E5           LDR      R1,[R0, #+0]
   \   00000194   0700A0E1           MOV      R0,R7
   \   00000198   240100EF           SWI      +292
   1082            }
   1083            ws2=AllocMenuWS(data,ws1->wsbody[0]);
   \                     ??contactlist_menu_iconhndl_6:
   \   0000019C   000097E5           LDR      R0,[R7, #+0]
   \   000001A0   B010D0E1           LDRH     R1,[R0, #+0]
   \   000001A4   0400A0E1           MOV      R0,R4
   \   000001A8   980100EF           SWI      +408
   \   000001AC   00A0A0E1           MOV      R10,R0
   1084            wstrcpy(ws2,ws1);
   \   000001B0   0710A0E1           MOV      R1,R7
   \   000001B4   1F0100EF           SWI      +287
   1085          
   1086            SetMenuItemIconArray(data, item, S_ICONS+icon);
   \   000001B8   ........           LDR      R0,??DataTable41  ;; contactlist_menuhdr
   \   000001BC   0610A0E1           MOV      R1,R6
   \   000001C0   090180E0           ADD      R0,R0,R9, LSL #+2
   \   000001C4   442F80E2           ADD      R2,R0,#+272
   \   000001C8   0400A0E1           MOV      R0,R4
   \   000001CC   990100EF           SWI      +409
   1087          #ifdef USE_MLMENU
   1088            ws4=AllocMenuWS(data,ws3->wsbody[0]);
   \   000001D0   000098E5           LDR      R0,[R8, #+0]
   \   000001D4   B010D0E1           LDRH     R1,[R0, #+0]
   \   000001D8   0400A0E1           MOV      R0,R4
   \   000001DC   980100EF           SWI      +408
   \   000001E0   0070A0E1           MOV      R7,R0
   1089            wstrcpy(ws4,ws3);
   \   000001E4   0810A0E1           MOV      R1,R8
   \   000001E8   1F0100EF           SWI      +287
   1090            SetMLMenuItemText(data, item, ws2, ws4, curitem);
   \   000001EC   20002DE9           PUSH     {R5}
   \   000001F0   0730A0E1           MOV      R3,R7
   \   000001F4   0A20A0E1           MOV      R2,R10
   \   000001F8   0610A0E1           MOV      R1,R6
   \   000001FC   0400A0E1           MOV      R0,R4
   \   00000200   180200EF           SWI      +536
   1091          #else
   1092            SetMenuItemText(data, item, ws2, curitem);
   1093          #endif
   1094          }
   \   00000204   9DDF8DE2           ADD      SP,SP,#+628
   \   00000208   F08FBDE8           POP      {R4-R11,PC}      ;; return
   \                     ??contactlist_menu_iconhndl_5:
   \   0000020C   ........           DC32     total_xstatuses
   \   00000210   ........           DC32     lgpData + 12
   1095          
   1096          //===============================================================================================
   1097          int DNR_ID=0;
   1098          int DNR_TRIES=3;
   1099          
   1100          extern const char NATICQ_HOST[];
   1101          extern const unsigned int NATICQ_PORT;
   1102          extern const unsigned int RECONNECT_TIME;
   1103          char hostname[128];
   1104          int host_counter = 0;
   1105          
   1106          //---------------------------------------------------------------------------

   \                                 In segment CODE, align 4, keep-with-next
   1107          const char *GetHost(int cnt, const char *str, char *buf)
   1108          {
   1109            const char *tmp = str, *begin, *end;
   \                     GetHost:
   \   00000000   0130A0E1           MOV      R3,R1
   1110            if(cnt)
   \   00000004   000050E3           CMP      R0,#+0
   \   00000008   0100001A           BNE      ??GetHost_0
   \   0000000C   180000EA           B        ??GetHost_1
   1111            {
   1112              for(;cnt;cnt--)
   1113              {
   1114                for(;*str!=';' && *str!=' ' && *str!='\x0D' && *str!='\x0A' && *str; str++);
   \                     ??GetHost_2:
   \   00000010   011081E2           ADD      R1,R1,#+1
   \                     ??GetHost_0:
   \   00000014   00C0D1E5           LDRB     R12,[R1, #+0]
   \   00000018   3B005CE3           CMP      R12,#+59
   \   0000001C   20005C13           CMPNE    R12,#+32
   \   00000020   0D005C13           CMPNE    R12,#+13
   \   00000024   0A005C13           CMPNE    R12,#+10
   \   00000028   00005C13           CMPNE    R12,#+0
   \   0000002C   F7FFFF1A           BNE      ??GetHost_2
   1115                if(!*str) str = tmp;
   \   00000030   00005CE3           CMP      R12,#+0
   \   00000034   0200001A           BNE      ??GetHost_3
   \   00000038   0310A0E1           MOV      R1,R3
   \   0000003C   000000EA           B        ??GetHost_3
   1116                for(;(*str==';' || *str==' ' || *str=='\x0D' || *str=='\x0A') && *str; str++);
   \                     ??GetHost_4:
   \   00000040   011081E2           ADD      R1,R1,#+1
   \                     ??GetHost_3:
   \   00000044   00C0D1E5           LDRB     R12,[R1, #+0]
   \   00000048   3B005CE3           CMP      R12,#+59
   \   0000004C   20005C13           CMPNE    R12,#+32
   \   00000050   0D005C13           CMPNE    R12,#+13
   \   00000054   0A005C13           CMPNE    R12,#+10
   \   00000058   0100001A           BNE      ??GetHost_5
   \   0000005C   00005CE3           CMP      R12,#+0
   \   00000060   F6FFFF1A           BNE      ??GetHost_4
   1117                if(!*str) str = tmp;
   \                     ??GetHost_5:
   \   00000064   00005CE3           CMP      R12,#+0
   \   00000068   0310A001           MOVEQ    R1,R3
   1118              }
   \   0000006C   010050E2           SUBS     R0,R0,#+1
   \   00000070   E7FFFF1A           BNE      ??GetHost_0
   1119            }
   1120            tmp = buf;
   \                     ??GetHost_1:
   \   00000074   0200A0E1           MOV      R0,R2
   1121            begin = str;
   \   00000078   0130A0E1           MOV      R3,R1
   \   0000007C   000000EA           B        ??GetHost_6
   1122            for(;*str!=';' && *str!=':' && *str!=' ' && *str!='\x0D' && *str!='\x0A' && *str; str++);
   \                     ??GetHost_7:
   \   00000080   011081E2           ADD      R1,R1,#+1
   \                     ??GetHost_6:
   \   00000084   00C0D1E5           LDRB     R12,[R1, #+0]
   \   00000088   3B005CE3           CMP      R12,#+59
   \   0000008C   3A005C13           CMPNE    R12,#+58
   \   00000090   20005C13           CMPNE    R12,#+32
   \   00000094   0D005C13           CMPNE    R12,#+13
   \   00000098   0A005C13           CMPNE    R12,#+10
   \   0000009C   00005C13           CMPNE    R12,#+0
   \   000000A0   F6FFFF1A           BNE      ??GetHost_7
   1123            end = str;
   1124            for(;begin<end; *buf = *begin, begin++, buf++);
   \                     ??GetHost_8:
   \   000000A4   010053E1           CMP      R3,R1
   \   000000A8   ........           LDRBCC   R12,[R3], #+1
   \   000000AC   ........           STRBCC   R12,[R2], #+1
   \   000000B0   FBFFFF3A           BCC      ??GetHost_8
   1125            *buf = 0;
   \   000000B4   0010A0E3           MOV      R1,#+0
   \   000000B8   0010C2E5           STRB     R1,[R2, #+0]
   1126            return tmp;
   \   000000BC   1EFF2FE1           BX       LR               ;; return
   1127          }
   1128          //---------------------------------------------------------------------------

   \                                 In segment CODE, align 4, keep-with-next
   1129          int atoi(char *attr)
   1130          {
   \                     atoi:
   \   00000000   10002DE9           PUSH     {R4}
   1131            int ret=0;
   \   00000004   0010A0E3           MOV      R1,#+0
   1132            int neg=1;
   \   00000008   0120A0E3           MOV      R2,#+1
   1133            for (int k=0; ; k++)
   \   0000000C   0030A0E3           MOV      R3,#+0
   \   00000010   060000EA           B        ??atoi_0
   1134            {
   1135              if ( attr[k]>0x2F && attr[k]<0x3A) {ret=ret*10+attr[k]-0x30;} else { if ( attr[k]=='-') {neg=-1;} else {return(ret*neg);}}
   \                     ??atoi_1:
   \   00000014   04C0A0E1           MOV      R12,R4
   \   00000018   3A005CE3           CMP      R12,#+58
   \   0000001C   0600002A           BCS      ??atoi_2
   \   00000020   0A40A0E3           MOV      R4,#+10
   \   00000024   94C121E0           MLA      R1,R4,R1,R12
   \   00000028   301041E2           SUB      R1,R1,#+48
   \                     ??atoi_3:
   \   0000002C   013083E2           ADD      R3,R3,#+1
   \                     ??atoi_0:
   \   00000030   0040D3E7           LDRB     R4,[R3, +R0]
   \   00000034   300054E3           CMP      R4,#+48
   \   00000038   F5FFFF2A           BCS      ??atoi_1
   \                     ??atoi_2:
   \   0000003C   2D0054E3           CMP      R4,#+45
   \   00000040   0020E003           MVNEQ    R2,#+0
   \   00000044   F8FFFF0A           BEQ      ??atoi_3
   \   00000048   1000BDE8           POP      {R4}
   \   0000004C   920100E0           MUL      R0,R2,R1
   \   00000050   1EFF2FE1           BX       LR               ;; return
   1136            }
   1137          }
   1138          //---------------------------------------------------------------------------

   \                                 In segment CODE, align 4, keep-with-next
   1139          int GetPort(int cnt, const char *str)
   1140          {
   \                     GetPort:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   08D04DE2           SUB      SP,SP,#+8
   1141            const char *tmp = str;
   \   00000008   01C0A0E1           MOV      R12,R1
   1142            char numbuf[6], numcnt = 0;
   \   0000000C   0020A0E3           MOV      R2,#+0
   \   00000010   0030A0E3           MOV      R3,#+0
   1143            if(cnt)
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   0100001A           BNE      ??GetPort_0
   \   0000001C   180000EA           B        ??GetPort_1
   1144            {
   1145              for(;cnt;cnt--)
   1146              {
   1147                for(;*str!=';' && *str!=' ' && *str!='\x0D' && *str!='\x0A' && *str; str++);
   \                     ??GetPort_2:
   \   00000020   011081E2           ADD      R1,R1,#+1
   \                     ??GetPort_0:
   \   00000024   0040D1E5           LDRB     R4,[R1, #+0]
   \   00000028   3B0054E3           CMP      R4,#+59
   \   0000002C   20005413           CMPNE    R4,#+32
   \   00000030   0D005413           CMPNE    R4,#+13
   \   00000034   0A005413           CMPNE    R4,#+10
   \   00000038   00005413           CMPNE    R4,#+0
   \   0000003C   F7FFFF1A           BNE      ??GetPort_2
   1148                if(!*str) str = tmp;
   \   00000040   000054E3           CMP      R4,#+0
   \   00000044   0200001A           BNE      ??GetPort_3
   \   00000048   0C10A0E1           MOV      R1,R12
   \   0000004C   000000EA           B        ??GetPort_3
   1149                for(;(*str==';' || *str==' ' || *str=='\x0D' || *str=='\x0A') && *str; str++);
   \                     ??GetPort_4:
   \   00000050   011081E2           ADD      R1,R1,#+1
   \                     ??GetPort_3:
   \   00000054   0040D1E5           LDRB     R4,[R1, #+0]
   \   00000058   3B0054E3           CMP      R4,#+59
   \   0000005C   20005413           CMPNE    R4,#+32
   \   00000060   0D005413           CMPNE    R4,#+13
   \   00000064   0A005413           CMPNE    R4,#+10
   \   00000068   0100001A           BNE      ??GetPort_5
   \   0000006C   000054E3           CMP      R4,#+0
   \   00000070   F6FFFF1A           BNE      ??GetPort_4
   1150                if(!*str) str = tmp;
   \                     ??GetPort_5:
   \   00000074   000054E3           CMP      R4,#+0
   \   00000078   0C10A001           MOVEQ    R1,R12
   1151              }
   \   0000007C   010050E2           SUBS     R0,R0,#+1
   \   00000080   E7FFFF1A           BNE      ??GetPort_0
   1152            }
   1153            for(;*str!=';' && *str!=':' && *str!=' ' && *str!='\x0D' && *str!='\x0A' && *str; str++);
   \                     ??GetPort_1:
   \   00000084   0000D1E5           LDRB     R0,[R1, #+0]
   \   00000088   3B0050E3           CMP      R0,#+59
   \   0000008C   3A005013           CMPNE    R0,#+58
   \   00000090   20005013           CMPNE    R0,#+32
   \   00000094   0D005013           CMPNE    R0,#+13
   \   00000098   0A005013           CMPNE    R0,#+10
   \   0000009C   00005013           CMPNE    R0,#+0
   \   000000A0   01108112           ADDNE    R1,R1,#+1
   \   000000A4   F6FFFF1A           BNE      ??GetPort_1
   1154            if(*str!=':') return NATICQ_PORT;
   \   000000A8   ........           LDRB     R0,[R1], #+1
   \   000000AC   3A0050E3           CMP      R0,#+58
   \   000000B0   58009F15           LDRNE    R0,??GetPort_6   ;; NATICQ_PORT
   \   000000B4   00009015           LDRNE    R0,[R0, #+0]
   \   000000B8   1680BD18           POPNE    {R1,R2,R4,PC}
   1155            str++;
   1156            numbuf[5] = 0;
   \   000000BC   0520CDE5           STRB     R2,[SP, #+5]
   \   000000C0   030000EA           B        ??GetPort_7
   1157            for(;*str!=';' && *str!=' ' && *str!='\x0D' && *str!='\x0A' && *str && numcnt<5; numbuf[numcnt] = *str, str++, numcnt++);
   \                     ??GetPort_8:
   \   000000C4   ........           LDRB     R4,[R1], #+1
   \   000000C8   013083E2           ADD      R3,R3,#+1
   \   000000CC   FF3003E2           AND      R3,R3,#0xFF
   \   000000D0   0040C0E5           STRB     R4,[R0, #+0]
   \                     ??GetPort_7:
   \   000000D4   0D40A0E1           MOV      R4,SP
   \   000000D8   040083E0           ADD      R0,R3,R4
   \   000000DC   0040D1E5           LDRB     R4,[R1, #+0]
   \   000000E0   3B0054E3           CMP      R4,#+59
   \   000000E4   20005413           CMPNE    R4,#+32
   \   000000E8   0D005413           CMPNE    R4,#+13
   \   000000EC   0A005413           CMPNE    R4,#+10
   \   000000F0   00005413           CMPNE    R4,#+0
   \   000000F4   0100000A           BEQ      ??GetPort_9
   \   000000F8   050053E3           CMP      R3,#+5
   \   000000FC   F0FFFF3A           BCC      ??GetPort_8
   1158            numbuf[numcnt] = 0;
   \                     ??GetPort_9:
   \   00000100   0020C0E5           STRB     R2,[R0, #+0]
   1159            return atoi(numbuf);
   \   00000104   0D00A0E1           MOV      R0,SP
   \   00000108   ........           BL       atoi
   \   0000010C   1680BDE8           POP      {R1,R2,R4,PC}    ;; return
   \                     ??GetPort_6:
   \   00000110   ........           DC32     NATICQ_PORT
   1160          
   1161          }
   1162          //---------------------------------------------------------------------------

   \                                 In segment CODE, align 4, keep-with-next
   1163          int GetHostsCount(const char *str)
   1164          {
   1165            char cnt = 1;
   \                     GetHostsCount:
   \   00000000   0110A0E3           MOV      R1,#+1
   \   00000004   000000EA           B        ??GetHostsCount_0
   1166            for(;cnt;cnt++)
   1167            {
   1168              for(;*str!=';' && *str!=' ' && *str!='\x0D' && *str!='\x0A' && *str; str++);
   \                     ??GetHostsCount_1:
   \   00000008   010080E2           ADD      R0,R0,#+1
   \                     ??GetHostsCount_0:
   \   0000000C   0020D0E5           LDRB     R2,[R0, #+0]
   \   00000010   3B0052E3           CMP      R2,#+59
   \   00000014   20005213           CMPNE    R2,#+32
   \   00000018   0D005213           CMPNE    R2,#+13
   \   0000001C   0A005213           CMPNE    R2,#+10
   \   00000020   00005213           CMPNE    R2,#+0
   \   00000024   F7FFFF1A           BNE      ??GetHostsCount_1
   1169              if(!*str) return cnt;
   \   00000028   000052E3           CMP      R2,#+0
   \   0000002C   0200001A           BNE      ??GetHostsCount_2
   \                     ??GetHostsCount_3:
   \   00000030   0100A0E1           MOV      R0,R1
   \   00000034   1EFF2FE1           BX       LR
   1170              for(;(*str==';' || *str==' ' || *str=='\x0D' || *str=='\x0A') && *str; str++);
   \                     ??GetHostsCount_4:
   \   00000038   010080E2           ADD      R0,R0,#+1
   \                     ??GetHostsCount_2:
   \   0000003C   0020D0E5           LDRB     R2,[R0, #+0]
   \   00000040   3B0052E3           CMP      R2,#+59
   \   00000044   20005213           CMPNE    R2,#+32
   \   00000048   0D005213           CMPNE    R2,#+13
   \   0000004C   0A005213           CMPNE    R2,#+10
   \   00000050   0100001A           BNE      ??GetHostsCount_5
   \   00000054   000052E3           CMP      R2,#+0
   \   00000058   F6FFFF1A           BNE      ??GetHostsCount_4
   1171              if(!*str) return cnt;
   \                     ??GetHostsCount_5:
   \   0000005C   000052E3           CMP      R2,#+0
   \   00000060   F2FFFF0A           BEQ      ??GetHostsCount_3
   1172            }
   \   00000064   011081E2           ADD      R1,R1,#+1
   \   00000068   FF1011E2           ANDS     R1,R1,#0xFF
   \   0000006C   E6FFFF1A           BNE      ??GetHostsCount_0
   1173            return 0;
   \   00000070   0000A0E3           MOV      R0,#+0
   \   00000074   1EFF2FE1           BX       LR               ;; return
   1174          
   1175          }
   1176          //---------------------------------------------------------------------------
   1177          

   \                                 In segment CODE, align 4, keep-with-next
   1178          void create_connect(void)
   1179          {
   \                     create_connect:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   1180            char hostbuf[128];
   1181            int hostport;
   1182            int ***p_res=NULL;
   1183            void do_reconnect(void);
   1184            SOCK_ADDR sa;
   1185            //Устанавливаем соединение
   1186            connect_state = 0;
   \   00000004   ........           LDR      R5,??DataTable41  ;; contactlist_menuhdr
   1187            int err;
   1188            unsigned int ip;
   1189            GBS_DelTimer(&reconnect_tmr);
   1190            if (!IsGPRSEnabled())
   \   00000008   80729FE5           LDR      R7,??create_connect_0  ;; `?<Constant "DNR Ok, connecting...">`
   \   0000000C   94D04DE2           SUB      SP,SP,#+148
   \   00000010   0040A0E3           MOV      R4,#+0
   \   00000014   00408DE5           STR      R4,[SP, #+0]
   \   00000018   244285E5           STR      R4,[R5, #+548]
   \   0000001C   F800A0E3           MOV      R0,#+248
   \   00000020   400E80E3           ORR      R0,R0,#0x400
   \   00000024   050080E0           ADD      R0,R0,R5
   \   00000028   8C0100EF           SWI      +396
   \   0000002C   F66FA0E3           MOV      R6,#+984
   \   00000030   A70000EF           SWI      +167
   \   00000034   000050E3           CMP      R0,#+0
   \   00000038   0400001A           BNE      ??create_connect_1
   1191            {
   1192              is_gprs_online=0;
   \   0000003C   444285E5           STR      R4,[R5, #+580]
   1193              strcpy(logmsg,LG_GRWAITFORGPRS);
   \   00000040   4C1087E2           ADD      R1,R7,#+76
   \   00000044   050086E0           ADD      R0,R6,R5
   \   00000048   1A0000EF           SWI      +26
   1194              SMART_REDRAW();
   \   0000004C   700000EA           B        ??create_connect_2
   1195              return;
   1196            }
   1197            DNR_ID=0;
   1198            *socklasterr()=0;
   1199          
   1200            if(host_counter > GetHostsCount(NATICQ_HOST)-1) host_counter = 0;
   \                     ??create_connect_1:
   \   00000050   3C829FE5           LDR      R8,??create_connect_0+0x4  ;; NATICQ_HOST
   1201            GetHost(host_counter, NATICQ_HOST, hostbuf);
   1202            hostport = GetPort(host_counter, NATICQ_HOST);
   1203            host_counter++;
   1204          
   1205            sprintf(hostname, "%s:%d", hostbuf, hostport);
   1206          
   1207            SMART_REDRAW();
   1208          
   1209            ip=str2ip(hostbuf);
   1210            if (ip!=0xFFFFFFFF)
   \   00000054   ........           LDR      R9,??DataTable35  ;; lgpData
   \   00000058   ........           LDR      R10,??DataTable36  ;; do_reconnect
   \   0000005C   644285E5           STR      R4,[R5, #+612]
   \   00000060   7C8100EF           SWI      +33148
   \   00000064   004080E5           STR      R4,[R0, #+0]
   \   00000068   0800A0E1           MOV      R0,R8
   \   0000006C   ........           BL       GetHostsCount
   \   00000070   6C1295E5           LDR      R1,[R5, #+620]
   \   00000074   010040E2           SUB      R0,R0,#+1
   \   00000078   010050E1           CMP      R0,R1
   \   0000007C   6C4285B5           STRLT    R4,[R5, #+620]
   \   00000080   6C0295E5           LDR      R0,[R5, #+620]
   \   00000084   14208DE2           ADD      R2,SP,#+20
   \   00000088   0810A0E1           MOV      R1,R8
   \   0000008C   ........           BL       GetHost
   \   00000090   6C0295E5           LDR      R0,[R5, #+620]
   \   00000094   0810A0E1           MOV      R1,R8
   \   00000098   ........           BL       GetPort
   \   0000009C   0080A0E1           MOV      R8,R0
   \   000000A0   6C0295E5           LDR      R0,[R5, #+620]
   \   000000A4   0830A0E1           MOV      R3,R8
   \   000000A8   010080E2           ADD      R0,R0,#+1
   \   000000AC   6C0285E5           STR      R0,[R5, #+620]
   \   000000B0   14208DE2           ADD      R2,SP,#+20
   \   000000B4   441087E2           ADD      R1,R7,#+68
   \   000000B8   800F86E2           ADD      R0,R6,#+512
   \   000000BC   050080E0           ADD      R0,R0,R5
   \   000000C0   160000EF           SWI      +22
   \   000000C4   ........           BL       SMART_REDRAW
   \   000000C8   14008DE2           ADD      R0,SP,#+20
   \   000000CC   B70100EF           SWI      +439
   \   000000D0   04B0E0E1           MVN      R11,R4
   \   000000D4   0B0050E1           CMP      R0,R11
   \   000000D8   0500000A           BEQ      ??create_connect_3
   1211            {
   1212              sa.ip=ip;
   \   000000DC   08008DE5           STR      R0,[SP, #+8]
   1213              strcpy(logmsg,"\nConnect by IP!");
   \   000000E0   341087E2           ADD      R1,R7,#+52
   \   000000E4   050086E0           ADD      R0,R6,R5
   \   000000E8   1A0000EF           SWI      +26
   1214              SMART_REDRAW();
   \   000000EC   ........           BL       SMART_REDRAW
   1215              goto L_CONNECT;
   \   000000F0   310000EA           B        ??create_connect_4
   1216            }
   1217            strcpy(logmsg,LG_GRSENDDNR);
   \                     ??create_connect_3:
   \   000000F4   281087E2           ADD      R1,R7,#+40
   \   000000F8   050086E0           ADD      R0,R6,R5
   \   000000FC   1A0000EF           SWI      +26
   1218            SMART_REDRAW();
   \   00000100   ........           BL       SMART_REDRAW
   1219            err=async_gethostbyname(hostbuf,&p_res,&DNR_ID); //03461351 3<70<19<81
   \   00000104   992F85E2           ADD      R2,R5,#+612
   \   00000108   0D10A0E1           MOV      R1,SP
   \   0000010C   14008DE2           ADD      R0,SP,#+20
   \   00000110   B60100EF           SWI      +438
   \   00000114   0030B0E1           MOVS     R3,R0
   1220            if (err)
   \   00000118   1700000A           BEQ      ??create_connect_5
   1221            {
   1222              if ((err==0xC9)||(err==0xD6))
   \   0000011C   C90053E3           CMP      R3,#+201
   \   00000120   D6005313           CMPNE    R3,#+214
   \   00000124   0600001A           BNE      ??create_connect_6
   1223              {
   1224                if (DNR_ID)
   \   00000128   640295E5           LDR      R0,[R5, #+612]
   \   0000012C   000050E3           CMP      R0,#+0
   \   00000130   1100000A           BEQ      ??create_connect_5
   1225                {
   1226                  host_counter--;
   \   00000134   6C0295E5           LDR      R0,[R5, #+620]
   \   00000138   010040E2           SUB      R0,R0,#+1
   \   0000013C   6C0285E5           STR      R0,[R5, #+620]
   1227          	return; //Ждем готовности DNR
   \   00000140   340000EA           B        ??create_connect_7
   1228                }
   1229              }
   1230              else
   1231              {
   1232                snprintf(logmsg,255,LG_GRDNRERROR,err);
   \                     ??create_connect_6:
   \   00000144   182087E2           ADD      R2,R7,#+24
   \   00000148   FF10A0E3           MOV      R1,#+255
   \   0000014C   050086E0           ADD      R0,R6,R5
   \   00000150   1B0100EF           SWI      +283
   1233                SMART_REDRAW();
   \   00000154   ........           BL       SMART_REDRAW
   1234                GBS_StartTimerProc(&reconnect_tmr,TMR_SECOND*RECONNECT_TIME,do_reconnect);
   \                     ??create_connect_8:
   \   00000158   ........           LDR      R0,??DataTable37  ;; RECONNECT_TIME
   \   0000015C   0A20A0E1           MOV      R2,R10
   \   00000160   000090E5           LDR      R0,[R0, #+0]
   \   00000164   D830A0E3           MOV      R3,#+216
   \   00000168   930001E0           MUL      R1,R3,R0
   \   0000016C   420E83E3           ORR      R0,R3,#0x420
   \   00000170   050080E0           ADD      R0,R0,R5
   \   00000174   4D0000EF           SWI      +77
   1235                return;
   \   00000178   260000EA           B        ??create_connect_7
   1236              }
   1237            }
   1238            if (p_res)
   \                     ??create_connect_5:
   \   0000017C   00009DE5           LDR      R0,[SP, #+0]
   \   00000180   000050E3           CMP      R0,#+0
   \   00000184   3700000A           BEQ      ??create_connect_9
   1239            {
   1240              if (p_res[3])
   \   00000188   0C0090E5           LDR      R0,[R0, #+12]
   \   0000018C   000050E3           CMP      R0,#+0
   \   00000190   3C00000A           BEQ      ??create_connect_10
   1241              {
   1242                strcpy(logmsg,LG_GRDNROK);
   \   00000194   0710A0E1           MOV      R1,R7
   \   00000198   050086E0           ADD      R0,R6,R5
   \   0000019C   1A0000EF           SWI      +26
   1243                SMART_REDRAW();
   \   000001A0   ........           BL       SMART_REDRAW
   1244                DNR_TRIES=0;
   \   000001A4   684285E5           STR      R4,[R5, #+616]
   1245                sa.ip=p_res[3][0][0];
   \   000001A8   00109DE5           LDR      R1,[SP, #+0]
   \   000001AC   0C1091E5           LDR      R1,[R1, #+12]
   \   000001B0   001091E5           LDR      R1,[R1, #+0]
   \   000001B4   001091E5           LDR      R1,[R1, #+0]
   \   000001B8   08108DE5           STR      R1,[SP, #+8]
   1246              L_CONNECT:
   1247                sock=socket(1,1,0);
   \                     ??create_connect_4:
   \   000001BC   0020A0E3           MOV      R2,#+0
   \   000001C0   0110A0E3           MOV      R1,#+1
   \   000001C4   0100A0E1           MOV      R0,R1
   \   000001C8   730100EF           SWI      +371
   \   000001CC   280285E5           STR      R0,[R5, #+552]
   1248                if (sock!=-1)
   \   000001D0   0B0050E1           CMP      R0,R11
   \   000001D4   1A00000A           BEQ      ??create_connect_11
   1249                {
   1250          	sa.family=1;
   \   000001D8   0160A0E3           MOV      R6,#+1
   \   000001DC   B460CDE1           STRH     R6,[SP, #+4]
   1251          	sa.port=htons(hostport);
   \   000001E0   0808A0E1           MOV      R0,R8, LSL #+16
   \   000001E4   2008A0E1           MOV      R0,R0, LSR #+16
   \   000001E8   7A0100EF           SWI      +378
   \   000001EC   B600CDE1           STRH     R0,[SP, #+6]
   1252          	//    sa.ip=htonl(IP_ADDR(82,207,89,182));
   1253          	if (connect(sock,&sa,sizeof(sa))!=-1)
   \   000001F0   280295E5           LDR      R0,[R5, #+552]
   \   000001F4   1020A0E3           MOV      R2,#+16
   \   000001F8   04108DE2           ADD      R1,SP,#+4
   \   000001FC   740100EF           SWI      +372
   \   00000200   0B0050E1           CMP      R0,R11
   \   00000204   0500000A           BEQ      ??create_connect_12
   1254          	{
   1255          	  connect_state=1;
   \   00000208   246285E5           STR      R6,[R5, #+548]
   1256          	  TOTALRECEIVED=0;
   \   0000020C   2C4285E5           STR      R4,[R5, #+556]
   1257          	  TOTALSENDED=0;
   \   00000210   304285E5           STR      R4,[R5, #+560]
   1258          	  SMART_REDRAW();
   \                     ??create_connect_2:
   \   00000214   ........           BL       SMART_REDRAW
   \                     ??create_connect_7:
   \   00000218   94D08DE2           ADD      SP,SP,#+148
   \   0000021C   F08FBDE8           POP      {R4-R11,PC}
   1259          	}
   1260          	else
   1261          	{
   1262          	  closesocket(sock);
   \                     ??create_connect_12:
   \   00000220   280295E5           LDR      R0,[R5, #+552]
   \   00000224   760100EF           SWI      +374
   1263          	  sock=-1;
   \   00000228   28B285E5           STR      R11,[R5, #+552]
   1264          	  LockSched();
   \   0000022C   460100EF           SWI      +326
   1265          	  ShowMSG(1,(int)lgpData[LGP_MsgCantConn]);
   \   00000230   1C1199E5           LDR      R1,[R9, #+284]
   \   00000234   0100A0E3           MOV      R0,#+1
   \   00000238   480100EF           SWI      +328
   1266          	  UnlockSched();
   \   0000023C   470100EF           SWI      +327
   1267          	  GBS_StartTimerProc(&reconnect_tmr,TMR_SECOND*RECONNECT_TIME,do_reconnect);
   \   00000240   C4FFFFEA           B        ??create_connect_8
   1268          	}
   1269                }
   1270                else
   1271                {
   1272          	LockSched();
   \                     ??create_connect_11:
   \   00000244   460100EF           SWI      +326
   1273          	ShowMSG(1,(int)lgpData[LGP_MsgCantCrSc]);
   \   00000248   201199E5           LDR      R1,[R9, #+288]
   \   0000024C   0100A0E3           MOV      R0,#+1
   \   00000250   480100EF           SWI      +328
   1274          	UnlockSched();
   \   00000254   470100EF           SWI      +327
   1275          	//Не осилили создания сокета, закрываем GPRS-сессию
   1276          	GPRS_OnOff(0,1);
   \   00000258   0110A0E3           MOV      R1,#+1
   \   0000025C   0000A0E3           MOV      R0,#+0
   \   00000260   8E0100EF           SWI      +398
   \   00000264   EBFFFFEA           B        ??create_connect_7
   1277                }
   1278              }
   1279            }
   1280            else
   1281            {
   1282              DNR_TRIES--;
   \                     ??create_connect_9:
   \   00000268   680295E5           LDR      R0,[R5, #+616]
   \   0000026C   010040E2           SUB      R0,R0,#+1
   \   00000270   680285E5           STR      R0,[R5, #+616]
   1283              LockSched();
   \   00000274   460100EF           SWI      +326
   1284              ShowMSG(1,(int)lgpData[LGP_MsgHostNFnd]);
   \   00000278   241199E5           LDR      R1,[R9, #+292]
   \   0000027C   0100A0E3           MOV      R0,#+1
   \   00000280   480100EF           SWI      +328
   1285              UnlockSched();
   \   00000284   470100EF           SWI      +327
   \                     ??create_connect_10:
   \   00000288   94D08DE2           ADD      SP,SP,#+148      ;; stack cleaning
   \   0000028C   F08FBDE8           POP      {R4-R11,PC}      ;; return
   \                     ??create_connect_0:
   \   00000290   ........           DC32     `?<Constant "DNR Ok, connecting...">`
   \   00000294   ........           DC32     NATICQ_HOST
   1286            }
   1287          }
   1288          
   1289          #ifdef SEND_TIMER
   1290          GBSTMR send_tmr;
   1291          #endif
   1292          

   \                                 In segment CODE, align 4, keep-with-next
   1293          void ClearSendQ(void)
   1294          {
   \                     ClearSendQ:
   \   00000000   10402DE9           PUSH     {R4,LR}
   1295            mfree((void *)sendq_p);
   \   00000004   ........           LDR      R4,??DataTable41  ;; contactlist_menuhdr
   \   00000008   400294E5           LDR      R0,[R4, #+576]
   \   0000000C   150000EF           SWI      +21
   1296            sendq_p=NULL;
   \   00000010   0000A0E3           MOV      R0,#+0
   \   00000014   400284E5           STR      R0,[R4, #+576]
   1297            sendq_l=NULL;
   \   00000018   3C0284E5           STR      R0,[R4, #+572]
   1298          #ifdef SEND_TIMER
   1299            GBS_DelTimer(&send_tmr);
   1300          #endif
   1301          }
   \   0000001C   1080BDE8           POP      {R4,PC}          ;; return
   1302          

   \                                 In segment CODE, align 4, keep-with-next
   1303          void end_socket(void)
   1304          {
   \                     end_socket:
   \   00000000   10402DE9           PUSH     {R4,LR}
   1305            if (sock>=0)
   \   00000004   ........           LDR      R4,??DataTable41  ;; contactlist_menuhdr
   \   00000008   280294E5           LDR      R0,[R4, #+552]
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   1080BD48           POPMI    {R4,PC}
   1306            {
   1307              shutdown(sock,2);
   \   00000014   0210A0E3           MOV      R1,#+2
   \   00000018   770100EF           SWI      +375
   1308              closesocket(sock);
   \   0000001C   280294E5           LDR      R0,[R4, #+552]
   \   00000020   760100EF           SWI      +374
   1309            }
   1310          #ifdef SEND_TIMER
   1311            GBS_DelTimer(&send_tmr);
   1312          #endif
   1313          }
   \   00000024   1080BDE8           POP      {R4,PC}          ;; return
   1314          
   1315          #ifdef SEND_TIMER
   1316          static void resend(void)
   1317          {
   1318            void SendAnswer(int dummy, TPKT *p);
   1319            SUBPROC((void*)SendAnswer,0,0);
   1320          }
   1321          #endif
   1322          

   \                                 In segment CODE, align 4, keep-with-next
   1323          void SendAnswer(int dummy, TPKT *p)
   1324          {
   \                     SendAnswer:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   1325            int i;
   1326            int j;
   1327            if (connect_state<2)
   \   00000004   ........           LDR      R4,??DataTable41  ;; contactlist_menuhdr
   \   00000008   0160A0E1           MOV      R6,R1
   \   0000000C   240294E5           LDR      R0,[R4, #+548]
   \   00000010   020050E3           CMP      R0,#+2
   \   00000014   020000AA           BGE      ??SendAnswer_0
   1328            {
   1329              mfree(p);
   \   00000018   0600A0E1           MOV      R0,R6
   \   0000001C   150000EF           SWI      +21
   1330              return;
   \   00000020   F083BDE8           POP      {R4-R9,PC}
   1331            }
   1332            if (p)
   \                     ??SendAnswer_0:
   \   00000024   000056E3           CMP      R6,#+0
   \   00000028   2600000A           BEQ      ??SendAnswer_1
   1333            {
   1334              j=sizeof(PKT)+p->pkt.data_len; //Размер пакета
   \   0000002C   B600D6E1           LDRH     R0,[R6, #+6]
   \   00000030   085080E2           ADD      R5,R0,#+8
   1335              TOTALSENDED+=j;
   \   00000034   300294E5           LDR      R0,[R4, #+560]
   \   00000038   000085E0           ADD      R0,R5,R0
   \   0000003C   300284E5           STR      R0,[R4, #+560]
   1336              ALLTOTALSENDED+=j;			//by BoBa 10.07
   \   00000040   380294E5           LDR      R0,[R4, #+568]
   \   00000044   000085E0           ADD      R0,R5,R0
   \   00000048   380284E5           STR      R0,[R4, #+568]
   1337              //Проверяем, не надо ли добавить в очередь
   1338              if (sendq_p)
   \   0000004C   400294E5           LDR      R0,[R4, #+576]
   \   00000050   000050E3           CMP      R0,#+0
   \   00000054   0F00000A           BEQ      ??SendAnswer_2
   1339              {
   1340                //Есть очередь, добавляем в нее
   1341                sendq_p=realloc((void *)sendq_p,sendq_l+j);
   \   00000058   3C1294E5           LDR      R1,[R4, #+572]
   \   0000005C   011085E0           ADD      R1,R5,R1
   \   00000060   BA0000EF           SWI      +186
   \   00000064   400284E5           STR      R0,[R4, #+576]
   1342                memcpy((char *)sendq_p+sendq_l,p,j);
   \   00000068   3C0294E5           LDR      R0,[R4, #+572]
   \   0000006C   403294E5           LDR      R3,[R4, #+576]
   \   00000070   0520A0E1           MOV      R2,R5
   \   00000074   0610A0E1           MOV      R1,R6
   \   00000078   030080E0           ADD      R0,R0,R3
   \   0000007C   1E0100EF           SWI      +286
   1343                mfree(p);
   \   00000080   0600A0E1           MOV      R0,R6
   \   00000084   150000EF           SWI      +21
   1344                sendq_l+=j;
   \   00000088   3C0294E5           LDR      R0,[R4, #+572]
   \   0000008C   000085E0           ADD      R0,R5,R0
   \   00000090   3C0284E5           STR      R0,[R4, #+572]
   1345                return;
   \   00000094   F083BDE8           POP      {R4-R9,PC}
   1346              }
   1347              sendq_p=p;
   \                     ??SendAnswer_2:
   \   00000098   406284E5           STR      R6,[R4, #+576]
   1348              sendq_l=j;
   \   0000009C   3C5284E5           STR      R5,[R4, #+572]
   \   000000A0   080000EA           B        ??SendAnswer_1
   1349            }
   1350            //Отправляем уже существующее в очереди
   1351            while((i=sendq_l)!=0)
   1352            {
   1353              if (i>0x400) i=0x400;
   1354              j=send(sock,(void *)sendq_p,i,0);
   1355              snprintf(logmsg,255,"send res %d",j);
   1356              SMART_REDRAW();
   1357              if (j<0)
   1358              {
   1359                j=*socklasterr();
   1360                if ((j==0xC9)||(j==0xD6))
   1361                {
   1362          	//Передали что хотели
   1363          	strcpy(logmsg,"Send delayed...");
   1364          	return; //Видимо, надо ждать сообщения ENIP_BUFFER_FREE
   1365                }
   1366                else
   1367                {
   1368          	//Ошибка
   1369          	LockSched();
   1370          	ShowMSG(1,(int)"Send error!");
   1371          	UnlockSched();
   1372          	end_socket();
   1373          	return;
   1374                }
   1375              }
   1376              memcpy((void *)sendq_p,(char *)sendq_p+j,sendq_l-=j); //Удалили переданное
   \                     ??SendAnswer_3:
   \   000000A4   3C0294E5           LDR      R0,[R4, #+572]
   \   000000A8   052040E0           SUB      R2,R0,R5
   \   000000AC   3C2284E5           STR      R2,[R4, #+572]
   \   000000B0   400294E5           LDR      R0,[R4, #+576]
   \   000000B4   001085E0           ADD      R1,R5,R0
   \   000000B8   1E0100EF           SWI      +286
   1377              if (j<i)
   \   000000BC   060055E1           CMP      R5,R6
   \   000000C0   F083BDB8           POPLT    {R4-R9,PC}
   1378              {
   1379                //Передали меньше чем заказывали
   1380          #ifdef SEND_TIMER
   1381                GBS_StartTimerProc(&send_tmr,216*5,resend);
   1382          #endif
   1383                return; //Ждем сообщения ENIP_BUFFER_FREE1
   1384              }
   1385              tenseconds_to_ping=0; //Чего-то послали, можно начинать отсчет времени до пинга заново
   \   000000C4   607284E5           STR      R7,[R4, #+608]
   \                     ??SendAnswer_1:
   \   000000C8   3C6294E5           LDR      R6,[R4, #+572]
   \   000000CC   401294E5           LDR      R1,[R4, #+576]
   \   000000D0   0070A0E3           MOV      R7,#+0
   \   000000D4   000056E3           CMP      R6,#+0
   \   000000D8   2200000A           BEQ      ??SendAnswer_4
   \   000000DC   94909FE5           LDR      R9,??SendAnswer_5  ;; `?<Constant "Send error!">`
   \   000000E0   0100A0E3           MOV      R0,#+1
   \   000000E4   400E80E3           ORR      R0,R0,#0x400
   \   000000E8   000056E1           CMP      R6,R0
   \   000000EC   280294E5           LDR      R0,[R4, #+552]
   \   000000F0   406EA0A3           MOVGE    R6,#+1024
   \   000000F4   0030A0E3           MOV      R3,#+0
   \   000000F8   0620A0E1           MOV      R2,R6
   \   000000FC   790100EF           SWI      +377
   \   00000100   0050A0E1           MOV      R5,R0
   \   00000104   F68FA0E3           MOV      R8,#+984
   \   00000108   0530A0E1           MOV      R3,R5
   \   0000010C   1C2089E2           ADD      R2,R9,#+28
   \   00000110   FF10A0E3           MOV      R1,#+255
   \   00000114   040088E0           ADD      R0,R8,R4
   \   00000118   1B0100EF           SWI      +283
   \   0000011C   ........           BL       SMART_REDRAW
   \   00000120   000055E3           CMP      R5,#+0
   \   00000124   DEFFFF5A           BPL      ??SendAnswer_3
   \   00000128   7C8100EF           SWI      +33148
   \   0000012C   005090E5           LDR      R5,[R0, #+0]
   \   00000130   C90055E3           CMP      R5,#+201
   \   00000134   D6005513           CMPNE    R5,#+214
   \   00000138   0300001A           BNE      ??SendAnswer_6
   \   0000013C   0C1089E2           ADD      R1,R9,#+12
   \   00000140   040088E0           ADD      R0,R8,R4
   \   00000144   1A0000EF           SWI      +26
   \   00000148   F083BDE8           POP      {R4-R9,PC}
   \                     ??SendAnswer_6:
   \   0000014C   460100EF           SWI      +326
   \   00000150   0910A0E1           MOV      R1,R9
   \   00000154   0100A0E3           MOV      R0,#+1
   \   00000158   480100EF           SWI      +328
   \   0000015C   470100EF           SWI      +327
   \   00000160   ........           BL       end_socket
   \   00000164   F083BDE8           POP      {R4-R9,PC}
   1386            }
   1387            mfree((void *)sendq_p);
   \                     ??SendAnswer_4:
   \   00000168   0100A0E1           MOV      R0,R1
   \   0000016C   150000EF           SWI      +21
   1388            sendq_p=NULL;
   \   00000170   407284E5           STR      R7,[R4, #+576]
   1389          }
   \   00000174   F083BDE8           POP      {R4-R9,PC}       ;; return
   \                     ??SendAnswer_5:
   \   00000178   ........           DC32     `?<Constant "Send error!">`
   1390          

   \                                 In segment CODE, align 4, keep-with-next
   1391          void send_login(int dummy, TPKT *p)
   1392          {
   1393            connect_state=2;
   1394            char rev[16];
   1395            //Кто будет менять в этом месте идентификатор клиента, буду банить на уровне сервера!!!
   1396            //А Вова будет банить на форуме!
   1397            snprintf(rev,9,"Sie_%04d",__SVN_REVISION__);
   \                     send_login:
   \   00000000   88209FE5           LDR      R2,??send_login_0  ;; `?<Constant "Sie_%04d">`
   \   00000004   F0402DE9           PUSH     {R4-R7,LR}
   \   00000008   ........           LDR      R6,??DataTable41  ;; contactlist_menuhdr
   \   0000000C   10D04DE2           SUB      SP,SP,#+16
   \   00000010   0040A0E1           MOV      R4,R0
   \   00000014   0150A0E1           MOV      R5,R1
   \   00000018   0200A0E3           MOV      R0,#+2
   \   0000001C   240286E5           STR      R0,[R6, #+548]
   \   00000020   0330A0E3           MOV      R3,#+3
   \   00000024   703E83E3           ORR      R3,R3,#0x700
   \   00000028   0910A0E3           MOV      R1,#+9
   \   0000002C   0D00A0E1           MOV      R0,SP
   \   00000030   1B0100EF           SWI      +283
   1398          
   1399            TPKT *p2=malloc(sizeof(PKT)+8);
   \   00000034   1000A0E3           MOV      R0,#+16
   \   00000038   140000EF           SWI      +20
   \   0000003C   0070A0E1           MOV      R7,R0
   1400            p2->pkt.uin=UIN;
   \   00000040   ........           LDR      R0,??DataTable43  ;; UIN
   1401            p2->pkt.type=T_SETCLIENT_ID;
   1402            p2->pkt.data_len=8;
   1403            memcpy(p2->data,rev,8);
   \   00000044   0820A0E3           MOV      R2,#+8
   \   00000048   000090E5           LDR      R0,[R0, #+0]
   \   0000004C   0D10A0E1           MOV      R1,SP
   \   00000050   000087E5           STR      R0,[R7, #+0]
   \   00000054   2000A0E3           MOV      R0,#+32
   \   00000058   B400C7E1           STRH     R0,[R7, #+4]
   \   0000005C   0800A0E3           MOV      R0,#+8
   \   00000060   B600C7E1           STRH     R0,[R7, #+6]
   \   00000064   080087E2           ADD      R0,R7,#+8
   \   00000068   1E0100EF           SWI      +286
   1404            SendAnswer(0,p2);
   \   0000006C   0710A0E1           MOV      R1,R7
   \   00000070   0000A0E3           MOV      R0,#+0
   \   00000074   ........           BL       SendAnswer
   1405            SendAnswer(dummy,p);
   \   00000078   0510A0E1           MOV      R1,R5
   \   0000007C   0400A0E1           MOV      R0,R4
   \   00000080   ........           BL       SendAnswer
   1406            RXstate=-(int)sizeof(PKT);
   \   00000084   0700E0E3           MVN      R0,#+7
   \   00000088   200286E5           STR      R0,[R6, #+544]
   1407          }
   \   0000008C   FF80BDE8           POP      {R0-R7,PC}       ;; return
   \                     ??send_login_0:
   \   00000090   ........           DC32     `?<Constant "Sie_%04d">`
   1408          

   \                                 In segment CODE, align 4, keep-with-next
   1409          void do_ping(void)
   1410          {
   \                     do_ping:
   \   00000000   00402DE9           PUSH     {LR}
   1411            TPKT *pingp=malloc(sizeof(PKT));
   \   00000004   0800A0E3           MOV      R0,#+8
   \   00000008   140000EF           SWI      +20
   1412            pingp->pkt.uin=UIN;
   \   0000000C   ........           LDR      R1,??DataTable43  ;; UIN
   \   00000010   001091E5           LDR      R1,[R1, #+0]
   \   00000014   001080E5           STR      R1,[R0, #+0]
   1413            pingp->pkt.type=0;
   \   00000018   0010A0E3           MOV      R1,#+0
   \   0000001C   B410C0E1           STRH     R1,[R0, #+4]
   1414            pingp->pkt.data_len=0;
   \   00000020   B610C0E1           STRH     R1,[R0, #+6]
   1415            SendAnswer(0,pingp);
   \   00000024   0010A0E1           MOV      R1,R0
   \   00000028   0000A0E3           MOV      R0,#+0
   \   0000002C   0040BDE8           POP      {LR}             ;; Pop
   \   00000030   ........           B        SendAnswer       ;; tailcall
   1416          }
   1417          

   \                                 In segment CODE, align 4, keep-with-next
   1418          void SendMSGACK(int i)
   1419          {
   \                     SendMSGACK:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   1420            TPKT *ackp=malloc(sizeof(PKT));
   \   00000008   0800A0E3           MOV      R0,#+8
   \   0000000C   140000EF           SWI      +20
   1421            ackp->pkt.uin=i;
   \   00000010   004080E5           STR      R4,[R0, #+0]
   1422            ackp->pkt.type=T_MSGACK;
   \   00000014   1710A0E3           MOV      R1,#+23
   \   00000018   B410C0E1           STRH     R1,[R0, #+4]
   1423            ackp->pkt.data_len=0;
   \   0000001C   0010A0E3           MOV      R1,#+0
   \   00000020   B610C0E1           STRH     R1,[R0, #+6]
   1424            SendAnswer(0,ackp);
   \   00000024   0010A0E1           MOV      R1,R0
   \   00000028   0000A0E3           MOV      R0,#+0
   \   0000002C   1040BDE8           POP      {R4,LR}          ;; Pop
   \   00000030   ........           B        SendAnswer       ;; tailcall
   1425          }
   1426          

   \                                 In segment CODE, align 4, keep-with-next
   1427          void RequestXText(unsigned int uin)
   1428          {
   \                     RequestXText:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   1429            TPKT *p=malloc(sizeof(PKT));
   \   00000008   0800A0E3           MOV      R0,#+8
   \   0000000C   140000EF           SWI      +20
   1430            p->pkt.uin=uin;
   \   00000010   004080E5           STR      R4,[R0, #+0]
   1431            p->pkt.type=T_XTEXT_REQ;
   \   00000014   1810A0E3           MOV      R1,#+24
   \   00000018   B410C0E1           STRH     R1,[R0, #+4]
   1432            p->pkt.data_len=0;
   \   0000001C   0010A0E3           MOV      R1,#+0
   \   00000020   B610C0E1           STRH     R1,[R0, #+6]
   1433            SUBPROC((void *)SendAnswer,0,p);
   \   00000024   0020A0E1           MOV      R2,R0
   \   00000028   ........           LDR      R0,??DataTable75  ;; SendAnswer
   \   0000002C   710100EF           SWI      +369
   1434          }
   \   00000030   1080BDE8           POP      {R4,PC}          ;; return
   1435          

   \                                 In segment CODE, align 4, keep-with-next
   1436          void get_answer(void)
   1437          {
   \                     get_answer:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   1438            void *p;
   1439            int i=RXstate;
   \   00000004   ........           LDR      R5,??DataTable78  ;; contactlist_menuhdr
   \   00000008   14D04DE2           SUB      SP,SP,#+20
   \   0000000C   70DD4DE2           SUB      SP,SP,#+7168
   1440            int j;
   1441            int n;
   1442            char rb[7168];
   1443            char *rp=rb;
   1444            if (connect_state<2) return;
   \   00000010   240295E5           LDR      R0,[R5, #+548]
   \   00000014   209295E5           LDR      R9,[R5, #+544]
   \   00000018   14108DE2           ADD      R1,SP,#+20
   \   0000001C   00108DE5           STR      R1,[SP, #+0]
   \   00000020   020050E3           CMP      R0,#+2
   \   00000024   180100BA           BLT      ??get_answer_1
   \   00000028   0A0079E3           CMN      R9,#+10
   \   0000002C   1601000A           BEQ      ??get_answer_1
   1445            if (i==EOP) return;
   1446            j=recv(sock,rb,sizeof(rb),0);
   \   00000030   280295E5           LDR      R0,[R5, #+552]
   \   00000034   64649FE5           LDR      R6,??get_answer_2+0x8  ;; RXbuf
   \   00000038   64749FE5           LDR      R7,??get_answer_2+0xC  ;; `?<Constant "Ping %d-%d seconds!">`
   \   0000003C   0030A0E3           MOV      R3,#+0
   \   00000040   702DA0E3           MOV      R2,#+7168
   \   00000044   780100EF           SWI      +376
   \   00000048   0080A0E1           MOV      R8,R0
   \   0000004C   AEA0A0E3           MOV      R10,#+174
   \   00000050   DEAC8AE3           ORR      R10,R10,#0xDE00
   \   00000054   0E0000EA           B        ??get_answer_3
   1447            while(j>0)
   1448            {
   1449              if (i<0)
   1450              {
   1451                //Принимаем заголовок
   1452                n=-i; //Требуемое количество байт
   1453                if (j<n) n=j; //полученное<требуемое?
   1454                memcpy(RXbuf.data+i,rp,n); //Копируем
   1455                i+=n;
   1456                j-=n;
   1457                rp+=n;
   1458              }
   1459              if (i>=0)
   1460              {
   1461                //Принимаем тельце ;)
   1462                n=RXbuf.pkt.data_len; //Всего в тельце
   1463                if (n>16383)
   1464                {
   1465          	//Слишком много
   1466          	strcpy(logmsg,LG_GRBADPACKET);
   1467          	end_socket();
   1468          	RXstate=EOP;
   1469          	return;
   1470                }
   1471                n-=i; //Количество требуемых байт (общая длинна тельца-текущая позиция)
   1472                if (n>0)
   1473                {
   1474          	if (j<n) n=j; //полученное<требуемое?
   1475          	memcpy(RXbuf.data+i,rp,n);
   1476          	i+=n;
   1477          	j-=n;
   1478          	rp+=n;
   1479                }
   1480                if (RXbuf.pkt.data_len==i)
   1481                {
   1482          	//Пакет полностью получен
   1483          	TOTALRECEIVED+=(i+8);
   1484          	ALLTOTALRECEIVED+=(i+8);			//by BoBa 10.07
   1485          	//Пакет удачно принят, можно разбирать...
   1486          	RXbuf.data[i]=0; //Конец строки
   1487          	switch(RXbuf.pkt.type)
   1488          	{
   1489          	case T_LOGIN:
   1490          	  //Удачно залогинились
   1491          	  //Посылаем в MMI
   1492          	  n=i+sizeof(PKT)+1;
   1493          	  p=malloc(n);
   1494          	  memcpy(p,&RXbuf,n);
   1495          	  GBS_SendMessage(MMI_CEPID,MSG_HELPER_TRANSLATOR,0,p,sock);
   1496          	  Play(sndStartup);
   1497          	  //        GBS_StartTimerProc(&tmr_ping,120*TMR_SECOND,call_ping);
   1498          	  snprintf(logmsg,255,LG_GRLOGINMSG,RXbuf.data);
   1499          	  connect_state=3;
   1500                    host_counter--; //Если уж законнектились, будем сидеть на этом сервере
   1501          	  SMART_REDRAW();
   1502          	  break;
   1503          	case T_XTEXT_ACK:
   1504          	case T_GROUPID:
   1505          	case T_GROUPFOLLOW:
   1506          	case T_CLENTRY:
   1507                  case T_CONTACTREMOVED: 
   1508          	  //Посылаем в MMI
   1509          	  n=i+sizeof(PKT)+1;
   1510          	  p=malloc(n);
   1511          	  memcpy(p,&RXbuf,n);
   1512          	  GBS_SendMessage(MMI_CEPID,MSG_HELPER_TRANSLATOR,0,p,sock);
   1513          	  //snprintf(logmsg,255,"CL: %s",RXbuf.data);
   1514          	  break;
   1515          	case T_STATUSCHANGE:
   1516          	  n=i+sizeof(PKT);
   1517          	  p=malloc(n);
   1518          	  memcpy(p,&RXbuf,n);
   1519          	  snprintf(logmsg,255,LG_GRSTATUSCHNG,RXbuf.pkt.uin,*((unsigned short *)(RXbuf.data)));
   1520          	  GBS_SendMessage(MMI_CEPID,MSG_HELPER_TRANSLATOR,0,p,sock);
   1521          	  break;
   1522          	case T_ERROR:
   1523                    if(strstr(RXbuf.data, "Error code 1") || strstr(RXbuf.data, "110"))
   1524                    {
   1525                      snprintf(logmsg,255,LG_GRERROR,LG_GRDBLCONNECT);
   1526                      disautorecconect = 1;
   1527                    }
   1528                    else
   1529                    {
   1530                      snprintf(logmsg,255,LG_GRERROR,RXbuf.data);
   1531                      ShowMSG(1,(int)logmsg);
   1532                    }
   1533          
   1534          	  SMART_REDRAW();
   1535          	  break;
   1536          	case T_RECVMSG:
   1537          	  n=i+sizeof(PKT)+1;
   1538          	  p=malloc(n);
   1539          	  memcpy(p,&RXbuf,n);
   1540          	  {
   1541          	    char *s=p;
   1542          	    s+=sizeof(PKT);
   1543          	    int c;
   1544          	    while((c=*s))
   1545          	    {
   1546          	      if (c<3) *s=' ';
   1547          	      s++;
   1548          	    }
   1549          	  }
   1550          	  snprintf(logmsg,255,LG_GRRECVMSG,RXbuf.pkt.uin,RXbuf.data);
   1551          	  SendMSGACK(TOTALRECEIVED);
   1552          	  GBS_SendMessage(MMI_CEPID,MSG_HELPER_TRANSLATOR,0,p,sock);
   1553          	  SMART_REDRAW();
   1554          	  Play(sndMsg);
   1555          	  break;
   1556          	case T_SSLRESP:
   1557          	  LockSched();
   1558          	  ShowMSG(1,(int)RXbuf.data);
   1559          	  UnlockSched();
   1560          	  break;
   1561          	case T_SRV_ACK:
   1562          	  if (FindContactLOGQByAck(&RXbuf)) Play(sndMsgSent);
   1563          	case T_CLIENT_ACK:
   1564          	  p=malloc(sizeof(PKT)+2);
   1565          	  memcpy(p,&RXbuf,sizeof(PKT)+2);
   1566          	  GBS_SendMessage(MMI_CEPID,MSG_HELPER_TRANSLATOR,0,p,sock);
   1567          	  break;
   1568          	case T_ECHORET:
   1569          	  {
   1570          	    TDate d;
   1571          	    TTime t;
   1572          	    TTime *pt=(TTime *)(RXbuf.data);
   1573          	    int s1;
   1574          	    int s2;
   1575          	    GetDateTime(&d,&t);
   1576          	    s1=t.hour*3600+t.min*60+t.sec;
   1577          	    s2=pt->hour*3600+pt->min*60+pt->sec;
   1578          	    s1-=s2;
   1579          	    if (s1<0) s1+=86400;
   1580          	    snprintf(logmsg,255,"Ping %d-%d seconds!",s1,s1+1);
   1581          	    LockSched();
   1582          	    ShowMSG(1,(int)logmsg);
   1583          	    UnlockSched();
   1584          	  }
   1585          	  break;
   1586                  case T_LASTPRIVACY:
   1587                    n=i+sizeof(PKT);
   \                     ??get_answer_4:
   \   00000058   0040A0E1           MOV      R4,R0
   1588                    p=malloc(n);
   \                     ??get_answer_5:
   \   0000005C   140000EF           SWI      +20
   \   00000060   00B0A0E1           MOV      R11,R0
   1589                    memcpy(p,&RXbuf,n);
   \   00000064   0420A0E1           MOV      R2,R4
   \                     ??get_answer_6:
   \   00000068   0610A0E1           MOV      R1,R6
   \   0000006C   1E0100EF           SWI      +286
   1590          	  GBS_SendMessage(MMI_CEPID,MSG_HELPER_TRANSLATOR,0,p,sock);
   \   00000070   280295E5           LDR      R0,[R5, #+552]
   \   00000074   0B30A0E1           MOV      R3,R11
   \   00000078   01002DE9           PUSH     {R0}
   \   0000007C   0020A0E3           MOV      R2,#+0
   \   00000080   0A10A0E1           MOV      R1,R10
   \   00000084   0900A0E1           MOV      R0,R9
   \   00000088   000100EF           SWI      +256
   \                     ??get_answer_7:
   \   0000008C   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   1591          	  break;
   1592          	}
   1593          	i=-(int)sizeof(PKT); //А может еще есть данные
   \                     ??get_answer_8:
   \   00000090   0790E0E3           MVN      R9,#+7
   \                     ??get_answer_3:
   \   00000094   010058E3           CMP      R8,#+1
   \   00000098   FA0000BA           BLT      ??get_answer_9
   \   0000009C   000059E3           CMP      R9,#+0
   \   000000A0   0C00005A           BPL      ??get_answer_10
   \   000000A4   00109DE5           LDR      R1,[SP, #+0]
   \   000000A8   004069E2           RSB      R4,R9,#+0
   \   000000AC   040058E1           CMP      R8,R4
   \   000000B0   0840A0B1           MOVLT    R4,R8
   \   000000B4   0420A0E1           MOV      R2,R4
   \   000000B8   060089E0           ADD      R0,R9,R6
   \   000000BC   080080E2           ADD      R0,R0,#+8
   \   000000C0   1E0100EF           SWI      +286
   \   000000C4   00109DE5           LDR      R1,[SP, #+0]
   \   000000C8   099084E0           ADD      R9,R4,R9
   \   000000CC   048048E0           SUB      R8,R8,R4
   \   000000D0   011084E0           ADD      R1,R4,R1
   \   000000D4   00108DE5           STR      R1,[SP, #+0]
   \                     ??get_answer_10:
   \   000000D8   000059E3           CMP      R9,#+0
   \   000000DC   ECFFFF4A           BMI      ??get_answer_3
   \   000000E0   B640D6E1           LDRH     R4,[R6, #+6]
   \   000000E4   400C54E3           CMP      R4,#+16384
   \   000000E8   080000BA           BLT      ??get_answer_11
   \   000000EC   641087E2           ADD      R1,R7,#+100
   \   000000F0   F60F85E2           ADD      R0,R5,#+984
   \   000000F4   1A0000EF           SWI      +26
   \   000000F8   ........           BL       end_socket
   \   000000FC   0900E0E3           MVN      R0,#+9
   \   00000100   200285E5           STR      R0,[R5, #+544]
   \   00000104   14D08DE2           ADD      SP,SP,#+20
   \   00000108   70DD8DE2           ADD      SP,SP,#+7168
   \   0000010C   F08FBDE8           POP      {R4-R11,PC}
   \                     ??get_answer_11:
   \   00000110   094044E0           SUB      R4,R4,R9
   \   00000114   010054E3           CMP      R4,#+1
   \   00000118   0B0000BA           BLT      ??get_answer_12
   \   0000011C   00109DE5           LDR      R1,[SP, #+0]
   \   00000120   040058E1           CMP      R8,R4
   \   00000124   0840A0B1           MOVLT    R4,R8
   \   00000128   0420A0E1           MOV      R2,R4
   \   0000012C   060089E0           ADD      R0,R9,R6
   \   00000130   080080E2           ADD      R0,R0,#+8
   \   00000134   1E0100EF           SWI      +286
   \   00000138   00109DE5           LDR      R1,[SP, #+0]
   \   0000013C   099084E0           ADD      R9,R4,R9
   \   00000140   048048E0           SUB      R8,R8,R4
   \   00000144   011084E0           ADD      R1,R4,R1
   \   00000148   00108DE5           STR      R1,[SP, #+0]
   \                     ??get_answer_12:
   \   0000014C   B600D6E1           LDRH     R0,[R6, #+6]
   \   00000150   090050E1           CMP      R0,R9
   \   00000154   CEFFFF1A           BNE      ??get_answer_3
   \   00000158   2C1295E5           LDR      R1,[R5, #+556]
   \   0000015C   080089E2           ADD      R0,R9,#+8
   \   00000160   011080E0           ADD      R1,R0,R1
   \   00000164   2C1285E5           STR      R1,[R5, #+556]
   \   00000168   341295E5           LDR      R1,[R5, #+564]
   \   0000016C   0020A0E3           MOV      R2,#+0
   \   00000170   011080E0           ADD      R1,R0,R1
   \   00000174   341285E5           STR      R1,[R5, #+564]
   \   00000178   061089E0           ADD      R1,R9,R6
   \   0000017C   0820C1E5           STRB     R2,[R1, #+8]
   \   00000180   B410D6E1           LDRH     R1,[R6, #+4]
   \   00000184   F6BF85E2           ADD      R11,R5,#+984
   \   00000188   094089E2           ADD      R4,R9,#+9
   \   0000018C   0990A0E3           MOV      R9,#+9
   \   00000190   429C89E3           ORR      R9,R9,#0x4200
   \   00000194   031041E2           SUB      R1,R1,#+3
   \   00000198   1F0051E3           CMP      R1,#+31
   \   0000019C   BBFFFF8A           BHI      ??get_answer_8
   \   000001A0   022F8FE2           ADR      R2,??get_answer_0
   \   000001A4   8110A0E1           MOV      R1,R1, LSL #+1
   \   000001A8   F12092E1           LDRSH    R2,[R2, R1]
   \   000001AC   02F18FE0           ADD      PC,PC,R2, LSL #+2
   \                     ??get_answer_0:
   \   000001B0   5E000F00B7FF       DC16     +94,+15,+65463,+66
   \              4200        
   \   000001B8   2A00B7FF2C00       DC16     +42,+65463,+44,+65463
   \              B7FF        
   \   000001C0   B7FFB7FF8100       DC16     +65463,+65463,+129,+65463
   \              B7FF        
   \   000001C8   B7FF87008D00       DC16     +65463,+135,+141,+65463
   \              B7FF        
   \   000001D0   92002A002A00       DC16     +146,+42,+42,+65463
   \              B7FF        
   \   000001D8   B7FFB7FF2A00       DC16     +65463,+65463,+42,+65463
   \              B7FF        
   \   000001E0   B7FFB7FFB7FF       DC16     +65463,+65463,+65463,+65463
   \              B7FF        
   \   000001E8   A9FFB7FFB7FF       DC16     +65449,+65463,+65463,+42
   \              2A00        
   \                     ??get_answer_13:
   \   000001F0   0400A0E1           MOV      R0,R4
   \   000001F4   140000EF           SWI      +20
   \   000001F8   00B0A0E1           MOV      R11,R0
   \   000001FC   0420A0E1           MOV      R2,R4
   \   00000200   0610A0E1           MOV      R1,R6
   \   00000204   1E0100EF           SWI      +286
   \   00000208   280295E5           LDR      R0,[R5, #+552]
   \   0000020C   0B30A0E1           MOV      R3,R11
   \   00000210   01002DE9           PUSH     {R0}
   \   00000214   0020A0E3           MOV      R2,#+0
   \   00000218   0A10A0E1           MOV      R1,R10
   \   0000021C   0900A0E1           MOV      R0,R9
   \   00000220   000100EF           SWI      +256
   \   00000224   7C029FE5           LDR      R0,??get_answer_2+0x10  ;; sndStartup
   \   00000228   ........           BL       Play
   \   0000022C   083086E2           ADD      R3,R6,#+8
   \   00000230   982F8FE2           ADR      R2,??get_answer_2  ;; "%s"
   \   00000234   FF10A0E3           MOV      R1,#+255
   \   00000238   F60F85E2           ADD      R0,R5,#+984
   \   0000023C   1B0100EF           SWI      +283
   \   00000240   0300A0E3           MOV      R0,#+3
   \   00000244   240285E5           STR      R0,[R5, #+548]
   \   00000248   6C0295E5           LDR      R0,[R5, #+620]
   \   0000024C   010040E2           SUB      R0,R0,#+1
   \   00000250   6C0285E5           STR      R0,[R5, #+620]
   \   00000254   ........           BL       SMART_REDRAW
   \   00000258   8BFFFFEA           B        ??get_answer_7
   \                     ??get_answer_14:
   \   0000025C   0400A0E1           MOV      R0,R4
   \   00000260   7DFFFFEA           B        ??get_answer_5
   \                     ??get_answer_15:
   \   00000264   0040A0E1           MOV      R4,R0
   \   00000268   140000EF           SWI      +20
   \   0000026C   00B0A0E1           MOV      R11,R0
   \   00000270   0420A0E1           MOV      R2,R4
   \   00000274   0610A0E1           MOV      R1,R6
   \   00000278   1E0100EF           SWI      +286
   \   0000027C   B800D6E1           LDRH     R0,[R6, #+8]
   \   00000280   582087E2           ADD      R2,R7,#+88
   \   00000284   FF10A0E3           MOV      R1,#+255
   \   00000288   01002DE9           PUSH     {R0}
   \   0000028C   003096E5           LDR      R3,[R6, #+0]
   \   00000290   F60F85E2           ADD      R0,R5,#+984
   \   00000294   1B0100EF           SWI      +283
   \   00000298   280295E5           LDR      R0,[R5, #+552]
   \   0000029C   0B30A0E1           MOV      R3,R11
   \   000002A0   01002DE9           PUSH     {R0}
   \   000002A4   0020A0E3           MOV      R2,#+0
   \   000002A8   0A10A0E1           MOV      R1,R10
   \   000002AC   0900A0E1           MOV      R0,R9
   \   000002B0   000100EF           SWI      +256
   \                     ??get_answer_16:
   \   000002B4   08D08DE2           ADD      SP,SP,#+8        ;; stack cleaning
   \   000002B8   74FFFFEA           B        ??get_answer_8
   \                     ??get_answer_17:
   \   000002BC   201087E2           ADD      R1,R7,#+32
   \   000002C0   080086E2           ADD      R0,R6,#+8
   \   000002C4   180100EF           SWI      +280
   \   000002C8   000050E3           CMP      R0,#+0
   \   000002CC   0400001A           BNE      ??get_answer_18
   \   000002D0   711F8FE2           ADR      R1,??get_answer_2+0x4  ;; "110"
   \   000002D4   080086E2           ADD      R0,R6,#+8
   \   000002D8   180100EF           SWI      +280
   \   000002DC   000050E3           CMP      R0,#+0
   \   000002E0   0700000A           BEQ      ??get_answer_19
   \                     ??get_answer_18:
   \   000002E4   303087E2           ADD      R3,R7,#+48
   \   000002E8   502087E2           ADD      R2,R7,#+80
   \   000002EC   FF10A0E3           MOV      R1,#+255
   \   000002F0   F60F85E2           ADD      R0,R5,#+984
   \   000002F4   1B0100EF           SWI      +283
   \   000002F8   0100A0E3           MOV      R0,#+1
   \   000002FC   F40185E5           STR      R0,[R5, #+500]
   \   00000300   070000EA           B        ??get_answer_20
   \                     ??get_answer_19:
   \   00000304   083086E2           ADD      R3,R6,#+8
   \   00000308   502087E2           ADD      R2,R7,#+80
   \   0000030C   FF10A0E3           MOV      R1,#+255
   \   00000310   F60F85E2           ADD      R0,R5,#+984
   \   00000314   1B0100EF           SWI      +283
   \   00000318   0B10A0E1           MOV      R1,R11
   \   0000031C   0100A0E3           MOV      R0,#+1
   \   00000320   480100EF           SWI      +328
   \                     ??get_answer_20:
   \   00000324   ........           BL       SMART_REDRAW
   \   00000328   58FFFFEA           B        ??get_answer_8
   \                     ??get_answer_21:
   \   0000032C   0400A0E1           MOV      R0,R4
   \   00000330   140000EF           SWI      +20
   \   00000334   00B0A0E1           MOV      R11,R0
   \   00000338   0420A0E1           MOV      R2,R4
   \   0000033C   0610A0E1           MOV      R1,R6
   \   00000340   1E0100EF           SWI      +286
   \   00000344   08008BE2           ADD      R0,R11,#+8
   \   00000348   030000EA           B        ??get_answer_22
   \                     ??get_answer_23:
   \   0000034C   030051E3           CMP      R1,#+3
   \   00000350   2010A0B3           MOVLT    R1,#+32
   \   00000354   0010C0B5           STRBLT   R1,[R0, #+0]
   \   00000358   010080E2           ADD      R0,R0,#+1
   \                     ??get_answer_22:
   \   0000035C   0010D0E5           LDRB     R1,[R0, #+0]
   \   00000360   000051E3           CMP      R1,#+0
   \   00000364   F8FFFF1A           BNE      ??get_answer_23
   \   00000368   080086E2           ADD      R0,R6,#+8
   \   0000036C   01002DE9           PUSH     {R0}
   \   00000370   003096E5           LDR      R3,[R6, #+0]
   \   00000374   142087E2           ADD      R2,R7,#+20
   \   00000378   FF10A0E3           MOV      R1,#+255
   \   0000037C   F60F85E2           ADD      R0,R5,#+984
   \   00000380   1B0100EF           SWI      +283
   \   00000384   2C0295E5           LDR      R0,[R5, #+556]
   \   00000388   ........           BL       SendMSGACK
   \   0000038C   280295E5           LDR      R0,[R5, #+552]
   \   00000390   0B30A0E1           MOV      R3,R11
   \   00000394   01002DE9           PUSH     {R0}
   \   00000398   0020A0E3           MOV      R2,#+0
   \   0000039C   0A10A0E1           MOV      R1,R10
   \   000003A0   0900A0E1           MOV      R0,R9
   \   000003A4   000100EF           SWI      +256
   \   000003A8   ........           BL       SMART_REDRAW
   \   000003AC   F8009FE5           LDR      R0,??get_answer_2+0x14  ;; sndMsg
   \   000003B0   ........           BL       Play
   \   000003B4   BEFFFFEA           B        ??get_answer_16
   \                     ??get_answer_24:
   \   000003B8   460100EF           SWI      +326
   \   000003BC   081086E2           ADD      R1,R6,#+8
   \   000003C0   0100A0E3           MOV      R0,#+1
   \   000003C4   480100EF           SWI      +328
   \   000003C8   470100EF           SWI      +327
   \   000003CC   2FFFFFEA           B        ??get_answer_8
   \                     ??get_answer_25:
   \   000003D0   0600A0E1           MOV      R0,R6
   \   000003D4   ........           BL       FindContactLOGQByAck
   \   000003D8   000050E3           CMP      R0,#+0
   \   000003DC   0100000A           BEQ      ??get_answer_26
   \   000003E0   C8009FE5           LDR      R0,??get_answer_2+0x18  ;; sndMsgSent
   \   000003E4   ........           BL       Play
   \                     ??get_answer_26:
   \   000003E8   0A00A0E3           MOV      R0,#+10
   \   000003EC   140000EF           SWI      +20
   \   000003F0   00B0A0E1           MOV      R11,R0
   \   000003F4   0A20A0E3           MOV      R2,#+10
   \   000003F8   1AFFFFEA           B        ??get_answer_6
   \                     ??get_answer_27:
   \   000003FC   04108DE2           ADD      R1,SP,#+4
   \   00000400   0C008DE2           ADD      R0,SP,#+12
   \   00000404   B40000EF           SWI      +180
   \   00000408   0400DDE5           LDRB     R0,[SP, #+4]
   \   0000040C   0520DDE5           LDRB     R2,[SP, #+5]
   \   00000410   E11EA0E3           MOV      R1,#+3600
   \   00000414   3C30A0E3           MOV      R3,#+60
   \   00000418   930202E0           MUL      R2,R3,R2
   \   0000041C   912020E0           MLA      R0,R1,R0,R2
   \   00000420   0610DDE5           LDRB     R1,[SP, #+6]
   \   00000424   E12EA0E3           MOV      R2,#+3600
   \   00000428   000081E0           ADD      R0,R1,R0
   \   0000042C   0810D6E5           LDRB     R1,[R6, #+8]
   \   00000430   920101E0           MUL      R1,R2,R1
   \   00000434   0720A0E1           MOV      R2,R7
   \   00000438   010040E0           SUB      R0,R0,R1
   \   0000043C   0910D6E5           LDRB     R1,[R6, #+9]
   \   00000440   930101E0           MUL      R1,R3,R1
   \   00000444   010040E0           SUB      R0,R0,R1
   \   00000448   0A10D6E5           LDRB     R1,[R6, #+10]
   \   0000044C   013050E0           SUBS     R3,R0,R1
   \   00000450   500BA043           MOVMI    R0,#+81920
   \   00000454   460D8043           ORRMI    R0,R0,#0x1180
   \   00000458   03308040           ADDMI    R3,R0,R3
   \   0000045C   010083E2           ADD      R0,R3,#+1
   \   00000460   01002DE9           PUSH     {R0}
   \   00000464   FF10A0E3           MOV      R1,#+255
   \   00000468   F60F85E2           ADD      R0,R5,#+984
   \   0000046C   1B0100EF           SWI      +283
   \   00000470   460100EF           SWI      +326
   \   00000474   0B10A0E1           MOV      R1,R11
   \   00000478   0100A0E3           MOV      R0,#+1
   \   0000047C   480100EF           SWI      +328
   \   00000480   470100EF           SWI      +327
   \   00000484   00FFFFEA           B        ??get_answer_7
   1594                }
   1595              }
   1596            }
   1597            RXstate=i;
   \                     ??get_answer_9:
   \   00000488   209285E5           STR      R9,[R5, #+544]
   1598            //  GBS_StartTimerProc(&tmr_dorecv,3000,dorecv);
   1599            //  SMART_REDRAW();
   1600          }
   \                     ??get_answer_1:
   \   0000048C   14D08DE2           ADD      SP,SP,#+20
   \   00000490   70DD8DE2           ADD      SP,SP,#+7168
   \   00000494   F08FBDE8           POP      {R4-R11,PC}      ;; return
   \                     ??get_answer_2:
   \   00000498   25730000           DC8      "%s",+0
   \   0000049C   31313000           DC8      "110"
   \   000004A0   ........           DC32     RXbuf
   \   000004A4   ........           DC32     `?<Constant "Ping %d-%d seconds!">`
   \   000004A8   ........           DC32     sndStartup
   \   000004AC   ........           DC32     sndMsg
   \   000004B0   ........           DC32     sndMsgSent
   1601          

   \                                 In segment CODE, align 4, keep-with-next
   1602          void AddStringToLog(CLIST *t, int code, char *s, const char *name, unsigned int IDforACK)
   1603          {
   \                     AddStringToLog:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   \   00000004   90D04DE2           SUB      SP,SP,#+144
   \   00000008   AC809DE5           LDR      R8,[SP, #+172]
   \   0000000C   0040A0E1           MOV      R4,R0
   \   00000010   0150A0E1           MOV      R5,R1
   \   00000014   0270A0E1           MOV      R7,R2
   \   00000018   0360A0E1           MOV      R6,R3
   1604            char hs[128], *lastX;
   1605            TTime tt;
   1606            TDate d;
   1607            GetDateTime(&d,&tt);
   \   0000001C   0D10A0E1           MOV      R1,SP
   \   00000020   08008DE2           ADD      R0,SP,#+8
   \   00000024   B40000EF           SWI      +180
   1608            int i;
   1609          
   1610            if (code==3 && NOT_LOG_SAME_XTXT)
   \   00000028   030055E3           CMP      R5,#+3
   \   0000002C   1600001A           BNE      ??AddStringToLog_0
   \   00000030   C4019FE5           LDR      R0,??AddStringToLog_1  ;; NOT_LOG_SAME_XTXT
   \   00000034   000090E5           LDR      R0,[R0, #+0]
   \   00000038   000050E3           CMP      R0,#+0
   \   0000003C   1200000A           BEQ      ??AddStringToLog_0
   1611            {
   1612              if(!t->isactive && HISTORY_BUFFER) GetHistory(t, 64<<HISTORY_BUFFER);
   \   00000040   700094E5           LDR      R0,[R4, #+112]
   \   00000044   000050E3           CMP      R0,#+0
   \   00000048   0700001A           BNE      ??AddStringToLog_2
   \   0000004C   ........           LDR      R0,??DataTable46  ;; HISTORY_BUFFER
   \   00000050   000090E5           LDR      R0,[R0, #+0]
   \   00000054   000050E3           CMP      R0,#+0
   \   00000058   0300000A           BEQ      ??AddStringToLog_2
   \   0000005C   4010A0E3           MOV      R1,#+64
   \   00000060   1110A0E1           LSL      R1,R1,R0
   \   00000064   0400A0E1           MOV      R0,R4
   \   00000068   ........           _BLF     GetHistory,??GetHistory??rA
   1613              lastX = GetLastXTextLOGQ(t);
   \                     ??AddStringToLog_2:
   \   0000006C   0400A0E1           MOV      R0,R4
   \   00000070   ........           BL       GetLastXTextLOGQ
   1614              if(lastX)
   \   00000074   000050E3           CMP      R0,#+0
   \   00000078   0300000A           BEQ      ??AddStringToLog_0
   1615                if(strcmp(lastX, s) == 0) return;
   \   0000007C   0710A0E1           MOV      R1,R7
   \   00000080   190000EF           SWI      +25
   \   00000084   000050E3           CMP      R0,#+0
   \   00000088   5900000A           BEQ      ??AddStringToLog_3
   1616            }
   1617          
   1618            snprintf(hs,127,"%02d:%02d %02d-%02d %s:\r\n",tt.hour,tt.min,d.day,d.month,name);
   \                     ??AddStringToLog_0:
   \   0000008C   6C919FE5           LDR      R9,??AddStringToLog_1+0x4  ;; `?<Constant "%02d:%02d %02d-%02d %s:">`
   \   00000090   0600A0E1           MOV      R0,R6
   \   00000094   01002DE9           PUSH     {R0}
   \   00000098   1000DDE5           LDRB     R0,[SP, #+16]
   \   0000009C   182089E2           ADD      R2,R9,#+24
   \   000000A0   7F10A0E3           MOV      R1,#+127
   \   000000A4   01002DE9           PUSH     {R0}
   \   000000A8   1500DDE5           LDRB     R0,[SP, #+21]
   \   000000AC   01002DE9           PUSH     {R0}
   \   000000B0   0D00DDE5           LDRB     R0,[SP, #+13]
   \   000000B4   01002DE9           PUSH     {R0}
   \   000000B8   1030DDE5           LDRB     R3,[SP, #+16]
   \   000000BC   20008DE2           ADD      R0,SP,#+32
   \   000000C0   1B0100EF           SWI      +283
   1619            if(code != 3 || LOG_XTXT) //Нужно сохранять иксстатус
   \   000000C4   030055E3           CMP      R5,#+3
   \   000000C8   10D08DE2           ADD      SP,SP,#+16
   \   000000CC   0300001A           BNE      ??AddStringToLog_4
   \   000000D0   2C019FE5           LDR      R0,??AddStringToLog_1+0x8  ;; LOG_XTXT
   \   000000D4   000090E5           LDR      R0,[R0, #+0]
   \   000000D8   000050E3           CMP      R0,#+0
   \   000000DC   0400000A           BEQ      ??AddStringToLog_5
   1620              Add2History(t, hs, s, code); // Запись хистори
   \                     ??AddStringToLog_4:
   \   000000E0   0530A0E1           MOV      R3,R5
   \   000000E4   0720A0E1           MOV      R2,R7
   \   000000E8   10108DE2           ADD      R1,SP,#+16
   \   000000EC   0400A0E1           MOV      R0,R4
   \   000000F0   ........           _BLF     Add2History,??Add2History??rA
   1621            LOGQ *p=NewLOGQ(s);
   \                     ??AddStringToLog_5:
   \   000000F4   0700A0E1           MOV      R0,R7
   \   000000F8   ........           BL       NewLOGQ
   \   000000FC   0070A0E1           MOV      R7,R0
   1622            snprintf(p->hdr,79,"%02d:%02d %02d-%02d %s:",tt.hour,tt.min,d.day,d.month,name);
   \   00000100   40002DE9           PUSH     {R6}
   \   00000104   1000DDE5           LDRB     R0,[SP, #+16]
   \   00000108   0920A0E1           MOV      R2,R9
   \   0000010C   4F10A0E3           MOV      R1,#+79
   \   00000110   01002DE9           PUSH     {R0}
   \   00000114   1500DDE5           LDRB     R0,[SP, #+21]
   \   00000118   01002DE9           PUSH     {R0}
   \   0000011C   0D00DDE5           LDRB     R0,[SP, #+13]
   \   00000120   01002DE9           PUSH     {R0}
   \   00000124   1030DDE5           LDRB     R3,[SP, #+16]
   \   00000128   100087E2           ADD      R0,R7,#+16
   \   0000012C   1B0100EF           SWI      +283
   1623          //  snprintf(p->hdr,79,"%s:",name);
   1624            p->type=code;
   \   00000130   0C5087E5           STR      R5,[R7, #+12]
   1625            p->ID=IDforACK;  //0-32767
   \   00000134   088087E5           STR      R8,[R7, #+8]
   1626            i=AddLOGQ(&t->log,p);
   \   00000138   0710A0E1           MOV      R1,R7
   \   0000013C   640084E2           ADD      R0,R4,#+100
   \   00000140   ........           BL       AddLOGQ
   \   00000144   0060A0E1           MOV      R6,R0
   \   00000148   150056E3           CMP      R6,#+21
   \   0000014C   10D08DE2           ADD      SP,SP,#+16
   \   00000150   090000BA           BLT      ??AddStringToLog_6
   1627            while(i>MAXLOGMSG)
   1628            {
   1629              if (t->log==t->last_log) t->last_log=t->last_log->next;
   \                     ??AddStringToLog_7:
   \   00000154   6C0094E5           LDR      R0,[R4, #+108]
   \   00000158   641094E5           LDR      R1,[R4, #+100]
   1630              RemoveLOGQ(&t->log,t->log);
   1631              i--;
   \   0000015C   016046E2           SUB      R6,R6,#+1
   \   00000160   000051E1           CMP      R1,R0
   \   00000164   00009005           LDREQ    R0,[R0, #+0]
   \   00000168   6C008405           STREQ    R0,[R4, #+108]
   \   0000016C   640084E2           ADD      R0,R4,#+100
   \   00000170   ........           BL       RemoveLOGQ
   1632            }
   \   00000174   150056E3           CMP      R6,#+21
   \   00000178   F5FFFFAA           BGE      ??AddStringToLog_7
   1633            t->msg_count=i;
   \                     ??AddStringToLog_6:
   \   0000017C   746084E5           STR      R6,[R4, #+116]
   1634            if (!t->last_log) t->last_log=p;
   \   00000180   6C0094E5           LDR      R0,[R4, #+108]
   1635            if (code==3)
   \   00000184   ........           LDR      R6,??DataTable78  ;; contactlist_menuhdr
   \   00000188   000050E3           CMP      R0,#+0
   \   0000018C   6C708405           STREQ    R7,[R4, #+108]
   \   00000190   030055E3           CMP      R5,#+3
   \   00000194   0D00001A           BNE      ??AddStringToLog_8
   1636            {
   1637              if (edchat_id)
   \   00000198   580296E5           LDR      R0,[R6, #+600]
   \   0000019C   000050E3           CMP      R0,#+0
   \   000001A0   1100000A           BEQ      ??AddStringToLog_9
   1638              {
   1639                void *data=FindGUIbyId(edchat_id,NULL);
   \   000001A4   580296E5           LDR      R0,[R6, #+600]
   \   000001A8   0010A0E3           MOV      R1,#+0
   \   000001AC   090200EF           SWI      +521
   1640                if (data)
   \   000001B0   000050E3           CMP      R0,#+0
   \   000001B4   0C00000A           BEQ      ??AddStringToLog_9
   1641                {
   1642          	EDCHAT_STRUCT *ed_struct;
   1643          	ed_struct=EDIT_GetUserPointer(data);
   \   000001B8   DF0100EF           SWI      +479
   1644          	if (ed_struct)
   \   000001BC   000050E3           CMP      R0,#+0
   \   000001C0   0900000A           BEQ      ??AddStringToLog_9
   1645          	{
   1646          	  if (ed_struct->ed_contact==t)
   \   000001C4   000090E5           LDR      R0,[R0, #+0]
   \   000001C8   040050E1           CMP      R0,R4
   \   000001CC   0600001A           BNE      ??AddStringToLog_9
   1647          	  {
   1648          	    goto L_INC;
   1649          	  }
   1650          	}
   1651                }
   1652              }
   1653              goto L_NOINC;
   1654            }
   1655          L_INC:
   1656            if (!t->isunread) total_unread++;
   \                     ??AddStringToLog_8:
   \   000001D0   580094E5           LDR      R0,[R4, #+88]
   \   000001D4   000050E3           CMP      R0,#+0
   \   000001D8   48029605           LDREQ    R0,[R6, #+584]
   \   000001DC   01008002           ADDEQ    R0,R0,#+1
   \   000001E0   48028605           STREQ    R0,[R6, #+584]
   1657            t->isunread=1;
   \   000001E4   0100A0E3           MOV      R0,#+1
   \   000001E8   580084E5           STR      R0,[R4, #+88]
   1658          L_NOINC:
   1659            ChangeContactPos(t);
   \                     ??AddStringToLog_9:
   \   000001EC   0400A0E1           MOV      R0,R4
   \   000001F0   ........           _BLF     ChangeContactPos,??ChangeContactPos??rA
   1660          }
   \                     ??AddStringToLog_3:
   \   000001F4   90D08DE2           ADD      SP,SP,#+144      ;; stack cleaning
   \   000001F8   F083BDE8           POP      {R4-R9,PC}       ;; return
   \                     ??AddStringToLog_1:
   \   000001FC   ........           DC32     NOT_LOG_SAME_XTXT
   \   00000200   ........           DC32     `?<Constant "%02d:%02d %02d-%02d %s:">`
   \   00000204   ........           DC32     LOG_XTXT
   1661          
   1662          void ParseAnswer(WSHDR *ws, const char *s);
   1663          
   1664          int time_to_stop_t9;
   1665          

   \                                 In segment CODE, align 4, keep-with-next
   1666          void ParseXStatusText(WSHDR *ws, const char *s, int color)
   1667          {
   \                     ParseXStatusText:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0260A0E1           MOV      R6,R2
   1668            int c;
   1669            int flag=0;
   \   00000010   0070A0E3           MOV      R7,#+0
   1670            CutWSTR(ws,0);
   \   00000014   0010A0E3           MOV      R1,#+0
   \   00000018   260100EF           SWI      +294
   1671            if (strlen(s)==1) return;
   \   0000001C   0500A0E1           MOV      R0,R5
   \   00000020   1B0000EF           SWI      +27
   \   00000024   010050E3           CMP      R0,#+1
   \   00000028   F080BD08           POPEQ    {R4-R7,PC}
   1672            wsAppendChar(ws,0xE008);
   \   0000002C   0810A0E3           MOV      R1,#+8
   \   00000030   E01C81E3           ORR      R1,R1,#0xE000
   \   00000034   0400A0E1           MOV      R0,R4
   \   00000038   1C0000EF           SWI      +28
   1673            wsAppendChar(ws,color);
   \   0000003C   0610A0E1           MOV      R1,R6
   \   00000040   0400A0E1           MOV      R0,R4
   \   00000044   1C0000EF           SWI      +28
   1674            wsAppendChar(ws,0xE013);
   \   00000048   1310A0E3           MOV      R1,#+19
   \   0000004C   E01C81E3           ORR      R1,R1,#0xE000
   \   00000050   0A0000EA           B        ??ParseXStatusText_0
   1675            while((c=*s++))
   1676            {
   1677              if (c==13)
   \                     ??ParseXStatusText_1:
   \   00000054   0D0050E3           CMP      R0,#+13
   1678              {
   1679                if (!flag)
   \   00000058   00005703           CMPEQ    R7,#+0
   \   0000005C   0500001A           BNE      ??ParseXStatusText_2
   1680                {
   1681                  flag=1;
   \   00000060   0170A0E3           MOV      R7,#+1
   1682                  wsAppendChar(ws,0xE012);
   \   00000064   1210A0E3           MOV      R1,#+18
   \   00000068   E01C81E3           ORR      R1,R1,#0xE000
   \   0000006C   0400A0E1           MOV      R0,R4
   \   00000070   1C0000EF           SWI      +28
   1683                  c=' ';
   \   00000074   2000A0E3           MOV      R0,#+32
   1684                }
   1685              }
   1686              wsAppendChar(ws,char8to16(c));
   \                     ??ParseXStatusText_2:
   \   00000078   ........           _BLF     char8to16,??char8to16??rA
   \   0000007C   0010A0E1           MOV      R1,R0
   \                     ??ParseXStatusText_0:
   \   00000080   0400A0E1           MOV      R0,R4
   \   00000084   1C0000EF           SWI      +28
   1687            }
   \   00000088   ........           LDRB     R0,[R5], #+1
   \   0000008C   000050E3           CMP      R0,#+0
   \   00000090   EFFFFF1A           BNE      ??ParseXStatusText_1
   \   00000094   F080BDE8           POP      {R4-R7,PC}       ;; return
   1688          }
   1689          //Добавление итемов в чат при получении нового сообщения

   \                                 In segment CODE, align 4, keep-with-next
   1690          void AddMsgToChat(void *data)
   1691          {
   \                     AddMsgToChat:
   \   00000000   F14F2DE9           PUSH     {R0,R4-R11,LR}
   \   00000004   40D04DE2           SUB      SP,SP,#+64
   1692            LOGQ *p;
   1693            EDITCONTROL ec;
   1694            EDITC_OPTIONS ec_options;
   1695            EDCHAT_STRUCT *ed_struct;
   1696            int j;
   1697            int color, font, type;
   1698            int zc;
   1699            if (!data) return;
   \   00000008   000050E3           CMP      R0,#+0
   \   0000000C   C400000A           BEQ      ??AddMsgToChat_0
   1700            ed_struct=EDIT_GetUserPointer(data);
   \   00000010   DF0100EF           SWI      +479
   \   00000014   0060B0E1           MOVS     R6,R0
   1701            if (!ed_struct) return;
   \   00000018   C100000A           BEQ      ??AddMsgToChat_0
   1702            if (!ed_struct->ed_contact->isunread) return;
   \   0000001C   000096E5           LDR      R0,[R6, #+0]
   \   00000020   581090E5           LDR      R1,[R0, #+88]
   \   00000024   000051E3           CMP      R1,#+0
   \   00000028   BD00000A           BEQ      ??AddMsgToChat_0
   1703          
   1704          
   1705            p=ed_struct->ed_contact->last_log;
   \   0000002C   6C7090E5           LDR      R7,[R0, #+108]
   1706            if (p)
   \   00000030   ........           LDR      R8,??DataTable78  ;; contactlist_menuhdr
   \   00000034   000057E3           CMP      R7,#+0
   \   00000038   A800000A           BEQ      ??AddMsgToChat_1
   1707            {
   1708              while(p)
   1709              {
   1710                font = ED_H_FONT_SIZE;
   1711                if ((zc=p->acked&3))
   \                     ??AddMsgToChat_2:
   \   0000003C   ........           LDR      R2,??DataTable49  ;; ED_X_FONT_SIZE
   \   00000040   ........           LDR      R0,??DataTable71  ;; ED_H_FONT_SIZE
   \   00000044   002092E5           LDR      R2,[R2, #+0]
   \   00000048   ........           LDR      R1,??DataTable51  ;; X_COLOR
   \   0000004C   00A090E5           LDR      R10,[R0, #+0]
   \   00000050   040097E5           LDR      R0,[R7, #+4]
   \   00000054   00208DE5           STR      R2,[SP, #+0]
   \   00000058   004091E5           LDR      R4,[R1, #+0]
   \   0000005C   ........           LDR      R1,??DataTable52  ;; O_ED_X_FONT_SIZE
   \   00000060   030010E2           ANDS     R0,R0,#0x3
   \   00000064   009091E5           LDR      R9,[R1, #+0]
   \   00000068   ........           LDR      R1,??DataTable53  ;; O_X_COLOR
   \   0000006C   005091E5           LDR      R5,[R1, #+0]
   \   00000070   ........           LDR      R1,??DataTable68  ;; I_COLOR
   \   00000074   00B091E5           LDR      R11,[R1, #+0]
   \   00000078   0300000A           BEQ      ??AddMsgToChat_3
   1712                {
   1713          	if (zc==1)
   \   0000007C   010050E3           CMP      R0,#+1
   \   00000080   1E00001A           BNE      ??AddMsgToChat_4
   1714          	  color=ACK_COLOR; //Зеленый
   \   00000084   ........           LDR      R0,??DataTable64  ;; ACK_COLOR
   \   00000088   1B0000EA           B        ??AddMsgToChat_5
   1715          	else
   1716          	  color=I_COLOR;
   1717                }
   1718                else
   1719                {
   1720          	if (p->ID==0xFFFFFFFF)
   \                     ??AddMsgToChat_3:
   \   0000008C   080097E5           LDR      R0,[R7, #+8]
   \   00000090   010070E3           CMN      R0,#+1
   \   00000094   1700001A           BNE      ??AddMsgToChat_6
   1721                  {
   1722                    type = p->type&0x0F;
   \   00000098   0C0097E5           LDR      R0,[R7, #+12]
   \   0000009C   0F1000E2           AND      R1,R0,#0xF
   1723                    if(p->type&0x10)
   \   000000A0   100010E3           TST      R0,#0x10
   \   000000A4   0B00000A           BEQ      ??AddMsgToChat_7
   1724                    {
   1725                      color = (type==1)?O_I_COLOR:((type==3)?O_X_COLOR:O_TO_COLOR);
   \   000000A8   010051E3           CMP      R1,#+1
   \   000000AC   ........           LDREQ    R0,??DataTable66  ;; O_I_COLOR
   \   000000B0   0400000A           BEQ      ??AddMsgToChat_8
   \   000000B4   030051E3           CMP      R1,#+3
   \   000000B8   05B0A001           MOVEQ    R11,R5
   \   000000BC   09A0A001           MOVEQ    R10,R9
   \   000000C0   0E00000A           BEQ      ??AddMsgToChat_4
   \   000000C4   ........           LDR      R0,??DataTable65  ;; O_TO_COLOR
   \                     ??AddMsgToChat_8:
   \   000000C8   00B090E5           LDR      R11,[R0, #+0]
   \   000000CC   ........           LDR      R0,??DataTable70  ;; O_ED_H_FONT_SIZE
   \   000000D0   00A090E5           LDR      R10,[R0, #+0]
   \   000000D4   090000EA           B        ??AddMsgToChat_4
   1726                      font = (type==3)?O_ED_X_FONT_SIZE:O_ED_H_FONT_SIZE;
   1727                    }
   1728                    else
   1729                    {
   1730                      color = (type==1)?I_COLOR:((type==3)?X_COLOR:TO_COLOR);
   \                     ??AddMsgToChat_7:
   \   000000D8   010051E3           CMP      R1,#+1
   \   000000DC   0700000A           BEQ      ??AddMsgToChat_4
   \   000000E0   030051E3           CMP      R1,#+3
   \   000000E4   04B0A001           MOVEQ    R11,R4
   \   000000E8   02A0A001           MOVEQ    R10,R2
   \   000000EC   0300000A           BEQ      ??AddMsgToChat_4
   \   000000F0   ........           LDR      R0,??DataTable67  ;; TO_COLOR
   \   000000F4   000000EA           B        ??AddMsgToChat_5
   1731                      font = (type==3)?ED_X_FONT_SIZE:ED_H_FONT_SIZE;
   1732                    }
   1733                  }
   1734                  else
   1735          	  color=UNACK_COLOR; //Серый
   \                     ??AddMsgToChat_6:
   \   000000F8   ........           LDR      R0,??DataTable69  ;; UNACK_COLOR
   \                     ??AddMsgToChat_5:
   \   000000FC   00B090E5           LDR      R11,[R0, #+0]
   1736                }
   1737                PrepareEditControl(&ec);
   \                     ??AddMsgToChat_4:
   \   00000100   14008DE2           ADD      R0,SP,#+20
   \   00000104   640100EF           SWI      +356
   1738                if ((p->type&0x0F)!=3)
   \   00000108   0C0097E5           LDR      R0,[R7, #+12]
   \   0000010C   0F0000E2           AND      R0,R0,#0xF
   \   00000110   030050E3           CMP      R0,#+3
   \   00000114   0800000A           BEQ      ??AddMsgToChat_9
   1739                {
   1740                  ascii2ws(ews,p->hdr);
   \   00000118   EC0198E5           LDR      R0,[R8, #+492]
   \   0000011C   101087E2           ADD      R1,R7,#+16
   \   00000120   ........           _BLF     ascii2ws,??ascii2ws??rA
   1741                  ConstructEditControl(&ec,ECT_HEADER,ECF_APPEND_EOL,ews,ews->wsbody[0]);
   \   00000124   EC3198E5           LDR      R3,[R8, #+492]
   \   00000128   4020A0E3           MOV      R2,#+64
   \   0000012C   000093E5           LDR      R0,[R3, #+0]
   \   00000130   B000D0E1           LDRH     R0,[R0, #+0]
   \   00000134   01002DE9           PUSH     {R0}
   \   00000138   030000EA           B        ??AddMsgToChat_10
   1742                }
   1743                else
   1744                  ConstructEditControl(&ec,ECT_HEADER,ECF_DELSTR,ews,0);
   \                     ??AddMsgToChat_9:
   \   0000013C   0000A0E3           MOV      R0,#+0
   \   00000140   01002DE9           PUSH     {R0}
   \   00000144   EC3198E5           LDR      R3,[R8, #+492]
   \   00000148   2020A0E3           MOV      R2,#+32
   \                     ??AddMsgToChat_10:
   \   0000014C   0110A0E3           MOV      R1,#+1
   \   00000150   18008DE2           ADD      R0,SP,#+24
   \   00000154   650100EF           SWI      +357
   \   00000158   04D08DE2           ADD      SP,SP,#+4
   1745                PrepareEditCOptions(&ec_options);
   \   0000015C   04008DE2           ADD      R0,SP,#+4
   \   00000160   C80100EF           SWI      +456
   1746                SetPenColorToEditCOptions(&ec_options,color);
   \   00000164   0B10A0E1           MOV      R1,R11
   \   00000168   04008DE2           ADD      R0,SP,#+4
   \   0000016C   CC0100EF           SWI      +460
   1747                SetFontToEditCOptions(&ec_options,font);
   \   00000170   0A10A0E1           MOV      R1,R10
   \   00000174   04008DE2           ADD      R0,SP,#+4
   \   00000178   CA0100EF           SWI      +458
   1748                CopyOptionsToEditControl(&ec,&ec_options);
   \   0000017C   04108DE2           ADD      R1,SP,#+4
   \   00000180   14008DE2           ADD      R0,SP,#+20
   \   00000184   CE0100EF           SWI      +462
   1749                //AddEditControlToEditQend(eq,&ec,ma);
   1750                EDIT_InsertEditControl(data,ed_struct->ed_answer-1,&ec);
   \   00000188   080096E5           LDR      R0,[R6, #+8]
   \   0000018C   14208DE2           ADD      R2,SP,#+20
   \   00000190   011040E2           SUB      R1,R0,#+1
   \   00000194   40009DE5           LDR      R0,[SP, #+64]
   \   00000198   D20100EF           SWI      +466
   1751                ed_struct->ed_answer++;
   \   0000019C   080096E5           LDR      R0,[R6, #+8]
   \   000001A0   010080E2           ADD      R0,R0,#+1
   \   000001A4   080086E5           STR      R0,[R6, #+8]
   1752                if ((p->type&0x0F)!=3)
   \   000001A8   0C0097E5           LDR      R0,[R7, #+12]
   \   000001AC   0F1000E2           AND      R1,R0,#0xF
   \   000001B0   030051E3           CMP      R1,#+3
   \   000001B4   0300000A           BEQ      ??AddMsgToChat_11
   1753                {
   1754                  ParseAnswer(ews,p->text);
   \   000001B8   EC0198E5           LDR      R0,[R8, #+492]
   \   000001BC   601087E2           ADD      R1,R7,#+96
   \   000001C0   ........           BL       ParseAnswer
   \   000001C4   050000EA           B        ??AddMsgToChat_12
   1755                }
   1756                else
   1757                {
   1758                  ParseXStatusText(ews, p->text, (p->type&0x10)?O_X_COLOR:X_COLOR);
   \                     ??AddMsgToChat_11:
   \   000001C8   100010E3           TST      R0,#0x10
   \   000001CC   EC0198E5           LDR      R0,[R8, #+492]
   \   000001D0   0520A011           MOVNE    R2,R5
   \   000001D4   0420A001           MOVEQ    R2,R4
   \   000001D8   601087E2           ADD      R1,R7,#+96
   \   000001DC   ........           BL       ParseXStatusText
   1759                }
   1760                PrepareEditControl(&ec);
   \                     ??AddMsgToChat_12:
   \   000001E0   14008DE2           ADD      R0,SP,#+20
   \   000001E4   640100EF           SWI      +356
   1761                ConstructEditControl(&ec,
   1762                                     ECT_NORMAL_TEXT,
   1763                                     ews->wsbody[0] ? ECF_APPEND_EOL|ECF_DISABLE_T9 : ECF_DELSTR,
   1764                                     ews,ews->wsbody[0]);
   \   000001E8   EC3198E5           LDR      R3,[R8, #+492]
   \   000001EC   000093E5           LDR      R0,[R3, #+0]
   \   000001F0   B010D0E1           LDRH     R1,[R0, #+0]
   \   000001F4   000051E3           CMP      R1,#+0
   \   000001F8   0100A0E1           MOV      R0,R1
   \   000001FC   01002DE9           PUSH     {R0}
   \   00000200   812DA013           MOVNE    R2,#+8256
   \   00000204   2020A003           MOVEQ    R2,#+32
   \   00000208   0310A0E3           MOV      R1,#+3
   \   0000020C   18008DE2           ADD      R0,SP,#+24
   \   00000210   650100EF           SWI      +357
   1765                PrepareEditCOptions(&ec_options);
   \   00000214   08008DE2           ADD      R0,SP,#+8
   \   00000218   C80100EF           SWI      +456
   1766          //#ifdef M75
   1767                if ((p->type&0x0F)!=3)
   \   0000021C   0C0097E5           LDR      R0,[R7, #+12]
   \   00000220   04D08DE2           ADD      SP,SP,#+4
   \   00000224   0F1000E2           AND      R1,R0,#0xF
   \   00000228   030051E3           CMP      R1,#+3
   \   0000022C   0400000A           BEQ      ??AddMsgToChat_13
   1768                {
   1769                  SetFontToEditCOptions(&ec_options,(p->type&0x10)?O_ED_FONT_SIZE:ED_FONT_SIZE);
   \   00000230   100010E3           TST      R0,#0x10
   \   00000234   ........           LDRNE    R0,??DataTable61  ;; O_ED_FONT_SIZE
   \   00000238   ........           LDREQ    R0,??DataTable62  ;; ED_FONT_SIZE
   \   0000023C   001090E5           LDR      R1,[R0, #+0]
   \   00000240   080000EA           B        ??AddMsgToChat_14
   1770                }
   1771                else
   1772                {
   1773                  SetPenColorToEditCOptions(&ec_options,(p->type&0x10)?O_X_COLOR:X_COLOR);
   \                     ??AddMsgToChat_13:
   \   00000244   100010E3           TST      R0,#0x10
   \   00000248   0510A011           MOVNE    R1,R5
   \   0000024C   0410A001           MOVEQ    R1,R4
   \   00000250   04008DE2           ADD      R0,SP,#+4
   \   00000254   CC0100EF           SWI      +460
   1774                  SetFontToEditCOptions(&ec_options,(p->type&0x10)?O_ED_X_FONT_SIZE:ED_X_FONT_SIZE);
   \   00000258   0C0097E5           LDR      R0,[R7, #+12]
   \   0000025C   100010E3           TST      R0,#0x10
   \   00000260   00109D05           LDREQ    R1,[SP, #+0]
   \   00000264   0910A011           MOVNE    R1,R9
   \                     ??AddMsgToChat_14:
   \   00000268   04008DE2           ADD      R0,SP,#+4
   \   0000026C   CA0100EF           SWI      +458
   1775                }
   1776          //#else
   1777          //      SetFontToEditCOptions(&ec_options,(p->type&0x10)?O_ED_FONT_SIZE:ED_FONT_SIZE);
   1778          //#endif
   1779                CopyOptionsToEditControl(&ec,&ec_options);
   \   00000270   04108DE2           ADD      R1,SP,#+4
   \   00000274   14008DE2           ADD      R0,SP,#+20
   \   00000278   CE0100EF           SWI      +462
   1780                EDIT_InsertEditControl(data,ed_struct->ed_answer-1,&ec);
   \   0000027C   080096E5           LDR      R0,[R6, #+8]
   \   00000280   14208DE2           ADD      R2,SP,#+20
   \   00000284   011040E2           SUB      R1,R0,#+1
   \   00000288   40009DE5           LDR      R0,[SP, #+64]
   \   0000028C   D20100EF           SWI      +466
   1781                ed_struct->ed_answer++;
   \   00000290   080096E5           LDR      R0,[R6, #+8]
   \   00000294   010080E2           ADD      R0,R0,#+1
   \   00000298   080086E5           STR      R0,[R6, #+8]
   1782                p=p->next;
   \   0000029C   007097E5           LDR      R7,[R7, #+0]
   1783              }
   \   000002A0   000057E3           CMP      R7,#+0
   \   000002A4   64FFFF1A           BNE      ??AddMsgToChat_2
   1784              j=((ed_struct->ed_contact->msg_count+1)*2); //Ожидаемый ed_answer
   \   000002A8   001096E5           LDR      R1,[R6, #+0]
   \   000002AC   741091E5           LDR      R1,[R1, #+116]
   \   000002B0   011081E2           ADD      R1,R1,#+1
   \   000002B4   8140A0E1           LSL      R4,R1,#+1
   \   000002B8   000054E1           CMP      R4,R0
   \   000002BC   070000AA           BGE      ??AddMsgToChat_1
   1785              while(j<ed_struct->ed_answer)
   1786              {
   1787                EDIT_RemoveEditControl(ed_struct->ed_chatgui,1);
   \                     ??AddMsgToChat_15:
   \   000002C0   040096E5           LDR      R0,[R6, #+4]
   \   000002C4   0110A0E3           MOV      R1,#+1
   \   000002C8   D10100EF           SWI      +465
   1788                ed_struct->ed_answer--;
   \   000002CC   080096E5           LDR      R0,[R6, #+8]
   \   000002D0   010040E2           SUB      R0,R0,#+1
   \   000002D4   080086E5           STR      R0,[R6, #+8]
   1789              }
   \   000002D8   000054E1           CMP      R4,R0
   \   000002DC   F7FFFFBA           BLT      ??AddMsgToChat_15
   1790            }
   1791            ed_struct->ed_contact->last_log=NULL;
   \                     ??AddMsgToChat_1:
   \   000002E0   000096E5           LDR      R0,[R6, #+0]
   \   000002E4   0040A0E3           MOV      R4,#+0
   \   000002E8   6C4080E5           STR      R4,[R0, #+108]
   1792            if (IsGuiOnTop(edchat_id))
   \   000002EC   580298E5           LDR      R0,[R8, #+600]
   \   000002F0   350100EF           SWI      +309
   \   000002F4   000050E3           CMP      R0,#+0
   \   000002F8   0300000A           BEQ      ??AddMsgToChat_16
   1793              total_unread--;
   \   000002FC   480298E5           LDR      R0,[R8, #+584]
   \   00000300   010040E2           SUB      R0,R0,#+1
   \   00000304   480288E5           STR      R0,[R8, #+584]
   \   00000308   020000EA           B        ??AddMsgToChat_17
   1794            else
   1795              ed_struct->requested_decrement_total_unread++;
   \                     ??AddMsgToChat_16:
   \   0000030C   0C0096E5           LDR      R0,[R6, #+12]
   \   00000310   010080E2           ADD      R0,R0,#+1
   \   00000314   0C0086E5           STR      R0,[R6, #+12]
   1796            ed_struct->ed_contact->isunread=0;
   \                     ??AddMsgToChat_17:
   \   00000318   000096E5           LDR      R0,[R6, #+0]
   \   0000031C   584080E5           STR      R4,[R0, #+88]
   1797            ChangeContactPos(ed_struct->ed_contact);
   \   00000320   ........           _BLF     ChangeContactPos,??ChangeContactPos??rA
   1798            //  EDIT_SetFocus(data,ed_struct->ed_answer);
   1799          }
   \                     ??AddMsgToChat_0:
   \   00000324   44D08DE2           ADD      SP,SP,#+68       ;; stack cleaning
   \   00000328   F08FBDE8           POP      {R4-R11,PC}      ;; return
   1800          
   1801          //Рисуем подтверждения непосредственно

   \                                 In segment CODE, align 4, keep-with-next
   1802          void DrawAck(void *data)
   1803          {
   \                     DrawAck:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   3CD04DE2           SUB      SP,SP,#+60
   \   00000008   0040B0E1           MOVS     R4,R0
   1804            LOGQ *p;
   1805            EDITCONTROL ec;
   1806            EDITC_OPTIONS ec_options;
   1807            EDCHAT_STRUCT *ed_struct;
   1808            int j;
   1809            int color;
   1810            int dorefresh=0;
   \   0000000C   0060A0E3           MOV      R6,#+0
   1811            if (!data) return;
   \   00000010   4C00000A           BEQ      ??DrawAck_0
   1812            ed_struct=EDIT_GetUserPointer(data);
   \   00000014   DF0100EF           SWI      +479
   1813            if (!ed_struct) return;
   \   00000018   000050E3           CMP      R0,#+0
   \   0000001C   4900000A           BEQ      ??DrawAck_0
   1814            p=ed_struct->ed_contact->log;
   \   00000020   001090E5           LDR      R1,[R0, #+0]
   1815            j=ed_struct->ed_answer;
   1816            j-=(ed_struct->ed_contact->msg_count*2)+1; //Номер собственно хедера верхнего итема
   \   00000024   080090E5           LDR      R0,[R0, #+8]
   \   00000028   645091E5           LDR      R5,[R1, #+100]
   \   0000002C   741091E5           LDR      R1,[R1, #+116]
   \   00000030   000055E3           CMP      R5,#+0
   \   00000034   810040E0           SUB      R0,R0,R1, LSL #+1
   \   00000038   017040E2           SUB      R7,R0,#+1
   \   0000003C   3A00000A           BEQ      ??DrawAck_1
   1817            while(p)
   1818            {
   1819              if (j>=1) //Пока возможно лишнее
   \                     ??DrawAck_2:
   \   00000040   010057E3           CMP      R7,#+1
   \   00000044   340000BA           BLT      ??DrawAck_3
   1820              {
   1821                if (!(p->acked&4))
   \   00000048   040095E5           LDR      R0,[R5, #+4]
   \   0000004C   040010E3           TST      R0,#0x4
   \   00000050   3100001A           BNE      ??DrawAck_3
   1822                {
   1823          	ExtractEditControl(data,j,&ec);
   \   00000054   10208DE2           ADD      R2,SP,#+16
   \   00000058   0710A0E1           MOV      R1,R7
   \   0000005C   0400A0E1           MOV      R0,R4
   \   00000060   690100EF           SWI      +361
   1824          	PrepareEditCOptions(&ec_options);
   \   00000064   0D00A0E1           MOV      R0,SP
   \   00000068   C80100EF           SWI      +456
   1825          	if (p->acked)
   \   0000006C   040095E5           LDR      R0,[R5, #+4]
   \   00000070   000050E3           CMP      R0,#+0
   \   00000074   0300000A           BEQ      ??DrawAck_4
   1826          	{
   1827          	  if (p->acked==1)
   \   00000078   010050E3           CMP      R0,#+1
   \   0000007C   ........           LDRNE    R0,??DataTable68  ;; I_COLOR
   1828          	    color=ACK_COLOR; //Зеленый
   \   00000080   ........           LDREQ    R0,??DataTable64  ;; ACK_COLOR
   \   00000084   0F0000EA           B        ??DrawAck_5
   1829          	  else
   1830          	    color=I_COLOR;
   1831          	}
   1832          	else
   1833          	{
   1834          	  if (p->ID==0xFFFFFFFF)
   \                     ??DrawAck_4:
   \   00000088   080095E5           LDR      R0,[R5, #+8]
   \   0000008C   010070E3           CMN      R0,#+1
   \   00000090   0B00001A           BNE      ??DrawAck_6
   1835          	    color=(p->type&0x10)?(((p->type&0x0F)==1)?O_I_COLOR:O_TO_COLOR):(((p->type&0x0F)==1)?I_COLOR:TO_COLOR);
   \   00000094   0C0095E5           LDR      R0,[R5, #+12]
   \   00000098   100010E3           TST      R0,#0x10
   \   0000009C   0F0000E2           AND      R0,R0,#0xF
   \   000000A0   0300000A           BEQ      ??DrawAck_7
   \   000000A4   010050E3           CMP      R0,#+1
   \   000000A8   ........           LDRNE    R0,??DataTable65  ;; O_TO_COLOR
   \   000000AC   ........           LDREQ    R0,??DataTable66  ;; O_I_COLOR
   \   000000B0   040000EA           B        ??DrawAck_5
   \                     ??DrawAck_7:
   \   000000B4   010050E3           CMP      R0,#+1
   \   000000B8   ........           LDRNE    R0,??DataTable67  ;; TO_COLOR
   \   000000BC   ........           LDREQ    R0,??DataTable68  ;; I_COLOR
   \   000000C0   000000EA           B        ??DrawAck_5
   1836          	  else
   1837          	    color=UNACK_COLOR; //Серый
   \                     ??DrawAck_6:
   \   000000C4   ........           LDR      R0,??DataTable69  ;; UNACK_COLOR
   1838          	}
   1839          	SetPenColorToEditCOptions(&ec_options,color/*p->type==1?I_COLOR:TO_COLOR*/);
   1840          	SetFontToEditCOptions(&ec_options,(p->type&0x10)?O_ED_H_FONT_SIZE:ED_H_FONT_SIZE);
   1841          	CopyOptionsToEditControl(&ec,&ec_options);
   1842          	StoreEditControl(data,j,&ec);
   1843          	p->acked|=4; //Обработали
   1844          	dorefresh=1;
   \                     ??DrawAck_5:
   \   000000C8   0160A0E3           MOV      R6,#+1
   \   000000CC   001090E5           LDR      R1,[R0, #+0]
   \   000000D0   0D00A0E1           MOV      R0,SP
   \   000000D4   CC0100EF           SWI      +460
   \   000000D8   0C0095E5           LDR      R0,[R5, #+12]
   \   000000DC   100010E3           TST      R0,#0x10
   \   000000E0   ........           LDRNE    R0,??DataTable70  ;; O_ED_H_FONT_SIZE
   \   000000E4   ........           LDREQ    R0,??DataTable71  ;; ED_H_FONT_SIZE
   \   000000E8   001090E5           LDR      R1,[R0, #+0]
   \   000000EC   0D00A0E1           MOV      R0,SP
   \   000000F0   CA0100EF           SWI      +458
   \   000000F4   0D10A0E1           MOV      R1,SP
   \   000000F8   10008DE2           ADD      R0,SP,#+16
   \   000000FC   CE0100EF           SWI      +462
   \   00000100   10208DE2           ADD      R2,SP,#+16
   \   00000104   0710A0E1           MOV      R1,R7
   \   00000108   0400A0E1           MOV      R0,R4
   \   0000010C   6A0100EF           SWI      +362
   \   00000110   040095E5           LDR      R0,[R5, #+4]
   \   00000114   040080E3           ORR      R0,R0,#0x4
   \   00000118   040085E5           STR      R0,[R5, #+4]
   1845                }
   1846              }
   1847              j+=2;
   1848              p=p->next;
   \                     ??DrawAck_3:
   \   0000011C   005095E5           LDR      R5,[R5, #+0]
   \   00000120   027087E2           ADD      R7,R7,#+2
   1849            }
   \   00000124   000055E3           CMP      R5,#+0
   \   00000128   C4FFFF1A           BNE      ??DrawAck_2
   1850            if (IsGuiOnTop(edchat_id)&&dorefresh) RefreshGUI();
   \                     ??DrawAck_1:
   \   0000012C   1C009FE5           LDR      R0,??DrawAck_8   ;; contactlist_menuhdr + 600
   \   00000130   000090E5           LDR      R0,[R0, #+0]
   \   00000134   350100EF           SWI      +309
   \   00000138   000050E3           CMP      R0,#+0
   \   0000013C   00005613           CMPNE    R6,#+0
   \   00000140   0000000A           BEQ      ??DrawAck_0
   \   00000144   960100EF           SWI      +406
   \                     ??DrawAck_0:
   \   00000148   3CD08DE2           ADD      SP,SP,#+60       ;; stack cleaning
   \   0000014C   F080BDE8           POP      {R4-R7,PC}       ;; return
   \                     ??DrawAck_8:
   \   00000150   ........           DC32     contactlist_menuhdr + 600
   1851          }
   1852          

   \                                 In segment CODE, align 4, keep-with-next
   1853          void ask_my_info(void)
   1854          {
   1855            /*  TPKT *p;
   1856            CLIST *t;
   1857            p=malloc(sizeof(PKT));
   1858            p->pkt.uin=UIN;
   1859            p->pkt.type=T_REQINFOSHORT;
   1860            p->pkt.data_len=0;
   1861            //  AddStringToLog(t,0x01,"Request info...",I_str);
   1862            SUBPROC((void *)SendAnswer,0,p);*/
   1863          }
   \                     ask_my_info:
   \   00000000   1EFF2FE1           BX       LR               ;; return
   1864          

   \                                 In segment CODE, align 4, keep-with-next
   1865          void set_my_status(void)
   1866          {
   \                     set_my_status:
   \   00000000   00402DE9           PUSH     {LR}
   1867            TPKT *p;
   1868            p=malloc(sizeof(PKT)+1);
   \   00000004   0900A0E3           MOV      R0,#+9
   \   00000008   140000EF           SWI      +20
   1869            p->pkt.uin=0;               // Никому; поле нужно проигнорировать на сервере
   \   0000000C   0010A0E3           MOV      R1,#+0
   \   00000010   001080E5           STR      R1,[R0, #+0]
   1870            p->pkt.type=T_MY_STATUS_CH; // Тип пакета: изменение статуса
   \   00000014   0F10A0E3           MOV      R1,#+15
   \   00000018   B410C0E1           STRH     R1,[R0, #+4]
   1871            p->pkt.data_len=1;          // Длина пакета: 1 байт
   \   0000001C   0110A0E3           MOV      R1,#+1
   \   00000020   B610C0E1           STRH     R1,[R0, #+6]
   1872            p->data[0]=CurrentStatus;
   \   00000024   ........           LDR      R1,??DataTable72  ;; contactlist_menuhdr + 520
   1873            SUBPROC((void *)SendAnswer,0,p);
   \   00000028   0020A0E1           MOV      R2,R0
   \   0000002C   001091E5           LDR      R1,[R1, #+0]
   \   00000030   0810C0E5           STRB     R1,[R0, #+8]
   \   00000034   ........           LDR      R0,??DataTable75  ;; SendAnswer
   \   00000038   0010A0E3           MOV      R1,#+0
   \   0000003C   710100EF           SWI      +369
   1874          }
   \   00000040   0080BDE8           POP      {PC}             ;; return
   1875          

   \                                 In segment CODE, align 4, keep-with-next
   1876          void set_my_xstatus(void)
   1877          {
   \                     set_my_xstatus:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   1878            TPKT *p;
   1879            char *s1;
   1880            char *s2;
   1881            int l1;
   1882            int l2;
   1883            p=malloc(sizeof(PKT)+1);
   1884            p->pkt.uin=0;               // Никому; поле нужно проигнорировать на сервере
   1885            p->pkt.type=T_MY_XSTATUS_CH; // Тип пакета: изменение статуса
   1886            p->pkt.data_len=1;          // Длина пакета: 1 байт
   1887            p->data[0]=CurrentXStatus;
   \   00000004   ........           LDR      R8,??DataTable78  ;; contactlist_menuhdr
   1888            SUBPROC((void *)SendAnswer,0,p);
   \   00000008   ........           LDR      R6,??DataTable75  ;; SendAnswer
   \   0000000C   0CD04DE2           SUB      SP,SP,#+12
   \   00000010   0900A0E3           MOV      R0,#+9
   \   00000014   140000EF           SWI      +20
   \   00000018   0040A0E1           MOV      R4,R0
   \   0000001C   0050A0E3           MOV      R5,#+0
   \   00000020   005084E5           STR      R5,[R4, #+0]
   \   00000024   1600A0E3           MOV      R0,#+22
   \   00000028   B400C4E1           STRH     R0,[R4, #+4]
   \   0000002C   0100A0E3           MOV      R0,#+1
   \   00000030   B600C4E1           STRH     R0,[R4, #+6]
   \   00000034   0C0298E5           LDR      R0,[R8, #+524]
   \   00000038   0420A0E1           MOV      R2,R4
   \   0000003C   0800C4E5           STRB     R0,[R4, #+8]
   \   00000040   0010A0E3           MOV      R1,#+0
   \   00000044   0600A0E1           MOV      R0,R6
   \   00000048   710100EF           SWI      +369
   1889            s1=GetXStatusStr(CurrentXStatus*3+1,&l1);
   \   0000004C   0C0298E5           LDR      R0,[R8, #+524]
   \   00000050   0D10A0E1           MOV      R1,SP
   \   00000054   800080E0           ADD      R0,R0,R0, LSL #+1
   \   00000058   010080E2           ADD      R0,R0,#+1
   \   0000005C   ........           _BLF     GetXStatusStr,??GetXStatusStr??rA
   \   00000060   0070A0E1           MOV      R7,R0
   1890            s2=GetXStatusStr(CurrentXStatus*3+2,&l2);
   \   00000064   0C0298E5           LDR      R0,[R8, #+524]
   \   00000068   04108DE2           ADD      R1,SP,#+4
   \   0000006C   800080E0           ADD      R0,R0,R0, LSL #+1
   \   00000070   020080E2           ADD      R0,R0,#+2
   \   00000074   ........           _BLF     GetXStatusStr,??GetXStatusStr??rA
   \   00000078   0080A0E1           MOV      R8,R0
   1891            if ((!s1)||(!s2)) return;
   \   0000007C   000057E3           CMP      R7,#+0
   \   00000080   00005813           CMPNE    R8,#+0
   \   00000084   F781BD08           POPEQ    {R0-R2,R4-R8,PC}
   1892            p=malloc(sizeof(PKT)+l1+l2+1);
   \   00000088   00009DE5           LDR      R0,[SP, #+0]
   \   0000008C   04109DE5           LDR      R1,[SP, #+4]
   \   00000090   000081E0           ADD      R0,R1,R0
   \   00000094   090080E2           ADD      R0,R0,#+9
   \   00000098   140000EF           SWI      +20
   \   0000009C   0040A0E1           MOV      R4,R0
   1893            p->pkt.uin=0;
   \   000000A0   005084E5           STR      R5,[R4, #+0]
   1894            p->pkt.type=T_XTEXT_SET;
   \   000000A4   1A00A0E3           MOV      R0,#+26
   \   000000A8   B400C4E1           STRH     R0,[R4, #+4]
   1895            p->pkt.data_len=l1+l2+1;
   \   000000AC   00009DE5           LDR      R0,[SP, #+0]
   \   000000B0   04109DE5           LDR      R1,[SP, #+4]
   \   000000B4   000081E0           ADD      R0,R1,R0
   \   000000B8   010080E2           ADD      R0,R0,#+1
   \   000000BC   B600C4E1           STRH     R0,[R4, #+6]
   1896            strncpy(p->data+0,s1,l1);
   \   000000C0   00209DE5           LDR      R2,[SP, #+0]
   \   000000C4   0710A0E1           MOV      R1,R7
   \   000000C8   080084E2           ADD      R0,R4,#+8
   \   000000CC   160100EF           SWI      +278
   1897            p->data[l1]=0;
   \   000000D0   00009DE5           LDR      R0,[SP, #+0]
   1898            strncpy(p->data+l1+1,s2,l2);
   \   000000D4   0810A0E1           MOV      R1,R8
   \   000000D8   040080E0           ADD      R0,R0,R4
   \   000000DC   0850C0E5           STRB     R5,[R0, #+8]
   \   000000E0   00009DE5           LDR      R0,[SP, #+0]
   \   000000E4   04209DE5           LDR      R2,[SP, #+4]
   \   000000E8   040080E0           ADD      R0,R0,R4
   \   000000EC   090080E2           ADD      R0,R0,#+9
   \   000000F0   160100EF           SWI      +278
   1899            SUBPROC((void *)SendAnswer,0,p);
   \   000000F4   0420A0E1           MOV      R2,R4
   \   000000F8   0010A0E3           MOV      R1,#+0
   \   000000FC   0600A0E1           MOV      R0,R6
   \   00000100   710100EF           SWI      +369
   1900          }
   \   00000104   F781BDE8           POP      {R0-R2,R4-R8,PC}  ;; return
   1901          

   \                                 In segment CODE, align 4, keep-with-next
   1902          void to_develop(void)
   1903          {
   1904            if (silenthide) return;
   \                     to_develop:
   \   00000000   ........           LDR      R0,??DataTable78  ;; contactlist_menuhdr
   \   00000004   00402DE9           PUSH     {LR}
   \   00000008   F01190E5           LDR      R1,[R0, #+496]
   \   0000000C   000051E3           CMP      R1,#+0
   \   00000010   0080BD18           POPNE    {PC}
   1905            gipc.name_to=ipc_xtask_name;
   \   00000014   ........           LDR      R2,??DataTable87  ;; Canvas
   \   00000018   671FA0E3           MOV      R1,#+412
   \   0000001C   503F82E2           ADD      R3,R2,#+320
   1906            gipc.name_from=ipc_my_name;
   \   00000020   482F82E2           ADD      R2,R2,#+288
   \   00000024   A02180E5           STR      R2,[R0, #+416]
   1907            gipc.data=(void *)maincsm_id;
   \   00000028   DC2190E5           LDR      R2,[R0, #+476]
   \   0000002C   003081E7           STR      R3,[R1, +R0]
   \   00000030   A42180E5           STR      R2,[R0, #+420]
   1908            GBS_SendMessage(MMI_CEPID,MSG_IPC,IPC_XTASK_SHOW_CSM,&gipc);
   \   00000034   003081E0           ADD      R3,R1,R0
   \   00000038   0220A0E3           MOV      R2,#+2
   \   0000003C   B010A0E3           MOV      R1,#+176
   \   00000040   DE1C81E3           ORR      R1,R1,#0xDE00
   \   00000044   0900A0E3           MOV      R0,#+9
   \   00000048   420C80E3           ORR      R0,R0,#0x4200
   \   0000004C   000100EF           SWI      +256
   1909          }
   \   00000050   0080BDE8           POP      {PC}             ;; return
   1910          

   \                                 In segment CODE, align 4, keep-with-next
   1911          void ReqAddMsgToChat(CLIST *t)
   1912          {
   \                     ReqAddMsgToChat:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   1913            if (edchat_id)
   \   00000004   ........           LDR      R5,??DataTable78  ;; contactlist_menuhdr
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   580295E5           LDR      R0,[R5, #+600]
   \   00000010   000050E3           CMP      R0,#+0
   \   00000014   7080BD08           POPEQ    {R4-R6,PC}
   1914            {
   1915              void *data=FindGUIbyId(edchat_id,NULL);
   \   00000018   580295E5           LDR      R0,[R5, #+600]
   \   0000001C   0010A0E3           MOV      R1,#+0
   \   00000020   090200EF           SWI      +521
   \   00000024   0060A0E1           MOV      R6,R0
   1916              {
   1917                EDCHAT_STRUCT *ed_struct;
   1918                ed_struct=EDIT_GetUserPointer(data);
   \   00000028   DF0100EF           SWI      +479
   1919                if (ed_struct)
   \   0000002C   000050E3           CMP      R0,#+0
   \   00000030   7080BD08           POPEQ    {R4-R6,PC}
   1920                {
   1921                  if (ed_struct->ed_contact==t)
   \   00000034   000090E5           LDR      R0,[R0, #+0]
   \   00000038   040050E1           CMP      R0,R4
   \   0000003C   7080BD18           POPNE    {R4-R6,PC}
   1922                  {
   1923                    if (EDIT_IsBusy(data))
   \   00000040   0600A0E1           MOV      R0,R6
   \   00000044   1C0200EF           SWI      +540
   \   00000048   000050E3           CMP      R0,#+0
   \   0000004C   0400000A           BEQ      ??ReqAddMsgToChat_0
   1924                    {
   1925                      t->req_add=1;
   \   00000050   0100A0E3           MOV      R0,#+1
   \   00000054   5C0084E5           STR      R0,[R4, #+92]
   1926                      time_to_stop_t9=3;
   \   00000058   0300A0E3           MOV      R0,#+3
   \   0000005C   700285E5           STR      R0,[R5, #+624]
   \   00000060   7080BDE8           POP      {R4-R6,PC}
   1927                    }
   1928                    else
   1929                    {
   1930                      AddMsgToChat(data);
   \                     ??ReqAddMsgToChat_0:
   \   00000064   0600A0E1           MOV      R0,R6
   \   00000068   ........           BL       AddMsgToChat
   1931                      DirectRedrawGUI_ID(edchat_id);
   \   0000006C   580295E5           LDR      R0,[R5, #+600]
   \   00000070   400100EF           SWI      +320
   1932          	  }
   1933          	}
   1934                }
   1935              }
   1936            }
   1937          }
   \   00000074   7080BDE8           POP      {R4-R6,PC}       ;; return
   1938          

   \                                 In segment CODE, align 4, keep-with-next
   1939          ProcessPacket(TPKT *p)
   1940          {
   \                     ProcessPacket:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   \   00000004   40DF4DE2           SUB      SP,SP,#+256
   1941            extern const int VIBR_TYPE, VIBR_ON_CONNECT;
   1942            CLIST *t,*t2;
   1943            LOGQ *q;
   1944            char s[256];
   1945            switch(p->pkt.type)
   \   00000008   ........           LDR      R8,??DataTable87  ;; Canvas
   \   0000000C   ........           LDR      R5,??DataTable102  ;; contactlist_menuhdr
   \   00000010   0040A0E1           MOV      R4,R0
   \   00000014   B410D4E1           LDRH     R1,[R4, #+4]
   \   00000018   000094E5           LDR      R0,[R4, #+0]
   \   0000001C   01A0A0E3           MOV      R10,#+1
   \   00000020   0070A0E3           MOV      R7,#+0
   \   00000024   031041E2           SUB      R1,R1,#+3
   \   00000028   1F0051E3           CMP      R1,#+31
   \   0000002C   D301008A           BHI      ??ProcessPacket_1
   \   00000030   022F8FE2           ADR      R2,??ProcessPacket_0
   \   00000034   8110A0E1           MOV      R1,R1, LSL #+1
   \   00000038   B12092E1           LDRH     R2,[R2, R1]
   \   0000003C   02F18FE0           ADD      PC,PC,R2, LSL #+2
   \                     ??ProcessPacket_0:
   \   00000040   BF000F00CF01       DC16     +191,+15,+463,+463
   \              CF01        
   \   00000048   1200CF016900       DC16     +18,+463,+105,+463
   \              CF01        
   \   00000050   CF01CF01CF01       DC16     +463,+463,+463,+463
   \              CF01        
   \   00000058   CF012E012E01       DC16     +463,+302,+302,+463
   \              CF01        
   \   00000060   CF013C004A00       DC16     +463,+60,+74,+463
   \              CF01        
   \   00000068   CF01CF015F01       DC16     +463,+463,+351,+463
   \              CF01        
   \   00000070   CF01CF01CF01       DC16     +463,+463,+463,+463
   \              CF01        
   \   00000078   CD01CF01CF01       DC16     +461,+463,+463,+76
   \              4C00        
   1946            {
   1947            case T_LOGIN:
   1948              set_my_status();
   \                     ??ProcessPacket_2:
   \   00000080   ........           BL       set_my_status
   1949              set_my_xstatus();
   \   00000084   ........           BL       set_my_xstatus
   \   00000088   BC0100EA           B        ??ProcessPacket_1
   1950              break;
   1951            case T_CLENTRY:
   1952              if (p->pkt.uin)
   \                     ??ProcessPacket_3:
   \   0000008C   000050E3           CMP      R0,#+0
   \   00000090   1800000A           BEQ      ??ProcessPacket_4
   1953              {
   1954                if ((t=FindContactByUin(p->pkt.uin)))
   \   00000094   ........           _BLF     FindContactByUin,??FindContactByUin??rA
   \   00000098   0060B0E1           MOVS     R6,R0
   \   0000009C   0E00000A           BEQ      ??ProcessPacket_5
   1955                {
   1956          	//        t->state=0xFFFF;
   1957                  if (!t->local) strncpy(t->name,p->data,63);
   \   000000A0   800096E5           LDR      R0,[R6, #+128]
   \   000000A4   000050E3           CMP      R0,#+0
   \   000000A8   0300001A           BNE      ??ProcessPacket_6
   \   000000AC   3F20A0E3           MOV      R2,#+63
   \   000000B0   081084E2           ADD      R1,R4,#+8
   \   000000B4   140086E2           ADD      R0,R6,#+20
   \   000000B8   160100EF           SWI      +278
   1958          	t->group=GROUP_CACHE;
   \                     ??ProcessPacket_6:
   \   000000BC   500295E5           LDR      R0,[R5, #+592]
   \   000000C0   100086E5           STR      R0,[R6, #+16]
   1959          	ChangeContactPos(t);
   \                     ??ProcessPacket_7:
   \   000000C4   0600A0E1           MOV      R0,R6
   \   000000C8   ........           _BLF     ChangeContactPos,??ChangeContactPos??rA
   1960          	RecountMenu(t, 1);
   \   000000CC   0110A0E3           MOV      R1,#+1
   \   000000D0   0600A0E1           MOV      R0,R6
   \                     ??ProcessPacket_8:
   \   000000D4   ........           BL       RecountMenu
   \   000000D8   A80100EA           B        ??ProcessPacket_1
   1961                }
   1962                else
   1963                {
   1964                  RecountMenu(AddContact(p->pkt.uin,p->data, GROUP_CACHE, 0),1);
   \                     ??ProcessPacket_5:
   \   000000DC   502295E5           LDR      R2,[R5, #+592]
   \   000000E0   000094E5           LDR      R0,[R4, #+0]
   \   000000E4   0030A0E3           MOV      R3,#+0
   \   000000E8   081084E2           ADD      R1,R4,#+8
   \   000000EC   ........           _BLF     AddContact,??AddContact??rA
   \   000000F0   0A10A0E1           MOV      R1,R10
   \   000000F4   F6FFFFEA           B        ??ProcessPacket_8
   1965                }
   1966              }
   1967              else
   1968              {
   1969                if(VIBR_ON_CONNECT)
   \                     ??ProcessPacket_4:
   \   000000F8   ........           LDR      R0,??DataTable81  ;; VIBR_ON_CONNECT
   \   000000FC   000090E5           LDR      R0,[R0, #+0]
   \   00000100   000050E3           CMP      R0,#+0
   \   00000104   0100000A           BEQ      ??ProcessPacket_9
   1970                {
   1971                  vibra_count=1;
   \   00000108   14A285E5           STR      R10,[R5, #+532]
   1972                  start_vibra();
   \   0000010C   ........           BL       start_vibra
   1973                }
   1974                GROUP_CACHE=0;
   \                     ??ProcessPacket_9:
   \   00000110   507285E5           STR      R7,[R5, #+592]
   1975                ask_my_info();
   1976                if (contactlist_menu_id)
   \   00000114   540295E5           LDR      R0,[R5, #+596]
   \   00000118   000050E3           CMP      R0,#+0
   \   0000011C   0200000A           BEQ      ??ProcessPacket_10
   1977                {
   1978          	RecountMenu(NULL, 1);
   \   00000120   0110A0E3           MOV      R1,#+1
   \   00000124   0700A0E1           MOV      R0,R7
   \                     ??ProcessPacket_11:
   \   00000128   E9FFFFEA           B        ??ProcessPacket_8
   1979                }
   1980                else
   1981                  create_contactlist_menu();
   \                     ??ProcessPacket_10:
   \   0000012C   ........           BL       create_contactlist_menu
   \   00000130   920100EA           B        ??ProcessPacket_1
   1982              }
   1983              break;
   1984            case T_GROUPID:
   1985              if (t=FindGroupByID(GROUP_CACHE=p->pkt.uin))
   \                     ??ProcessPacket_12:
   \   00000134   500285E5           STR      R0,[R5, #+592]
   \   00000138   ........           _BLF     FindGroupByID,??FindGroupByID??rA
   \   0000013C   0060B0E1           MOVS     R6,R0
   \   00000140   0400000A           BEQ      ??ProcessPacket_13
   1986              {
   1987                strncpy(t->name,p->data,63);
   \   00000144   3F20A0E3           MOV      R2,#+63
   \   00000148   081084E2           ADD      R1,R4,#+8
   \   0000014C   140086E2           ADD      R0,R6,#+20
   \   00000150   160100EF           SWI      +278
   1988                ChangeContactPos(t);
   \   00000154   DAFFFFEA           B        ??ProcessPacket_7
   1989                RecountMenu(t, 1);
   1990              }
   1991              else
   1992              {
   1993                RecountMenu(AddGroup(p->pkt.uin,p->data), 1);
   \                     ??ProcessPacket_13:
   \   00000158   000094E5           LDR      R0,[R4, #+0]
   \   0000015C   081084E2           ADD      R1,R4,#+8
   \   00000160   ........           _BLF     AddGroup,??AddGroup??rA
   \   00000164   0110A0E3           MOV      R1,#+1
   \   00000168   D9FFFFEA           B        ??ProcessPacket_8
   1994              }
   1995              break;
   1996            case T_GROUPFOLLOW:
   1997              GROUP_CACHE=p->pkt.uin;
   \                     ??ProcessPacket_14:
   \   0000016C   500285E5           STR      R0,[R5, #+592]
   \   00000170   820100EA           B        ??ProcessPacket_1
   1998              break;
   1999            case T_CONTACTREMOVED:
   2000              t=FindContactByUin(p->pkt.uin);
   \                     ??ProcessPacket_15:
   \   00000174   ........           _BLF     FindContactByUin,??FindContactByUin??rA
   \   00000178   0060B0E1           MOVS     R6,R0
   2001              if(!t) break;
   \   0000017C   7F01000A           BEQ      ??ProcessPacket_1
   2002              if (edchat_id)
   \   00000180   580295E5           LDR      R0,[R5, #+600]
   \   00000184   000050E3           CMP      R0,#+0
   \   00000188   0E00000A           BEQ      ??ProcessPacket_16
   2003                  {
   2004                  void *data=FindGUIbyId(edchat_id,NULL);
   \   0000018C   580295E5           LDR      R0,[R5, #+600]
   \   00000190   0010A0E3           MOV      R1,#+0
   \   00000194   090200EF           SWI      +521
   2005                  if (data)
   \   00000198   000050E3           CMP      R0,#+0
   \   0000019C   0900000A           BEQ      ??ProcessPacket_16
   2006                        {
   2007          	      EDCHAT_STRUCT *ed_struct=EDIT_GetUserPointer(data);
   \   000001A0   DF0100EF           SWI      +479
   2008          	      if (ed_struct)
   \   000001A4   000050E3           CMP      R0,#+0
   \   000001A8   0600000A           BEQ      ??ProcessPacket_16
   2009                      	    {
   2010          	            if (ed_struct->ed_contact==t)
   \   000001AC   000090E5           LDR      R0,[R0, #+0]
   \   000001B0   060050E1           CMP      R0,R6
   \   000001B4   0300001A           BNE      ??ProcessPacket_16
   2011          	                {
   2012          	                GeneralFunc_flag1(edchat_id,1);
   \   000001B8   580295E5           LDR      R0,[R5, #+600]
   \   000001BC   0110A0E3           MOV      R1,#+1
   \   000001C0   3D0100EF           SWI      +317
   2013                                  edchat_id=0;
   \   000001C4   587285E5           STR      R7,[R5, #+600]
   2014          	                }
   2015          	            }
   2016                        };
   2017                  };
   2018              t2=t->prev;
   \                     ??ProcessPacket_16:
   \   000001C8   045096E5           LDR      R5,[R6, #+4]
   2019              DeleteContact(t);
   \   000001CC   0600A0E1           MOV      R0,R6
   \   000001D0   ........           _BLF     DeleteContact,??DeleteContact??rA
   2020              if(t2) RecountMenu(t2,1);
   \   000001D4   000055E3           CMP      R5,#+0
   \   000001D8   6801000A           BEQ      ??ProcessPacket_1
   \   000001DC   0110A0E3           MOV      R1,#+1
   \   000001E0   0500A0E1           MOV      R0,R5
   \   000001E4   BAFFFFEA           B        ??ProcessPacket_8
   2021              break;
   2022              
   2023            case T_STATUSCHANGE:
   2024              t=FindContactByUin(p->pkt.uin);
   \                     ??ProcessPacket_17:
   \   000001E8   ........           _BLF     FindContactByUin,??FindContactByUin??rA
   \   000001EC   0060B0E1           MOVS     R6,R0
   2025              if (t)
   \   000001F0   4300000A           BEQ      ??ProcessPacket_18
   2026              {
   2027                int i=t->state;
   2028                CLIST *oldt=NULL;
   \   000001F4   0A00D4E5           LDRB     R0,[R4, #+10]
   \   000001F8   B615D6E1           LDRH     R1,[R6, #+86]
   \   000001FC   B485D6E1           LDRH     R8,[R6, #+84]
   \   00000200   0090A0E3           MOV      R9,#+0
   \   00000204   000051E1           CMP      R1,R0
   \   00000208   1D00000A           BEQ      ??ProcessPacket_19
   2029                if (t->xstate!=p->data[2])  // Если картинка икс статуса сменилась
   2030                {
   2031                  t->xstate=p->data[2];
   \   0000020C   B605C6E1           STRH     R0,[R6, #+86]
   2032                  FreeXText(t);
   \   00000210   0600A0E1           MOV      R0,R6
   \   00000214   ........           _BLF     FreeXText,??FreeXText??rA
   2033                  if (t->xstate && ENA_AUTO_XTXT)   // Если установлен икс статус и можно запрашивать по смене икс статуса :)
   \   00000218   B605D6E1           LDRH     R0,[R6, #+86]
   \   0000021C   000050E3           CMP      R0,#+0
   \   00000220   1600000A           BEQ      ??ProcessPacket_20
   \   00000224   68059FE5           LDR      R0,??ProcessPacket_21+0x4  ;; ENA_AUTO_XTXT
   \   00000228   000090E5           LDR      R0,[R0, #+0]
   \   0000022C   000050E3           CMP      R0,#+0
   \   00000230   1200000A           BEQ      ??ProcessPacket_20
   2034                  {
   2035                    t->req_xtext=1;
   \   00000234   7CA086E5           STR      R10,[R6, #+124]
   2036                    if (edchat_id)   // Если открыт чат
   \   00000238   580295E5           LDR      R0,[R5, #+600]
   \   0000023C   000050E3           CMP      R0,#+0
   \   00000240   0F00000A           BEQ      ??ProcessPacket_19
   2037                    {
   2038                      void *data=FindGUIbyId(edchat_id,NULL);
   \   00000244   580295E5           LDR      R0,[R5, #+600]
   \   00000248   0010A0E3           MOV      R1,#+0
   \   0000024C   090200EF           SWI      +521
   2039                      if (data)
   \   00000250   000050E3           CMP      R0,#+0
   \   00000254   0A00000A           BEQ      ??ProcessPacket_19
   2040                      {
   2041                        EDCHAT_STRUCT *ed_struct=EDIT_GetUserPointer(data);
   \   00000258   DF0100EF           SWI      +479
   2042                        if (ed_struct)
   \   0000025C   000050E3           CMP      R0,#+0
   \   00000260   0700000A           BEQ      ??ProcessPacket_19
   2043                        {
   2044                          if (ed_struct->ed_contact==t)   // Если наш чат то запрашиваем текст статуса
   \   00000264   000090E5           LDR      R0,[R0, #+0]
   \   00000268   060050E1           CMP      R0,R6
   \   0000026C   0400001A           BNE      ??ProcessPacket_19
   2045                          {
   2046                            t->req_xtext=0;
   \   00000270   7C7086E5           STR      R7,[R6, #+124]
   2047                            RequestXText(t->uin);
   \   00000274   0C0096E5           LDR      R0,[R6, #+12]
   \   00000278   ........           BL       RequestXText
   \   0000027C   000000EA           B        ??ProcessPacket_19
   2048                          }
   2049                        }
   2050          	    }
   2051          	  }
   2052          	}
   2053                  else  // Если икс статус не установлен то на всякий случай снимаем флаг получения текста
   2054                  {
   2055                    t->req_xtext=0;
   \                     ??ProcessPacket_20:
   \   00000280   7C7086E5           STR      R7,[R6, #+124]
   2056                  }
   2057                }
   2058                if (contactlist_menu_id)
   \                     ??ProcessPacket_19:
   \   00000284   540295E5           LDR      R0,[R5, #+596]
   \   00000288   000050E3           CMP      R0,#+0
   \   0000028C   0500000A           BEQ      ??ProcessPacket_22
   2059                {
   2060          	oldt=FindContactByN(GetCurMenuItem(FindGUIbyId(contactlist_menu_id,NULL)));
   \   00000290   540295E5           LDR      R0,[R5, #+596]
   \   00000294   0010A0E3           MOV      R1,#+0
   \   00000298   090200EF           SWI      +521
   \   0000029C   8F0100EF           SWI      +399
   \   000002A0   ........           _BLF     FindContactByN,??FindContactByN??rA
   \   000002A4   0090A0E1           MOV      R9,R0
   2061                }
   2062                t->state=*((unsigned short *)(p->data));
   \                     ??ProcessPacket_22:
   \   000002A8   B800D4E1           LDRH     R0,[R4, #+8]
   \   000002AC   B405C6E1           STRH     R0,[R6, #+84]
   2063                LogStatusChange(t);
   \   000002B0   0600A0E1           MOV      R0,R6
   \   000002B4   ........           _BLF     LogStatusChange,??LogStatusChange??rA
   2064                ChangeContactPos(t);
   \   000002B8   0600A0E1           MOV      R0,R6
   \   000002BC   ........           _BLF     ChangeContactPos,??ChangeContactPos??rA
   2065                RecountMenu(oldt, 1);
   \   000002C0   0110A0E3           MOV      R1,#+1
   \   000002C4   0900A0E1           MOV      R0,R9
   \   000002C8   ........           BL       RecountMenu
   2066                if ((t->state!=0xFFFF)&&(i==0xFFFF))//Звук
   \   000002CC   B405D6E1           LDRH     R0,[R6, #+84]
   \   000002D0   FF10A0E3           MOV      R1,#+255
   \   000002D4   FF1C81E3           ORR      R1,R1,#0xFF00
   \   000002D8   010050E1           CMP      R0,R1
   \   000002DC   0200000A           BEQ      ??ProcessPacket_23
   \   000002E0   010058E1           CMP      R8,R1
   2067                {
   2068          	Play(sndGlobal);
   \   000002E4   AC049F05           LDREQ    R0,??ProcessPacket_21+0x8  ;; sndGlobal
   \   000002E8   0400000A           BEQ      ??ProcessPacket_24
   2069                }
   2070                if ((i!=0xFFFF)&&(t->state==0xFFFF))//Звук
   \                     ??ProcessPacket_23:
   \   000002EC   010058E1           CMP      R8,R1
   \   000002F0   0300000A           BEQ      ??ProcessPacket_18
   \   000002F4   010050E1           CMP      R0,R1
   \   000002F8   0100001A           BNE      ??ProcessPacket_18
   2071                {
   2072          	Play(sndSrvMsg);
   \   000002FC   98049FE5           LDR      R0,??ProcessPacket_21+0xC  ;; sndSrvMsg
   \                     ??ProcessPacket_24:
   \   00000300   ........           BL       Play
   2073                }
   2074              }
   2075              if (edchat_id)
   \                     ??ProcessPacket_18:
   \   00000304   580295E5           LDR      R0,[R5, #+600]
   \   00000308   000050E3           CMP      R0,#+0
   \   0000030C   1B01000A           BEQ      ??ProcessPacket_1
   2076              {
   2077                void *data=FindGUIbyId(edchat_id,NULL);
   \   00000310   580295E5           LDR      R0,[R5, #+600]
   \   00000314   0010A0E3           MOV      R1,#+0
   \   00000318   090200EF           SWI      +521
   2078                {
   2079          	EDCHAT_STRUCT *ed_struct;
   2080          	ed_struct=EDIT_GetUserPointer(data);
   \   0000031C   DF0100EF           SWI      +479
   2081          	if (ed_struct)
   \   00000320   000050E3           CMP      R0,#+0
   \   00000324   1501000A           BEQ      ??ProcessPacket_1
   2082          	{
   2083          	  if (ed_struct->ed_contact==t)
   \   00000328   000090E5           LDR      R0,[R0, #+0]
   \   0000032C   060050E1           CMP      R0,R6
   \   00000330   1201001A           BNE      ??ProcessPacket_1
   2084          	  {
   2085          	    DirectRedrawGUI_ID(edchat_id);
   \   00000334   580295E5           LDR      R0,[R5, #+600]
   \   00000338   400100EF           SWI      +320
   \   0000033C   0F0100EA           B        ??ProcessPacket_1
   2086          	  }
   2087          	}
   2088                }
   2089              }
   2090              break;
   2091            case T_RECVMSG:
   2092              t=FindContactByUin(p->pkt.uin);
   \                     ??ProcessPacket_25:
   \   00000340   ........           _BLF     FindContactByUin,??FindContactByUin??rA
   \   00000344   0060B0E1           MOVS     R6,R0
   2093              if (!t)
   \   00000348   0900001A           BNE      ??ProcessPacket_26
   2094              {
   2095                sprintf(s,percent_d,p->pkt.uin);
   \   0000034C   002094E5           LDR      R2,[R4, #+0]
   \   00000350   0B1088E2           ADD      R1,R8,#+11
   \   00000354   0D00A0E1           MOV      R0,SP
   \   00000358   160000EF           SWI      +22
   2096                t=AddContact(p->pkt.uin,s,GROUP_CACHE,0);
   \   0000035C   502295E5           LDR      R2,[R5, #+592]
   \   00000360   000094E5           LDR      R0,[R4, #+0]
   \   00000364   0030A0E3           MOV      R3,#+0
   \   00000368   0D10A0E1           MOV      R1,SP
   \   0000036C   ........           _BLF     AddContact,??AddContact??rA
   \   00000370   0060A0E1           MOV      R6,R0
   2097              }
   2098              if(!t->isactive && HISTORY_BUFFER) GetHistory(t, 64<<HISTORY_BUFFER);
   \                     ??ProcessPacket_26:
   \   00000374   700096E5           LDR      R0,[R6, #+112]
   \   00000378   000050E3           CMP      R0,#+0
   \   0000037C   0700001A           BNE      ??ProcessPacket_27
   \   00000380   ........           LDR      R0,??DataTable82  ;; HISTORY_BUFFER
   \   00000384   000090E5           LDR      R0,[R0, #+0]
   \   00000388   000050E3           CMP      R0,#+0
   \   0000038C   0300000A           BEQ      ??ProcessPacket_27
   \   00000390   4010A0E3           MOV      R1,#+64
   \   00000394   1110A0E1           LSL      R1,R1,R0
   \   00000398   0600A0E1           MOV      R0,R6
   \   0000039C   ........           _BLF     GetHistory,??GetHistory??rA
   2099              t->isactive=ACTIVE_TIME;
   \                     ??ProcessPacket_27:
   \   000003A0   5A0FA0E3           MOV      R0,#+360
   \   000003A4   700086E5           STR      R0,[R6, #+112]
   2100          
   2101              //    ChangeContactPos(t);
   2102              if(VIBR_TYPE)
   \   000003A8   ........           LDR      R0,??DataTable83  ;; VIBR_TYPE
   \   000003AC   000090E5           LDR      R0,[R0, #+0]
   \   000003B0   000050E3           CMP      R0,#+0
   2103                vibra_count=2;
   \   000003B4   0200A013           MOVNE    R0,#+2
   \   000003B8   14028515           STRNE    R0,[R5, #+532]
   2104              else
   2105                vibra_count=1;
   \   000003BC   14A28505           STREQ    R10,[R5, #+532]
   2106              start_vibra();
   \   000003C0   ........           BL       start_vibra
   2107              IlluminationOn(ILL_DISP_RECV,ILL_KEYS_RECV,ILL_RECV_TMR,ILL_RECV_FADE); //Illumination by BoBa 19.04.2007
   \   000003C4   D4039FE5           LDR      R0,??ProcessPacket_21+0x10  ;; ILL_RECV_FADE
   \   000003C8   003090E5           LDR      R3,[R0, #+0]
   \   000003CC   D0039FE5           LDR      R0,??ProcessPacket_21+0x14  ;; ILL_RECV_TMR
   \   000003D0   002090E5           LDR      R2,[R0, #+0]
   \   000003D4   CC039FE5           LDR      R0,??ProcessPacket_21+0x18  ;; ILL_KEYS_RECV
   \   000003D8   001090E5           LDR      R1,[R0, #+0]
   \   000003DC   C8039FE5           LDR      R0,??ProcessPacket_21+0x1C  ;; ILL_DISP_RECV
   \   000003E0   000090E5           LDR      R0,[R0, #+0]
   \   000003E4   ........           BL       IlluminationOn
   2108              if (t->name[0]=='#')
   \   000003E8   1400D6E5           LDRB     R0,[R6, #+20]
   \   000003EC   230050E3           CMP      R0,#+35
   \   000003F0   1100001A           BNE      ??ProcessPacket_28
   2109              {
   2110                //Если это конференция, патчим имя
   2111                char *s=strchr(p->data,'>');
   \   000003F4   3E10A0E3           MOV      R1,#+62
   \   000003F8   080084E2           ADD      R0,R4,#+8
   \   000003FC   180000EF           SWI      +24
   2112                //Если нашли символ > и после него пробел и ник короче 16 символов
   2113                if (s)
   \   00000400   000050E3           CMP      R0,#+0
   \   00000404   0C00000A           BEQ      ??ProcessPacket_28
   2114                {
   2115          	if ((s[1]==' ')&&((s-p->data)<16))
   \   00000408   0110D0E5           LDRB     R1,[R0, #+1]
   \   0000040C   200051E3           CMP      R1,#+32
   \   00000410   0900001A           BNE      ??ProcessPacket_28
   \   00000414   081084E2           ADD      R1,R4,#+8
   \   00000418   011040E0           SUB      R1,R0,R1
   \   0000041C   100051E3           CMP      R1,#+16
   \   00000420   050000AA           BGE      ??ProcessPacket_28
   2116          	{
   2117          	  *s=0; //Режем строку
   \   00000424   0070C0E5           STRB     R7,[R0, #+0]
   2118          	  AddStringToLog(t,0x02,s+2,p->data,0xFFFFFFFF); //Добавляем имя из текста сообщения
   \   00000428   0710E0E1           MVN      R1,R7
   \   0000042C   02002DE9           PUSH     {R1}
   \   00000430   083084E2           ADD      R3,R4,#+8
   \   00000434   022080E2           ADD      R2,R0,#+2
   \   00000438   030000EA           B        ??ProcessPacket_29
   2119          	  goto L1;
   2120          	}
   2121                }
   2122              }
   2123              AddStringToLog(t,0x02,p->data,t->name,0xFFFFFFFF);
   \                     ??ProcessPacket_28:
   \   0000043C   0700E0E1           MVN      R0,R7
   \   00000440   01002DE9           PUSH     {R0}
   \   00000444   143086E2           ADD      R3,R6,#+20
   \   00000448   082084E2           ADD      R2,R4,#+8
   \                     ??ProcessPacket_29:
   \   0000044C   0210A0E3           MOV      R1,#+2
   \   00000450   0600A0E1           MOV      R0,R6
   \   00000454   ........           BL       AddStringToLog
   \   00000458   04D08DE2           ADD      SP,SP,#+4
   2124              L1:
   2125              //Разворачиваем группу, в которой пришло сообщение
   2126              {
   2127                CLIST *g=FindGroupByID(t->group);
   \   0000045C   100096E5           LDR      R0,[R6, #+16]
   \   00000460   ........           _BLF     FindGroupByID,??FindGroupByID??rA
   2128                if (g)
   \   00000464   000050E3           CMP      R0,#+0
   2129                {
   2130          	if (g->state)
   \   00000468   B415D011           LDRHNE   R1,[R0, #+84]
   \   0000046C   00005113           CMPNE    R1,#+0
   2131          	{
   2132          	  g->state=0;
   \   00000470   B475C011           STRHNE   R7,[R0, #+84]
   2133          	}
   2134                }
   2135              }
   2136              ReqAddMsgToChat(t);
   \   00000474   0600A0E1           MOV      R0,R6
   \   00000478   ........           BL       ReqAddMsgToChat
   2137              RecountMenu(t, 1);
   \   0000047C   0110A0E3           MOV      R1,#+1
   \   00000480   0600A0E1           MOV      R0,R6
   \   00000484   ........           BL       RecountMenu
   2138              extern const int DEVELOP_IF;
   2139              switch (DEVELOP_IF)
   \   00000488   20039FE5           LDR      R0,??ProcessPacket_21+0x20  ;; DEVELOP_IF
   \   0000048C   000090E5           LDR      R0,[R0, #+0]
   \   00000490   000050E3           CMP      R0,#+0
   \   00000494   0200000A           BEQ      ??ProcessPacket_30
   \   00000498   010050E2           SUBS     R0,R0,#+1
   \   0000049C   0C00000A           BEQ      ??ProcessPacket_31
   \   000004A0   B60000EA           B        ??ProcessPacket_1
   2140              {
   2141              case 0:
   2142                if ((((CSM_RAM *)(CSM_root()->csm_q->csm.last))->id!=maincsm_id) && !InAway()) to_develop();
   \                     ??ProcessPacket_30:
   \   000004A4   068100EF           SWI      +33030
   \   000004A8   080090E5           LDR      R0,[R0, #+8]
   \   000004AC   DC1195E5           LDR      R1,[R5, #+476]
   \   000004B0   0C0090E5           LDR      R0,[R0, #+12]
   \   000004B4   0C0090E5           LDR      R0,[R0, #+12]
   \   000004B8   010050E1           CMP      R0,R1
   \                     ??ProcessPacket_32:
   \   000004BC   AF00000A           BEQ      ??ProcessPacket_1
   \   000004C0   ........           BL       InAway
   \   000004C4   000050E3           CMP      R0,#+0
   \   000004C8   AC00001A           BNE      ??ProcessPacket_1
   \   000004CC   ........           BL       to_develop
   \   000004D0   AA0000EA           B        ??ProcessPacket_1
   2143                break;
   2144              case 1:
   2145                if ((((CSM_RAM *)(CSM_root()->csm_q->csm.last))->id!=maincsm_id)&&(IsUnlocked())&&!InAway()) to_develop();
   \                     ??ProcessPacket_31:
   \   000004D4   068100EF           SWI      +33030
   \   000004D8   080090E5           LDR      R0,[R0, #+8]
   \   000004DC   DC1195E5           LDR      R1,[R5, #+476]
   \   000004E0   0C0090E5           LDR      R0,[R0, #+12]
   \   000004E4   0C0090E5           LDR      R0,[R0, #+12]
   \   000004E8   010050E1           CMP      R0,R1
   \   000004EC   A300000A           BEQ      ??ProcessPacket_1
   \   000004F0   430000EF           SWI      +67
   \   000004F4   000050E3           CMP      R0,#+0
   \   000004F8   EFFFFFEA           B        ??ProcessPacket_32
   2146                break;
   2147              case 2:
   2148                break;
   2149              }
   2150              break;
   2151            case T_SRV_ACK:
   2152            case T_CLIENT_ACK:
   2153              q=FindContactLOGQByAck(p);
   \                     ??ProcessPacket_33:
   \   000004FC   0400A0E1           MOV      R0,R4
   \   00000500   ........           BL       FindContactLOGQByAck
   2154          /*    if ((
   2155          	IsGuiOnTop(contactlist_menu_id)||
   2156          	  IsGuiOnTop(edchat_id)
   2157          	    )&&(q))
   2158              {
   2159                DrawRoundedFrame(ScreenW()-8,YDISP,ScreenW()-1,YDISP+7,0,0,0,
   2160          		       GetPaletteAdrByColorIndex(0),
   2161          		       GetPaletteAdrByColorIndex(p->pkt.type==T_SRV_ACK?3:4));
   2162              }*/
   2163              if (q)
   \   00000504   000050E3           CMP      R0,#+0
   \   00000508   9C00000A           BEQ      ??ProcessPacket_1
   2164              {
   2165                q->acked=p->pkt.type==T_SRV_ACK?1:2;
   \   0000050C   B410D4E1           LDRH     R1,[R4, #+4]
   \   00000510   100051E3           CMP      R1,#+16
   \   00000514   0110A003           MOVEQ    R1,#+1
   \   00000518   0210A013           MOVNE    R1,#+2
   \   0000051C   041080E5           STR      R1,[R0, #+4]
   2166                t=FindContactByUin(p->pkt.uin);
   \   00000520   000094E5           LDR      R0,[R4, #+0]
   \   00000524   ........           _BLF     FindContactByUin,??FindContactByUin??rA
   \   00000528   0060A0E1           MOV      R6,R0
   2167                if (edchat_id)
   \   0000052C   580295E5           LDR      R0,[R5, #+600]
   \   00000530   000050E3           CMP      R0,#+0
   \   00000534   9100000A           BEQ      ??ProcessPacket_1
   2168                {
   2169          	void *data=FindGUIbyId(edchat_id,NULL);
   \   00000538   580295E5           LDR      R0,[R5, #+600]
   \   0000053C   0010A0E3           MOV      R1,#+0
   \   00000540   090200EF           SWI      +521
   \   00000544   0070B0E1           MOVS     R7,R0
   2170          	if (data)
   \   00000548   8C00000A           BEQ      ??ProcessPacket_1
   2171          	{
   2172          	  EDCHAT_STRUCT *ed_struct;
   2173          	  ed_struct=EDIT_GetUserPointer(data);
   \   0000054C   DF0100EF           SWI      +479
   2174          	  if (ed_struct)
   \   00000550   000050E3           CMP      R0,#+0
   \   00000554   8900000A           BEQ      ??ProcessPacket_1
   2175          	  {
   2176          	    if (ed_struct->ed_contact==t)
   \   00000558   000090E5           LDR      R0,[R0, #+0]
   \   0000055C   060050E1           CMP      R0,R6
   \   00000560   8600001A           BNE      ??ProcessPacket_1
   2177          	    {
   2178          	      if (EDIT_IsBusy(data))
   \   00000564   0700A0E1           MOV      R0,R7
   \   00000568   1C0200EF           SWI      +540
   \   0000056C   000050E3           CMP      R0,#+0
   \   00000570   0300000A           BEQ      ??ProcessPacket_34
   2179          	      {
   2180          		t->req_drawack=1;
   \   00000574   60A086E5           STR      R10,[R6, #+96]
   2181          		time_to_stop_t9=3;
   \   00000578   0300A0E3           MOV      R0,#+3
   \   0000057C   700285E5           STR      R0,[R5, #+624]
   \   00000580   7E0000EA           B        ??ProcessPacket_1
   2182          	      }
   2183          	      else {
   2184          		DrawAck(data);
   \                     ??ProcessPacket_34:
   \   00000584   0700A0E1           MOV      R0,R7
   \   00000588   ........           BL       DrawAck
   2185                          if (p->pkt.type==T_SRV_ACK)
   \   0000058C   B400D4E1           LDRH     R0,[R4, #+4]
   \   00000590   100050E3           CMP      R0,#+16
   \   00000594   7900001A           BNE      ??ProcessPacket_1
   2186                            IlluminationOn(ILL_DISP_SEND,ILL_KEYS_SEND,ILL_SEND_TMR,ILL_RECV_FADE); //Illumination by BoBa 19.04.2007
   \   00000598   00029FE5           LDR      R0,??ProcessPacket_21+0x10  ;; ILL_RECV_FADE
   \   0000059C   003090E5           LDR      R3,[R0, #+0]
   \   000005A0   0C029FE5           LDR      R0,??ProcessPacket_21+0x24  ;; ILL_SEND_TMR
   \   000005A4   002090E5           LDR      R2,[R0, #+0]
   \   000005A8   08029FE5           LDR      R0,??ProcessPacket_21+0x28  ;; ILL_KEYS_SEND
   \   000005AC   001090E5           LDR      R1,[R0, #+0]
   \   000005B0   04029FE5           LDR      R0,??ProcessPacket_21+0x2C  ;; ILL_DISP_SEND
   \   000005B4   000090E5           LDR      R0,[R0, #+0]
   \   000005B8   ........           BL       IlluminationOn
   \   000005BC   6F0000EA           B        ??ProcessPacket_1
   2187                        }
   2188          	    }
   2189          	  }
   2190          	}
   2191                }
   2192              }
   2193              break;
   2194            case T_XTEXT_ACK:
   2195              t=FindContactByUin(p->pkt.uin);
   \                     ??ProcessPacket_35:
   \   000005C0   ........           _BLF     FindContactByUin,??FindContactByUin??rA
   \   000005C4   0060B0E1           MOVS     R6,R0
   2196              if (t)
   \   000005C8   6C00000A           BEQ      ??ProcessPacket_1
   2197              {
   2198                int i;
   2199                int j;
   2200                FreeXText(t);
   \   000005CC   ........           _BLF     FreeXText,??FreeXText??rA
   2201                i=p->pkt.data_len;
   \   000005D0   B670D4E1           LDRH     R7,[R4, #+6]
   2202                memcpy(t->xtext=malloc(i),p->data,i);
   \   000005D4   0700A0E1           MOV      R0,R7
   \   000005D8   140000EF           SWI      +20
   \   000005DC   780086E5           STR      R0,[R6, #+120]
   \   000005E0   0720A0E1           MOV      R2,R7
   \   000005E4   081084E2           ADD      R1,R4,#+8
   \   000005E8   1E0100EF           SWI      +286
   2203                zeromem(s,256);
   \   000005EC   401FA0E3           MOV      R1,#+256
   \   000005F0   0D00A0E1           MOV      R0,SP
   \   000005F4   1D0100EF           SWI      +285
   2204                strcpy(s,t->name);
   \   000005F8   141086E2           ADD      R1,R6,#+20
   \   000005FC   0D00A0E1           MOV      R0,SP
   \   00000600   1A0000EF           SWI      +26
   2205                strcat(s,":\n");
   \   00000604   611F8FE2           ADR      R1,??ProcessPacket_21  ;; ":\n"
   \   00000608   0D00A0E1           MOV      R0,SP
   \   0000060C   170000EF           SWI      +23
   2206                i=strlen(s);
   \   00000610   0D00A0E1           MOV      R0,SP
   \   00000614   1B0000EF           SWI      +27
   2207                j=p->data[0];
   \   00000618   0870D4E5           LDRB     R7,[R4, #+8]
   \   0000061C   0090A0E1           MOV      R9,R0
   2208                if (j>(255-i)) j=255-i;
   \   00000620   FF0069E2           RSB      R0,R9,#+255
   \   00000624   070050E1           CMP      R0,R7
   \   00000628   0070A0B1           MOVLT    R7,R0
   2209                strncpy(s+i,p->data+1,j);
   \   0000062C   0720A0E1           MOV      R2,R7
   \   00000630   091084E2           ADD      R1,R4,#+9
   \   00000634   0D00A0E1           MOV      R0,SP
   \   00000638   000089E0           ADD      R0,R9,R0
   \   0000063C   160100EF           SWI      +278
   2210                i+=j;
   \   00000640   090087E0           ADD      R0,R7,R9
   2211                if (i<255)
   \   00000644   FF0050E3           CMP      R0,#+255
   \   00000648   100000AA           BGE      ??ProcessPacket_36
   2212                {
   2213          	s[i]='\n';
   \   0000064C   0D10A0E1           MOV      R1,SP
   \   00000650   0A20A0E3           MOV      R2,#+10
   \   00000654   0120C0E7           STRB     R2,[R0, +R1]
   2214          	i++;
   \   00000658   0810D4E5           LDRB     R1,[R4, #+8]
   \   0000065C   B620D4E1           LDRH     R2,[R4, #+6]
   \   00000660   010080E2           ADD      R0,R0,#+1
   2215          	j=p->pkt.data_len-p->data[0]-1;
   2216          	if (j>(255-i)) j=255-i;
   2217          	strncpy(s+i,p->data+p->data[0]+1,j);
   \   00000664   0D30A0E1           MOV      R3,SP
   \   00000668   012042E0           SUB      R2,R2,R1
   \   0000066C   017042E2           SUB      R7,R2,#+1
   \   00000670   FF2060E2           RSB      R2,R0,#+255
   \   00000674   070052E1           CMP      R2,R7
   \   00000678   0270A0B1           MOVLT    R7,R2
   \   0000067C   0720A0E1           MOV      R2,R7
   \   00000680   041081E0           ADD      R1,R1,R4
   \   00000684   091081E2           ADD      R1,R1,#+9
   \   00000688   030080E0           ADD      R0,R0,R3
   \   0000068C   160100EF           SWI      +278
   2218                }
   2219          //      if (IsGuiOnTop(contactlist_menu_id)) RefreshGUI();
   2220                if (!edchat_id &&           // Только если редактор не наверху
   2221                    strlen(p->data))       // и x-status не пустой
   \                     ??ProcessPacket_36:
   \   00000690   580295E5           LDR      R0,[R5, #+600]
   \   00000694   000050E3           CMP      R0,#+0
   \   00000698   0600001A           BNE      ??ProcessPacket_37
   \   0000069C   080084E2           ADD      R0,R4,#+8
   \   000006A0   1B0000EF           SWI      +27
   \   000006A4   000050E3           CMP      R0,#+0
   \   000006A8   0200000A           BEQ      ??ProcessPacket_37
   2222                    ShowMSG(0,(int)s);
   \   000006AC   0D10A0E1           MOV      R1,SP
   \   000006B0   0000A0E3           MOV      R0,#+0
   \   000006B4   480100EF           SWI      +328
   2223          
   2224                zeromem(s,256);
   \                     ??ProcessPacket_37:
   \   000006B8   401FA0E3           MOV      R1,#+256
   \   000006BC   0D00A0E1           MOV      R0,SP
   \   000006C0   1D0100EF           SWI      +285
   2225                i=0;
   2226                j=p->data[0];
   \   000006C4   0850D4E5           LDRB     R5,[R4, #+8]
   2227                if (j>(255-i)) j=255-i;
   2228                strncpy(s,p->data+1,j);
   \   000006C8   091084E2           ADD      R1,R4,#+9
   \   000006CC   0D00A0E1           MOV      R0,SP
   \   000006D0   400F55E3           CMP      R5,#+256
   \   000006D4   FF50A0A3           MOVGE    R5,#+255
   \   000006D8   0520A0E1           MOV      R2,R5
   \   000006DC   160100EF           SWI      +278
   2229                i+=j;
   2230                if (i<255)
   \   000006E0   FF0055E3           CMP      R5,#+255
   \   000006E4   100000AA           BGE      ??ProcessPacket_38
   2231                {
   2232          	s[i++]=13;
   \   000006E8   0D10A0E1           MOV      R1,SP
   \   000006EC   0D20A0E3           MOV      R2,#+13
   \   000006F0   0120C5E7           STRB     R2,[R5, +R1]
   \   000006F4   0810D4E5           LDRB     R1,[R4, #+8]
   \   000006F8   B620D4E1           LDRH     R2,[R4, #+6]
   \   000006FC   010085E2           ADD      R0,R5,#+1
   2233          	j=p->pkt.data_len-p->data[0]-1;
   2234          	if (j>(255-i)) j=255-i;
   2235          	strncpy(s+i,p->data+p->data[0]+1,j);
   \   00000700   0D30A0E1           MOV      R3,SP
   \   00000704   012042E0           SUB      R2,R2,R1
   \   00000708   015042E2           SUB      R5,R2,#+1
   \   0000070C   FF2060E2           RSB      R2,R0,#+255
   \   00000710   050052E1           CMP      R2,R5
   \   00000714   0250A0B1           MOVLT    R5,R2
   \   00000718   0520A0E1           MOV      R2,R5
   \   0000071C   041081E0           ADD      R1,R1,R4
   \   00000720   091081E2           ADD      R1,R1,#+9
   \   00000724   030080E0           ADD      R0,R0,R3
   \   00000728   160100EF           SWI      +278
   2236                }
   2237                AddStringToLog(t,0x03,s,x_status_change,0xFFFFFFFF);
   \                     ??ProcessPacket_38:
   \   0000072C   00006AE2           RSB      R0,R10,#+0
   \   00000730   01002DE9           PUSH     {R0}
   \   00000734   523F88E2           ADD      R3,R8,#+328
   \   00000738   04208DE2           ADD      R2,SP,#+4
   \   0000073C   0310A0E3           MOV      R1,#+3
   \   00000740   0600A0E1           MOV      R0,R6
   \   00000744   ........           BL       AddStringToLog
   2238                ReqAddMsgToChat(t);
   \   00000748   0600A0E1           MOV      R0,R6
   \   0000074C   ........           BL       ReqAddMsgToChat
   2239                if (strlen(p->data))       // Если x-status не пустой
   \   00000750   080084E2           ADD      R0,R4,#+8
   \   00000754   1B0000EF           SWI      +27
   \   00000758   000050E3           CMP      R0,#+0
   \   0000075C   04D08DE2           ADD      SP,SP,#+4
   2240                  RecountMenu(t, 1);
   \   00000760   0110A013           MOVNE    R1,#+1
   \   00000764   0600A011           MOVNE    R0,R6
   \   00000768   59FEFF1A           BNE      ??ProcessPacket_8
   2241                else
   2242                  RecountMenu(NULL, 0);
   \   0000076C   0010A0E3           MOV      R1,#+0
   \   00000770   0000A0E3           MOV      R0,#+0
   \   00000774   56FEFFEA           B        ??ProcessPacket_8
   2243              }
   2244              break;
   2245            case T_LASTPRIVACY:
   2246              CurrentPrivateStatus=p->data[0];
   \                     ??ProcessPacket_39:
   \   00000778   0800D4E5           LDRB     R0,[R4, #+8]
   \   0000077C   100285E5           STR      R0,[R5, #+528]
   2247              break;
   2248            }
   2249            mfree(p);
   \                     ??ProcessPacket_1:
   \   00000780   0400A0E1           MOV      R0,R4
   \   00000784   150000EF           SWI      +21
   2250          }
   \   00000788   40DF8DE2           ADD      SP,SP,#+256
   \   0000078C   F087BDE8           POP      {R4-R10,PC}      ;; return
   \                     ??ProcessPacket_21:
   \   00000790   3A0A0000           DC8      ":\n",+0
   \   00000794   ........           DC32     ENA_AUTO_XTXT
   \   00000798   ........           DC32     sndGlobal
   \   0000079C   ........           DC32     sndSrvMsg
   \   000007A0   ........           DC32     ILL_RECV_FADE
   \   000007A4   ........           DC32     ILL_RECV_TMR
   \   000007A8   ........           DC32     ILL_KEYS_RECV
   \   000007AC   ........           DC32     ILL_DISP_RECV
   \   000007B0   ........           DC32     DEVELOP_IF
   \   000007B4   ........           DC32     ILL_SEND_TMR
   \   000007B8   ........           DC32     ILL_KEYS_SEND
   \   000007BC   ........           DC32     ILL_DISP_SEND
   2251          
   2252          
   2253          IPC_REQ tmr_gipc;

   \                                 In segment CODE, align 4, keep-with-next
   2254          void process_active_timer(void)
   2255          {
   \                     process_active_timer:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   2256            if (connect_state>2)
   \   00000004   ........           LDR      R5,??DataTable102  ;; contactlist_menuhdr
   \   00000008   0040A0E3           MOV      R4,#+0
   \   0000000C   240295E5           LDR      R0,[R5, #+548]
   \   00000010   030050E3           CMP      R0,#+3
   \   00000014   070000BA           BLT      ??process_active_timer_0
   2257            {
   2258              if (++tenseconds_to_ping>12)
   \   00000018   600295E5           LDR      R0,[R5, #+608]
   \   0000001C   010080E2           ADD      R0,R0,#+1
   \   00000020   600285E5           STR      R0,[R5, #+608]
   \   00000024   0D0050E3           CMP      R0,#+13
   \   00000028   020000BA           BLT      ??process_active_timer_0
   2259              {
   2260                tenseconds_to_ping=0;
   2261                SUBPROC((void *)do_ping);
   \   0000002C   58009FE5           LDR      R0,??process_active_timer_1  ;; do_ping
   \   00000030   604285E5           STR      R4,[R5, #+608]
   \   00000034   710100EF           SWI      +369
   2262              }
   2263            }
   2264            tmr_gipc.name_to=ipc_my_name;
   \                     ??process_active_timer_0:
   \   00000038   ........           LDR      R2,??DataTable87  ;; Canvas
   \   0000003C   6A0FA0E3           MOV      R0,#+424
   \   00000040   481FA0E3           MOV      R1,#+288
   \   00000044   023081E0           ADD      R3,R1,R2
   \   00000048   053080E7           STR      R3,[R0, +R5]
   2265            tmr_gipc.name_from=ipc_my_name;
   \   0000004C   021081E0           ADD      R1,R1,R2
   \   00000050   AC1185E5           STR      R1,[R5, #+428]
   2266            tmr_gipc.data=NULL;
   \   00000054   B04185E5           STR      R4,[R5, #+432]
   2267            GBS_SendMessage(MMI_CEPID,MSG_IPC,IPC_TENSECONDS,&tmr_gipc);
   \   00000058   053080E0           ADD      R3,R0,R5
   \   0000005C   0420A0E3           MOV      R2,#+4
   \   00000060   B010A0E3           MOV      R1,#+176
   \   00000064   DE1C81E3           ORR      R1,R1,#0xDE00
   \   00000068   0900A0E3           MOV      R0,#+9
   \   0000006C   420C80E3           ORR      R0,R0,#0x4200
   \   00000070   000100EF           SWI      +256
   2268            GBS_StartTimerProc(&tmr_active,TMR_SECOND*10,process_active_timer);
   \   00000074   ........           LDR      R2,??DataTable94  ;; process_active_timer
   \   00000078   871EA0E3           MOV      R1,#+2160
   \   0000007C   DA0F41E2           SUB      R0,R1,#+872
   \   00000080   050080E0           ADD      R0,R0,R5
   \   00000084   4D0000EF           SWI      +77
   2269          }
   \   00000088   3080BDE8           POP      {R4,R5,PC}       ;; return
   \                     ??process_active_timer_1:
   \   0000008C   ........           DC32     do_ping
   2270          
   2271          //===============================================================================================
   2272          
   2273          

   \                                 In segment CODE, align 4, keep-with-next
   2274          void method0(MAIN_GUI *data)
   2275          {
   \                     method0:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000004   14D04DE2           SUB      SP,SP,#+20
   2276            int scr_w=ScreenW();
   2277            int scr_h=ScreenH();
   2278            int pos_status;
   2279            int pm = pictures_max, pl = pictures_loaded;
   2280          /*  DrawRoundedFrame(0,YDISP,scr_w-1,scr_h-1,0,0,0,
   2281          		   GetPaletteAdrByColorIndex(0),
   2282          		   GetPaletteAdrByColorIndex(20));*/
   2283          
   2284            DrawRectangle(0,YDISP,scr_w-1,scr_h-1,0,
   2285          		   GetPaletteAdrByColorIndex(1),
   2286          		   GetPaletteAdrByColorIndex(1));
   2287            DrawImg(0,0,S_ICONS[ICON_LOGO]);
   2288            unsigned long RX=ALLTOTALRECEIVED; unsigned long TX=ALLTOTALSENDED;			//by BoBa 10.07
   2289            wsprintf(data->ws1,LG_GRSTATESTRING,connect_state,RXstate,RX,TX,sendq_l,hostname,logmsg);
   \   00000008   ........           LDR      R7,??DataTable87  ;; Canvas
   \   0000000C   0040A0E1           MOV      R4,R0
   \   00000010   888100EF           SWI      +33160
   \   00000014   04008DE5           STR      R0,[SP, #+4]
   \   00000018   898100EF           SWI      +33161
   \   0000001C   E8129FE5           LDR      R1,??method0_0   ;; pictures_max
   \   00000020   0050A0E1           MOV      R5,R0
   \   00000024   001091E5           LDR      R1,[R1, #+0]
   \   00000028   0100A0E3           MOV      R0,#+1
   \   0000002C   08108DE5           STR      R1,[SP, #+8]
   \   00000030   D8129FE5           LDR      R1,??method0_0+0x4  ;; pictures_loaded
   \   00000034   001091E5           LDR      R1,[R1, #+0]
   \   00000038   0C108DE5           STR      R1,[SP, #+12]
   \   0000003C   2E0100EF           SWI      +302
   \   00000040   0060A0E1           MOV      R6,R0
   \   00000044   0100A0E3           MOV      R0,#+1
   \   00000048   2E0100EF           SWI      +302
   \   0000004C   04209DE5           LDR      R2,[SP, #+4]
   \   00000050   013045E2           SUB      R3,R5,#+1
   \   00000054   012042E2           SUB      R2,R2,#+1
   \   00000058   00208DE5           STR      R2,[SP, #+0]
   \   0000005C   40002DE9           PUSH     {R6}
   \   00000060   ........           LDR      R6,??DataTable102  ;; contactlist_menuhdr
   \   00000064   01002DE9           PUSH     {R0}
   \   00000068   1810A0E3           MOV      R1,#+24
   \   0000006C   0000A0E3           MOV      R0,#+0
   \   00000070   01002DE9           PUSH     {R0}
   \   00000074   B40100EF           SWI      +436
   \   00000078   602196E5           LDR      R2,[R6, #+352]
   \   0000007C   0010A0E3           MOV      R1,#+0
   \   00000080   0000A0E3           MOV      R0,#+0
   \   00000084   230000EF           SWI      +35
   \   00000088   340296E5           LDR      R0,[R6, #+564]
   \   0000008C   381296E5           LDR      R1,[R6, #+568]
   \   00000090   F62F86E2           ADD      R2,R6,#+984
   \   00000094   04002DE9           PUSH     {R2}
   \   00000098   D820A0E3           MOV      R2,#+216
   \   0000009C   502E82E3           ORR      R2,R2,#0x500
   \   000000A0   062082E0           ADD      R2,R2,R6
   \   000000A4   04002DE9           PUSH     {R2}
   \   000000A8   3C2296E5           LDR      R2,[R6, #+572]
   \   000000AC   04002DE9           PUSH     {R2}
   \   000000B0   02002DE9           PUSH     {R1}
   \   000000B4   01002DE9           PUSH     {R0}
   \   000000B8   203296E5           LDR      R3,[R6, #+544]
   \   000000BC   242296E5           LDR      R2,[R6, #+548]
   \   000000C0   340094E5           LDR      R0,[R4, #+52]
   \   000000C4   181087E2           ADD      R1,R7,#+24
   \   000000C8   240100EF           SWI      +292
   2290          
   2291            if(pm != pl)
   \   000000CC   28009DE5           LDR      R0,[SP, #+40]
   \   000000D0   2C109DE5           LDR      R1,[SP, #+44]
   \   000000D4   20D08DE2           ADD      SP,SP,#+32
   \   000000D8   010050E1           CMP      R0,R1
   \   000000DC   3600000A           BEQ      ??method0_1
   2292            {
   2293               DrawRectangle(0,scr_h-4-2*GetFontYSIZE(FONT_SMALL_BOLD),scr_w-1,scr_h-4-GetFontYSIZE(FONT_MEDIUM_BOLD)-2,0,
   2294                               GetPaletteAdrByColorIndex(0),
   2295                               GetPaletteAdrByColorIndex(0));
   \   000000E0   0000A0E3           MOV      R0,#+0
   \   000000E4   2E0100EF           SWI      +302
   \   000000E8   0080A0E1           MOV      R8,R0
   \   000000EC   0000A0E3           MOV      R0,#+0
   \   000000F0   2E0100EF           SWI      +302
   \   000000F4   0090A0E1           MOV      R9,R0
   \   000000F8   0500A0E3           MOV      R0,#+5
   \   000000FC   C50100EF           SWI      +453
   \   00000100   00A0A0E1           MOV      R10,R0
   \   00000104   0900A0E3           MOV      R0,#+9
   \   00000108   C50100EF           SWI      +453
   \   0000010C   00012DE9           PUSH     {R8}
   \   00000110   00022DE9           PUSH     {R9}
   \   00000114   0010A0E3           MOV      R1,#+0
   \   00000118   02002DE9           PUSH     {R1}
   \   0000011C   0C209DE5           LDR      R2,[SP, #+12]
   \   00000120   04B045E2           SUB      R11,R5,#+4
   \   00000124   0A104BE0           SUB      R1,R11,R10
   \   00000128   023041E2           SUB      R3,R1,#+2
   \   0000012C   80104BE0           SUB      R1,R11,R0, LSL #+1
   \   00000130   0000A0E3           MOV      R0,#+0
   \   00000134   B40100EF           SWI      +436
   2296              pos_status = ((scr_w-1) * pl) / pm;
   2297              DrawRectangle(1,scr_h-4-2*GetFontYSIZE(FONT_SMALL_BOLD)+1,pos_status,scr_h-4-GetFontYSIZE(FONT_MEDIUM_BOLD)-3,0,
   2298                               GetPaletteAdrByColorIndex(14),
   2299                               GetPaletteAdrByColorIndex(14));  
   \   00000138   0E00A0E3           MOV      R0,#+14
   \   0000013C   2E0100EF           SWI      +302
   \   00000140   0080A0E1           MOV      R8,R0
   \   00000144   0E00A0E3           MOV      R0,#+14
   \   00000148   2E0100EF           SWI      +302
   \   0000014C   0090A0E1           MOV      R9,R0
   \   00000150   0500A0E3           MOV      R0,#+5
   \   00000154   C50100EF           SWI      +453
   \   00000158   1C008DE5           STR      R0,[SP, #+28]
   \   0000015C   0900A0E3           MOV      R0,#+9
   \   00000160   C50100EF           SWI      +453
   \   00000164   00A0A0E1           MOV      R10,R0
   \   00000168   00012DE9           PUSH     {R8}
   \   0000016C   00022DE9           PUSH     {R9}
   \   00000170   0000A0E3           MOV      R0,#+0
   \   00000174   01002DE9           PUSH     {R0}
   \   00000178   24109DE5           LDR      R1,[SP, #+36]
   \   0000017C   28009DE5           LDR      R0,[SP, #+40]
   \   00000180   00004BE0           SUB      R0,R11,R0
   \   00000184   033040E2           SUB      R3,R0,#+3
   \   00000188   18009DE5           LDR      R0,[SP, #+24]
   \   0000018C   910000E0           MUL      R0,R1,R0
   \   00000190   20109DE5           LDR      R1,[SP, #+32]
   \   00000194   ........           _BLF     ??div32_a,??rA??div32_a
   \   00000198   0120A0E1           MOV      R2,R1
   \   0000019C   8A004BE0           SUB      R0,R11,R10, LSL #+1
   \   000001A0   011080E2           ADD      R1,R0,#+1
   \   000001A4   0100A0E3           MOV      R0,#+1
   \   000001A8   B40100EF           SWI      +436
   2300              wstrcatprintf(data->ws1,"\nLoading images...");
   \   000001AC   340094E5           LDR      R0,[R4, #+52]
   \   000001B0   501087E2           ADD      R1,R7,#+80
   \   000001B4   160200EF           SWI      +534
   \   000001B8   18D08DE2           ADD      SP,SP,#+24
   2301            }
   2302            /*  if (total_smiles)
   2303            {
   2304              wstrcatprintf(data->ws1,"\nLoaded %d smiles",total_smiles);
   2305            }
   2306            if (xstatuses_load)
   2307            {
   2308              wstrcatprintf(data->ws1,"\nLoaded %d/%d xstatus",total_xstatuses, xstatuses_max);
   2309            }*/
   2310            DrawString(data->ws1,3,3+YDISP,scr_w-4,scr_h-4-GetFontYSIZE(FONT_MEDIUM_BOLD),
   2311          	     FONT_SMALL,0,GetPaletteAdrByColorIndex(0),GetPaletteAdrByColorIndex(23));
   \                     ??method0_1:
   \   000001BC   1700A0E3           MOV      R0,#+23
   \   000001C0   2E0100EF           SWI      +302
   \   000001C4   0090A0E1           MOV      R9,R0
   \   000001C8   0000A0E3           MOV      R0,#+0
   \   000001CC   2E0100EF           SWI      +302
   \   000001D0   00A0A0E1           MOV      R10,R0
   \   000001D4   0500A0E3           MOV      R0,#+5
   \   000001D8   C50100EF           SWI      +453
   \   000001DC   04109DE5           LDR      R1,[SP, #+4]
   \   000001E0   00022DE9           PUSH     {R9}
   \   000001E4   048041E2           SUB      R8,R1,#+4
   \   000001E8   00042DE9           PUSH     {R10}
   \   000001EC   0010A0E3           MOV      R1,#+0
   \   000001F0   02002DE9           PUSH     {R1}
   \   000001F4   04B045E2           SUB      R11,R5,#+4
   2312            wsprintf(data->ws2,percent_t,cltop? lgpData[LGP_GrsKeyClist] :empty_str);
   \   000001F8   ........           LDR      R5,??DataTable112  ;; lgpData
   \   000001FC   00004BE0           SUB      R0,R11,R0
   \   00000200   0810A0E3           MOV      R1,#+8
   \   00000204   02002DE9           PUSH     {R1}
   \   00000208   01002DE9           PUSH     {R0}
   \   0000020C   0830A0E1           MOV      R3,R8
   \   00000210   1B20A0E3           MOV      R2,#+27
   \   00000214   340094E5           LDR      R0,[R4, #+52]
   \   00000218   0310A0E3           MOV      R1,#+3
   \   0000021C   4C0100EF           SWI      +332
   \   00000220   4C0296E5           LDR      R0,[R6, #+588]
   \   00000224   14D08DE2           ADD      SP,SP,#+20
   \   00000228   000050E3           CMP      R0,#+0
   \   0000022C   380094E5           LDR      R0,[R4, #+56]
   \   00000230   44219515           LDRNE    R2,[R5, #+324]
   \   00000234   081087E2           ADD      R1,R7,#+8
   \   00000238   0E208702           ADDEQ    R2,R7,#+14
   \   0000023C   240100EF           SWI      +292
   2313            DrawString(data->ws2,(scr_w >> 1),scr_h-4-GetFontYSIZE(FONT_MEDIUM_BOLD),
   2314          	     scr_w-4,scr_h-4,FONT_MEDIUM_BOLD,TEXT_ALIGNRIGHT,GetPaletteAdrByColorIndex(0),GetPaletteAdrByColorIndex(23));
   \   00000240   1700A0E3           MOV      R0,#+23
   \   00000244   2E0100EF           SWI      +302
   \   00000248   0060A0E1           MOV      R6,R0
   \   0000024C   0000A0E3           MOV      R0,#+0
   \   00000250   2E0100EF           SWI      +302
   \   00000254   0090A0E1           MOV      R9,R0
   \   00000258   0500A0E3           MOV      R0,#+5
   \   0000025C   C50100EF           SWI      +453
   \   00000260   04109DE5           LDR      R1,[SP, #+4]
   \   00000264   40002DE9           PUSH     {R6}
   \   00000268   C1A0A0E1           ASR      R10,R1,#+1
   \   0000026C   00022DE9           PUSH     {R9}
   \   00000270   0410A0E3           MOV      R1,#+4
   \   00000274   02002DE9           PUSH     {R1}
   \   00000278   0830A0E1           MOV      R3,R8
   \   0000027C   00204BE0           SUB      R2,R11,R0
   \   00000280   0510A0E3           MOV      R1,#+5
   \   00000284   02002DE9           PUSH     {R1}
   \   00000288   0B10A0E1           MOV      R1,R11
   \   0000028C   02002DE9           PUSH     {R1}
   \   00000290   380094E5           LDR      R0,[R4, #+56]
   \   00000294   0A10A0E1           MOV      R1,R10
   \   00000298   4C0100EF           SWI      +332
   2315            wsprintf(data->ws2,percent_t, lgpData[LGP_GrsKeyExit] );
   \   0000029C   380094E5           LDR      R0,[R4, #+56]
   \   000002A0   402195E5           LDR      R2,[R5, #+320]
   \   000002A4   081087E2           ADD      R1,R7,#+8
   \   000002A8   240100EF           SWI      +292
   2316            DrawString(data->ws2,3,scr_h-4-GetFontYSIZE(FONT_MEDIUM_BOLD),
   2317          	     scr_w>>1,scr_h-4,FONT_MEDIUM_BOLD,TEXT_ALIGNLEFT,GetPaletteAdrByColorIndex(0),GetPaletteAdrByColorIndex(23));
   \   000002AC   1700A0E3           MOV      R0,#+23
   \   000002B0   2E0100EF           SWI      +302
   \   000002B4   0050A0E1           MOV      R5,R0
   \   000002B8   0000A0E3           MOV      R0,#+0
   \   000002BC   2E0100EF           SWI      +302
   \   000002C0   0060A0E1           MOV      R6,R0
   \   000002C4   0500A0E3           MOV      R0,#+5
   \   000002C8   C50100EF           SWI      +453
   \   000002CC   20002DE9           PUSH     {R5}
   \   000002D0   40002DE9           PUSH     {R6}
   \   000002D4   0110A0E3           MOV      R1,#+1
   \   000002D8   02002DE9           PUSH     {R1}
   \   000002DC   0A30A0E1           MOV      R3,R10
   \   000002E0   00204BE0           SUB      R2,R11,R0
   \   000002E4   0510A0E3           MOV      R1,#+5
   \   000002E8   02002DE9           PUSH     {R1}
   \   000002EC   0B10A0E1           MOV      R1,R11
   \   000002F0   02002DE9           PUSH     {R1}
   \   000002F4   380094E5           LDR      R0,[R4, #+56]
   \   000002F8   0310A0E3           MOV      R1,#+3
   \   000002FC   4C0100EF           SWI      +332
   \   00000300   28D08DE2           ADD      SP,SP,#+40
   2318          }
   \   00000304   14D08DE2           ADD      SP,SP,#+20
   \   00000308   F08FBDE8           POP      {R4-R11,PC}      ;; return
   \                     ??method0_0:
   \   0000030C   ........           DC32     pictures_max
   \   00000310   ........           DC32     pictures_loaded
   2319          

   \                                 In segment CODE, align 4, keep-with-next
   2320          void method1(MAIN_GUI *data,void *(*malloc_adr)(int))
   2321          {
   \                     method1:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   2322            data->ws1=AllocWS(256);
   \   00000008   400FA0E3           MOV      R0,#+256
   \   0000000C   250100EF           SWI      +293
   \   00000010   340084E5           STR      R0,[R4, #+52]
   2323            data->ws2=AllocWS(256);
   \   00000014   400FA0E3           MOV      R0,#+256
   \   00000018   250100EF           SWI      +293
   \   0000001C   380084E5           STR      R0,[R4, #+56]
   2324            data->gui.state=1;
   \   00000020   0100A0E3           MOV      R0,#+1
   \   00000024   0C00C4E5           STRB     R0,[R4, #+12]
   2325          }
   \   00000028   1080BDE8           POP      {R4,PC}          ;; return
   2326          

   \                                 In segment CODE, align 4, keep-with-next
   2327          void method2(MAIN_GUI *data,void (*mfree_adr)(void *))
   2328          {
   \                     method2:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   2329            FreeWS(data->ws1);
   \   00000008   340094E5           LDR      R0,[R4, #+52]
   \   0000000C   290100EF           SWI      +297
   2330            FreeWS(data->ws2);
   \   00000010   380094E5           LDR      R0,[R4, #+56]
   \   00000014   290100EF           SWI      +297
   2331            data->gui.state=0;
   \   00000018   0000A0E3           MOV      R0,#+0
   \   0000001C   0C00C4E5           STRB     R0,[R4, #+12]
   2332          }
   \   00000020   1080BDE8           POP      {R4,PC}          ;; return
   2333          

   \                                 In segment CODE, align 4, keep-with-next
   2334          void method3(MAIN_GUI *data,void *(*malloc_adr)(int),void (*mfree_adr)(void *))
   2335          {
   \                     method3:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   2336            DisableIDLETMR();
   \   00000008   7F0100EF           SWI      +383
   2337            data->gui.state=2;
   \   0000000C   0200A0E3           MOV      R0,#+2
   \   00000010   0C00C4E5           STRB     R0,[R4, #+12]
   2338          }
   \   00000014   1080BDE8           POP      {R4,PC}          ;; return
   2339          

   \                                 In segment CODE, align 4, keep-with-next
   2340          void method4(MAIN_GUI *data,void (*mfree_adr)(void *))
   2341          {
   2342            if (data->gui.state!=2)
   \                     method4:
   \   00000000   0C10D0E5           LDRB     R1,[R0, #+12]
   \   00000004   020051E3           CMP      R1,#+2
   2343              return;
   2344            data->gui.state=1;
   \   00000008   0110A003           MOVEQ    R1,#+1
   \   0000000C   0C10C005           STRBEQ   R1,[R0, #+12]
   2345          }
   \   00000010   1EFF2FE1           BX       LR               ;; return
   2346          

   \                                 In segment CODE, align 4, keep-with-next
   2347          int method5(MAIN_GUI *data,GUI_MSG *msg)
   2348          {
   \                     method5:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0140A0E1           MOV      R4,R1
   2349            DirectRedrawGUI();
   \   0000000C   3F0100EF           SWI      +319
   2350            if (msg->gbsmsg->msg==KEY_DOWN)
   \   00000010   040094E5           LDR      R0,[R4, #+4]
   \   00000014   9320A0E3           MOV      R2,#+147
   \   00000018   041090E5           LDR      R1,[R0, #+4]
   \   0000001C   402F82E3           ORR      R2,R2,#0x100
   \   00000020   020051E1           CMP      R1,R2
   \   00000024   2600001A           BNE      ??method5_0
   2351            {
   2352              switch(msg->gbsmsg->submess)
   \   00000028   080090E5           LDR      R0,[R0, #+8]
   \   0000002C   ........           LDR      R4,??DataTable110  ;; create_connect
   \   00000030   ........           LDR      R7,??DataTable102  ;; contactlist_menuhdr
   \   00000034   0350A0E3           MOV      R5,#+3
   \   00000038   F860A0E3           MOV      R6,#+248
   \   0000003C   406E86E3           ORR      R6,R6,#0x400
   \   00000040   0010A0E3           MOV      R1,#+0
   \   00000044   010050E2           SUBS     R0,R0,#+1
   \   00000048   0600000A           BEQ      ??method5_1
   \   0000004C   030050E2           SUBS     R0,R0,#+3
   \   00000050   0600000A           BEQ      ??method5_2
   \   00000054   070050E2           SUBS     R0,R0,#+7
   \   00000058   0A00000A           BEQ      ??method5_3
   \   0000005C   250050E2           SUBS     R0,R0,#+37
   \   00000060   0F00000A           BEQ      ??method5_4
   \   00000064   050000EA           B        ??method5_5
   2353              {
   2354              case LEFT_SOFT:
   2355                return(1); //Происходит вызов GeneralFunc для тек. GUI -> закрытие GUI
   \                     ??method5_1:
   \   00000068   0100A0E3           MOV      R0,#+1
   \   0000006C   F280BDE8           POP      {R1,R4-R7,PC}
   2356              case RIGHT_SOFT:
   2357                //      if (cltop) remake_clmenu();
   2358                if (cltop) create_contactlist_menu();
   \                     ??method5_2:
   \   00000070   4C0297E5           LDR      R0,[R7, #+588]
   \   00000074   000050E3           CMP      R0,#+0
   \   00000078   F280BD08           POPEQ    {R1,R4-R7,PC}
   \   0000007C   ........           BL       create_contactlist_menu
   \                     ??method5_5:
   \   00000080   0000A0E3           MOV      R0,#+0
   \   00000084   F280BDE8           POP      {R1,R4-R7,PC}
   2359                break;
   2360              case GREEN_BUTTON:
   2361                disautorecconect=0;
   \                     ??method5_3:
   \   00000088   F41187E5           STR      R1,[R7, #+500]
   2362                if ((connect_state==0)&&(sock==-1))
   \   0000008C   240297E5           LDR      R0,[R7, #+548]
   \   00000090   000050E3           CMP      R0,#+0
   \   00000094   28029705           LDREQ    R0,[R7, #+552]
   \   00000098   01007003           CMNEQ    R0,#+1
   \   0000009C   0800001A           BNE      ??method5_0
   2363                {
   2364                  GBS_DelTimer(&reconnect_tmr);
   \   000000A0   020000EA           B        ??method5_6
   2365          	DNR_TRIES=3;
   2366                  SUBPROC((void *)create_connect);
   2367                }
   2368                break;
   2369              case '0':
   2370                disautorecconect=0;
   2371                SUBPROC((void*)end_socket);
   \                     ??method5_4:
   \   000000A4   ........           LDR      R0,??DataTable115  ;; end_socket
   \   000000A8   F41187E5           STR      R1,[R7, #+500]
   \   000000AC   710100EF           SWI      +369
   2372                GBS_DelTimer(&reconnect_tmr);
   \                     ??method5_6:
   \   000000B0   070086E0           ADD      R0,R6,R7
   \   000000B4   8C0100EF           SWI      +396
   2373                DNR_TRIES=3;
   \   000000B8   685287E5           STR      R5,[R7, #+616]
   2374                SUBPROC((void *)create_connect);
   \   000000BC   0400A0E1           MOV      R0,R4
   \   000000C0   710100EF           SWI      +369
   2375                break;
   2376              }
   2377            }
   2378            return(0);
   \                     ??method5_0:
   \   000000C4   0000A0E3           MOV      R0,#+0
   \   000000C8   F280BDE8           POP      {R1,R4-R7,PC}    ;; return
   2379          }
   2380          

   \                                 In segment CODE, align 4, keep-with-next
   2381          int method8(void){return(0);}
   \                     method8:
   \   00000000   0000A0E3           MOV      R0,#+0
   \   00000004   1EFF2FE1           BX       LR               ;; return
   2382          

   \                                 In segment CODE, align 4, keep-with-next
   2383          int method9(void){return(0);}
   \                     method9:
   \   00000000   0000A0E3           MOV      R0,#+0
   \   00000004   1EFF2FE1           BX       LR               ;; return

   \                                 In segment DATA_C, align 4, align-sorted
   2384          
   2385          const void * const gui_methods[11]={
   2386            (void *)method0,  //Redraw
   2387            (void *)method1,  //Create
   2388            (void *)method2,  //Close
   2389            (void *)method3,  //Focus
   2390            (void *)method4,  //Unfocus
   2391            (void *)method5,  //OnKey
   2392            0,
   2393            (void *)kill_data, //method7, //Destroy
   2394            (void *)method8,
   2395            (void *)method9,
   2396            0
   2397          };
   2398          
   2399          const RECT Canvas={0,0,0,0};
   \                     Canvas:
   \   00000000   000000000000       DC16 0, 0, 0, 0
   \              0000        
   \                     percent_t:
   \   00000008   257400             DC8 "%t"
   \                     percent_d:
   \   0000000B   256400             DC8 "%d"
   \                     empty_str:
   \   0000000E   00                 DC8 ""
   \   0000000F   00                 DC8 0
   \   00000010   2563257400         DC8 "%c%t"
   \   00000015   000000             DC8 0, 0, 0
   \   00000018   53746174653A       DC8 53H, 74H, 61H, 74H, 65H, 3AH, 20H, 25H
   \              2025        
   \   00000020   642C20525873       DC8 64H, 2CH, 20H, 52H, 58H, 73H, 74H, 61H
   \              7461        
   \   00000028   74653A202564       DC8 74H, 65H, 3AH, 20H, 25H, 64H, 0AH, 52H
   \              0A52        
   \   00000030   783A2564622C       DC8 78H, 3AH, 25H, 64H, 62H, 2CH, 54H, 78H
   \              5478        
   \   00000038   3A2564620A51       DC8 3AH, 25H, 64H, 62H, 0AH, 51H, 75H, 65H
   \              7565        
   \   00000040   75653A202564       DC8 75H, 65H, 3AH, 20H, 25H, 64H, 62H, 0AH
   \              620A        
   \   00000048   25730A257400       DC8 25H, 73H, 0AH, 25H, 74H, 0
   \   0000004E   0000               DC8 0, 0
   \   00000050   0A4C6F616469       DC8 "\012Loading images..."
   \              6E6720696D61
   \              6765732E2E2E
   \              00          
   \   00000063   00                 DC8 0
   \   00000064   4750525320F1       DC8 47H, 50H, 52H, 53H, 20H, 0F1H, 0E5H, 0F1H
   \              E5F1        
   \   0000006C   F1E8FF20E7E0       DC8 0F1H, 0E8H, 0FFH, 20H, 0E7H, 0E0H, 0EFH, 0F3H
   \              EFF3        
   \   00000074   F9E5EDE02C20       DC8 0F9H, 0E5H, 0EDH, 0E0H, 2CH, 20H, 0EFH, 0EEH
   \              EFEE        
   \   0000007C   E4EAEBFEF7E5       DC8 0E4H, 0EAH, 0EBH, 0FEH, 0F7H, 0E5H, 0EDH, 0E8H
   \              EDE8        
   \   00000084   E520F7E5F0E5       DC8 0E5H, 20H, 0F7H, 0E5H, 0F0H, 0E5H, 0E7H, 20H
   \              E720        
   \   0000008C   256420F1E5EA       DC8 25H, 64H, 20H, 0F1H, 0E5H, 0EAH, 0F3H, 0EDH
   \              F3ED        
   \   00000094   E42E2E2E00         DC8 0E4H, 2EH, 2EH, 2EH, 0
   \   00000099   000000             DC8 0, 0, 0
   \   0000009C   54727920746F       DC8 "Try to login..."
   \              206C6F67696E
   \              2E2E2E00    
   \   000000AC   446973636F6E       DC8 "Disconnected, %d bytes not sended!"
   \              6E6563746564
   \              2C2025642062
   \              79746573206E
   \              6F742073656E
   \              6465642100  
   \   000000CF   00                 DC8 0
   \   000000D0   4E6174494351       DC8 "NatICQ config updated!"
   \              20636F6E6669
   \              672075706461
   \              7465642100  
   \   000000E7   00                 DC8 0
   \   000000E8   2825642F2564       DC8 "(%d/%d)"
   \              2900        
   \   000000F0   25730ACEF8E8       DC8 "%s\012\316\370\350\341\352\340, \357\345\360\345\357\356\344\352\353\376\367\345\355\350\345 \367\345\360\345\347 %d \361\345\352\363\355\344..."
   \              E1EAE02C20EF
   \              E5F0E5EFEEE4
   \              EAEBFEF7E5ED
   \              E8E520F7E5F0
   \              E5E720256420
   \              F1E5EAF3EDE4
   \              2E2E2E00    
   \   0000011E   0000               DC8 0, 0
   \                     ipc_my_name:
   \   00000120   4E6174494351       DC8 "NatICQ"
   \              00          
   \   00000127   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000137   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000      
   \                     ipc_xtask_name:
   \   00000140   585461736B00       DC8 "XTask"
   \   00000146   0000               DC8 0, 0
   \                     x_status_change:
   \   00000148   582D53746174       DC8 "X-Status change"
   \              757320636861
   \              6E676500    
   \                     gui_methods:
   \   00000158   ............       DC32 method0, method1, method2, method3, method4, method5, 0H
   \              ............
   \              ............
   \              ............
   \              00000000    
   \   00000174   ............       DC32 kill_data, method8, method9, 0H
   \              ............
   \              00000000    

   \                                 In segment DATA_C, align 4, align-sorted
   \                     S_OFFLINE:
   \   00000000   4F66666C696E       DC8 "Offline"
   \              6500        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     S_INVISIBLE:
   \   00000000   496E76697369       DC8 "Invisible"
   \              626C6500    
   \   0000000A   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     S_AWAY:
   \   00000000   4177617900         DC8 "Away"
   \   00000005   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     S_NA:
   \   00000000   4E2F4100           DC8 "N/A"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     S_OCCUPIED:
   \   00000000   4F6363757069       DC8 "Occupied"
   \              656400      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     S_DND:
   \   00000000   444E4400           DC8 "DND"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     S_ONLINE:
   \   00000000   4F6E6C696E65       DC8 "Online"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     S_FFC:
   \   00000000   46464300           DC8 "FFC"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\\\">_3`:
   \   00000000   5C00               DC8 "\\"
   \   00000002   0000               DC8 0, 0
   \   00000004   ............       DC32 `?<Constant "offline.png">`, `?<Constant "invisible.png">`
   \              ....        
   \   0000000C   ............       DC32 `?<Constant "away.png">`, `?<Constant "na.png">`
   \              ....        
   \   00000014   ............       DC32 `?<Constant "occupied.png">`, `?<Constant "dnd.png">`
   \              ....        
   \   0000001C   ............       DC32 `?<Constant "depression.png">`, `?<Constant "evil.png">`
   \              ....        
   \   00000024   ............       DC32 `?<Constant "home.png">`, `?<Constant "lunch.png">`
   \              ....        
   \   0000002C   ............       DC32 `?<Constant "work.png">`, `?<Constant "online.png">`
   \              ....        
   \   00000034   ............       DC32 `?<Constant "ffc.png">`, `?<Constant "message.png">`
   \              ....        
   \   0000003C   ............       DC32 `?<Constant "unknown.png">`, `?<Constant "groupon.png">`
   \              ....        
   \   00000044   ............       DC32 `?<Constant "groupoff.png">`, `?<Constant "null.png">`
   \              ....        
   \   0000004C   ............       DC32 `?<Constant "addcont.png">`, `?<Constant "head.png">`
   \              ....        
   \   00000054   ............       DC32 `?<Constant "logo.png">`, `?<Constant "ping.png">`
   \              ....        
   \   0000005C   ............       DC32 `?<Constant "settings.png">`, `?<Constant "vis1.png">`
   \              ....        
   \   00000064   ............       DC32 `?<Constant "vis2.png">`, `?<Constant "vis3.png">`
   \              ....        
   \   0000006C   ............       DC32 `?<Constant "vis4.png">`, `?<Constant "vis5.png">`
   \              ....        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\\\">`:
   \   00000000   5C00               DC8 "\\"
   \                     I_str:
   \   00000002   4900               DC8 "I"
   \   00000004   2573746D7025       DC8 "%stmp%u.url"
   \              752E75726C00
   \   00000010   526571756573       DC8 "Request info..."
   \              7420696E666F
   \              2E2E2E00    

   \                                 In segment DATA_C, align 4, align-sorted
   \                     def_setting:
   \   00000000   25736465665F       DC8 "%sdef_settings_%d"
   \              73657474696E
   \              67735F256400
   \   00000012   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     menusoftkeys:
   \   00000000   000000000100       DC32 0, 1, 2
   \              000002000000

   \                                 In segment DATA_C, align 4, align-sorted
   \                     menu_skt:
   \   00000000   ........0000       DC32 menu_sk, 0
   \              0000        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     clmenu_skt:
   \   00000000   ........0000       DC32 clmenu_sk, 0
   \              0000        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     contactlist_menu:
   \   00000000   08000000....       DC32 8, contactlist_menu_onkey, contactlist_menu_ghook, 0H
   \              ............
   \              00000000    
   \   00000010   ............       DC32 menusoftkeys, clmenu_skt, 17, contactlist_menu_iconhndl, 0H, 0H, 0
   \              ....11000000
   \              ........0000
   \              000000000000
   \              00000000    
   \   0000002C   01000000           DC32 1
   2400          

   \                                 In segment CODE, align 4, keep-with-next
   2401          void maincsm_oncreate(CSM_RAM *data)
   2402          {
   \                     maincsm_oncreate:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0050A0E1           MOV      R5,R0
   2403            MAIN_GUI *main_gui=malloc(sizeof(MAIN_GUI));
   \   00000008   4000A0E3           MOV      R0,#+64
   2404            MAIN_CSM*csm=(MAIN_CSM*)data;
   2405            zeromem(main_gui,sizeof(MAIN_GUI));
   2406            patch_rect((RECT*)&Canvas,0,0,ScreenW()-1,ScreenH()-1);
   \   0000000C   0070A0E3           MOV      R7,#+0
   \   00000010   140000EF           SWI      +20
   \   00000014   0060A0E1           MOV      R6,R0
   \   00000018   4010A0E3           MOV      R1,#+64
   \   0000001C   1D0100EF           SWI      +285
   \   00000020   898100EF           SWI      +33161
   \   00000024   0040A0E1           MOV      R4,R0
   \   00000028   888100EF           SWI      +33160
   \   0000002C   011044E2           SUB      R1,R4,#+1
   \   00000030   C0409FE5           LDR      R4,??maincsm_oncreate_0  ;; Canvas
   \   00000034   010040E2           SUB      R0,R0,#+1
   \   00000038   007084E5           STR      R7,[R4, #+0]
   \   0000003C   B400C4E1           STRH     R0,[R4, #+4]
   \   00000040   B610C4E1           STRH     R1,[R4, #+6]
   2407            main_gui->gui.canvas=(void *)(&Canvas);
   \   00000044   004086E5           STR      R4,[R6, #+0]
   2408          //  main_gui->gui.flag30=2;
   2409            main_gui->gui.methods=(void *)gui_methods;
   \   00000048   560F84E2           ADD      R0,R4,#+344
   \   0000004C   040086E5           STR      R0,[R6, #+4]
   2410            main_gui->gui.item_ll.data_mfree=(void (*)(void *))mfree_adr();
   \   00000050   158000EF           SWI      +32789
   \   00000054   200086E5           STR      R0,[R6, #+32]
   2411            csm->csm.state=0;
   \   00000058   107085E5           STR      R7,[R5, #+16]
   2412            csm->csm.unk1=0;
   \   0000005C   147085E5           STR      R7,[R5, #+20]
   2413            maingui_id=csm->gui_id=CreateGUI(main_gui);
   \   00000060   0600A0E1           MOV      R0,R6
   \   00000064   370100EF           SWI      +311
   \   00000068   280085E5           STR      R0,[R5, #+40]
   \   0000006C   ........           LDR      R5,??DataTable102  ;; contactlist_menuhdr
   \   00000070   E00185E5           STR      R0,[R5, #+480]
   2414            ews=AllocWS(16384);
   \   00000074   400CA0E3           MOV      R0,#+16384
   \   00000078   250100EF           SWI      +293
   2415            //  MutexCreate(&contactlist_mtx);
   2416            DNR_TRIES=3;
   2417            //  SUBPROC((void *)InitSmiles);
   2418            //  SUBPROC((void *)create_connect);
   2419            GBS_StartTimerProc(&tmr_active,TMR_SECOND*10,process_active_timer);
   \   0000007C   ........           LDR      R2,??DataTable94  ;; process_active_timer
   \   00000080   EC0185E5           STR      R0,[R5, #+492]
   \   00000084   0300A0E3           MOV      R0,#+3
   \   00000088   680285E5           STR      R0,[R5, #+616]
   \   0000008C   871EA0E3           MOV      R1,#+2160
   \   00000090   DA0F41E2           SUB      R0,R1,#+872
   \   00000094   050080E0           ADD      R0,R0,R5
   \   00000098   4D0000EF           SWI      +77
   2420            sprintf((char *)ipc_my_name+6,percent_d,UIN);
   \   0000009C   ........           LDR      R0,??DataTable120  ;; UIN
   \   000000A0   0B1084E2           ADD      R1,R4,#+11
   \   000000A4   002090E5           LDR      R2,[R0, #+0]
   \   000000A8   2600A0E3           MOV      R0,#+38
   \   000000AC   400F80E3           ORR      R0,R0,#0x100
   \   000000B0   040080E0           ADD      R0,R0,R4
   \   000000B4   160000EF           SWI      +22
   2421            gipc.name_to=ipc_my_name;
   \   000000B8   670FA0E3           MOV      R0,#+412
   \   000000BC   481FA0E3           MOV      R1,#+288
   \   000000C0   042081E0           ADD      R2,R1,R4
   \   000000C4   052080E7           STR      R2,[R0, +R5]
   2422            gipc.name_from=ipc_my_name;
   \   000000C8   041081E0           ADD      R1,R1,R4
   \   000000CC   A01185E5           STR      R1,[R5, #+416]
   2423            gipc.data=(void *)-1;
   \   000000D0   0710E0E1           MVN      R1,R7
   \   000000D4   A41185E5           STR      R1,[R5, #+420]
   2424            GBS_SendMessage(MMI_CEPID,MSG_IPC,IPC_CHECK_DOUBLERUN,&gipc);
   \   000000D8   053080E0           ADD      R3,R0,R5
   \   000000DC   0120A0E3           MOV      R2,#+1
   \   000000E0   B010A0E3           MOV      R1,#+176
   \   000000E4   DE1C81E3           ORR      R1,R1,#0xDE00
   \   000000E8   0900A0E3           MOV      R0,#+9
   \   000000EC   420C80E3           ORR      R0,R0,#0x4200
   \   000000F0   000100EF           SWI      +256
   2425          }
   \   000000F4   F080BDE8           POP      {R4-R7,PC}       ;; return
   \                     ??maincsm_oncreate_0:
   \   000000F8   ........           DC32     Canvas
   2426          

   \                                 In segment CODE, align 4, keep-with-next
   2427          void maincsm_onclose(CSM_RAM *csm)
   2428          {
   \                     maincsm_onclose:
   \   00000000   10402DE9           PUSH     {R4,LR}
   2429            WriteDefSettings();
   2430            //  SaveConfigData(successed_config_filename);
   2431          /*
   2432            #pragma segment="CONFIG_C"
   2433            unsigned int ul;
   2434            int f;
   2435            extern const CFG_HDR cfghdr0; //first var in CONFIG
   2436            void *cfg=(void*)&cfghdr0;
   2437            unsigned int len=(int)__segment_end("CONFIG_C")-(int)__segment_begin("CONFIG_C");
   2438          
   2439            if ((f=fopen("4:\\ZBin\\etc\\NATICQ.bcfg",A_ReadWrite+A_Create+A_Truncate,P_READ+P_WRITE,&ul))==-1){
   2440             f=fopen("0:\\ZBin\\etc\\NATICQ.bcfg",A_ReadWrite+A_Create+A_Truncate,P_READ+P_WRITE,&ul);
   2441            }
   2442            fwrite(f,cfg,len,&ul);
   2443            fclose(f,&ul);
   2444          */
   2445          
   2446            //  GBS_DelTimer(&tmr_dorecv);
   2447            GBS_DelTimer(&tmr_active);
   \   00000004   ........           LDR      R4,??DataTable102  ;; contactlist_menuhdr
   \   00000008   ........           BL       WriteDefSettings
   \   0000000C   0800A0E3           MOV      R0,#+8
   \   00000010   500E80E3           ORR      R0,R0,#0x500
   \   00000014   040080E0           ADD      R0,R0,R4
   \   00000018   8C0100EF           SWI      +396
   2448          //  GBS_DelTimer(&tmr_ping);
   2449            GBS_DelTimer(&tmr_vibra);
   \   0000001C   E800A0E3           MOV      R0,#+232
   \   00000020   400E80E3           ORR      R0,R0,#0x400
   \   00000024   040080E0           ADD      R0,R0,R4
   \   00000028   8C0100EF           SWI      +396
   2450            GBS_DelTimer(&reconnect_tmr);
   \   0000002C   F800A0E3           MOV      R0,#+248
   \   00000030   400E80E3           ORR      R0,R0,#0x400
   \   00000034   040080E0           ADD      R0,R0,R4
   \   00000038   8C0100EF           SWI      +396
   2451            GBS_DelTimer(&tmr_illumination);
   \   0000003C   D800A0E3           MOV      R0,#+216
   \   00000040   400E80E3           ORR      R0,R0,#0x400
   \   00000044   040080E0           ADD      R0,R0,R4
   \   00000048   8C0100EF           SWI      +396
   2452            SetVibration(0);
   \   0000004C   0000A0E3           MOV      R0,#+0
   \   00000050   7C0000EF           SWI      +124
   2453            FreeTemplates();
   \   00000054   ........           BL       FreeTemplates
   2454            FreeCLIST();
   \   00000058   ........           _BLF     FreeCLIST,??FreeCLIST??rA
   2455            free_ICONS();
   \   0000005C   ........           BL       free_ICONS
   2456            //  FreeSmiles();
   2457            FreeWS(ews);
   \   00000060   EC0194E5           LDR      R0,[R4, #+492]
   \   00000064   290100EF           SWI      +297
   2458            FreeXStatusText();
   \   00000068   ........           _BLF     FreeXStatusText,??FreeXStatusText??rA
   2459            lgpFreeLangPack();
   \   0000006C   ........           _BLF     lgpFreeLangPack,??lgpFreeLangPack??rA
   2460            //  MutexDestroy(&contactlist_mtx);
   2461            SUBPROC((void *)FreeSmiles);
   \   00000070   24009FE5           LDR      R0,??maincsm_onclose_0  ;; FreeSmiles
   \   00000074   710100EF           SWI      +369
   2462            SUBPROC((void *)FreeXStatusesImg);
   \   00000078   20009FE5           LDR      R0,??maincsm_onclose_0+0x4  ;; FreeXStatusesImg
   \   0000007C   710100EF           SWI      +369
   2463            SUBPROC((void *)end_socket);
   \   00000080   ........           LDR      R0,??DataTable115  ;; end_socket
   \   00000084   710100EF           SWI      +369
   2464            SUBPROC((void *)ClearSendQ);
   \   00000088   ........           LDR      R0,??DataTable116  ;; ClearSendQ
   \   0000008C   710100EF           SWI      +369
   2465            SUBPROC((void *)ElfKiller);
   \   00000090   ........           LDR      R0,??DataTable122  ;; ElfKiller
   \   00000094   710100EF           SWI      +369
   2466          }
   \   00000098   1080BDE8           POP      {R4,PC}          ;; return
   \                     ??maincsm_onclose_0:
   \   0000009C   ........           DC32     FreeSmiles
   \   000000A0   ........           DC32     FreeXStatusesImg
   2467          

   \                                 In segment CODE, align 4, keep-with-next
   2468          void do_reconnect(void)
   2469          {
   2470            if (is_gprs_online)
   \                     do_reconnect:
   \   00000000   ........           LDR      R0,??DataTable102  ;; contactlist_menuhdr
   \   00000004   00402DE9           PUSH     {LR}
   \   00000008   441290E5           LDR      R1,[R0, #+580]
   \   0000000C   000051E3           CMP      R1,#+0
   \   00000010   0080BD08           POPEQ    {PC}
   2471            {
   2472              DNR_TRIES=3;
   \   00000014   0310A0E3           MOV      R1,#+3
   \   00000018   681280E5           STR      R1,[R0, #+616]
   2473              SUBPROC((void*)create_connect);
   \   0000001C   ........           LDR      R0,??DataTable110  ;; create_connect
   \   00000020   710100EF           SWI      +369
   2474            }
   2475          }
   \   00000024   0080BDE8           POP      {PC}             ;; return
   2476          

   \                                 In segment CODE, align 4, keep-with-next
   2477          void CheckDoubleRun(void)
   2478          {
   \                     CheckDoubleRun:
   \   00000000   10402DE9           PUSH     {R4,LR}
   2479            int csm_id;
   2480            if ((csm_id=(int)(gipc.data))!=-1)
   \   00000004   ........           LDR      R4,??DataTable102  ;; contactlist_menuhdr
   \   00000008   690FA0E3           MOV      R0,#+420
   \   0000000C   041090E7           LDR      R1,[R0, +R4]
   \   00000010   010071E3           CMN      R1,#+1
   \   00000014   1200000A           BEQ      ??CheckDoubleRun_0
   2481            {
   2482              gipc.name_to=ipc_xtask_name;
   \   00000018   ........           LDR      R3,??DataTable105  ;; Canvas
   \   0000001C   672FA0E3           MOV      R2,#+412
   \   00000020   50CF83E2           ADD      R12,R3,#+320
   \   00000024   04C082E7           STR      R12,[R2, +R4]
   2483              gipc.name_from=ipc_my_name;
   \   00000028   483F83E2           ADD      R3,R3,#+288
   \   0000002C   A03184E5           STR      R3,[R4, #+416]
   2484              gipc.data=(void *)csm_id;
   \   00000030   041080E7           STR      R1,[R0, +R4]
   2485              GBS_SendMessage(MMI_CEPID,MSG_IPC,IPC_XTASK_SHOW_CSM,&gipc);
   \   00000034   043082E0           ADD      R3,R2,R4
   \   00000038   0220A0E3           MOV      R2,#+2
   \   0000003C   B010A0E3           MOV      R1,#+176
   \   00000040   DE1C81E3           ORR      R1,R1,#0xDE00
   \   00000044   0900A0E3           MOV      R0,#+9
   \   00000048   420C80E3           ORR      R0,R0,#0x4200
   \   0000004C   000100EF           SWI      +256
   2486              LockSched();
   \   00000050   460100EF           SWI      +326
   2487              CloseCSM(maincsm_id);
   \   00000054   DC0194E5           LDR      R0,[R4, #+476]
   \   00000058   FC0100EF           SWI      +508
   2488              //ShowMSG(1,(int)LG_ALREADY_STARTED);
   2489              UnlockSched();
   \   0000005C   470100EF           SWI      +327
   \   00000060   1080BDE8           POP      {R4,PC}
   2490            }
   2491            else
   2492            {
   2493              InitXStatusesImg();
   \                     ??CheckDoubleRun_0:
   \   00000064   ........           _BLF     InitXStatusesImg,??InitXStatusesImg??rA
   2494              //InitSmiles(); Это вызовется из InitXStatusesImg
   2495              create_connect();
   \   00000068   ........           BL       create_connect
   2496            }
   2497          }
   \   0000006C   1080BDE8           POP      {R4,PC}          ;; return
   2498          

   \                                 In segment CODE, align 4, keep-with-next
   2499          int maincsm_onmessage(CSM_RAM *data,GBS_MSG *msg)
   2500          {
   \                     maincsm_onmessage:
   \   00000000   F14F2DE9           PUSH     {R0,R4-R11,LR}
   \   00000004   14D04DE2           SUB      SP,SP,#+20
   \   00000008   ........           LDR      R4,??DataTable125  ;; contactlist_menuhdr
   \   0000000C   ........           LDR      R7,??DataTable105  ;; Canvas
   \   00000010   0180A0E1           MOV      R8,R1
   \   00000014   040098E5           LDR      R0,[R8, #+4]
   \   00000018   0050A0E3           MOV      R5,#+0
   \   0000001C   486FA0E3           MOV      R6,#+288
   \   00000020   B010A0E3           MOV      R1,#+176
   \   00000024   DE1C81E3           ORR      R1,R1,#0xDE00
   \   00000028   010050E1           CMP      R0,R1
   \   0000002C   1700001A           BNE      ??maincsm_onmessage_2
   2501            extern const int VIBR_ON_CONNECT;
   2502          
   2503            //  char ss[100];
   2504            MAIN_CSM *csm=(MAIN_CSM*)data;
   2505            {
   2506              //IPC
   2507              if (msg->msg==MSG_IPC)
   2508              {
   2509                IPC_REQ *ipc;
   2510                if ((ipc=(IPC_REQ*)msg->data0))
   \   00000030   0C9098E5           LDR      R9,[R8, #+12]
   \   00000034   000059E3           CMP      R9,#+0
   \   00000038   1400000A           BEQ      ??maincsm_onmessage_2
   2511                {
   2512          	if (strcmp_nocase(ipc->name_to,ipc_my_name)==0)
   \   0000003C   000099E5           LDR      R0,[R9, #+0]
   \   00000040   071086E0           ADD      R1,R6,R7
   \   00000044   ........           _BLF     strcmp_nocase,??strcmp_nocase??rA
   \   00000048   000050E3           CMP      R0,#+0
   \   0000004C   0F00001A           BNE      ??maincsm_onmessage_2
   2513          	{
   2514          	  switch (msg->submess)
   \   00000050   081098E5           LDR      R1,[R8, #+8]
   \   00000054   040099E5           LDR      R0,[R9, #+4]
   \   00000058   08A099E5           LDR      R10,[R9, #+8]
   \   0000005C   011041E2           SUB      R1,R1,#+1
   \   00000060   060051E3           CMP      R1,#+6
   \   00000064   0900008A           BHI      ??maincsm_onmessage_2
   \   00000068   012F8FE2           ADR      R2,??maincsm_onmessage_0
   \   0000006C   0120D2E7           LDRB     R2,[R2, R1]
   \   00000070   02F18FE0           ADD      PC,PC,R2, LSL #+2
   \                     ??maincsm_onmessage_0:
   \   00000074   011A2126           DC8      +1,+26,+33,+38
   \   00000078   4E066700           DC8      +78,+6,+103,+0
   2515          	  {
   2516          	  case IPC_CHECK_DOUBLERUN:
   2517          	    //Если приняли свое собственное сообщение, значит запускаем чекер
   2518          	    if (ipc->name_from==ipc_my_name) SUBPROC((void *)CheckDoubleRun);
   \                     ??maincsm_onmessage_3:
   \   0000007C   071086E0           ADD      R1,R6,R7
   \   00000080   010050E1           CMP      R0,R1
   \   00000084   1200001A           BNE      ??maincsm_onmessage_4
   \   00000088   DC069FE5           LDR      R0,??maincsm_onmessage_5  ;; CheckDoubleRun
   \   0000008C   710100EF           SWI      +369
   2519                      else ipc->data=(void *)maincsm_id;
   2520          	    break;
   2521          	  case IPC_SMILE_PROCESSED:
   2522          	    //Только собственные смайлы ;)
   2523          	    if (ipc->name_from==ipc_my_name) SUBPROC((void *)ProcessNextSmile);
   2524          	    SMART_REDRAW();
   2525          	    break;
   2526          	  case IPC_XSTATUSIMG_PROCESSED:
   2527          	    //Только собственные иксстатусы ;)
   2528          	    if (ipc->name_from==ipc_my_name) SUBPROC((void *)ProcessNextXStatImg);
   2529          	    SMART_REDRAW();
   2530          	    break;
   2531          	  case IPC_TENSECONDS:
   2532          	    //Только свое сообщение
   2533          	    if (ipc->name_from==ipc_my_name)
   2534          	    {
   2535          	      CLIST *t=(CLIST *)cltop;
   2536          	      int f=0;
   2537          	      while(t)
   2538          	      {
   2539          		if (t->isactive)
   2540          		{
   2541          		  if (!(--(t->isactive))) f=1; //Если дошли до 0 хотя бы один раз - надо перерисовать меню
   2542          		}
   2543          		t=(CLIST *)(t->next);
   2544          	      }
   2545          	      if (f)
   2546          	      {
   2547          		CLIST *oldt=NULL;
   2548          		if (contactlist_menu_id)
   2549          		{
   2550          		  oldt=FindContactByN(GetCurMenuItem(FindGUIbyId(contactlist_menu_id,NULL)));
   2551          		}
   2552          		RecountMenu(oldt, 1);
   2553          	      }
   2554          	      if (time_to_stop_t9)
   2555          	      {
   2556          		if (!(--time_to_stop_t9))
   2557          		{
   2558          		  if (IsGuiOnTop(edchat_id)) RefreshGUI();
   2559          		}
   2560          	      }
   2561          	    }
   2562          	    break;
   2563               	  case IPC_SENDMSG:                                   //IPC_SENDMSG by BoBa 26.06.07
   2564          	    {
   2565          	      int l=strlen(((IPCMsg *)(ipc->data))->msg);
   2566          	      TPKT *msg=malloc(sizeof(PKT)+l);
   2567          	      msg->pkt.uin=((IPCMsg *)(ipc->data))->uin;
   2568          	      msg->pkt.type=T_SENDMSG;
   2569          	      msg->pkt.data_len=l;
   2570          	      memcpy(msg->data,((IPCMsg *)(ipc->data))->msg,l);
   2571          	      //slientsend=1;
   2572          	      SENDMSGCOUNT++; //Номер сообщения
   2573          	      SUBPROC((void *)SendAnswer,0,msg);
   2574          	    }
   2575                      break;
   2576          	  case IPC_FREEMSG:
   2577          	    ;
   2578          	    IPCMsg_RECVMSG *fmp=((IPCMsg_RECVMSG *)(ipc->data));
   2579          	    if (ipc->name_to!=ipc_my_name) break;
   2580          	    if (!fmp->drop_msg)
   2581          	    {
   2582          	      //Добавляем сообщение в чат
   2583          	      int l=strlen(fmp->msg);
   2584          	      TPKT *msg=malloc(sizeof(PKT)+l+1);
   2585          	      msg->pkt.uin=fmp->uin;
   2586          	      msg->pkt.type=T_RECVMSG;
   2587          	      msg->pkt.data_len=l;
   2588          	      memcpy(msg->data,fmp->msg,l+1);
   2589          	      ProcessPacket(msg);
   2590          	    }
   2591          	    mfree(fmp->msg); //Освобождаем сам текст сообщения
   2592          	    mfree(fmp->ipc); //Освобождаем родительский IPC_REQ
   2593          	    mfree(fmp); //Освобождаем собственно IPCMsg_RECVMSG
   2594          	    mfree(ipc); //Освободили текущий IPC_REQ
   2595          	    return 0; //вышли нах
   2596          	  }
   2597          	}
   2598                }
   2599              }
   2600              //Нарисуем иконочку моего статуса
   2601          #define idlegui_id (((int *)icsm)[DISPLACE_OF_IDLEGUI_ID/4])
   2602              CSM_RAM *icsm=FindCSMbyID(CSM_root()->idle_id);
   \                     ??maincsm_onmessage_2:
   \   00000090   068100EF           SWI      +33030
   \   00000094   040090E5           LDR      R0,[R0, #+4]
   \   00000098   080100EF           SWI      +264
   2603              if (IsGuiOnTop(idlegui_id)/*&&IsUnlocked()*/) //Если IdleGui на самом верху
   \   0000009C   2C0090E5           LDR      R0,[R0, #+44]
   \   000000A0   350100EF           SWI      +309
   \   000000A4   000050E3           CMP      R0,#+0
   \   000000A8   A000000A           BEQ      ??maincsm_onmessage_6
   2604              {
   2605                GUI *igui=GetTopGUI();
   2606                if (igui) //И он существует
   \   000000AC   4D0100EF           SWI      +333
   \   000000B0   000050E3           CMP      R0,#+0
   \   000000B4   9D00000A           BEQ      ??maincsm_onmessage_6
   2607                {
   2608          	void *canvasdata=BuildCanvas();
   \   000000B8   F18000EF           SWI      +33009
   \   000000BC   0090A0E1           MOV      R9,R0
   2609          	int icn;
   2610          	if (total_unread)
   \   000000C0   480294E5           LDR      R0,[R4, #+584]
   \   000000C4   000050E3           CMP      R0,#+0
   \   000000C8   7400000A           BEQ      ??maincsm_onmessage_7
   2611          	  icn=IS_MSG;
   \   000000CC   0D00A0E3           MOV      R0,#+13
   \   000000D0   780000EA           B        ??maincsm_onmessage_8
   \                     ??maincsm_onmessage_4:
   \   000000D4   DC0194E5           LDR      R0,[R4, #+476]
   \   000000D8   080089E5           STR      R0,[R9, #+8]
   \   000000DC   EBFFFFEA           B        ??maincsm_onmessage_2
   \                     ??maincsm_onmessage_9:
   \   000000E0   071086E0           ADD      R1,R6,R7
   \   000000E4   010050E1           CMP      R0,R1
   \   000000E8   0100001A           BNE      ??maincsm_onmessage_10
   \   000000EC   7C069FE5           LDR      R0,??maincsm_onmessage_5+0x4  ;; ProcessNextSmile
   \                     ??maincsm_onmessage_11:
   \   000000F0   710100EF           SWI      +369
   \                     ??maincsm_onmessage_10:
   \   000000F4   ........           BL       SMART_REDRAW
   \   000000F8   E4FFFFEA           B        ??maincsm_onmessage_2
   \                     ??maincsm_onmessage_12:
   \   000000FC   071086E0           ADD      R1,R6,R7
   \   00000100   010050E1           CMP      R0,R1
   \   00000104   FAFFFF1A           BNE      ??maincsm_onmessage_10
   \   00000108   64069FE5           LDR      R0,??maincsm_onmessage_5+0x8  ;; ProcessNextXStatImg
   \   0000010C   F7FFFFEA           B        ??maincsm_onmessage_11
   \                     ??maincsm_onmessage_13:
   \   00000110   071086E0           ADD      R1,R6,R7
   \   00000114   010050E1           CMP      R0,R1
   \   00000118   DCFFFF1A           BNE      ??maincsm_onmessage_2
   \   0000011C   4C0294E5           LDR      R0,[R4, #+588]
   \   00000120   0010A0E3           MOV      R1,#+0
   \   00000124   000050E3           CMP      R0,#+0
   \   00000128   1400000A           BEQ      ??maincsm_onmessage_14
   \                     ??maincsm_onmessage_15:
   \   0000012C   702090E5           LDR      R2,[R0, #+112]
   \   00000130   000052E3           CMP      R2,#+0
   \   00000134   0200000A           BEQ      ??maincsm_onmessage_16
   \   00000138   012052E2           SUBS     R2,R2,#+1
   \   0000013C   702080E5           STR      R2,[R0, #+112]
   \   00000140   0110A003           MOVEQ    R1,#+1
   \                     ??maincsm_onmessage_16:
   \   00000144   000090E5           LDR      R0,[R0, #+0]
   \   00000148   000050E3           CMP      R0,#+0
   \   0000014C   F6FFFF1A           BNE      ??maincsm_onmessage_15
   \   00000150   000051E3           CMP      R1,#+0
   \   00000154   0900000A           BEQ      ??maincsm_onmessage_14
   \   00000158   541294E5           LDR      R1,[R4, #+596]
   \   0000015C   000051E3           CMP      R1,#+0
   \   00000160   0400000A           BEQ      ??maincsm_onmessage_17
   \   00000164   540294E5           LDR      R0,[R4, #+596]
   \   00000168   0010A0E3           MOV      R1,#+0
   \   0000016C   090200EF           SWI      +521
   \   00000170   8F0100EF           SWI      +399
   \   00000174   ........           _BLF     FindContactByN,??FindContactByN??rA
   \                     ??maincsm_onmessage_17:
   \   00000178   0110A0E3           MOV      R1,#+1
   \   0000017C   ........           BL       RecountMenu
   \                     ??maincsm_onmessage_14:
   \   00000180   700294E5           LDR      R0,[R4, #+624]
   \   00000184   000050E3           CMP      R0,#+0
   \   00000188   C0FFFF0A           BEQ      ??maincsm_onmessage_2
   \   0000018C   010050E2           SUBS     R0,R0,#+1
   \   00000190   700284E5           STR      R0,[R4, #+624]
   \   00000194   BDFFFF1A           BNE      ??maincsm_onmessage_2
   \   00000198   580294E5           LDR      R0,[R4, #+600]
   \   0000019C   350100EF           SWI      +309
   \   000001A0   000050E3           CMP      R0,#+0
   \   000001A4   B9FFFF0A           BEQ      ??maincsm_onmessage_2
   \   000001A8   960100EF           SWI      +406
   \   000001AC   B7FFFFEA           B        ??maincsm_onmessage_2
   \                     ??maincsm_onmessage_18:
   \   000001B0   04009AE5           LDR      R0,[R10, #+4]
   \   000001B4   1B0000EF           SWI      +27
   \   000001B8   00A0A0E1           MOV      R10,R0
   \   000001BC   08008AE2           ADD      R0,R10,#+8
   \   000001C0   140000EF           SWI      +20
   \   000001C4   00B0A0E1           MOV      R11,R0
   \   000001C8   080099E5           LDR      R0,[R9, #+8]
   \   000001CC   0A20A0E1           MOV      R2,R10
   \   000001D0   000090E5           LDR      R0,[R0, #+0]
   \   000001D4   00008BE5           STR      R0,[R11, #+0]
   \   000001D8   0200A0E3           MOV      R0,#+2
   \   000001DC   B400CBE1           STRH     R0,[R11, #+4]
   \   000001E0   B6A0CBE1           STRH     R10,[R11, #+6]
   \   000001E4   080099E5           LDR      R0,[R9, #+8]
   \   000001E8   041090E5           LDR      R1,[R0, #+4]
   \   000001EC   08008BE2           ADD      R0,R11,#+8
   \   000001F0   1E0100EF           SWI      +286
   \   000001F4   E40194E5           LDR      R0,[R4, #+484]
   \   000001F8   0B20A0E1           MOV      R2,R11
   \   000001FC   010080E2           ADD      R0,R0,#+1
   \   00000200   E40184E5           STR      R0,[R4, #+484]
   \   00000204   ........           LDR      R0,??DataTable114  ;; SendAnswer
   \   00000208   0010A0E3           MOV      R1,#+0
   \   0000020C   710100EF           SWI      +369
   \   00000210   9EFFFFEA           B        ??maincsm_onmessage_2
   \                     ??maincsm_onmessage_19:
   \   00000214   000099E5           LDR      R0,[R9, #+0]
   \   00000218   071086E0           ADD      R1,R6,R7
   \   0000021C   010050E1           CMP      R0,R1
   \   00000220   9AFFFF1A           BNE      ??maincsm_onmessage_2
   \   00000224   08009AE5           LDR      R0,[R10, #+8]
   \   00000228   000050E3           CMP      R0,#+0
   \   0000022C   1000001A           BNE      ??maincsm_onmessage_20
   \   00000230   04009AE5           LDR      R0,[R10, #+4]
   \   00000234   1B0000EF           SWI      +27
   \   00000238   0040A0E1           MOV      R4,R0
   \   0000023C   090084E2           ADD      R0,R4,#+9
   \   00000240   140000EF           SWI      +20
   \   00000244   0050A0E1           MOV      R5,R0
   \   00000248   00009AE5           LDR      R0,[R10, #+0]
   \   0000024C   012084E2           ADD      R2,R4,#+1
   \   00000250   000085E5           STR      R0,[R5, #+0]
   \   00000254   0300A0E3           MOV      R0,#+3
   \   00000258   B400C5E1           STRH     R0,[R5, #+4]
   \   0000025C   B640C5E1           STRH     R4,[R5, #+6]
   \   00000260   04109AE5           LDR      R1,[R10, #+4]
   \   00000264   080085E2           ADD      R0,R5,#+8
   \   00000268   1E0100EF           SWI      +286
   \   0000026C   0500A0E1           MOV      R0,R5
   \   00000270   ........           BL       ProcessPacket
   \                     ??maincsm_onmessage_20:
   \   00000274   04009AE5           LDR      R0,[R10, #+4]
   \   00000278   150000EF           SWI      +21
   \   0000027C   0C009AE5           LDR      R0,[R10, #+12]
   \   00000280   150000EF           SWI      +21
   \   00000284   0A00A0E1           MOV      R0,R10
   \   00000288   150000EF           SWI      +21
   \   0000028C   0900A0E1           MOV      R0,R9
   \   00000290   150000EF           SWI      +21
   \   00000294   0000A0E3           MOV      R0,#+0
   \   00000298   18D08DE2           ADD      SP,SP,#+24
   \   0000029C   F08FBDE8           POP      {R4-R11,PC}      ;; return
   2612          	else
   2613          	{
   2614          	  switch(connect_state)
   \                     ??maincsm_onmessage_7:
   \   000002A0   240294E5           LDR      R0,[R4, #+548]
   \   000002A4   000050E3           CMP      R0,#+0
   \   000002A8   0200000A           BEQ      ??maincsm_onmessage_8
   \   000002AC   030050E2           SUBS     R0,R0,#+3
   2615          	  {
   2616          	  case 0:
   2617          	    icn=IS_OFFLINE; break;
   2618          	  case 3:
   2619          	    icn=CurrentStatus; //IS_ONLINE;
   \   000002B0   08029405           LDREQ    R0,[R4, #+520]
   2620          	    break;
   2621          	  default:
   2622          	    icn=IS_UNKNOWN; break;
   \   000002B4   0E00A013           MOVNE    R0,#+14
   2623          	  }
   2624          	}
   2625          	//Тут трохи поменял
   2626          	// by Rainmaker: Рисуем канву только для иконки и выводим в своих координатах
   2627          	DrawCanvas(canvasdata,IDLEICON_X,IDLEICON_Y,IDLEICON_X+GetImgWidth((int)S_ICONS[icn])-1,
   2628          		   IDLEICON_Y+GetImgHeight((int)S_ICONS[icn])-1,1);
   \                     ??maincsm_onmessage_8:
   \   000002B8   000184E0           ADD      R0,R4,R0, LSL #+2
   \   000002BC   00008DE5           STR      R0,[SP, #+0]
   \   000002C0   100190E5           LDR      R0,[R0, #+272]
   \   000002C4   210000EF           SWI      +33
   \   000002C8   10008DE5           STR      R0,[SP, #+16]
   \   000002CC   00009DE5           LDR      R0,[SP, #+0]
   \   000002D0   100190E5           LDR      R0,[R0, #+272]
   \   000002D4   220000EF           SWI      +34
   \   000002D8   98149FE5           LDR      R1,??maincsm_onmessage_5+0xC  ;; IDLEICON_X
   \   000002DC   00A091E5           LDR      R10,[R1, #+0]
   \   000002E0   94149FE5           LDR      R1,??maincsm_onmessage_5+0x10  ;; IDLEICON_Y
   \   000002E4   0A0080E0           ADD      R0,R0,R10
   \   000002E8   00B091E5           LDR      R11,[R1, #+0]
   \   000002EC   0110A0E3           MOV      R1,#+1
   \   000002F0   02002DE9           PUSH     {R1}
   \   000002F4   14109DE5           LDR      R1,[SP, #+20]
   \   000002F8   013040E2           SUB      R3,R0,#+1
   \   000002FC   0B20A0E1           MOV      R2,R11
   \   00000300   0B1081E0           ADD      R1,R1,R11
   \   00000304   011041E2           SUB      R1,R1,#+1
   \   00000308   02002DE9           PUSH     {R1}
   \   0000030C   0900A0E1           MOV      R0,R9
   \   00000310   0A10A0E1           MOV      R1,R10
   \   00000314   250000EF           SWI      +37
   2629          	DrawImg(IDLEICON_X,IDLEICON_Y,S_ICONS[icn]);
   \   00000318   08009DE5           LDR      R0,[SP, #+8]
   \   0000031C   0B10A0E1           MOV      R1,R11
   \   00000320   102190E5           LDR      R2,[R0, #+272]
   \   00000324   0A00A0E1           MOV      R0,R10
   \   00000328   230000EF           SWI      +35
   \   0000032C   08D08DE2           ADD      SP,SP,#+8
   2630                }
   2631              }
   2632            }
   2633            if (msg->msg==MSG_RECONFIGURE_REQ)
   \                     ??maincsm_onmessage_6:
   \   00000330   040098E5           LDR      R0,[R8, #+4]
   \   00000334   AF10A0E3           MOV      R1,#+175
   \   00000338   DE1C81E3           ORR      R1,R1,#0xDE00
   \   0000033C   010050E1           CMP      R0,R1
   \   00000340   0F00001A           BNE      ??maincsm_onmessage_21
   2634            {
   2635              extern const char *successed_config_filename;
   2636              if (strcmp_nocase(successed_config_filename,(char *)msg->data0)==0)
   \   00000344   ........           LDR      R0,??DataTable121  ;; successed_config_filename
   \   00000348   0C1098E5           LDR      R1,[R8, #+12]
   \   0000034C   000090E5           LDR      R0,[R0, #+0]
   \   00000350   ........           _BLF     strcmp_nocase,??strcmp_nocase??rA
   \   00000354   000050E3           CMP      R0,#+0
   \   00000358   0900001A           BNE      ??maincsm_onmessage_21
   2637              {
   2638                ShowMSG(1,(int)"NatICQ config updated!");
   \   0000035C   D01087E2           ADD      R1,R7,#+208
   \   00000360   0100A0E3           MOV      R0,#+1
   \   00000364   480100EF           SWI      +328
   2639                InitConfig();
   \   00000368   ........           _BLF     InitConfig,??InitConfig??rA
   2640                free_ICONS();
   \   0000036C   ........           BL       free_ICONS
   2641                setup_ICONS();
   \   00000370   ........           BL       setup_ICONS
   2642                ResortCL();
   \   00000374   ........           _BLF     ResortCL,??ResortCL??rA
   2643                RecountMenu(NULL, 1);
   \   00000378   0110A0E3           MOV      R1,#+1
   \   0000037C   0000A0E3           MOV      R0,#+0
   \   00000380   ........           BL       RecountMenu
   2644                //      InitSmiles();
   2645              }
   2646            }
   2647            if (msg->msg==MSG_GUI_DESTROYED)
   \                     ??maincsm_onmessage_21:
   \   00000384   040098E5           LDR      R0,[R8, #+4]
   \   00000388   0E10A0E3           MOV      R1,#+14
   \   0000038C   641C81E3           ORR      R1,R1,#0x6400
   \   00000390   010050E1           CMP      R0,R1
   \   00000394   0E00001A           BNE      ??maincsm_onmessage_22
   2648            {
   2649              if ((int)msg->data0==csm->gui_id)
   \   00000398   14109DE5           LDR      R1,[SP, #+20]
   \   0000039C   0C0098E5           LDR      R0,[R8, #+12]
   \   000003A0   281091E5           LDR      R1,[R1, #+40]
   \   000003A4   010050E1           CMP      R0,R1
   2650              {
   2651                csm->csm.state=-3;
   \   000003A8   14009D05           LDREQ    R0,[SP, #+20]
   \   000003AC   0210E003           MVNEQ    R1,#+2
   \   000003B0   10108005           STREQ    R1,[R0, #+16]
   2652              }
   2653              if ((int)msg->data0==contactlist_menu_id)
   \   000003B4   0C0098E5           LDR      R0,[R8, #+12]
   \   000003B8   541294E5           LDR      R1,[R4, #+596]
   \   000003BC   010050E1           CMP      R0,R1
   2654              {
   2655                contactlist_menu_id=0;
   \   000003C0   54528405           STREQ    R5,[R4, #+596]
   2656                prev_clmenu_itemcount=0;
   \   000003C4   5C528405           STREQ    R5,[R4, #+604]
   2657              }
   2658              if ((int)msg->data0==edchat_id)
   \   000003C8   581294E5           LDR      R1,[R4, #+600]
   \   000003CC   010050E1           CMP      R0,R1
   2659              {
   2660                edchat_id=0;
   \   000003D0   58528405           STREQ    R5,[R4, #+600]
   2661              }
   2662            }
   2663            if (msg->msg==MSG_HELPER_TRANSLATOR)
   \                     ??maincsm_onmessage_22:
   \   000003D4   040098E5           LDR      R0,[R8, #+4]
   \   000003D8   AE10A0E3           MOV      R1,#+174
   \   000003DC   DE1C81E3           ORR      R1,R1,#0xDE00
   \   000003E0   010050E1           CMP      R0,R1
   \   000003E4   1D00001A           BNE      ??maincsm_onmessage_23
   2664            {
   2665              switch((int)msg->data0)
   \   000003E8   0C0098E5           LDR      R0,[R8, #+12]
   \   000003EC   101098E5           LDR      R1,[R8, #+16]
   \   000003F0   ........           LDR      R8,??DataTable108  ;; do_reconnect
   \   000003F4   F69FA0E3           MOV      R9,#+984
   \   000003F8   01A0A0E3           MOV      R10,#+1
   \   000003FC   802050E2           SUBS     R2,R0,#+128
   \   00000400   0600000A           BEQ      ??maincsm_onmessage_24
   \   00000404   022052E2           SUBS     R2,R2,#+2
   \   00000408   0200000A           BEQ      ??maincsm_onmessage_25
   \   0000040C   122052E2           SUBS     R2,R2,#+18
   \   00000410   1500000A           BEQ      ??maincsm_onmessage_26
   \   00000414   1D0000EA           B        ??maincsm_onmessage_27
   2666              {
   2667              case LMAN_DISCONNECT_IND:
   2668                is_gprs_online=0;
   \                     ??maincsm_onmessage_25:
   \   00000418   445284E5           STR      R5,[R4, #+580]
   2669                return(1);
   \   0000041C   0F0000EA           B        ??maincsm_onmessage_23
   2670              case LMAN_CONNECT_CNF:
   2671                vibra_count=1;
   \                     ??maincsm_onmessage_24:
   \   00000420   14A284E5           STR      R10,[R4, #+532]
   2672                start_vibra();
   \   00000424   ........           BL       start_vibra
   2673                is_gprs_online=1;
   2674                //strcpy(logmsg,LG_GRGPRSUP);
   2675                snprintf(logmsg, 255, LG_GRGPRSUP, RECONNECT_TIME);
   \   00000428   ........           LDR      R0,??DataTable117  ;; RECONNECT_TIME
   \   0000042C   44A284E5           STR      R10,[R4, #+580]
   \   00000430   005090E5           LDR      R5,[R0, #+0]
   \   00000434   642087E2           ADD      R2,R7,#+100
   \   00000438   0530A0E1           MOV      R3,R5
   \   0000043C   FF10A0E3           MOV      R1,#+255
   \   00000440   040089E0           ADD      R0,R9,R4
   \   00000444   1B0100EF           SWI      +283
   2676                GBS_StartTimerProc(&reconnect_tmr,TMR_SECOND*RECONNECT_TIME,do_reconnect);
   \   00000448   0820A0E1           MOV      R2,R8
   \   0000044C   D800A0E3           MOV      R0,#+216
   \   00000450   900501E0           MUL      R1,R0,R5
   \   00000454   420E80E3           ORR      R0,R0,#0x420
   \   00000458   040080E0           ADD      R0,R0,R4
   \   0000045C   4D0000EF           SWI      +77
   2677                return(1);
   \                     ??maincsm_onmessage_23:
   \   00000460   0100A0E3           MOV      R0,#+1
   \                     ??maincsm_onmessage_28:
   \   00000464   18D08DE2           ADD      SP,SP,#+24
   \   00000468   F08FBDE8           POP      {R4-R11,PC}
   2678              case ENIP_DNR_HOST_BY_NAME:
   2679                if ((int)msg->data1==DNR_ID)
   \                     ??maincsm_onmessage_26:
   \   0000046C   640294E5           LDR      R0,[R4, #+612]
   \   00000470   000051E1           CMP      R1,R0
   \   00000474   F9FFFF1A           BNE      ??maincsm_onmessage_23
   2680                {
   2681          	if (DNR_TRIES) SUBPROC((void *)create_connect);
   \   00000478   680294E5           LDR      R0,[R4, #+616]
   \   0000047C   000050E3           CMP      R0,#+0
   \   00000480   F6FFFF0A           BEQ      ??maincsm_onmessage_23
   \   00000484   ........           LDR      R0,??DataTable110  ;; create_connect
   \                     ??maincsm_onmessage_29:
   \   00000488   710100EF           SWI      +369
   2682                }
   2683                return(1);
   \                     ??maincsm_onmessage_30:
   \   0000048C   F3FFFFEA           B        ??maincsm_onmessage_23
   2684              }
   2685              if ((int)msg->data1==sock)
   \                     ??maincsm_onmessage_27:
   \   00000490   282294E5           LDR      R2,[R4, #+552]
   \   00000494   020051E1           CMP      R1,R2
   \   00000498   F0FFFF1A           BNE      ??maincsm_onmessage_23
   2686              {
   2687                //Если наш сокет
   2688                if ((((unsigned int)msg->data0)>>28)==0xA)
   \   0000049C   201EA0E1           LSR      R1,R0,#+28
   \   000004A0   0A0051E3           CMP      R1,#+10
   \   000004A4   3500001A           BNE      ??maincsm_onmessage_31
   2689                {
   2690          	TPKT *p=(TPKT *)msg->data0;
   \   000004A8   0040A0E1           MOV      R4,R0
   2691          	//Принят пакет
   2692          	if (p->pkt.type==T_RECVMSG)
   \   000004AC   B400D4E1           LDRH     R0,[R4, #+4]
   \   000004B0   030050E3           CMP      R0,#+3
   \   000004B4   2D00001A           BNE      ??maincsm_onmessage_32
   2693          	{
   2694          	  //Просунем через IPC
   2695          
   2696          	  int l=p->pkt.data_len+1; //С завершающим \0
   \   000004B8   B600D4E1           LDRH     R0,[R4, #+6]
   \   000004BC   01B080E2           ADD      R11,R0,#+1
   2697          	  IPC_REQ *ripc=malloc(sizeof(IPC_REQ));
   \   000004C0   0C00A0E3           MOV      R0,#+12
   \   000004C4   140000EF           SWI      +20
   \   000004C8   0080A0E1           MOV      R8,R0
   2698          	  IPC_REQ *fipc=malloc(sizeof(IPC_REQ));
   \   000004CC   0C00A0E3           MOV      R0,#+12
   \   000004D0   140000EF           SWI      +20
   \   000004D4   0090A0E1           MOV      R9,R0
   2699          	  IPCMsg_RECVMSG *msg=malloc(sizeof(IPCMsg_RECVMSG));
   \   000004D8   1000A0E3           MOV      R0,#+16
   \   000004DC   140000EF           SWI      +20
   \   000004E0   00A0A0E1           MOV      R10,R0
   2700          	  memcpy(msg->msg=malloc(l),p->data,l);
   \   000004E4   0B00A0E1           MOV      R0,R11
   \   000004E8   140000EF           SWI      +20
   \   000004EC   04008AE5           STR      R0,[R10, #+4]
   \   000004F0   0B20A0E1           MOV      R2,R11
   \   000004F4   081084E2           ADD      R1,R4,#+8
   \   000004F8   1E0100EF           SWI      +286
   2701          	  msg->uin=p->pkt.uin;
   \   000004FC   000094E5           LDR      R0,[R4, #+0]
   2702          	  msg->drop_msg=0;
   2703          	  msg->ipc=ripc;
   2704          	  ripc->data=msg;
   2705          	  fipc->data=msg;
   2706          	  ripc->name_from=ipc_my_name;
   2707          	  ripc->name_to=ipc_my_name;
   2708          	  fipc->name_from=ipc_my_name;
   2709          	  fipc->name_to=ipc_my_name;
   2710          	  GBS_SendMessage(MMI_CEPID,MSG_IPC,IPC_RECVMSG,ripc);
   \   00000500   0830A0E1           MOV      R3,R8
   \   00000504   00008AE5           STR      R0,[R10, #+0]
   \   00000508   08508AE5           STR      R5,[R10, #+8]
   \   0000050C   0C808AE5           STR      R8,[R10, #+12]
   \   00000510   08A088E5           STR      R10,[R8, #+8]
   \   00000514   08A089E5           STR      R10,[R9, #+8]
   \   00000518   070086E0           ADD      R0,R6,R7
   \   0000051C   040088E5           STR      R0,[R8, #+4]
   \   00000520   000088E5           STR      R0,[R8, #+0]
   \   00000524   040089E5           STR      R0,[R9, #+4]
   \   00000528   000089E5           STR      R0,[R9, #+0]
   \   0000052C   0950A0E3           MOV      R5,#+9
   \   00000530   425C85E3           ORR      R5,R5,#0x4200
   \   00000534   0620A0E3           MOV      R2,#+6
   \   00000538   B010A0E3           MOV      R1,#+176
   \   0000053C   DE1C81E3           ORR      R1,R1,#0xDE00
   \   00000540   0500A0E1           MOV      R0,R5
   \   00000544   000100EF           SWI      +256
   2711          	  GBS_SendMessage(MMI_CEPID,MSG_IPC,IPC_FREEMSG,fipc);
   \   00000548   0930A0E1           MOV      R3,R9
   \   0000054C   0720A0E3           MOV      R2,#+7
   \   00000550   B010A0E3           MOV      R1,#+176
   \   00000554   DE1C81E3           ORR      R1,R1,#0xDE00
   \   00000558   0500A0E1           MOV      R0,R5
   \   0000055C   000100EF           SWI      +256
   2712          	  mfree(p);
   \   00000560   0400A0E1           MOV      R0,R4
   \   00000564   150000EF           SWI      +21
   \   00000568   0000A0E3           MOV      R0,#+0
   \   0000056C   BCFFFFEA           B        ??maincsm_onmessage_28
   2713          	}
   2714          	else
   2715          	{
   2716          	  //Непосредственная обработка
   2717          	  ProcessPacket(p);
   \                     ??maincsm_onmessage_32:
   \   00000570   0400A0E1           MOV      R0,R4
   \   00000574   ........           BL       ProcessPacket
   2718          	}
   2719          	return(0);
   \   00000578   0000A0E3           MOV      R0,#+0
   \   0000057C   B8FFFFEA           B        ??maincsm_onmessage_28
   2720                }
   2721                switch((int)msg->data0)
   \                     ??maincsm_onmessage_31:
   \   00000580   ........           LDR      R2,??DataTable111  ;; VIBR_ON_CONNECT
   \   00000584   241294E5           LDR      R1,[R4, #+548]
   \   00000588   006092E5           LDR      R6,[R2, #+0]
   \   0000058C   ........           LDR      R11,??DataTable112  ;; lgpData
   \   00000590   8A0040E2           SUB      R0,R0,#+138
   \   00000594   050050E3           CMP      R0,#+5
   \   00000598   B0FFFF8A           BHI      ??maincsm_onmessage_23
   \   0000059C   012F8FE2           ADR      R2,??maincsm_onmessage_1
   \   000005A0   D02092E1           LDRSB    R2,[R2, R0]
   \   000005A4   02F18FE0           ADD      PC,PC,R2, LSL #+2
   \                     ??maincsm_onmessage_1:
   \   000005A8   3D3D3801           DC8      +61,+61,+56,+1
   \   000005AC   46420000           DC8      +70,+66,+0,+0
   2722                {
   2723                case ENIP_SOCK_CONNECTED:
   2724          	if (connect_state==1)
   \                     ??maincsm_onmessage_33:
   \   000005B0   010051E3           CMP      R1,#+1
   \   000005B4   3000001A           BNE      ??maincsm_onmessage_34
   2725          	{
   2726          	  if(VIBR_ON_CONNECT)
   \   000005B8   000056E3           CMP      R6,#+0
   2727                      vibra_count=2;
   2728                    else
   2729                      vibra_count=1;
   2730          	  start_vibra();
   2731          	  //Соединение установленно, посылаем пакет login
   2732          	  strcpy(logmsg, LG_GRTRYLOGIN);
   2733          	  {
   2734          	    int i=strlen(PASS);
   \   000005BC   BC619FE5           LDR      R6,??maincsm_onmessage_5+0x14  ;; PASS
   \   000005C0   0200A013           MOVNE    R0,#+2
   \   000005C4   14028415           STRNE    R0,[R4, #+532]
   \   000005C8   14A28405           STREQ    R10,[R4, #+532]
   \   000005CC   ........           BL       start_vibra
   \   000005D0   9C1087E2           ADD      R1,R7,#+156
   \   000005D4   040089E0           ADD      R0,R9,R4
   \   000005D8   1A0000EF           SWI      +26
   \   000005DC   0600A0E1           MOV      R0,R6
   \   000005E0   1B0000EF           SWI      +27
   \   000005E4   0070A0E1           MOV      R7,R0
   2735          	    TPKT *p=malloc(sizeof(PKT)+i);
   \   000005E8   080087E2           ADD      R0,R7,#+8
   \   000005EC   140000EF           SWI      +20
   \   000005F0   0080A0E1           MOV      R8,R0
   2736          	    p->pkt.uin=UIN;
   \   000005F4   ........           LDR      R0,??DataTable120  ;; UIN
   2737          	    p->pkt.type=T_REQLOGIN;
   2738          	    p->pkt.data_len=i;
   2739          	    memcpy(p->data,PASS,i);
   \   000005F8   0720A0E1           MOV      R2,R7
   \   000005FC   009090E5           LDR      R9,[R0, #+0]
   \   00000600   0610A0E1           MOV      R1,R6
   \   00000604   009088E5           STR      R9,[R8, #+0]
   \   00000608   B4A0C8E1           STRH     R10,[R8, #+4]
   \   0000060C   B670C8E1           STRH     R7,[R8, #+6]
   \   00000610   080088E2           ADD      R0,R8,#+8
   \   00000614   1E0100EF           SWI      +286
   2740          	    SUBPROC((void *)send_login,0,p);
   \   00000618   64019FE5           LDR      R0,??maincsm_onmessage_5+0x18  ;; send_login
   \   0000061C   0820A0E1           MOV      R2,R8
   \   00000620   0010A0E3           MOV      R1,#+0
   \   00000624   710100EF           SWI      +369
   2741          	  }
   2742          	  GROUP_CACHE=0;
   \   00000628   505284E5           STR      R5,[R4, #+592]
   2743          	  SENDMSGCOUNT=0; //Начинаем отсчет
   \   0000062C   E45184E5           STR      R5,[R4, #+484]
   2744          	  if (!FindGroupByID(0)) AddGroup(0,lgpData[LGP_GroupNotInList]);
   \   00000630   0500A0E1           MOV      R0,R5
   \   00000634   ........           _BLF     FindGroupByID,??FindGroupByID??rA
   \   00000638   000050E3           CMP      R0,#+0
   \   0000063C   0100001A           BNE      ??maincsm_onmessage_35
   \   00000640   14109BE5           LDR      R1,[R11, #+20]
   \   00000644   ........           _BLF     AddGroup,??AddGroup??rA
   2745          	  if (!FindContactByUin(UIN)) AddContact(UIN, lgpData[LGP_ClLoopback], 0,1);
   \                     ??maincsm_onmessage_35:
   \   00000648   0900A0E1           MOV      R0,R9
   \   0000064C   ........           _BLF     FindContactByUin,??FindContactByUin??rA
   \   00000650   000050E3           CMP      R0,#+0
   \   00000654   0400001A           BNE      ??maincsm_onmessage_36
   \   00000658   10109BE5           LDR      R1,[R11, #+16]
   \   0000065C   0130A0E3           MOV      R3,#+1
   \   00000660   0520A0E1           MOV      R2,R5
   \   00000664   0900A0E1           MOV      R0,R9
   \   00000668   ........           _BLF     AddContact,??AddContact??rA
   2746          	  SUBPROC((void *)LoadLocalCL);
   \                     ??maincsm_onmessage_36:
   \   0000066C   14019FE5           LDR      R0,??maincsm_onmessage_5+0x1C  ;; LoadLocalCL
   \   00000670   710100EF           SWI      +369
   2747          	  SMART_REDRAW();
   \   00000674   ........           BL       SMART_REDRAW
   \   00000678   78FFFFEA           B        ??maincsm_onmessage_23
   2748          	}
   2749          	else
   2750          	{
   2751          	  ShowMSG(1,(int)lgpData[LGP_MsgIllegmsgcon]);
   \                     ??maincsm_onmessage_34:
   \   0000067C   14119BE5           LDR      R1,[R11, #+276]
   \                     ??maincsm_onmessage_37:
   \   00000680   0100A0E3           MOV      R0,#+1
   \   00000684   480100EF           SWI      +328
   \   00000688   74FFFFEA           B        ??maincsm_onmessage_23
   2752          	}
   2753          	break;
   2754                case ENIP_SOCK_DATA_READ:
   2755          	if (connect_state>=2)
   \                     ??maincsm_onmessage_38:
   \   0000068C   020051E3           CMP      R1,#+2
   2756          	{
   2757          	  //Если посылали send
   2758          	  SUBPROC((void *)get_answer);
   \   00000690   F4009FA5           LDRGE    R0,??maincsm_onmessage_5+0x20  ;; get_answer
   \   00000694   7BFFFFAA           BGE      ??maincsm_onmessage_29
   2759          	  //SMART_REDRAW();
   2760          	}
   2761          	else
   2762          	{
   2763          	  ShowMSG(1,(int)lgpData[LGP_MsgIllegmsgrea]);
   \   00000698   18119BE5           LDR      R1,[R11, #+280]
   \   0000069C   F7FFFFEA           B        ??maincsm_onmessage_37
   2764          	}
   2765          	break;
   2766                case ENIP_BUFFER_FREE:
   2767                case ENIP_BUFFER_FREE1:
   2768          	SUBPROC((void *)SendAnswer,0,0);
   \                     ??maincsm_onmessage_39:
   \   000006A0   ........           LDR      R0,??DataTable114  ;; SendAnswer
   \   000006A4   0020A0E3           MOV      R2,#+0
   \   000006A8   0210A0E1           MOV      R1,R2
   \   000006AC   710100EF           SWI      +369
   \   000006B0   6AFFFFEA           B        ??maincsm_onmessage_23
   2769          	break;
   2770                case ENIP_SOCK_REMOTE_CLOSED:
   2771          	//Закрыт со стороны сервера
   2772          	if (connect_state)
   \                     ??maincsm_onmessage_40:
   \   000006B4   000051E3           CMP      R1,#+0
   \   000006B8   68FFFF0A           BEQ      ??maincsm_onmessage_23
   2773          	  SUBPROC((void *)end_socket);
   \   000006BC   ........           LDR      R0,??DataTable115  ;; end_socket
   \   000006C0   70FFFFEA           B        ??maincsm_onmessage_29
   2774          	break;
   2775                case ENIP_SOCK_CLOSED:
   2776          	//strcpy(logmsg, "No connection");
   2777          	//Dump not received
   2778          /*	if (RXstate>(-(int)sizeof(PKT)))
   2779          	{
   2780          	  unsigned int err;
   2781          	  int f=fopen("4:\\NATICQ.dump",A_ReadWrite+A_Create+A_Truncate+A_BIN,P_READ+P_WRITE,&err);
   2782          	  if (f!=-1)
   2783          	  {
   2784          	    fwrite(f,&RXbuf,RXstate+sizeof(PKT),&err);
   2785          	    fclose(f,&err);
   2786          	  }
   2787          	}*/
   2788          	FillAllOffline();
   \                     ??maincsm_onmessage_41:
   \   000006C4   ........           _BLF     FillAllOffline,??FillAllOffline??rA
   2789          	RecountMenu(NULL, 1);
   \   000006C8   0110A0E3           MOV      R1,#+1
   \   000006CC   0500A0E1           MOV      R0,R5
   \   000006D0   ........           BL       RecountMenu
   2790          	connect_state=0;
   \   000006D4   245284E5           STR      R5,[R4, #+548]
   2791          	sock=-1;
   \   000006D8   0500E0E1           MVN      R0,R5
   \   000006DC   280284E5           STR      R0,[R4, #+552]
   2792                  if(VIBR_ON_CONNECT)
   \   000006E0   000056E3           CMP      R6,#+0
   2793                    vibra_count=4;
   \   000006E4   0400A013           MOVNE    R0,#+4
   \   000006E8   14028415           STRNE    R0,[R4, #+532]
   2794                  else
   2795                    vibra_count=1;
   \   000006EC   14A28405           STREQ    R10,[R4, #+532]
   2796          
   2797          	start_vibra();
   \   000006F0   ........           BL       start_vibra
   2798          	if (sendq_p)
   \   000006F4   400294E5           LDR      R0,[R4, #+576]
   \   000006F8   000050E3           CMP      R0,#+0
   \   000006FC   0400000A           BEQ      ??maincsm_onmessage_42
   2799          	{
   2800          	  snprintf(logmsg,255,"Disconnected, %d bytes not sended!",sendq_l);
   \   00000700   3C3294E5           LDR      R3,[R4, #+572]
   \   00000704   AC2087E2           ADD      R2,R7,#+172
   \   00000708   FF10A0E3           MOV      R1,#+255
   \   0000070C   040089E0           ADD      R0,R9,R4
   \   00000710   1B0100EF           SWI      +283
   2801          	}
   2802          	SMART_REDRAW();
   \                     ??maincsm_onmessage_42:
   \   00000714   ........           BL       SMART_REDRAW
   2803          	SUBPROC((void *)ClearSendQ);
   \   00000718   ........           LDR      R0,??DataTable116  ;; ClearSendQ
   \   0000071C   710100EF           SWI      +369
   2804          	if (!disautorecconect)
   \   00000720   F40194E5           LDR      R0,[R4, #+500]
   \   00000724   000050E3           CMP      R0,#+0
   \   00000728   4CFFFF1A           BNE      ??maincsm_onmessage_23
   2805                  {
   2806                    GBS_StartTimerProc(&reconnect_tmr,TMR_SECOND*RECONNECT_TIME,do_reconnect);
   \   0000072C   ........           LDR      R0,??DataTable117  ;; RECONNECT_TIME
   \   00000730   0820A0E1           MOV      R2,R8
   \   00000734   005090E5           LDR      R5,[R0, #+0]
   \   00000738   D800A0E3           MOV      R0,#+216
   \   0000073C   900501E0           MUL      R1,R0,R5
   \   00000740   420E80E3           ORR      R0,R0,#0x420
   \   00000744   040080E0           ADD      R0,R0,R4
   \   00000748   4D0000EF           SWI      +77
   2807                    snprintf(logmsg,255,LG_GRRECONNECT,logmsg, RECONNECT_TIME);
   \   0000074C   20002DE9           PUSH     {R5}
   \   00000750   043089E0           ADD      R3,R9,R4
   \   00000754   F02087E2           ADD      R2,R7,#+240
   \   00000758   FF10A0E3           MOV      R1,#+255
   \   0000075C   040089E0           ADD      R0,R9,R4
   \   00000760   1B0100EF           SWI      +283
   \   00000764   04D08DE2           ADD      SP,SP,#+4
   \   00000768   3CFFFFEA           B        ??maincsm_onmessage_23
   \                     ??maincsm_onmessage_5:
   \   0000076C   ........           DC32     CheckDoubleRun
   \   00000770   ........           DC32     ProcessNextSmile
   \   00000774   ........           DC32     ProcessNextXStatImg
   \   00000778   ........           DC32     IDLEICON_X
   \   0000077C   ........           DC32     IDLEICON_Y
   \   00000780   ........           DC32     PASS
   \   00000784   ........           DC32     send_login
   \   00000788   ........           DC32     LoadLocalCL
   \   0000078C   ........           DC32     get_answer
   2808                  }
   2809          	break;
   2810                }
   2811              }
   2812            }
   2813            return(1);
   2814          }
   2815          
   2816          

   \                                 In segment DATA_C, align 4, align-sorted
   2817          const int minus11=-11;
   \                     minus11:
   \   00000000   F5FFFFFF           DC32 -11
   2818          

   \                                 In segment DATA_Z, align 4, align-sorted
   2819          unsigned short maincsm_name_body[140];
   \                     maincsm_name_body:
   \   00000000                      DS8 280
   2820          
   2821          const struct
   2822          {
   2823            CSM_DESC maincsm;
   2824            WSHDR maincsm_name;

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "NATICQ: %d">`:
   \   00000000   4E4154494351       DC8 "NATICQ: %d"
   \              3A20256400  
   \   0000000B   00                 DC8 0
   2825          }MAINCSM =
   \                     MAINCSM:
   \   0000000C   ............       DC32 maincsm_onmessage, maincsm_oncreate, 0, 0, 0, 0, maincsm_onclose
   \              ....00000000
   \              000000000000
   \              000000000000
   \              ........    
   \   00000028   2C0000000100       DC32 44, 1, minus11, maincsm_name_body, 55AACCCCH, 3333AA55H, 0
   \              0000........
   \              ........CCCC
   \              AA5555AA3333
   \              00000000    
   \   00000044   8B00               DC16 139
   \   00000046   0000               DC8 0, 0
   2826          {
   2827            {
   2828              maincsm_onmessage,
   2829              maincsm_oncreate,
   2830          #ifdef NEWSGOLD
   2831          0,
   2832          0,
   2833          0,
   2834          0,
   2835          #endif
   2836          maincsm_onclose,
   2837          sizeof(MAIN_CSM),
   2838          1,
   2839          &minus11
   2840            },
   2841            {
   2842              maincsm_name_body,
   2843              NAMECSM_MAGIC1,
   2844              NAMECSM_MAGIC2,
   2845              0x0,
   2846              139
   2847            }
   2848          };
   2849          

   \                                 In segment CODE, align 4, keep-with-next
   2850          void UpdateCSMname(void)
   2851          {
   2852            wsprintf((WSHDR *)(&MAINCSM.maincsm_name), "NATICQ: %d",UIN);
   \                     UpdateCSMname:
   \   00000000   18009FE5           LDR      R0,??UpdateCSMname_0  ;; `?<Constant "NATICQ: %d">`
   \   00000004   ........           LDR      R1,??DataTable120  ;; UIN
   \   00000008   00402DE9           PUSH     {LR}
   \   0000000C   002091E5           LDR      R2,[R1, #+0]
   \   00000010   0010A0E1           MOV      R1,R0
   \   00000014   340080E2           ADD      R0,R0,#+52
   \   00000018   240100EF           SWI      +292
   2853          }
   \   0000001C   0080BDE8           POP      {PC}             ;; return
   \                     ??UpdateCSMname_0:
   \   00000020   ........           DC32     `?<Constant "NATICQ: %d">`
   2854          
   2855          

   \                                 In segment CODE, align 4, keep-with-next
   2856          int main(char *filename)
   2857          {
   \                     main:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   2858            MAIN_CSM main_csm;
   2859            char *s;
   2860            int len;
   2861            extern const char *successed_config_filename;
   2862            WSHDR *ws;
   2863          
   2864            InitConfig();
   2865            
   2866            s=strrchr(filename,'\\');
   2867            len=(s-filename)+1;
   2868            strncpy(elf_path,filename,len);
   \   00000004   ........           LDR      R6,??DataTable125  ;; contactlist_menuhdr
   \   00000008   2CD04DE2           SUB      SP,SP,#+44
   \   0000000C   0040A0E1           MOV      R4,R0
   \   00000010   ........           _BLF     InitConfig,??InitConfig??rA
   \   00000014   5C10A0E3           MOV      R1,#+92
   \   00000018   0400A0E1           MOV      R0,R4
   \   0000001C   170100EF           SWI      +279
   \   00000020   040040E0           SUB      R0,R0,R4
   \   00000024   015080E2           ADD      R5,R0,#+1
   \   00000028   0520A0E1           MOV      R2,R5
   \   0000002C   0410A0E1           MOV      R1,R4
   \   00000030   AE0F86E2           ADD      R0,R6,#+696
   \   00000034   160100EF           SWI      +278
   2869            elf_path[len]=0;
   \   00000038   060085E0           ADD      R0,R5,R6
   \   0000003C   0010A0E3           MOV      R1,#+0
   \   00000040   B812C0E5           STRB     R1,[R0, #+696]
   2870            
   2871            lgpLoadLangpack();
   \   00000044   ........           _BLF     lgpLoadLangpack,??lgpLoadLangpack??rA
   2872            
   2873            if (!UIN)
   \   00000048   ........           LDR      R0,??DataTable120  ;; UIN
   \   0000004C   000090E5           LDR      R0,[R0, #+0]
   \   00000050   000050E3           CMP      R0,#+0
   \   00000054   1700001A           BNE      ??main_0
   2874            {
   2875              LockSched();
   \   00000058   460100EF           SWI      +326
   2876              ShowMSG(1,(int)lgpData[LGP_MsgNoUinPass]);
   \   0000005C   8C009FE5           LDR      R0,??main_1      ;; lgpData + 312
   \   00000060   001090E5           LDR      R1,[R0, #+0]
   \   00000064   0100A0E3           MOV      R0,#+1
   \   00000068   480100EF           SWI      +328
   2877              ws=AllocWS(150);
   \   0000006C   9600A0E3           MOV      R0,#+150
   \   00000070   250100EF           SWI      +293
   \   00000074   0040A0E1           MOV      R4,R0
   2878              str_2ws(ws,successed_config_filename,128);
   \   00000078   ........           LDR      R0,??DataTable121  ;; successed_config_filename
   \   0000007C   8020A0E3           MOV      R2,#+128
   \   00000080   001090E5           LDR      R1,[R0, #+0]
   \   00000084   0400A0E1           MOV      R0,R4
   \   00000088   6C0100EF           SWI      +364
   2879              ExecuteFile(ws,0,0);
   \   0000008C   0020A0E3           MOV      R2,#+0
   \   00000090   0010A0E3           MOV      R1,#+0
   \   00000094   0400A0E1           MOV      R0,R4
   \   00000098   940000EF           SWI      +148
   2880              UnlockSched();
   \   0000009C   470100EF           SWI      +327
   2881              lgpFreeLangPack();
   \   000000A0   ........           _BLF     lgpFreeLangPack,??lgpFreeLangPack??rA
   2882              SUBPROC((void *)ElfKiller);
   \   000000A4   ........           LDR      R0,??DataTable122  ;; ElfKiller
   \   000000A8   710100EF           SWI      +369
   2883              return 0;
   \   000000AC   0000A0E3           MOV      R0,#+0
   \   000000B0   2CD08DE2           ADD      SP,SP,#+44
   \   000000B4   7080BDE8           POP      {R4-R6,PC}
   2884            }
   2885            
   2886            ReadDefSettings();
   \                     ??main_0:
   \   000000B8   ........           BL       ReadDefSettings
   2887            setup_ICONS();
   \   000000BC   ........           BL       setup_ICONS
   2888            LoadXStatusText();
   \   000000C0   ........           _BLF     LoadXStatusText,??LoadXStatusText??rA
   2889            UpdateCSMname();
   \   000000C4   ........           BL       UpdateCSMname
   2890            LockSched();
   \   000000C8   460100EF           SWI      +326
   2891            maincsm_id=CreateCSM(&MAINCSM.maincsm,&main_csm,0);
   \   000000CC   20009FE5           LDR      R0,??main_1+0x4  ;; `?<Constant "NATICQ: %d">` + 12
   \   000000D0   0020A0E3           MOV      R2,#+0
   \   000000D4   0D10A0E1           MOV      R1,SP
   \   000000D8   070100EF           SWI      +263
   \   000000DC   DC0186E5           STR      R0,[R6, #+476]
   2892            UnlockSched();
   \   000000E0   470100EF           SWI      +327
   2893            return 0;
   \   000000E4   0000A0E3           MOV      R0,#+0
   \   000000E8   2CD08DE2           ADD      SP,SP,#+44
   \   000000EC   7080BDE8           POP      {R4-R6,PC}       ;; return
   \                     ??main_1:
   \   000000F0   ........           DC32     lgpData + 312
   \   000000F4   ........           DC32     `?<Constant "NATICQ: %d">` + 12
   2894          }
   2895          
   2896          //===========================================================
   2897          // Edit chat
   2898          //===========================================================

   \                                 In segment CODE, align 4, keep-with-next
   2899          void edchat_locret(void){}
   \                     edchat_locret:
   \   00000000   1EFF2FE1           BX       LR               ;; return
   2900          

   \                                 In segment CODE, align 4, keep-with-next
   2901          char *ExtractAnswer(WSHDR *ws)
   2902          {
   \                     ExtractAnswer:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   2903            S_SMILES *t;
   2904            int c;
   2905            int len=0;
   2906            int scur;
   2907            char *msg=NULL;
   2908            unsigned short *wsbody=ws->wsbody;
   \   00000004   005090E5           LDR      R5,[R0, #+0]
   \   00000008   0040A0E3           MOV      R4,#+0
   2909            int wslen=wsbody[0];
   \   0000000C   B060D5E1           LDRH     R6,[R5, #+0]
   \   00000010   0070A0E3           MOV      R7,#+0
   2910            if (wslen)
   \   00000014   000056E3           CMP      R6,#+0
   \   00000018   3C00000A           BEQ      ??ExtractAnswer_0
   2911            {
   2912              for (int i=0; i<wslen; i++) // Посчитаем общую длину будущей строки
   \   0000001C   010056E3           CMP      R6,#+1
   \   00000020   070000AA           BGE      ??ExtractAnswer_1
   2913              {
   2914                c=wsbody[i+1];
   2915                if (c>=0xE100)
   2916                {
   2917                  t=FindSmileByUni(c);
   2918                  if (t)
   2919                  {
   2920                    if (t->lines)
   2921                    {
   2922                      len+=strlen(t->lines->text);
   2923                    }
   2924                  }
   2925                  else  len++;
   2926                }
   2927                else  len++;
   2928              }
   2929          
   2930              msg=malloc(len+1);
   \                     ??ExtractAnswer_2:
   \   00000024   010084E2           ADD      R0,R4,#+1
   \   00000028   140000EF           SWI      +20
   \   0000002C   0070A0E1           MOV      R7,R0
   2931              scur=0;
   \   00000030   0090A0E3           MOV      R9,#+0
   2932              for (int wcur=0; wcur<wslen && scur<len; wcur++)
   \   00000034   00A0A0E3           MOV      R10,#+0
   \   00000038   180000EA           B        ??ExtractAnswer_3
   \                     ??ExtractAnswer_4:
   \   0000003C   014084E2           ADD      R4,R4,#+1
   \                     ??ExtractAnswer_5:
   \   00000040   017087E2           ADD      R7,R7,#+1
   \                     ??ExtractAnswer_1:
   \   00000044   060057E1           CMP      R7,R6
   \   00000048   F5FFFFAA           BGE      ??ExtractAnswer_2
   \   0000004C   870085E0           ADD      R0,R5,R7, LSL #+1
   \   00000050   B280D0E1           LDRH     R8,[R0, #+2]
   \   00000054   E10C58E3           CMP      R8,#+57600
   \   00000058   F7FFFFBA           BLT      ??ExtractAnswer_4
   \   0000005C   0800A0E1           MOV      R0,R8
   \   00000060   ........           _BLF     FindSmileByUni,??FindSmileByUni??rA
   \   00000064   000050E3           CMP      R0,#+0
   \   00000068   F3FFFF0A           BEQ      ??ExtractAnswer_4
   \   0000006C   080090E5           LDR      R0,[R0, #+8]
   \   00000070   000050E3           CMP      R0,#+0
   \   00000074   F1FFFF0A           BEQ      ??ExtractAnswer_5
   \   00000078   0C0080E2           ADD      R0,R0,#+12
   \   0000007C   1B0000EF           SWI      +27
   \   00000080   044080E0           ADD      R4,R0,R4
   \   00000084   EDFFFFEA           B        ??ExtractAnswer_5
   2933              {
   2934                c=wsbody[wcur+1];
   2935                if (c==10) c=13;
   \                     ??ExtractAnswer_6:
   \   00000088   0D80A0E3           MOV      R8,#+13
   2936                if (c>=0xE100)
   2937                {
   2938                  t=FindSmileByUni(c);
   2939                  if (t)
   2940                  {
   2941                    int w;
   2942                    char *s;
   2943                    if (t->lines)
   2944                    {
   2945                      s=t->lines->text;
   2946                      while ((w=*s++) && scur<len)
   2947                      {
   2948                        msg[scur]=w;
   2949                        scur++;
   2950                      }
   2951                    }
   2952                  }
   2953                  else
   2954                  {
   2955                    msg[scur]=char16to8(c);
   2956                    scur++;
   2957                  }
   2958                }
   2959                else
   2960                {
   2961                  msg[scur]=char16to8(c);
   \                     ??ExtractAnswer_7:
   \   0000008C   0800A0E1           MOV      R0,R8
   \   00000090   ........           _BLF     char16to8,??char16to8??rA
   \   00000094   0700C9E7           STRB     R0,[R9, +R7]
   2962                  scur++;
   \   00000098   0B90A0E1           MOV      R9,R11
   2963                }
   \                     ??ExtractAnswer_8:
   \   0000009C   01A08AE2           ADD      R10,R10,#+1
   \                     ??ExtractAnswer_3:
   \   000000A0   06005AE1           CMP      R10,R6
   \   000000A4   040059B1           CMPLT    R9,R4
   \   000000A8   160000AA           BGE      ??ExtractAnswer_9
   \   000000AC   8A0085E0           ADD      R0,R5,R10, LSL #+1
   \   000000B0   B280D0E1           LDRH     R8,[R0, #+2]
   \   000000B4   01B089E2           ADD      R11,R9,#+1
   \   000000B8   0A0058E3           CMP      R8,#+10
   \   000000BC   F1FFFF0A           BEQ      ??ExtractAnswer_6
   \   000000C0   E10C58E3           CMP      R8,#+57600
   \   000000C4   F0FFFFBA           BLT      ??ExtractAnswer_7
   \   000000C8   0800A0E1           MOV      R0,R8
   \   000000CC   ........           _BLF     FindSmileByUni,??FindSmileByUni??rA
   \   000000D0   000050E3           CMP      R0,#+0
   \   000000D4   ECFFFF0A           BEQ      ??ExtractAnswer_7
   \   000000D8   080090E5           LDR      R0,[R0, #+8]
   \   000000DC   000050E3           CMP      R0,#+0
   \   000000E0   EDFFFF0A           BEQ      ??ExtractAnswer_8
   \   000000E4   0C0080E2           ADD      R0,R0,#+12
   \                     ??ExtractAnswer_10:
   \   000000E8   ........           LDRB     R1,[R0], #+1
   \   000000EC   000051E3           CMP      R1,#+0
   \   000000F0   E9FFFF0A           BEQ      ??ExtractAnswer_8
   \   000000F4   040059E1           CMP      R9,R4
   \   000000F8   E7FFFFAA           BGE      ??ExtractAnswer_8
   \   000000FC   0710C9E7           STRB     R1,[R9, +R7]
   \   00000100   019089E2           ADD      R9,R9,#+1
   \   00000104   F7FFFFEA           B        ??ExtractAnswer_10
   2964              }
   2965              msg[scur]=0;
   \                     ??ExtractAnswer_9:
   \   00000108   0000A0E3           MOV      R0,#+0
   \   0000010C   0700C9E7           STRB     R0,[R9, +R7]
   2966            }
   2967            return msg;
   \                     ??ExtractAnswer_0:
   \   00000110   0700A0E1           MOV      R0,R7
   \   00000114   F08FBDE8           POP      {R4-R11,PC}      ;; return
   2968          }
   2969          

   \                                 In segment CODE, align 4, keep-with-next
   2970          CLIST *FindNextActiveContact(CLIST *t)
   2971          {
   2972            while(t=(CLIST *)(t->next))
   \                     FindNextActiveContact:
   \                     ??FindNextActiveContact_0:
   \   00000000   000090E5           LDR      R0,[R0, #+0]
   \   00000004   000050E3           CMP      R0,#+0
   \   00000008   0300000A           BEQ      ??FindNextActiveContact_1
   2973            {
   2974              if (t->isactive) return t;
   \   0000000C   701090E5           LDR      R1,[R0, #+112]
   \   00000010   000051E3           CMP      R1,#+0
   \   00000014   F9FFFF0A           BEQ      ??FindNextActiveContact_0
   \   00000018   1EFF2FE1           BX       LR
   2975            }
   2976            t=(CLIST *)(&cltop);
   \                     ??FindNextActiveContact_1:
   \   0000001C   ........           LDR      R0,??DataTable124  ;; contactlist_menuhdr + 588
   \   00000020   020000EA           B        ??FindNextActiveContact_2
   2977            while(t=(CLIST *)(t->next))
   2978            {
   2979              if (t->isactive) return t;
   \                     ??FindNextActiveContact_3:
   \   00000024   701090E5           LDR      R1,[R0, #+112]
   \   00000028   000051E3           CMP      R1,#+0
   \   0000002C   1EFF2F11           BXNE     LR
   2980            }
   \                     ??FindNextActiveContact_2:
   \   00000030   000090E5           LDR      R0,[R0, #+0]
   \   00000034   000050E3           CMP      R0,#+0
   \   00000038   F9FFFF1A           BNE      ??FindNextActiveContact_3
   2981            return NULL;
   \   0000003C   1EFF2FE1           BX       LR               ;; return
   2982          }
   2983          

   \                                 In segment CODE, align 4, keep-with-next
   2984          CLIST *FindPrevActiveContact(CLIST *t)
   2985          {
   2986            CLIST *cl;
   2987            CLIST *cl_active=NULL;
   2988            cl=(CLIST *)(&cltop);
   \                     FindPrevActiveContact:
   \   00000000   ........           LDR      R2,??DataTable124  ;; contactlist_menuhdr + 588
   \   00000004   0010A0E3           MOV      R1,#+0
   \   00000008   020000EA           B        ??FindPrevActiveContact_0
   2989          
   2990          
   2991            while(cl=cl->next)
   2992            {
   2993              if (cl==t)
   2994              {
   2995                if (cl_active==NULL) break;
   2996                else return (cl_active);
   2997              }
   2998              else
   2999              {
   3000                if (cl->isactive) cl_active=cl;
   \                     ??FindPrevActiveContact_1:
   \   0000000C   703092E5           LDR      R3,[R2, #+112]
   \   00000010   000053E3           CMP      R3,#+0
   \   00000014   0210A011           MOVNE    R1,R2
   3001              }
   \                     ??FindPrevActiveContact_0:
   \   00000018   002092E5           LDR      R2,[R2, #+0]
   \   0000001C   000052E3           CMP      R2,#+0
   \   00000020   0500000A           BEQ      ??FindPrevActiveContact_2
   \   00000024   000052E1           CMP      R2,R0
   \   00000028   F7FFFF1A           BNE      ??FindPrevActiveContact_1
   \   0000002C   000051E3           CMP      R1,#+0
   \   00000030   0100000A           BEQ      ??FindPrevActiveContact_2
   \                     ??FindPrevActiveContact_3:
   \   00000034   0100A0E1           MOV      R0,R1
   \   00000038   1EFF2FE1           BX       LR               ;; return
   3002            }
   3003            while(t)
   \                     ??FindPrevActiveContact_2:
   \   0000003C   000050E3           CMP      R0,#+0
   \   00000040   FBFFFF0A           BEQ      ??FindPrevActiveContact_3
   3004            {
   3005              if (t->isactive) cl_active=t;
   \   00000044   702090E5           LDR      R2,[R0, #+112]
   \   00000048   000052E3           CMP      R2,#+0
   \   0000004C   0010A011           MOVNE    R1,R0
   3006              t=t->next;
   \   00000050   000090E5           LDR      R0,[R0, #+0]
   \   00000054   F8FFFFEA           B        ??FindPrevActiveContact_2
   3007            }
   3008            return cl_active;
   3009          }
   3010          
   3011          

   \                                 In segment CODE, align 4, keep-with-next
   3012          void ed_options_handler(USR_MENU_ITEM *item)
   3013          {
   \                     ed_options_handler:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   3014            EDCHAT_STRUCT *ed_struct=item->user_pointer;
   3015            CLIST *t;
   3016            int i=item->cur_item;
   3017            if (item->type==0)
   \   00000004   ........           LDR      R5,??DataTable125  ;; contactlist_menuhdr
   \   00000008   2CD04DE2           SUB      SP,SP,#+44
   \   0000000C   0070A0E1           MOV      R7,R0
   \   00000010   0000D7E5           LDRB     R0,[R7, #+0]
   \   00000014   044097E5           LDR      R4,[R7, #+4]
   \   00000018   B860D7E1           LDRH     R6,[R7, #+8]
   \   0000001C   000050E3           CMP      R0,#+0
   \   00000020   1100001A           BNE      ??ed_options_handler_0
   3018            {
   3019              switch(i)
   \   00000024   0C0097E5           LDR      R0,[R7, #+12]
   \   00000028   ........           LDR      R1,??DataTable135  ;; lgpData
   \   0000002C   0620B0E1           MOVS     R2,R6
   \   00000030   0200000A           BEQ      ??ed_options_handler_1
   \   00000034   012056E2           SUBS     R2,R6,#+1
   \   00000038   0200000A           BEQ      ??ed_options_handler_2
   \   0000003C   030000EA           B        ??ed_options_handler_3
   3020              {
   3021              case 0:
   3022                ascii2ws(item->ws,lgpData[LGP_MnuEdNextAct]);
   \                     ??ed_options_handler_1:
   \   00000040   AC1091E5           LDR      R1,[R1, #+172]
   \   00000044   070000EA           B        ??ed_options_handler_4
   3023                break;
   3024              case 1:
   3025                ascii2ws(item->ws,lgpData[LGP_MnuEdPrevAct]);
   \                     ??ed_options_handler_2:
   \   00000048   B01091E5           LDR      R1,[R1, #+176]
   \   0000004C   050000EA           B        ??ed_options_handler_4
   3026                break;
   3027              default:
   3028                i-=2;
   3029                if (i<ed_struct->loaded_templates) ascii2ws(item->ws,templates_lines[i]);
   \                     ??ed_options_handler_3:
   \   00000050   101094E5           LDR      R1,[R4, #+16]
   \   00000054   026046E2           SUB      R6,R6,#+2
   \   00000058   010056E1           CMP      R6,R1
   \   0000005C   550000AA           BGE      ??ed_options_handler_5
   \   00000060   1C1295E5           LDR      R1,[R5, #+540]
   \   00000064   061191E7           LDR      R1,[R1, +R6, LSL #+2]
   \                     ??ed_options_handler_4:
   \   00000068   ........           _BLF     ascii2ws,??ascii2ws??rA
   3030                break;
   3031              }
   3032            }
   3033            if (item->type==1)
   \                     ??ed_options_handler_0:
   \   0000006C   0000D7E5           LDRB     R0,[R7, #+0]
   \   00000070   010050E3           CMP      R0,#+1
   \   00000074   4F00001A           BNE      ??ed_options_handler_5
   3034            {
   3035              switch(i)
   \   00000078   007094E5           LDR      R7,[R4, #+0]
   \   0000007C   0600B0E1           MOVS     R0,R6
   \   00000080   0200000A           BEQ      ??ed_options_handler_6
   \   00000084   010056E2           SUBS     R0,R6,#+1
   \   00000088   0C00000A           BEQ      ??ed_options_handler_7
   \   0000008C   0E0000EA           B        ??ed_options_handler_8
   3036              {
   3037              case 0:
   3038                t=FindNextActiveContact(ed_struct->ed_contact);
   \                     ??ed_options_handler_6:
   \   00000090   0700A0E1           MOV      R0,R7
   \   00000094   ........           BL       FindNextActiveContact
   \                     ??ed_options_handler_9:
   \   00000098   0040B0E1           MOVS     R4,R0
   3039                if (t && t!=ed_struct->ed_contact)
   \   0000009C   07005411           CMPNE    R4,R7
   \   000000A0   4400000A           BEQ      ??ed_options_handler_5
   3040                {
   3041                  GeneralFunc_flag1(edchat_id,1);
   \   000000A4   580295E5           LDR      R0,[R5, #+600]
   \   000000A8   0110A0E3           MOV      R1,#+1
   \   000000AC   3D0100EF           SWI      +317
   3042                  CreateEditChat(t);
   \   000000B0   0400A0E1           MOV      R0,R4
   \   000000B4   ........           BL       CreateEditChat
   \   000000B8   2CD08DE2           ADD      SP,SP,#+44
   \   000000BC   F080BDE8           POP      {R4-R7,PC}
   3043                }
   3044                break;
   3045              case 1:
   3046                t=FindPrevActiveContact(ed_struct->ed_contact);
   \                     ??ed_options_handler_7:
   \   000000C0   0700A0E1           MOV      R0,R7
   \   000000C4   ........           BL       FindPrevActiveContact
   \   000000C8   F2FFFFEA           B        ??ed_options_handler_9
   3047                if (t && t!=ed_struct->ed_contact)
   3048                {
   3049                  GeneralFunc_flag1(edchat_id,1);
   3050                  CreateEditChat(t);
   3051                }
   3052                break;
   3053              default:
   3054                i-=2;
   3055                if (i<ed_struct->loaded_templates)
   \                     ??ed_options_handler_8:
   \   000000CC   100094E5           LDR      R0,[R4, #+16]
   \   000000D0   026046E2           SUB      R6,R6,#+2
   \   000000D4   000056E1           CMP      R6,R0
   \   000000D8   360000AA           BGE      ??ed_options_handler_5
   3056                {
   3057          	EDITCONTROL ec;
   3058          	WSHDR *ed_ws;
   3059          	int c;
   3060          	char *p=templates_lines[i];
   \   000000DC   1C0295E5           LDR      R0,[R5, #+540]
   3061          	ExtractEditControl(ed_struct->ed_chatgui,ed_struct->ed_answer,&ec);
   \   000000E0   081094E5           LDR      R1,[R4, #+8]
   \   000000E4   065190E7           LDR      R5,[R0, +R6, LSL #+2]
   \   000000E8   040094E5           LDR      R0,[R4, #+4]
   \   000000EC   0D20A0E1           MOV      R2,SP
   \   000000F0   690100EF           SWI      +361
   3062          	ed_ws=AllocWS(ec.pWS->wsbody[0]+strlen(p));
   \   000000F4   0500A0E1           MOV      R0,R5
   \   000000F8   1B0000EF           SWI      +27
   \   000000FC   28109DE5           LDR      R1,[SP, #+40]
   \   00000100   001091E5           LDR      R1,[R1, #+0]
   \   00000104   B010D1E1           LDRH     R1,[R1, #+0]
   \   00000108   010080E0           ADD      R0,R0,R1
   \   0000010C   250100EF           SWI      +293
   3063          	wstrcpy(ed_ws,ec.pWS);
   \   00000110   28109DE5           LDR      R1,[SP, #+40]
   \   00000114   0060A0E1           MOV      R6,R0
   \   00000118   1F0100EF           SWI      +287
   3064                  if (EDIT_GetFocus(ed_struct->ed_chatgui)==ed_struct->ed_answer)
   \   0000011C   040094E5           LDR      R0,[R4, #+4]
   \   00000120   820100EF           SWI      +386
   \   00000124   081094E5           LDR      R1,[R4, #+8]
   \   00000128   010050E1           CMP      R0,R1
   \   0000012C   1800001A           BNE      ??ed_options_handler_10
   3065                  {
   3066                    int pos=EDIT_GetCursorPos(ed_struct->ed_chatgui);
   \   00000130   040094E5           LDR      R0,[R4, #+4]
   \   00000134   D30100EF           SWI      +467
   \   00000138   0070A0E1           MOV      R7,R0
   \   0000013C   050000EA           B        ??ed_options_handler_11
   3067                    while(c=*p++)
   3068                    {
   3069                      wsInsertChar(ed_ws,char8to16(c),pos++);
   \                     ??ed_options_handler_12:
   \   00000140   ........           _BLF     char8to16,??char8to16??rA
   \   00000144   0010A0E1           MOV      R1,R0
   \   00000148   0720A0E1           MOV      R2,R7
   \   0000014C   0600A0E1           MOV      R0,R6
   \   00000150   1D0000EF           SWI      +29
   \   00000154   017087E2           ADD      R7,R7,#+1
   3070                    }
   \                     ??ed_options_handler_11:
   \   00000158   ........           LDRB     R0,[R5], #+1
   \   0000015C   000050E3           CMP      R0,#+0
   \   00000160   F6FFFF1A           BNE      ??ed_options_handler_12
   3071                    EDIT_SetTextToEditControl(ed_struct->ed_chatgui,ed_struct->ed_answer,ed_ws);
   \   00000164   081094E5           LDR      R1,[R4, #+8]
   \   00000168   040094E5           LDR      R0,[R4, #+4]
   \   0000016C   0620A0E1           MOV      R2,R6
   \   00000170   DE0100EF           SWI      +478
   3072                    EDIT_SetCursorPos(ed_struct->ed_chatgui,pos);
   \   00000174   040094E5           LDR      R0,[R4, #+4]
   \   00000178   0710A0E1           MOV      R1,R7
   \   0000017C   D40100EF           SWI      +468
   \   00000180   0A0000EA           B        ??ed_options_handler_13
   3073                  }
   3074                  else
   3075                  {
   3076                    while(c=*p++)
   3077                    {
   3078                      wsAppendChar(ed_ws,char8to16(c));
   \                     ??ed_options_handler_14:
   \   00000184   ........           _BLF     char8to16,??char8to16??rA
   \   00000188   0010A0E1           MOV      R1,R0
   \   0000018C   0600A0E1           MOV      R0,R6
   \   00000190   1C0000EF           SWI      +28
   3079                    }
   \                     ??ed_options_handler_10:
   \   00000194   ........           LDRB     R0,[R5], #+1
   \   00000198   000050E3           CMP      R0,#+0
   \   0000019C   F8FFFF1A           BNE      ??ed_options_handler_14
   3080                    EDIT_SetTextToEditControl(ed_struct->ed_chatgui,ed_struct->ed_answer,ed_ws);
   \   000001A0   081094E5           LDR      R1,[R4, #+8]
   \   000001A4   040094E5           LDR      R0,[R4, #+4]
   \   000001A8   0620A0E1           MOV      R2,R6
   \   000001AC   DE0100EF           SWI      +478
   3081                  }
   3082          	FreeWS(ed_ws);
   \                     ??ed_options_handler_13:
   \   000001B0   0600A0E1           MOV      R0,R6
   \   000001B4   290100EF           SWI      +297
   3083                }
   3084                break;
   3085              }
   3086            }
   3087          }
   \                     ??ed_options_handler_5:
   \   000001B8   2CD08DE2           ADD      SP,SP,#+44       ;; stack cleaning
   \   000001BC   F080BDE8           POP      {R4-R7,PC}       ;; return
   3088          

   \                                 In segment CODE, align 4, keep-with-next
   3089          unsigned short * wstrstr(unsigned short *ws, char *str, int *wslen, int len)
   3090          {
   \                     wstrstr:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   \   00000004   0070A0E1           MOV      R7,R0
   \   00000008   0140A0E1           MOV      R4,R1
   \   0000000C   0250A0E1           MOV      R5,R2
   \   00000010   0360A0E1           MOV      R6,R3
   \   00000014   030000EA           B        ??wstrstr_0
   3091            char *s;
   3092            unsigned short *w;
   3093            int l;
   3094           
   3095            while(*wslen >= len)
   3096            {
   3097              s = str;
   3098              w = ws;
   3099              l = len;
   3100              for(; (char16to8(*w) == *s) && l; w++, s++, l--);     
   3101              if(!l) return ws;
   3102              ws++;
   3103              (*wslen)--;
   \                     ??wstrstr_1:
   \   00000018   000095E5           LDR      R0,[R5, #+0]
   \   0000001C   027087E2           ADD      R7,R7,#+2
   \   00000020   010040E2           SUB      R0,R0,#+1
   \   00000024   000085E5           STR      R0,[R5, #+0]
   \                     ??wstrstr_0:
   \   00000028   000095E5           LDR      R0,[R5, #+0]
   \   0000002C   060050E1           CMP      R0,R6
   \   00000030   0F0000BA           BLT      ??wstrstr_2
   \   00000034   0480A0E1           MOV      R8,R4
   \   00000038   0790A0E1           MOV      R9,R7
   \   0000003C   06A0A0E1           MOV      R10,R6
   \   00000040   000000EA           B        ??wstrstr_3
   \                     ??wstrstr_4:
   \   00000044   01A04AE2           SUB      R10,R10,#+1
   \                     ??wstrstr_3:
   \   00000048   ........           LDRH     R0,[R9], #+2
   \   0000004C   ........           _BLF     char16to8,??char16to8??rA
   \   00000050   ........           LDRB     R1,[R8], #+1
   \   00000054   010050E1           CMP      R0,R1
   \   00000058   0100001A           BNE      ??wstrstr_5
   \   0000005C   00005AE3           CMP      R10,#+0
   \   00000060   F7FFFF1A           BNE      ??wstrstr_4
   \                     ??wstrstr_5:
   \   00000064   00005AE3           CMP      R10,#+0
   \   00000068   EAFFFF1A           BNE      ??wstrstr_1
   \   0000006C   0700A0E1           MOV      R0,R7
   \   00000070   F087BDE8           POP      {R4-R10,PC}
   3104            }
   3105            return 0;
   \                     ??wstrstr_2:
   \   00000074   0000A0E3           MOV      R0,#+0
   \   00000078   F087BDE8           POP      {R4-R10,PC}      ;; return
   3106            
   3107          }
   3108          

   \                                 In segment CODE, align 4, keep-with-next
   3109          int IsUrl(WSHDR *ws, int pos, char *link)
   3110          {
   \                     IsUrl:
   \   00000000   F14F2DE9           PUSH     {R0,R4-R11,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0150A0E1           MOV      R5,R1
   3111            const char *valid = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789$-_.+!*'(),%;:@&=/?#абвгдеёжзийклмнопрстуфхцчшщъыьэюяАБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ~";
   3112          
   3113            int len = wstrlen(ws);
   3114            unsigned short *str = ws->wsbody+1, *tmp, *begin;
   3115            tmp = str;
   3116            
   3117            begin = str = wstrstr(str, "http://", &len, 7);
   \   0000000C   ........           LDR      R7,??DataTable128  ;; `?<Constant "abcdefghijklmnopqrstu...">`
   \   00000010   0260A0E1           MOV      R6,R2
   \   00000014   230100EF           SWI      +291
   \   00000018   00008DE5           STR      R0,[SP, #+0]
   \   0000001C   04009DE5           LDR      R0,[SP, #+4]
   \   00000020   0730A0E3           MOV      R3,#+7
   \   00000024   000090E5           LDR      R0,[R0, #+0]
   \   00000028   0D20A0E1           MOV      R2,SP
   \   0000002C   028080E2           ADD      R8,R0,#+2
   \   00000030   981087E2           ADD      R1,R7,#+152
   \   00000034   0800A0E1           MOV      R0,R8
   \   00000038   ........           BL       wstrstr
   \   0000003C   00B0A0E1           MOV      R11,R0
   \   00000040   0040A0E1           MOV      R4,R0
   \   00000044   A890A0E1           LSR      R9,R8,#+1
   \   00000048   02A045E2           SUB      R10,R5,#+2
   \   0000004C   060000EA           B        ??IsUrl_0
   3118          
   3119            while(str && (begin-tmp <= pos))
   3120            {
   3121              while(len && strchr(valid, char16to8(*str))) {str++; len--;}
   3122              if(str-tmp >= pos-2)
   3123              {
   3124                for(;begin < str; begin++, link++)
   3125                  *link = char16to8(*begin);
   3126                link[str-begin] = 0;
   3127                return 1;
   3128              }
   3129              begin = str = wstrstr(str, "http://", &len, 7);
   \                     ??IsUrl_1:
   \   00000050   0730A0E3           MOV      R3,#+7
   \   00000054   0D20A0E1           MOV      R2,SP
   \   00000058   981087E2           ADD      R1,R7,#+152
   \   0000005C   0B00A0E1           MOV      R0,R11
   \   00000060   ........           BL       wstrstr
   \   00000064   00B0A0E1           MOV      R11,R0
   \   00000068   0040A0E1           MOV      R4,R0
   \                     ??IsUrl_0:
   \   0000006C   00005BE3           CMP      R11,#+0
   \   00000070   0200000A           BEQ      ??IsUrl_2
   \   00000074   A40069E0           RSB      R0,R9,R4, LSR #+1
   \   00000078   000055E1           CMP      R5,R0
   \   0000007C   0B0000AA           BGE      ??IsUrl_3
   3130            }
   3131          
   3132            len = wstrlen(ws);
   \                     ??IsUrl_2:
   \   00000080   04009DE5           LDR      R0,[SP, #+4]
   \   00000084   230100EF           SWI      +291
   \   00000088   00008DE5           STR      R0,[SP, #+0]
   3133            begin = str = wstrstr(tmp, "www.", &len, 4);
   \   0000008C   0430A0E3           MOV      R3,#+4
   \   00000090   0D20A0E1           MOV      R2,SP
   \   00000094   A01087E2           ADD      R1,R7,#+160
   \   00000098   0800A0E1           MOV      R0,R8
   \   0000009C   200000EA           B        ??IsUrl_4
   \                     ??IsUrl_5:
   \   000000A0   00109DE5           LDR      R1,[SP, #+0]
   \   000000A4   02B08BE2           ADD      R11,R11,#+2
   \   000000A8   011041E2           SUB      R1,R1,#+1
   \   000000AC   00108DE5           STR      R1,[SP, #+0]
   \                     ??IsUrl_3:
   \   000000B0   00009DE5           LDR      R0,[SP, #+0]
   \   000000B4   000050E3           CMP      R0,#+0
   \   000000B8   0600000A           BEQ      ??IsUrl_6
   \   000000BC   B000DBE1           LDRH     R0,[R11, #+0]
   \   000000C0   ........           _BLF     char16to8,??char16to8??rA
   \   000000C4   0010A0E1           MOV      R1,R0
   \   000000C8   0700A0E1           MOV      R0,R7
   \   000000CC   180000EF           SWI      +24
   \   000000D0   000050E3           CMP      R0,#+0
   \   000000D4   F1FFFF1A           BNE      ??IsUrl_5
   \                     ??IsUrl_6:
   \   000000D8   AB0069E0           RSB      R0,R9,R11, LSR #+1
   \   000000DC   0A0050E1           CMP      R0,R10
   \   000000E0   DAFFFFBA           BLT      ??IsUrl_1
   \                     ??IsUrl_7:
   \   000000E4   0B0054E1           CMP      R4,R11
   \   000000E8   0300002A           BCS      ??IsUrl_8
   \   000000EC   ........           LDRH     R0,[R4], #+2
   \   000000F0   ........           _BLF     char16to8,??char16to8??rA
   \   000000F4   ........           STRB     R0,[R6], #+1
   \   000000F8   F9FFFFEA           B        ??IsUrl_7
   \                     ??IsUrl_8:
   \   000000FC   AB00A0E1           LSR      R0,R11,#+1
   \   00000100   A40040E0           SUB      R0,R0,R4, LSR #+1
   \   00000104   0010A0E3           MOV      R1,#+0
   \   00000108   0610C0E7           STRB     R1,[R0, +R6]
   \   0000010C   0100A0E3           MOV      R0,#+1
   \   00000110   F68FBDE8           POP      {R1,R2,R4-R11,PC}
   3134            while(str && (begin-tmp <= pos))
   3135            {
   3136              while(len && strchr(valid, char16to8(*str))) {str++; len--;}
   3137              if(str-tmp >= pos-2)
   3138              {
   3139                for(;begin < str; begin++, link++)
   3140                  *link = char16to8(*begin);
   3141                link[str-begin] = 0;
   3142                return 1;
   3143              }
   3144              begin = str = wstrstr(str, "www.", &len, 4);
   \                     ??IsUrl_9:
   \   00000114   0430A0E3           MOV      R3,#+4
   \   00000118   0D20A0E1           MOV      R2,SP
   \   0000011C   A01087E2           ADD      R1,R7,#+160
   \   00000120   0B00A0E1           MOV      R0,R11
   \                     ??IsUrl_4:
   \   00000124   ........           BL       wstrstr
   \   00000128   00B0A0E1           MOV      R11,R0
   \   0000012C   0040A0E1           MOV      R4,R0
   \   00000130   00005BE3           CMP      R11,#+0
   \   00000134   0200000A           BEQ      ??IsUrl_10
   \   00000138   A40069E0           RSB      R0,R9,R4, LSR #+1
   \   0000013C   000055E1           CMP      R5,R0
   \   00000140   050000AA           BGE      ??IsUrl_11
   3145            }
   3146            return 0;
   \                     ??IsUrl_10:
   \   00000144   0000A0E3           MOV      R0,#+0
   \   00000148   F68FBDE8           POP      {R1,R2,R4-R11,PC}  ;; return
   \                     ??IsUrl_12:
   \   0000014C   00109DE5           LDR      R1,[SP, #+0]
   \   00000150   02B08BE2           ADD      R11,R11,#+2
   \   00000154   011041E2           SUB      R1,R1,#+1
   \   00000158   00108DE5           STR      R1,[SP, #+0]
   \                     ??IsUrl_11:
   \   0000015C   00009DE5           LDR      R0,[SP, #+0]
   \   00000160   000050E3           CMP      R0,#+0
   \   00000164   0600000A           BEQ      ??IsUrl_13
   \   00000168   B000DBE1           LDRH     R0,[R11, #+0]
   \   0000016C   ........           _BLF     char16to8,??char16to8??rA
   \   00000170   0010A0E1           MOV      R1,R0
   \   00000174   0700A0E1           MOV      R0,R7
   \   00000178   180000EF           SWI      +24
   \   0000017C   000050E3           CMP      R0,#+0
   \   00000180   F1FFFF1A           BNE      ??IsUrl_12
   \                     ??IsUrl_13:
   \   00000184   AB0069E0           RSB      R0,R9,R11, LSR #+1
   \   00000188   0A0050E1           CMP      R0,R10
   \   0000018C   E0FFFFBA           BLT      ??IsUrl_9
   \                     ??IsUrl_14:
   \   00000190   0B0054E1           CMP      R4,R11
   \   00000194   D8FFFF2A           BCS      ??IsUrl_8
   \   00000198   ........           LDRH     R0,[R4], #+2
   \   0000019C   ........           _BLF     char16to8,??char16to8??rA
   \   000001A0   ........           STRB     R0,[R6], #+1
   \   000001A4   F9FFFFEA           B        ??IsUrl_14
   3147          }
   3148          
   3149          #define UTF16_DIS_UNDERLINE (0xE002)
   3150          #define UTF16_ENA_UNDERLINE (0xE001)
   3151          

   \                                 In segment CODE, align 4, keep-with-next
   3152          void ParseAnswer(WSHDR *ws, const char *s)
   3153          {
   \                     ParseAnswer:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   3154            const char *valid = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789$-_.+!*'(),%;:@&=/?абвгдеёжзийклмнопрстуфхцчшщъыьэюяАБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ";
   3155            S_SMILES *t;
   3156            S_SMILES *t_root=(S_SMILES *)s_top;
   \   00000008   10029FE5           LDR      R0,??ParseAnswer_0  ;; s_top
   \   0000000C   04D04DE2           SUB      SP,SP,#+4
   \   00000010   006090E5           LDR      R6,[R0, #+0]
   \   00000014   0150A0E1           MOV      R5,R1
   3157            STXT_SMILES *st;
   3158            unsigned int wchar;
   3159            unsigned int ulb=s[0]+(s[1]<<8)+(s[2]<<16)+(s[3]<<24);
   \   00000018   0000D5E5           LDRB     R0,[R5, #+0]
   \   0000001C   0110D5E5           LDRB     R1,[R5, #+1]
   \   00000020   010480E0           ADD      R0,R0,R1, LSL #+8
   \   00000024   0210D5E5           LDRB     R1,[R5, #+2]
   \   00000028   010880E0           ADD      R0,R0,R1, LSL #+16
   \   0000002C   0310D5E5           LDRB     R1,[R5, #+3]
   \   00000030   018C80E0           ADD      R8,R0,R1, LSL #+24
   3160            CutWSTR(ws,0);
   \   00000034   0010A0E3           MOV      R1,#+0
   \   00000038   0400A0E1           MOV      R0,R4
   \   0000003C   260100EF           SWI      +294
   \   00000040   160000EA           B        ??ParseAnswer_1
   3161            int i;
   3162            while(wchar=*s)
   3163            {
   3164              if(s==strstr(s, "http://") || s == strstr(s, "www."))
   3165              {
   3166                wsAppendChar(ws,UTF16_ENA_UNDERLINE);
   3167                while(*s && strchr(valid, *s))
   3168                {
   3169                  wchar=char8to16(*s);
   \                     ??ParseAnswer_2:
   \   00000044   ........           LDRB     R0,[R5], #+1
   \   00000048   ........           _BLF     char8to16,??char8to16??rA
   3170                  wsAppendChar(ws,wchar);
   \   0000004C   0010A0E1           MOV      R1,R0
   \                     ??ParseAnswer_3:
   \   00000050   0400A0E1           MOV      R0,R4
   \   00000054   1C0000EF           SWI      +28
   3171                  s++;       
   3172                }
   \   00000058   0010D5E5           LDRB     R1,[R5, #+0]
   \   0000005C   000051E3           CMP      R1,#+0
   \   00000060   0300000A           BEQ      ??ParseAnswer_4
   \   00000064   A80089E2           ADD      R0,R9,#+168
   \   00000068   180000EF           SWI      +24
   \   0000006C   000050E3           CMP      R0,#+0
   \   00000070   F3FFFF1A           BNE      ??ParseAnswer_2
   3173                wsAppendChar(ws,UTF16_DIS_UNDERLINE);
   \                     ??ParseAnswer_4:
   \   00000074   0210A0E3           MOV      R1,#+2
   \   00000078   E01C81E3           ORR      R1,R1,#0xE000
   \   0000007C   0400A0E1           MOV      R0,R4
   \   00000080   1C0000EF           SWI      +28
   3174                ulb=s[0]+(s[1]<<8)+(s[2]<<16)+(s[3]<<24);
   \   00000084   0000D5E5           LDRB     R0,[R5, #+0]
   \   00000088   0110D5E5           LDRB     R1,[R5, #+1]
   \   0000008C   010480E0           ADD      R0,R0,R1, LSL #+8
   \   00000090   0210D5E5           LDRB     R1,[R5, #+2]
   \   00000094   010880E0           ADD      R0,R0,R1, LSL #+16
   \   00000098   0310D5E5           LDRB     R1,[R5, #+3]
   \   0000009C   018C80E0           ADD      R8,R0,R1, LSL #+24
   3175                continue;
   \                     ??ParseAnswer_1:
   \   000000A0   0070D5E5           LDRB     R7,[R5, #+0]
   \   000000A4   000057E3           CMP      R7,#+0
   \   000000A8   4F00000A           BEQ      ??ParseAnswer_5
   \   000000AC   ........           LDR      R9,??DataTable128  ;; `?<Constant "abcdefghijklmnopqrstu...">`
   \   000000B0   0500A0E1           MOV      R0,R5
   \   000000B4   981089E2           ADD      R1,R9,#+152
   \   000000B8   180100EF           SWI      +280
   \   000000BC   000055E1           CMP      R5,R0
   \   000000C0   0400000A           BEQ      ??ParseAnswer_6
   \   000000C4   A01089E2           ADD      R1,R9,#+160
   \   000000C8   0500A0E1           MOV      R0,R5
   \   000000CC   180100EF           SWI      +280
   \   000000D0   000055E1           CMP      R5,R0
   \   000000D4   0200001A           BNE      ??ParseAnswer_7
   \                     ??ParseAnswer_6:
   \   000000D8   0110A0E3           MOV      R1,#+1
   \   000000DC   E01C81E3           ORR      R1,R1,#0xE000
   \   000000E0   DAFFFFEA           B        ??ParseAnswer_3
   3176              }
   3177              
   3178              t=t_root;
   \                     ??ParseAnswer_7:
   \   000000E4   0690A0E1           MOV      R9,R6
   \   000000E8   230000EA           B        ??ParseAnswer_8
   3179              while(t)
   3180              {
   3181                st=t->lines;
   3182                while(st)
   3183                {
   3184          	if ((ulb&st->mask)==st->key)
   \                     ??ParseAnswer_9:
   \   000000EC   0B00DAE5           LDRB     R0,[R10, #+11]
   \   000000F0   0A10DAE5           LDRB     R1,[R10, #+10]
   \   000000F4   0620DAE5           LDRB     R2,[R10, #+6]
   \   000000F8   000481E1           ORR      R0,R1,R0, LSL #+8
   \   000000FC   0910DAE5           LDRB     R1,[R10, #+9]
   \   00000100   000481E1           ORR      R0,R1,R0, LSL #+8
   \   00000104   0810DAE5           LDRB     R1,[R10, #+8]
   \   00000108   000481E1           ORR      R0,R1,R0, LSL #+8
   \   0000010C   0710DAE5           LDRB     R1,[R10, #+7]
   \   00000110   080000E0           AND      R0,R0,R8
   \   00000114   011482E1           ORR      R1,R2,R1, LSL #+8
   \   00000118   0520DAE5           LDRB     R2,[R10, #+5]
   \   0000011C   011482E1           ORR      R1,R2,R1, LSL #+8
   \   00000120   0420DAE5           LDRB     R2,[R10, #+4]
   \   00000124   011482E1           ORR      R1,R2,R1, LSL #+8
   \   00000128   010050E1           CMP      R0,R1
   \   0000012C   0700001A           BNE      ??ParseAnswer_10
   3185          	{
   3186          	  if (!strncmp(s,st->text,strlen(st->text))) goto L1;
   \   00000130   0C008AE2           ADD      R0,R10,#+12
   \   00000134   1B0000EF           SWI      +27
   \   00000138   0020A0E1           MOV      R2,R0
   \   0000013C   0C108AE2           ADD      R1,R10,#+12
   \   00000140   0500A0E1           MOV      R0,R5
   \   00000144   150100EF           SWI      +277
   \   00000148   000050E3           CMP      R0,#+0
   \   0000014C   1500000A           BEQ      ??ParseAnswer_11
   3187          	}
   3188          	st=st->next;
   \                     ??ParseAnswer_10:
   \   00000150   0000A0E3           MOV      R0,#+0
   \                     ??ParseAnswer_12:
   \   00000154   0A20D0E7           LDRB     R2,[R0, +R10]
   \   00000158   0D10A0E1           MOV      R1,SP
   \   0000015C   0120C0E7           STRB     R2,[R0, +R1]
   \   00000160   010080E2           ADD      R0,R0,#+1
   \   00000164   040050E3           CMP      R0,#+4
   \   00000168   F9FFFFBA           BLT      ??ParseAnswer_12
   \   0000016C   00A09DE5           LDR      R10,[SP, #+0]
   3189                }
   \                     ??ParseAnswer_13:
   \   00000170   00005AE3           CMP      R10,#+0
   \   00000174   DCFFFF1A           BNE      ??ParseAnswer_9
   3190                t=t->next;
   \   00000178   009099E5           LDR      R9,[R9, #+0]
   \                     ??ParseAnswer_8:
   \   0000017C   000059E3           CMP      R9,#+0
   \   00000180   08A09915           LDRNE    R10,[R9, #+8]
   \   00000184   F9FFFF1A           BNE      ??ParseAnswer_13
   3191              }
   3192            L1:
   3193              if (t)
   3194              {
   3195                wchar=t->uni_smile;
   3196                s+=strlen(st->text);
   3197                ulb=s[0]+(s[1]<<8)+(s[2]<<16)+(s[3]<<24);
   3198              }
   3199              else
   3200              {
   3201                wchar=char8to16(wchar);
   \   00000188   0700A0E1           MOV      R0,R7
   \   0000018C   ........           _BLF     char8to16,??char8to16??rA
   \   00000190   0070A0E1           MOV      R7,R0
   3202                s++;
   3203                ulb>>=8;
   3204                ulb+=s[3]<<24;
   \   00000194   015085E2           ADD      R5,R5,#+1
   \   00000198   0300D5E5           LDRB     R0,[R5, #+3]
   \   0000019C   000CA0E1           LSL      R0,R0,#+24
   \   000001A0   288480E0           ADD      R8,R0,R8, LSR #+8
   \   000001A4   0A0000EA           B        ??ParseAnswer_14
   3205              }
   \                     ??ParseAnswer_11:
   \   000001A8   047099E5           LDR      R7,[R9, #+4]
   \   000001AC   0C008AE2           ADD      R0,R10,#+12
   \   000001B0   1B0000EF           SWI      +27
   \   000001B4   055080E0           ADD      R5,R0,R5
   \   000001B8   0000D5E5           LDRB     R0,[R5, #+0]
   \   000001BC   0110D5E5           LDRB     R1,[R5, #+1]
   \   000001C0   010480E0           ADD      R0,R0,R1, LSL #+8
   \   000001C4   0210D5E5           LDRB     R1,[R5, #+2]
   \   000001C8   010880E0           ADD      R0,R0,R1, LSL #+16
   \   000001CC   0310D5E5           LDRB     R1,[R5, #+3]
   \   000001D0   018C80E0           ADD      R8,R0,R1, LSL #+24
   3206              if (wchar!=10) wsAppendChar(ws,wchar);
   \                     ??ParseAnswer_14:
   \   000001D4   0A0057E3           CMP      R7,#+10
   \   000001D8   B0FFFF0A           BEQ      ??ParseAnswer_1
   \   000001DC   0710A0E1           MOV      R1,R7
   \   000001E0   0400A0E1           MOV      R0,R4
   \   000001E4   1C0000EF           SWI      +28
   \   000001E8   ACFFFFEA           B        ??ParseAnswer_1
   3207            }
   3208            i=ws->wsbody[0];
   \                     ??ParseAnswer_5:
   \   000001EC   000094E5           LDR      R0,[R4, #+0]
   \   000001F0   B010D0E1           LDRH     R1,[R0, #+0]
   \   000001F4   000000EA           B        ??ParseAnswer_15
   3209            while(i>1)
   3210            {
   3211              if (ws->wsbody[i--]!=13) break;
   3212              ws->wsbody[0]=i;
   \                     ??ParseAnswer_16:
   \   000001F8   B010C0E1           STRH     R1,[R0, #+0]
   \                     ??ParseAnswer_15:
   \   000001FC   020051E3           CMP      R1,#+2
   \   00000200   F187BDB8           POPLT    {R0,R4-R10,PC}
   \   00000204   0120A0E1           MOV      R2,R1
   \   00000208   011042E2           SUB      R1,R2,#+1
   \   0000020C   822080E0           ADD      R2,R0,R2, LSL #+1
   \   00000210   B020D2E1           LDRH     R2,[R2, #+0]
   \   00000214   0D0052E3           CMP      R2,#+13
   \   00000218   F6FFFF0A           BEQ      ??ParseAnswer_16
   3213            }
   3214          }
   \   0000021C   F187BDE8           POP      {R0,R4-R10,PC}   ;; return
   \                     ??ParseAnswer_0:
   \   00000220   ........           DC32     s_top
   3215          

   \                                 In segment CODE, align 4, keep-with-next
   3216          void SaveAnswer(CLIST *cl, WSHDR *ws)
   3217          {
   \                     SaveAnswer:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0100A0E1           MOV      R0,R1
   3218            char *p=ExtractAnswer(ws);
   \   0000000C   ........           BL       ExtractAnswer
   \   00000010   0050A0E1           MOV      R5,R0
   3219            mfree(cl->answer);
   \   00000014   680094E5           LDR      R0,[R4, #+104]
   \   00000018   150000EF           SWI      +21
   3220            cl->answer=p;
   \   0000001C   685084E5           STR      R5,[R4, #+104]
   3221          }
   \   00000020   3080BDE8           POP      {R4,R5,PC}       ;; return
   3222          
   3223          

   \                                 In segment CODE, align 4, keep-with-next
   3224          int GetTempName(void)
   3225          {
   \                     GetTempName:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   10D04DE2           SUB      SP,SP,#+16
   3226            static const int DMonth[]={0,31,59,90,120,151,181,212,243,273,304,334,365};
   3227            unsigned long iday;
   3228            TTime tt;
   3229            TDate dd;
   3230            GetDateTime(&dd,&tt);
   \   00000008   08108DE2           ADD      R1,SP,#+8
   \   0000000C   0D00A0E1           MOV      R0,SP
   \   00000010   B40000EF           SWI      +180
   3231            dd.year=dd.year%100;
   \   00000014   00109DE5           LDR      R1,[SP, #+0]
   \   00000018   84209FE5           LDR      R2,??GetTempName_0  ;; 0x51eb851f
   \   0000001C   92318CE0           UMULL    R3,R12,R2,R1
   \   00000020   6430A0E3           MOV      R3,#+100
   \   00000024   ACC2A0E1           LSR      R12,R12,#+5
   \   00000028   930C0CE0           MUL      R12,R3,R12
   3232            iday=365*dd.year+DMonth[dd.month-1]+(dd.day - 1);
   3233            iday=iday+(dd.year>>2);
   \   0000002C   6D20A0E3           MOV      R2,#+109
   \   00000030   0CC041E0           SUB      R12,R1,R12
   \   00000034   00C08DE5           STR      R12,[SP, #+0]
   \   00000038   0400DDE5           LDRB     R0,[SP, #+4]
   \   0000003C   0C10A0E1           MOV      R1,R12
   \   00000040   60C09FE5           LDR      R12,??GetTempName_0+0x4  ;; ??DMonth
   \   00000044   402F82E3           ORR      R2,R2,#0x100
   \   00000048   00318CE0           ADD      R3,R12,R0, LSL #+2
   \   0000004C   043013E5           LDR      R3,[R3, #-4]
   3234            if (dd.month>2||(dd.year&3)>0)
   \   00000050   030050E3           CMP      R0,#+3
   \   00000054   923121E0           MLA      R1,R2,R1,R3
   \   00000058   0520DDE5           LDRB     R2,[SP, #+5]
   \   0000005C   012042E2           SUB      R2,R2,#+1
   \   00000060   011082E0           ADD      R1,R2,R1
   \   00000064   00209DE5           LDR      R2,[SP, #+0]
   \   00000068   221181E0           ADD      R1,R1,R2, LSR #+2
   \   0000006C   0100002A           BCS      ??GetTempName_1
   \   00000070   030012E3           TST      R2,#0x3
   \   00000074   0000000A           BEQ      ??GetTempName_2
   3235              iday++;
   \                     ??GetTempName_1:
   \   00000078   011081E2           ADD      R1,R1,#+1
   3236            iday=(tt.sec+60*(tt.min+60*(tt.hour+24* iday)));
   3237            return iday;
   \                     ??GetTempName_2:
   \   0000007C   0830DDE5           LDRB     R3,[SP, #+8]
   \   00000080   0920DDE5           LDRB     R2,[SP, #+9]
   \   00000084   0A00DDE5           LDRB     R0,[SP, #+10]
   \   00000088   18C0A0E3           MOV      R12,#+24
   \   0000008C   9C3121E0           MLA      R1,R12,R1,R3
   \   00000090   3C30A0E3           MOV      R3,#+60
   \   00000094   932121E0           MLA      R1,R3,R1,R2
   \   00000098   10D08DE2           ADD      SP,SP,#+16
   \   0000009C   930120E0           MLA      R0,R3,R1,R0
   \   000000A0   0080BDE8           POP      {PC}             ;; return
   \                     ??GetTempName_0:
   \   000000A4   1F85EB51           DC32     0x51eb851f
   \   000000A8   ........           DC32     ??DMonth
   3238          }

   \                                 In segment DATA_C, align 4, align-sorted
   \                     ??DMonth:
   \   00000000   000000001F00       DC32 0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334, 365
   \              00003B000000
   \              5A0000007800
   \              000097000000
   \              B5000000D400
   \              0000F3000000
   \              110100003001
   \              00004E010000
   \              6D010000    
   3239          
   3240          

   \                                 In segment CODE, align 4, keep-with-next
   3241          int edchat_onkey(GUI *data, GUI_MSG *msg)
   3242          {
   \                     edchat_onkey:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   3243            //-1 - do redraw
   3244            GBS_DelTimer(&tmr_illumination);
   \   00000004   ........           LDR      R6,??DataTable136  ;; contactlist_menuhdr
   \   00000008   6DDF4DE2           SUB      SP,SP,#+436
   \   0000000C   0040A0E1           MOV      R4,R0
   \   00000010   0170A0E1           MOV      R7,R1
   \   00000014   D800A0E3           MOV      R0,#+216
   \   00000018   400E80E3           ORR      R0,R0,#0x400
   \   0000001C   060080E0           ADD      R0,R0,R6
   \   00000020   8C0100EF           SWI      +396
   3245            CLIST *t;
   3246            TPKT *p;
   3247            EDITCONTROL ec;
   3248            int len, f;
   3249            unsigned err;
   3250            char *s;
   3251            int l=msg->gbsmsg->submess;
   \   00000024   040097E5           LDR      R0,[R7, #+4]
   \   00000028   089090E5           LDR      R9,[R0, #+8]
   3252            EDCHAT_STRUCT *ed_struct=EDIT_GetUserPointer(data);
   \   0000002C   0400A0E1           MOV      R0,R4
   \   00000030   DF0100EF           SWI      +479
   \   00000034   0050A0E1           MOV      R5,R0
   3253          //  WSHDR *ews;
   3254            char fn[256];
   3255          
   3256            if (msg->keys==0xFFF)
   \   00000038   F200D7E1           LDRSH    R0,[R7, #+2]
   \   0000003C   FF10A0E3           MOV      R1,#+255
   \   00000040   F01E81E3           ORR      R1,R1,#0xF00
   \   00000044   010050E1           CMP      R0,R1
   \   00000048   0200001A           BNE      ??edchat_onkey_0
   3257            {
   3258              void ec_menu(EDCHAT_STRUCT *);
   3259              ec_menu(ed_struct);
   \   0000004C   0500A0E1           MOV      R0,R5
   \   00000050   ........           BL       ec_menu
   3260              return(-1);
   \                     ??edchat_onkey_1:
   \   00000054   E30000EA           B        ??edchat_onkey_2
   3261            }
   3262            if (msg->keys==0xFF0)  return (1);
   \                     ??edchat_onkey_0:
   \   00000058   FF0E50E3           CMP      R0,#+4080
   \   0000005C   0100001A           BNE      ??edchat_onkey_3
   \   00000060   0100A0E3           MOV      R0,#+1
   \   00000064   E00000EA           B        ??edchat_onkey_4
   3263            if (msg->gbsmsg->msg==LONG_PRESS)
   \                     ??edchat_onkey_3:
   \   00000068   040097E5           LDR      R0,[R7, #+4]
   \   0000006C   9510A0E3           MOV      R1,#+149
   \   00000070   040090E5           LDR      R0,[R0, #+4]
   \   00000074   401F81E3           ORR      R1,R1,#0x100
   \   00000078   010050E1           CMP      R0,R1
   3264            {
   3265              if (l==RIGHT_BUTTON)
   \   0000007C   3E005903           CMPEQ    R9,#+62
   \   00000080   1800001A           BNE      ??edchat_onkey_5
   3266              {
   3267                if (EDIT_GetFocus(data)==ed_struct->ed_answer)
   \   00000084   0400A0E1           MOV      R0,R4
   \   00000088   820100EF           SWI      +386
   \   0000008C   081095E5           LDR      R1,[R5, #+8]
   \   00000090   010050E1           CMP      R0,R1
   \   00000094   1300001A           BNE      ??edchat_onkey_5
   3268                {
   3269          	ExtractEditControl(data,ed_struct->ed_answer,&ec);
   \   00000098   08208DE2           ADD      R2,SP,#+8
   \   0000009C   0400A0E1           MOV      R0,R4
   \   000000A0   690100EF           SWI      +361
   3270          	if (ec.pWS->wsbody[0]==(EDIT_GetCursorPos(data)-1))
   \   000000A4   0400A0E1           MOV      R0,R4
   \   000000A8   D30100EF           SWI      +467
   \   000000AC   30109DE5           LDR      R1,[SP, #+48]
   \   000000B0   010040E2           SUB      R0,R0,#+1
   \   000000B4   001091E5           LDR      R1,[R1, #+0]
   \   000000B8   B010D1E1           LDRH     R1,[R1, #+0]
   \   000000BC   000051E1           CMP      R1,R0
   \   000000C0   0800001A           BNE      ??edchat_onkey_5
   3271          	{
   3272          	  t=FindNextActiveContact(ed_struct->ed_contact);
   \   000000C4   00A095E5           LDR      R10,[R5, #+0]
   \   000000C8   0A00A0E1           MOV      R0,R10
   \   000000CC   ........           BL       FindNextActiveContact
   \   000000D0   0080B0E1           MOVS     R8,R0
   3273          	  if (t && t!=ed_struct->ed_contact)
   \   000000D4   0A005011           CMPNE    R0,R10
   \   000000D8   0200000A           BEQ      ??edchat_onkey_5
   3274          	  {
   3275          	    CreateEditChat(t);
   \   000000DC   ........           BL       CreateEditChat
   3276          	    return(1);
   \   000000E0   0100A0E3           MOV      R0,#+1
   \   000000E4   C00000EA           B        ??edchat_onkey_4
   3277          	  }
   3278          	}
   3279                }
   3280              }
   3281            }
   3282            if (msg->gbsmsg->msg==KEY_DOWN)
   \                     ??edchat_onkey_5:
   \   000000E8   040097E5           LDR      R0,[R7, #+4]
   \   000000EC   9310A0E3           MOV      R1,#+147
   \   000000F0   040090E5           LDR      R0,[R0, #+4]
   \   000000F4   401F81E3           ORR      R1,R1,#0x100
   \   000000F8   010050E1           CMP      R0,R1
   \   000000FC   0A00001A           BNE      ??edchat_onkey_6
   3283            {
   3284              if ((l>='0')&&(l<='9'))
   \   00000100   300059E3           CMP      R9,#+48
   \   00000104   0B0000BA           BLT      ??edchat_onkey_7
   \   00000108   3A0059E3           CMP      R9,#+58
   \   0000010C   060000AA           BGE      ??edchat_onkey_6
   3285              {
   3286                if (EDIT_GetFocus(data)!=ed_struct->ed_answer)
   \   00000110   0400A0E1           MOV      R0,R4
   \   00000114   820100EF           SWI      +386
   \   00000118   081095E5           LDR      R1,[R5, #+8]
   \   0000011C   010050E1           CMP      R0,R1
   \   00000120   0100000A           BEQ      ??edchat_onkey_6
   3287          	EDIT_SetFocus(data,ed_struct->ed_answer);
   \   00000124   0400A0E1           MOV      R0,R4
   \   00000128   9B0100EF           SWI      +411
   3288              }
   3289              if (l==GREEN_BUTTON)
   3290              {
   3291                if (connect_state==3)
   3292                {
   3293          	if ((t=ed_struct->ed_contact))
   3294          	{
   3295                    ExtractEditControl(data,ed_struct->ed_answer,&ec);
   3296                    SaveAnswer(t,ec.pWS);
   3297          	  if ((s=t->answer))
   3298          	  {
   3299          	    if ((len=strlen(s)))
   3300          	    {
   3301          	      t->isactive=ACTIVE_TIME;
   3302          	      p=malloc(sizeof(PKT)+len+1);
   3303          	      p->pkt.uin=t->uin;
   3304          	      p->pkt.type=T_SENDMSG;
   3305          	      p->pkt.data_len=len;
   3306          	      strcpy(p->data,s);
   3307          	      AddStringToLog(t,0x01,p->data,I_str,(++SENDMSGCOUNT)&0x7FFF); //Номер сообщения
   3308          	      SUBPROC((void *)SendAnswer,0,p);
   3309          	      mfree(t->answer);
   3310          	      t->answer=NULL;
   3311          	      //        request_remake_edchat=1;
   3312          	      EDIT_SetFocus(data,ed_struct->ed_answer);
   3313          	      CutWSTR(ews,0);
   3314          	      EDIT_SetTextToFocused(data,ews);
   3315          	      AddMsgToChat(data);
   3316          	      RecountMenu(t, 1);
   3317          	      return(-1);
   3318          	    }
   3319          	  }
   3320          	}
   3321                }
   3322              }
   3323              if (l==ENTER_BUTTON)
   3324              {
   3325          
   3326                if (!EDIT_IsMarkModeActive(data))  // Только если не выделение
   3327                {
   3328                  int pos, len;
   3329                  char *link;
   3330                  ExtractEditControl(ed_struct->ed_chatgui,EDIT_GetFocus(ed_struct->ed_chatgui),&ec);
   3331                  wstrcpy(ews,ec.pWS);
   3332                  pos = EDIT_GetCursorPos(data);
   3333                  len = wstrlen(ews);
   3334                  
   3335                  link = malloc(len+1);
   3336                          
   3337                  if(IsUrl(ews, pos, link))
   3338                  {
   3339                    char templates_path[128];
   3340                    zeromem(templates_path,128);
   3341                    strcpy(templates_path,TEMPLATES_PATH);
   3342                    const char _slash[]="\\";
   3343                    if (templates_path[strlen(templates_path)-1]!='\\') strcat(templates_path,_slash);
   3344          
   3345                    snprintf(fn, 255, "%stmp%u.url", templates_path, GetTempName);
   3346                    if ((f=fopen(fn,A_WriteOnly+A_BIN+A_Create+A_Truncate,P_WRITE,&err))!=-1)
   3347                    {
   3348                      fwrite(f,link,strlen(link),&err);
   3349                      fclose(f,&err);
   3350                      str_2ws(ews,fn,256);
   3351                      ExecuteFile(ews,0,0);            
   3352                      unlink(fn, &err);
   3353                    }          
   3354                    
   3355          //          LockSched();
   3356          //          ShowMSG(1,(int)link);
   3357          //          UnlockSched();
   3358                    mfree(link);
   3359                    return (-1);
   3360                  }
   3361                  else
   3362                  {
   3363                    int i=ed_struct->loaded_templates=LoadTemplates(ed_struct->ed_contact->uin);
   3364                    EDIT_OpenOptionMenuWithUserItems(data,ed_options_handler,ed_struct,i+2);
   3365                    mfree(link);
   3366                    return (-1);
   3367                  }          
   3368                    
   3369                }
   3370          
   3371              }
   3372              if (l==VOL_UP_BUTTON)
   3373              {
   3374                int pos;
   3375          
   3376                if ((pos=EDIT_GetFocus(data)-2)>=2)
   3377                {
   3378                  EDIT_SetFocus(data, pos);
   3379                  EDIT_SetCursorPos(data, 1);
   3380                }
   3381                return (-1);
   3382              }
   3383              if (l==VOL_DOWN_BUTTON)
   3384              {
   3385                int pos;
   3386          
   3387                if ((pos=EDIT_GetFocus(data)+2)<=ed_struct->ed_answer)
   3388                {
   3389                  EDIT_SetFocus(data, pos);
   3390                  EDIT_SetCursorPos(data, 1);
   3391                }
   3392                return (-1);
   3393              }
   3394            }
   3395            return(0); //Do standart keys
   \                     ??edchat_onkey_6:
   \   0000012C   0000A0E3           MOV      R0,#+0
   \   00000130   6DDF8DE2           ADD      SP,SP,#+436
   \   00000134   F08FBDE8           POP      {R4-R11,PC}      ;; return
   \                     ??edchat_onkey_7:
   \   00000138   ........           LDR      R7,??DataTable153  ;; `?<Constant "\\\\">`
   \   0000013C   0B0059E3           CMP      R9,#+11
   \   00000140   4400001A           BNE      ??edchat_onkey_8
   \   00000144   240296E5           LDR      R0,[R6, #+548]
   \   00000148   030050E3           CMP      R0,#+3
   \   0000014C   F6FFFF1A           BNE      ??edchat_onkey_6
   \   00000150   008095E5           LDR      R8,[R5, #+0]
   \   00000154   000058E3           CMP      R8,#+0
   \   00000158   F3FFFF0A           BEQ      ??edchat_onkey_6
   \   0000015C   081095E5           LDR      R1,[R5, #+8]
   \   00000160   08208DE2           ADD      R2,SP,#+8
   \   00000164   0400A0E1           MOV      R0,R4
   \   00000168   690100EF           SWI      +361
   \   0000016C   30109DE5           LDR      R1,[SP, #+48]
   \   00000170   0800A0E1           MOV      R0,R8
   \   00000174   ........           BL       SaveAnswer
   \   00000178   68A098E5           LDR      R10,[R8, #+104]
   \   0000017C   00005AE3           CMP      R10,#+0
   \   00000180   E9FFFF0A           BEQ      ??edchat_onkey_6
   \   00000184   0A00A0E1           MOV      R0,R10
   \   00000188   1B0000EF           SWI      +27
   \   0000018C   00B0B0E1           MOVS     R11,R0
   \   00000190   E5FFFF0A           BEQ      ??edchat_onkey_6
   \   00000194   5A0FA0E3           MOV      R0,#+360
   \   00000198   700088E5           STR      R0,[R8, #+112]
   \   0000019C   09008BE2           ADD      R0,R11,#+9
   \   000001A0   140000EF           SWI      +20
   \   000001A4   0090A0E1           MOV      R9,R0
   \   000001A8   0C0098E5           LDR      R0,[R8, #+12]
   \   000001AC   0A10A0E1           MOV      R1,R10
   \   000001B0   000089E5           STR      R0,[R9, #+0]
   \   000001B4   0200A0E3           MOV      R0,#+2
   \   000001B8   B400C9E1           STRH     R0,[R9, #+4]
   \   000001BC   B6B0C9E1           STRH     R11,[R9, #+6]
   \   000001C0   080089E2           ADD      R0,R9,#+8
   \   000001C4   1A0000EF           SWI      +26
   \   000001C8   E40196E5           LDR      R0,[R6, #+484]
   \   000001CC   023087E2           ADD      R3,R7,#+2
   \   000001D0   010080E2           ADD      R0,R0,#+1
   \   000001D4   E40186E5           STR      R0,[R6, #+484]
   \   000001D8   8008A0E1           LSL      R0,R0,#+17
   \   000001DC   A008A0E1           LSR      R0,R0,#+17
   \   000001E0   01002DE9           PUSH     {R0}
   \   000001E4   082089E2           ADD      R2,R9,#+8
   \   000001E8   0110A0E3           MOV      R1,#+1
   \   000001EC   0800A0E1           MOV      R0,R8
   \   000001F0   ........           BL       AddStringToLog
   \   000001F4   ........           LDR      R0,??DataTable165  ;; SendAnswer
   \   000001F8   0920A0E1           MOV      R2,R9
   \   000001FC   0010A0E3           MOV      R1,#+0
   \   00000200   710100EF           SWI      +369
   \   00000204   680098E5           LDR      R0,[R8, #+104]
   \   00000208   150000EF           SWI      +21
   \   0000020C   0000A0E3           MOV      R0,#+0
   \   00000210   680088E5           STR      R0,[R8, #+104]
   \   00000214   081095E5           LDR      R1,[R5, #+8]
   \   00000218   0400A0E1           MOV      R0,R4
   \   0000021C   9B0100EF           SWI      +411
   \   00000220   EC0196E5           LDR      R0,[R6, #+492]
   \   00000224   0010A0E3           MOV      R1,#+0
   \   00000228   260100EF           SWI      +294
   \   0000022C   EC1196E5           LDR      R1,[R6, #+492]
   \   00000230   0400A0E1           MOV      R0,R4
   \   00000234   810100EF           SWI      +385
   \   00000238   0400A0E1           MOV      R0,R4
   \   0000023C   ........           BL       AddMsgToChat
   \   00000240   0110A0E3           MOV      R1,#+1
   \   00000244   0800A0E1           MOV      R0,R8
   \   00000248   ........           BL       RecountMenu
   \   0000024C   0000E0E3           MVN      R0,#+0
   \   00000250   04D08DE2           ADD      SP,SP,#+4
   \   00000254   640000EA           B        ??edchat_onkey_4
   \                     ??edchat_onkey_8:
   \   00000258   1A0059E3           CMP      R9,#+26
   \   0000025C   6400001A           BNE      ??edchat_onkey_9
   \   00000260   0400A0E1           MOV      R0,R4
   \   00000264   D80100EF           SWI      +472
   \   00000268   000050E3           CMP      R0,#+0
   \   0000026C   AEFFFF1A           BNE      ??edchat_onkey_6
   \   00000270   040095E5           LDR      R0,[R5, #+4]
   \   00000274   820100EF           SWI      +386
   \   00000278   08208DE2           ADD      R2,SP,#+8
   \   0000027C   0010A0E1           MOV      R1,R0
   \   00000280   040095E5           LDR      R0,[R5, #+4]
   \   00000284   690100EF           SWI      +361
   \   00000288   EC0196E5           LDR      R0,[R6, #+492]
   \   0000028C   30109DE5           LDR      R1,[SP, #+48]
   \   00000290   1F0100EF           SWI      +287
   \   00000294   0400A0E1           MOV      R0,R4
   \   00000298   D30100EF           SWI      +467
   \   0000029C   0090A0E1           MOV      R9,R0
   \   000002A0   EC0196E5           LDR      R0,[R6, #+492]
   \   000002A4   230100EF           SWI      +291
   \   000002A8   010080E2           ADD      R0,R0,#+1
   \   000002AC   140000EF           SWI      +20
   \   000002B0   0080A0E1           MOV      R8,R0
   \   000002B4   EC0196E5           LDR      R0,[R6, #+492]
   \   000002B8   0820A0E1           MOV      R2,R8
   \   000002BC   0910A0E1           MOV      R1,R9
   \   000002C0   ........           BL       IsUrl
   \   000002C4   000050E3           CMP      R0,#+0
   \   000002C8   3B00000A           BEQ      ??edchat_onkey_10
   \   000002CC   8010A0E3           MOV      R1,#+128
   \   000002D0   4D0F8DE2           ADD      R0,SP,#+308
   \   000002D4   1D0100EF           SWI      +285
   \   000002D8   ........           LDR      R1,??DataTable132  ;; TEMPLATES_PATH
   \   000002DC   4D0F8DE2           ADD      R0,SP,#+308
   \   000002E0   1A0000EF           SWI      +26
   \   000002E4   0010D7E5           LDRB     R1,[R7, #0]
   \   000002E8   04008DE2           ADD      R0,SP,#+4
   \   000002EC   0010C0E5           STRB     R1,[R0, #+0]
   \   000002F0   0110D7E5           LDRB     R1,[R7, #+1]
   \   000002F4   0110C0E5           STRB     R1,[R0, #+1]
   \   000002F8   4D0F8DE2           ADD      R0,SP,#+308
   \   000002FC   1B0000EF           SWI      +27
   \   00000300   4D1F8DE2           ADD      R1,SP,#+308
   \   00000304   010080E0           ADD      R0,R0,R1
   \   00000308   010050E5           LDRB     R0,[R0, #-1]
   \   0000030C   5C0050E3           CMP      R0,#+92
   \   00000310   0200000A           BEQ      ??edchat_onkey_11
   \   00000314   04108DE2           ADD      R1,SP,#+4
   \   00000318   4D0F8DE2           ADD      R0,SP,#+308
   \   0000031C   170000EF           SWI      +23
   \                     ??edchat_onkey_11:
   \   00000320   20019FE5           LDR      R0,??edchat_onkey_12  ;; GetTempName
   \   00000324   042087E2           ADD      R2,R7,#+4
   \   00000328   01002DE9           PUSH     {R0}
   \   0000032C   4E3F8DE2           ADD      R3,SP,#+312
   \   00000330   FF10A0E3           MOV      R1,#+255
   \   00000334   38008DE2           ADD      R0,SP,#+56
   \   00000338   1B0100EF           SWI      +283
   \   0000033C   04308DE2           ADD      R3,SP,#+4
   \   00000340   402FA0E3           MOV      R2,#+256
   \   00000344   0110A0E3           MOV      R1,#+1
   \   00000348   831C81E3           ORR      R1,R1,#0x8300
   \   0000034C   38008DE2           ADD      R0,SP,#+56
   \   00000350   0A0000EF           SWI      +10
   \   00000354   0040A0E1           MOV      R4,R0
   \   00000358   010074E3           CMN      R4,#+1
   \   0000035C   04D08DE2           ADD      SP,SP,#+4
   \   00000360   1E00000A           BEQ      ??edchat_onkey_13
   \   00000364   0800A0E1           MOV      R0,R8
   \   00000368   1B0000EF           SWI      +27
   \   0000036C   0020A0E1           MOV      R2,R0
   \   00000370   0D30A0E1           MOV      R3,SP
   \   00000374   0810A0E1           MOV      R1,R8
   \   00000378   0400A0E1           MOV      R0,R4
   \   0000037C   0C0000EF           SWI      +12
   \   00000380   0D10A0E1           MOV      R1,SP
   \   00000384   0400A0E1           MOV      R0,R4
   \   00000388   0D0000EF           SWI      +13
   \   0000038C   EC0196E5           LDR      R0,[R6, #+492]
   \   00000390   402FA0E3           MOV      R2,#+256
   \   00000394   34108DE2           ADD      R1,SP,#+52
   \   00000398   6C0100EF           SWI      +364
   \   0000039C   EC0196E5           LDR      R0,[R6, #+492]
   \   000003A0   0020A0E3           MOV      R2,#+0
   \   000003A4   0010A0E3           MOV      R1,#+0
   \   000003A8   940000EF           SWI      +148
   \   000003AC   0D10A0E1           MOV      R1,SP
   \   000003B0   34008DE2           ADD      R0,SP,#+52
   \   000003B4   6B0100EF           SWI      +363
   \                     ??edchat_onkey_14:
   \   000003B8   080000EA           B        ??edchat_onkey_13
   \                     ??edchat_onkey_10:
   \   000003BC   000095E5           LDR      R0,[R5, #+0]
   \   000003C0   0C0090E5           LDR      R0,[R0, #+12]
   \   000003C4   ........           BL       LoadTemplates
   \   000003C8   7C109FE5           LDR      R1,??edchat_onkey_12+0x4  ;; ed_options_handler
   \   000003CC   100085E5           STR      R0,[R5, #+16]
   \   000003D0   023080E2           ADD      R3,R0,#+2
   \   000003D4   0520A0E1           MOV      R2,R5
   \   000003D8   0400A0E1           MOV      R0,R4
   \   000003DC   E50100EF           SWI      +485
   \                     ??edchat_onkey_13:
   \   000003E0   0800A0E1           MOV      R0,R8
   \   000003E4   150000EF           SWI      +21
   \                     ??edchat_onkey_2:
   \   000003E8   0000E0E3           MVN      R0,#+0
   \                     ??edchat_onkey_4:
   \   000003EC   6DDF8DE2           ADD      SP,SP,#+436
   \   000003F0   F08FBDE8           POP      {R4-R11,PC}
   \                     ??edchat_onkey_9:
   \   000003F4   0D0059E3           CMP      R9,#+13
   \   000003F8   0A00001A           BNE      ??edchat_onkey_15
   \   000003FC   0400A0E1           MOV      R0,R4
   \   00000400   820100EF           SWI      +386
   \   00000404   021040E2           SUB      R1,R0,#+2
   \   00000408   020051E3           CMP      R1,#+2
   \                     ??edchat_onkey_16:
   \   0000040C   F5FFFFBA           BLT      ??edchat_onkey_2
   \   00000410   0400A0E1           MOV      R0,R4
   \   00000414   9B0100EF           SWI      +411
   \   00000418   0110A0E3           MOV      R1,#+1
   \   0000041C   0400A0E1           MOV      R0,R4
   \   00000420   D40100EF           SWI      +468
   \   00000424   EFFFFFEA           B        ??edchat_onkey_2
   \                     ??edchat_onkey_15:
   \   00000428   0E0059E3           CMP      R9,#+14
   \   0000042C   3EFFFF1A           BNE      ??edchat_onkey_6
   \   00000430   0400A0E1           MOV      R0,R4
   \   00000434   820100EF           SWI      +386
   \   00000438   021080E2           ADD      R1,R0,#+2
   \   0000043C   080095E5           LDR      R0,[R5, #+8]
   \   00000440   010050E1           CMP      R0,R1
   \   00000444   F0FFFFEA           B        ??edchat_onkey_16
   \                     ??edchat_onkey_12:
   \   00000448   ........           DC32     GetTempName
   \   0000044C   ........           DC32     ed_options_handler
   3396            //1: close
   3397          }
   3398          
   3399          static const HEADER_DESC edchat_hdr={0,0,NULL,NULL,NULL,0,LGP_NULL};
   3400          
   3401          void (*old_ed_redraw)(void *data);

   \                                 In segment CODE, align 4, keep-with-next
   3402          void my_ed_redraw(void *data)
   3403          {
   \                     my_ed_redraw:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   3404            void *edchat_gui;
   3405            EDCHAT_STRUCT *ed_struct;
   3406            if (old_ed_redraw) old_ed_redraw(data);
   \   00000004   ........           LDR      R4,??DataTable136  ;; contactlist_menuhdr
   \   00000008   741294E5           LDR      R1,[R4, #+628]
   \   0000000C   000051E3           CMP      R1,#+0
   \   00000010   0100000A           BEQ      ??my_ed_redraw_0
   \   00000014   31FF2FE1           BLX      R1
   3407            edchat_gui=FindGUIbyId(edchat_id,NULL);
   \   00000018   0010A0E3           MOV      R1,#+0
   \                     ??my_ed_redraw_0:
   \   0000001C   580294E5           LDR      R0,[R4, #+600]
   \   00000020   090200EF           SWI      +521
   3408            if (edchat_gui)
   \   00000024   000050E3           CMP      R0,#+0
   \   00000028   3080BD08           POPEQ    {R4,R5,PC}
   3409            {
   3410              ed_struct=EDIT_GetUserPointer(edchat_gui);
   \   0000002C   DF0100EF           SWI      +479
   3411              if (ed_struct)
   \   00000030   000050E3           CMP      R0,#+0
   \   00000034   3080BD08           POPEQ    {R4,R5,PC}
   3412              {
   3413                int icon, width;
   3414          #ifndef	NEWSGOLD
   3415                icon=*(S_ICONS+GetIconIndex(ed_struct->ed_contact));
   3416                ((HEADER_DESC *)&edchat_hdr)->rc.x2=ScreenW()-1-(width=GetImgWidth(icon));
   3417                DrawImg(ScreenW()-1-width,1,icon);
   3418          #else
   3419                icon=*(S_ICONS+GetIconIndex(ed_struct->ed_contact));
   \   00000038   000090E5           LDR      R0,[R0, #+0]
   \   0000003C   ........           BL       GetIconIndex
   \   00000040   000184E0           ADD      R0,R4,R0, LSL #+2
   \   00000044   104190E5           LDR      R4,[R0, #+272]
   3420                width=GetImgWidth(icon);
   \   00000048   0400A0E1           MOV      R0,R4
   \   0000004C   220000EF           SWI      +34
   \   00000050   0050A0E1           MOV      R5,R0
   3421                DrawImg(2,((HeaderH()-width)>>1)+YDISP,icon);
   \   00000054   8A8100EF           SWI      +33162
   \   00000058   0420A0E1           MOV      R2,R4
   \   0000005C   050040E0           SUB      R0,R0,R5
   \   00000060   1810A0E3           MOV      R1,#+24
   \   00000064   C01081E0           ADD      R1,R1,R0, ASR #+1
   \   00000068   0200A0E3           MOV      R0,#+2
   \   0000006C   230000EF           SWI      +35
   3422          /*      DrawRoundedFrame(ScreenW()-8,YDISP,ScreenW()-1,YDISP+7,0,0,0,
   3423          		       GetPaletteAdrByColorIndex(0),
   3424          		       GetPaletteAdrByColorIndex(EDIT_IsBusy(edchat_gui)?3:4));*/
   3425          #endif
   3426              }
   3427            }
   3428          }
   \   00000070   3080BDE8           POP      {R4,R5,PC}       ;; return
   3429          

   \                                 In segment CODE, align 4, keep-with-next
   3430          void edchat_ghook(GUI *data, int cmd)
   3431          {
   \                     edchat_ghook:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   3432          
   3433            static SOFTKEY_DESC sk={0x0FFF,0x0000,NULL};
   3434            sk.lgp_id=(int)lgpData[LGP_Menu];
   \   00000004   ........           LDR      R4,??DataTable136  ;; contactlist_menuhdr
   \   00000008   0050A0E1           MOV      R5,R0
   \   0000000C   ........           LDR      R0,??DataTable135  ;; lgpData
   \   00000010   2CD04DE2           SUB      SP,SP,#+44
   \   00000014   0160A0E1           MOV      R6,R1
   \   00000018   181090E5           LDR      R1,[R0, #+24]
   3435            static SOFTKEY_DESC sk_cancel={0x0FF0,0x0000,NULL};
   3436            sk_cancel.lgp_id=(int)lgpData[LGP_Close];
   \   0000001C   200090E5           LDR      R0,[R0, #+32]
   \   00000020   D01184E5           STR      R1,[R4, #+464]
   \   00000024   D80184E5           STR      R0,[R4, #+472]
   3437            //  static SOFTKEY_DESC sk={0x0018,0x0000,(int)"Menu"};
   3438            int j;
   3439            EDITCONTROL ec;
   3440            EDCHAT_STRUCT *ed_struct=EDIT_GetUserPointer(data);
   \   00000028   0500A0E1           MOV      R0,R5
   \   0000002C   DF0100EF           SWI      +479
   \   00000030   0080A0E1           MOV      R8,R0
   3441            PNGTOP_DESC *pltop=PNG_TOP();
   \   00000034   B98100EF           SWI      +33209
   \   00000038   0090A0E1           MOV      R9,R0
   3442            if (cmd==9)
   \   0000003C   0070A0E3           MOV      R7,#+0
   \   00000040   090056E3           CMP      R6,#+9
   \   00000044   0500001A           BNE      ??edchat_ghook_0
   3443            {
   3444              GBS_DelTimer(&tmr_illumination);          //by BoBa 25.06.07
   \   00000048   D800A0E3           MOV      R0,#+216
   \   0000004C   400E80E3           ORR      R0,R0,#0x400
   \   00000050   040080E0           ADD      R0,R0,R4
   \   00000054   8C0100EF           SWI      +396
   3445              pltop->dyn_pltop=NULL;
   \   00000058   087089E5           STR      R7,[R9, #+8]
   \   0000005C   170000EA           B        ??edchat_ghook_1
   3446            }
   3447            if (cmd==2)
   \                     ??edchat_ghook_0:
   \   00000060   081098E5           LDR      R1,[R8, #+8]
   \   00000064   020056E3           CMP      R6,#+2
   \   00000068   1600001A           BNE      ??edchat_ghook_2
   3448            {
   3449              ed_struct->ed_chatgui=data;
   \   0000006C   045088E5           STR      R5,[R8, #+4]
   3450          //    edgui_data=data;
   3451              EDIT_SetFocus(data,ed_struct->ed_answer);
   \   00000070   0500A0E1           MOV      R0,R5
   \   00000074   9B0100EF           SWI      +411
   3452          
   3453              static void *methods[16];
   3454              void **m=GetDataOfItemByID(data,2);
   \   00000078   0210A0E3           MOV      R1,#+2
   \   0000007C   0500A0E1           MOV      R0,R5
   \   00000080   4F0100EF           SWI      +335
   \   00000084   0050B0E1           MOVS     R5,R0
   3455              if (m)
   3456              {
   3457                if (m[1])
   \   00000088   04009515           LDRNE    R0,[R5, #+4]
   \   0000008C   00005013           CMPNE    R0,#+0
   \   00000090   6200000A           BEQ      ??edchat_ghook_3
   3458                {
   3459                  memcpy(methods,m[1],sizeof(methods));
   \   00000094   9E6FA0E3           MOV      R6,#+632
   \   00000098   4020A0E3           MOV      R2,#+64
   \   0000009C   0010A0E1           MOV      R1,R0
   \   000000A0   040086E0           ADD      R0,R6,R4
   \   000000A4   1E0100EF           SWI      +286
   3460                  old_ed_redraw=(void (*)(void *))(methods[0]);
   \   000000A8   040096E7           LDR      R0,[R6, +R4]
   \   000000AC   740284E5           STR      R0,[R4, #+628]
   3461                  methods[0]=(void *)my_ed_redraw;
   \   000000B0   70019FE5           LDR      R0,??edchat_ghook_4  ;; my_ed_redraw
   \   000000B4   040086E7           STR      R0,[R6, +R4]
   3462                  m[1]=methods;
   \   000000B8   040086E0           ADD      R0,R6,R4
   \   000000BC   040085E5           STR      R0,[R5, #+4]
   \                     ??edchat_ghook_1:
   \   000000C0   2CD08DE2           ADD      SP,SP,#+44
   \   000000C4   F083BDE8           POP      {R4-R9,PC}
   3463                }
   3464              }
   3465            }
   3466            if (cmd==3)
   \                     ??edchat_ghook_2:
   \   000000C8   030056E3           CMP      R6,#+3
   \   000000CC   0E00001A           BNE      ??edchat_ghook_5
   3467            {
   3468          //    if (edgui_data==data) edgui_data=NULL;
   3469              if (ed_struct->ed_contact)
   \   000000D0   000098E5           LDR      R0,[R8, #+0]
   \   000000D4   000050E3           CMP      R0,#+0
   \   000000D8   0500000A           BEQ      ??edchat_ghook_6
   3470              {
   3471                ExtractEditControl(data,ed_struct->ed_answer,&ec);
   \   000000DC   0D20A0E1           MOV      R2,SP
   \   000000E0   0500A0E1           MOV      R0,R5
   \   000000E4   690100EF           SWI      +361
   3472                SaveAnswer(ed_struct->ed_contact,ec.pWS);
   \   000000E8   28109DE5           LDR      R1,[SP, #+40]
   \   000000EC   000098E5           LDR      R0,[R8, #+0]
   \   000000F0   ........           BL       SaveAnswer
   3473              }
   3474              RecountMenu(ed_struct->ed_contact, 1);
   \                     ??edchat_ghook_6:
   \   000000F4   000098E5           LDR      R0,[R8, #+0]
   \   000000F8   0110A0E3           MOV      R1,#+1
   \   000000FC   ........           BL       RecountMenu
   3475              mfree(ed_struct);
   \   00000100   0800A0E1           MOV      R0,R8
   \   00000104   150000EF           SWI      +21
   \   00000108   ECFFFFEA           B        ??edchat_ghook_1
   3476            }
   3477            if (cmd==0x0A)
   \                     ??edchat_ghook_5:
   \   0000010C   0A0056E3           CMP      R6,#+10
   \   00000110   0900001A           BNE      ??edchat_ghook_7
   3478            {
   3479              pltop->dyn_pltop=SmilesImgList;
   \   00000114   10019FE5           LDR      R0,??edchat_ghook_4+0x4  ;; SmilesImgList
   \   00000118   000090E5           LDR      R0,[R0, #+0]
   \   0000011C   080089E5           STR      R0,[R9, #+8]
   3480              DisableIDLETMR();
   \   00000120   7F0100EF           SWI      +383
   3481              total_unread-=ed_struct->requested_decrement_total_unread;
   \   00000124   480294E5           LDR      R0,[R4, #+584]
   \   00000128   0C1098E5           LDR      R1,[R8, #+12]
   \   0000012C   010040E0           SUB      R0,R0,R1
   \   00000130   480284E5           STR      R0,[R4, #+584]
   3482              ed_struct->requested_decrement_total_unread=0;
   \   00000134   0C7088E5           STR      R7,[R8, #+12]
   \   00000138   E0FFFFEA           B        ??edchat_ghook_1
   3483          /*    if (request_close_edchat)
   3484              {
   3485                request_close_edchat=0;
   3486                GeneralFunc_flag1(edchat_id,1);
   3487                return;
   3488              }*/
   3489            }
   3490            if (cmd==7)
   \                     ??edchat_ghook_7:
   \   0000013C   070056E3           CMP      R6,#+7
   \   00000140   2700001A           BNE      ??edchat_ghook_8
   3491            {
   3492              SetSoftKey(data,&sk,SET_SOFT_KEY_N);
   \   00000144   0020A0E3           MOV      R2,#+0
   \   00000148   731F84E2           ADD      R1,R4,#+460
   \   0000014C   0500A0E1           MOV      R0,R5
   \   00000150   680100EF           SWI      +360
   3493              ExtractEditControl(data,ed_struct->ed_answer,&ec);
   \   00000154   081098E5           LDR      R1,[R8, #+8]
   \   00000158   0D20A0E1           MOV      R2,SP
   \   0000015C   0500A0E1           MOV      R0,R5
   \   00000160   690100EF           SWI      +361
   3494              if (ec.pWS->wsbody[0]==0)
   \   00000164   28009DE5           LDR      R0,[SP, #+40]
   \   00000168   000090E5           LDR      R0,[R0, #+0]
   \   0000016C   B000D0E1           LDRH     R0,[R0, #+0]
   \   00000170   000050E3           CMP      R0,#+0
   \   00000174   0300001A           BNE      ??edchat_ghook_9
   3495                SetSoftKey(data,&sk_cancel,SET_SOFT_KEY_N==0?1:0);
   \   00000178   0120A0E3           MOV      R2,#+1
   \   0000017C   751F84E2           ADD      R1,R4,#+468
   \   00000180   0500A0E1           MOV      R0,R5
   \   00000184   680100EF           SWI      +360
   3496              if (!EDIT_IsBusy(data))
   \                     ??edchat_ghook_9:
   \   00000188   0500A0E1           MOV      R0,R5
   \   0000018C   1C0200EF           SWI      +540
   \   00000190   000050E3           CMP      R0,#+0
   \   00000194   2100001A           BNE      ??edchat_ghook_3
   3497              {
   3498                time_to_stop_t9=0;
   \   00000198   707284E5           STR      R7,[R4, #+624]
   3499                if (ed_struct->ed_contact->req_add)
   \   0000019C   000098E5           LDR      R0,[R8, #+0]
   \   000001A0   5C1090E5           LDR      R1,[R0, #+92]
   \   000001A4   000051E3           CMP      R1,#+0
   \   000001A8   0500000A           BEQ      ??edchat_ghook_10
   3500                {
   3501          	ed_struct->ed_contact->req_add=0;
   \   000001AC   5C7080E5           STR      R7,[R0, #+92]
   3502          	AddMsgToChat(data);
   \   000001B0   0500A0E1           MOV      R0,R5
   \   000001B4   ........           BL       AddMsgToChat
   3503          	RecountMenu(ed_struct->ed_contact, 1);
   \   000001B8   000098E5           LDR      R0,[R8, #+0]
   \   000001BC   0110A0E3           MOV      R1,#+1
   \   000001C0   ........           BL       RecountMenu
   3504                }
   3505                if (ed_struct->ed_contact->req_drawack)
   \                     ??edchat_ghook_10:
   \   000001C4   000098E5           LDR      R0,[R8, #+0]
   \   000001C8   601090E5           LDR      R1,[R0, #+96]
   \   000001CC   000051E3           CMP      R1,#+0
   \   000001D0   1200000A           BEQ      ??edchat_ghook_3
   3506                {
   3507          	ed_struct->ed_contact->req_drawack=0;
   \   000001D4   607080E5           STR      R7,[R0, #+96]
   3508          	DrawAck(data);
   \   000001D8   0500A0E1           MOV      R0,R5
   \   000001DC   ........           BL       DrawAck
   \   000001E0   B6FFFFEA           B        ??edchat_ghook_1
   3509                }
   3510              }
   3511            }
   3512            if (cmd==0x0C)
   \                     ??edchat_ghook_8:
   \   000001E4   0C0056E3           CMP      R6,#+12
   \   000001E8   0C00001A           BNE      ??edchat_ghook_3
   3513            {
   3514              j=EDIT_GetFocus(data);
   \   000001EC   0500A0E1           MOV      R0,R5
   \   000001F0   820100EF           SWI      +386
   \   000001F4   0040A0E1           MOV      R4,R0
   3515              if ((EDIT_GetUnFocus(data)<j)&&(j!=ed_struct->ed_answer))
   \   000001F8   0500A0E1           MOV      R0,R5
   \   000001FC   830100EF           SWI      +387
   \   00000200   040050E1           CMP      R0,R4
   \   00000204   050000AA           BGE      ??edchat_ghook_3
   \   00000208   080098E5           LDR      R0,[R8, #+8]
   \   0000020C   000054E1           CMP      R4,R0
   \   00000210   0200000A           BEQ      ??edchat_ghook_3
   3516                EDIT_SetCursorPos(data,1);
   \   00000214   0110A0E3           MOV      R1,#+1
   \   00000218   0500A0E1           MOV      R0,R5
   \   0000021C   D40100EF           SWI      +468
   3517            }
   3518          }
   \                     ??edchat_ghook_3:
   \   00000220   2CD08DE2           ADD      SP,SP,#+44       ;; stack cleaning
   \   00000224   F083BDE8           POP      {R4-R9,PC}       ;; return
   \                     ??edchat_ghook_4:
   \   00000228   ........           DC32     my_ed_redraw
   \   0000022C   ........           DC32     SmilesImgList

   \                                 In segment DATA_C, align 4, align-sorted
   3519          
   3520          
   3521          
   3522          static const INPUTDIA_DESC edchat_desc =
   \                     edchat_desc:
   \   00000000   01000000....       DC32 1, edchat_onkey, edchat_ghook, edchat_locret, 0, menu_skt
   \              ............
   \              ........0000
   \              0000........
   \   00000018   000000000000       DC16 0, 0, 0, 0
   \              0000        
   \   00000020   080000006400       DC32 8, 100, 101, 0, 0, 1073741824
   \              000065000000
   \              000000000000
   \              000000000040
   \   00000038   000000000000       DC16 0, 0, 0, 0
   \              0000        
   \   00000040   000000000000       DC32 0H, 0, 2147483647
   \              0000FFFFFF7F
   \   0000004C   2D2D2D2D2D2D       DC8 "-------"
   \              2D00        
   3523          {
   3524            1,
   3525            edchat_onkey,
   3526            edchat_ghook,
   3527            (void *)edchat_locret,
   3528            0,
   3529            &menu_skt,
   3530            {0,NULL,NULL,NULL},
   3531            FONT_SMALL,
   3532            100,
   3533            101,
   3534            0,
   3535            //  0x00000001 - Выровнять по правому краю
   3536            //  0x00000002 - Выровнять по центру
   3537            //  0x00000004 - Инверсия знакомест
   3538            //  0x00000008 - UnderLine
   3539            //  0x00000020 - Не переносить слова
   3540            //  0x00000200 - bold
   3541            0,
   3542            //  0x00000002 - ReadOnly
   3543            //  0x00000004 - Не двигается курсор
   3544            //  0x40000000 - Поменять местами софт-кнопки
   3545            0x40000000
   3546          };
   3547          

   \                                 In segment CODE, align 4, keep-with-next
   3548          void CreateEditChat(CLIST *t)
   3549          {
   \                     CreateEditChat:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   3550            extern const int FIRST_LETTER;
   3551            void *ma=malloc_adr();
   3552            void *eq;
   3553            EDITCONTROL ec;
   3554            EDITC_OPTIONS ec_options;
   3555            int color, font, type;
   3556            int zc;
   3557          
   3558            LOGQ *lp;
   3559            int edchat_toitem;
   3560          //  edcontact=t;
   3561          
   3562            *((int *)(&edchat_hdr.lgp_id))=(int)t->name;
   \   00000004   78649FE5           LDR      R6,??CreateEditChat_0  ;; edchat_desc
   3563          //  *((int **)(&edchat_hdr.icon))=(int *)S_ICONS+GetIconIndex(t);
   3564            *((int **)(&edchat_hdr.icon))=(int *)S_ICONS+IS_NULLICON;
   \   00000008   ........           LDR      R7,??DataTable136  ;; contactlist_menuhdr
   \   0000000C   4CD04DE2           SUB      SP,SP,#+76
   \   00000010   0040A0E1           MOV      R4,R0
   \   00000014   148000EF           SWI      +32788
   \   00000018   0050A0E1           MOV      R5,R0
   \   0000001C   140084E2           ADD      R0,R4,#+20
   \   00000020   440086E5           STR      R0,[R6, #+68]
   \   00000024   550F87E2           ADD      R0,R7,#+340
   \   00000028   400086E5           STR      R0,[R6, #+64]
   3565          
   3566            eq=AllocEQueue(ma,mfree_adr());
   \   0000002C   158000EF           SWI      +32789
   \   00000030   0010A0E1           MOV      R1,R0
   \   00000034   0500A0E1           MOV      R0,R5
   \   00000038   630100EF           SWI      +355
   3567          
   3568          
   3569            lp=t->log;
   \   0000003C   649094E5           LDR      R9,[R4, #+100]
   \   00000040   0080A0E1           MOV      R8,R0
   \   00000044   000059E3           CMP      R9,#+0
   \   00000048   9500000A           BEQ      ??CreateEditChat_1
   3570          
   3571            while(lp)
   3572            {
   3573              font = ED_H_FONT_SIZE;
   3574              if ((zc=lp->acked&3))
   \                     ??CreateEditChat_2:
   \   0000004C   ........           LDR      R2,??DataTable137  ;; ED_X_FONT_SIZE
   \   00000050   ........           LDR      R0,??DataTable138  ;; ED_H_FONT_SIZE
   \   00000054   002092E5           LDR      R2,[R2, #+0]
   \   00000058   00A090E5           LDR      R10,[R0, #+0]
   \   0000005C   040099E5           LDR      R0,[R9, #+4]
   \   00000060   ........           LDR      R1,??DataTable139  ;; I_COLOR
   \   00000064   1C208DE5           STR      R2,[SP, #+28]
   \   00000068   ........           LDR      R2,??DataTable140  ;; X_COLOR
   \   0000006C   030010E2           ANDS     R0,R0,#0x3
   \   00000070   002092E5           LDR      R2,[R2, #+0]
   \   00000074   14208DE5           STR      R2,[SP, #+20]
   \   00000078   ........           LDR      R2,??DataTable141  ;; O_ED_X_FONT_SIZE
   \   0000007C   002092E5           LDR      R2,[R2, #+0]
   \   00000080   18208DE5           STR      R2,[SP, #+24]
   \   00000084   ........           LDR      R2,??DataTable142  ;; O_X_COLOR
   \   00000088   002092E5           LDR      R2,[R2, #+0]
   \   0000008C   10208DE5           STR      R2,[SP, #+16]
   \   00000090   00B091E5           LDR      R11,[R1, #+0]
   \   00000094   0300000A           BEQ      ??CreateEditChat_3
   3575              {
   3576                if (zc==1)
   \   00000098   010050E3           CMP      R0,#+1
   \   0000009C   1E00001A           BNE      ??CreateEditChat_4
   3577          	color=ACK_COLOR; //Зеленый
   \   000000A0   ........           LDR      R0,??DataTable143  ;; ACK_COLOR
   \   000000A4   1B0000EA           B        ??CreateEditChat_5
   3578                else
   3579          	color=I_COLOR;
   3580              }
   3581              else
   3582              {
   3583                if (lp->ID==0xFFFFFFFF)
   \                     ??CreateEditChat_3:
   \   000000A8   080099E5           LDR      R0,[R9, #+8]
   \   000000AC   010070E3           CMN      R0,#+1
   \   000000B0   1700001A           BNE      ??CreateEditChat_6
   3584                {
   3585                  type = lp->type&0x0F;
   \   000000B4   0C0099E5           LDR      R0,[R9, #+12]
   \   000000B8   0F1000E2           AND      R1,R0,#0xF
   3586                  if(lp->type&0x10)
   \   000000BC   100010E3           TST      R0,#0x10
   \   000000C0   0B00000A           BEQ      ??CreateEditChat_7
   3587                  {
   3588                    color = (type==1)?O_I_COLOR:((type==3)?O_X_COLOR:O_TO_COLOR);
   \   000000C4   010051E3           CMP      R1,#+1
   \   000000C8   ........           LDREQ    R0,??DataTable144  ;; O_I_COLOR
   \   000000CC   0400000A           BEQ      ??CreateEditChat_8
   \   000000D0   030051E3           CMP      R1,#+3
   \   000000D4   18A09D05           LDREQ    R10,[SP, #+24]
   \   000000D8   02B0A001           MOVEQ    R11,R2
   \   000000DC   0E00000A           BEQ      ??CreateEditChat_4
   \   000000E0   ........           LDR      R0,??DataTable145  ;; O_TO_COLOR
   \                     ??CreateEditChat_8:
   \   000000E4   00B090E5           LDR      R11,[R0, #+0]
   \   000000E8   ........           LDR      R0,??DataTable146  ;; O_ED_H_FONT_SIZE
   \   000000EC   00A090E5           LDR      R10,[R0, #+0]
   \   000000F0   090000EA           B        ??CreateEditChat_4
   3589                    font = (type==3)?O_ED_X_FONT_SIZE:O_ED_H_FONT_SIZE;
   3590                  }
   3591                  else
   3592                  {
   3593                    color = (type==1)?I_COLOR:((type==3)?X_COLOR:TO_COLOR);
   \                     ??CreateEditChat_7:
   \   000000F4   010051E3           CMP      R1,#+1
   \   000000F8   0700000A           BEQ      ??CreateEditChat_4
   \   000000FC   030051E3           CMP      R1,#+3
   \   00000100   14B09D05           LDREQ    R11,[SP, #+20]
   \   00000104   1CA09D05           LDREQ    R10,[SP, #+28]
   \   00000108   0300000A           BEQ      ??CreateEditChat_4
   \   0000010C   ........           LDR      R0,??DataTable147  ;; TO_COLOR
   \   00000110   000000EA           B        ??CreateEditChat_5
   3594                    font = (type==3)?ED_X_FONT_SIZE:ED_H_FONT_SIZE;
   3595                  }
   3596                }
   3597                else
   3598          	color=UNACK_COLOR; //Серый
   \                     ??CreateEditChat_6:
   \   00000114   ........           LDR      R0,??DataTable148  ;; UNACK_COLOR
   \                     ??CreateEditChat_5:
   \   00000118   00B090E5           LDR      R11,[R0, #+0]
   3599              }
   3600              PrepareEditControl(&ec);
   \                     ??CreateEditChat_4:
   \   0000011C   20008DE2           ADD      R0,SP,#+32
   \   00000120   640100EF           SWI      +356
   3601              if ((lp->type&0x0F)!=3)
   \   00000124   0C0099E5           LDR      R0,[R9, #+12]
   \   00000128   0F0000E2           AND      R0,R0,#0xF
   \   0000012C   030050E3           CMP      R0,#+3
   \   00000130   0800000A           BEQ      ??CreateEditChat_9
   3602              {
   3603                ascii2ws(ews,lp->hdr);
   \   00000134   EC0197E5           LDR      R0,[R7, #+492]
   \   00000138   101089E2           ADD      R1,R9,#+16
   \   0000013C   ........           _BLF     ascii2ws,??ascii2ws??rA
   3604                ConstructEditControl(&ec,ECT_HEADER,ECF_APPEND_EOL,ews,ews->wsbody[0]);
   \   00000140   EC3197E5           LDR      R3,[R7, #+492]
   \   00000144   4020A0E3           MOV      R2,#+64
   \   00000148   000093E5           LDR      R0,[R3, #+0]
   \   0000014C   B000D0E1           LDRH     R0,[R0, #+0]
   \   00000150   01002DE9           PUSH     {R0}
   \   00000154   030000EA           B        ??CreateEditChat_10
   3605              }
   3606              else
   3607                ConstructEditControl(&ec,ECT_HEADER,ECF_DELSTR,ews,0);
   \                     ??CreateEditChat_9:
   \   00000158   0000A0E3           MOV      R0,#+0
   \   0000015C   01002DE9           PUSH     {R0}
   \   00000160   EC3197E5           LDR      R3,[R7, #+492]
   \   00000164   2020A0E3           MOV      R2,#+32
   \                     ??CreateEditChat_10:
   \   00000168   0110A0E3           MOV      R1,#+1
   \   0000016C   24008DE2           ADD      R0,SP,#+36
   \   00000170   650100EF           SWI      +357
   \   00000174   04D08DE2           ADD      SP,SP,#+4
   3608              PrepareEditCOptions(&ec_options);
   \   00000178   0D00A0E1           MOV      R0,SP
   \   0000017C   C80100EF           SWI      +456
   3609              SetPenColorToEditCOptions(&ec_options,color);
   \   00000180   0B10A0E1           MOV      R1,R11
   \   00000184   0D00A0E1           MOV      R0,SP
   \   00000188   CC0100EF           SWI      +460
   3610              SetFontToEditCOptions(&ec_options,font);
   \   0000018C   0A10A0E1           MOV      R1,R10
   \   00000190   0D00A0E1           MOV      R0,SP
   \   00000194   CA0100EF           SWI      +458
   3611              CopyOptionsToEditControl(&ec,&ec_options);
   \   00000198   0D10A0E1           MOV      R1,SP
   \   0000019C   20008DE2           ADD      R0,SP,#+32
   \   000001A0   CE0100EF           SWI      +462
   3612              AddEditControlToEditQend(eq,&ec,ma);
   \   000001A4   0520A0E1           MOV      R2,R5
   \   000001A8   20108DE2           ADD      R1,SP,#+32
   \   000001AC   0800A0E1           MOV      R0,R8
   \   000001B0   660100EF           SWI      +358
   3613              if ((lp->type&0x0F)!=3)
   \   000001B4   0C0099E5           LDR      R0,[R9, #+12]
   \   000001B8   0F1000E2           AND      R1,R0,#0xF
   \   000001BC   030051E3           CMP      R1,#+3
   \   000001C0   0300000A           BEQ      ??CreateEditChat_11
   3614              {
   3615                ParseAnswer(ews,lp->text);
   \   000001C4   EC0197E5           LDR      R0,[R7, #+492]
   \   000001C8   601089E2           ADD      R1,R9,#+96
   \   000001CC   ........           BL       ParseAnswer
   \   000001D0   050000EA           B        ??CreateEditChat_12
   3616              }
   3617              else
   3618              {
   3619                ParseXStatusText(ews,lp->text,(lp->type&0x10)?O_X_COLOR:X_COLOR);
   \                     ??CreateEditChat_11:
   \   000001D4   100010E3           TST      R0,#0x10
   \   000001D8   10209D15           LDRNE    R2,[SP, #+16]
   \   000001DC   EC0197E5           LDR      R0,[R7, #+492]
   \   000001E0   14209D05           LDREQ    R2,[SP, #+20]
   \   000001E4   601089E2           ADD      R1,R9,#+96
   \   000001E8   ........           BL       ParseXStatusText
   3620              }
   3621              PrepareEditControl(&ec);
   \                     ??CreateEditChat_12:
   \   000001EC   20008DE2           ADD      R0,SP,#+32
   \   000001F0   640100EF           SWI      +356
   3622              ConstructEditControl(&ec,
   3623                                   ECT_NORMAL_TEXT,
   3624                                   ews->wsbody[0] ? ECF_APPEND_EOL|ECF_DISABLE_T9 : ECF_DELSTR,
   3625                                   ews,ews->wsbody[0]);
   \   000001F4   EC3197E5           LDR      R3,[R7, #+492]
   \   000001F8   000093E5           LDR      R0,[R3, #+0]
   \   000001FC   B010D0E1           LDRH     R1,[R0, #+0]
   \   00000200   000051E3           CMP      R1,#+0
   \   00000204   0100A0E1           MOV      R0,R1
   \   00000208   01002DE9           PUSH     {R0}
   \   0000020C   812DA013           MOVNE    R2,#+8256
   \   00000210   2020A003           MOVEQ    R2,#+32
   \   00000214   0310A0E3           MOV      R1,#+3
   \   00000218   24008DE2           ADD      R0,SP,#+36
   \   0000021C   650100EF           SWI      +357
   3626              PrepareEditCOptions(&ec_options);
   \   00000220   04008DE2           ADD      R0,SP,#+4
   \   00000224   C80100EF           SWI      +456
   3627          //#ifdef M75
   3628              if ((lp->type&0x0F)!=3)
   \   00000228   0C0099E5           LDR      R0,[R9, #+12]
   \   0000022C   04D08DE2           ADD      SP,SP,#+4
   \   00000230   0F1000E2           AND      R1,R0,#0xF
   \   00000234   030051E3           CMP      R1,#+3
   \   00000238   0400000A           BEQ      ??CreateEditChat_13
   3629              {
   3630                SetFontToEditCOptions(&ec_options,(lp->type&0x10)?O_ED_FONT_SIZE:ED_FONT_SIZE);
   \   0000023C   100010E3           TST      R0,#0x10
   \   00000240   ........           LDRNE    R0,??DataTable149  ;; O_ED_FONT_SIZE
   \   00000244   ........           LDREQ    R0,??DataTable151  ;; ED_FONT_SIZE
   \   00000248   001090E5           LDR      R1,[R0, #+0]
   \   0000024C   080000EA           B        ??CreateEditChat_14
   3631              }
   3632              else
   3633              {
   3634                SetPenColorToEditCOptions(&ec_options,(lp->type&0x10)?O_X_COLOR:X_COLOR);
   \                     ??CreateEditChat_13:
   \   00000250   100010E3           TST      R0,#0x10
   \   00000254   10109D15           LDRNE    R1,[SP, #+16]
   \   00000258   0D00A0E1           MOV      R0,SP
   \   0000025C   14109D05           LDREQ    R1,[SP, #+20]
   \   00000260   CC0100EF           SWI      +460
   3635                SetFontToEditCOptions(&ec_options,(lp->type&0x10)?O_ED_X_FONT_SIZE:ED_X_FONT_SIZE);
   \   00000264   0C0099E5           LDR      R0,[R9, #+12]
   \   00000268   100010E3           TST      R0,#0x10
   \   0000026C   18109D15           LDRNE    R1,[SP, #+24]
   \   00000270   1C109D05           LDREQ    R1,[SP, #+28]
   \                     ??CreateEditChat_14:
   \   00000274   0D00A0E1           MOV      R0,SP
   \   00000278   CA0100EF           SWI      +458
   3636              }
   3637          //#else
   3638          //    SetFontToEditCOptions(&ec_options,(lp->type&0x10)?O_ED_FONT_SIZE:ED_FONT_SIZE);
   3639          //#endif
   3640              CopyOptionsToEditControl(&ec,&ec_options);
   \   0000027C   0D10A0E1           MOV      R1,SP
   \   00000280   20008DE2           ADD      R0,SP,#+32
   \   00000284   CE0100EF           SWI      +462
   3641              AddEditControlToEditQend(eq,&ec,ma);
   \   00000288   0520A0E1           MOV      R2,R5
   \   0000028C   20108DE2           ADD      R1,SP,#+32
   \   00000290   0800A0E1           MOV      R0,R8
   \   00000294   660100EF           SWI      +358
   3642              lp=lp->next;
   \   00000298   009099E5           LDR      R9,[R9, #+0]
   3643            }
   \   0000029C   000059E3           CMP      R9,#+0
   \   000002A0   69FFFF1A           BNE      ??CreateEditChat_2
   3644            if (t->isunread) total_unread--;
   \                     ??CreateEditChat_1:
   \   000002A4   580094E5           LDR      R0,[R4, #+88]
   3645            t->isunread=0;
   \   000002A8   0090A0E3           MOV      R9,#+0
   \   000002AC   000050E3           CMP      R0,#+0
   \   000002B0   48029715           LDRNE    R0,[R7, #+584]
   \   000002B4   01004012           SUBNE    R0,R0,#+1
   \   000002B8   48028715           STRNE    R0,[R7, #+584]
   \   000002BC   589084E5           STR      R9,[R4, #+88]
   3646            ChangeContactPos(t);
   \   000002C0   0400A0E1           MOV      R0,R4
   \   000002C4   ........           _BLF     ChangeContactPos,??ChangeContactPos??rA
   3647            wsprintf(ews, "-------");
   \   000002C8   EC0197E5           LDR      R0,[R7, #+492]
   \   000002CC   4C1086E2           ADD      R1,R6,#+76
   \   000002D0   240100EF           SWI      +292
   3648            PrepareEditControl(&ec);
   \   000002D4   20008DE2           ADD      R0,SP,#+32
   \   000002D8   640100EF           SWI      +356
   3649            ConstructEditControl(&ec,ECT_HEADER,ECF_APPEND_EOL,ews,ews->wsbody[0]);
   \   000002DC   EC3197E5           LDR      R3,[R7, #+492]
   \   000002E0   4020A0E3           MOV      R2,#+64
   \   000002E4   000093E5           LDR      R0,[R3, #+0]
   \   000002E8   0110A0E3           MOV      R1,#+1
   \   000002EC   B000D0E1           LDRH     R0,[R0, #+0]
   \   000002F0   01002DE9           PUSH     {R0}
   \   000002F4   24008DE2           ADD      R0,SP,#+36
   \   000002F8   650100EF           SWI      +357
   3650            PrepareEditCOptions(&ec_options);
   \   000002FC   04008DE2           ADD      R0,SP,#+4
   \   00000300   C80100EF           SWI      +456
   3651            SetFontToEditCOptions(&ec_options,ED_FONT_SIZE);
   \   00000304   ........           LDR      R0,??DataTable151  ;; ED_FONT_SIZE
   \   00000308   00A090E5           LDR      R10,[R0, #+0]
   \   0000030C   04008DE2           ADD      R0,SP,#+4
   \   00000310   0A10A0E1           MOV      R1,R10
   \   00000314   CA0100EF           SWI      +458
   3652            CopyOptionsToEditControl(&ec,&ec_options);
   \   00000318   04108DE2           ADD      R1,SP,#+4
   \   0000031C   24008DE2           ADD      R0,SP,#+36
   \   00000320   CE0100EF           SWI      +462
   3653            AddEditControlToEditQend(eq,&ec,ma);
   \   00000324   0520A0E1           MOV      R2,R5
   \   00000328   24108DE2           ADD      R1,SP,#+36
   \   0000032C   0800A0E1           MOV      R0,R8
   \   00000330   660100EF           SWI      +358
   3654          
   3655            if (t->answer) ParseAnswer(ews,t->answer);
   \   00000334   681094E5           LDR      R1,[R4, #+104]
   \   00000338   04D08DE2           ADD      SP,SP,#+4
   \   0000033C   000051E3           CMP      R1,#+0
   \   00000340   0200000A           BEQ      ??CreateEditChat_15
   \   00000344   EC0197E5           LDR      R0,[R7, #+492]
   \   00000348   ........           BL       ParseAnswer
   \   0000034C   020000EA           B        ??CreateEditChat_16
   3656            else  CutWSTR(ews,0);
   \                     ??CreateEditChat_15:
   \   00000350   EC0197E5           LDR      R0,[R7, #+492]
   \   00000354   0010A0E3           MOV      R1,#+0
   \   00000358   260100EF           SWI      +294
   3657            PrepareEditControl(&ec);
   \                     ??CreateEditChat_16:
   \   0000035C   20008DE2           ADD      R0,SP,#+32
   \   00000360   640100EF           SWI      +356
   3658            ConstructEditControl(&ec,3,(FIRST_LETTER)?ECF_DEFAULT_BIG_LETTER:0,ews,7168);
   \   00000364   1C019FE5           LDR      R0,??CreateEditChat_0+0x4  ;; FIRST_LETTER
   \   00000368   0310A0E3           MOV      R1,#+3
   \   0000036C   000090E5           LDR      R0,[R0, #+0]
   \   00000370   000050E3           CMP      R0,#+0
   \   00000374   700DA0E3           MOV      R0,#+7168
   \   00000378   01002DE9           PUSH     {R0}
   \   0000037C   EC3197E5           LDR      R3,[R7, #+492]
   \   00000380   402DA013           MOVNE    R2,#+4096
   \   00000384   0020A003           MOVEQ    R2,#+0
   \   00000388   24008DE2           ADD      R0,SP,#+36
   \   0000038C   650100EF           SWI      +357
   3659          
   3660            PrepareEditCOptions(&ec_options);
   \   00000390   04008DE2           ADD      R0,SP,#+4
   \   00000394   C80100EF           SWI      +456
   3661            SetFontToEditCOptions(&ec_options,ED_FONT_SIZE);
   \   00000398   0A10A0E1           MOV      R1,R10
   \   0000039C   04008DE2           ADD      R0,SP,#+4
   \   000003A0   CA0100EF           SWI      +458
   3662            CopyOptionsToEditControl(&ec,&ec_options);
   \   000003A4   04108DE2           ADD      R1,SP,#+4
   \   000003A8   24008DE2           ADD      R0,SP,#+36
   \   000003AC   CE0100EF           SWI      +462
   3663            edchat_toitem=AddEditControlToEditQend(eq,&ec,ma);
   \   000003B0   0520A0E1           MOV      R2,R5
   \   000003B4   24108DE2           ADD      R1,SP,#+36
   \   000003B8   0800A0E1           MOV      R0,R8
   \   000003BC   660100EF           SWI      +358
   \   000003C0   00A0A0E1           MOV      R10,R0
   3664          
   3665            if (t->req_xtext)
   \   000003C4   7C0094E5           LDR      R0,[R4, #+124]
   \   000003C8   04D08DE2           ADD      SP,SP,#+4
   \   000003CC   000050E3           CMP      R0,#+0
   \   000003D0   0400000A           BEQ      ??CreateEditChat_17
   3666            {
   3667              FreeXText(t);
   \   000003D4   0400A0E1           MOV      R0,R4
   \   000003D8   ........           _BLF     FreeXText,??FreeXText??rA
   3668              t->req_xtext=0;
   \   000003DC   7C9084E5           STR      R9,[R4, #+124]
   3669              RequestXText(t->uin);
   \   000003E0   0C0094E5           LDR      R0,[R4, #+12]
   \   000003E4   ........           BL       RequestXText
   3670            }
   3671          
   3672            EDCHAT_STRUCT *ed_struct=malloc(sizeof(EDCHAT_STRUCT));
   \                     ??CreateEditChat_17:
   \   000003E8   1400A0E3           MOV      R0,#+20
   \   000003EC   140000EF           SWI      +20
   \   000003F0   0050A0E1           MOV      R5,R0
   3673            ed_struct->ed_contact=t;
   \   000003F4   004085E5           STR      R4,[R5, #+0]
   3674            ed_struct->ed_answer=edchat_toitem;
   \   000003F8   08A085E5           STR      R10,[R5, #+8]
   3675            ed_struct->requested_decrement_total_unread=0;
   \   000003FC   0C9085E5           STR      R9,[R5, #+12]
   3676            t->req_add=0;
   \   00000400   5C9084E5           STR      R9,[R4, #+92]
   3677            t->last_log=NULL;
   \   00000404   6C9084E5           STR      R9,[R4, #+108]
   3678          
   3679            //  int scr_w=ScreenW();
   3680            //  int scr_h=ScreenH();
   3681            //  int head_h=HeaderH();
   3682          
   3683            patch_header(&edchat_hdr);
   \   00000408   B893C6E1           STRH     R9,[R6, #+56]
   \   0000040C   1800A0E3           MOV      R0,#+24
   \   00000410   BA03C6E1           STRH     R0,[R6, #+58]
   \   00000414   888100EF           SWI      +33160
   \   00000418   010040E2           SUB      R0,R0,#+1
   \   0000041C   BC03C6E1           STRH     R0,[R6, #+60]
   \   00000420   8A8100EF           SWI      +33162
   \   00000424   170080E2           ADD      R0,R0,#+23
   \   00000428   BE03C6E1           STRH     R0,[R6, #+62]
   3684            patch_input(&edchat_desc);
   \   0000042C   B891C6E1           STRH     R9,[R6, #+24]
   \   00000430   8A8100EF           SWI      +33162
   \   00000434   190080E2           ADD      R0,R0,#+25
   \   00000438   BA01C6E1           STRH     R0,[R6, #+26]
   \   0000043C   888100EF           SWI      +33160
   \   00000440   010040E2           SUB      R0,R0,#+1
   \   00000444   BC01C6E1           STRH     R0,[R6, #+28]
   \   00000448   898100EF           SWI      +33161
   \   0000044C   0040A0E1           MOV      R4,R0
   \   00000450   8B8100EF           SWI      +33163
   \   00000454   000044E0           SUB      R0,R4,R0
   \   00000458   010040E2           SUB      R0,R0,#+1
   \   0000045C   BE01C6E1           STRH     R0,[R6, #+30]
   3685            //  edchat_desc.font=ED_FONT_SIZE;
   3686            
   3687            
   3688            edchat_id=CreateInputTextDialog(&edchat_desc,&edchat_hdr,eq,1,ed_struct);
   \   00000460   20002DE9           PUSH     {R5}
   \   00000464   0130A0E3           MOV      R3,#+1
   \   00000468   0820A0E1           MOV      R2,R8
   \   0000046C   381086E2           ADD      R1,R6,#+56
   \   00000470   0600A0E1           MOV      R0,R6
   \   00000474   670100EF           SWI      +359
   \   00000478   580287E5           STR      R0,[R7, #+600]
   3689          }
   \   0000047C   50D08DE2           ADD      SP,SP,#+80
   \   00000480   F08FBDE8           POP      {R4-R11,PC}      ;; return
   \                     ??CreateEditChat_0:
   \   00000484   ........           DC32     edchat_desc
   \   00000488   ........           DC32     FIRST_LETTER
   3690          
   3691          //-----------------------------------------------------------------------------
   3692          #define EC_MNU_MAX 9
   3693          

   \                                 In segment CODE, align 4, keep-with-next
   3694          void Quote(GUI *data)
   3695          {
   \                     Quote:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   84D04DE2           SUB      SP,SP,#+132
   3696            int q_n;
   3697            EDITCONTROL ec, ec_hdr;
   3698            EDITCONTROL ec_ed;
   3699            WSHDR *ed_ws;
   3700            WSHDR *ws;
   3701          
   3702            EDCHAT_STRUCT *ed_struct;
   3703            ed_struct=MenuGetUserPointer(data);
   \   00000008   E00100EF           SWI      +480
   \   0000000C   0040A0E1           MOV      R4,R0
   3704          
   3705            q_n=EDIT_GetFocus(ed_struct->ed_chatgui);
   \   00000010   040094E5           LDR      R0,[R4, #+4]
   \   00000014   820100EF           SWI      +386
   \   00000018   0050A0E1           MOV      R5,R0
   3706            ExtractEditControl(ed_struct->ed_chatgui,q_n,&ec);
   \   0000001C   040094E5           LDR      R0,[R4, #+4]
   \   00000020   2C208DE2           ADD      R2,SP,#+44
   \   00000024   0510A0E1           MOV      R1,R5
   \   00000028   690100EF           SWI      +361
   3707            ExtractEditControl(ed_struct->ed_chatgui,q_n-1,&ec_hdr);
   \   0000002C   040094E5           LDR      R0,[R4, #+4]
   \   00000030   58208DE2           ADD      R2,SP,#+88
   \   00000034   011045E2           SUB      R1,R5,#+1
   \   00000038   690100EF           SWI      +361
   3708            ExtractEditControl(ed_struct->ed_chatgui,ed_struct->ed_answer,&ec_ed);
   \   0000003C   081094E5           LDR      R1,[R4, #+8]
   \   00000040   040094E5           LDR      R0,[R4, #+4]
   \   00000044   0D20A0E1           MOV      R2,SP
   \   00000048   690100EF           SWI      +361
   3709          
   3710            ed_ws=AllocWS((ec_ed.maxlen<<1) + 1);
   \   0000004C   F801DDE1           LDRSH    R0,[SP, #+24]
   \   00000050   0110A0E3           MOV      R1,#+1
   \   00000054   800081E0           ADD      R0,R1,R0, LSL #+1
   \   00000058   250100EF           SWI      +293
   \   0000005C   0050A0E1           MOV      R5,R0
   3711            if(wstrlen(ec_hdr.pWS))
   \   00000060   80009DE5           LDR      R0,[SP, #+128]
   \   00000064   230100EF           SWI      +291
   \   00000068   000050E3           CMP      R0,#+0
   \   0000006C   0600000A           BEQ      ??Quote_0
   3712            {
   3713              wstrcpy(ed_ws,ec_hdr.pWS);
   \   00000070   80109DE5           LDR      R1,[SP, #+128]
   \   00000074   0500A0E1           MOV      R0,R5
   \   00000078   1F0100EF           SWI      +287
   3714              wsAppendChar(ed_ws,'\r');
   \   0000007C   0D10A0E3           MOV      R1,#+13
   \   00000080   0500A0E1           MOV      R0,R5
   \   00000084   1C0000EF           SWI      +28
   \   00000088   020000EA           B        ??Quote_1
   3715            }
   3716            else
   3717              CutWSTR(ed_ws,0);
   \                     ??Quote_0:
   \   0000008C   0010A0E3           MOV      R1,#+0
   \   00000090   0500A0E1           MOV      R0,R5
   \   00000094   260100EF           SWI      +294
   3718            if (EDIT_IsMarkModeActive(ed_struct->ed_chatgui))
   \                     ??Quote_1:
   \   00000098   040094E5           LDR      R0,[R4, #+4]
   \   0000009C   D80100EF           SWI      +472
   \   000000A0   000050E3           CMP      R0,#+0
   \   000000A4   0300000A           BEQ      ??Quote_2
   3719            {
   3720              EDIT_GetMarkedText(ed_struct->ed_chatgui,ed_ws);
   \   000000A8   040094E5           LDR      R0,[R4, #+4]
   \   000000AC   0510A0E1           MOV      R1,R5
   \   000000B0   D90100EF           SWI      +473
   \   000000B4   020000EA           B        ??Quote_3
   3721            }
   3722            else
   3723            {
   3724              wstrcat(ed_ws,ec.pWS);
   \                     ??Quote_2:
   \   000000B8   54109DE5           LDR      R1,[SP, #+84]
   \   000000BC   0500A0E1           MOV      R0,R5
   \   000000C0   210100EF           SWI      +289
   3725            }
   3726            int ed_pos=0;
   \                     ??Quote_3:
   \   000000C4   0000A0E3           MOV      R0,#+0
   \   000000C8   FF60A0E3           MOV      R6,#+255
   \   000000CC   FF6C86E3           ORR      R6,R6,#0xFF00
   3727            do
   3728            {
   3729              ed_pos++;
   \                     ??Quote_4:
   \   000000D0   017080E2           ADD      R7,R0,#+1
   3730              wsInsertChar(ed_ws,'>',ed_pos++);
   \   000000D4   0720A0E1           MOV      R2,R7
   \   000000D8   3E10A0E3           MOV      R1,#+62
   \   000000DC   0500A0E1           MOV      R0,R5
   \   000000E0   1D0000EF           SWI      +29
   \   000000E4   017087E2           ADD      R7,R7,#+1
   3731              wsInsertChar(ed_ws,' ',ed_pos);
   \   000000E8   0720A0E1           MOV      R2,R7
   \   000000EC   2010A0E3           MOV      R1,#+32
   \   000000F0   0500A0E1           MOV      R0,R5
   \   000000F4   1D0000EF           SWI      +29
   3732            }
   3733            while((ed_pos=wstrchr(ed_ws,ed_pos,'\r'))!=0xFFFF);
   \   000000F8   0D20A0E3           MOV      R2,#+13
   \   000000FC   0710A0E1           MOV      R1,R7
   \   00000100   0500A0E1           MOV      R0,R5
   \   00000104   DC0100EF           SWI      +476
   \   00000108   060050E1           CMP      R0,R6
   \   0000010C   EFFFFF1A           BNE      ??Quote_4
   3734            wsAppendChar(ed_ws,'\r');
   \   00000110   0D10A0E3           MOV      R1,#+13
   \   00000114   0500A0E1           MOV      R0,R5
   \   00000118   1C0000EF           SWI      +28
   3735            wsAppendChar(ed_ws,'\r');
   \   0000011C   0D10A0E3           MOV      R1,#+13
   \   00000120   0500A0E1           MOV      R0,R5
   \   00000124   1C0000EF           SWI      +28
   3736            ws=AllocWS(ec_ed.pWS->wsbody[0]+ed_ws->wsbody[0]);
   \   00000128   28009DE5           LDR      R0,[SP, #+40]
   \   0000012C   001095E5           LDR      R1,[R5, #+0]
   \   00000130   000090E5           LDR      R0,[R0, #+0]
   \   00000134   B010D1E1           LDRH     R1,[R1, #+0]
   \   00000138   B000D0E1           LDRH     R0,[R0, #+0]
   \   0000013C   000081E0           ADD      R0,R1,R0
   \   00000140   250100EF           SWI      +293
   3737            wstrcpy(ws,ec_ed.pWS);
   \   00000144   28109DE5           LDR      R1,[SP, #+40]
   \   00000148   0060A0E1           MOV      R6,R0
   \   0000014C   1F0100EF           SWI      +287
   3738            wstrcat(ws,ed_ws);
   \   00000150   0510A0E1           MOV      R1,R5
   \   00000154   0600A0E1           MOV      R0,R6
   \   00000158   210100EF           SWI      +289
   3739            FreeWS(ed_ws);
   \   0000015C   0500A0E1           MOV      R0,R5
   \   00000160   290100EF           SWI      +297
   3740            CutWSTR(ws,ec_ed.maxlen);
   \   00000164   F811DDE1           LDRSH    R1,[SP, #+24]
   \   00000168   0600A0E1           MOV      R0,R6
   \   0000016C   260100EF           SWI      +294
   3741            EDIT_SetFocus(ed_struct->ed_chatgui,ed_struct->ed_answer);
   \   00000170   081094E5           LDR      R1,[R4, #+8]
   \   00000174   040094E5           LDR      R0,[R4, #+4]
   \   00000178   9B0100EF           SWI      +411
   3742            EDIT_SetTextToFocused(ed_struct->ed_chatgui,ws);
   \   0000017C   040094E5           LDR      R0,[R4, #+4]
   \   00000180   0610A0E1           MOV      R1,R6
   \   00000184   810100EF           SWI      +385
   3743            FreeWS(ws);
   \   00000188   0600A0E1           MOV      R0,R6
   \   0000018C   290100EF           SWI      +297
   3744            GeneralFuncF1(1);
   \   00000190   0100A0E3           MOV      R0,#+1
   \   00000194   3B0100EF           SWI      +315
   3745          }
   \   00000198   84D08DE2           ADD      SP,SP,#+132
   \   0000019C   F080BDE8           POP      {R4-R7,PC}       ;; return
   3746          
   3747          

   \                                 In segment CODE, align 4, keep-with-next
   3748          void GetShortInfo(GUI *data)
   3749          {
   \                     GetShortInfo:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   3750            EDCHAT_STRUCT *ed_struct;
   3751            ed_struct=MenuGetUserPointer(data);
   \   00000004   E00100EF           SWI      +480
   \   00000008   0040A0E1           MOV      R4,R0
   3752          
   3753            TPKT *p;
   3754            CLIST *t;
   3755            if ((t=ed_struct->ed_contact)&&(connect_state==3))
   \   0000000C   005094E5           LDR      R5,[R4, #+0]
   \   00000010   000055E3           CMP      R5,#+0
   \   00000014   1E00000A           BEQ      ??GetShortInfo_0
   \   00000018   ........           LDR      R0,??DataTable162  ;; contactlist_menuhdr + 548
   \   0000001C   000090E5           LDR      R0,[R0, #+0]
   \   00000020   030050E3           CMP      R0,#+3
   \   00000024   1A00001A           BNE      ??GetShortInfo_0
   3756            {
   3757              p=malloc(sizeof(PKT));
   \   00000028   0800A0E3           MOV      R0,#+8
   \   0000002C   140000EF           SWI      +20
   \   00000030   0060A0E1           MOV      R6,R0
   3758              p->pkt.uin=t->uin;
   \   00000034   0C0095E5           LDR      R0,[R5, #+12]
   3759              p->pkt.type=T_REQINFOSHORT;
   3760              p->pkt.data_len=0;
   3761              AddStringToLog(t, 0x01, "Request info...", I_str,0xFFFFFFFF);
   \   00000038   0010E0E3           MVN      R1,#+0
   \   0000003C   000086E5           STR      R0,[R6, #+0]
   \   00000040   0B00A0E3           MOV      R0,#+11
   \   00000044   B400C6E1           STRH     R0,[R6, #+4]
   \   00000048   0000A0E3           MOV      R0,#+0
   \   0000004C   B600C6E1           STRH     R0,[R6, #+6]
   \   00000050   ........           LDR      R0,??DataTable153  ;; `?<Constant "\\\\">`
   \   00000054   02002DE9           PUSH     {R1}
   \   00000058   023080E2           ADD      R3,R0,#+2
   \   0000005C   102080E2           ADD      R2,R0,#+16
   \   00000060   0500A0E1           MOV      R0,R5
   \   00000064   0110A0E3           MOV      R1,#+1
   \   00000068   ........           BL       AddStringToLog
   3762              AddMsgToChat(ed_struct->ed_chatgui);
   \   0000006C   040094E5           LDR      R0,[R4, #+4]
   \   00000070   ........           BL       AddMsgToChat
   3763              RecountMenu(t, 1);
   \   00000074   0110A0E3           MOV      R1,#+1
   \   00000078   0500A0E1           MOV      R0,R5
   \   0000007C   ........           BL       RecountMenu
   3764              SUBPROC((void *)SendAnswer,0,p);
   \   00000080   ........           LDR      R0,??DataTable165  ;; SendAnswer
   \   00000084   0620A0E1           MOV      R2,R6
   \   00000088   0010A0E3           MOV      R1,#+0
   \   0000008C   710100EF           SWI      +369
   \   00000090   04D08DE2           ADD      SP,SP,#+4
   3765            }
   3766            GeneralFuncF1(1);
   \                     ??GetShortInfo_0:
   \   00000094   0100A0E3           MOV      R0,#+1
   \   00000098   3B0100EF           SWI      +315
   3767          }
   \   0000009C   7080BDE8           POP      {R4-R6,PC}       ;; return
   3768          
   3769          void AskNickAndAddContact(EDCHAT_STRUCT *);

   \                                 In segment CODE, align 4, keep-with-next
   3770          void AddCurContact(GUI *data)
   3771          {
   \                     AddCurContact:
   \   00000000   00402DE9           PUSH     {LR}
   3772            EDCHAT_STRUCT *ed_struct;
   3773            ed_struct=MenuGetUserPointer(data);
   \   00000004   E00100EF           SWI      +480
   3774          
   3775            if ((ed_struct->ed_contact)&&(connect_state==3)) AskNickAndAddContact(ed_struct);
   \   00000008   000090E5           LDR      R0,[R0, #+0]
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   0400000A           BEQ      ??AddCurContact_0
   \   00000014   ........           LDR      R1,??DataTable162  ;; contactlist_menuhdr + 548
   \   00000018   001091E5           LDR      R1,[R1, #+0]
   \   0000001C   030051E3           CMP      R1,#+3
   \   00000020   0000001A           BNE      ??AddCurContact_0
   \   00000024   ........           _BLF     CreateAddContactGrpDialog,??CreateAddContactGrpDialog??rA
   3776            GeneralFuncF1(1);
   \                     ??AddCurContact_0:
   \   00000028   0100A0E3           MOV      R0,#+1
   \   0000002C   3B0100EF           SWI      +315
   3777          }
   \   00000030   0080BDE8           POP      {PC}             ;; return
   3778          

   \                                 In segment CODE, align 4, keep-with-next
   3779          void ActionOnCurContact(GUI *data,int msg) 
   3780          {
   \                     ActionOnCurContact:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0140A0E1           MOV      R4,R1
   3781            EDCHAT_STRUCT *ed_struct;
   3782            ed_struct=MenuGetUserPointer(data);
   \   00000008   E00100EF           SWI      +480
   3783            CLIST *t;
   3784            if ((t=ed_struct->ed_contact)&&(connect_state==3))
   \   0000000C   005090E5           LDR      R5,[R0, #+0]
   \   00000010   000055E3           CMP      R5,#+0
   \   00000014   1200000A           BEQ      ??ActionOnCurContact_0
   \   00000018   ........           LDR      R0,??DataTable162  ;; contactlist_menuhdr + 548
   \   0000001C   000090E5           LDR      R0,[R0, #+0]
   \   00000020   030050E3           CMP      R0,#+3
   \   00000024   0E00001A           BNE      ??ActionOnCurContact_0
   3785                {
   3786                TPKT *p;
   3787                p=malloc(sizeof(PKT));
   \   00000028   0800A0E3           MOV      R0,#+8
   \   0000002C   140000EF           SWI      +20
   \   00000030   0060A0E1           MOV      R6,R0
   3788                p->pkt.uin=t->uin;
   \   00000034   0C0095E5           LDR      R0,[R5, #+12]
   3789                p->pkt.type=msg;
   3790                p->pkt.data_len=0;
   3791                //AddStringToLog(t, 0x01, logtext, I_str,0xFFFFFFFF);
   3792                RecountMenu(t, 1);
   \   00000038   0110A0E3           MOV      R1,#+1
   \   0000003C   000086E5           STR      R0,[R6, #+0]
   \   00000040   B440C6E1           STRH     R4,[R6, #+4]
   \   00000044   0000A0E3           MOV      R0,#+0
   \   00000048   B600C6E1           STRH     R0,[R6, #+6]
   \   0000004C   0500A0E1           MOV      R0,R5
   \   00000050   ........           BL       RecountMenu
   3793                SUBPROC((void *)SendAnswer,0,p);
   \   00000054   ........           LDR      R0,??DataTable165  ;; SendAnswer
   \   00000058   0620A0E1           MOV      R2,R6
   \   0000005C   0010A0E3           MOV      R1,#+0
   \   00000060   710100EF           SWI      +369
   3794                };
   3795            GeneralFuncF1(1);
   \                     ??ActionOnCurContact_0:
   \   00000064   0100A0E3           MOV      R0,#+1
   \   00000068   3B0100EF           SWI      +315
   3796          }
   \   0000006C   7080BDE8           POP      {R4-R6,PC}       ;; return
   3797          
   3798          

   \                                 In segment CODE, align 4, keep-with-next
   3799          void RemoveCurContact(GUI *data) //by captain_SISka 21.12.2008
   3800          {
   3801           ActionOnCurContact(data,T_REMOVECONTACT);
   \                     RemoveCurContact:
   \   00000000   2110A0E3           MOV      R1,#+33
   \   00000004   ........           B        ActionOnCurContact  ;; tailcall
   3802          }
   3803          
   3804          /*void IgnoreCurContact(GUI *data) //by captain_SISka 21.12.2008
   3805          {
   3806           ActionOnCurContact(data,T_ADDIGNORE);
   3807          }*/
   3808          
   3809          

   \                                 In segment CODE, align 4, keep-with-next
   3810          void SendAuthReq(GUI *data)
   3811          {
   \                     SendAuthReq:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   3812            EDCHAT_STRUCT *ed_struct;
   3813            ed_struct=MenuGetUserPointer(data);
   \   00000004   E00100EF           SWI      +480
   \   00000008   0040A0E1           MOV      R4,R0
   3814          
   3815            TPKT *p;
   3816            CLIST *t;
   3817            int l;
   3818            //const char s[]=LG_AUTHREQ;
   3819            //char s[]="";
   3820            //strcpy(s,(char*)lgpData[LGP_AuthReq]);
   3821            
   3822            if ((t=ed_struct->ed_contact)&&(connect_state==3))
   \   0000000C   005094E5           LDR      R5,[R4, #+0]
   \   00000010   000055E3           CMP      R5,#+0
   \   00000014   2300000A           BEQ      ??SendAuthReq_0
   \   00000018   ........           LDR      R0,??DataTable162  ;; contactlist_menuhdr + 548
   \   0000001C   000090E5           LDR      R0,[R0, #+0]
   \   00000020   030050E3           CMP      R0,#+3
   \   00000024   1F00001A           BNE      ??SendAuthReq_0
   3823            {
   3824              p=malloc(sizeof(PKT)+(l=strlen((char*)lgpData[LGP_AuthReq]))+1);
   \   00000028   ........           LDR      R6,??DataTable168  ;; lgpData
   \   0000002C   540096E5           LDR      R0,[R6, #+84]
   \   00000030   1B0000EF           SWI      +27
   \   00000034   0070A0E1           MOV      R7,R0
   \   00000038   090087E2           ADD      R0,R7,#+9
   \   0000003C   140000EF           SWI      +20
   \   00000040   0080A0E1           MOV      R8,R0
   3825              p->pkt.uin=t->uin;
   \   00000044   0C0095E5           LDR      R0,[R5, #+12]
   \   00000048   000088E5           STR      R0,[R8, #+0]
   3826              p->pkt.type=T_AUTHREQ;
   \   0000004C   0A00A0E3           MOV      R0,#+10
   \   00000050   B400C8E1           STRH     R0,[R8, #+4]
   3827              p->pkt.data_len=l;
   \   00000054   B670C8E1           STRH     R7,[R8, #+6]
   3828              strcpy(p->data,(char*)lgpData[LGP_AuthReq]);
   \   00000058   541096E5           LDR      R1,[R6, #+84]
   \   0000005C   080088E2           ADD      R0,R8,#+8
   \   00000060   1A0000EF           SWI      +26
   3829              AddStringToLog(t,0x01,p->data,I_str,0xFFFFFFFF);
   \   00000064   ........           LDR      R3,??DataTable164  ;; `?<Constant "\\\\">` + 2
   \   00000068   0000E0E3           MVN      R0,#+0
   \   0000006C   01002DE9           PUSH     {R0}
   \   00000070   082088E2           ADD      R2,R8,#+8
   \   00000074   0110A0E3           MOV      R1,#+1
   \   00000078   0500A0E1           MOV      R0,R5
   \   0000007C   ........           BL       AddStringToLog
   3830              AddMsgToChat(ed_struct->ed_chatgui);
   \   00000080   040094E5           LDR      R0,[R4, #+4]
   \   00000084   ........           BL       AddMsgToChat
   3831              RecountMenu(t, 1);
   \   00000088   0110A0E3           MOV      R1,#+1
   \   0000008C   0500A0E1           MOV      R0,R5
   \   00000090   ........           BL       RecountMenu
   3832              SUBPROC((void *)SendAnswer,0,p);
   \   00000094   ........           LDR      R0,??DataTable165  ;; SendAnswer
   \   00000098   0820A0E1           MOV      R2,R8
   \   0000009C   0010A0E3           MOV      R1,#+0
   \   000000A0   710100EF           SWI      +369
   \   000000A4   04D08DE2           ADD      SP,SP,#+4
   3833            }
   3834            GeneralFuncF1(1);
   \                     ??SendAuthReq_0:
   \   000000A8   0100A0E3           MOV      R0,#+1
   \   000000AC   3B0100EF           SWI      +315
   3835          }
   \   000000B0   F081BDE8           POP      {R4-R8,PC}       ;; return
   3836          

   \                                 In segment CODE, align 4, keep-with-next
   3837          void SendAuthGrant(GUI *data)
   3838          {
   \                     SendAuthGrant:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   3839            EDCHAT_STRUCT *ed_struct;
   3840            ed_struct=MenuGetUserPointer(data);
   \   00000004   E00100EF           SWI      +480
   \   00000008   0040A0E1           MOV      R4,R0
   3841          
   3842            TPKT *p;
   3843            CLIST *t;
   3844            int l;
   3845            //const char s[]=LG_AUTHGRANT;
   3846            //char s[]="";
   3847            //strcpy(s,(char*)lgpData[LGP_AuthGrant]);
   3848            
   3849            if ((t=ed_struct->ed_contact)&&(connect_state==3))
   \   0000000C   005094E5           LDR      R5,[R4, #+0]
   \   00000010   000055E3           CMP      R5,#+0
   \   00000014   2300000A           BEQ      ??SendAuthGrant_0
   \   00000018   ........           LDR      R0,??DataTable162  ;; contactlist_menuhdr + 548
   \   0000001C   000090E5           LDR      R0,[R0, #+0]
   \   00000020   030050E3           CMP      R0,#+3
   \   00000024   1F00001A           BNE      ??SendAuthGrant_0
   3850            {
   3851              p=malloc(sizeof(PKT)+(l=strlen((char*)lgpData[LGP_AuthGrant]))+1);
   \   00000028   ........           LDR      R6,??DataTable168  ;; lgpData
   \   0000002C   580096E5           LDR      R0,[R6, #+88]
   \   00000030   1B0000EF           SWI      +27
   \   00000034   0070A0E1           MOV      R7,R0
   \   00000038   090087E2           ADD      R0,R7,#+9
   \   0000003C   140000EF           SWI      +20
   \   00000040   0080A0E1           MOV      R8,R0
   3852              p->pkt.uin=t->uin;
   \   00000044   0C0095E5           LDR      R0,[R5, #+12]
   \   00000048   000088E5           STR      R0,[R8, #+0]
   3853              p->pkt.type=T_AUTHGRANT;
   \   0000004C   0E00A0E3           MOV      R0,#+14
   \   00000050   B400C8E1           STRH     R0,[R8, #+4]
   3854              p->pkt.data_len=l;
   \   00000054   B670C8E1           STRH     R7,[R8, #+6]
   3855              strcpy(p->data,(char*)lgpData[LGP_AuthGrant]);
   \   00000058   581096E5           LDR      R1,[R6, #+88]
   \   0000005C   080088E2           ADD      R0,R8,#+8
   \   00000060   1A0000EF           SWI      +26
   3856              AddStringToLog(t,0x01,p->data,I_str,0xFFFFFFFF);
   \   00000064   ........           LDR      R3,??DataTable164  ;; `?<Constant "\\\\">` + 2
   \   00000068   0000E0E3           MVN      R0,#+0
   \   0000006C   01002DE9           PUSH     {R0}
   \   00000070   082088E2           ADD      R2,R8,#+8
   \   00000074   0110A0E3           MOV      R1,#+1
   \   00000078   0500A0E1           MOV      R0,R5
   \   0000007C   ........           BL       AddStringToLog
   3857              AddMsgToChat(ed_struct->ed_chatgui);
   \   00000080   040094E5           LDR      R0,[R4, #+4]
   \   00000084   ........           BL       AddMsgToChat
   3858              RecountMenu(t, 1);
   \   00000088   0110A0E3           MOV      R1,#+1
   \   0000008C   0500A0E1           MOV      R0,R5
   \   00000090   ........           BL       RecountMenu
   3859              SUBPROC((void *)SendAnswer,0,p);
   \   00000094   ........           LDR      R0,??DataTable165  ;; SendAnswer
   \   00000098   0820A0E1           MOV      R2,R8
   \   0000009C   0010A0E3           MOV      R1,#+0
   \   000000A0   710100EF           SWI      +369
   \   000000A4   04D08DE2           ADD      SP,SP,#+4
   3860            }
   3861            GeneralFuncF1(1);
   \                     ??SendAuthGrant_0:
   \   000000A8   0100A0E3           MOV      R0,#+1
   \   000000AC   3B0100EF           SWI      +315
   3862          }
   \   000000B0   F081BDE8           POP      {R4-R8,PC}       ;; return
   3863          

   \                                 In segment CODE, align 4, keep-with-next
   3864          void OpenLogfile(GUI *data)
   3865          {
   \                     OpenLogfile:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   3866            EDCHAT_STRUCT *ed_struct;
   3867            ed_struct=MenuGetUserPointer(data);
   3868          
   3869            extern const char HIST_PATH[64];
   3870            extern const int HISTORY_TYPE;
   3871            const char _slash[]="\\";
   \   00000004   E4409FE5           LDR      R4,??OpenLogfile_0  ;; `?<Constant "\\\\">_1`
   \   00000008   84D04DE2           SUB      SP,SP,#+132
   \   0000000C   E00100EF           SWI      +480
   \   00000010   0010D4E5           LDRB     R1,[R4, #0]
   \   00000014   0050A0E1           MOV      R5,R0
   \   00000018   0D00A0E1           MOV      R0,SP
   \   0000001C   0010C0E5           STRB     R1,[R0, #+0]
   \   00000020   0110D4E5           LDRB     R1,[R4, #+1]
   \   00000024   0110C0E5           STRB     R1,[R0, #+1]
   3872            CLIST *t;
   3873            char hist_path[128];
   3874            zeromem(hist_path,128);
   \   00000028   8010A0E3           MOV      R1,#+128
   \   0000002C   04008DE2           ADD      R0,SP,#+4
   \   00000030   1D0100EF           SWI      +285
   3875            strcpy(hist_path,HIST_PATH);
   \   00000034   B8109FE5           LDR      R1,??OpenLogfile_0+0x4  ;; HIST_PATH
   \   00000038   04008DE2           ADD      R0,SP,#+4
   \   0000003C   1A0000EF           SWI      +26
   3876            if (hist_path[strlen(hist_path)-1]!='\\') strcat(hist_path,_slash);
   \   00000040   04008DE2           ADD      R0,SP,#+4
   \   00000044   1B0000EF           SWI      +27
   \   00000048   04108DE2           ADD      R1,SP,#+4
   \   0000004C   010080E0           ADD      R0,R0,R1
   \   00000050   010050E5           LDRB     R0,[R0, #-1]
   \   00000054   5C0050E3           CMP      R0,#+92
   \   00000058   0200000A           BEQ      ??OpenLogfile_1
   \   0000005C   0D10A0E1           MOV      R1,SP
   \   00000060   04008DE2           ADD      R0,SP,#+4
   \   00000064   170000EF           SWI      +23
   3877            
   3878            WSHDR *ws=AllocWS(256);
   \                     ??OpenLogfile_1:
   \   00000068   400FA0E3           MOV      R0,#+256
   \   0000006C   250100EF           SWI      +293
   \   00000070   0060A0E1           MOV      R6,R0
   3879            if ((t=ed_struct->ed_contact))
   \   00000074   000095E5           LDR      R0,[R5, #+0]
   \   00000078   000050E3           CMP      R0,#+0
   \   0000007C   1500000A           BEQ      ??OpenLogfile_2
   3880            {
   3881              if (HISTORY_TYPE)
   \   00000080   0C3090E5           LDR      R3,[R0, #+12]
   \   00000084   6C009FE5           LDR      R0,??OpenLogfile_0+0x8  ;; HISTORY_TYPE
   \   00000088   000090E5           LDR      R0,[R0, #+0]
   \   0000008C   000050E3           CMP      R0,#+0
   \   00000090   0800000A           BEQ      ??OpenLogfile_3
   3882                wsprintf(ws,"%s%u\\%u.txt",hist_path,UIN,t->uin);
   \   00000094   ........           LDR      R0,??DataTable166  ;; UIN
   \   00000098   08002DE9           PUSH     {R3}
   \   0000009C   08208DE2           ADD      R2,SP,#+8
   \   000000A0   003090E5           LDR      R3,[R0, #+0]
   \   000000A4   041084E2           ADD      R1,R4,#+4
   \   000000A8   0600A0E1           MOV      R0,R6
   \   000000AC   240100EF           SWI      +292
   \   000000B0   04D08DE2           ADD      SP,SP,#+4
   \   000000B4   030000EA           B        ??OpenLogfile_4
   3883              else
   3884                wsprintf(ws,"%s%u.txt",hist_path,t->uin);
   \                     ??OpenLogfile_3:
   \   000000B8   04208DE2           ADD      R2,SP,#+4
   \   000000BC   101084E2           ADD      R1,R4,#+16
   \   000000C0   0600A0E1           MOV      R0,R6
   \   000000C4   240100EF           SWI      +292
   3885              ExecuteFile(ws,NULL,NULL);
   \                     ??OpenLogfile_4:
   \   000000C8   0020A0E3           MOV      R2,#+0
   \   000000CC   0010A0E3           MOV      R1,#+0
   \   000000D0   0600A0E1           MOV      R0,R6
   \   000000D4   940000EF           SWI      +148
   3886            }
   3887            FreeWS(ws);
   \                     ??OpenLogfile_2:
   \   000000D8   0600A0E1           MOV      R0,R6
   \   000000DC   290100EF           SWI      +297
   3888            GeneralFuncF1(1);
   \   000000E0   0100A0E3           MOV      R0,#+1
   \   000000E4   3B0100EF           SWI      +315
   3889          }
   \   000000E8   84D08DE2           ADD      SP,SP,#+132
   \   000000EC   7080BDE8           POP      {R4-R6,PC}       ;; return
   \                     ??OpenLogfile_0:
   \   000000F0   ........           DC32     `?<Constant "\\\\">_1`
   \   000000F4   ........           DC32     HIST_PATH
   \   000000F8   ........           DC32     HISTORY_TYPE
   3890          

   \                                 In segment CODE, align 4, keep-with-next
   3891          void ClearLog(GUI *data/*,void *dummy*/)
   3892          {
   \                     ClearLog:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   2CD04DE2           SUB      SP,SP,#+44
   3893            EDITCONTROL ec;
   3894            EDCHAT_STRUCT *ed_struct;
   3895            WSHDR *ws;
   3896            CLIST *t;
   3897          
   3898            ed_struct=MenuGetUserPointer(data);
   \   00000008   E00100EF           SWI      +480
   \   0000000C   0040A0E1           MOV      R4,R0
   3899          
   3900            ExtractEditControl(ed_struct->ed_chatgui,ed_struct->ed_answer,&ec);
   \   00000010   081094E5           LDR      R1,[R4, #+8]
   \   00000014   040094E5           LDR      R0,[R4, #+4]
   \   00000018   0D20A0E1           MOV      R2,SP
   \   0000001C   690100EF           SWI      +361
   3901            if(wstrlen(ec.pWS)>0)
   \   00000020   28009DE5           LDR      R0,[SP, #+40]
   \   00000024   230100EF           SWI      +291
   \   00000028   010050E3           CMP      R0,#+1
   \   0000002C   0D0000BA           BLT      ??ClearLog_0
   3902            {
   3903              ws=AllocWS(1);
   \   00000030   0100A0E3           MOV      R0,#+1
   \   00000034   250100EF           SWI      +293
   \   00000038   0050A0E1           MOV      R5,R0
   3904              CutWSTR(ws,0);
   \   0000003C   0010A0E3           MOV      R1,#+0
   \   00000040   260100EF           SWI      +294
   3905          
   3906              EDIT_SetFocus(ed_struct->ed_chatgui,ed_struct->ed_answer);
   \   00000044   081094E5           LDR      R1,[R4, #+8]
   \   00000048   040094E5           LDR      R0,[R4, #+4]
   \   0000004C   9B0100EF           SWI      +411
   3907              EDIT_SetTextToFocused(ed_struct->ed_chatgui,ws);
   \   00000050   040094E5           LDR      R0,[R4, #+4]
   \   00000054   0510A0E1           MOV      R1,R5
   \   00000058   810100EF           SWI      +385
   3908          
   3909              FreeWS(ws);
   \   0000005C   0500A0E1           MOV      R0,R5
   \   00000060   290100EF           SWI      +297
   3910              GeneralFuncF1(1);
   \   00000064   1D0000EA           B        ??ClearLog_1
   3911            }
   3912            else
   3913            {
   3914          
   3915              if ((t=ed_struct->ed_contact))
   \                     ??ClearLog_0:
   \   00000068   005094E5           LDR      R5,[R4, #+0]
   \   0000006C   000055E3           CMP      R5,#+0
   \   00000070   1C00000A           BEQ      ??ClearLog_2
   3916              {
   3917                if (t->log)
   \   00000074   640095E5           LDR      R0,[R5, #+100]
   \   00000078   0060A0E3           MOV      R6,#+0
   \   0000007C   000050E3           CMP      R0,#+0
   \   00000080   1200000A           BEQ      ??ClearLog_3
   3918                {
   3919                  FreeLOGQ(&t->log);
   \   00000084   640085E2           ADD      R0,R5,#+100
   \   00000088   ........           BL       FreeLOGQ
   3920                  t->msg_count=0;
   \   0000008C   746085E5           STR      R6,[R5, #+116]
   3921                  if (ed_struct->ed_answer>=2&&ed_struct->ed_chatgui)
   \   00000090   080094E5           LDR      R0,[R4, #+8]
   \   00000094   020050E3           CMP      R0,#+2
   \   00000098   0C0000BA           BLT      ??ClearLog_3
   \   0000009C   040094E5           LDR      R0,[R4, #+4]
   \   000000A0   000050E3           CMP      R0,#+0
   \   000000A4   0900000A           BEQ      ??ClearLog_3
   \   000000A8   050000EA           B        ??ClearLog_4
   3922                  {
   3923                    while(ed_struct->ed_answer!=2)
   3924                    {
   3925                      EDIT_RemoveEditControl(ed_struct->ed_chatgui,1);
   \                     ??ClearLog_5:
   \   000000AC   040094E5           LDR      R0,[R4, #+4]
   \   000000B0   0110A0E3           MOV      R1,#+1
   \   000000B4   D10100EF           SWI      +465
   3926                      ed_struct->ed_answer--;
   \   000000B8   080094E5           LDR      R0,[R4, #+8]
   \   000000BC   010040E2           SUB      R0,R0,#+1
   \   000000C0   080084E5           STR      R0,[R4, #+8]
   3927                    }
   \                     ??ClearLog_4:
   \   000000C4   080094E5           LDR      R0,[R4, #+8]
   \   000000C8   020050E3           CMP      R0,#+2
   \   000000CC   F6FFFF1A           BNE      ??ClearLog_5
   3928                  }
   3929                }
   3930                t->isactive=0;		//by BoBa  18.06.07
   \                     ??ClearLog_3:
   \   000000D0   706085E5           STR      R6,[R5, #+112]
   3931                RecountMenu(t, 1);
   \   000000D4   0110A0E3           MOV      R1,#+1
   \   000000D8   0500A0E1           MOV      R0,R5
   \   000000DC   ........           BL       RecountMenu
   3932                GeneralFuncF1(1);
   \                     ??ClearLog_1:
   \   000000E0   0100A0E3           MOV      R0,#+1
   \   000000E4   3B0100EF           SWI      +315
   3933              }
   3934            }
   3935          }
   \                     ??ClearLog_2:
   \   000000E8   2CD08DE2           ADD      SP,SP,#+44       ;; stack cleaning
   \   000000EC   7080BDE8           POP      {R4-R6,PC}       ;; return
   3936          

   \                                 In segment CODE, align 4, keep-with-next
   3937          void ecmenu_ghook(void *data, int cmd)
   3938          {
   \                     ecmenu_ghook:
   \   00000000   00402DE9           PUSH     {LR}
   3939            if (cmd==0x0A)
   \   00000004   0A0051E3           CMP      R1,#+10
   \   00000008   0080BD18           POPNE    {PC}
   3940            {
   3941              DisableIDLETMR();
   \   0000000C   7F0100EF           SWI      +383
   3942            }
   3943          }
   \   00000010   0080BDE8           POP      {PC}             ;; return
   3944          
   3945          static MENUITEM_DESC ecmenu_ITEMS[EC_MNU_MAX]=
   3946          {
   3947            {NULL,NULL,LGP_NULL,0,NULL,MENU_FLAG3,MENU_FLAG2},
   3948            {NULL,NULL,LGP_NULL,0,NULL,MENU_FLAG3,MENU_FLAG2},
   3949            {NULL,NULL,LGP_NULL,0,NULL,MENU_FLAG3,MENU_FLAG2},
   3950            {NULL,NULL,LGP_NULL,0,NULL,MENU_FLAG3,MENU_FLAG2},
   3951            {NULL,NULL,LGP_NULL,0,NULL,MENU_FLAG3,MENU_FLAG2},
   3952            {NULL,NULL,LGP_NULL,0,NULL,MENU_FLAG3,MENU_FLAG2},
   3953            {NULL,NULL,LGP_NULL,0,NULL,MENU_FLAG3,MENU_FLAG2},
   3954            {NULL,NULL,LGP_NULL,0,NULL,MENU_FLAG3,MENU_FLAG2},
   3955            {NULL,NULL,LGP_NULL,0,NULL,MENU_FLAG3,MENU_FLAG2}
   3956          };
   3957          
   3958          extern void AddSmile(GUI *data);

   \                                 In segment DATA_C, align 4, align-sorted
   3959          static const MENUPROCS_DESC ecmenu_HNDLS[EC_MNU_MAX]=
   \                     ecmenu_HNDLS:
   \   00000000   ............       DC32 Quote, AddSmile, GetShortInfo, AddCurContact, SendAuthReq
   \              ............
   \              ............
   \              ....        
   \   00000014   ............       DC32 SendAuthGrant, OpenLogfile, ClearLog, RemoveCurContact
   \              ............
   \              ........    

   \                                 In segment DATA_I, align 4, align-sorted
   \                     contactlist_menuhdr:
   \   00000000                      DS8 20
   \   00000014                      REQUIRE `?<Initializer for contactlist_menuhdr>`
   \                     ecmenu_ITEMS:
   \   00000014                      DS8 252
   \   00000110                      REQUIRE `?<Initializer for ecmenu_ITEMS>`
   \                     S_ICONS:
   \   00000110                      DS8 116
   \   00000184                      REQUIRE `?<Initializer for S_ICONS>`
   \                     menu_sk:
   \   00000184                      DS8 24
   \   0000019C                      REQUIRE `?<Initializer for menu_sk>`
   \                     gipc:
   \   0000019C                      DS8 12
   \   000001A8                      REQUIRE `?<Initializer for gipc>`
   \                     tmr_gipc:
   \   000001A8                      DS8 12
   \   000001B4                      REQUIRE `?<Initializer for tmr_gipc>`
   \                     clmenu_sk:
   \   000001B4                      DS8 24
   \   000001CC                      REQUIRE `?<Initializer for clmenu_sk>`
   \   000001CC                      DS8 8
   \   000001D4                      REQUIRE `?<Initializer for sk>`
   \   000001D4                      DS8 8
   \   000001DC                      REQUIRE `?<Initializer for sk_cancel>`
   \                     maincsm_id:
   \   000001DC                      DS8 4
   \   000001E0                      REQUIRE `?<Initializer for maincsm_id>`
   \                     maingui_id:
   \   000001E0                      DS8 4
   \   000001E4                      REQUIRE `?<Initializer for maingui_id>`
   \                     SENDMSGCOUNT:
   \   000001E4                      DS8 4
   \   000001E8                      REQUIRE `?<Initializer for SENDMSGCOUNT>`
   \                     IsActiveUp:
   \   000001E8                      DS8 4
   \   000001EC                      REQUIRE `?<Initializer for IsActiveUp>`
   \                     ews:
   \   000001EC                      DS8 4
   \   000001F0                      REQUIRE `?<Initializer for ews>`
   \                     silenthide:
   \   000001F0                      DS8 4
   \   000001F4                      REQUIRE `?<Initializer for silenthide>`
   \                     disautorecconect:
   \   000001F4                      DS8 4
   \   000001F8                      REQUIRE `?<Initializer for disautorecconect>`
   \                     Is_Vibra_Enabled:
   \   000001F8                      DS8 4
   \   000001FC                      REQUIRE `?<Initializer for Is_Vibra_Enabled>`
   \                     Is_Sounds_Enabled:
   \   000001FC                      DS8 4
   \   00000200                      REQUIRE `?<Initializer for Is_Sounds_Enabled>`
   \                     Is_Show_Offline:
   \   00000200                      DS8 4
   \   00000204                      REQUIRE `?<Initializer for Is_Show_Offline>`
   \                     Is_Show_Groups:
   \   00000204                      DS8 4
   \   00000208                      REQUIRE `?<Initializer for Is_Show_Groups>`
   \                     CurrentStatus:
   \   00000208                      DS8 4
   \   0000020C                      REQUIRE `?<Initializer for CurrentStatus>`
   \                     CurrentXStatus:
   \   0000020C                      DS8 4
   \   00000210                      REQUIRE `?<Initializer for CurrentXStatus>`
   \                     CurrentPrivateStatus:
   \   00000210                      DS8 4
   \   00000214                      REQUIRE `?<Initializer for CurrentPrivateStatus>`
   \                     vibra_count:
   \   00000214                      DS8 4
   \   00000218                      REQUIRE `?<Initializer for vibra_count>`
   \                     templates_chars:
   \   00000218                      DS8 4
   \   0000021C                      REQUIRE `?<Initializer for templates_chars>`
   \                     templates_lines:
   \   0000021C                      DS8 4
   \   00000220                      REQUIRE `?<Initializer for templates_lines>`
   \                     RXstate:
   \   00000220                      DS8 4
   \   00000224                      REQUIRE `?<Initializer for RXstate>`
   \                     connect_state:
   \   00000224                      DS8 4
   \   00000228                      REQUIRE `?<Initializer for connect_state>`
   \                     sock:
   \   00000228                      DS8 4
   \   0000022C                      REQUIRE `?<Initializer for sock>`
   \                     TOTALRECEIVED:
   \   0000022C                      DS8 4
   \   00000230                      REQUIRE `?<Initializer for TOTALRECEIVED>`
   \                     TOTALSENDED:
   \   00000230                      DS8 4
   \   00000234                      REQUIRE `?<Initializer for TOTALSENDED>`
   \                     ALLTOTALRECEIVED:
   \   00000234                      DS8 4
   \   00000238                      REQUIRE `?<Initializer for ALLTOTALRECEIVED>`
   \                     ALLTOTALSENDED:
   \   00000238                      DS8 4
   \   0000023C                      REQUIRE `?<Initializer for ALLTOTALSENDED>`
   \                     sendq_l:
   \   0000023C                      DS8 4
   \   00000240                      REQUIRE `?<Initializer for sendq_l>`
   \                     sendq_p:
   \   00000240                      DS8 4
   \   00000244                      REQUIRE `?<Initializer for sendq_p>`
   \                     is_gprs_online:
   \   00000244                      DS8 4
   \   00000248                      REQUIRE `?<Initializer for is_gprs_online>`
   \                     total_unread:
   \   00000248                      DS8 4
   \   0000024C                      REQUIRE `?<Initializer for total_unread>`
   \                     cltop:
   \   0000024C                      DS8 4
   \   00000250                      REQUIRE `?<Initializer for cltop>`
   \                     GROUP_CACHE:
   \   00000250                      DS8 4
   \   00000254                      REQUIRE `?<Initializer for GROUP_CACHE>`
   \                     contactlist_menu_id:
   \   00000254                      DS8 4
   \   00000258                      REQUIRE `?<Initializer for contactlist_menu_id>`
   \                     edchat_id:
   \   00000258                      DS8 4
   \   0000025C                      REQUIRE `?<Initializer for edchat_id>`
   \   0000025C                      DS8 4
   \   00000260                      REQUIRE `?<Initializer for prev_clmenu_itemcount>`
   \                     tenseconds_to_ping:
   \   00000260                      DS8 4
   \   00000264                      REQUIRE `?<Initializer for tenseconds_to_ping>`
   \                     DNR_ID:
   \   00000264                      DS8 4
   \   00000268                      REQUIRE `?<Initializer for DNR_ID>`
   \                     DNR_TRIES:
   \   00000268                      DS8 4
   \   0000026C                      REQUIRE `?<Initializer for DNR_TRIES>`
   \                     host_counter:
   \   0000026C                      DS8 4
   \   00000270                      REQUIRE `?<Initializer for host_counter>`
   \                     time_to_stop_t9:
   \   00000270                      DS8 4
   \   00000274                      REQUIRE `?<Initializer for time_to_stop_t9>`
   \                     old_ed_redraw:
   \   00000274                      DS8 4
   \   00000278                      REQUIRE `?<Initializer for old_ed_redraw>`
   \   00000278                      DS8 64
   \   000002B8                      REQUIRE `?<Initializer for methods>`
   \                     elf_path:
   \   000002B8                      DS8 256
   \   000003B8                      REQUIRE `?<Initializer for elf_path>`
   \                     ContactT9Key:
   \   000003B8                      DS8 32
   \   000003D8                      REQUIRE `?<Initializer for ContactT9Key>`
   \                     logmsg:
   \   000003D8                      DS8 256
   \   000004D8                      REQUIRE `?<Initializer for logmsg>`
   \                     tmr_illumination:
   \   000004D8                      DS8 16
   \   000004E8                      REQUIRE `?<Initializer for tmr_illumination>`
   \                     tmr_vibra:
   \   000004E8                      DS8 16
   \   000004F8                      REQUIRE `?<Initializer for tmr_vibra>`
   \                     reconnect_tmr:
   \   000004F8                      DS8 16
   \   00000508                      REQUIRE `?<Initializer for reconnect_tmr>`
   \                     tmr_active:
   \   00000508                      DS8 16
   \   00000518                      REQUIRE `?<Initializer for tmr_active>`
   \                     clm_hdr_text:
   \   00000518                      DS8 48
   \   00000548                      REQUIRE `?<Initializer for clm_hdr_text>`
   \   00000548                      DS8 32
   \   00000568                      REQUIRE `?<Initializer for def_clm_hdr_text>`
   \   00000568                      DS8 32
   \   00000588                      REQUIRE `?<Initializer for key_clm_hdr_text>`
   \                     clmenu_sk_r:
   \   00000588                      DS8 16
   \   00000598                      REQUIRE `?<Initializer for clmenu_sk_r>`
   \   00000598                      DS8 32
   \   000005B8                      REQUIRE `?<Initializer for def_clmenu_sk_r>`
   \   000005B8                      DS8 32
   \   000005D8                      REQUIRE `?<Initializer for key_clmenu_sk_r>`
   \                     hostname:
   \   000005D8                      DS8 128
   \   00000658                      REQUIRE `?<Initializer for hostname>`
   3960          {
   3961            Quote,
   3962            AddSmile,
   3963            GetShortInfo,
   3964            AddCurContact,
   3965            SendAuthReq,
   3966            SendAuthGrant,
   3967            OpenLogfile,
   3968            ClearLog,
   3969            RemoveCurContact
   3970          };
   3971          
   3972          char ecm_contactname[64];
   \                     ecm_contactname:
   \   00000658                      DS8 64
   \   00000698                      REQUIRE `?<Initializer for ecm_contactname>`
   3973          

   \                                 In segment DATA_C, align 4, align-sorted
   3974          static const HEADER_DESC ecmenu_HDR={0,0,NULL,NULL,NULL,(int)ecm_contactname,LGP_NULL};
   \                     ecmenu_HDR:
   \   00000000   000000000000       DC16 0, 0, 0, 0
   \              0000        
   \   00000008   00000000....       DC32 0H, ecm_contactname, 2147483647
   \              ....FFFFFF7F
   \   00000014   080000000000       DC32 8, 0H, ecmenu_ghook, 0H, menusoftkeys, menu_skt, 0, 0H
   \              0000........
   \              00000000....
   \              ............
   \              000000000000
   \              0000        
   \   00000034   ............       DC32 ecmenu_ITEMS, ecmenu_HNDLS, 9
   \              ....09000000
   3975          
   3976          static const MENU_DESC ecmenu_STRUCT=
   3977          {
   3978            8,NULL,ecmenu_ghook,NULL,
   3979            menusoftkeys,
   3980            &menu_skt,
   3981            0,
   3982            NULL,
   3983            ecmenu_ITEMS,
   3984            ecmenu_HNDLS,
   3985            EC_MNU_MAX
   3986          };
   3987          

   \                                 In segment CODE, align 4, keep-with-next
   3988          void ec_menu(EDCHAT_STRUCT *ed_struct)
   3989          {
   \                     ec_menu:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   28D04DE2           SUB      SP,SP,#+40
   \   00000008   0040A0E1           MOV      R4,R0
   3990            CLIST *t;
   3991            int to_remove[EC_MNU_MAX+1];
   3992            int remove=0;
   3993            if ((t=ed_struct->ed_contact))
   \   0000000C   000094E5           LDR      R0,[R4, #+0]
   \   00000010   000050E3           CMP      R0,#+0
   \   00000014   5800000A           BEQ      ??ec_menu_0
   3994            {
   3995              if (t->name)
   \   00000018   ........           LDR      R5,??DataTable167  ;; contactlist_menuhdr
   \   0000001C   5830A0E3           MOV      R3,#+88
   \   00000020   603E83E3           ORR      R3,R3,#0x600
   \   00000024   141090E2           ADDS     R1,R0,#+20
   \   00000028   0300000A           BEQ      ??ec_menu_1
   3996              {
   3997                strncpy(ecm_contactname,t->name,63);
   \   0000002C   3F20A0E3           MOV      R2,#+63
   \   00000030   050083E0           ADD      R0,R3,R5
   \   00000034   160100EF           SWI      +278
   \   00000038   030000EA           B        ??ec_menu_2
   3998              }
   3999              else
   4000              {
   4001                sprintf(ecm_contactname,"%u",t->uin);
   \                     ??ec_menu_1:
   \   0000003C   0C2090E5           LDR      R2,[R0, #+12]
   \   00000040   4F1F8FE2           ADR      R1,??ec_menu_3   ;; "%u"
   \   00000044   050083E0           ADD      R0,R3,R5
   \   00000048   160000EF           SWI      +22
   4002              }
   4003              if (EDIT_GetFocus(ed_struct->ed_chatgui)==ed_struct->ed_answer)
   \                     ??ec_menu_2:
   \   0000004C   040094E5           LDR      R0,[R4, #+4]
   \   00000050   0160A0E3           MOV      R6,#+1
   \   00000054   820100EF           SWI      +386
   \   00000058   082094E5           LDR      R2,[R4, #+8]
   \   0000005C   0010A0E3           MOV      R1,#+0
   \   00000060   020050E1           CMP      R0,R2
   4004              {
   4005                to_remove[++remove]=0;
   \   00000064   04108D05           STREQ    R1,[SP, #+4]
   4006              }
   4007              else
   4008              {
   4009                to_remove[++remove]=1;
   \   00000068   0120A013           MOVNE    R2,#+1
   \   0000006C   04208D15           STRNE    R2,[SP, #+4]
   4010              }
   4011          
   4012              if (ed_struct->ed_answer<=2) to_remove[++remove]=7;
   \   00000070   080094E5           LDR      R0,[R4, #+8]
   \   00000074   030050E3           CMP      R0,#+3
   \   00000078   0720A0B3           MOVLT    R2,#+7
   \   0000007C   08208DB5           STRLT    R2,[SP, #+8]
   4013              if (!ed_struct->ed_contact || connect_state!=3)
   \   00000080   000094E5           LDR      R0,[R4, #+0]
   \   00000084   0260A0B3           MOVLT    R6,#+2
   \   00000088   000050E3           CMP      R0,#+0
   \   0000008C   0200000A           BEQ      ??ec_menu_4
   \   00000090   240295E5           LDR      R0,[R5, #+548]
   \   00000094   030050E3           CMP      R0,#+3
   \   00000098   0D00000A           BEQ      ??ec_menu_5
   4014              {
   4015                to_remove[++remove]=2;
   \                     ??ec_menu_4:
   \   0000009C   010086E2           ADD      R0,R6,#+1
   \   000000A0   0D20A0E1           MOV      R2,SP
   \   000000A4   0230A0E3           MOV      R3,#+2
   \   000000A8   003182E7           STR      R3,[R2, +R0, LSL #+2]
   4016                to_remove[++remove]=3;
   \   000000AC   010080E2           ADD      R0,R0,#+1
   \   000000B0   0330A0E3           MOV      R3,#+3
   \   000000B4   003182E7           STR      R3,[R2, +R0, LSL #+2]
   4017                to_remove[++remove]=4;
   \   000000B8   010080E2           ADD      R0,R0,#+1
   \   000000BC   0430A0E3           MOV      R3,#+4
   \   000000C0   003182E7           STR      R3,[R2, +R0, LSL #+2]
   4018                to_remove[++remove]=5;
   \   000000C4   016080E2           ADD      R6,R0,#+1
   \   000000C8   0D00A0E1           MOV      R0,SP
   \   000000CC   0520A0E3           MOV      R2,#+5
   \   000000D0   062180E7           STR      R2,[R0, +R6, LSL #+2]
   4019              }
   4020          
   4021              patch_header(&ecmenu_HDR);
   \                     ??ec_menu_5:
   \   000000D4   AC709FE5           LDR      R7,??ec_menu_3+0x4  ;; ecmenu_HDR
   \   000000D8   1800A0E3           MOV      R0,#+24
   \   000000DC   B010C7E1           STRH     R1,[R7, #+0]
   \   000000E0   B200C7E1           STRH     R0,[R7, #+2]
   \   000000E4   888100EF           SWI      +33160
   \   000000E8   010040E2           SUB      R0,R0,#+1
   \   000000EC   B400C7E1           STRH     R0,[R7, #+4]
   \   000000F0   8A8100EF           SWI      +33162
   \   000000F4   170080E2           ADD      R0,R0,#+23
   \   000000F8   B600C7E1           STRH     R0,[R7, #+6]
   4022              to_remove[0]=remove;
   4023              
   4024              //Инициализация ленгпака
   4025              ecmenu_ITEMS[0].lgp_id_small=(int)lgpData[LGP_MnuQuote]; 
   \   000000FC   ........           LDR      R0,??DataTable168  ;; lgpData
   \   00000100   00608DE5           STR      R6,[SP, #+0]
   \   00000104   881090E5           LDR      R1,[R0, #+136]
   4026              ecmenu_ITEMS[1].lgp_id_small=(int)lgpData[LGP_MnuAddSml];
   4027              ecmenu_ITEMS[2].lgp_id_small=(int)lgpData[LGP_MnuShInfo]; 
   4028              ecmenu_ITEMS[3].lgp_id_small=(int)lgpData[LGP_MnuAddRen];
   4029              ecmenu_ITEMS[4].lgp_id_small=(int)lgpData[LGP_MnuSAuthReq]; 
   4030              ecmenu_ITEMS[5].lgp_id_small=(int)lgpData[LGP_MnuSAuthGrt]; 
   4031              ecmenu_ITEMS[6].lgp_id_small=(int)lgpData[LGP_MnuOpenLog]; 
   4032              ecmenu_ITEMS[7].lgp_id_small=(int)lgpData[LGP_MnuClearCht]; 
   4033              ecmenu_ITEMS[8].lgp_id_small=(int)lgpData[LGP_MnuRemCont]; 
   4034            
   4035              CreateMenu(0,0,&ecmenu_STRUCT,&ecmenu_HDR,0,EC_MNU_MAX,ed_struct,to_remove);
   \   00000108   0730A0E1           MOV      R3,R7
   \   0000010C   181085E5           STR      R1,[R5, #+24]
   \   00000110   901090E5           LDR      R1,[R0, #+144]
   \   00000114   142087E2           ADD      R2,R7,#+20
   \   00000118   341085E5           STR      R1,[R5, #+52]
   \   0000011C   941090E5           LDR      R1,[R0, #+148]
   \   00000120   501085E5           STR      R1,[R5, #+80]
   \   00000124   981090E5           LDR      R1,[R0, #+152]
   \   00000128   6C1085E5           STR      R1,[R5, #+108]
   \   0000012C   9C1090E5           LDR      R1,[R0, #+156]
   \   00000130   881085E5           STR      R1,[R5, #+136]
   \   00000134   A01090E5           LDR      R1,[R0, #+160]
   \   00000138   A41085E5           STR      R1,[R5, #+164]
   \   0000013C   A41090E5           LDR      R1,[R0, #+164]
   \   00000140   C01085E5           STR      R1,[R5, #+192]
   \   00000144   A81090E5           LDR      R1,[R0, #+168]
   \   00000148   8C0090E5           LDR      R0,[R0, #+140]
   \   0000014C   DC1085E5           STR      R1,[R5, #+220]
   \   00000150   F80085E5           STR      R0,[R5, #+248]
   \   00000154   0D00A0E1           MOV      R0,SP
   \   00000158   01002DE9           PUSH     {R0}
   \   0000015C   10002DE9           PUSH     {R4}
   \   00000160   0010A0E3           MOV      R1,#+0
   \   00000164   0900A0E3           MOV      R0,#+9
   \   00000168   01002DE9           PUSH     {R0}
   \   0000016C   0000A0E3           MOV      R0,#+0
   \   00000170   01002DE9           PUSH     {R0}
   \   00000174   520100EF           SWI      +338
   \   00000178   10D08DE2           ADD      SP,SP,#+16
   4036            }
   4037          }
   \                     ??ec_menu_0:
   \   0000017C   28D08DE2           ADD      SP,SP,#+40       ;; stack cleaning
   \   00000180   F080BDE8           POP      {R4-R7,PC}       ;; return
   \                     ??ec_menu_3:
   \   00000184   25750000           DC8      "%u",+0
   \   00000188   ........           DC32     ecmenu_HDR
   4038          
   4039          

   \                                 In segment CODE, align 4, keep-with-next
   4040          void AskNickAndAddContact(EDCHAT_STRUCT *ed_struct)
   4041          {
   4042            CreateAddContactGrpDialog(ed_struct->ed_contact);
   \                     AskNickAndAddContact:
   \   00000000   000090E5           LDR      R0,[R0, #+0]
   \   00000004   ........           _BF      CreateAddContactGrpDialog,??CreateAddContactGrpDialog??rA  ;; tailcall
   4043          }
   4044          

   \                                 In segment CODE, align 4, keep-with-next
   4045          void AddSmile(GUI *data)
   4046          {
   \                     AddSmile:
   \   00000000   00402DE9           PUSH     {LR}
   4047            EDCHAT_STRUCT *ed_struct=MenuGetUserPointer(data);
   \   00000004   E00100EF           SWI      +480
   4048            CreateSmileSelectGUI(ed_struct);
   \   00000008   ........           _BLF     CreateSmileSelectGUI,??CreateSmileSelectGUI??rA
   4049            GeneralFuncF1(1);
   \   0000000C   0100A0E3           MOV      R0,#+1
   \   00000010   3B0100EF           SWI      +315
   4050          }
   \   00000014   0080BDE8           POP      {PC}             ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   ........           DC32     contactlist_menuhdr + 520

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable7:
   \   00000000   ........           DC32     UIN

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable8:
   \   00000000   ........           DC32     def_setting

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable13:
   \   00000000   ........           DC32     VIBR_TYPE

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable19:
   \   00000000   ........           DC32     TEMPLATES_PATH

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable26:
   \   00000000   ........           DC32     lgpData

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable27:
   \   00000000   ........           DC32     contactlist_menuhdr

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable29:
   \   00000000   ........           DC32     HISTORY_BUFFER

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable31:
   \   00000000   ........           DC32     contactlist_menuhdr + 588

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable32:
   \   00000000   ........           DC32     Canvas

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable35:
   \   00000000   ........           DC32     lgpData

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable36:
   \   00000000   ........           DC32     do_reconnect

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable37:
   \   00000000   ........           DC32     RECONNECT_TIME

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable41:
   \   00000000   ........           DC32     contactlist_menuhdr

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable43:
   \   00000000   ........           DC32     UIN

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable46:
   \   00000000   ........           DC32     HISTORY_BUFFER

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable49:
   \   00000000   ........           DC32     ED_X_FONT_SIZE

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable51:
   \   00000000   ........           DC32     X_COLOR

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable52:
   \   00000000   ........           DC32     O_ED_X_FONT_SIZE

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable53:
   \   00000000   ........           DC32     O_X_COLOR

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable61:
   \   00000000   ........           DC32     O_ED_FONT_SIZE

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable62:
   \   00000000   ........           DC32     ED_FONT_SIZE

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable64:
   \   00000000   ........           DC32     ACK_COLOR

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable65:
   \   00000000   ........           DC32     O_TO_COLOR

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable66:
   \   00000000   ........           DC32     O_I_COLOR

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable67:
   \   00000000   ........           DC32     TO_COLOR

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable68:
   \   00000000   ........           DC32     I_COLOR

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable69:
   \   00000000   ........           DC32     UNACK_COLOR

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable70:
   \   00000000   ........           DC32     O_ED_H_FONT_SIZE

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable71:
   \   00000000   ........           DC32     ED_H_FONT_SIZE

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable72:
   \   00000000   ........           DC32     contactlist_menuhdr + 520

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable75:
   \   00000000   ........           DC32     SendAnswer

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable78:
   \   00000000   ........           DC32     contactlist_menuhdr

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable81:
   \   00000000   ........           DC32     VIBR_ON_CONNECT

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable82:
   \   00000000   ........           DC32     HISTORY_BUFFER

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable83:
   \   00000000   ........           DC32     VIBR_TYPE

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable87:
   \   00000000   ........           DC32     Canvas

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable94:
   \   00000000   ........           DC32     process_active_timer

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable102:
   \   00000000   ........           DC32     contactlist_menuhdr

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable105:
   \   00000000   ........           DC32     Canvas

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable108:
   \   00000000   ........           DC32     do_reconnect

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable110:
   \   00000000   ........           DC32     create_connect

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable111:
   \   00000000   ........           DC32     VIBR_ON_CONNECT

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable112:
   \   00000000   ........           DC32     lgpData

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable114:
   \   00000000   ........           DC32     SendAnswer

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable115:
   \   00000000   ........           DC32     end_socket

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable116:
   \   00000000   ........           DC32     ClearSendQ

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable117:
   \   00000000   ........           DC32     RECONNECT_TIME

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable120:
   \   00000000   ........           DC32     UIN

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable121:
   \   00000000   ........           DC32     successed_config_filename

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable122:
   \   00000000   ........           DC32     ElfKiller

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable124:
   \   00000000   ........           DC32     contactlist_menuhdr + 588

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable125:
   \   00000000   ........           DC32     contactlist_menuhdr

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable128:
   \   00000000   ........           DC32     `?<Constant "abcdefghijklmnopqrstu...">`

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable132:
   \   00000000   ........           DC32     TEMPLATES_PATH

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable135:
   \   00000000   ........           DC32     lgpData

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable136:
   \   00000000   ........           DC32     contactlist_menuhdr

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable137:
   \   00000000   ........           DC32     ED_X_FONT_SIZE

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable138:
   \   00000000   ........           DC32     ED_H_FONT_SIZE

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable139:
   \   00000000   ........           DC32     I_COLOR

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable140:
   \   00000000   ........           DC32     X_COLOR

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable141:
   \   00000000   ........           DC32     O_ED_X_FONT_SIZE

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable142:
   \   00000000   ........           DC32     O_X_COLOR

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable143:
   \   00000000   ........           DC32     ACK_COLOR

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable144:
   \   00000000   ........           DC32     O_I_COLOR

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable145:
   \   00000000   ........           DC32     O_TO_COLOR

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable146:
   \   00000000   ........           DC32     O_ED_H_FONT_SIZE

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable147:
   \   00000000   ........           DC32     TO_COLOR

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable148:
   \   00000000   ........           DC32     UNACK_COLOR

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable149:
   \   00000000   ........           DC32     O_ED_FONT_SIZE

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable151:
   \   00000000   ........           DC32     ED_FONT_SIZE

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable153:
   \   00000000   ........           DC32     `?<Constant "\\\\">`

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable162:
   \   00000000   ........           DC32     contactlist_menuhdr + 548

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable164:
   \   00000000   ........           DC32     `?<Constant "\\\\">` + 2

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable165:
   \   00000000   ........           DC32     SendAnswer

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable166:
   \   00000000   ........           DC32     UIN

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable167:
   \   00000000   ........           DC32     contactlist_menuhdr

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable168:
   \   00000000   ........           DC32     lgpData

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for contactlist_menuhdr>`:
   \   00000000   000000000000       DC16 0, 0, 0, 0
   \              0000        
   \   00000008   ............       DC32 S_ICONS + 4CH, clm_hdr_text, 2147483647
   \              ....FFFFFF7F
   \                     `?<Initializer for ecmenu_ITEMS>`:
   \   00000014   000000000000       DC32 0H, 0, 2147483647, 0, 0H, 3, 1442, 0H, 0, 2147483647, 0, 0H, 3
   \              0000FFFFFF7F
   \              000000000000
   \              000003000000
   \              A20500000000
   \              000000000000
   \              FFFFFF7F0000
   \              000000000000
   \              03000000    
   \   00000048   A20500000000       DC32 1442, 0H, 0, 2147483647, 0, 0H, 3, 1442, 0H, 0, 2147483647, 0, 0H
   \              000000000000
   \              FFFFFF7F0000
   \              000000000000
   \              03000000A205
   \              000000000000
   \              00000000FFFF
   \              FF7F00000000
   \              00000000    
   \   0000007C   03000000A205       DC32 3, 1442, 0H, 0, 2147483647, 0, 0H, 3, 1442, 0H, 0, 2147483647, 0
   \              000000000000
   \              00000000FFFF
   \              FF7F00000000
   \              000000000300
   \              0000A2050000
   \              000000000000
   \              0000FFFFFF7F
   \              00000000    
   \   000000B0   000000000300       DC32 0H, 3, 1442, 0H, 0, 2147483647, 0, 0H, 3, 1442, 0H, 0, 2147483647
   \              0000A2050000
   \              000000000000
   \              0000FFFFFF7F
   \              000000000000
   \              000003000000
   \              A20500000000
   \              000000000000
   \              FFFFFF7F    
   \   000000E4   000000000000       DC32 0, 0H, 3, 1442, 0H, 0, 2147483647, 0, 0H, 3, 1442
   \              000003000000
   \              A20500000000
   \              000000000000
   \              FFFFFF7F0000
   \              000000000000
   \              03000000A205
   \              0000        
   \                     `?<Initializer for S_ICONS>`:
   \   00000110   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000120   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000130   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000140   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000150   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000160   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000170   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000        
   \                     `?<Initializer for menu_sk>`:
   \   00000184   18000000           DC16 24, 0
   \   00000188   00000000           DC32 0
   \   0000018C   01000000           DC16 1, 0
   \   00000190   00000000           DC32 0
   \   00000194   3D000000           DC16 61, 0
   \   00000198   FBC0FF7F           DC32 2147467515
   \                     `?<Initializer for gipc>`:
   \   0000019C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \                     `?<Initializer for tmr_gipc>`:
   \   000001A8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \                     `?<Initializer for clmenu_sk>`:
   \   000001B4   18000000           DC16 24, 0
   \   000001B8   00000000           DC32 0
   \   000001BC   01000000           DC16 1, 0
   \   000001C0   ........           DC32 clmenu_sk_r
   \   000001C4   3D000000           DC16 61, 0
   \   000001C8   FBC0FF7F           DC32 2147467515
   \                     `?<Initializer for sk>`:
   \   000001CC   FF0F0000           DC16 4095, 0
   \   000001D0   00000000           DC32 0
   \                     `?<Initializer for sk_cancel>`:
   \   000001D4   F00F0000           DC16 4080, 0
   \   000001D8   00000000           DC32 0
   \                     `?<Initializer for maincsm_id>`:
   \   000001DC   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for maingui_id>`:
   \   000001E0   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for SENDMSGCOUNT>`:
   \   000001E4   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for IsActiveUp>`:
   \   000001E8   00000000           DC32 0
   \                     `?<Initializer for ews>`:
   \   000001EC   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for silenthide>`:
   \   000001F0   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for disautorecconect>`:
   \   000001F4   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for Is_Vibra_Enabled>`:
   \   000001F8   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for Is_Sounds_Enabled>`:
   \   000001FC   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for Is_Show_Offline>`:
   \   00000200   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for Is_Show_Groups>`:
   \   00000204   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for CurrentStatus>`:
   \   00000208   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for CurrentXStatus>`:
   \   0000020C   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for CurrentPrivateStatus>`:
   \   00000210   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for vibra_count>`:
   \   00000214   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for templates_chars>`:
   \   00000218   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for templates_lines>`:
   \   0000021C   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for RXstate>`:
   \   00000220   F6FFFFFF           DC32 -10
   \                     `?<Initializer for connect_state>`:
   \   00000224   00000000           DC32 0
   \                     `?<Initializer for sock>`:
   \   00000228   FFFFFFFF           DC32 -1
   \                     `?<Initializer for TOTALRECEIVED>`:
   \   0000022C   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for TOTALSENDED>`:
   \   00000230   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for ALLTOTALRECEIVED>`:
   \   00000234   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for ALLTOTALSENDED>`:
   \   00000238   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for sendq_l>`:
   \   0000023C   00000000           DC32 0
   \                     `?<Initializer for sendq_p>`:
   \   00000240   00000000           DC32 0H
   \                     `?<Initializer for is_gprs_online>`:
   \   00000244   01000000           DC32 1
   \                     `?<Initializer for total_unread>`:
   \   00000248   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for cltop>`:
   \   0000024C   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for GROUP_CACHE>`:
   \   00000250   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for contactlist_menu_id>`:
   \   00000254   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for edchat_id>`:
   \   00000258   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for prev_clmenu_itemcount>`:
   \   0000025C   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for tenseconds_to_ping>`:
   \   00000260   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for DNR_ID>`:
   \   00000264   00000000           DC32 0
   \                     `?<Initializer for DNR_TRIES>`:
   \   00000268   03000000           DC32 3
   \                     `?<Initializer for host_counter>`:
   \   0000026C   00000000           DC32 0
   \                     `?<Initializer for time_to_stop_t9>`:
   \   00000270   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for old_ed_redraw>`:
   \   00000274   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for methods>`:
   \   00000278   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000288   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000298   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000002A8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \                     `?<Initializer for elf_path>`:
   \   000002B8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000002C8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000002D8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000002E8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000002F8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000308   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000318   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000328   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000338   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000348   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000358   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000368   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000378   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000388   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000398   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000003A8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \                     `?<Initializer for ContactT9Key>`:
   \   000003B8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000003C8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \                     `?<Initializer for logmsg>`:
   \   000003D8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000003E8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000003F8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000408   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000418   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000428   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000438   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000448   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000458   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000468   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000478   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000488   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000498   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000004A8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000004B8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000004C8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \                     `?<Initializer for tmr_illumination>`:
   \   000004D8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \                     `?<Initializer for tmr_vibra>`:
   \   000004E8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \                     `?<Initializer for reconnect_tmr>`:
   \   000004F8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \                     `?<Initializer for tmr_active>`:
   \   00000508   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \                     `?<Initializer for clm_hdr_text>`:
   \   00000518   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000528   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000538   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \                     `?<Initializer for def_clm_hdr_text>`:
   \   00000548   00                 DC8 ""
   \   00000549   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000559   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000      
   \                     `?<Initializer for key_clm_hdr_text>`:
   \   00000568   00                 DC8 ""
   \   00000569   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000579   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000      
   \                     `?<Initializer for clmenu_sk_r>`:
   \   00000588   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \                     `?<Initializer for def_clmenu_sk_r>`:
   \   00000598   00                 DC8 ""
   \   00000599   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000005A9   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000      
   \                     `?<Initializer for key_clmenu_sk_r>`:
   \   000005B8   00                 DC8 ""
   \   000005B9   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000005C9   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000      
   \                     `?<Initializer for hostname>`:
   \   000005D8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000005E8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000005F8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000608   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000618   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000628   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000638   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000648   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \                     `?<Initializer for ecm_contactname>`:
   \   00000658   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000668   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000678   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000688   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "work.png">`:
   \   00000000   776F726B2E70       DC8 "work.png"
   \              6E6700      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "lunch.png">`:
   \   00000000   6C756E63682E       DC8 "lunch.png"
   \              706E6700    
   \   0000000A   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "home.png">`:
   \   00000000   686F6D652E70       DC8 "home.png"
   \              6E6700      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "evil.png">`:
   \   00000000   6576696C2E70       DC8 "evil.png"
   \              6E6700      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "depression.png">`:
   \   00000000   646570726573       DC8 "depression.png"
   \              73696F6E2E70
   \              6E6700      
   \   0000000F   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "dnd.png">`:
   \   00000000   646E642E706E       DC8 "dnd.png"
   \              6700        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "occupied.png">`:
   \   00000000   6F6363757069       DC8 "occupied.png"
   \              65642E706E67
   \              00          
   \   0000000D   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "na.png">`:
   \   00000000   6E612E706E67       DC8 "na.png"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "away.png">`:
   \   00000000   617761792E70       DC8 "away.png"
   \              6E6700      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "invisible.png">`:
   \   00000000   696E76697369       DC8 "invisible.png"
   \              626C652E706E
   \              6700        
   \   0000000E   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "offline.png">`:
   \   00000000   6F66666C696E       DC8 "offline.png"
   \              652E706E6700

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "%02d:%02d %02d-%02d %s:">`:
   \   00000000   253032643A25       DC8 "%02d:%02d %02d-%02d %s:"
   \              303264202530
   \              32642D253032
   \              642025733A00
   \   00000018   253032643A25       DC8 "%02d:%02d %02d-%02d %s:\015\012"
   \              303264202530
   \              32642D253032
   \              642025733A0D
   \              0A00        
   \   00000032   0000               DC8 0, 0

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   3A0A00             DC8 ":\012"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "abcdefghijklmnopqrstu...">`:
   \   00000000   616263646566       DC8 61H, 62H, 63H, 64H, 65H, 66H, 67H, 68H
   \              6768        
   \   00000008   696A6B6C6D6E       DC8 69H, 6AH, 6BH, 6CH, 6DH, 6EH, 6FH, 70H
   \              6F70        
   \   00000010   717273747576       DC8 71H, 72H, 73H, 74H, 75H, 76H, 77H, 78H
   \              7778        
   \   00000018   797A41424344       DC8 79H, 7AH, 41H, 42H, 43H, 44H, 45H, 46H
   \              4546        
   \   00000020   4748494A4B4C       DC8 47H, 48H, 49H, 4AH, 4BH, 4CH, 4DH, 4EH
   \              4D4E        
   \   00000028   4F5051525354       DC8 4FH, 50H, 51H, 52H, 53H, 54H, 55H, 56H
   \              5556        
   \   00000030   5758595A3031       DC8 57H, 58H, 59H, 5AH, 30H, 31H, 32H, 33H
   \              3233        
   \   00000038   343536373839       DC8 34H, 35H, 36H, 37H, 38H, 39H, 24H, 2DH
   \              242D        
   \   00000040   5F2E2B212A27       DC8 5FH, 2EH, 2BH, 21H, 2AH, 27H, 28H, 29H
   \              2829        
   \   00000048   2C253B3A4026       DC8 2CH, 25H, 3BH, 3AH, 40H, 26H, 3DH, 2FH
   \              3D2F        
   \   00000050   3F23E0E1E2E3       DC8 3FH, 23H, 0E0H, 0E1H, 0E2H, 0E3H, 0E4H, 0E5H
   \              E4E5        
   \   00000058   B8E6E7E8E9EA       DC8 0B8H, 0E6H, 0E7H, 0E8H, 0E9H, 0EAH, 0EBH, 0ECH
   \              EBEC        
   \   00000060   EDEEEFF0F1F2       DC8 0EDH, 0EEH, 0EFH, 0F0H, 0F1H, 0F2H, 0F3H, 0F4H
   \              F3F4        
   \   00000068   F5F6F7F8F9FA       DC8 0F5H, 0F6H, 0F7H, 0F8H, 0F9H, 0FAH, 0FBH, 0FCH
   \              FBFC        
   \   00000070   FDFEFFC0C1C2       DC8 0FDH, 0FEH, 0FFH, 0C0H, 0C1H, 0C2H, 0C3H, 0C4H
   \              C3C4        
   \   00000078   C5A8C6C7C8C9       DC8 0C5H, 0A8H, 0C6H, 0C7H, 0C8H, 0C9H, 0CAH, 0CBH
   \              CACB        
   \   00000080   CCCDCECFD0D1       DC8 0CCH, 0CDH, 0CEH, 0CFH, 0D0H, 0D1H, 0D2H, 0D3H
   \              D2D3        
   \   00000088   D4D5D6D7D8D9       DC8 0D4H, 0D5H, 0D6H, 0D7H, 0D8H, 0D9H, 0DAH, 0DBH
   \              DADB        
   \   00000090   DCDDDEDF7E00       DC8 0DCH, 0DDH, 0DEH, 0DFH, 7EH, 0
   \   00000096   0000               DC8 0, 0
   \   00000098   687474703A2F       DC8 "http://"
   \              2F00        
   \   000000A0   7777772E00         DC8 "www."
   \   000000A5   000000             DC8 0, 0, 0
   \   000000A8   616263646566       DC8 61H, 62H, 63H, 64H, 65H, 66H, 67H, 68H
   \              6768        
   \   000000B0   696A6B6C6D6E       DC8 69H, 6AH, 6BH, 6CH, 6DH, 6EH, 6FH, 70H
   \              6F70        
   \   000000B8   717273747576       DC8 71H, 72H, 73H, 74H, 75H, 76H, 77H, 78H
   \              7778        
   \   000000C0   797A41424344       DC8 79H, 7AH, 41H, 42H, 43H, 44H, 45H, 46H
   \              4546        
   \   000000C8   4748494A4B4C       DC8 47H, 48H, 49H, 4AH, 4BH, 4CH, 4DH, 4EH
   \              4D4E        
   \   000000D0   4F5051525354       DC8 4FH, 50H, 51H, 52H, 53H, 54H, 55H, 56H
   \              5556        
   \   000000D8   5758595A3031       DC8 57H, 58H, 59H, 5AH, 30H, 31H, 32H, 33H
   \              3233        
   \   000000E0   343536373839       DC8 34H, 35H, 36H, 37H, 38H, 39H, 24H, 2DH
   \              242D        
   \   000000E8   5F2E2B212A27       DC8 5FH, 2EH, 2BH, 21H, 2AH, 27H, 28H, 29H
   \              2829        
   \   000000F0   2C253B3A4026       DC8 2CH, 25H, 3BH, 3AH, 40H, 26H, 3DH, 2FH
   \              3D2F        
   \   000000F8   3FE0E1E2E3E4       DC8 3FH, 0E0H, 0E1H, 0E2H, 0E3H, 0E4H, 0E5H, 0B8H
   \              E5B8        
   \   00000100   E6E7E8E9EAEB       DC8 0E6H, 0E7H, 0E8H, 0E9H, 0EAH, 0EBH, 0ECH, 0EDH
   \              ECED        
   \   00000108   EEEFF0F1F2F3       DC8 0EEH, 0EFH, 0F0H, 0F1H, 0F2H, 0F3H, 0F4H, 0F5H
   \              F4F5        
   \   00000110   F6F7F8F9FAFB       DC8 0F6H, 0F7H, 0F8H, 0F9H, 0FAH, 0FBH, 0FCH, 0FDH
   \              FCFD        
   \   00000118   FEFFC0C1C2C3       DC8 0FEH, 0FFH, 0C0H, 0C1H, 0C2H, 0C3H, 0C4H, 0C5H
   \              C4C5        
   \   00000120   A8C6C7C8C9CA       DC8 0A8H, 0C6H, 0C7H, 0C8H, 0C9H, 0CAH, 0CBH, 0CCH
   \              CBCC        
   \   00000128   CDCECFD0D1D2       DC8 0CDH, 0CEH, 0CFH, 0D0H, 0D1H, 0D2H, 0D3H, 0D4H
   \              D3D4        
   \   00000130   D5D6D7D8D9DA       DC8 0D5H, 0D6H, 0D7H, 0D8H, 0D9H, 0DAH, 0DBH, 0DCH
   \              DBDC        
   \   00000138   DDDEDF00           DC8 0DDH, 0DEH, 0DFH, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\\\">_1`:
   \   00000000   5C00               DC8 "\\"
   \   00000002   0000               DC8 0, 0
   \   00000004   257325755C25       DC8 "%s%u\\%u.txt"
   \              752E74787400
   \   00000010   257325752E74       DC8 "%s%u.txt"
   \              787400      
   \   00000019   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   257500             DC8 "%u"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Ping %d-%d seconds!">`:
   \   00000000   50696E672025       DC8 "Ping %d-%d seconds!"
   \              642D25642073
   \              65636F6E6473
   \              2100        
   \   00000014   4D534725643A       DC8 "MSG%d: %s"
   \              20257300    
   \   0000001E   0000               DC8 0, 0
   \   00000020   4572726F7220       DC8 "Error code 1"
   \              636F64652031
   \              00          
   \   0000002D   000000             DC8 0, 0, 0
   \   00000030   CDEEECE5F0EE       DC8 "\315\356\354\345\360\356\354 \347\340\370\353\350 \361 \344\360\363\343\356\343\356 \352\353\350\345\355\362\340"
   \              EC20E7E0F8EB
   \              E820F120E4F0
   \              F3E3EEE3EE20
   \              EAEBE8E5EDF2
   \              E000        
   \   00000050   4552523A2025       DC8 "ERR: %s"
   \              7300        
   \   00000058   534325643A20       DC8 "SC%d: %04X"
   \              2530345800  
   \   00000063   00                 DC8 0
   \   00000064   426164207061       DC8 "Bad packet"
   \              636B657400  
   \   0000006F   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \   00000000   31313000           DC8 "110"

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   257300             DC8 "%s"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Sie_%04d">`:
   \   00000000   5369655F2530       DC8 "Sie_%04d"
   \              346400      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Send error!">`:
   \   00000000   53656E642065       DC8 "Send error!"
   \              72726F722100
   \   0000000C   53656E642064       DC8 "Send delayed..."
   \              656C61796564
   \              2E2E2E00    
   \   0000001C   73656E642072       DC8 "send res %d"
   \              657320256400

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "DNR Ok, connecting...">`:
   \   00000000   444E52204F6B       DC8 "DNR Ok, connecting..."
   \              2C20636F6E6E
   \              656374696E67
   \              2E2E2E00    
   \   00000016   0000               DC8 0, 0
   \   00000018   444E52204552       DC8 "DNR ERROR %d!"
   \              524F52202564
   \              2100        
   \   00000026   0000               DC8 0, 0
   \   00000028   53656E642044       DC8 "Send DNR..."
   \              4E522E2E2E00
   \   00000034   0A436F6E6E65       DC8 "\012Connect by IP!"
   \              637420627920
   \              49502100    
   \   00000044   25733A256400       DC8 "%s:%d"
   \   0000004A   0000               DC8 0, 0
   \   0000004C   57616974696E       DC8 "Waiting for GPRS up..."
   \              6720666F7220
   \              475052532075
   \              702E2E2E00  
   \   00000063   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\\\">_2`:
   \   00000000   5C00               DC8 "\\"
   \   00000002   0000               DC8 0, 0
   \   00000004   302E74787400       DC8 "0.txt"
   \   0000000A   0000               DC8 0, 0
   \   0000000C   25642E747874       DC8 "%d.txt"
   \              00          
   \   00000013   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "vis5.png">`:
   \   00000000   766973352E70       DC8 "vis5.png"
   \              6E6700      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "vis4.png">`:
   \   00000000   766973342E70       DC8 "vis4.png"
   \              6E6700      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "vis3.png">`:
   \   00000000   766973332E70       DC8 "vis3.png"
   \              6E6700      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "vis2.png">`:
   \   00000000   766973322E70       DC8 "vis2.png"
   \              6E6700      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "vis1.png">`:
   \   00000000   766973312E70       DC8 "vis1.png"
   \              6E6700      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "settings.png">`:
   \   00000000   73657474696E       DC8 "settings.png"
   \              67732E706E67
   \              00          
   \   0000000D   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "ping.png">`:
   \   00000000   70696E672E70       DC8 "ping.png"
   \              6E6700      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "unknown.png">`:
   \   00000000   756E6B6E6F77       DC8 "unknown.png"
   \              6E2E706E6700

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "logo.png">`:
   \   00000000   6C6F676F2E70       DC8 "logo.png"
   \              6E6700      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "head.png">`:
   \   00000000   686561642E70       DC8 "head.png"
   \              6E6700      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "addcont.png">`:
   \   00000000   616464636F6E       DC8 "addcont.png"
   \              742E706E6700

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "null.png">`:
   \   00000000   6E756C6C2E70       DC8 "null.png"
   \              6E6700      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "groupoff.png">`:
   \   00000000   67726F75706F       DC8 "groupoff.png"
   \              66662E706E67
   \              00          
   \   0000000D   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "groupon.png">`:
   \   00000000   67726F75706F       DC8 "groupon.png"
   \              6E2E706E6700

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "message.png">`:
   \   00000000   6D6573736167       DC8 "message.png"
   \              652E706E6700

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "ffc.png">`:
   \   00000000   6666632E706E       DC8 "ffc.png"
   \              6700        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "online.png">`:
   \   00000000   6F6E6C696E65       DC8 "online.png"
   \              2E706E6700  
   \   0000000B   00                 DC8 0

   Maximum stack usage in bytes:

     Function                  CSTACK
     --------                  ------
     ActionOnCurContact           16
     AddContactT9Key              12
     AddCurContact                 4
     AddLOGQ                       0
     AddMsgToChat                108
     AddSmile                      4
     AddStringToLog              188
     AskNickAndAddContact          4
     BackSpaceContactT9            8
     ChangeSound                   4
     ChangeVibra                   4
     CheckDoubleRun                8
     ClearContactT9Key             4
     ClearLog                     60
     ClearSendQ                    8
     CreateEditChat              116
     DrawAck                      80
     ElfKiller                     4
     ExtractAnswer                36
     FindContactLOGQByAck         12
     FindNextActiveContact         0
     FindPrevActiveContact         0
     FreeLOGQ                      8
     FreeTemplates                 8
     GetHost                       0
     GetHostsCount                 0
     GetIconIndex                  0
     GetLastXTextLOGQ              0
     GetOnTotalContact             8
     GetPort                      16
     GetShortInfo                 20
     GetTempName                  20
     IlluminationOff               8
     IlluminationOn               28
     InAway                        0
     IsUrl                        44
     LastLOGQ                      0
     LoadTemplates               336
     NewLOGQ                      12
     OpenLogfile                 152
     ParseAnswer                  36
     ParseXStatusText             20
     Play                        236
     ProcessPacket               292
     Quote                       152
     ReadDefSettings             152
     RecountMenu                  20
     RemoveCurContact              4
     RemoveLOGQ                    4
     ReqAddMsgToChat              16
     RequestXText                  8
     SMART_REDRAW                  8
     SaveAnswer                   12
     SendAnswer                   28
     SendAuthGrant                28
     SendAuthReq                  28
     SendMSGACK                    8
     UpdateCLheader               20
     UpdateCSMname                 4
     WriteDefSettings            152
     ask_my_info                   0
     atoi                          4
     contactlist_menu_ghook        8
     contactlist_menu_iconhndl   664
     contactlist_menu_onkey       36
     create_connect              184
     create_contactlist_menu      20
     do_ping                       4
     do_reconnect                  4
     ec_menu                      76
     ecmenu_ghook                  4
     ed_options_handler           64
     edchat_ghook                 72
     edchat_locret                 0
     edchat_onkey                476
     end_socket                    8
     free_ICONS                   16
     get_answer                 7232
     lgpUpdateClHdr               12
     main                         60
     maincsm_onclose               8
     maincsm_oncreate             20
     maincsm_onmessage            68
     method0                      96
     method1                       8
     method2                       8
     method3                       8
     method4                       0
     method5                      24
     method8                       0
     method9                       0
     my_ed_redraw                 12
     process_active_timer         12
     send_login                   36
     set_my_status                 4
     set_my_xstatus               36
     setup_ICONS                 148
     start_vibra                   8
     stop_vibra                    4
     to_develop                    4
     wstrstr                      32


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     SMART_REDRAW                      48
     setup_ICONS                      172
     free_ICONS                        48
     IlluminationOff                   60
     IlluminationOn                   124
     InAway                            60
     ReadDefSettings                  224
     WriteDefSettings                 212
     Play                             316
     start_vibra                      116
     stop_vibra                        88
     ChangeVibra                       56
     ChangeSound                       56
     FreeTemplates                     56
     LoadTemplates                    456
     RXbuf                          16392
     TXbuf                          16392
     ElfKiller                         28
     lgpUpdateClHdr                    96
     NewLOGQ                           52
     LastLOGQ                          36
     FreeLOGQ                          48
     RemoveLOGQ                        52
     AddLOGQ                           44
     GetLastXTextLOGQ                  72
     GetIconIndex                     228
     FindContactLOGQByAck              88
     UpdateCLheader                   112
     ClearContactT9Key                 24
     AddContactT9Key                   36
     BackSpaceContactT9                36
     create_contactlist_menu          136
     contactlist_menu_ghook            72
     RecountMenu                      160
     contactlist_menu_onkey           748
     GetOnTotalContact                 92
     contactlist_menu_iconhndl        532
     GetHost                          192
     atoi                              84
     GetPort                          276
     GetHostsCount                    120
     create_connect                   664
     ClearSendQ                        32
     end_socket                        40
     SendAnswer                       380
     send_login                       148
     do_ping                           52
     SendMSGACK                        52
     RequestXText                      52
     get_answer                      1204
     AddStringToLog                   520
     ParseXStatusText                 152
     AddMsgToChat                     812
     DrawAck                          340
     ask_my_info                        4
     set_my_status                     68
     set_my_xstatus                   264
     to_develop                        84
     ReqAddMsgToChat                  120
     ProcessPacket                   1984
     process_active_timer             144
     method0                          788
     method1                           44
     method2                           36
     method3                           24
     method4                           20
     method5                          204
     method8                            8
     method9                            8
     Canvas                           388
     S_OFFLINE                          8
     S_INVISIBLE                       12
     S_AWAY                             8
     S_NA                               4
     S_OCCUPIED                        12
     S_DND                              4
     S_ONLINE                           8
     S_FFC                              4
     ?<Constant "\\">_3               116
     ?<Constant "\\">                  32
     def_setting                       20
     menusoftkeys                      12
     menu_skt                           8
     clmenu_skt                         8
     contactlist_menu                  48
     maincsm_oncreate                 252
     maincsm_onclose                  164
     do_reconnect                      40
     CheckDoubleRun                   112
     maincsm_onmessage               1936
     minus11                            4
     maincsm_name_body                280
     ?<Constant "NATICQ: %d">          72
     UpdateCSMname                     36
     main                             248
     edchat_locret                      4
     ExtractAnswer                    280
     ??FindNextActiveContact_0         64
     FindPrevActiveContact             88
     ed_options_handler               448
     wstrstr                          124
     IsUrl                            424
     ParseAnswer                      548
     SaveAnswer                        36
     GetTempName                      172
     DMonth                            52
     edchat_onkey                    1104
     my_ed_redraw                     116
     edchat_ghook                     560
     edchat_desc                       84
     CreateEditChat                  1164
     Quote                            416
     GetShortInfo                     160
     AddCurContact                     52
     ActionOnCurContact               112
     RemoveCurContact                   8
     SendAuthReq                      180
     SendAuthGrant                    180
     OpenLogfile                      252
     ClearLog                         240
     ecmenu_ghook                      20
     ecmenu_HNDLS                      36
     contactlist_menuhdr             1688
     ecmenu_HDR                        64
     ec_menu                          396
     AskNickAndAddContact               8
     AddSmile                          24
     ??DataTable3                       4
     ??DataTable7                       4
     ??DataTable8                       4
     ??DataTable13                      4
     ??DataTable19                      4
     ??DataTable26                      4
     ??DataTable27                      4
     ??DataTable29                      4
     ??DataTable31                      4
     ??DataTable32                      4
     ??DataTable35                      4
     ??DataTable36                      4
     ??DataTable37                      4
     ??DataTable41                      4
     ??DataTable43                      4
     ??DataTable46                      4
     ??DataTable49                      4
     ??DataTable51                      4
     ??DataTable52                      4
     ??DataTable53                      4
     ??DataTable61                      4
     ??DataTable62                      4
     ??DataTable64                      4
     ??DataTable65                      4
     ??DataTable66                      4
     ??DataTable67                      4
     ??DataTable68                      4
     ??DataTable69                      4
     ??DataTable70                      4
     ??DataTable71                      4
     ??DataTable72                      4
     ??DataTable75                      4
     ??DataTable78                      4
     ??DataTable81                      4
     ??DataTable82                      4
     ??DataTable83                      4
     ??DataTable87                      4
     ??DataTable94                      4
     ??DataTable102                     4
     ??DataTable105                     4
     ??DataTable108                     4
     ??DataTable110                     4
     ??DataTable111                     4
     ??DataTable112                     4
     ??DataTable114                     4
     ??DataTable115                     4
     ??DataTable116                     4
     ??DataTable117                     4
     ??DataTable120                     4
     ??DataTable121                     4
     ??DataTable122                     4
     ??DataTable124                     4
     ??DataTable125                     4
     ??DataTable128                     4
     ??DataTable132                     4
     ??DataTable135                     4
     ??DataTable136                     4
     ??DataTable137                     4
     ??DataTable138                     4
     ??DataTable139                     4
     ??DataTable140                     4
     ??DataTable141                     4
     ??DataTable142                     4
     ??DataTable143                     4
     ??DataTable144                     4
     ??DataTable145                     4
     ??DataTable146                     4
     ??DataTable147                     4
     ??DataTable148                     4
     ??DataTable149                     4
     ??DataTable151                     4
     ??DataTable153                     4
     ??DataTable162                     4
     ??DataTable164                     4
     ??DataTable165                     4
     ??DataTable166                     4
     ??DataTable167                     4
     ??DataTable168                     4
     ?<Initializer for contactlist_menuhdr>
                                     1688
     ?<Constant "work.png">            12
     ?<Constant "lunch.png">           12
     ?<Constant "home.png">            12
     ?<Constant "evil.png">            12
     ?<Constant "depression.png">      16
     ?<Constant "dnd.png">              8
     ?<Constant "occupied.png">        16
     ?<Constant "na.png">               8
     ?<Constant "away.png">            12
     ?<Constant "invisible.png">       16
     ?<Constant "offline.png">         12
     ?<Constant "%02d:%02d %02d-%02d %s:">
                                       52
     ?<Constant ":\n">                  3
     ?<Constant "abcdefghijklmnopqrstu...">
                                      316
     ?<Constant "\\">_1                28
     ?<Constant "%u">                   3
     ?<Constant "Ping %d-%d seconds!">
                                      112
     ?<Constant "110">                  4
     ?<Constant "%s">                   3
     ?<Constant "Sie_%04d">            12
     ?<Constant "Send error!">         40
     ?<Constant "DNR Ok, connecting...">
                                      100
     ?<Constant "\\">_2                20
     ?<Constant "vis5.png">            12
     ?<Constant "vis4.png">            12
     ?<Constant "vis3.png">            12
     ?<Constant "vis2.png">            12
     ?<Constant "vis1.png">            12
     ?<Constant "settings.png">        16
     ?<Constant "ping.png">            12
     ?<Constant "unknown.png">         12
     ?<Constant "logo.png">            12
     ?<Constant "head.png">            12
     ?<Constant "addcont.png">         12
     ?<Constant "null.png">            12
     ?<Constant "groupoff.png">        16
     ?<Constant "groupon.png">         12
     ?<Constant "message.png">         12
     ?<Constant "ffc.png">              8
     ?<Constant "online.png">          12
      Others                          836

 
 24 796 bytes in segment CODE
  2 041 bytes in segment DATA_C
  1 688 bytes in segment DATA_I
  1 688 bytes in segment DATA_ID
 33 064 bytes in segment DATA_Z
     24 bytes in segment INITTAB
 
 23 984 bytes of CODE  memory (+ 836 bytes shared)
  3 729 bytes of CONST memory
 34 752 bytes of DATA  memory

Errors: none
Warnings: none
