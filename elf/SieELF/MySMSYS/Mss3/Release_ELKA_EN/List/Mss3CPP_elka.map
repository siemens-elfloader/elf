################################################################################
#                                                                              #
#      IAR Universal Linker V4.60I/386                                         #
#                                                                              #
#           Link time     =  05/Mar/2009  13:12:12                             #
#           Target CPU    =  ARM                                               #
#           List file     =  D:\pasha\elf\SieELF\MySMSYS\Mss3\Release_ELKA_EN\ #
#                            List\Mss3CPP_elka.map                             #
#           Output file 1 =  D:\pasha\elf\SieELF\MySMSYS\Mss3\Release_ELKA_EN\ #
#                            Exe\Mss3CPP_elka.elf                              #
#                            Format: elf, variant: -ynpra                      #
#           Command line  =  D:\pasha\elf\SieELF\MySMSYS\Mss3\Release_ELKA_EN\ #
#                            Obj\AFile.r79                                     #
#                            D:\pasha\elf\SieELF\MySMSYS\Mss3\Release_ELKA_EN\ #
#                            Obj\AdrList.r79                                   #
#                            D:\pasha\elf\SieELF\MySMSYS\Mss3\Release_ELKA_EN\ #
#                            Obj\CSMswaper.r79                                 #
#                            D:\pasha\elf\SieELF\MySMSYS\Mss3\Release_ELKA_EN\ #
#                            Obj\CreateMenu.r79                                #
#                            D:\pasha\elf\SieELF\MySMSYS\Mss3\Release_ELKA_EN\ #
#                            Obj\DaemonCSM.r79                                 #
#                            D:\pasha\elf\SieELF\MySMSYS\Mss3\Release_ELKA_EN\ #
#                            Obj\DialogCSM.r79                                 #
#                            D:\pasha\elf\SieELF\MySMSYS\Mss3\Release_ELKA_EN\ #
#                            Obj\EditGUI.r79                                   #
#                            D:\pasha\elf\SieELF\MySMSYS\Mss3\Release_ELKA_EN\ #
#                            Obj\File.r79                                      #
#                            D:\pasha\elf\SieELF\MySMSYS\Mss3\Release_ELKA_EN\ #
#                            Obj\GlobalVariable.r79                            #
#                            D:\pasha\elf\SieELF\MySMSYS\Mss3\Release_ELKA_EN\ #
#                            Obj\IconPack.r79                                  #
#                            D:\pasha\elf\SieELF\MySMSYS\Mss3\Release_ELKA_EN\ #
#                            Obj\LangPack.r79                                  #
#                            D:\pasha\elf\SieELF\MySMSYS\Mss3\Release_ELKA_EN\ #
#                            Obj\MainMenu.r79                                  #
#                            D:\pasha\elf\SieELF\MySMSYS\Mss3\Release_ELKA_EN\ #
#                            Obj\MyIpcMessage.r79                              #
#                            D:\pasha\elf\SieELF\MySMSYS\Mss3\Release_ELKA_EN\ #
#                            Obj\NativeAddressbook.r79                         #
#                            D:\pasha\elf\SieELF\MySMSYS\Mss3\Release_ELKA_EN\ #
#                            Obj\NumList.r79                                   #
#                            D:\pasha\elf\SieELF\MySMSYS\Mss3\Release_ELKA_EN\ #
#                            Obj\OthersMenu.r79                                #
#                            D:\pasha\elf\SieELF\MySMSYS\Mss3\Release_ELKA_EN\ #
#                            Obj\PopupGUI.r79                                  #
#                            D:\pasha\elf\SieELF\MySMSYS\Mss3\Release_ELKA_EN\ #
#                            Obj\SendList.r79                                  #
#                            D:\pasha\elf\SieELF\MySMSYS\Mss3\Release_ELKA_EN\ #
#                            Obj\SiemensPDU.r79                                #
#                            D:\pasha\elf\SieELF\MySMSYS\Mss3\Release_ELKA_EN\ #
#                            Obj\SmsData.r79                                   #
#                            D:\pasha\elf\SieELF\MySMSYS\Mss3\Release_ELKA_EN\ #
#                            Obj\SmsListMenu.r79                               #
#                            D:\pasha\elf\SieELF\MySMSYS\Mss3\Release_ELKA_EN\ #
#                            Obj\StrConst.r79                                  #
#                            D:\pasha\elf\SieELF\MySMSYS\Mss3\Release_ELKA_EN\ #
#                            Obj\TViewGUI.r79                                  #
#                            D:\pasha\elf\SieELF\MySMSYS\Mss3\Release_ELKA_EN\ #
#                            Obj\TabGUI.r79                                    #
#                            D:\pasha\elf\SieELF\MySMSYS\Mss3\Release_ELKA_EN\ #
#                            Obj\Template.r79                                  #
#                            D:\pasha\elf\SieELF\MySMSYS\Mss3\Release_ELKA_EN\ #
#                            Obj\Vibra.r79                                     #
#                            D:\pasha\elf\SieELF\MySMSYS\Mss3\Release_ELKA_EN\ #
#                            Obj\_cpp2.r79                                     #
#                            D:\pasha\elf\SieELF\MySMSYS\Mss3\Release_ELKA_EN\ #
#                            Obj\conf_loader.r79                               #
#                            D:\pasha\elf\SieELF\MySMSYS\Mss3\Release_ELKA_EN\ #
#                            Obj\config_data.r79                               #
#                            D:\pasha\elf\SieELF\MySMSYS\Mss3\Release_ELKA_EN\ #
#                            Obj\func.r79                                      #
#                            D:\pasha\elf\SieELF\MySMSYS\Mss3\Release_ELKA_EN\ #
#                            Obj\main.r79                                      #
#                            D:\pasha\elf\SieELF\MySMSYS\Mss3\Release_ELKA_EN\ #
#                            Obj\string_works.r79                              #
#                            -o                                                #
#                            D:\pasha\elf\SieELF\MySMSYS\Mss3\Release_ELKA_EN\ #
#                            Exe\Mss3CPP_elka.elf                              #
#                            -Felf -l                                          #
#                            D:\pasha\elf\SieELF\MySMSYS\Mss3\Release_ELKA_EN\ #
#                            List\Mss3CPP_elka.map                             #
#                            -xmsnio                                           #
#                            "-ID:\pasha\Embedded Workbench 4.0 Evaluation2\AR #
#                            M\LIB\"                                           #
#                            -f D:\pasha\elf\SieELF\MySMSYS\Mss3\test.xcl      #
#                            (-carm -V(CODE)CODE_AREA,12                       #
#                            -V(DATA)DATA_AREA,12                              #
#                            -Z(CODE_AREA)ELFBEGIN,DATA_ID,START,CODE,DATA_C,I #
#                            NITTAB,DATA_Z,DATA_N,MYSEG,CONFIG_C=0-FFFFFFFF    #
#                            -Z(DATA_AREA)DATA_I=0-FFFFFFFF) -ynpra            #
#                            "D:\pasha\Embedded Workbench 4.0 Evaluation2\ARM\ #
#                            LIB\dl5tpainl8n.r79"                              #
#                            -s main                                           #
#                                                                              #
#                        Copyright 1987-2007 IAR Systems. All rights reserved. #
################################################################################





                ****************************************
                *                                      *
                *           CROSS REFERENCE            *
                *                                      *
                ****************************************

       Program entry at : CODE_AREA 0000A900  Relocatable, from module : main




                ****************************************
                *                                      *
                *            RUNTIME MODEL             *
                *                                      *
                ****************************************

  StackAlign4  = USED
  __cpu_mode   = __pcs__interwork
  __data_model = absolute
  __endian     = little
  __rt_version = 6



                ****************************************
                *                                      *
                *              MODULE MAP              *
                *                                      *
                ****************************************


  DEFINED ABSOLUTE ENTRIES
    *************************************************************************

  DEFINED ABSOLUTE ENTRIES
    *************************************************************************

  FILE NAME : D:\pasha\elf\SieELF\MySMSYS\Mss3\Release_ELKA_EN\Obj\AFile.r79
  PROGRAM MODULE, NAME : AFile

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AFile::new AFile(char const *, unsigned int, unsigned int)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 5. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AFile::new AFile()      
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 7. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AFile::delete ~AFile(AFile *)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 8. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000424 - 0000042F (0xc bytes), align: 2
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AFile::AFile()          00000424        OthMenu::ShowHelp() (OthersMenu)
    -------------------------------------------------------------------------
CODE
  Segment part 10. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 11. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AFile::AFile(char const *, unsigned int, unsigned int)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 12. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000430 - 00000457 (0x28 bytes), align: 2
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AFile::~AFile()         00000430        OthMenu::ShowHelp() (OthersMenu)
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 14. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000458 - 0000047F (0x28 bytes), align: 2
  Segment part 15.            Intra module refs:   AFile::FOpen(char const *, unsigned int, unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AFile::FClose()         00000458        OthMenu::ShowHelp() (OthersMenu)
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 16. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000480 - 000004C3 (0x44 bytes), align: 2
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AFile::FOpen(char const *, unsigned int, unsigned int)
                                   00000480        OthMenu::ShowHelp() (OthersMenu)
               stack 1 = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
CODE
  Segment part 18. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000004C4 - 000004E7 (0x24 bytes), align: 2
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AFile::FRead(void *, int)
                                   000004C4        OthMenu::ShowHelp() (OthersMenu)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 20. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 21. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AFile::FWrite(void const *, int)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 22. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 23. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AFile::LSeek(unsigned int, unsigned int)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 24. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 25. NOT NEEDED.
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    *************************************************************************

  FILE NAME : D:\pasha\elf\SieELF\MySMSYS\Mss3\Release_ELKA_EN\Obj\AdrList.r79
  PROGRAM MODULE, NAME : AdrList

  SEGMENTS IN THE MODULE
  ======================
DATA_Z
  Relative segment, address: CODE_AREA 0000BC0C - 0000BC0F (0x4 bytes), align: 2
  Segment part 5.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADRLST                  0000BC0C        EditGUI::GHook(void *, int) (EditGUI)
                                                   PopupNewIn::CreatePopupNewIn(DLG_CSM *, _SDLIST *) (PopupGUI)
                                                   Segment part 156 (SmsData)
                                                   Segment part 23 (DaemonCSM)
                                                   Segment part 42 (NumList)
                                                   SmsListMenu::ItemProc(void *, int, void *) (SmsListMenu)
    -------------------------------------------------------------------------
CODE
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000004E8 - 00000503 (0x1c bytes), align: 2
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AdrList::new AdrList()
                                   000004E8        DaemonCSM::OnCreate(CSM_RAM *) (DaemonCSM)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 8. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000504 - 0000051F (0x1c bytes), align: 2
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AdrList::delete ~AdrList(AdrList *)
                                   00000504        DaemonCSM::OnClose(CSM_RAM *) (DaemonCSM)
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 10. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000520 - 00000543 (0x24 bytes), align: 2
  Segment part 11.            Intra module refs:   AdrList::new AdrList()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AdrList::AdrList()      00000520 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 12. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 13. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AdrList::~AdrList()     
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 14. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000544 - 000005C7 (0x84 bytes), align: 2
  Segment part 15.            Intra module refs:   AdrList::ConstructList()
                                                   AdrList::delete ~AdrList(AdrList *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AdrList::FreeCLIST()    00000544 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 16. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000005C8 - 00000A97 (0x4d0 bytes), align: 2
  Segment part 17.            Intra module refs:   AdrList::ConstructListCHK(AdrList *)
                                                   AdrList::ConstructListFRC(AdrList *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AdrList::ConstructList()
                                   000005C8 
               stack 1 = 00000000 ( 00000464 )
    -------------------------------------------------------------------------
CODE
  Segment part 18. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000A98 - 00000AAF (0x18 bytes), align: 2
  Segment part 19.            Intra module refs:   Segment part 24
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AdrList::ConstructListCHK(AdrList *)
                                   00000A98 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 20. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000AB0 - 00000AB3 (0x4 bytes), align: 2
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AdrList::ConstructListFRC(AdrList *)
                                   00000AB0        DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *) (DaemonCSM)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 22. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000AB4 - 00000AD3 (0x20 bytes), align: 2
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AdrList::ConstructListCFGUPD()
                                   00000AB4        DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *) (DaemonCSM)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000AD4 - 00000AD7 (0x4 bytes), align: 2
  Segment part 24.            Intra module refs:   AdrList::AdrList()
                                                   AdrList::ConstructListCFGUPD()
    -------------------------------------------------------------------------
CODE
  Segment part 25. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000AD8 - 00000B93 (0xbc bytes), align: 2
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AdrList::FindName(WSHDR *, char const *)
                                   00000AD8        EditGUI::GHook(void *, int) (EditGUI)
                                                   NumList::AddToList(char const *) (NumList)
                                                   NumList::AllocNL(char const *) (NumList)
                                                   NumList::UpdateNL(_NLST *, char const *) (NumList)
                                                   SmsData::GetFilePathSDL(_SDLIST *, char *, char *, int) (SmsData)
                                                   SmsListMenu::ItemProc(void *, int, void *) (SmsListMenu)
               stack 1 = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
CODE
  Segment part 27. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000B94 - 00000C03 (0x70 bytes), align: 2
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AdrList::FindCList(char const *)
                                   00000B94        PopupNewIn::CreatePopupNewIn(DLG_CSM *, _SDLIST *) (PopupGUI)
                                                   SmsData::ExportAllToText() (SmsData)
               stack 1 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
CODE
  Segment part 29. NOT NEEDED.Intra module refs:   AdrList::ConstructList()
                                                   AdrList::new AdrList()
    -------------------------------------------------------------------------
CODE
  Segment part 30. NOT NEEDED.Intra module refs:   AdrList::FreeCLIST()
                                                   AdrList::delete ~AdrList(AdrList *)
    -------------------------------------------------------------------------
CODE
  Segment part 31. NOT NEEDED.Intra module refs:   AdrList::ConstructList()
    -------------------------------------------------------------------------
CODE
  Segment part 32. NOT NEEDED.Intra module refs:   AdrList::FindCList(char const *)
                                                   AdrList::FindName(WSHDR *, char const *)
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
INITTAB
  Relative segment, address: CODE_AREA 0000BBF4 - 0000BBFF (0xc bytes), align: 2
  Segment part 33. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?init?tab?DATA_Z        0000BBF4 
    -------------------------------------------------------------------------
DATA_C
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000AF78 - 0000AFA7 (0x30 bytes), align: 2
  Segment part 3.             Intra module refs:   AdrList::ConstructList()
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000AFA8 - 0000AFAF (0x8 bytes), align: 2
  Segment part 4.             Intra module refs:   AdrList::FindName(WSHDR *, char const *)

    *************************************************************************

  FILE NAME : D:\pasha\elf\SieELF\MySMSYS\Mss3\Release_ELKA_EN\Obj\CSMswaper.r79
  PROGRAM MODULE, NAME : CSMswaper

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 5. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CSMSwaper::new CSMSwaper()
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 7. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CSMSwaper::CSMSwaper()
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 8. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 10. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CSMSwaper::~CSMSwaper()
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 11. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_Z
  Relative segment, address: CODE_AREA 0000BC10 - 0000BC13 (0x4 bytes), align: 2
  Segment part 3.             Intra module refs:   Segment part 19
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CSMSwaper::under_idle   0000BC10 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000C04 - 00000D13 (0x110 bytes), align: 2
  Segment part 12.            Intra module refs:   CSMSwaper::CSMtoTop(int, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CSMSwaper::do_CSMtoTop(CSMQ *, void *)
                                   00000C04 
               stack 1 = 00000000 ( 00000018 )
    -------------------------------------------------------------------------
CODE
  Segment part 13. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000D14 - 00000D3B (0x28 bytes), align: 2
  Segment part 14.            Intra module refs:   CSMSwaper::CSMtoTop(int, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CSMSwaper::LLaddToEnd(LLQ *, void *)
                                   00000D14 
    -------------------------------------------------------------------------
CODE
  Segment part 15. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000D3C - 00000DA3 (0x68 bytes), align: 2
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CSMSwaper::CSMtoTop(int, int)
                                   00000D3C        SendList::Send(SendList *) (SendList)
               stack 1 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
CODE
  Segment part 17. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000DA4 - 00000DC3 (0x20 bytes), align: 2
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CSMSwaper::InitUnderIdleCSM()
                                   00000DA4        main (main)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000DC4 - 00000DC7 (0x4 bytes), align: 2
  Segment part 19.            Intra module refs:   CSMSwaper::InitUnderIdleCSM()
                                                   CSMSwaper::do_CSMtoTop(CSMQ *, void *)
    -------------------------------------------------------------------------
CODE
  Segment part 20. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 21. NOT NEEDED.
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
INITTAB
  Segment part 22. TENTATIVE. Used definition from AdrList
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?init?tab?DATA_Z        
    -------------------------------------------------------------------------
DATA_C
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CSMSwaper::__vtbl       

    *************************************************************************

  FILE NAME : D:\pasha\elf\SieELF\MySMSYS\Mss3\Release_ELKA_EN\Obj\CreateMenu.r79
  PROGRAM MODULE, NAME : CreateMenu

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE_AREA 00000DC8 - 00000E0B (0x44 bytes), align: 2
  Segment part 2.             Intra module refs:   CreateMenu30or2(MENU_DESC const *, HEADER_DESC const *, int, int, void *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           patch_option_header(HEADER_DESC const *)
                                   00000DC8 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000E0C - 00000EAF (0xa4 bytes), align: 2
  Segment part 4.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CreateMenu(ML_MENU_DESC const *, HEADER_DESC const *, int, int, void *)
                                   00000E0C        SmsListMenu::CreateSmsListMenu(int, int, DLG_CSM *) (SmsListMenu)
                                                   SmsListMenu::ReCreateMe(void *) (SmsListMenu)
               stack 1 = 00000000 ( 00000020 )
    -------------------------------------------------------------------------
CODE
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000EB0 - 00000F53 (0xa4 bytes), align: 2
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CreateMenu(MENU_DESC const *, HEADER_DESC const *, int, int, void *)
                                   00000EB0        OthMenu::CreateOthMenu(DLG_CSM *) (OthersMenu)
                                                   TplMenu::CreateTplMenu(void *) (Template)
               stack 1 = 00000000 ( 00000020 )
    -------------------------------------------------------------------------
CODE
  Segment part 7. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 8. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CreateMenu(ML_MENU_DESC const *, HEADER_DESC const *, WSHDR *, int, int, void *)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 10. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CreateMenu(MENU_DESC const *, HEADER_DESC const *, WSHDR *, int, int, void *)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 11. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 12. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CreateMenu30or2(ML_MENU_DESC const *, HEADER_DESC const *, WSHDR *, int, int, void *)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 13. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 14. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CreateMenu30or2(MENU_DESC const *, HEADER_DESC const *, WSHDR *, int, int, void *)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 15. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 16. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CreateMenu30or2(ML_MENU_DESC const *, HEADER_DESC const *, int, int, void *)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 17. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000F54 - 00000FD7 (0x84 bytes), align: 2
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CreateMenu30or2(MENU_DESC const *, HEADER_DESC const *, int, int, void *)
                                   00000F54        EditOptionMenu::CreateEditOptionMenu(DLG_CSM *, _SDLIST *, int, int, int) (EditGUI)
                                                   SmsOptionMenu::CreateSmsOptionMenu(DLG_CSM *, int, int, _SDLIST *) (SmsListMenu)
               stack 1 = 00000000 ( 00000020 )
    -------------------------------------------------------------------------
CODE
  Segment part 19. NOT NEEDED.Intra module refs:   CreateMenu30or2(MENU_DESC const *, HEADER_DESC const *, int, int, void *)
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    *************************************************************************

  FILE NAME : D:\pasha\elf\SieELF\MySMSYS\Mss3\Release_ELKA_EN\Obj\DaemonCSM.r79
  PROGRAM MODULE, NAME : DaemonCSM

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000FD8 - 00000FF3 (0x1c bytes), align: 2
  Segment part 6.             Intra module refs:   DaemonCSM::OnClose(CSM_RAM *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DaemonCSM::delete ~DaemonCSM(DaemonCSM *)
                                   00000FD8 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 7. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000FF4 - 0000100F (0x1c bytes), align: 2
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DaemonCSM::new DaemonCSM()
                                   00000FF4        main (main)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00001010 - 000010DF (0xd0 bytes), align: 2
  Segment part 10.            Intra module refs:   DaemonCSM::new DaemonCSM()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DaemonCSM::DaemonCSM()
                                   00001010 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 11. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000010E0 - 000010FB (0x1c bytes), align: 2
  Segment part 12.            Intra module refs:   DaemonCSM::delete ~DaemonCSM(DaemonCSM *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DaemonCSM::~DaemonCSM()
                                   000010E0 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 13. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000010FC - 0000116F (0x74 bytes), align: 2
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DaemonCSM::CreateDaemonCSM()
                                   000010FC        main (main)
               stack 1 = 00000000 ( 0000003C )
    -------------------------------------------------------------------------
CODE
  Segment part 15. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00001170 - 000011A7 (0x38 bytes), align: 2
  Segment part 16.            Intra module refs:   DaemonCSM::DaemonCSM()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DaemonCSM::OnCreate(CSM_RAM *)
                                   00001170 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 17. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000011A8 - 00001913 (0x76c bytes), align: 2
  Segment part 18.            Intra module refs:   DaemonCSM::DaemonCSM()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *)
                                   000011A8 
               stack 1 = 00000000 ( 00000034 )
    -------------------------------------------------------------------------
CODE
  Segment part 19. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00001914 - 00001977 (0x64 bytes), align: 2
  Segment part 20.            Intra module refs:   DaemonCSM::DaemonCSM()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DaemonCSM::OnClose(CSM_RAM *)
                                   00001914 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00001978 - 0000197B (0x4 bytes), align: 2
  Segment part 21.            Intra module refs:   DaemonCSM::OnClose(CSM_RAM *)
                                                   DaemonCSM::OnCreate(CSM_RAM *)
                                                   DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000197C - 0000197F (0x4 bytes), align: 2
  Segment part 22.            Intra module refs:   DaemonCSM::OnClose(CSM_RAM *)
                                                   DaemonCSM::OnCreate(CSM_RAM *)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00001980 - 00001983 (0x4 bytes), align: 2
  Segment part 23.            Intra module refs:   DaemonCSM::OnClose(CSM_RAM *)
                                                   DaemonCSM::OnCreate(CSM_RAM *)
                                                   DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 24. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00001984 - 000019B3 (0x30 bytes), align: 2
  Segment part 25.            Intra module refs:   DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DaemonCSM::AddDlgCsmID(int)
                                   00001984 
    -------------------------------------------------------------------------
CODE
  Segment part 26. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 27. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DaemonCSM::AddDlgCsmID_Forced0(int)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 28. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000019B4 - 000019EB (0x38 bytes), align: 2
  Segment part 29.            Intra module refs:   DaemonCSM::OnClose(CSM_RAM *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DaemonCSM::CloseAllDlgCSM()
                                   000019B4 
               stack 1 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
CODE
  Segment part 30. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000019EC - 00001A17 (0x2c bytes), align: 2
  Segment part 31.            Intra module refs:   DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DaemonCSM::DelDlgCsmID(int)
                                   000019EC 
    -------------------------------------------------------------------------
CODE
  Segment part 32. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00001A18 - 00001A6B (0x54 bytes), align: 2
  Segment part 33.            Intra module refs:   DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DaemonCSM::IsOnTopMyCSM()
                                   00001A18 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 34. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00001A6C - 00001A73 (0x8 bytes), align: 2
  Segment part 35.            Intra module refs:   DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DaemonCSM::DoNewProc()
                                   00001A6C 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 36. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00001A74 - 00001A7B (0x8 bytes), align: 2
  Segment part 37.            Intra module refs:   DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DaemonCSM::UpdateNProc()
                                   00001A74 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 38. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00001A7C - 00001ABF (0x44 bytes), align: 2
  Segment part 39.            Intra module refs:   DaemonCSM::DaemonCSM()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DaemonCSM::AddIconBar(short *)
                                   00001A7C 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00001AC0 - 00001AC3 (0x4 bytes), align: 2
  Segment part 40.            Intra module refs:   DaemonCSM::AddIconBar(short *)
                                                   DaemonCSM::OnClose(CSM_RAM *)
                                                   DaemonCSM::OnCreate(CSM_RAM *)
                                                   DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 41. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00001AC4 - 00001BFB (0x138 bytes), align: 2
  Segment part 42.            Intra module refs:   DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DaemonCSM::PlayNotifySound(DaemonCSM *, char *)
                                   00001AC4 
               stack 1 = 00000000 ( 000002F4 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00001BFC - 00001BFF (0x4 bytes), align: 2
  Segment part 43.            Intra module refs:   DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *)
                                                   DaemonCSM::PlayNotifySound(DaemonCSM *, char *)
    -------------------------------------------------------------------------
CODE
  Segment part 44. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00001C00 - 00001C2F (0x30 bytes), align: 2
  Segment part 45.            Intra module refs:   DaemonCSM::IsOnTopMyCSM()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DaemonCSM::GetTopCSM()
                                   00001C00        SendList::Send(SendList *) (SendList)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 46. NOT NEEDED.Intra module refs:   DaemonCSM::delete ~DaemonCSM(DaemonCSM *)
    -------------------------------------------------------------------------
CODE
  Segment part 47. NOT NEEDED.Intra module refs:   DaemonCSM::new DaemonCSM()
    -------------------------------------------------------------------------
CODE
  Segment part 48. NOT NEEDED.Intra module refs:   DaemonCSM::DaemonCSM()
    -------------------------------------------------------------------------
CODE
  Segment part 49. NOT NEEDED.Intra module refs:   DaemonCSM::DaemonCSM()
    -------------------------------------------------------------------------
CODE
  Segment part 50. NOT NEEDED.Intra module refs:   DaemonCSM::~DaemonCSM()
    -------------------------------------------------------------------------
CODE
  Segment part 51. NOT NEEDED.Intra module refs:   DaemonCSM::~DaemonCSM()
    -------------------------------------------------------------------------
CODE
  Segment part 52. NOT NEEDED.Intra module refs:   DaemonCSM::OnCreate(CSM_RAM *)
    -------------------------------------------------------------------------
CODE
  Segment part 53. NOT NEEDED.Intra module refs:   DaemonCSM::OnCreate(CSM_RAM *)
    -------------------------------------------------------------------------
CODE
  Segment part 54. NOT NEEDED.Intra module refs:   DaemonCSM::OnCreate(CSM_RAM *)
    -------------------------------------------------------------------------
CODE
  Segment part 55. NOT NEEDED.Intra module refs:   DaemonCSM::OnCreate(CSM_RAM *)
    -------------------------------------------------------------------------
CODE
  Segment part 56. NOT NEEDED.Intra module refs:   DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 57. NOT NEEDED.Intra module refs:   DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 58. NOT NEEDED.Intra module refs:   DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 59. NOT NEEDED.Intra module refs:   DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 60. NOT NEEDED.Intra module refs:   DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 61. NOT NEEDED.Intra module refs:   DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 62. NOT NEEDED.Intra module refs:   DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 63. NOT NEEDED.Intra module refs:   DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 64. NOT NEEDED.Intra module refs:   DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 65. NOT NEEDED.Intra module refs:   DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 66. NOT NEEDED.Intra module refs:   DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 67. NOT NEEDED.Intra module refs:   DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 68. NOT NEEDED.Intra module refs:   DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 69. NOT NEEDED.Intra module refs:   DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 70. NOT NEEDED.Intra module refs:   DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 71. NOT NEEDED.Intra module refs:   DaemonCSM::OnClose(CSM_RAM *)
    -------------------------------------------------------------------------
CODE
  Segment part 72. NOT NEEDED.Intra module refs:   DaemonCSM::OnClose(CSM_RAM *)
    -------------------------------------------------------------------------
CODE
  Segment part 73. NOT NEEDED.Intra module refs:   DaemonCSM::OnClose(CSM_RAM *)
    -------------------------------------------------------------------------
CODE
  Segment part 74. NOT NEEDED.Intra module refs:   DaemonCSM::OnClose(CSM_RAM *)
    -------------------------------------------------------------------------
CODE
  Segment part 75. NOT NEEDED.Intra module refs:   DaemonCSM::DoNewProc()
                                                   DaemonCSM::UpdateNProc()
    -------------------------------------------------------------------------
CODE
  Segment part 76. NOT NEEDED.Intra module refs:   DaemonCSM::PlayNotifySound(DaemonCSM *, char *)
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000AFB0 - 0000AFB7 (0x8 bytes), align: 2
  Segment part 2.             Intra module refs:   DaemonCSM::DaemonCSM()
    -------------------------------------------------------------------------
DATA_C
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000AFB8 - 0000AFBF (0x8 bytes), align: 2
  Segment part 4.             Intra module refs:   DaemonCSM::CreateDaemonCSM()

    *************************************************************************

  FILE NAME : D:\pasha\elf\SieELF\MySMSYS\Mss3\Release_ELKA_EN\Obj\DialogCSM.r79
  PROGRAM MODULE, NAME : DialogCSM

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 4. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DialogCSM::delete ~DialogCSM(DialogCSM *)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00001C30 - 00001C4B (0x1c bytes), align: 2
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DialogCSM::new DialogCSM()
                                   00001C30        DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *) (DaemonCSM)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 7. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00001C4C - 00001CCF (0x84 bytes), align: 2
  Segment part 8.             Intra module refs:   DialogCSM::new DialogCSM()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DialogCSM::DialogCSM()
                                   00001C4C 
    -------------------------------------------------------------------------
CODE
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 10. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DialogCSM::~DialogCSM()
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 11. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00001CD0 - 00001CFF (0x30 bytes), align: 2
  Segment part 12.            Intra module refs:   DialogCSM::DialogCSM()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DialogCSM::OnMessage(CSM_RAM *, GBS_MSG *)
                                   00001CD0 
    -------------------------------------------------------------------------
CODE
  Segment part 13. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00001D00 - 000021DB (0x4dc bytes), align: 2
  Segment part 14.            Intra module refs:   DialogCSM::DialogCSM()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DialogCSM::OnCreate(CSM_RAM *)
                                   00001D00 
               stack 1 = 00000000 ( 00000028 )
    -------------------------------------------------------------------------
CODE
  Segment part 15. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000021DC - 000021F3 (0x18 bytes), align: 2
  Segment part 16.            Intra module refs:   DialogCSM::DialogCSM()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DialogCSM::OnClose(CSM_RAM *)
                                   000021DC 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 17. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000021F4 - 0000226B (0x78 bytes), align: 2
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DialogCSM::CreateDialogCSM(int, void *)
                                   000021F4        DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *) (DaemonCSM)
               stack 1 = 00000000 ( 00000040 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000226C - 0000226F (0x4 bytes), align: 2
  Segment part 19.            Intra module refs:   DialogCSM::CreateDialogCSM(int, void *)
                                                   DialogCSM::OnCreate(CSM_RAM *)
    -------------------------------------------------------------------------
CODE
  Segment part 20. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 21. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DialogCSM::UpdateNameDlgCSM(DLG_CSM *, int)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00002270 - 00002273 (0x4 bytes), align: 2
  Segment part 22.            Intra module refs:   DialogCSM::OnCreate(CSM_RAM *)
    -------------------------------------------------------------------------
CODE
  Segment part 23. NOT NEEDED.Intra module refs:   DialogCSM::OnClose(CSM_RAM *)
                                                   DialogCSM::OnCreate(CSM_RAM *)
    -------------------------------------------------------------------------
CODE
  Segment part 24. NOT NEEDED.Intra module refs:   DialogCSM::new DialogCSM()
    -------------------------------------------------------------------------
CODE
  Segment part 25. NOT NEEDED.Intra module refs:   DialogCSM::OnCreate(CSM_RAM *)
    -------------------------------------------------------------------------
CODE
  Segment part 26. NOT NEEDED.Intra module refs:   DialogCSM::OnCreate(CSM_RAM *)
    -------------------------------------------------------------------------
CODE
  Segment part 27. NOT NEEDED.Intra module refs:   DialogCSM::OnCreate(CSM_RAM *)
    -------------------------------------------------------------------------
CODE
  Segment part 28. NOT NEEDED.Intra module refs:   DialogCSM::OnCreate(CSM_RAM *)
    -------------------------------------------------------------------------
CODE
  Segment part 29. NOT NEEDED.Intra module refs:   DialogCSM::OnCreate(CSM_RAM *)
    -------------------------------------------------------------------------
CODE
  Segment part 30. NOT NEEDED.Intra module refs:   DialogCSM::OnCreate(CSM_RAM *)
    -------------------------------------------------------------------------
CODE
  Segment part 31. NOT NEEDED.Intra module refs:   DialogCSM::OnCreate(CSM_RAM *)
    -------------------------------------------------------------------------
CODE
  Segment part 32. NOT NEEDED.Intra module refs:   DialogCSM::OnCreate(CSM_RAM *)
    -------------------------------------------------------------------------
CODE
  Segment part 33. NOT NEEDED.Intra module refs:   DialogCSM::OnCreate(CSM_RAM *)
    -------------------------------------------------------------------------
CODE
  Segment part 34. NOT NEEDED.Intra module refs:   DialogCSM::OnCreate(CSM_RAM *)
    -------------------------------------------------------------------------
CODE
  Segment part 35. NOT NEEDED.Intra module refs:   DialogCSM::OnCreate(CSM_RAM *)
    -------------------------------------------------------------------------
CODE
  Segment part 36. NOT NEEDED.Intra module refs:   DialogCSM::OnCreate(CSM_RAM *)
    -------------------------------------------------------------------------
CODE
  Segment part 37. NOT NEEDED.Intra module refs:   DialogCSM::OnCreate(CSM_RAM *)
    -------------------------------------------------------------------------
CODE
  Segment part 38. NOT NEEDED.Intra module refs:   DialogCSM::OnCreate(CSM_RAM *)
    -------------------------------------------------------------------------
CODE
  Segment part 39. NOT NEEDED.Intra module refs:   DialogCSM::OnCreate(CSM_RAM *)
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000AFC0 - 0000AFC7 (0x8 bytes), align: 2
  Segment part 2.             Intra module refs:   DialogCSM::OnCreate(CSM_RAM *)

    *************************************************************************

  FILE NAME : D:\pasha\elf\SieELF\MySMSYS\Mss3\Release_ELKA_EN\Obj\EditGUI.r79
  PROGRAM MODULE, NAME : EditGUI

  SEGMENTS IN THE MODULE
  ======================
DATA_C
  Relative segment, address: CODE_AREA 0000AFC8 - 0000AFD3 (0xc bytes), align: 2
  Segment part 2.             Intra module refs:   EditGUI::GHook(void *, int)
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000AFD4 - 0000AFEB (0x18 bytes), align: 2
  Segment part 3.             Intra module refs:   Segment part 4
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000AFEC - 0000AFF3 (0x8 bytes), align: 2
  Segment part 4.             Intra module refs:   EditGUI::EditGUI()
    -------------------------------------------------------------------------
DATA_I
  Relative segment, address: DATA_AREA 00000000 - 00000013 (0x14 bytes), align: 2
  Segment part 5.             Intra module refs:   Segment part 60
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           editgui_hdr             00000000 
    -------------------------------------------------------------------------
CODE
  Segment part 13. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00002274 - 0000228F (0x1c bytes), align: 2
  Segment part 14.            Intra module refs:   EditGUI::OnKey(void *, GUI_MSG *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EditOptionMenu::new EditOptionMenu()
                                   00002274 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 15. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00002290 - 000022AB (0x1c bytes), align: 2
  Segment part 16.            Intra module refs:   EditGUI::OnKey(void *, GUI_MSG *)
                                                   EditOptionMenu::OnKey(void *, GUI_MSG *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EditGUI::new EditGUI()
                                   00002290        DialogCSM::OnCreate(CSM_RAM *) (DialogCSM)
                                                   MainMenu::OnKey(void *, GUI_MSG *) (MainMenu)
                                                   PopupNewIn::OnKey(void *, GUI_MSG *) (PopupGUI)
                                                   SmsListMenu::OnKey(void *, GUI_MSG *) (SmsListMenu)
                                                   SmsOptionMenu::OnKey(void *, GUI_MSG *) (SmsListMenu)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 17. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000022AC - 000022C7 (0x1c bytes), align: 2
  Segment part 18.            Intra module refs:   EditGUI::CreateEditGUI(DLG_CSM *, _SDLIST *, int, int, int)
                                                   EditGUI::CreateEditGUI(DLG_CSM *, char const *)
                                                   EditGUI::GHook(void *, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EditGUI::delete ~EditGUI(EditGUI *)
                                   000022AC 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 19. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 20. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EditOptionMenu::delete ~EditOptionMenu(EditOptionMenu *)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 21. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000022C8 - 0000236B (0xa4 bytes), align: 2
  Segment part 22.            Intra module refs:   EditGUI::new EditGUI()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EditGUI::EditGUI()      000022C8 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 23. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000236C - 00002387 (0x1c bytes), align: 2
  Segment part 24.            Intra module refs:   EditGUI::delete ~EditGUI(EditGUI *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EditGUI::~EditGUI()     0000236C 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 25. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00002388 - 0000250B (0x184 bytes), align: 2
  Segment part 26.            Intra module refs:   EditGUI::OnKey(void *, GUI_MSG *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EditGUI::EdOpUserItem(USR_MENU_ITEM *)
                                   00002388 
               stack 1 = 00000000 ( 00000040 )
    -------------------------------------------------------------------------
CODE
  Segment part 27. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000250C - 00002857 (0x34c bytes), align: 2
  Segment part 28.            Intra module refs:   EditGUI::EditGUI()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EditGUI::OnKey(void *, GUI_MSG *)
                                   0000250C 
               stack 1 = 00000000 ( 00000044 )
    -------------------------------------------------------------------------
CODE
  Segment part 29. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_I
  Relative segment, address: DATA_AREA 00000014 - 0000003B (0x28 bytes), align: 2
  Segment part 7.             Intra module refs:   EditGUI::GHook(void *, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SK_ADRBK                0000001C        LangPack::InitLgp() (LangPack)
           SK_CANCEL               00000024        LangPack::InitLgp() (LangPack)
           SK_INSNM                00000034        LangPack::InitLgp() (LangPack)
           SK_OPTIONS              00000014        LangPack::InitLgp() (LangPack)
           SK_OP_PIC               0000002C 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00002858 - 0000293F (0xe8 bytes), align: 2
  Segment part 30.            Intra module refs:   EditGUI::GHook(void *, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EditGUI::DoSmsWorkBG(void *, int)
                                   00002858 
               stack 1 = 00000000 ( 00000018 )
    -------------------------------------------------------------------------
CODE
  Segment part 31. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00002940 - 00002E0F (0x4d0 bytes), align: 2
  Segment part 32.            Intra module refs:   EditGUI::EditGUI()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EditGUI::GHook(void *, int)
                                   00002940 
               stack 1 = 00000000 ( 00000054 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00002E10 - 00002E13 (0x4 bytes), align: 2
  Segment part 33.            Intra module refs:   EditGUI::EdOpUserItem(USR_MENU_ITEM *)
                                                   EditGUI::GHook(void *, int)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00002E14 - 00002E17 (0x4 bytes), align: 2
  Segment part 34.            Intra module refs:   EditGUI::EdOpUserItem(USR_MENU_ITEM *)
                                                   EditGUI::GHook(void *, int)
    -------------------------------------------------------------------------
CODE
  Segment part 35. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00002E18 - 00002E1B (0x4 bytes), align: 2
  Segment part 36.            Intra module refs:   EditGUI::EditGUI()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EditGUI::Locret()       00002E18 
    -------------------------------------------------------------------------
CODE
  Segment part 37. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00002E1C - 0000316F (0x354 bytes), align: 2
  Segment part 38.            Intra module refs:   EditGUI::OnKey(void *, GUI_MSG *)
                                                   EditOptionMenu::OnKey(void *, GUI_MSG *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EditGUI::CreateEditGUI(DLG_CSM *, _SDLIST *, int, int, int)
                                   00002E1C        DialogCSM::OnCreate(CSM_RAM *) (DialogCSM)
                                                   MainMenu::OnKey(void *, GUI_MSG *) (MainMenu)
                                                   PopupNewIn::OnKey(void *, GUI_MSG *) (PopupGUI)
                                                   SmsListMenu::OnKey(void *, GUI_MSG *) (SmsListMenu)
                                                   SmsOptionMenu::OnKey(void *, GUI_MSG *) (SmsListMenu)
               stack 1 = 00000000 ( 00001078 )
    -------------------------------------------------------------------------
CODE
  Segment part 39. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000AFF4 - 0000B007 (0x14 bytes), align: 2
  Segment part 9.             Intra module refs:   EditOptionMenu::CreateEditOptionMenu(DLG_CSM *, _SDLIST *, int, int, int)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003170 - 000031D3 (0x64 bytes), align: 2
  Segment part 40.            Intra module refs:   EditOptionMenu::new EditOptionMenu()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EditOptionMenu::EditOptionMenu()
                                   00003170 
    -------------------------------------------------------------------------
CODE
  Segment part 41. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 42. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EditOptionMenu::~EditOptionMenu()
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 43. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000031D4 - 0000336F (0x19c bytes), align: 2
  Segment part 44.            Intra module refs:   EditOptionMenu::EditOptionMenu()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EditOptionMenu::OnKey(void *, GUI_MSG *)
                                   000031D4 
               stack 1 = 00000000 ( 00000018 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003370 - 00003373 (0x4 bytes), align: 2
  Segment part 45.            Intra module refs:   EditGUI::DoSmsWorkBG(void *, int)
                                                   EditGUI::GHook(void *, int)
                                                   EditGUI::OnKey(void *, GUI_MSG *)
                                                   EditOptionMenu::OnKey(void *, GUI_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 46. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003374 - 00003403 (0x90 bytes), align: 2
  Segment part 47.            Intra module refs:   EditOptionMenu::EditOptionMenu()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EditOptionMenu::GHook(void *, int)
                                   00003374 
               stack 1 = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003404 - 00003407 (0x4 bytes), align: 2
  Segment part 48.            Intra module refs:   EditOptionMenu::GHook(void *, int)
    -------------------------------------------------------------------------
CODE
  Segment part 49. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_I
  Relative segment, address: DATA_AREA 0000003C - 00000057 (0x1c bytes), align: 2
  Segment part 10.            Intra module refs:   EditOptionMenu::ItemProc(void *, int, void *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EDO_ITEM_LGPS           0000003C        LangPack::InitLgp() (LangPack)
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B008 - 0000B00F (0x8 bytes), align: 2
  Segment part 12.            Intra module refs:   EditOptionMenu::ItemProc(void *, int, void *)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003408 - 0000347F (0x78 bytes), align: 2
  Segment part 50.            Intra module refs:   EditOptionMenu::EditOptionMenu()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EditOptionMenu::ItemProc(void *, int, void *)
                                   00003408 
               stack 1 = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
CODE
  Segment part 51. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003480 - 000034BF (0x40 bytes), align: 2
  Segment part 52.            Intra module refs:   EditGUI::OnKey(void *, GUI_MSG *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EditOptionMenu::CreateEditOptionMenu(DLG_CSM *, _SDLIST *, int, int, int)
                                   00003480 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 53. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 54. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EditGUI::UpdateCSMName(DLG_CSM *, int)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000034C0 - 000034C3 (0x4 bytes), align: 2
  Segment part 55.            Intra module refs:   EditOptionMenu::GHook(void *, int)
                                                   EditOptionMenu::ItemProc(void *, int, void *)
    -------------------------------------------------------------------------
CODE
  Segment part 56. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000034C4 - 0000371B (0x258 bytes), align: 2
  Segment part 57.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EditGUI::CreateEditGUI(DLG_CSM *, char const *)
                                   000034C4        DialogCSM::OnCreate(CSM_RAM *) (DialogCSM)
               stack 1 = 00000000 ( 0000107C )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000371C - 0000371F (0x4 bytes), align: 2
  Segment part 58.            Intra module refs:   EditGUI::CreateEditGUI(DLG_CSM *, _SDLIST *, int, int, int)
                                                   EditGUI::CreateEditGUI(DLG_CSM *, char const *)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003720 - 00003723 (0x4 bytes), align: 2
  Segment part 59.            Intra module refs:   EditGUI::CreateEditGUI(DLG_CSM *, _SDLIST *, int, int, int)
                                                   EditGUI::CreateEditGUI(DLG_CSM *, char const *)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003724 - 00003727 (0x4 bytes), align: 2
  Segment part 60.            Intra module refs:   EditGUI::CreateEditGUI(DLG_CSM *, _SDLIST *, int, int, int)
                                                   EditGUI::CreateEditGUI(DLG_CSM *, char const *)
    -------------------------------------------------------------------------
CODE
  Segment part 61. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003728 - 0000380F (0xe8 bytes), align: 2
  Segment part 62.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EditGUI::InsertText(void *, WSHDR *)
                                   00003728        NAbCSM::OnMessage(CSM_RAM *, GBS_MSG *) (NativeAddressbook)
               stack 1 = 00000000 ( 0000004C )
    -------------------------------------------------------------------------
CODE
  Segment part 63. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 64. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EditGUI::SetNumber(void *, WSHDR *)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 65. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 66. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EditGUI::InsertNumber(void *, WSHDR *)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 67. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003810 - 00003897 (0x88 bytes), align: 2
  Segment part 68.            Intra module refs:   EditGUI::EdOpUserItem(USR_MENU_ITEM *)
                                                   EditGUI::OnKey(void *, GUI_MSG *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EditGUI::EditSendSMS(WSHDR *)
                                   00003810 
               stack 1 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
CODE
  Segment part 69. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003898 - 0000391F (0x88 bytes), align: 2
  Segment part 70.            Intra module refs:   EditGUI::EdOpUserItem(USR_MENU_ITEM *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EditGUI::SaveDraft(WSHDR *)
                                   00003898 
               stack 1 = 00000000 ( 00000018 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003920 - 00003923 (0x4 bytes), align: 2
  Segment part 71.            Intra module refs:   EditGUI::SaveDraft(WSHDR *)
    -------------------------------------------------------------------------
CODE
  Segment part 72. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003924 - 00003A4F (0x12c bytes), align: 2
  Segment part 73.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EditGUI::InsertNumber(void *, char *)
                                   00003924        NAbCSM::OnMessage(CSM_RAM *, GBS_MSG *) (NativeAddressbook)
               stack 1 = 00000000 ( 0000005C )
    -------------------------------------------------------------------------
CODE
  Segment part 74. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003A50 - 00003AD3 (0x84 bytes), align: 2
  Segment part 75.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EditGUI::SetNumber(void *, char *)
                                   00003A50        NAbCSM::OnMessage(CSM_RAM *, GBS_MSG *) (NativeAddressbook)
               stack 1 = 00000000 ( 0000001C )
    -------------------------------------------------------------------------
CODE
  Segment part 76. NOT NEEDED.Intra module refs:   EditGUI::new EditGUI()
                                                   EditOptionMenu::new EditOptionMenu()
    -------------------------------------------------------------------------
CODE
  Segment part 77. NOT NEEDED.Intra module refs:   EditGUI::delete ~EditGUI(EditGUI *)
                                                   EditOptionMenu::GHook(void *, int)
    -------------------------------------------------------------------------
CODE
  Segment part 78. NOT NEEDED.Intra module refs:   EditGUI::EditGUI()
    -------------------------------------------------------------------------
CODE
  Segment part 79. NOT NEEDED.Intra module refs:   EditGUI::~EditGUI()
    -------------------------------------------------------------------------
CODE
  Segment part 80. NOT NEEDED.Intra module refs:   EditGUI::EdOpUserItem(USR_MENU_ITEM *)
                                                   EditGUI::OnKey(void *, GUI_MSG *)
                                                   EditOptionMenu::OnKey(void *, GUI_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 81. NOT NEEDED.Intra module refs:   EditGUI::EdOpUserItem(USR_MENU_ITEM *)
                                                   EditGUI::OnKey(void *, GUI_MSG *)
                                                   EditOptionMenu::OnKey(void *, GUI_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 82. NOT NEEDED.Intra module refs:   EditGUI::EdOpUserItem(USR_MENU_ITEM *)
    -------------------------------------------------------------------------
CODE
  Segment part 83. NOT NEEDED.Intra module refs:   EditGUI::EdOpUserItem(USR_MENU_ITEM *)
    -------------------------------------------------------------------------
CODE
  Segment part 84. NOT NEEDED.Intra module refs:   EditGUI::OnKey(void *, GUI_MSG *)
                                                   EditOptionMenu::OnKey(void *, GUI_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 85. NOT NEEDED.Intra module refs:   EditGUI::OnKey(void *, GUI_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 86. NOT NEEDED.Intra module refs:   EditGUI::OnKey(void *, GUI_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 87. NOT NEEDED.Intra module refs:   EditGUI::OnKey(void *, GUI_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 88. NOT NEEDED.Intra module refs:   EditGUI::DoSmsWorkBG(void *, int)
    -------------------------------------------------------------------------
CODE
  Segment part 89. NOT NEEDED.Intra module refs:   EditGUI::DoSmsWorkBG(void *, int)
                                                   EditGUI::SaveDraft(WSHDR *)
    -------------------------------------------------------------------------
CODE
  Segment part 90. NOT NEEDED.Intra module refs:   EditGUI::DoSmsWorkBG(void *, int)
                                                   EditOptionMenu::OnKey(void *, GUI_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 91. NOT NEEDED.Intra module refs:   EditGUI::GHook(void *, int)
    -------------------------------------------------------------------------
CODE
  Segment part 92. NOT NEEDED.Intra module refs:   EditGUI::GHook(void *, int)
    -------------------------------------------------------------------------
CODE
  Segment part 93. NOT NEEDED.Intra module refs:   EditGUI::GHook(void *, int)
    -------------------------------------------------------------------------
CODE
  Segment part 94. NOT NEEDED.Intra module refs:   EditGUI::GHook(void *, int)
    -------------------------------------------------------------------------
CODE
  Segment part 95. NOT NEEDED.Intra module refs:   EditGUI::GHook(void *, int)
                                                   EditGUI::InsertNumber(void *, char *)
                                                   EditGUI::SetNumber(void *, char *)
    -------------------------------------------------------------------------
CODE
  Segment part 96. NOT NEEDED.Intra module refs:   EditGUI::GHook(void *, int)
    -------------------------------------------------------------------------
CODE
  Segment part 97. NOT NEEDED.Intra module refs:   EditGUI::GHook(void *, int)
    -------------------------------------------------------------------------
CODE
  Segment part 98. NOT NEEDED.Intra module refs:   EditGUI::GHook(void *, int)
    -------------------------------------------------------------------------
CODE
  Segment part 99. NOT NEEDED.Intra module refs:   EditGUI::GHook(void *, int)
    -------------------------------------------------------------------------
CODE
  Segment part 100. NOT NEEDED.Intra module refs   EditGUI::GHook(void *, int)
    -------------------------------------------------------------------------
CODE
  Segment part 101. NOT NEEDED.Intra module refs   EditGUI::GHook(void *, int)
    -------------------------------------------------------------------------
CODE
  Segment part 102. NOT NEEDED.Intra module refs   EditGUI::CreateEditGUI(DLG_CSM *, _SDLIST *, int, int, int)
    -------------------------------------------------------------------------
CODE
  Segment part 103. NOT NEEDED.Intra module refs   EditGUI::CreateEditGUI(DLG_CSM *, _SDLIST *, int, int, int)
                                                   EditGUI::CreateEditGUI(DLG_CSM *, char const *)
    -------------------------------------------------------------------------
CODE
  Segment part 104. NOT NEEDED.Intra module refs   EditGUI::CreateEditGUI(DLG_CSM *, _SDLIST *, int, int, int)
                                                   EditGUI::CreateEditGUI(DLG_CSM *, char const *)
    -------------------------------------------------------------------------
CODE
  Segment part 105. NOT NEEDED.Intra module refs   EditOptionMenu::OnKey(void *, GUI_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 106. NOT NEEDED.Intra module refs   EditOptionMenu::CreateEditOptionMenu(DLG_CSM *, _SDLIST *, int, int, int)
    -------------------------------------------------------------------------
CODE
  Segment part 107. NOT NEEDED.Intra module refs   EditGUI::CreateEditGUI(DLG_CSM *, char const *)
    -------------------------------------------------------------------------
CODE
  Segment part 108. NOT NEEDED.Intra module refs   EditGUI::SetNumber(void *, char *)
    -------------------------------------------------------------------------
CODE
  Segment part 109. NOT NEEDED.Intra module refs   EditGUI::InsertNumber(void *, char *)
    -------------------------------------------------------------------------
CODE
  Segment part 110. NOT NEEDED.Intra module refs   EditGUI::InsertNumber(void *, char *)
    -------------------------------------------------------------------------
CODE
  Segment part 111. NOT NEEDED.Intra module refs   EditGUI::InsertNumber(void *, char *)
    -------------------------------------------------------------------------
CODE
  Segment part 112. NOT NEEDED.Intra module refs   EditGUI::EditSendSMS(WSHDR *)
    -------------------------------------------------------------------------
CODE
  Segment part 113. NOT NEEDED.Intra module refs   EditGUI::EditSendSMS(WSHDR *)
    -------------------------------------------------------------------------
CODE
  Segment part 114. NOT NEEDED.Intra module refs   EditGUI::EditSendSMS(WSHDR *)
    -------------------------------------------------------------------------
CODE
  Segment part 115. NOT NEEDED.Intra module refs   EditGUI::EditSendSMS(WSHDR *)
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_ID
  Relative segment, address: CODE_AREA 00000000 - 00000013 (0x14 bytes), align: 2
  Segment part 6.             Intra module refs:   editgui_hdr
    -------------------------------------------------------------------------
DATA_ID
  Relative segment, address: CODE_AREA 00000014 - 0000003B (0x28 bytes), align: 2
  Segment part 8.             Intra module refs:   Segment part 7
    -------------------------------------------------------------------------
DATA_ID
  Relative segment, address: CODE_AREA 0000003C - 00000057 (0x1c bytes), align: 2
  Segment part 11.            Intra module refs:   EDO_ITEM_LGPS
    -------------------------------------------------------------------------
DATA_ID
  Segment part 116. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?*?DATA_ID              
    -------------------------------------------------------------------------
INITTAB
  Relative segment, address: CODE_AREA 0000BC00 - 0000BC0B (0xc bytes), align: 2
  Segment part 117. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?init?tab?DATA_I        0000BC00 

    *************************************************************************

  FILE NAME : D:\pasha\elf\SieELF\MySMSYS\Mss3\Release_ELKA_EN\Obj\File.r79
  PROGRAM MODULE, NAME : File

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003AD4 - 00003AF3 (0x20 bytes), align: 2
  Segment part 4.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CFile::FOpen(char const *, unsigned int, unsigned int)
                                   00003AD4        LangPack::LoadLangFile() (LangPack)
                                                   SmsData::ExportAllToText() (SmsData)
                                                   SmsData::NewToReadSMS(_SDLIST *) (SmsData)
                                                   SmsData::ReadDat() (SmsData)
                                                   SmsData::ReadMss(char *, _SDLIST *) (SmsData)
                                                   SmsData::SaveMss(WSHDR *, char const *, _SDLIST *, int, int) (SmsData)
                                                   TplMenu::ReadTpl() (Template)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003AF4 - 00003B13 (0x20 bytes), align: 2
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CFile::FRead(int, void *, int)
                                   00003AF4        LangPack::LoadLangFile() (LangPack)
                                                   SmsData::NewToReadSMS(_SDLIST *) (SmsData)
                                                   SmsData::ReadDat() (SmsData)
                                                   SmsData::ReadMss(char *, _SDLIST *) (SmsData)
                                                   TplMenu::ReadTpl() (Template)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 7. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003B14 - 00003B33 (0x20 bytes), align: 2
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CFile::FWrite(int, void const *, int)
                                   00003B14        SmsData::ExportAllToText() (SmsData)
                                                   SmsData::NewToReadSMS(_SDLIST *) (SmsData)
                                                   SmsData::SaveMss(WSHDR *, char const *, _SDLIST *, int, int) (SmsData)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003B34 - 00003B4B (0x18 bytes), align: 2
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CFile::FClose(int)      00003B34        LangPack::LoadLangFile() (LangPack)
                                                   SmsData::ExportAllToText() (SmsData)
                                                   SmsData::NewToReadSMS(_SDLIST *) (SmsData)
                                                   SmsData::ReadDat() (SmsData)
                                                   SmsData::ReadMss(char *, _SDLIST *) (SmsData)
                                                   SmsData::SaveMss(WSHDR *, char const *, _SDLIST *, int, int) (SmsData)
                                                   TplMenu::ReadTpl() (Template)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 11. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003B4C - 00003B6F (0x24 bytes), align: 2
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CFile::LSeek(int, unsigned int, unsigned int)
                                   00003B4C        LangPack::LoadLangFile() (LangPack)
                                                   SmsData::NewToReadSMS(_SDLIST *) (SmsData)
                                                   SmsData::ReadDat() (SmsData)
                                                   SmsData::ReadMss(char *, _SDLIST *) (SmsData)
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 13. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003B70 - 00003B87 (0x18 bytes), align: 2
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CFile::MkDir(char const *)
                                   00003B70        IconPack::LoadIconPack() (IconPack)
                                                   SmsData::ExportAllToText() (SmsData)
                                                   SmsData::MoveToArchive(_SDLIST *) (SmsData)
                                                   SmsData::SaveMss(WSHDR *, char const *, _SDLIST *, int, int) (SmsData)
                                                   TplMenu::ReadTpl() (Template)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 15. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003B88 - 00003B9F (0x18 bytes), align: 2
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CFile::IsDir(char const *)
                                   00003B88        IconPack::LoadIconPack() (IconPack)
                                                   LangPack::LoadLangFile() (LangPack)
                                                   SmsData::CheckFolder(int) (SmsData)
                                                   SmsData::ExportAllToText() (SmsData)
                                                   SmsData::MoveToArchive(_SDLIST *) (SmsData)
                                                   SmsData::ReadFolder(int) (SmsData)
                                                   SmsData::SaveMss(WSHDR *, char const *, _SDLIST *, int, int) (SmsData)
                                                   TplMenu::ReadTpl() (Template)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 17. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003BA0 - 00003BBB (0x1c bytes), align: 2
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CFile::FindFirstFile(DIR_ENTRY *, char *)
                                   00003BA0        SmsData::CheckFolder(int) (SmsData)
                                                   SmsData::ReadFolder(int) (SmsData)
                                                   TplMenu::ReadTpl() (Template)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 19. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003BBC - 00003BD3 (0x18 bytes), align: 2
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CFile::FindNextFile(DIR_ENTRY *)
                                   00003BBC        SmsData::CheckFolder(int) (SmsData)
                                                   SmsData::ReadFolder(int) (SmsData)
                                                   TplMenu::ReadTpl() (Template)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 21. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003BD4 - 00003BEB (0x18 bytes), align: 2
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CFile::FindClose(DIR_ENTRY *)
                                   00003BD4        SmsData::CheckFolder(int) (SmsData)
                                                   SmsData::ReadFolder(int) (SmsData)
                                                   TplMenu::ReadTpl() (Template)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 23. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003BEC - 00003C1B (0x30 bytes), align: 2
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CFile::IsFileExist(char const *)
                                   00003BEC        DaemonCSM::PlayNotifySound(DaemonCSM *, char *) (DaemonCSM)
                                                   IconPack::LoadIconPack() (IconPack)
                                                   SmsData::CheckSDList() (SmsData)
                                                   SmsData::ExportAllToText() (SmsData)
                                                   SmsData::GetFilePathSDL(_SDLIST *, char *, char *, int) (SmsData)
                                                   SmsData::GetMssPath(char *, char *, TTime *, TDate *) (SmsData)
               stack 1 = 00000000 ( 0000002C )
    -------------------------------------------------------------------------
CODE
  Segment part 25. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003C1C - 00003C33 (0x18 bytes), align: 2
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CFile::FDelete(char const *)
                                   00003C1C        SmsData::DeleteAllMss() (SmsData)
                                                   SmsData::DeleteMessage(_SDLIST *) (SmsData)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 27. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003C34 - 00003C4F (0x1c bytes), align: 2
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CFile::FMove(char const *, char const *)
                                   00003C34        SmsData::MoveToArchive(_SDLIST *) (SmsData)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 29. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 30. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CFile::GetFileCountOfDir(char const *)
                                   
               not allocated function
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_C
  Segment part 2. NOT NEEDED.

    *************************************************************************

  FILE NAME : D:\pasha\elf\SieELF\MySMSYS\Mss3\Release_ELKA_EN\Obj\GlobalVariable.r79
  PROGRAM MODULE, NAME : GlobalVariable

  SEGMENTS IN THE MODULE
  ======================
DATA_Z
  Relative segment, address: CODE_AREA 0000BC14 - 0000BC93 (0x80 bytes), align: 2
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sms_dat                 0000BC14        InitDatPath() (main)
                                                   SmsData::ReadDat() (SmsData)
    -------------------------------------------------------------------------
DATA_Z
  Relative segment, address: CODE_AREA 0000BC94 - 0000BD13 (0x80 bytes), align: 2
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           main_folder             0000BC94        IconPack::LoadIconPack() (IconPack)
                                                   InitDatPath() (main)
                                                   LangPack::LoadLangFile() (LangPack)
                                                   Segment part 155 (SmsData)
                                                   Segment part 39 (OthersMenu)
                                                   Segment part 91 (SmsData)
                                                   TplMenu::ReadTpl() (Template)
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B010 - 0000B01B (0xc bytes), align: 2
  Segment part 4.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           softkeys                0000B010        EditOptionMenu::EditOptionMenu() (EditGUI)
                                                   MainMenu::MainMenu() (MainMenu)
                                                   OthMenu::OthMenu() (OthersMenu)
                                                   PopupNewIn::PopupNewIn() (PopupGUI)
                                                   Segment part 38 (SmsListMenu)
                                                   Segment part 6 (TViewGUI)
                                                   Segment part 9 (PopupGUI)
                                                   TplMenu::TplMenu() (Template)
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B01C - 0000B01F (0x4 bytes), align: 2
  Segment part 5.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           minus11                 0000B01C        DaemonCSM::DaemonCSM() (DaemonCSM)
                                                   DialogCSM::DialogCSM() (DialogCSM)
                                                   NAbCSM::NAbCSM() (NativeAddressbook)
    -------------------------------------------------------------------------
DATA_I
  Relative segment, address: DATA_AREA 00000058 - 0000006F (0x18 bytes), align: 2
  Segment part 6.             Intra module refs:   sel_menu_skt
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sel_menu_sk             00000058        LangPack::InitLgp() (LangPack)
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B020 - 0000B027 (0x8 bytes), align: 2
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sel_menu_skt            0000B020        EditOptionMenu::EditOptionMenu() (EditGUI)
                                                   OthMenu::OthMenu() (OthersMenu)
                                                   SmsOptionMenu::SmsOptionMenu() (SmsListMenu)
                                                   TplMenu::TplMenu() (Template)
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_ID
  Relative segment, address: CODE_AREA 00000058 - 0000006F (0x18 bytes), align: 2
  Segment part 7.             Intra module refs:   sel_menu_sk
    -------------------------------------------------------------------------
DATA_ID
  Segment part 9. TENTATIVE. Used definition from EditGUI
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?*?DATA_ID              
    -------------------------------------------------------------------------
INITTAB
  Segment part 10. TENTATIVE. Used definition from EditGUI
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?init?tab?DATA_I        
    -------------------------------------------------------------------------
INITTAB
  Segment part 11. TENTATIVE. Used definition from AdrList
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?init?tab?DATA_Z        

    *************************************************************************

  FILE NAME : D:\pasha\elf\SieELF\MySMSYS\Mss3\Release_ELKA_EN\Obj\IconPack.r79
  PROGRAM MODULE, NAME : IconPack

  SEGMENTS IN THE MODULE
  ======================
DATA_I
  Relative segment, address: DATA_AREA 00000070 - 000000E7 (0x78 bytes), align: 2
  Segment part 33.            Intra module refs:   IconPack::LoadIconPack()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IconNames               00000070 
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B028 - 0000B037 (0x10 bytes), align: 2
  Segment part 2.             Intra module refs:   Segment part 34
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B038 - 0000B04B (0x14 bytes), align: 2
  Segment part 3.             Intra module refs:   Segment part 34
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000BBE0 - 0000BBE0 (0x1 bytes), align: 0
  Segment part 4.             Intra module refs:   Segment part 34
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B04C - 0000B05B (0x10 bytes), align: 2
  Segment part 5.             Intra module refs:   Segment part 34
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B05C - 0000B06B (0x10 bytes), align: 2
  Segment part 6.             Intra module refs:   Segment part 34
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B06C - 0000B07B (0x10 bytes), align: 2
  Segment part 7.             Intra module refs:   Segment part 34
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B07C - 0000B087 (0xc bytes), align: 2
  Segment part 8.             Intra module refs:   Segment part 34
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B088 - 0000B097 (0x10 bytes), align: 2
  Segment part 9.             Intra module refs:   Segment part 34
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B098 - 0000B0A7 (0x10 bytes), align: 2
  Segment part 10.            Intra module refs:   Segment part 34
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B0A8 - 0000B0B7 (0x10 bytes), align: 2
  Segment part 11.            Intra module refs:   Segment part 34
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B0B8 - 0000B0C7 (0x10 bytes), align: 2
  Segment part 12.            Intra module refs:   Segment part 34
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B0C8 - 0000B0D7 (0x10 bytes), align: 2
  Segment part 13.            Intra module refs:   Segment part 34
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B0D8 - 0000B0E7 (0x10 bytes), align: 2
  Segment part 14.            Intra module refs:   Segment part 34
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B0E8 - 0000B0F7 (0x10 bytes), align: 2
  Segment part 15.            Intra module refs:   Segment part 34
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B0F8 - 0000B107 (0x10 bytes), align: 2
  Segment part 16.            Intra module refs:   Segment part 34
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B108 - 0000B117 (0x10 bytes), align: 2
  Segment part 17.            Intra module refs:   Segment part 34
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B118 - 0000B127 (0x10 bytes), align: 2
  Segment part 18.            Intra module refs:   Segment part 34
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B128 - 0000B12F (0x8 bytes), align: 2
  Segment part 19.            Intra module refs:   IconPack::LoadIconPack()
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B130 - 0000B13F (0x10 bytes), align: 2
  Segment part 20.            Intra module refs:   Segment part 34
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B140 - 0000B14F (0x10 bytes), align: 2
  Segment part 21.            Intra module refs:   Segment part 34
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B150 - 0000B15F (0x10 bytes), align: 2
  Segment part 22.            Intra module refs:   Segment part 34
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B160 - 0000B16F (0x10 bytes), align: 2
  Segment part 23.            Intra module refs:   Segment part 34
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B170 - 0000B17F (0x10 bytes), align: 2
  Segment part 24.            Intra module refs:   Segment part 34
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B180 - 0000B18F (0x10 bytes), align: 2
  Segment part 25.            Intra module refs:   Segment part 34
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B190 - 0000B19F (0x10 bytes), align: 2
  Segment part 26.            Intra module refs:   Segment part 34
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B1A0 - 0000B1AF (0x10 bytes), align: 2
  Segment part 27.            Intra module refs:   Segment part 34
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B1B0 - 0000B1BF (0x10 bytes), align: 2
  Segment part 28.            Intra module refs:   Segment part 34
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B1C0 - 0000B1D3 (0x14 bytes), align: 2
  Segment part 29.            Intra module refs:   Segment part 34
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B1D4 - 0000B1E3 (0x10 bytes), align: 2
  Segment part 30.            Intra module refs:   Segment part 34
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B1E4 - 0000B1F3 (0x10 bytes), align: 2
  Segment part 31.            Intra module refs:   Segment part 34
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B1F4 - 0000B203 (0x10 bytes), align: 2
  Segment part 32.            Intra module refs:   Segment part 34
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B204 - 0000B27F (0x7c bytes), align: 2
  Segment part 35.            Intra module refs:   IconPack::LoadDefaultIP()
    -------------------------------------------------------------------------
CODE
  Segment part 37. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003C50 - 00003C77 (0x28 bytes), align: 2
  Segment part 38.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IconPack::new IconPack()
                                   00003C50        DaemonCSM::OnCreate(CSM_RAM *) (DaemonCSM)
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 39. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003C78 - 00003C93 (0x1c bytes), align: 2
  Segment part 40.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IconPack::delete ~IconPack(IconPack *)
                                   00003C78        DaemonCSM::OnClose(CSM_RAM *) (DaemonCSM)
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 41. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003C94 - 00003D73 (0xe0 bytes), align: 2
  Segment part 42.            Intra module refs:   IconPack::new IconPack()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IconPack::LoadIconPack()
                                   00003C94 
               stack 1 = 00000000 ( 00000114 )
    -------------------------------------------------------------------------
CODE
  Segment part 43. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003D74 - 00003DAF (0x3c bytes), align: 2
  Segment part 44.            Intra module refs:   IconPack::delete ~IconPack(IconPack *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IconPack::FreeIconPack()
                                   00003D74 
               stack 1 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
CODE
  Segment part 45. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003DB0 - 00003DCB (0x1c bytes), align: 2
  Segment part 46.            Intra module refs:   IconPack::FreeIconPack()
                                                   IconPack::new IconPack()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IconPack::LoadDefaultIP()
                                   00003DB0 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 47. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 48. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IconPack::ZeroIconPack()
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 49. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003DCC - 00003ECF (0x104 bytes), align: 2
  Segment part 50.            Intra module refs:   IconPack::LoadIconPack()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IconPack::InitIconPack()
                                   00003DCC 
    -------------------------------------------------------------------------
CODE
  Segment part 51. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 52. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IconPack::IconPack()    
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 53. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 54. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IconPack::~IconPack()   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 55. NOT NEEDED.Intra module refs:   IconPack::new IconPack()
    -------------------------------------------------------------------------
CODE
  Segment part 56. NOT NEEDED.Intra module refs:   IconPack::FreeIconPack()
                                                   IconPack::delete ~IconPack(IconPack *)
    -------------------------------------------------------------------------
CODE
  Segment part 57. NOT NEEDED.Intra module refs:   IconPack::LoadIconPack()
    -------------------------------------------------------------------------
CODE
  Segment part 58. NOT NEEDED.Intra module refs:   IconPack::LoadIconPack()
    -------------------------------------------------------------------------
CODE
  Segment part 59. NOT NEEDED.Intra module refs:   IconPack::LoadIconPack()
    -------------------------------------------------------------------------
CODE
  Segment part 60. NOT NEEDED.Intra module refs:   IconPack::LoadIconPack()
    -------------------------------------------------------------------------
DATA_Z
  Relative segment, address: CODE_AREA 0000BD14 - 0000BD17 (0x4 bytes), align: 2
  Segment part 36.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IP                      0000BD14        Segment part 22 (DaemonCSM)
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_ID
  Relative segment, address: CODE_AREA 00000070 - 000000E7 (0x78 bytes), align: 2
  Segment part 34.            Intra module refs:   IconNames
    -------------------------------------------------------------------------
INITTAB
  Segment part 61. TENTATIVE. Used definition from AdrList
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?init?tab?DATA_Z        
    -------------------------------------------------------------------------
DATA_ID
  Segment part 62. TENTATIVE. Used definition from EditGUI
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?*?DATA_ID              
    -------------------------------------------------------------------------
INITTAB
  Segment part 63. TENTATIVE. Used definition from EditGUI
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?init?tab?DATA_I        

    *************************************************************************

  FILE NAME : D:\pasha\elf\SieELF\MySMSYS\Mss3\Release_ELKA_EN\Obj\LangPack.r79
  PROGRAM MODULE, NAME : LangPack

  SEGMENTS IN THE MODULE
  ======================
DATA_C
  Relative segment, address: CODE_AREA 0000B280 - 0000B28B (0xc bytes), align: 2
  Segment part 2.             Intra module refs:   LangPack::LoadLangFile()
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000BBE1 - 0000BBE3 (0x3 bytes), align: 0
  Segment part 3.             Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B28C - 0000B293 (0x8 bytes), align: 2
  Segment part 4.             Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B294 - 0000B29F (0xc bytes), align: 2
  Segment part 5.             Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B2A0 - 0000B2A7 (0x8 bytes), align: 2
  Segment part 6.             Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B2A8 - 0000B2AF (0x8 bytes), align: 2
  Segment part 7.             Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B2B0 - 0000B2B7 (0x8 bytes), align: 2
  Segment part 8.             Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B2B8 - 0000B2BF (0x8 bytes), align: 2
  Segment part 9.             Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B2C0 - 0000B2CB (0xc bytes), align: 2
  Segment part 10.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B2CC - 0000B2D3 (0x8 bytes), align: 2
  Segment part 11.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B2D4 - 0000B2DB (0x8 bytes), align: 2
  Segment part 12.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B2DC - 0000B2E3 (0x8 bytes), align: 2
  Segment part 13.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B2E4 - 0000B2EB (0x8 bytes), align: 2
  Segment part 14.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B2EC - 0000B2F3 (0x8 bytes), align: 2
  Segment part 15.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B2F4 - 0000B2FB (0x8 bytes), align: 2
  Segment part 16.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B2FC - 0000B307 (0xc bytes), align: 2
  Segment part 17.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B308 - 0000B30F (0x8 bytes), align: 2
  Segment part 18.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B310 - 0000B317 (0x8 bytes), align: 2
  Segment part 19.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B318 - 0000B31F (0x8 bytes), align: 2
  Segment part 20.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B320 - 0000B327 (0x8 bytes), align: 2
  Segment part 21.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B328 - 0000B337 (0x10 bytes), align: 2
  Segment part 22.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B338 - 0000B347 (0x10 bytes), align: 2
  Segment part 23.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B348 - 0000B367 (0x20 bytes), align: 2
  Segment part 24.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B368 - 0000B37B (0x14 bytes), align: 2
  Segment part 25.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B37C - 0000B383 (0x8 bytes), align: 2
  Segment part 26.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B384 - 0000B38B (0x8 bytes), align: 2
  Segment part 27.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B38C - 0000B393 (0x8 bytes), align: 2
  Segment part 28.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B394 - 0000B39B (0x8 bytes), align: 2
  Segment part 29.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B39C - 0000B3AB (0x10 bytes), align: 2
  Segment part 30.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B3AC - 0000B3B3 (0x8 bytes), align: 2
  Segment part 31.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B3B4 - 0000B3BF (0xc bytes), align: 2
  Segment part 32.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B3C0 - 0000B3C7 (0x8 bytes), align: 2
  Segment part 33.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B3C8 - 0000B3DB (0x14 bytes), align: 2
  Segment part 34.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B3DC - 0000B3F3 (0x18 bytes), align: 2
  Segment part 35.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B3F4 - 0000B3FF (0xc bytes), align: 2
  Segment part 36.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B400 - 0000B417 (0x18 bytes), align: 2
  Segment part 37.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B418 - 0000B433 (0x1c bytes), align: 2
  Segment part 38.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B434 - 0000B43B (0x8 bytes), align: 2
  Segment part 39.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B43C - 0000B453 (0x18 bytes), align: 2
  Segment part 40.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B454 - 0000B463 (0x10 bytes), align: 2
  Segment part 41.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B464 - 0000B473 (0x10 bytes), align: 2
  Segment part 42.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B474 - 0000B483 (0x10 bytes), align: 2
  Segment part 43.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B484 - 0000B49B (0x18 bytes), align: 2
  Segment part 44.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B49C - 0000B4AB (0x10 bytes), align: 2
  Segment part 45.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B4AC - 0000B4C7 (0x1c bytes), align: 2
  Segment part 46.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B4C8 - 0000B4F3 (0x2c bytes), align: 2
  Segment part 47.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B4F4 - 0000B50B (0x18 bytes), align: 2
  Segment part 48.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B50C - 0000B517 (0xc bytes), align: 2
  Segment part 49.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B518 - 0000B52B (0x14 bytes), align: 2
  Segment part 50.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B52C - 0000B53F (0x14 bytes), align: 2
  Segment part 51.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B540 - 0000B55B (0x1c bytes), align: 2
  Segment part 52.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B55C - 0000B567 (0xc bytes), align: 2
  Segment part 53.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B568 - 0000B57B (0x14 bytes), align: 2
  Segment part 54.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B57C - 0000B58F (0x14 bytes), align: 2
  Segment part 55.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B590 - 0000B59F (0x10 bytes), align: 2
  Segment part 56.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B5A0 - 0000B5A7 (0x8 bytes), align: 2
  Segment part 57.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B5A8 - 0000B5B7 (0x10 bytes), align: 2
  Segment part 58.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B5B8 - 0000B5CB (0x14 bytes), align: 2
  Segment part 59.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B5CC - 0000B5E7 (0x1c bytes), align: 2
  Segment part 60.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B5E8 - 0000B5F3 (0xc bytes), align: 2
  Segment part 61.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B5F4 - 0000B607 (0x14 bytes), align: 2
  Segment part 62.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B608 - 0000B613 (0xc bytes), align: 2
  Segment part 63.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B614 - 0000B61F (0xc bytes), align: 2
  Segment part 64.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B620 - 0000B62B (0xc bytes), align: 2
  Segment part 65.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B62C - 0000B633 (0x8 bytes), align: 2
  Segment part 66.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B634 - 0000B643 (0x10 bytes), align: 2
  Segment part 67.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B644 - 0000B653 (0x10 bytes), align: 2
  Segment part 68.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B654 - 0000B65F (0xc bytes), align: 2
  Segment part 69.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B660 - 0000B667 (0x8 bytes), align: 2
  Segment part 70.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B668 - 0000B677 (0x10 bytes), align: 2
  Segment part 71.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B678 - 0000B67F (0x8 bytes), align: 2
  Segment part 72.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B680 - 0000B687 (0x8 bytes), align: 2
  Segment part 73.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000BBE4 - 0000BBE6 (0x3 bytes), align: 0
  Segment part 74.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B688 - 0000B68F (0x8 bytes), align: 2
  Segment part 75.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B690 - 0000B697 (0x8 bytes), align: 2
  Segment part 76.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B698 - 0000B6A3 (0xc bytes), align: 2
  Segment part 77.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B6A4 - 0000B6AB (0x8 bytes), align: 2
  Segment part 78.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B6AC - 0000B6BB (0x10 bytes), align: 2
  Segment part 79.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B6BC - 0000B6C3 (0x8 bytes), align: 2
  Segment part 80.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_I
  Relative segment, address: DATA_AREA 000000E8 - 00000223 (0x13c bytes), align: 2
  Segment part 81.            Intra module refs:   LangPack::LoadLgpDefault()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           df_LGPS                 000000E8 
    -------------------------------------------------------------------------
CODE
  Segment part 84. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003ED0 - 00003EEB (0x1c bytes), align: 2
  Segment part 85.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LangPack::new LangPack()
                                   00003ED0        DaemonCSM::OnCreate(CSM_RAM *) (DaemonCSM)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 86. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003EEC - 00003F07 (0x1c bytes), align: 2
  Segment part 87.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LangPack::delete ~LangPack(LangPack *)
                                   00003EEC        DaemonCSM::OnClose(CSM_RAM *) (DaemonCSM)
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 88. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 89. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LangPack::FreeLangPack()
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 90. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 91. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LangPack::LoadLangPack()
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 92. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003F08 - 0000403F (0x138 bytes), align: 2
  Segment part 93.            Intra module refs:   LangPack::LangPack()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LangPack::LoadLangFile()
                                   00003F08 
               stack 1 = 00000000 ( 00000094 )
    -------------------------------------------------------------------------
CODE
  Segment part 94. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00004040 - 0000405B (0x1c bytes), align: 2
  Segment part 95.            Intra module refs:   LangPack::LangPack()
                                                   LangPack::~LangPack()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LangPack::LoadLgpDefault()
                                   00004040 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 96. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000405C - 0000408F (0x34 bytes), align: 2
  Segment part 97.            Intra module refs:   LangPack::LoadLangFile()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LangPack::GotoLangLineEnd(char *)
                                   0000405C 
    -------------------------------------------------------------------------
CODE
  Segment part 98. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00004090 - 000040BB (0x2c bytes), align: 2
  Segment part 99.            Intra module refs:   LangPack::LoadLangFile()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LangPack::GotoLangLineStart(char *)
                                   00004090 
    -------------------------------------------------------------------------
CODE
  Segment part 100. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000040BC - 00004273 (0x1b8 bytes), align: 2
  Segment part 101.           Intra module refs:   LangPack::LangPack()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LangPack::InitLgp()     000040BC 
               stack 1 = 00000000 ( 0000004C )
    -------------------------------------------------------------------------
CODE
  Segment part 102. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00004274 - 000042A3 (0x30 bytes), align: 2
  Segment part 103.           Intra module refs:   LangPack::new LangPack()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LangPack::LangPack()    00004274 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 104. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000042A4 - 000042CB (0x28 bytes), align: 2
  Segment part 105.           Intra module refs:   LangPack::delete ~LangPack(LangPack *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LangPack::~LangPack()   000042A4 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 106. NOT NEEDED.Intra module refs   LangPack::new LangPack()
    -------------------------------------------------------------------------
CODE
  Segment part 107. NOT NEEDED.Intra module refs   LangPack::delete ~LangPack(LangPack *)
                                                   LangPack::~LangPack()
    -------------------------------------------------------------------------
CODE
  Segment part 108. NOT NEEDED.Intra module refs   LangPack::LoadLangFile()
    -------------------------------------------------------------------------
CODE
  Segment part 109. NOT NEEDED.Intra module refs   LangPack::LoadLangFile()
    -------------------------------------------------------------------------
CODE
  Segment part 110. NOT NEEDED.Intra module refs   LangPack::LoadLangFile()
    -------------------------------------------------------------------------
CODE
  Segment part 111. NOT NEEDED.Intra module refs   LangPack::LoadLangFile()
    -------------------------------------------------------------------------
CODE
  Segment part 112. NOT NEEDED.Intra module refs   LangPack::LoadLangFile()
    -------------------------------------------------------------------------
CODE
  Segment part 113. NOT NEEDED.Intra module refs   LangPack::LoadLangFile()
    -------------------------------------------------------------------------
DATA_Z
  Relative segment, address: CODE_AREA 0000BD18 - 0000BD1B (0x4 bytes), align: 2
  Segment part 83.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LGP                     0000BD18        AdrList::FindName(WSHDR *, char const *) (AdrList)
                                                   NAbCSM::CreateNAbCSM(void *, int, char *, int) (NativeAddressbook)
                                                   Segment part 163 (SmsData)
                                                   Segment part 21 (DaemonCSM)
                                                   Segment part 25 (PopupGUI)
                                                   Segment part 26 (MainMenu)
                                                   Segment part 28 (Template)
                                                   Segment part 33 (EditGUI)
                                                   Segment part 40 (OthersMenu)
                                                   Segment part 45 (SmsListMenu)
                                                   Segment part 48 (EditGUI)
                                                   SiememPDU::DoSmsReport(SDLIST *, char *, WSHDR *) (SiemensPDU)
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_ID
  Relative segment, address: CODE_AREA 000000E8 - 00000223 (0x13c bytes), align: 2
  Segment part 82.            Intra module refs:   df_LGPS
    -------------------------------------------------------------------------
INITTAB
  Segment part 114. TENTATIVE. Used definition from AdrList
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?init?tab?DATA_Z        
    -------------------------------------------------------------------------
DATA_ID
  Segment part 115. TENTATIVE. Used definition from EditGUI
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?*?DATA_ID              
    -------------------------------------------------------------------------
INITTAB
  Segment part 116. TENTATIVE. Used definition from EditGUI
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?init?tab?DATA_I        

    *************************************************************************

  FILE NAME : D:\pasha\elf\SieELF\MySMSYS\Mss3\Release_ELKA_EN\Obj\MainMenu.r79
  PROGRAM MODULE, NAME : MainMenu

  SEGMENTS IN THE MODULE
  ======================
DATA_I
  Relative segment, address: DATA_AREA 00000224 - 0000023B (0x18 bytes), align: 2
  Segment part 2.             Intra module refs:   Segment part 4
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           main_menu_sk            00000224        LangPack::InitLgp() (LangPack)
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B6C4 - 0000B6CB (0x8 bytes), align: 2
  Segment part 4.             Intra module refs:   MainMenu::MainMenu()
    -------------------------------------------------------------------------
DATA_I
  Relative segment, address: DATA_AREA 0000023C - 0000024F (0x14 bytes), align: 2
  Segment part 5.             Intra module refs:   Segment part 32
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           main_menuhdr            0000023C        LangPack::InitLgp() (LangPack)
    -------------------------------------------------------------------------
CODE
  Segment part 10. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 11. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MainMenu::delete ~MainMenu(MainMenu *)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 12. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000042CC - 000042E7 (0x1c bytes), align: 2
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MainMenu::new MainMenu()
                                   000042CC        TabGUI::CreateTabGUI(DLG_CSM *) (TabGUI)
                                                   TabGUI::ReCreateTabGUI(DLG_CSM *) (TabGUI)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 14. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000042E8 - 0000434B (0x64 bytes), align: 2
  Segment part 15.            Intra module refs:   MainMenu::new MainMenu()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MainMenu::MainMenu()    000042E8 
    -------------------------------------------------------------------------
CODE
  Segment part 16. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 17. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MainMenu::~MainMenu()   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 18. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 19. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MainMenu::CreateMainMenu(DLG_CSM *)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 20. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000434C - 0000446F (0x124 bytes), align: 2
  Segment part 21.            Intra module refs:   MainMenu::MainMenu()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MainMenu::OnKey(void *, GUI_MSG *)
                                   0000434C 
               stack 1 = 00000000 ( 00000018 )
    -------------------------------------------------------------------------
CODE
  Segment part 22. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00004470 - 000044CF (0x60 bytes), align: 2
  Segment part 23.            Intra module refs:   MainMenu::MainMenu()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MainMenu::GHook(void *, int)
                                   00004470 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 24. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_I
  Relative segment, address: DATA_AREA 00000250 - 00000283 (0x34 bytes), align: 2
  Segment part 7.             Intra module refs:   MainMenu::ItemProc(void *, int, void *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MM_ITEM_ICONS           00000268        IconPack::InitIconPack() (IconPack)
           MM_ITEM_LGPS            00000250        LangPack::InitLgp() (LangPack)
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B6CC - 0000B6D3 (0x8 bytes), align: 2
  Segment part 9.             Intra module refs:   MainMenu::ItemProc(void *, int, void *)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000044D0 - 000045D3 (0x104 bytes), align: 2
  Segment part 25.            Intra module refs:   MainMenu::MainMenu()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MainMenu::ItemProc(void *, int, void *)
                                   000044D0 
               stack 1 = 00000000 ( 00000024 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000045D4 - 000045D7 (0x4 bytes), align: 2
  Segment part 26.            Intra module refs:   MainMenu::GHook(void *, int)
                                                   MainMenu::ItemProc(void *, int, void *)
    -------------------------------------------------------------------------
CODE
  Segment part 27. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 28. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MainMenu::UpdateCSMName(DLG_CSM *, int)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000045D8 - 000045DB (0x4 bytes), align: 2
  Segment part 29.            Intra module refs:   MainMenu::GHook(void *, int)
                                                   MainMenu::ItemProc(void *, int, void *)
    -------------------------------------------------------------------------
CODE
  Segment part 30. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000045DC - 0000467F (0xa4 bytes), align: 2
  Segment part 31.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MainMenu::GetMainMenuGUI(DLG_CSM *, int)
                                   000045DC        TabGUI::CreateTabGUI(DLG_CSM *) (TabGUI)
                                                   TabGUI::ReCreateTabGUI(DLG_CSM *) (TabGUI)
               stack 1 = 00000000 ( 00000018 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00004680 - 00004683 (0x4 bytes), align: 2
  Segment part 32.            Intra module refs:   MainMenu::GetMainMenuGUI(DLG_CSM *, int)
    -------------------------------------------------------------------------
CODE
  Segment part 33. NOT NEEDED.Intra module refs:   MainMenu::GHook(void *, int)
    -------------------------------------------------------------------------
CODE
  Segment part 34. NOT NEEDED.Intra module refs:   MainMenu::new MainMenu()
    -------------------------------------------------------------------------
CODE
  Segment part 35. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 36. NOT NEEDED.Intra module refs:   MainMenu::OnKey(void *, GUI_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 37. NOT NEEDED.Intra module refs:   MainMenu::OnKey(void *, GUI_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 38. NOT NEEDED.Intra module refs:   MainMenu::OnKey(void *, GUI_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 39. NOT NEEDED.Intra module refs:   MainMenu::OnKey(void *, GUI_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 40. NOT NEEDED.Intra module refs:   MainMenu::OnKey(void *, GUI_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 41. NOT NEEDED.Intra module refs:   MainMenu::OnKey(void *, GUI_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 42. NOT NEEDED.Intra module refs:   MainMenu::OnKey(void *, GUI_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 43. NOT NEEDED.Intra module refs:   MainMenu::ItemProc(void *, int, void *)
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_ID
  Relative segment, address: CODE_AREA 00000224 - 0000023B (0x18 bytes), align: 2
  Segment part 3.             Intra module refs:   main_menu_sk
    -------------------------------------------------------------------------
DATA_ID
  Relative segment, address: CODE_AREA 0000023C - 0000024F (0x14 bytes), align: 2
  Segment part 6.             Intra module refs:   main_menuhdr
    -------------------------------------------------------------------------
DATA_ID
  Relative segment, address: CODE_AREA 00000250 - 00000283 (0x34 bytes), align: 2
  Segment part 8.             Intra module refs:   Segment part 7
    -------------------------------------------------------------------------
DATA_ID
  Segment part 44. TENTATIVE. Used definition from EditGUI
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?*?DATA_ID              
    -------------------------------------------------------------------------
INITTAB
  Segment part 45. TENTATIVE. Used definition from EditGUI
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?init?tab?DATA_I        

    *************************************************************************

  FILE NAME : D:\pasha\elf\SieELF\MySMSYS\Mss3\Release_ELKA_EN\Obj\MyIpcMessage.r79
  PROGRAM MODULE, NAME : MyIpcMessage

  SEGMENTS IN THE MODULE
  ======================
DATA_C
  Relative segment, address: CODE_AREA 0000B6D4 - 0000B6DF (0xc bytes), align: 2
  Segment part 2.             Intra module refs:   SendMyIpc(int)
    -------------------------------------------------------------------------
DATA_I
  Relative segment, address: DATA_AREA 00000284 - 0000028F (0xc bytes), align: 2
  Segment part 3.             Intra module refs:   SendMyIpc(int, void *)
    -------------------------------------------------------------------------
CODE
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00004684 - 000046AB (0x28 bytes), align: 2
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SendMyIpc(int)          00004684        DaemonCSM::DoNewProc() (DaemonCSM)
                                                   DaemonCSM::UpdateNProc() (DaemonCSM)
                                                   PopupNewIn::GHook(void *, int) (PopupGUI)
                                                   PopupNewIn::OnKey(void *, GUI_MSG *) (PopupGUI)
                                                   SendList::SendEnd(int) (SendList)
                                                   SmsData::CheckAll() (SmsData)
                                                   SmsData::CheckDat() (SmsData)
                                                   SmsData::CheckFolder(int) (SmsData)
                                                   SmsData::CheckSDList() (SmsData)
                                                   SmsData::DeleteAllMss() (SmsData)
                                                   SmsData::MoveAllToArchive() (SmsData)
                                                   SmsData::ReadAllDatMsg() (SmsData)
                                                   SmsData::ReadAllMessage() (SmsData)
                                                   SmsData::ReadFolder(int) (SmsData)
                                                   Vibra::VibraNextTmrProc() (Vibra)
                                                   main (main)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 7. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000046AC - 000046E7 (0x3c bytes), align: 2
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SendMyIpc(int, void *)
                                   000046AC        DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *) (DaemonCSM)
                                                   EditGUI::EditSendSMS(WSHDR *) (EditGUI)
                                                   NAbCSM::CreateNAbCSM(void *, int, char *, int) (NativeAddressbook)
                                                   PopupNewIn::GHook(void *, int) (PopupGUI)
                                                   main (main)
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_ID
  Relative segment, address: CODE_AREA 00000284 - 0000028F (0xc bytes), align: 2
  Segment part 4.             Intra module refs:   Segment part 3
    -------------------------------------------------------------------------
DATA_ID
  Segment part 9. TENTATIVE. Used definition from EditGUI
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?*?DATA_ID              
    -------------------------------------------------------------------------
INITTAB
  Segment part 10. TENTATIVE. Used definition from EditGUI
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?init?tab?DATA_I        

    *************************************************************************

  FILE NAME : D:\pasha\elf\SieELF\MySMSYS\Mss3\Release_ELKA_EN\Obj\NativeAddressbook.r79
  PROGRAM MODULE, NAME : NativeAddressbook

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NAbCSM::delete ~NAbCSM(NAbCSM *)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000046E8 - 00004703 (0x1c bytes), align: 2
  Segment part 5.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NAbCSM::new NAbCSM()    000046E8        EditGUI::EdOpUserItem(USR_MENU_ITEM *) (EditGUI)
                                                   EditGUI::OnKey(void *, GUI_MSG *) (EditGUI)
                                                   EditOptionMenu::OnKey(void *, GUI_MSG *) (EditGUI)
                                                   SmsOptionMenu::OnKey(void *, GUI_MSG *) (SmsListMenu)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00004704 - 00004787 (0x84 bytes), align: 2
  Segment part 7.             Intra module refs:   NAbCSM::new NAbCSM()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NAbCSM::NAbCSM()        00004704 
    -------------------------------------------------------------------------
CODE
  Segment part 8. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 9. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NAbCSM::~NAbCSM()       
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 10. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00004788 - 000049A3 (0x21c bytes), align: 2
  Segment part 11.            Intra module refs:   NAbCSM::NAbCSM()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NAbCSM::OnMessage(CSM_RAM *, GBS_MSG *)
                                   00004788 
               stack 1 = 00000000 ( 00000024 )
    -------------------------------------------------------------------------
CODE
  Segment part 12. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000049A4 - 00004A5F (0xbc bytes), align: 2
  Segment part 13.            Intra module refs:   NAbCSM::NAbCSM()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NAbCSM::OnCreate(CSM_RAM *)
                                   000049A4 
               stack 1 = 00000000 ( 00000084 )
    -------------------------------------------------------------------------
CODE
  Segment part 14. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00004A60 - 00004AB7 (0x58 bytes), align: 2
  Segment part 15.            Intra module refs:   NAbCSM::NAbCSM()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NAbCSM::OnClose(CSM_RAM *)
                                   00004A60 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 16. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00004AB8 - 00004B8F (0xd8 bytes), align: 2
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NAbCSM::CreateNAbCSM(void *, int, char *, int)
                                   00004AB8        EditGUI::EdOpUserItem(USR_MENU_ITEM *) (EditGUI)
                                                   EditGUI::OnKey(void *, GUI_MSG *) (EditGUI)
                                                   EditOptionMenu::OnKey(void *, GUI_MSG *) (EditGUI)
                                                   SmsOptionMenu::OnKey(void *, GUI_MSG *) (SmsListMenu)
               stack 1 = 00000000 ( 0000005C )
    -------------------------------------------------------------------------
CODE
  Segment part 18. NOT NEEDED.Intra module refs:   NAbCSM::CreateNAbCSM(void *, int, char *, int)
                                                   NAbCSM::OnClose(CSM_RAM *)
                                                   NAbCSM::OnMessage(CSM_RAM *, GBS_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 19. NOT NEEDED.Intra module refs:   NAbCSM::new NAbCSM()
    -------------------------------------------------------------------------
CODE
  Segment part 20. NOT NEEDED.Intra module refs:   NAbCSM::OnMessage(CSM_RAM *, GBS_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 21. NOT NEEDED.Intra module refs:   NAbCSM::CreateNAbCSM(void *, int, char *, int)
                                                   NAbCSM::OnMessage(CSM_RAM *, GBS_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 22. NOT NEEDED.Intra module refs:   NAbCSM::OnMessage(CSM_RAM *, GBS_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 23. NOT NEEDED.Intra module refs:   NAbCSM::OnMessage(CSM_RAM *, GBS_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 24. NOT NEEDED.Intra module refs:   NAbCSM::OnCreate(CSM_RAM *)
    -------------------------------------------------------------------------
CODE
  Segment part 25. NOT NEEDED.Intra module refs:   NAbCSM::CreateNAbCSM(void *, int, char *, int)
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    *************************************************************************

  FILE NAME : D:\pasha\elf\SieELF\MySMSYS\Mss3\Release_ELKA_EN\Obj\NumList.r79
  PROGRAM MODULE, NAME : NumList

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00004B90 - 00004BAB (0x1c bytes), align: 2
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NumList::new NumList()
                                   00004B90        EditGUI::EditGUI() (EditGUI)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00004BAC - 00004BC7 (0x1c bytes), align: 2
  Segment part 5.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NumList::delete ~NumList(NumList *)
                                   00004BAC        EditGUI::~EditGUI() (EditGUI)
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 7. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NumList::NumList()      
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 8. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 9. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NumList::~NumList()     
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 10. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00004BC8 - 00004BFB (0x34 bytes), align: 2
  Segment part 11.            Intra module refs:   NumList::AddNumsToList(char const *)
                                                   NumList::AddToList(char const *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NumList::AllocNL()      00004BC8 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 12. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00004BFC - 00004C37 (0x3c bytes), align: 2
  Segment part 13.            Intra module refs:   NumList::delete ~NumList(NumList *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NumList::FreeList()     00004BFC 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 14. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00004C38 - 00004CCF (0x98 bytes), align: 2
  Segment part 15.            Intra module refs:   NumList::AddNumsToList(char const *)
                                                   NumList::AddToList(char const *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NumList::AddToList_end(_NLST *)
                                   00004C38 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 16. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 17. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NumList::AddToList(_NLST *, int)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 18. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00004CD0 - 00004CF3 (0x24 bytes), align: 2
  Segment part 19.            Intra module refs:   NumList::DeleteNL(int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NumList::FindNL(int)    00004CD0        EditGUI::GHook(void *, int) (EditGUI)
                                                   EditGUI::InsertNumber(void *, char *) (EditGUI)
                                                   EditGUI::SetNumber(void *, char *) (EditGUI)
    -------------------------------------------------------------------------
CODE
  Segment part 20. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 21. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NumList::AddToList_first(_NLST *)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 22. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 23. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NumList::AddToList(_NLST *)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 24. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00004CF4 - 00004DD7 (0xe4 bytes), align: 2
  Segment part 25.            Intra module refs:   NumList::AddNumsToList(char const *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NumList::AddToList(char const *)
                                   00004CF4        EditGUI::CreateEditGUI(DLG_CSM *, _SDLIST *, int, int, int) (EditGUI)
               stack 1 = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
CODE
  Segment part 26. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 27. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NumList::AddToList(char const *, int)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 28. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00004DD8 - 00004E57 (0x80 bytes), align: 2
  Segment part 29.            Intra module refs:   NumList::DeleteNL(int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NumList::DeleteNL(_NLST *)
                                   00004DD8        EditGUI::GHook(void *, int) (EditGUI)
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 30. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00004E58 - 00004E73 (0x1c bytes), align: 2
  Segment part 31.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NumList::DeleteNL(int)
                                   00004E58        EditGUI::GHook(void *, int) (EditGUI)
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 32. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00004E74 - 00004F3F (0xcc bytes), align: 2
  Segment part 33.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NumList::AddNumsToList(char const *)
                                   00004E74        EditGUI::CreateEditGUI(DLG_CSM *, _SDLIST *, int, int, int) (EditGUI)
                                                   EditGUI::CreateEditGUI(DLG_CSM *, char const *) (EditGUI)
               stack 1 = 00000000 ( 00000094 )
    -------------------------------------------------------------------------
CODE
  Segment part 34. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 35. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NumList::UpdateNL(char const *, int)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 36. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00004F40 - 00004F93 (0x54 bytes), align: 2
  Segment part 37.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NumList::UpdateNL(_NLST *, char const *)
                                   00004F40        EditGUI::SetNumber(void *, char *) (EditGUI)
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 38. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00004F94 - 00004FFB (0x68 bytes), align: 2
  Segment part 39.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NumList::InsertNL_front(_NLST *, char const *)
                                   00004F94        EditGUI::InsertNumber(void *, char *) (EditGUI)
               stack 1 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
CODE
  Segment part 40. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00004FFC - 00005073 (0x78 bytes), align: 2
  Segment part 41.            Intra module refs:   NumList::InsertNL_behind(_NLST *, char const *)
                                                   NumList::InsertNL_front(_NLST *, char const *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NumList::AllocNL(char const *)
                                   00004FFC 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00005074 - 00005077 (0x4 bytes), align: 2
  Segment part 42.            Intra module refs:   NumList::AddToList(char const *)
                                                   NumList::AllocNL(char const *)
                                                   NumList::UpdateNL(_NLST *, char const *)
    -------------------------------------------------------------------------
CODE
  Segment part 43. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00005078 - 000050C7 (0x50 bytes), align: 2
  Segment part 44.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NumList::InsertNL_behind(_NLST *, char const *)
                                   00005078        EditGUI::InsertNumber(void *, char *) (EditGUI)
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 45. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000050C8 - 000050E7 (0x20 bytes), align: 2
  Segment part 46.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NumList::ClearNL(_NLST *)
                                   000050C8        EditGUI::GHook(void *, int) (EditGUI)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 47. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000050E8 - 00005123 (0x3c bytes), align: 2
  Segment part 48.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NumList::IsNumExist(char const *)
                                   000050E8        EditGUI::InsertNumber(void *, char *) (EditGUI)
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 49. NOT NEEDED.Intra module refs:   NumList::AllocNL()
                                                   NumList::AllocNL(char const *)
                                                   NumList::new NumList()
    -------------------------------------------------------------------------
CODE
  Segment part 50. NOT NEEDED.Intra module refs:   NumList::DeleteNL(_NLST *)
                                                   NumList::FreeList()
                                                   NumList::delete ~NumList(NumList *)
    -------------------------------------------------------------------------
CODE
  Segment part 51. NOT NEEDED.Intra module refs:   NumList::AddToList(char const *)
                                                   NumList::AllocNL(char const *)
                                                   NumList::UpdateNL(_NLST *, char const *)
    -------------------------------------------------------------------------
CODE
  Segment part 52. NOT NEEDED.Intra module refs:   NumList::AddToList(char const *)
                                                   NumList::AllocNL(char const *)
                                                   NumList::UpdateNL(_NLST *, char const *)
    -------------------------------------------------------------------------
CODE
  Segment part 53. NOT NEEDED.Intra module refs:   NumList::IsNumExist(char const *)
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    *************************************************************************

  FILE NAME : D:\pasha\elf\SieELF\MySMSYS\Mss3\Release_ELKA_EN\Obj\OthersMenu.r79
  PROGRAM MODULE, NAME : OthersMenu

  SEGMENTS IN THE MODULE
  ======================
DATA_C
  Relative segment, address: CODE_AREA 0000B6E0 - 0000B6EB (0xc bytes), align: 2
  Segment part 2.             Intra module refs:   OthMenu::ShowHelp()
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B6EC - 0000B74B (0x60 bytes), align: 2
  Segment part 3.             Intra module refs:   OthMenu::ShowAbout()
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B74C - 0000B75F (0x14 bytes), align: 2
  Segment part 4.             Intra module refs:   OthMenu::CreateOthMenu(DLG_CSM *)
    -------------------------------------------------------------------------
CODE
  Segment part 8. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 9. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OthMenu::delete ~OthMenu(OthMenu *)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 10. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00005124 - 0000513F (0x1c bytes), align: 2
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OthMenu::new OthMenu()
                                   00005124        MainMenu::OnKey(void *, GUI_MSG *) (MainMenu)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 12. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00005140 - 0000521B (0xdc bytes), align: 2
  Segment part 13.            Intra module refs:   Segment part 30
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OpenArchive()           00005140        DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *) (DaemonCSM)
               stack 1 = 00000000 ( 00000208 )
    -------------------------------------------------------------------------
CODE
  Segment part 14. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000521C - 0000527F (0x64 bytes), align: 2
  Segment part 15.            Intra module refs:   OthMenu::new OthMenu()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OthMenu::OthMenu()      0000521C 
    -------------------------------------------------------------------------
CODE
  Segment part 16. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 17. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OthMenu::~OthMenu()     
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 18. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00005280 - 0000536B (0xec bytes), align: 2
  Segment part 19.            Intra module refs:   OthMenu::OthMenu()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OthMenu::OnKey(void *, GUI_MSG *)
                                   00005280 
               stack 1 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
CODE
  Segment part 20. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000536C - 000053FB (0x90 bytes), align: 2
  Segment part 21.            Intra module refs:   OthMenu::OthMenu()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OthMenu::GHook(void *, int)
                                   0000536C 
               stack 1 = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
CODE
  Segment part 22. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_I
  Relative segment, address: DATA_AREA 00000290 - 000002AB (0x1c bytes), align: 2
  Segment part 5.             Intra module refs:   OthMenu::ItemProc(void *, int, void *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OTH_ITEM_LGPS           00000290        LangPack::InitLgp() (LangPack)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000053FC - 0000544F (0x54 bytes), align: 2
  Segment part 23.            Intra module refs:   OthMenu::OthMenu()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OthMenu::ItemProc(void *, int, void *)
                                   000053FC 
               stack 1 = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
CODE
  Segment part 24. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00005450 - 0000547B (0x2c bytes), align: 2
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OthMenu::CreateOthMenu(DLG_CSM *)
                                   00005450        MainMenu::OnKey(void *, GUI_MSG *) (MainMenu)
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 26. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000547C - 000054BF (0x44 bytes), align: 2
  Segment part 27.            Intra module refs:   OthMenu::OnKey(void *, GUI_MSG *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OthMenu::OpenCfgFile()
                                   0000547C 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 28. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 29. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OthMenu::OpenArchiveOTH()
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000054C0 - 000054C3 (0x4 bytes), align: 2
  Segment part 30.            Intra module refs:   OthMenu::OnKey(void *, GUI_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 31. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 32. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OthMenu::MoveAllMss()   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000054C4 - 000054C7 (0x4 bytes), align: 2
  Segment part 33.            Intra module refs:   OthMenu::OnKey(void *, GUI_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 34. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000054C8 - 00005503 (0x3c bytes), align: 2
  Segment part 35.            Intra module refs:   OthMenu::OnKey(void *, GUI_MSG *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OthMenu::ShowAbout()    000054C8 
               stack 1 = 00000000 ( 00000088 )
    -------------------------------------------------------------------------
CODE
  Segment part 36. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_Z
  Relative segment, address: CODE_AREA 0000BD1C - 0000FD1B (0x4000 bytes), align: 2
  Segment part 7.             Intra module refs:   OthMenu::ShowHelp()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           help_buf                0000BD1C 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00005504 - 000055F7 (0xf4 bytes), align: 2
  Segment part 37.            Intra module refs:   OthMenu::OnKey(void *, GUI_MSG *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OthMenu::ShowHelp()     00005504 
               stack 1 = 00000000 ( 00000098 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000055F8 - 000055FB (0x4 bytes), align: 2
  Segment part 38.            Intra module refs:   OthMenu::GHook(void *, int)
                                                   OthMenu::ItemProc(void *, int, void *)
                                                   OthMenu::ShowHelp()
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000055FC - 000055FF (0x4 bytes), align: 2
  Segment part 39.            Intra module refs:   OpenArchive()
                                                   OthMenu::ShowHelp()
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00005600 - 00005603 (0x4 bytes), align: 2
  Segment part 40.            Intra module refs:   OthMenu::GHook(void *, int)
                                                   OthMenu::ShowHelp()
    -------------------------------------------------------------------------
CODE
  Segment part 41. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 42. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OthMenu::ExportTxtAll()
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00005604 - 00005607 (0x4 bytes), align: 2
  Segment part 43.            Intra module refs:   OthMenu::OnKey(void *, GUI_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 44. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 45. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OthMenu::DelAllMss()    
               not allocated function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00005608 - 0000560B (0x4 bytes), align: 2
  Segment part 46.            Intra module refs:   OthMenu::OnKey(void *, GUI_MSG *)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000560C - 0000560F (0x4 bytes), align: 2
  Segment part 47.            Intra module refs:   OthMenu::OnKey(void *, GUI_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 48. NOT NEEDED.Intra module refs:   OthMenu::GHook(void *, int)
    -------------------------------------------------------------------------
CODE
  Segment part 49. NOT NEEDED.Intra module refs:   OthMenu::new OthMenu()
    -------------------------------------------------------------------------
CODE
  Segment part 50. NOT NEEDED.Intra module refs:   OthMenu::CreateOthMenu(DLG_CSM *)
    -------------------------------------------------------------------------
CODE
  Segment part 51. NOT NEEDED.Intra module refs:   OthMenu::ShowAbout()
    -------------------------------------------------------------------------
CODE
  Segment part 52. NOT NEEDED.Intra module refs:   OthMenu::ShowHelp()
    -------------------------------------------------------------------------
CODE
  Segment part 53. NOT NEEDED.Intra module refs:   OthMenu::ShowHelp()
    -------------------------------------------------------------------------
CODE
  Segment part 54. NOT NEEDED.Intra module refs:   OthMenu::ShowHelp()
    -------------------------------------------------------------------------
CODE
  Segment part 55. NOT NEEDED.Intra module refs:   OthMenu::ShowHelp()
    -------------------------------------------------------------------------
CODE
  Segment part 56. NOT NEEDED.Intra module refs:   OthMenu::ShowHelp()
    -------------------------------------------------------------------------
CODE
  Segment part 57. NOT NEEDED.Intra module refs:   OthMenu::ShowHelp()
    -------------------------------------------------------------------------
CODE
  Segment part 58. NOT NEEDED.Intra module refs:   OthMenu::ShowHelp()
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_ID
  Relative segment, address: CODE_AREA 00000290 - 000002AB (0x1c bytes), align: 2
  Segment part 6.             Intra module refs:   OTH_ITEM_LGPS
    -------------------------------------------------------------------------
INITTAB
  Segment part 59. TENTATIVE. Used definition from AdrList
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?init?tab?DATA_Z        
    -------------------------------------------------------------------------
DATA_ID
  Segment part 60. TENTATIVE. Used definition from EditGUI
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?*?DATA_ID              
    -------------------------------------------------------------------------
INITTAB
  Segment part 61. TENTATIVE. Used definition from EditGUI
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?init?tab?DATA_I        

    *************************************************************************

  FILE NAME : D:\pasha\elf\SieELF\MySMSYS\Mss3\Release_ELKA_EN\Obj\PopupGUI.r79
  PROGRAM MODULE, NAME : PopupGUI

  SEGMENTS IN THE MODULE
  ======================
DATA_I
  Relative segment, address: DATA_AREA 000002AC - 000002C3 (0x18 bytes), align: 2
  Segment part 3.             Intra module refs:   Segment part 5
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pni_sk                  000002AC        LangPack::InitLgp() (LangPack)
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B760 - 0000B777 (0x18 bytes), align: 2
  Segment part 2.             Intra module refs:   PopupNewIn::CreatePopupNewIn(DLG_CSM *, _SDLIST *)
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B778 - 0000B77F (0x8 bytes), align: 2
  Segment part 5.             Intra module refs:   PopupNewIn::PopupNewIn()
    -------------------------------------------------------------------------
CODE
  Segment part 10. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 11. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PopupNewIn::delete ~PopupNewIn(PopupNewIn *)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 12. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00005610 - 0000562B (0x1c bytes), align: 2
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PopupNewIn::new PopupNewIn()
                                   00005610        DialogCSM::OnCreate(CSM_RAM *) (DialogCSM)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 14. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000562C - 000056BB (0x90 bytes), align: 2
  Segment part 15.            Intra module refs:   PopupNewIn::new PopupNewIn()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PopupNewIn::PopupNewIn()
                                   0000562C 
    -------------------------------------------------------------------------
CODE
  Segment part 16. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 17. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PopupNewIn::~PopupNewIn()
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 18. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000056BC - 0000577F (0xc4 bytes), align: 2
  Segment part 19.            Intra module refs:   PopupNewIn::PopupNewIn()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PopupNewIn::OnKey(void *, GUI_MSG *)
                                   000056BC 
               stack 1 = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
CODE
  Segment part 20. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00005780 - 0000589F (0x120 bytes), align: 2
  Segment part 21.            Intra module refs:   PopupNewIn::PopupNewIn()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PopupNewIn::GHook(void *, int)
                                   00005780 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 22. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000058A0 - 0000595F (0xc0 bytes), align: 2
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PopupNewIn::CreatePopupNewIn(DLG_CSM *, _SDLIST *)
                                   000058A0        DialogCSM::OnCreate(CSM_RAM *) (DialogCSM)
               stack 1 = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00005960 - 00005963 (0x4 bytes), align: 2
  Segment part 24.            Intra module refs:   PopupNewIn::CreatePopupNewIn(DLG_CSM *, _SDLIST *)
                                                   PopupNewIn::GHook(void *, int)
                                                   PopupNewIn::PopupNewIn()
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00005964 - 00005967 (0x4 bytes), align: 2
  Segment part 25.            Intra module refs:   PopupNewIn::CreatePopupNewIn(DLG_CSM *, _SDLIST *)
                                                   PopupNewIn::GHook(void *, int)
    -------------------------------------------------------------------------
CODE
  Segment part 26. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 27. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PopupNewIn::UpdateCSMName(DLG_CSM *, int)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00005968 - 0000596B (0x4 bytes), align: 2
  Segment part 28.            Intra module refs:   PopupNewIn::GHook(void *, int)
    -------------------------------------------------------------------------
CODE
  Segment part 29. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B780 - 0000B797 (0x18 bytes), align: 2
  Segment part 6.             Intra module refs:   Segment part 7
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B798 - 0000B79F (0x8 bytes), align: 2
  Segment part 7.             Intra module refs:   Segment part 9
    -------------------------------------------------------------------------
DATA_I
  Relative segment, address: DATA_AREA 000002C4 - 000002FB (0x38 bytes), align: 2
  Segment part 8.             Intra module refs:   Segment part 37
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MyShowMsg::popup        000002C4 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000596C - 0000596F (0x4 bytes), align: 2
  Segment part 30.            Intra module refs:   Segment part 9
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MyShowMsg::GHook(void *, int)
                                   0000596C 
    -------------------------------------------------------------------------
CODE
  Segment part 31. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00005970 - 00005993 (0x24 bytes), align: 2
  Segment part 32.            Intra module refs:   Segment part 9
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MyShowMsg::OnKey(void *, GUI_MSG *)
                                   00005970 
    -------------------------------------------------------------------------
CODE
  Segment part 33. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 34. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MyShowMsg::MyShow(int, WSHDR *)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 35. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00005994 - 000059B7 (0x24 bytes), align: 2
  Segment part 36.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MyShowMsg::MyShow(int, char *)
                                   00005994        EditGUI::OnKey(void *, GUI_MSG *) (EditGUI)
                                                   OthMenu::ShowAbout() (OthersMenu)
                                                   SmsListMenu::OnKey(void *, GUI_MSG *) (SmsListMenu)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000059B8 - 000059BB (0x4 bytes), align: 2
  Segment part 37.            Intra module refs:   MyShowMsg::MyShow(int, char *)
    -------------------------------------------------------------------------
CODE
  Segment part 38. NOT NEEDED.Intra module refs:   PopupNewIn::CreatePopupNewIn(DLG_CSM *, _SDLIST *)
                                                   PopupNewIn::GHook(void *, int)
    -------------------------------------------------------------------------
CODE
  Segment part 39. NOT NEEDED.Intra module refs:   PopupNewIn::new PopupNewIn()
    -------------------------------------------------------------------------
CODE
  Segment part 40. NOT NEEDED.Intra module refs:   PopupNewIn::OnKey(void *, GUI_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 41. NOT NEEDED.Intra module refs:   PopupNewIn::OnKey(void *, GUI_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 42. NOT NEEDED.Intra module refs:   PopupNewIn::GHook(void *, int)
                                                   PopupNewIn::OnKey(void *, GUI_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 43. NOT NEEDED.Intra module refs:   PopupNewIn::GHook(void *, int)
    -------------------------------------------------------------------------
CODE
  Segment part 44. NOT NEEDED.Intra module refs:   PopupNewIn::CreatePopupNewIn(DLG_CSM *, _SDLIST *)
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_ID
  Relative segment, address: CODE_AREA 000002AC - 000002C3 (0x18 bytes), align: 2
  Segment part 4.             Intra module refs:   pni_sk
    -------------------------------------------------------------------------
DATA_ID
  Relative segment, address: CODE_AREA 000002C4 - 000002FB (0x38 bytes), align: 2
  Segment part 9.             Intra module refs:   MyShowMsg::popup
    -------------------------------------------------------------------------
DATA_ID
  Segment part 45. TENTATIVE. Used definition from EditGUI
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?*?DATA_ID              
    -------------------------------------------------------------------------
INITTAB
  Segment part 46. TENTATIVE. Used definition from EditGUI
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?init?tab?DATA_I        

    *************************************************************************

  FILE NAME : D:\pasha\elf\SieELF\MySMSYS\Mss3\Release_ELKA_EN\Obj\SendList.r79
  PROGRAM MODULE, NAME : SendList

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000059BC - 000059D7 (0x1c bytes), align: 2
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SendList::new SendList()
                                   000059BC        DaemonCSM::DaemonCSM() (DaemonCSM)
                                                   EditGUI::EditSendSMS(WSHDR *) (EditGUI)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000059D8 - 000059F3 (0x1c bytes), align: 2
  Segment part 5.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SendList::delete ~SendList(SendList *)
                                   000059D8        DaemonCSM::~DaemonCSM() (DaemonCSM)
                                                   EditGUI::EditSendSMS(WSHDR *) (EditGUI)
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000059F4 - 00005A13 (0x20 bytes), align: 2
  Segment part 7.             Intra module refs:   SendList::AddToList(char const *, WSHDR *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SendList::AllocSL()     000059F4 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 8. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00005A14 - 00005A5F (0x4c bytes), align: 2
  Segment part 9.             Intra module refs:   SendList::delete ~SendList(SendList *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SendList::FreeList()    00005A14 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 10. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 11. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SendList::SendList()    
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 12. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 13. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SendList::~SendList()   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 14. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00005A60 - 00005AAF (0x50 bytes), align: 2
  Segment part 15.            Intra module refs:   SendList::AddToList(char const *, WSHDR *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SendList::AddToList(_SNDLST *)
                                   00005A60 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 16. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00005AB0 - 00005B27 (0x78 bytes), align: 2
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SendList::AddToList(char const *, WSHDR *)
                                   00005AB0        EditGUI::EditSendSMS(WSHDR *) (EditGUI)
               stack 1 = 00000000 ( 00000018 )
    -------------------------------------------------------------------------
CODE
  Segment part 18. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00005B28 - 00005B9F (0x78 bytes), align: 2
  Segment part 19.            Intra module refs:   SendList::SendEnd(int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SendList::DeleteSL(_SNDLST *)
                                   00005B28 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 20. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00005BA0 - 00005BC7 (0x28 bytes), align: 2
  Segment part 21.            Intra module refs:   SendList::SendEnd(int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SendList::FindSL(int)   00005BA0 
    -------------------------------------------------------------------------
CODE
  Segment part 22. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00005BC8 - 00005BE7 (0x20 bytes), align: 2
  Segment part 23.            Intra module refs:   SendList::SendStart()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SendList::IsSending()   00005BC8 
    -------------------------------------------------------------------------
CODE
  Segment part 24. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00005BE8 - 00005C7B (0x94 bytes), align: 2
  Segment part 25.            Intra module refs:   SendList::Send(SendList *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SendList::SendStart()   00005BE8 
               stack 1 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
CODE
  Segment part 26. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00005C7C - 00005D03 (0x88 bytes), align: 2
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SendList::SendEnd(int)
                                   00005C7C        DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *) (DaemonCSM)
               stack 1 = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
CODE
  Segment part 28. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 29. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SendList::IsSendCSM(int)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 30. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00005D04 - 00005D53 (0x50 bytes), align: 2
  Segment part 31.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SendList::CatList(_SNDLST *)
                                   00005D04        DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *) (DaemonCSM)
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 32. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 33. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SendList::SendOnTop(SendList *)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 34. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00005D54 - 00005DA7 (0x54 bytes), align: 2
  Segment part 35.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SendList::Send(SendList *)
                                   00005D54        DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *) (DaemonCSM)
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 36. NOT NEEDED.Intra module refs:   SendList::AllocSL()
                                                   SendList::new SendList()
    -------------------------------------------------------------------------
CODE
  Segment part 37. NOT NEEDED.Intra module refs:   SendList::DeleteSL(_SNDLST *)
                                                   SendList::FreeList()
                                                   SendList::delete ~SendList(SendList *)
    -------------------------------------------------------------------------
CODE
  Segment part 38. NOT NEEDED.Intra module refs:   SendList::SendEnd(int)
    -------------------------------------------------------------------------
CODE
  Segment part 39. NOT NEEDED.Intra module refs:   SendList::SendEnd(int)
    -------------------------------------------------------------------------
CODE
  Segment part 40. NOT NEEDED.Intra module refs:   SendList::Send(SendList *)
    -------------------------------------------------------------------------
CODE
  Segment part 41. NOT NEEDED.Intra module refs:   SendList::Send(SendList *)
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    *************************************************************************

  FILE NAME : D:\pasha\elf\SieELF\MySMSYS\Mss3\Release_ELKA_EN\Obj\SiemensPDU.r79
  PROGRAM MODULE, NAME : SiemensPDU

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00005DA8 - 00005E07 (0x60 bytes), align: 2
  Segment part 4.             Intra module refs:   SiememPDU::PduDecodeAll(SDLIST *, char *)
                                                   SiememPDU::PduDecodeTxt(SDLIST *, char *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SiememPDU::Add2WS(char *, WSHDR *, int)
                                   00005DA8 
               stack 1 = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
CODE
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00005E08 - 00005EC3 (0xbc bytes), align: 2
  Segment part 6.             Intra module refs:   SiememPDU::PduDecodeAll(SDLIST *, char *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SiememPDU::Hex2Num(char *, char *, int)
                                   00005E08 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 7. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00005EC4 - 00005F3F (0x7c bytes), align: 2
  Segment part 8.             Intra module refs:   SiememPDU::PduDecodeAll(SDLIST *, char *)
                                                   SiememPDU::PduDecodeTxt(SDLIST *, char *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SiememPDU::Bit7Decode(WSHDR *, char *, int, int)
                                   00005EC4 
               stack 1 = 00000000 ( 0000001C )
    -------------------------------------------------------------------------
CODE
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00005F40 - 0000613F (0x200 bytes), align: 2
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SiememPDU::PduDecodeTxt(SDLIST *, char *)
                                   00005F40        SmsData::DeMsgDataList(SMS_DATA_LIST *) (SmsData)
               stack 1 = 00000000 ( 00000280 )
    -------------------------------------------------------------------------
CODE
  Segment part 11. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00006140 - 0000645B (0x31c bytes), align: 2
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SiememPDU::PduDecodeAll(SDLIST *, char *)
                                   00006140        SmsData::DeMsgDataList(SMS_DATA_LIST *) (SmsData)
               stack 1 = 00000000 ( 00000294 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000645C - 0000645F (0x4 bytes), align: 2
  Segment part 13.            Intra module refs:   SiememPDU::PduDecodeAll(SDLIST *, char *)
                                                   SiememPDU::PduDecodeTxt(SDLIST *, char *)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00006460 - 00006463 (0x4 bytes), align: 2
  Segment part 14.            Intra module refs:   SiememPDU::PduDecodeAll(SDLIST *, char *)
                                                   SiememPDU::PduDecodeTxt(SDLIST *, char *)
    -------------------------------------------------------------------------
CODE
  Segment part 15. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00006464 - 0000654F (0xec bytes), align: 2
  Segment part 16.            Intra module refs:   SiememPDU::PduDecodeAll(SDLIST *, char *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SiememPDU::DoSmsReport(SDLIST *, char *, WSHDR *)
                                   00006464 
               stack 1 = 00000000 ( 00000034 )
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B7A0 - 0000B7C3 (0x24 bytes), align: 2
  Segment part 2.             Intra module refs:   SiememPDU::DoSmsReport(SDLIST *, char *, WSHDR *)

    *************************************************************************

  FILE NAME : D:\pasha\elf\SieELF\MySMSYS\Mss3\Release_ELKA_EN\Obj\SmsData.r79
  PROGRAM MODULE, NAME : SmsData

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 13. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00006550 - 0000656B (0x1c bytes), align: 2
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::new SmsData()
                                   00006550        DaemonCSM::OnCreate(CSM_RAM *) (DaemonCSM)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 15. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000656C - 00006587 (0x1c bytes), align: 2
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::delete ~SmsData(SmsData *)
                                   0000656C        DaemonCSM::OnClose(CSM_RAM *) (DaemonCSM)
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 17. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00006588 - 000065A7 (0x20 bytes), align: 2
  Segment part 18.            Intra module refs:   SmsData::CheckFolder(int)
                                                   SmsData::DeMsgDataList(SMS_DATA_LIST *)
                                                   SmsData::ReadFolder(int)
                                                   SmsData::SaveMss(WSHDR *, char const *, _SDLIST *, int, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::AllocSDL()     00006588        DialogCSM::OnCreate(CSM_RAM *) (DialogCSM)
                                                   EditGUI::CreateEditGUI(DLG_CSM *, char const *) (EditGUI)
                                                   MainMenu::OnKey(void *, GUI_MSG *) (MainMenu)
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 19. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000065A8 - 0000660F (0x68 bytes), align: 2
  Segment part 20.            Intra module refs:   SmsData::CheckDat()
                                                   SmsData::CheckSDList()
                                                   SmsData::CheckSMS(int)
                                                   SmsData::DeleteAllMss()
                                                   SmsData::DeleteMessage(_SDLIST *)
                                                   SmsData::MoveToArchive(_SDLIST *)
                                                   SmsData::ReadMessageOne(int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::DeleteSDL(_SDLIST *)
                                   000065A8 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 21. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00006610 - 00006673 (0x64 bytes), align: 2
  Segment part 22.            Intra module refs:   SmsData::~SmsData()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::FreeAllSDL()   00006610 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 23. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00006674 - 000066E7 (0x74 bytes), align: 2
  Segment part 24.            Intra module refs:   SmsData::CheckFolder(int)
                                                   SmsData::DeMsgDataList(SMS_DATA_LIST *)
                                                   SmsData::ReadFolder(int)
                                                   SmsData::SaveMss(WSHDR *, char const *, _SDLIST *, int, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::AddByTimeSDL(_SDLIST *)
                                   00006674 
               stack 1 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
CODE
  Segment part 25. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000066E8 - 0000672F (0x48 bytes), align: 2
  Segment part 26.            Intra module refs:   SmsData::CheckFolder(int)
                                                   SmsData::DeMsgDataList(SMS_DATA_LIST *)
                                                   SmsData::ReadFolder(int)
                                                   SmsData::SaveMss(WSHDR *, char const *, _SDLIST *, int, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::FreeOneSDL(_SDLIST *)
                                   000066E8        EditGUI::GHook(void *, int) (EditGUI)
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 27. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00006730 - 000067AB (0x7c bytes), align: 2
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::CopyOneSDL(_SDLIST *)
                                   00006730        EditGUI::OnKey(void *, GUI_MSG *) (EditGUI)
                                                   EditOptionMenu::OnKey(void *, GUI_MSG *) (EditGUI)
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 29. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000067AC - 000067CB (0x20 bytes), align: 2
  Segment part 30.            Intra module refs:   SmsData::CheckDat()
                                                   SmsData::CheckSMS(int)
                                                   SmsData::ReadMessageOne(int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::FindSDL(int)   000067AC        DialogCSM::OnCreate(CSM_RAM *) (DialogCSM)
    -------------------------------------------------------------------------
CODE
  Segment part 31. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000067CC - 0000682B (0x60 bytes), align: 2
  Segment part 32.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::FindOpmsgSDL(int)
                                   000067CC        DialogCSM::OnCreate(CSM_RAM *) (DialogCSM)
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 33. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 34. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::FindSDL(WSHDR *, char *, char *)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 35. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000682C - 00006883 (0x58 bytes), align: 2
  Segment part 36.            Intra module refs:   SmsData::CheckFolder(int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::FindSDL(char *)
                                   0000682C 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 37. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00006884 - 0000690F (0x8c bytes), align: 2
  Segment part 38.            Intra module refs:   SmsData::CheckAll()
                                                   SmsData::FilterGetCount()
                                                   SmsData::ReadAllMessage()
                                                   SmsData::ReadMessageOne(int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::GetSMSCount(int)
                                   00006884        DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *) (DaemonCSM)
                                                   MainMenu::ItemProc(void *, int, void *) (MainMenu)
                                                   SmsListMenu::CreateSmsListMenu(int, int, DLG_CSM *) (SmsListMenu)
                                                   SmsListMenu::GHook(void *, int) (SmsListMenu)
                                                   SmsListMenu::GetSmsListMenuGUI(int, int, DLG_CSM *, int) (SmsListMenu)
                                                   SmsListMenu::ReCreateMe(void *) (SmsListMenu)
                                                   TabGUI::GHook(void *, int) (TabGUI)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 39. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00006910 - 000069B3 (0xa4 bytes), align: 2
  Segment part 40.            Intra module refs:   SmsData::FilterGetCount()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::GetSMSCount(int, int)
                                   00006910 
    -------------------------------------------------------------------------
CODE
  Segment part 41. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000069B4 - 00006A67 (0xb4 bytes), align: 2
  Segment part 42.            Intra module refs:   SmsData::FilterFindSDL(int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::FindSDL(int, int)
                                   000069B4        SmsListMenu::ItemProc(void *, int, void *) (SmsListMenu)
                                                   SmsListMenu::OnKey(void *, GUI_MSG *) (SmsListMenu)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 43. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00006A68 - 00006B1F (0xb8 bytes), align: 2
  Segment part 44.            Intra module refs:   SmsData::ReadAllDatMsg()
                                                   SmsData::ReadMessageOne(int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::ReadDat()      00006A68 
               stack 1 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
CODE
  Segment part 45. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00006B20 - 00006C87 (0x168 bytes), align: 2
  Segment part 46.            Intra module refs:   SmsData::ReadAllDatMsg()
                                                   SmsData::ReadMessageOne(int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::DeMsgDataList(SMS_DATA_LIST *)
                                   00006B20 
               stack 1 = 00000000 ( 0000002C )
    -------------------------------------------------------------------------
CODE
  Segment part 47. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00006C88 - 00006D6B (0xe4 bytes), align: 2
  Segment part 48.            Intra module refs:   SmsData::ReadAllMessage()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::ReadAllDatMsg()
                                   00006C88 
               stack 1 = 00000000 ( 00000018 )
    -------------------------------------------------------------------------
CODE
  Segment part 49. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00006D6C - 00006DDB (0x70 bytes), align: 2
  Segment part 50.            Intra module refs:   SmsData::ReadMessageOne(int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::FindMsgDataL(int)
                                   00006D6C 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 51. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00006DDC - 00006E5B (0x80 bytes), align: 2
  Segment part 52.            Intra module refs:   SmsData::CheckDat()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::ReadMessageOne(int)
                                   00006DDC        DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *) (DaemonCSM)
               stack 1 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
CODE
  Segment part 53. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 54. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::FreeDatBuf()   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 55. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00006E5C - 0000705F (0x204 bytes), align: 2
  Segment part 56.            Intra module refs:   SmsData::CheckFolder(int)
                                                   SmsData::ReadFolder(int)
                                                   SmsData::SaveMss(WSHDR *, char const *, _SDLIST *, int, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::ReadMss(char *, _SDLIST *)
                                   00006E5C        DialogCSM::OnCreate(CSM_RAM *) (DialogCSM)
               stack 1 = 00000000 ( 000000BC )
    -------------------------------------------------------------------------
CODE
  Segment part 57. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00007060 - 0000720F (0x1b0 bytes), align: 2
  Segment part 58.            Intra module refs:   SmsData::ReadAllMessage()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::ReadFolder(int)
                                   00007060 
               stack 1 = 00000000 ( 00000458 )
    -------------------------------------------------------------------------
CODE
  Segment part 59. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00007210 - 000074FF (0x2f0 bytes), align: 2
  Segment part 60.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::SaveMss(WSHDR *, char const *, _SDLIST *, int, int)
                                   00007210        EditGUI::DoSmsWorkBG(void *, int) (EditGUI)
                                                   EditGUI::SaveDraft(WSHDR *) (EditGUI)
                                                   SendList::SendEnd(int) (SendList)
               stack 1 = 00000000 ( 00000194 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00007500 - 00007503 (0x4 bytes), align: 2
  Segment part 61.            Intra module refs:   SmsData::ReadMss(char *, _SDLIST *)
                                                   SmsData::SaveMss(WSHDR *, char const *, _SDLIST *, int, int)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00007504 - 00007507 (0x4 bytes), align: 2
  Segment part 62.            Intra module refs:   SmsData::SaveMss(WSHDR *, char const *, _SDLIST *, int, int)
    -------------------------------------------------------------------------
CODE
  Segment part 63. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00007508 - 0000760B (0x104 bytes), align: 2
  Segment part 64.            Intra module refs:   SmsData::SaveMss(WSHDR *, char const *, _SDLIST *, int, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::GetMssPath(char *, char *, TTime *, TDate *)
                                   00007508 
               stack 1 = 00000000 ( 000000A8 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000760C - 0000760F (0x4 bytes), align: 2
  Segment part 65.            Intra module refs:   SmsData::GetMssPath(char *, char *, TTime *, TDate *)
    -------------------------------------------------------------------------
CODE
  Segment part 66. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00007610 - 0000768F (0x80 bytes), align: 2
  Segment part 67.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::DeleteMessage(_SDLIST *)
                                   00007610        EditGUI::DoSmsWorkBG(void *, int) (EditGUI)
                                                   EditOptionMenu::OnKey(void *, GUI_MSG *) (EditGUI)
                                                   SmsListMenu::OnKey(void *, GUI_MSG *) (SmsListMenu)
                                                   SmsOptionMenu::OnKey(void *, GUI_MSG *) (SmsListMenu)
               stack 1 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
CODE
  Segment part 68. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00007690 - 00007707 (0x78 bytes), align: 2
  Segment part 69.            Intra module refs:   SmsData::ReadAllMessageCHK(SmsData *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::ReadAllMessage()
                                   00007690 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 70. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00007708 - 0000771F (0x18 bytes), align: 2
  Segment part 71.            Intra module refs:   Segment part 76
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::ReadAllMessageCHK(SmsData *)
                                   00007708 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 72. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 73. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::ReadAllMessageFRC(SmsData *)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 74. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00007720 - 00007753 (0x34 bytes), align: 2
  Segment part 75.            Intra module refs:   SmsData::new SmsData()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::SmsData()      00007720 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00007754 - 00007757 (0x4 bytes), align: 2
  Segment part 76.            Intra module refs:   SmsData::SaveMss(WSHDR *, char const *, _SDLIST *, int, int)
                                                   SmsData::SmsData()
    -------------------------------------------------------------------------
CODE
  Segment part 77. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00007758 - 00007783 (0x2c bytes), align: 2
  Segment part 78.            Intra module refs:   SmsData::delete ~SmsData(SmsData *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::~SmsData()     00007758 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 79. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_Z
  Relative segment, address: CODE_AREA 0000FD1C - 0000FD1F (0x4 bytes), align: 2
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SMSDATA                 0000FD1C        MainMenu::ItemProc(void *, int, void *) (MainMenu)
                                                   Segment part 19 (DialogCSM)
                                                   Segment part 40 (DaemonCSM)
                                                   Segment part 45 (EditGUI)
                                                   Segment part 46 (OthersMenu)
                                                   Segment part 55 (SmsListMenu)
                                                   Segment part 71 (EditGUI)
                                                   SendList::SendEnd(int) (SendList)
                                                   TabGUI::GHook(void *, int) (TabGUI)
                                                   Vibra::VibraNext() (Vibra)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00007784 - 000077E3 (0x60 bytes), align: 2
  Segment part 80.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::IsNewSMS(int)
                                   00007784        DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *) (DaemonCSM)
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 81. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000077E4 - 0000790B (0x128 bytes), align: 2
  Segment part 82.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::CheckSMS(int)
                                   000077E4        DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *) (DaemonCSM)
               stack 1 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
CODE
  Segment part 83. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000790C - 00007ACB (0x1c0 bytes), align: 2
  Segment part 84.            Intra module refs:   SmsData::CheckAll()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::CheckDat()     0000790C 
               stack 1 = 00000000 ( 00000024 )
    -------------------------------------------------------------------------
CODE
  Segment part 85. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00007ACC - 00007CA3 (0x1d8 bytes), align: 2
  Segment part 86.            Intra module refs:   SmsData::CheckAll()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::CheckFolder(int)
                                   00007ACC 
               stack 1 = 00000000 ( 00000458 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00007CA4 - 00007CA7 (0x4 bytes), align: 2
  Segment part 87.            Intra module refs:   SmsData::CheckFolder(int)
                                                   SmsData::ReadFolder(int)
                                                   SmsData::SaveMss(WSHDR *, char const *, _SDLIST *, int, int)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00007CA8 - 00007CAB (0x4 bytes), align: 2
  Segment part 88.            Intra module refs:   SmsData::CheckFolder(int)
                                                   SmsData::ReadFolder(int)
                                                   SmsData::SaveMss(WSHDR *, char const *, _SDLIST *, int, int)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00007CAC - 00007CAF (0x4 bytes), align: 2
  Segment part 89.            Intra module refs:   SmsData::CheckFolder(int)
                                                   SmsData::ReadFolder(int)
                                                   SmsData::SaveMss(WSHDR *, char const *, _SDLIST *, int, int)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00007CB0 - 00007CB3 (0x4 bytes), align: 2
  Segment part 90.            Intra module refs:   SmsData::CheckFolder(int)
                                                   SmsData::ReadFolder(int)
                                                   SmsData::SaveMss(WSHDR *, char const *, _SDLIST *, int, int)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00007CB4 - 00007CB7 (0x4 bytes), align: 2
  Segment part 91.            Intra module refs:   SmsData::CheckFolder(int)
                                                   SmsData::ReadFolder(int)
                                                   SmsData::SaveMss(WSHDR *, char const *, _SDLIST *, int, int)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00007CB8 - 00007CBB (0x4 bytes), align: 2
  Segment part 92.            Intra module refs:   SmsData::CheckFolder(int)
                                                   SmsData::ReadFolder(int)
    -------------------------------------------------------------------------
CODE
  Segment part 93. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00007CBC - 00007D27 (0x6c bytes), align: 2
  Segment part 94.            Intra module refs:   SmsData::CheckSDList()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::IsDatExist(int)
                                   00007CBC 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 95. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00007D28 - 00007DEF (0xc8 bytes), align: 2
  Segment part 96.            Intra module refs:   SmsData::CheckAll()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::CheckSDList()
                                   00007D28 
               stack 1 = 00000000 ( 00000018 )
    -------------------------------------------------------------------------
CODE
  Segment part 97. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00007DF0 - 00007E5F (0x70 bytes), align: 2
  Segment part 98.            Intra module refs:   SmsData::CheckAllCHK(SmsData *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::CheckAll()     00007DF0 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 99. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00007E60 - 00007E77 (0x18 bytes), align: 2
  Segment part 100.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::CheckAllCHK(SmsData *)
                                   00007E60        DialogCSM::CreateDialogCSM(int, void *) (DialogCSM)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 101. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00007E78 - 00007F97 (0x120 bytes), align: 2
  Segment part 102.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::NewToReadSMS(_SDLIST *)
                                   00007E78        EditGUI::DoSmsWorkBG(void *, int) (EditGUI)
               stack 1 = 00000000 ( 0000009C )
    -------------------------------------------------------------------------
CODE
  Segment part 103. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00007F98 - 00007FBB (0x24 bytes), align: 2
  Segment part 104.           Intra module refs:   SmsData::DeleteMessage(_SDLIST *)
                                                   SmsData::FreeOneSDL(_SDLIST *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::IsExistSDL(_SDLIST *)
                                   00007F98        EditGUI::GHook(void *, int) (EditGUI)
    -------------------------------------------------------------------------
CODE
  Segment part 105. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00007FBC - 00008057 (0x9c bytes), align: 2
  Segment part 106.           Intra module refs:   SmsData::FilterFindNext(_SDLIST *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::FindNextSDL(_SDLIST *, int)
                                   00007FBC        EditGUI::OnKey(void *, GUI_MSG *) (EditGUI)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 107. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00008058 - 000080F3 (0x9c bytes), align: 2
  Segment part 108.           Intra module refs:   SmsData::FilterFindPrev(_SDLIST *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::FindPrevSDL(_SDLIST *, int)
                                   00008058        EditGUI::OnKey(void *, GUI_MSG *) (EditGUI)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 109. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000080F4 - 000081C3 (0xd0 bytes), align: 2
  Segment part 110.           Intra module refs:   SmsData::FindSDL(int, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::FilterFindSDL(int)
                                   000080F4 
               stack 1 = 00000000 ( 000000A8 )
    -------------------------------------------------------------------------
CODE
  Segment part 111. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000081C4 - 000081FB (0x38 bytes), align: 2
  Segment part 112.           Intra module refs:   SmsData::FilterFindSDL(int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::FilterFindSDL(int, int)
                                   000081C4 
    -------------------------------------------------------------------------
CODE
  Segment part 113. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000081FC - 0000824F (0x54 bytes), align: 2
  Segment part 114.           Intra module refs:   SmsData::FilterFindSDL(int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::FilterFindSDL(char const *, int)
                                   000081FC 
               stack 1 = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
CODE
  Segment part 115. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00008250 - 000082A3 (0x54 bytes), align: 2
  Segment part 116.           Intra module refs:   SmsData::FilterFindSDL(int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::FilterFindSDL(WSHDR *, int)
                                   00008250 
               stack 1 = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
CODE
  Segment part 117. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000082A4 - 0000835F (0xbc bytes), align: 2
  Segment part 118.           Intra module refs:   SmsData::GetSMSCount(int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::FilterGetCount()
                                   000082A4 
               stack 1 = 00000000 ( 000000A4 )
    -------------------------------------------------------------------------
CODE
  Segment part 119. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00008360 - 0000839F (0x40 bytes), align: 2
  Segment part 120.           Intra module refs:   SmsData::FilterGetCount()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::FilterGetCount(char const *)
                                   00008360 
               stack 1 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
CODE
  Segment part 121. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000083A0 - 000083DF (0x40 bytes), align: 2
  Segment part 122.           Intra module refs:   SmsData::FilterGetCount()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::FilterGetCount(WSHDR *)
                                   000083A0 
               stack 1 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
CODE
  Segment part 123. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000083E0 - 000084C3 (0xe4 bytes), align: 2
  Segment part 124.           Intra module refs:   SmsData::FindNextSDL(_SDLIST *, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::FilterFindNext(_SDLIST *)
                                   000083E0 
               stack 1 = 00000000 ( 000000A4 )
    -------------------------------------------------------------------------
CODE
  Segment part 125. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000084C4 - 00008507 (0x44 bytes), align: 2
  Segment part 126.           Intra module refs:   SmsData::FilterFindNext(_SDLIST *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::FilterFindNext(_SDLIST *, char const *)
                                   000084C4 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 127. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 128. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::FilterFindNext(_SDLIST *, WSHDR *)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 129. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00008508 - 000085EB (0xe4 bytes), align: 2
  Segment part 130.           Intra module refs:   SmsData::FindPrevSDL(_SDLIST *, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::FilterFindPrev(_SDLIST *)
                                   00008508 
               stack 1 = 00000000 ( 000000A4 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000085EC - 000085EF (0x4 bytes), align: 2
  Segment part 131.           Intra module refs:   SmsData::FilterFindNext(_SDLIST *)
                                                   SmsData::FilterFindPrev(_SDLIST *)
                                                   SmsData::FilterFindSDL(int)
                                                   SmsData::FilterGetCount()
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000085F0 - 000085F3 (0x4 bytes), align: 2
  Segment part 132.           Intra module refs:   SmsData::FilterFindNext(_SDLIST *)
                                                   SmsData::FilterFindPrev(_SDLIST *)
                                                   SmsData::FilterFindSDL(int)
                                                   SmsData::FilterGetCount()
    -------------------------------------------------------------------------
CODE
  Segment part 133. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000085F4 - 00008637 (0x44 bytes), align: 2
  Segment part 134.           Intra module refs:   SmsData::FilterFindPrev(_SDLIST *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::FilterFindPrev(_SDLIST *, char const *)
                                   000085F4 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 135. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 136. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::FilterFindPrev(_SDLIST *, WSHDR *)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 137. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00008638 - 00008827 (0x1f0 bytes), align: 2
  Segment part 138.           Intra module refs:   SmsData::MoveAllToArchive()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::MoveToArchive(_SDLIST *)
                                   00008638        EditOptionMenu::OnKey(void *, GUI_MSG *) (EditGUI)
                                                   SmsListMenu::OnKey(void *, GUI_MSG *) (SmsListMenu)
                                                   SmsOptionMenu::OnKey(void *, GUI_MSG *) (SmsListMenu)
               stack 1 = 00000000 ( 00000120 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00008828 - 0000882B (0x4 bytes), align: 2
  Segment part 139.           Intra module refs:   SmsData::MoveToArchive(_SDLIST *)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000882C - 0000882F (0x4 bytes), align: 2
  Segment part 140.           Intra module refs:   SmsData::MoveToArchive(_SDLIST *)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00008830 - 00008833 (0x4 bytes), align: 2
  Segment part 141.           Intra module refs:   SmsData::MoveToArchive(_SDLIST *)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00008834 - 00008837 (0x4 bytes), align: 2
  Segment part 142.           Intra module refs:   SmsData::MoveToArchive(_SDLIST *)
    -------------------------------------------------------------------------
CODE
  Segment part 143. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00008838 - 00008A93 (0x25c bytes), align: 2
  Segment part 144.           Intra module refs:   SmsData::MoveToArchive(_SDLIST *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::GetFilePathSDL(_SDLIST *, char *, char *, int)
                                   00008838 
               stack 1 = 00000000 ( 000001A4 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00008A94 - 00008A97 (0x4 bytes), align: 2
  Segment part 145.           Intra module refs:   SmsData::GetFilePathSDL(_SDLIST *, char *, char *, int)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00008A98 - 00008A9B (0x4 bytes), align: 2
  Segment part 146.           Intra module refs:   SmsData::GetFilePathSDL(_SDLIST *, char *, char *, int)
    -------------------------------------------------------------------------
CODE
  Segment part 147. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00008A9C - 00008AFB (0x60 bytes), align: 2
  Segment part 148.           Intra module refs:   SmsData::MoveAllToArchiveBG(SmsData *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::MoveAllToArchive()
                                   00008A9C 
               stack 1 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
CODE
  Segment part 149. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00008AFC - 00008B33 (0x38 bytes), align: 2
  Segment part 150.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::MoveAllToArchiveBG(SmsData *)
                                   00008AFC        Segment part 33 (OthersMenu)
               stack 1 = 00000000 ( 00000044 )
    -------------------------------------------------------------------------
CODE
  Segment part 151. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00008B34 - 00008B53 (0x20 bytes), align: 2
  Segment part 152.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::FindLastNew()
                                   00008B34        DialogCSM::OnCreate(CSM_RAM *) (DialogCSM)
    -------------------------------------------------------------------------
CODE
  Segment part 153. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_I
  Relative segment, address: DATA_AREA 000002FC - 000002FF (0x4 bytes), align: 2
  Segment part 11.            Intra module refs:   SmsData::ExportAllToText()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           utf8_hdr                000002FC 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00008B54 - 00008DE7 (0x294 bytes), align: 2
  Segment part 154.           Intra module refs:   SmsData::ExportAllToTextBG(SmsData *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::ExportAllToText()
                                   00008B54 
               stack 1 = 00000000 ( 00000288 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00008DE8 - 00008DEB (0x4 bytes), align: 2
  Segment part 155.           Intra module refs:   SmsData::ExportAllToText()
                                                   SmsData::MoveToArchive(_SDLIST *)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00008DEC - 00008DEF (0x4 bytes), align: 2
  Segment part 156.           Intra module refs:   SmsData::ExportAllToText()
                                                   SmsData::GetFilePathSDL(_SDLIST *, char *, char *, int)
    -------------------------------------------------------------------------
CODE
  Segment part 157. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00008DF0 - 00008E27 (0x38 bytes), align: 2
  Segment part 158.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::ExportAllToTextBG(SmsData *)
                                   00008DF0        Segment part 43 (OthersMenu)
               stack 1 = 00000000 ( 00000044 )
    -------------------------------------------------------------------------
CODE
  Segment part 159. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00008E28 - 00008EA7 (0x80 bytes), align: 2
  Segment part 160.           Intra module refs:   SmsData::DeleteAllMssBG(SmsData *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::DeleteAllMss()
                                   00008E28 
               stack 1 = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
CODE
  Segment part 161. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00008EA8 - 00008EDF (0x38 bytes), align: 2
  Segment part 162.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::DeleteAllMssBG(SmsData *)
                                   00008EA8        Segment part 47 (OthersMenu)
               stack 1 = 00000000 ( 00000044 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00008EE0 - 00008EE3 (0x4 bytes), align: 2
  Segment part 163.           Intra module refs:   SmsData::DeleteAllMssBG(SmsData *)
                                                   SmsData::ExportAllToTextBG(SmsData *)
                                                   SmsData::MoveAllToArchiveBG(SmsData *)
    -------------------------------------------------------------------------
CODE
  Segment part 164. NOT NEEDED.Intra module refs   SmsData::AllocSDL()
                                                   SmsData::CopyOneSDL(_SDLIST *)
                                                   SmsData::new SmsData()
    -------------------------------------------------------------------------
CODE
  Segment part 165. NOT NEEDED.Intra module refs   SmsData::DeleteSDL(_SDLIST *)
                                                   SmsData::ExportAllToText()
                                                   SmsData::FreeAllSDL()
                                                   SmsData::FreeOneSDL(_SDLIST *)
                                                   SmsData::ReadDat()
                                                   SmsData::delete ~SmsData(SmsData *)
                                                   SmsData::~SmsData()
    -------------------------------------------------------------------------
CODE
  Segment part 166. NOT NEEDED.Intra module refs   SmsData::CopyOneSDL(_SDLIST *)
                                                   SmsData::ExportAllToText()
                                                   SmsData::ReadDat()
                                                   SmsData::ReadMss(char *, _SDLIST *)
    -------------------------------------------------------------------------
CODE
  Segment part 167. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 168. NOT NEEDED.Intra module refs   SmsData::ExportAllToText()
                                                   SmsData::NewToReadSMS(_SDLIST *)
                                                   SmsData::ReadDat()
                                                   SmsData::ReadMss(char *, _SDLIST *)
                                                   SmsData::SaveMss(WSHDR *, char const *, _SDLIST *, int, int)
    -------------------------------------------------------------------------
CODE
  Segment part 169. NOT NEEDED.Intra module refs   SmsData::NewToReadSMS(_SDLIST *)
                                                   SmsData::ReadDat()
                                                   SmsData::ReadMss(char *, _SDLIST *)
    -------------------------------------------------------------------------
CODE
  Segment part 170. NOT NEEDED.Intra module refs   SmsData::NewToReadSMS(_SDLIST *)
                                                   SmsData::ReadDat()
                                                   SmsData::ReadMss(char *, _SDLIST *)
    -------------------------------------------------------------------------
CODE
  Segment part 171. NOT NEEDED.Intra module refs   SmsData::ExportAllToText()
                                                   SmsData::NewToReadSMS(_SDLIST *)
                                                   SmsData::ReadDat()
                                                   SmsData::ReadMss(char *, _SDLIST *)
                                                   SmsData::SaveMss(WSHDR *, char const *, _SDLIST *, int, int)
    -------------------------------------------------------------------------
CODE
  Segment part 172. NOT NEEDED.Intra module refs   SmsData::DeMsgDataList(SMS_DATA_LIST *)
    -------------------------------------------------------------------------
CODE
  Segment part 173. NOT NEEDED.Intra module refs   SmsData::DeMsgDataList(SMS_DATA_LIST *)
    -------------------------------------------------------------------------
CODE
  Segment part 174. NOT NEEDED.Intra module refs   SmsData::CheckAll()
                                                   SmsData::CheckDat()
                                                   SmsData::CheckFolder(int)
                                                   SmsData::CheckSDList()
                                                   SmsData::DeleteAllMss()
                                                   SmsData::MoveAllToArchive()
                                                   SmsData::ReadAllDatMsg()
                                                   SmsData::ReadAllMessage()
                                                   SmsData::ReadFolder(int)
    -------------------------------------------------------------------------
CODE
  Segment part 175. NOT NEEDED.Intra module refs   SmsData::CheckFolder(int)
                                                   SmsData::ExportAllToText()
                                                   SmsData::MoveToArchive(_SDLIST *)
                                                   SmsData::ReadFolder(int)
                                                   SmsData::SaveMss(WSHDR *, char const *, _SDLIST *, int, int)
    -------------------------------------------------------------------------
CODE
  Segment part 176. NOT NEEDED.Intra module refs   SmsData::CheckFolder(int)
                                                   SmsData::ReadFolder(int)
    -------------------------------------------------------------------------
CODE
  Segment part 177. NOT NEEDED.Intra module refs   SmsData::CheckFolder(int)
                                                   SmsData::ReadFolder(int)
    -------------------------------------------------------------------------
CODE
  Segment part 178. NOT NEEDED.Intra module refs   SmsData::CheckFolder(int)
                                                   SmsData::ReadFolder(int)
    -------------------------------------------------------------------------
CODE
  Segment part 179. NOT NEEDED.Intra module refs   SmsData::ExportAllToText()
                                                   SmsData::MoveToArchive(_SDLIST *)
                                                   SmsData::SaveMss(WSHDR *, char const *, _SDLIST *, int, int)
    -------------------------------------------------------------------------
CODE
  Segment part 180. NOT NEEDED.Intra module refs   SmsData::ExportAllToText()
                                                   SmsData::NewToReadSMS(_SDLIST *)
                                                   SmsData::SaveMss(WSHDR *, char const *, _SDLIST *, int, int)
    -------------------------------------------------------------------------
CODE
  Segment part 181. NOT NEEDED.Intra module refs   SmsData::CheckSDList()
                                                   SmsData::ExportAllToText()
                                                   SmsData::GetFilePathSDL(_SDLIST *, char *, char *, int)
                                                   SmsData::GetMssPath(char *, char *, TTime *, TDate *)
    -------------------------------------------------------------------------
CODE
  Segment part 182. NOT NEEDED.Intra module refs   SmsData::DeleteAllMss()
                                                   SmsData::DeleteMessage(_SDLIST *)
    -------------------------------------------------------------------------
CODE
  Segment part 183. NOT NEEDED.Intra module refs   SmsData::FilterFindNext(_SDLIST *, char const *)
                                                   SmsData::FilterFindPrev(_SDLIST *, char const *)
                                                   SmsData::FilterFindSDL(char const *, int)
                                                   SmsData::FilterGetCount(char const *)
    -------------------------------------------------------------------------
CODE
  Segment part 184. NOT NEEDED.Intra module refs   SmsData::FilterFindSDL(WSHDR *, int)
                                                   SmsData::FilterGetCount(WSHDR *)
    -------------------------------------------------------------------------
CODE
  Segment part 185. NOT NEEDED.Intra module refs   SmsData::GetFilePathSDL(_SDLIST *, char *, char *, int)
                                                   SmsData::MoveToArchive(_SDLIST *)
    -------------------------------------------------------------------------
CODE
  Segment part 186. NOT NEEDED.Intra module refs   SmsData::MoveToArchive(_SDLIST *)
    -------------------------------------------------------------------------
CODE
  Segment part 187. NOT NEEDED.Intra module refs   SmsData::GetFilePathSDL(_SDLIST *, char *, char *, int)
    -------------------------------------------------------------------------
CODE
  Segment part 188. NOT NEEDED.Intra module refs   SmsData::ExportAllToText()
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_ID
  Relative segment, address: CODE_AREA 000002FC - 000002FF (0x4 bytes), align: 2
  Segment part 12.            Intra module refs:   utf8_hdr
    -------------------------------------------------------------------------
DATA_ID
  Segment part 189. TENTATIVE. Used definition from EditGUI
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?*?DATA_ID              
    -------------------------------------------------------------------------
INITTAB
  Segment part 190. TENTATIVE. Used definition from EditGUI
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?init?tab?DATA_I        
    -------------------------------------------------------------------------
INITTAB
  Segment part 191. TENTATIVE. Used definition from AdrList
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?init?tab?DATA_Z        
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B7C4 - 0000B7C7 (0x4 bytes), align: 2
  Segment part 2.             Intra module refs:   Segment part 12
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B7C8 - 0000B813 (0x4c bytes), align: 2
  Segment part 3.             Intra module refs:   SmsData::ExportAllToText()
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B814 - 0000B83B (0x28 bytes), align: 2
  Segment part 4.             Intra module refs:   Segment part 61
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B83C - 0000B89B (0x60 bytes), align: 2
  Segment part 5.             Intra module refs:   Segment part 145
                                                   Segment part 65
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B89C - 0000B8A3 (0x8 bytes), align: 2
  Segment part 6.             Intra module refs:   Segment part 92
    -------------------------------------------------------------------------
DATA_C
  Segment part 7. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_C
  Segment part 8. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B8A4 - 0000B8AF (0xc bytes), align: 2
  Segment part 9.             Intra module refs:   SmsData::MoveToArchive(_SDLIST *)

    *************************************************************************

  FILE NAME : D:\pasha\elf\SieELF\MySMSYS\Mss3\Release_ELKA_EN\Obj\SmsListMenu.r79
  PROGRAM MODULE, NAME : SmsListMenu

  SEGMENTS IN THE MODULE
  ======================
DATA_I
  Relative segment, address: DATA_AREA 00000300 - 00000317 (0x18 bytes), align: 2
  Segment part 2.             Intra module refs:   Segment part 4
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sms_menu_sk             00000300        LangPack::InitLgp() (LangPack)
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B8B0 - 0000B8B7 (0x8 bytes), align: 2
  Segment part 4.             Intra module refs:   SmsListMenu::SmsListMenu()
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B8B8 - 0000B8CB (0x14 bytes), align: 2
  Segment part 5.             Intra module refs:   Segment part 56
    -------------------------------------------------------------------------
CODE
  Segment part 14. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00008EE4 - 00008EFF (0x1c bytes), align: 2
  Segment part 15.            Intra module refs:   SmsListMenu::OnKey(void *, GUI_MSG *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsOptionMenu::new SmsOptionMenu()
                                   00008EE4 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 16. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 17. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsListMenu::delete ~SmsListMenu(SmsListMenu *)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 18. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 19. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsOptionMenu::delete ~SmsOptionMenu(SmsOptionMenu *)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 20. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00008F00 - 00008F1B (0x1c bytes), align: 2
  Segment part 21.            Intra module refs:   SmsListMenu::ReCreateMe(void *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsListMenu::new SmsListMenu()
                                   00008F00        DialogCSM::OnCreate(CSM_RAM *) (DialogCSM)
                                                   MainMenu::OnKey(void *, GUI_MSG *) (MainMenu)
                                                   TabGUI::CreateTabGUI(DLG_CSM *) (TabGUI)
                                                   TabGUI::ReCreateTabGUI(DLG_CSM *) (TabGUI)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 22. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 23. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsListMenu::~SmsListMenu()
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 24. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00008F1C - 00008F83 (0x68 bytes), align: 2
  Segment part 25.            Intra module refs:   SmsListMenu::new SmsListMenu()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsListMenu::SmsListMenu()
                                   00008F1C 
    -------------------------------------------------------------------------
CODE
  Segment part 26. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00008F84 - 000090D3 (0x150 bytes), align: 2
  Segment part 27.            Intra module refs:   SmsListMenu::SmsListMenu()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsListMenu::OnKey(void *, GUI_MSG *)
                                   00008F84 
               stack 1 = 00000000 ( 00000020 )
    -------------------------------------------------------------------------
CODE
  Segment part 28. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_I
  Relative segment, address: DATA_AREA 00000318 - 00000333 (0x1c bytes), align: 2
  Segment part 6.             Intra module refs:   SmsListMenu::GHook(void *, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SLM_HDR_LGPS            00000318        LangPack::InitLgp() (LangPack)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000090D4 - 00009247 (0x174 bytes), align: 2
  Segment part 29.            Intra module refs:   SmsListMenu::SmsListMenu()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsListMenu::GHook(void *, int)
                                   000090D4 
               stack 1 = 00000000 ( 0000001C )
    -------------------------------------------------------------------------
CODE
  Segment part 30. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_I
  Relative segment, address: DATA_AREA 00000334 - 00000353 (0x20 bytes), align: 2
  Segment part 8.             Intra module refs:   SmsListMenu::ItemProc(void *, int, void *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SLM_ICONS               00000334        IconPack::InitIconPack() (IconPack)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00009248 - 0000936F (0x128 bytes), align: 2
  Segment part 31.            Intra module refs:   SmsListMenu::SmsListMenu()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsListMenu::ItemProc(void *, int, void *)
                                   00009248 
               stack 1 = 00000000 ( 00000020 )
    -------------------------------------------------------------------------
CODE
  Segment part 32. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00009370 - 000093B3 (0x44 bytes), align: 2
  Segment part 33.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsListMenu::CreateSmsListMenu(int, int, DLG_CSM *)
                                   00009370        DialogCSM::OnCreate(CSM_RAM *) (DialogCSM)
                                                   MainMenu::OnKey(void *, GUI_MSG *) (MainMenu)
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 34. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000093B4 - 00009477 (0xc4 bytes), align: 2
  Segment part 35.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsListMenu::GetSmsListMenuGUI(int, int, DLG_CSM *, int)
                                   000093B4        TabGUI::CreateTabGUI(DLG_CSM *) (TabGUI)
                                                   TabGUI::ReCreateTabGUI(DLG_CSM *) (TabGUI)
               stack 1 = 00000000 ( 0000001C )
    -------------------------------------------------------------------------
CODE
  Segment part 36. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B8CC - 0000B8DF (0x14 bytes), align: 2
  Segment part 10.            Intra module refs:   SmsOptionMenu::CreateSmsOptionMenu(DLG_CSM *, int, int, _SDLIST *)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00009478 - 000094D7 (0x60 bytes), align: 2
  Segment part 37.            Intra module refs:   SmsOptionMenu::new SmsOptionMenu()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsOptionMenu::SmsOptionMenu()
                                   00009478 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000094D8 - 000094DB (0x4 bytes), align: 2
  Segment part 38.            Intra module refs:   SmsListMenu::SmsListMenu()
                                                   SmsOptionMenu::SmsOptionMenu()
    -------------------------------------------------------------------------
CODE
  Segment part 39. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 40. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsOptionMenu::~SmsOptionMenu()
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 41. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000094DC - 00009657 (0x17c bytes), align: 2
  Segment part 42.            Intra module refs:   SmsOptionMenu::SmsOptionMenu()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsOptionMenu::OnKey(void *, GUI_MSG *)
                                   000094DC 
               stack 1 = 00000000 ( 00000018 )
    -------------------------------------------------------------------------
CODE
  Segment part 43. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00009658 - 000096E7 (0x90 bytes), align: 2
  Segment part 44.            Intra module refs:   SmsOptionMenu::SmsOptionMenu()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsOptionMenu::GHook(void *, int)
                                   00009658 
               stack 1 = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000096E8 - 000096EB (0x4 bytes), align: 2
  Segment part 45.            Intra module refs:   SmsListMenu::GHook(void *, int)
                                                   SmsListMenu::ItemProc(void *, int, void *)
                                                   SmsOptionMenu::GHook(void *, int)
    -------------------------------------------------------------------------
CODE
  Segment part 46. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_I
  Relative segment, address: DATA_AREA 00000354 - 0000036F (0x1c bytes), align: 2
  Segment part 11.            Intra module refs:   SmsOptionMenu::ItemProc(void *, int, void *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SOP_ITEM_LGPS           00000354        LangPack::InitLgp() (LangPack)
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B8E0 - 0000B8E7 (0x8 bytes), align: 2
  Segment part 13.            Intra module refs:   SmsOptionMenu::ItemProc(void *, int, void *)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000096EC - 00009763 (0x78 bytes), align: 2
  Segment part 47.            Intra module refs:   SmsOptionMenu::SmsOptionMenu()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsOptionMenu::ItemProc(void *, int, void *)
                                   000096EC 
               stack 1 = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
CODE
  Segment part 48. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00009764 - 0000979B (0x38 bytes), align: 2
  Segment part 49.            Intra module refs:   SmsListMenu::OnKey(void *, GUI_MSG *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsOptionMenu::CreateSmsOptionMenu(DLG_CSM *, int, int, _SDLIST *)
                                   00009764 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 50. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 51. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsListMenu::UpdateCSMName(DLG_CSM *, int)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000979C - 0000979F (0x4 bytes), align: 2
  Segment part 52.            Intra module refs:   SmsListMenu::GHook(void *, int)
                                                   SmsListMenu::ItemProc(void *, int, void *)
                                                   SmsOptionMenu::GHook(void *, int)
                                                   SmsOptionMenu::ItemProc(void *, int, void *)
    -------------------------------------------------------------------------
CODE
  Segment part 53. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000097A0 - 00009867 (0xc8 bytes), align: 2
  Segment part 54.            Intra module refs:   SmsListMenu::OnKey(void *, GUI_MSG *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsListMenu::ReCreateMe(void *)
                                   000097A0 
               stack 1 = 00000000 ( 0000001C )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00009868 - 0000986B (0x4 bytes), align: 2
  Segment part 55.            Intra module refs:   SmsListMenu::CreateSmsListMenu(int, int, DLG_CSM *)
                                                   SmsListMenu::GHook(void *, int)
                                                   SmsListMenu::GetSmsListMenuGUI(int, int, DLG_CSM *, int)
                                                   SmsListMenu::ItemProc(void *, int, void *)
                                                   SmsListMenu::OnKey(void *, GUI_MSG *)
                                                   SmsListMenu::ReCreateMe(void *)
                                                   SmsOptionMenu::OnKey(void *, GUI_MSG *)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000986C - 0000986F (0x4 bytes), align: 2
  Segment part 56.            Intra module refs:   SmsListMenu::CreateSmsListMenu(int, int, DLG_CSM *)
                                                   SmsListMenu::GetSmsListMenuGUI(int, int, DLG_CSM *, int)
                                                   SmsListMenu::ReCreateMe(void *)
    -------------------------------------------------------------------------
CODE
  Segment part 57. NOT NEEDED.Intra module refs:   SmsListMenu::new SmsListMenu()
                                                   SmsOptionMenu::new SmsOptionMenu()
    -------------------------------------------------------------------------
CODE
  Segment part 58. NOT NEEDED.Intra module refs:   SmsListMenu::GHook(void *, int)
                                                   SmsOptionMenu::GHook(void *, int)
    -------------------------------------------------------------------------
CODE
  Segment part 59. NOT NEEDED.Intra module refs:   SmsListMenu::ItemProc(void *, int, void *)
                                                   SmsListMenu::OnKey(void *, GUI_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 60. NOT NEEDED.Intra module refs:   SmsListMenu::OnKey(void *, GUI_MSG *)
                                                   SmsOptionMenu::OnKey(void *, GUI_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 61. NOT NEEDED.Intra module refs:   SmsListMenu::OnKey(void *, GUI_MSG *)
                                                   SmsOptionMenu::OnKey(void *, GUI_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 62. NOT NEEDED.Intra module refs:   SmsListMenu::OnKey(void *, GUI_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 63. NOT NEEDED.Intra module refs:   SmsListMenu::OnKey(void *, GUI_MSG *)
                                                   SmsOptionMenu::OnKey(void *, GUI_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 64. NOT NEEDED.Intra module refs:   SmsListMenu::OnKey(void *, GUI_MSG *)
                                                   SmsOptionMenu::OnKey(void *, GUI_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 65. NOT NEEDED.Intra module refs:   SmsListMenu::CreateSmsListMenu(int, int, DLG_CSM *)
                                                   SmsListMenu::GHook(void *, int)
                                                   SmsListMenu::GetSmsListMenuGUI(int, int, DLG_CSM *, int)
                                                   SmsListMenu::ReCreateMe(void *)
    -------------------------------------------------------------------------
CODE
  Segment part 66. NOT NEEDED.Intra module refs:   SmsListMenu::ItemProc(void *, int, void *)
    -------------------------------------------------------------------------
CODE
  Segment part 67. NOT NEEDED.Intra module refs:   SmsListMenu::CreateSmsListMenu(int, int, DLG_CSM *)
                                                   SmsListMenu::ReCreateMe(void *)
    -------------------------------------------------------------------------
CODE
  Segment part 68. NOT NEEDED.Intra module refs:   SmsOptionMenu::OnKey(void *, GUI_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 69. NOT NEEDED.Intra module refs:   SmsOptionMenu::OnKey(void *, GUI_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 70. NOT NEEDED.Intra module refs:   SmsOptionMenu::CreateSmsOptionMenu(DLG_CSM *, int, int, _SDLIST *)
    -------------------------------------------------------------------------
CODE
  Segment part 71. NOT NEEDED.Intra module refs:   SmsListMenu::ReCreateMe(void *)
    -------------------------------------------------------------------------
CODE
  Segment part 72. NOT NEEDED.Intra module refs:   SmsListMenu::ReCreateMe(void *)
    -------------------------------------------------------------------------
CODE
  Segment part 73. NOT NEEDED.Intra module refs:   SmsListMenu::ReCreateMe(void *)
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_ID
  Relative segment, address: CODE_AREA 00000300 - 00000317 (0x18 bytes), align: 2
  Segment part 3.             Intra module refs:   sms_menu_sk
    -------------------------------------------------------------------------
DATA_ID
  Relative segment, address: CODE_AREA 00000318 - 00000333 (0x1c bytes), align: 2
  Segment part 7.             Intra module refs:   SLM_HDR_LGPS
    -------------------------------------------------------------------------
DATA_ID
  Relative segment, address: CODE_AREA 00000334 - 00000353 (0x20 bytes), align: 2
  Segment part 9.             Intra module refs:   SLM_ICONS
    -------------------------------------------------------------------------
DATA_ID
  Relative segment, address: CODE_AREA 00000354 - 0000036F (0x1c bytes), align: 2
  Segment part 12.            Intra module refs:   SOP_ITEM_LGPS
    -------------------------------------------------------------------------
DATA_ID
  Segment part 74. TENTATIVE. Used definition from EditGUI
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?*?DATA_ID              
    -------------------------------------------------------------------------
INITTAB
  Segment part 75. TENTATIVE. Used definition from EditGUI
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?init?tab?DATA_I        

    *************************************************************************

  FILE NAME : D:\pasha\elf\SieELF\MySMSYS\Mss3\Release_ELKA_EN\Obj\StrConst.r79
  PROGRAM MODULE, NAME : StrConst

  SEGMENTS IN THE MODULE
  ======================
DATA_C
  Relative segment, address: CODE_AREA 0000B8E8 - 0000B8EF (0x8 bytes), align: 2
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IPC_NAME                0000B8E8        DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *) (DaemonCSM)
                                                   Segment part 2 (MyIpcMessage)
                                                   Segment part 4 (MyIpcMessage)
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000BBE7 - 0000BBE9 (0x3 bytes), align: 0
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PERCENT_T               0000BBE7        NAbCSM::CreateNAbCSM(void *, int, char *, int) (NativeAddressbook)
                                                   Segment part 22 (DialogCSM)
                                                   Segment part 28 (PopupGUI)
                                                   Segment part 29 (MainMenu)
                                                   Segment part 29 (Template)
                                                   Segment part 34 (EditGUI)
                                                   Segment part 38 (OthersMenu)
                                                   Segment part 52 (SmsListMenu)
                                                   Segment part 55 (EditGUI)
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000BBEA - 0000BBEC (0x3 bytes), align: 0
  Segment part 4.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PERCENT_S               0000BBEA        SmsListMenu::ItemProc(void *, int, void *) (SmsListMenu)
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B8F0 - 0000B8F7 (0x8 bytes), align: 2
  Segment part 5.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           num_fetion              0000B8F0        NumberMatch(char const *, char const *) (string_works)
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B8F8 - 0000B90B (0x14 bytes), align: 2
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           STR_LINES               0000B8F8        Segment part 58 (EditGUI)
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B90C - 0000B92B (0x20 bytes), align: 2
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           STR_UNK_TXTT            0000B90C        Segment part 14 (SiemensPDU)
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B92C - 0000B93F (0x14 bytes), align: 2
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           STR_UNK_TYPE            0000B92C        SiememPDU::PduDecodeAll(SDLIST *, char *) (SiemensPDU)
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B940 - 0000B943 (0x4 bytes), align: 2
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           FLDR_IN                 0000B940        Segment part 141 (SmsData)
                                                   Segment part 89 (SmsData)
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B944 - 0000B94B (0x8 bytes), align: 2
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           FLDR_SENT               0000B944        Segment part 140 (SmsData)
                                                   Segment part 88 (SmsData)
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B94C - 0000B953 (0x8 bytes), align: 2
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           FLDR_DRAFT              0000B94C        Segment part 139 (SmsData)
                                                   Segment part 87 (SmsData)
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B954 - 0000B95B (0x8 bytes), align: 2
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           FLDR_UNK                0000B954        Segment part 142 (SmsData)
                                                   Segment part 90 (SmsData)
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B95C - 0000B967 (0xc bytes), align: 2
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           FLDR_ARCHIVE            0000B95C        OpenArchive() (OthersMenu)
                                                   SmsData::MoveToArchive(_SDLIST *) (SmsData)
    -------------------------------------------------------------------------
DATA_C
  Segment part 14. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           STR_UNK_NUM_UTF8        
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B968 - 0000B96F (0x8 bytes), align: 2
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           STR_NUMBER_UTF8         0000B968        SmsData::ExportAllToText() (SmsData)
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B970 - 0000B977 (0x8 bytes), align: 2
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           STR_TEXT_UTF8           0000B970        SmsData::ExportAllToText() (SmsData)
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000BBED - 0000BBEF (0x3 bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           STR_TO_UTF8             0000BBED        SmsData::ExportAllToText() (SmsData)
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B978 - 0000B97F (0x8 bytes), align: 2
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           STR_FROM_UTF8           0000B978        SmsData::ExportAllToText() (SmsData)
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B980 - 0000B987 (0x8 bytes), align: 2
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           STR_TIME_UTF8           0000B980        SmsData::ExportAllToText() (SmsData)
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B988 - 0000B98F (0x8 bytes), align: 2
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           STR_UNK_UTF8            0000B988        SmsData::ExportAllToText() (SmsData)
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B990 - 0000BA63 (0xd4 bytes), align: 2
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DEFAUT_HLP_STR          0000B990        OthMenu::ShowHelp() (OthersMenu)
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    *************************************************************************

  FILE NAME : D:\pasha\elf\SieELF\MySMSYS\Mss3\Release_ELKA_EN\Obj\TViewGUI.r79
  PROGRAM MODULE, NAME : TViewGUI

  SEGMENTS IN THE MODULE
  ======================
DATA_I
  Relative segment, address: DATA_AREA 00000370 - 00000387 (0x18 bytes), align: 2
  Segment part 2.             Intra module refs:   Segment part 4
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           tview_sk                00000370        LangPack::InitLgp() (LangPack)
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000BA64 - 0000BA6B (0x8 bytes), align: 2
  Segment part 4.             Intra module refs:   Segment part 6
    -------------------------------------------------------------------------
DATA_I
  Relative segment, address: DATA_AREA 00000388 - 000003CF (0x48 bytes), align: 2
  Segment part 5.             Intra module refs:   TViewGUI::CreateTViewGUI(WSHDR *, WSHDR *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TViewGUI::tview         00000388 
           tview_hdr               000003BC 
    -------------------------------------------------------------------------
CODE
  Segment part 7. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 8. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TViewGUI::delete ~TViewGUI(TViewGUI *)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00009870 - 0000988B (0x1c bytes), align: 2
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TViewGUI::new TViewGUI()
                                   00009870        OthMenu::ShowHelp() (OthersMenu)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 11. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 12. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TViewGUI::TViewGUI()    
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 13. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 14. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TViewGUI::~TViewGUI()   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 15. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000988C - 000098AF (0x24 bytes), align: 2
  Segment part 16.            Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TViewGUI::OnKey(void *, GUI_MSG *)
                                   0000988C 
    -------------------------------------------------------------------------
CODE
  Segment part 17. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000098B0 - 000098CF (0x20 bytes), align: 2
  Segment part 18.            Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TViewGUI::GHook(void *, int)
                                   000098B0 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 19. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000098D0 - 000098D3 (0x4 bytes), align: 2
  Segment part 20.            Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TViewGUI::locret()      000098D0 
    -------------------------------------------------------------------------
CODE
  Segment part 21. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000098D4 - 000099EB (0x118 bytes), align: 2
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TViewGUI::CreateTViewGUI(WSHDR *, WSHDR *)
                                   000098D4        OthMenu::ShowHelp() (OthersMenu)
               stack 1 = 00000000 ( 00000020 )
    -------------------------------------------------------------------------
CODE
  Segment part 23. NOT NEEDED.Intra module refs:   TViewGUI::CreateTViewGUI(WSHDR *, WSHDR *)
                                                   TViewGUI::GHook(void *, int)
    -------------------------------------------------------------------------
CODE
  Segment part 24. NOT NEEDED.Intra module refs:   TViewGUI::new TViewGUI()
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_ID
  Relative segment, address: CODE_AREA 00000370 - 00000387 (0x18 bytes), align: 2
  Segment part 3.             Intra module refs:   tview_sk
    -------------------------------------------------------------------------
DATA_ID
  Relative segment, address: CODE_AREA 00000388 - 000003CF (0x48 bytes), align: 2
  Segment part 6.             Intra module refs:   Segment part 5
    -------------------------------------------------------------------------
DATA_ID
  Segment part 25. TENTATIVE. Used definition from EditGUI
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?*?DATA_ID              
    -------------------------------------------------------------------------
INITTAB
  Segment part 26. TENTATIVE. Used definition from EditGUI
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?init?tab?DATA_I        

    *************************************************************************

  FILE NAME : D:\pasha\elf\SieELF\MySMSYS\Mss3\Release_ELKA_EN\Obj\TabGUI.r79
  PROGRAM MODULE, NAME : TabGUI

  SEGMENTS IN THE MODULE
  ======================
DATA_I
  Relative segment, address: DATA_AREA 000003D0 - 0000041F (0x50 bytes), align: 2
  Segment part 2.             Intra module refs:   Segment part 22
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TABICONS                000003D0        IconPack::InitIconPack() (IconPack)
    -------------------------------------------------------------------------
CODE
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 5. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TabGUI::new TabGUI()    
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 7. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TabGUI::delete ~TabGUI(TabGUI *)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 8. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000099EC - 00009A53 (0x68 bytes), align: 2
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TabGUI::TabGUI()        000099EC        DialogCSM::OnCreate(CSM_RAM *) (DialogCSM)
                                                   SmsListMenu::ReCreateMe(void *) (SmsListMenu)
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 10. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00009A54 - 00009A57 (0x4 bytes), align: 2
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TabGUI::~TabGUI()       00009A54        DialogCSM::OnCreate(CSM_RAM *) (DialogCSM)
                                                   SmsListMenu::ReCreateMe(void *) (SmsListMenu)
    -------------------------------------------------------------------------
CODE
  Segment part 12. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00009A58 - 00009B5B (0x104 bytes), align: 2
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TabGUI::CreateTabGUI(DLG_CSM *)
                                   00009A58        DialogCSM::OnCreate(CSM_RAM *) (DialogCSM)
               stack 1 = 00000000 ( 0000001C )
    -------------------------------------------------------------------------
CODE
  Segment part 14. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00009B5C - 00009B63 (0x8 bytes), align: 2
  Segment part 15.            Intra module refs:   TabGUI::TabGUI()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TabGUI::OnKey(void *, GUI_MSG *)
                                   00009B5C 
    -------------------------------------------------------------------------
CODE
  Segment part 16. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00009B64 - 00009C53 (0xf0 bytes), align: 2
  Segment part 17.            Intra module refs:   TabGUI::TabGUI()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TabGUI::GHook(void *, int)
                                   00009B64 
               stack 1 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
CODE
  Segment part 18. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00009C54 - 00009C57 (0x4 bytes), align: 2
  Segment part 19.            Intra module refs:   TabGUI::TabGUI()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TabGUI::Locret()        00009C54 
    -------------------------------------------------------------------------
CODE
  Segment part 20. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00009C58 - 00009DD3 (0x17c bytes), align: 2
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TabGUI::ReCreateTabGUI(DLG_CSM *)
                                   00009C58        SmsListMenu::ReCreateMe(void *) (SmsListMenu)
               stack 1 = 00000000 ( 00000028 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00009DD4 - 00009DD7 (0x4 bytes), align: 2
  Segment part 22.            Intra module refs:   TabGUI::CreateTabGUI(DLG_CSM *)
                                                   TabGUI::ReCreateTabGUI(DLG_CSM *)
    -------------------------------------------------------------------------
CODE
  Segment part 23. NOT NEEDED.Intra module refs:   TabGUI::TabGUI()
    -------------------------------------------------------------------------
CODE
  Segment part 24. NOT NEEDED.Intra module refs:   TabGUI::GHook(void *, int)
    -------------------------------------------------------------------------
CODE
  Segment part 25. NOT NEEDED.Intra module refs:   TabGUI::CreateTabGUI(DLG_CSM *)
                                                   TabGUI::ReCreateTabGUI(DLG_CSM *)
    -------------------------------------------------------------------------
CODE
  Segment part 26. NOT NEEDED.Intra module refs:   TabGUI::CreateTabGUI(DLG_CSM *)
                                                   TabGUI::ReCreateTabGUI(DLG_CSM *)
    -------------------------------------------------------------------------
CODE
  Segment part 27. NOT NEEDED.Intra module refs:   TabGUI::CreateTabGUI(DLG_CSM *)
                                                   TabGUI::ReCreateTabGUI(DLG_CSM *)
    -------------------------------------------------------------------------
CODE
  Segment part 28. NOT NEEDED.Intra module refs:   TabGUI::CreateTabGUI(DLG_CSM *)
                                                   TabGUI::ReCreateTabGUI(DLG_CSM *)
    -------------------------------------------------------------------------
CODE
  Segment part 29. NOT NEEDED.Intra module refs:   TabGUI::GHook(void *, int)
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_ID
  Relative segment, address: CODE_AREA 000003D0 - 0000041F (0x50 bytes), align: 2
  Segment part 3.             Intra module refs:   TABICONS
    -------------------------------------------------------------------------
DATA_ID
  Segment part 30. TENTATIVE. Used definition from EditGUI
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?*?DATA_ID              
    -------------------------------------------------------------------------
INITTAB
  Segment part 31. TENTATIVE. Used definition from EditGUI
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?init?tab?DATA_I        

    *************************************************************************

  FILE NAME : D:\pasha\elf\SieELF\MySMSYS\Mss3\Release_ELKA_EN\Obj\Template.r79
  PROGRAM MODULE, NAME : Template

  SEGMENTS IN THE MODULE
  ======================
DATA_C
  Relative segment, address: CODE_AREA 0000BA6C - 0000BA87 (0x1c bytes), align: 2
  Segment part 2.             Intra module refs:   TplMenu::ReadTpl()
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000BA88 - 0000BA9B (0x14 bytes), align: 2
  Segment part 3.             Intra module refs:   TplMenu::CreateTplMenu(void *)
    -------------------------------------------------------------------------
CODE
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00009DD8 - 00009DF3 (0x1c bytes), align: 2
  Segment part 5.             Intra module refs:   TplMenu::GHook(void *, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TplMenu::delete ~TplMenu(TplMenu *)
                                   00009DD8 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00009DF4 - 00009E0F (0x1c bytes), align: 2
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TplMenu::new TplMenu()
                                   00009DF4        EditGUI::EdOpUserItem(USR_MENU_ITEM *) (EditGUI)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 8. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00009E10 - 00009E77 (0x68 bytes), align: 2
  Segment part 9.             Intra module refs:   TplMenu::new TplMenu()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TplMenu::TplMenu()      00009E10 
    -------------------------------------------------------------------------
CODE
  Segment part 10. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 11. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TplMenu::~TplMenu()     
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 12. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00009E78 - 00009E97 (0x20 bytes), align: 2
  Segment part 13.            Intra module refs:   TplMenu::ReadTpl()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TplMenu::AllocTPList()
                                   00009E78 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 14. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00009E98 - 00009EBB (0x24 bytes), align: 2
  Segment part 15.            Intra module refs:   TplMenu::ReadTpl()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TplMenu::AddToTPList(_TPLIST *)
                                   00009E98 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 16. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00009EBC - 00009F07 (0x4c bytes), align: 2
  Segment part 17.            Intra module refs:   TplMenu::delete ~TplMenu(TplMenu *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TplMenu::FreeTPList()   00009EBC 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 18. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00009F08 - 0000A157 (0x250 bytes), align: 2
  Segment part 19.            Intra module refs:   TplMenu::CreateTplMenu(void *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TplMenu::ReadTpl()      00009F08 
               stack 1 = 00000000 ( 000024F4 )
    -------------------------------------------------------------------------
CODE
  Segment part 20. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000A158 - 0000A17B (0x24 bytes), align: 2
  Segment part 21.            Intra module refs:   TplMenu::ItemProc(void *, int, void *)
                                                   TplMenu::OnKey(void *, GUI_MSG *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TplMenu::GetTpl(int)    0000A158 
    -------------------------------------------------------------------------
CODE
  Segment part 22. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000A17C - 0000A2B7 (0x13c bytes), align: 2
  Segment part 23.            Intra module refs:   TplMenu::TplMenu()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TplMenu::OnKey(void *, GUI_MSG *)
                                   0000A17C 
               stack 1 = 00000000 ( 00001058 )
    -------------------------------------------------------------------------
CODE
  Segment part 24. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000A2B8 - 0000A32F (0x78 bytes), align: 2
  Segment part 25.            Intra module refs:   TplMenu::TplMenu()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TplMenu::GHook(void *, int)
                                   0000A2B8 
               stack 1 = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
CODE
  Segment part 26. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000A330 - 0000A3AB (0x7c bytes), align: 2
  Segment part 27.            Intra module refs:   TplMenu::TplMenu()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TplMenu::ItemProc(void *, int, void *)
                                   0000A330 
               stack 1 = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000A3AC - 0000A3AF (0x4 bytes), align: 2
  Segment part 28.            Intra module refs:   TplMenu::GHook(void *, int)
                                                   TplMenu::ItemProc(void *, int, void *)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000A3B0 - 0000A3B3 (0x4 bytes), align: 2
  Segment part 29.            Intra module refs:   TplMenu::GHook(void *, int)
                                                   TplMenu::ItemProc(void *, int, void *)
    -------------------------------------------------------------------------
CODE
  Segment part 30. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000A3B4 - 0000A3E7 (0x34 bytes), align: 2
  Segment part 31.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TplMenu::CreateTplMenu(void *)
                                   0000A3B4        EditGUI::EdOpUserItem(USR_MENU_ITEM *) (EditGUI)
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 32. NOT NEEDED.Intra module refs:   TplMenu::FreeTPList()
                                                   TplMenu::delete ~TplMenu(TplMenu *)
    -------------------------------------------------------------------------
CODE
  Segment part 33. NOT NEEDED.Intra module refs:   TplMenu::AllocTPList()
                                                   TplMenu::new TplMenu()
    -------------------------------------------------------------------------
CODE
  Segment part 34. NOT NEEDED.Intra module refs:   TplMenu::ReadTpl()
    -------------------------------------------------------------------------
CODE
  Segment part 35. NOT NEEDED.Intra module refs:   TplMenu::ReadTpl()
    -------------------------------------------------------------------------
CODE
  Segment part 36. NOT NEEDED.Intra module refs:   TplMenu::ReadTpl()
    -------------------------------------------------------------------------
CODE
  Segment part 37. NOT NEEDED.Intra module refs:   TplMenu::ReadTpl()
    -------------------------------------------------------------------------
CODE
  Segment part 38. NOT NEEDED.Intra module refs:   TplMenu::ReadTpl()
    -------------------------------------------------------------------------
CODE
  Segment part 39. NOT NEEDED.Intra module refs:   TplMenu::ReadTpl()
    -------------------------------------------------------------------------
CODE
  Segment part 40. NOT NEEDED.Intra module refs:   TplMenu::ReadTpl()
    -------------------------------------------------------------------------
CODE
  Segment part 41. NOT NEEDED.Intra module refs:   TplMenu::ReadTpl()
    -------------------------------------------------------------------------
CODE
  Segment part 42. NOT NEEDED.Intra module refs:   TplMenu::ReadTpl()
    -------------------------------------------------------------------------
CODE
  Segment part 43. NOT NEEDED.Intra module refs:   TplMenu::CreateTplMenu(void *)
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    *************************************************************************

  FILE NAME : D:\pasha\elf\SieELF\MySMSYS\Mss3\Release_ELKA_EN\Obj\Vibra.r79
  PROGRAM MODULE, NAME : Vibra

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000A3E8 - 0000A403 (0x1c bytes), align: 2
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Vibra::new Vibra()      0000A3E8        DaemonCSM::DaemonCSM() (DaemonCSM)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000A404 - 0000A41F (0x1c bytes), align: 2
  Segment part 5.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Vibra::delete ~Vibra(Vibra *)
                                   0000A404        DaemonCSM::~DaemonCSM() (DaemonCSM)
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000A420 - 0000A44F (0x30 bytes), align: 2
  Segment part 7.             Intra module refs:   Vibra::new Vibra()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Vibra::Vibra()          0000A420 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 8. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 9. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Vibra::~Vibra()         
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 10. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000A450 - 0000A4C7 (0x78 bytes), align: 2
  Segment part 11.            Intra module refs:   Vibra::ReInitThythm()
                                                   Vibra::Vibra()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Vibra::InitThythm()     0000A450 
               stack 1 = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
CODE
  Segment part 12. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000A4C8 - 0000A503 (0x3c bytes), align: 2
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Vibra::ReInitThythm()   0000A4C8        DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *) (DaemonCSM)
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 14. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000A504 - 0000A54B (0x48 bytes), align: 2
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Vibra::VibraStart()     0000A504        DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *) (DaemonCSM)
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 16. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000A54C - 0000A5FB (0xb0 bytes), align: 2
  Segment part 17.            Intra module refs:   Vibra::VibraStart()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Vibra::VibraNext()      0000A54C        DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *) (DaemonCSM)
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000A5FC - 0000A5FF (0x4 bytes), align: 2
  Segment part 18.            Intra module refs:   Vibra::VibraNext()
                                                   Vibra::VibraStart()
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000A600 - 0000A603 (0x4 bytes), align: 2
  Segment part 19.            Intra module refs:   Vibra::VibraNext()
                                                   Vibra::VibraStart()
    -------------------------------------------------------------------------
CODE
  Segment part 20. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000A604 - 0000A61F (0x1c bytes), align: 2
  Segment part 21.            Intra module refs:   Vibra::delete ~Vibra(Vibra *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Vibra::VibraStop()      0000A604        DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *) (DaemonCSM)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 22. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000A620 - 0000A62B (0xc bytes), align: 2
  Segment part 23.            Intra module refs:   Vibra::VibraNext()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Vibra::VibraNextTmrProc()
                                   0000A620 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 24. NOT NEEDED.Intra module refs:   Vibra::new Vibra()
    -------------------------------------------------------------------------
CODE
  Segment part 25. NOT NEEDED.Intra module refs:   Vibra::delete ~Vibra(Vibra *)
    -------------------------------------------------------------------------
CODE
  Segment part 26. NOT NEEDED.Intra module refs:   Vibra::InitThythm()
    -------------------------------------------------------------------------
CODE
  Segment part 27. NOT NEEDED.Intra module refs:   Vibra::VibraNextTmrProc()
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    *************************************************************************

  FILE NAME : D:\pasha\elf\SieELF\MySMSYS\Mss3\Release_ELKA_EN\Obj\_cpp2.r79
  PROGRAM MODULE, NAME : _cpp2

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000A62C - 0000A637 (0xc bytes), align: 2
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           operator new(unsigned int)
                                   0000A62C        AdrList::ConstructList() (AdrList)
                                                   AdrList::new AdrList() (AdrList)
                                                   DaemonCSM::new DaemonCSM() (DaemonCSM)
                                                   DialogCSM::new DialogCSM() (DialogCSM)
                                                   EditGUI::new EditGUI() (EditGUI)
                                                   EditOptionMenu::new EditOptionMenu() (EditGUI)
                                                   IconPack::new IconPack() (IconPack)
                                                   LangPack::new LangPack() (LangPack)
                                                   MainMenu::new MainMenu() (MainMenu)
                                                   NAbCSM::new NAbCSM() (NativeAddressbook)
                                                   NumList::AllocNL() (NumList)
                                                   NumList::AllocNL(char const *) (NumList)
                                                   NumList::new NumList() (NumList)
                                                   OthMenu::new OthMenu() (OthersMenu)
                                                   PopupNewIn::new PopupNewIn() (PopupGUI)
                                                   SendList::AllocSL() (SendList)
                                                   SendList::new SendList() (SendList)
                                                   SmsData::AllocSDL() (SmsData)
                                                   SmsData::CopyOneSDL(_SDLIST *) (SmsData)
                                                   SmsData::new SmsData() (SmsData)
                                                   SmsListMenu::new SmsListMenu() (SmsListMenu)
                                                   SmsOptionMenu::new SmsOptionMenu() (SmsListMenu)
                                                   TViewGUI::new TViewGUI() (TViewGUI)
                                                   TabGUI::TabGUI() (TabGUI)
                                                   TplMenu::AllocTPList() (Template)
                                                   TplMenu::new TplMenu() (Template)
                                                   Vibra::new Vibra() (Vibra)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000A638 - 0000A643 (0xc bytes), align: 2
  Segment part 5.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           operator new[](unsigned int)
                                   0000A638        AdrList::ConstructList() (AdrList)
                                                   IconPack::LoadIconPack() (IconPack)
                                                   LangPack::LoadLangFile() (LangPack)
                                                   NAbCSM::CreateNAbCSM(void *, int, char *, int) (NativeAddressbook)
                                                   NAbCSM::OnMessage(CSM_RAM *, GBS_MSG *) (NativeAddressbook)
                                                   SmsData::CopyOneSDL(_SDLIST *) (SmsData)
                                                   SmsData::ExportAllToText() (SmsData)
                                                   SmsData::ReadDat() (SmsData)
                                                   SmsData::ReadMss(char *, _SDLIST *) (SmsData)
                                                   main (main)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000A644 - 0000A64F (0xc bytes), align: 2
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           operator delete(void *)
                                   0000A644        AdrList::FreeCLIST() (AdrList)
                                                   AdrList::delete ~AdrList(AdrList *) (AdrList)
                                                   DaemonCSM::delete ~DaemonCSM(DaemonCSM *) (DaemonCSM)
                                                   DialogCSM::OnClose(CSM_RAM *) (DialogCSM)
                                                   DialogCSM::OnCreate(CSM_RAM *) (DialogCSM)
                                                   EditGUI::delete ~EditGUI(EditGUI *) (EditGUI)
                                                   EditOptionMenu::GHook(void *, int) (EditGUI)
                                                   IconPack::FreeIconPack() (IconPack)
                                                   IconPack::delete ~IconPack(IconPack *) (IconPack)
                                                   LangPack::delete ~LangPack(LangPack *) (LangPack)
                                                   LangPack::~LangPack() (LangPack)
                                                   MainMenu::GHook(void *, int) (MainMenu)
                                                   NAbCSM::CreateNAbCSM(void *, int, char *, int) (NativeAddressbook)
                                                   NAbCSM::OnClose(CSM_RAM *) (NativeAddressbook)
                                                   NAbCSM::OnMessage(CSM_RAM *, GBS_MSG *) (NativeAddressbook)
                                                   NumList::DeleteNL(_NLST *) (NumList)
                                                   NumList::FreeList() (NumList)
                                                   NumList::delete ~NumList(NumList *) (NumList)
                                                   OthMenu::GHook(void *, int) (OthersMenu)
                                                   PopupNewIn::CreatePopupNewIn(DLG_CSM *, _SDLIST *) (PopupGUI)
                                                   PopupNewIn::GHook(void *, int) (PopupGUI)
                                                   SendList::DeleteSL(_SNDLST *) (SendList)
                                                   SendList::FreeList() (SendList)
                                                   SendList::delete ~SendList(SendList *) (SendList)
                                                   SmsData::DeleteSDL(_SDLIST *) (SmsData)
                                                   SmsData::ExportAllToText() (SmsData)
                                                   SmsData::FreeAllSDL() (SmsData)
                                                   SmsData::FreeOneSDL(_SDLIST *) (SmsData)
                                                   SmsData::ReadDat() (SmsData)
                                                   SmsData::delete ~SmsData(SmsData *) (SmsData)
                                                   SmsData::~SmsData() (SmsData)
                                                   SmsListMenu::GHook(void *, int) (SmsListMenu)
                                                   SmsOptionMenu::GHook(void *, int) (SmsListMenu)
                                                   TViewGUI::CreateTViewGUI(WSHDR *, WSHDR *) (TViewGUI)
                                                   TViewGUI::GHook(void *, int) (TViewGUI)
                                                   TabGUI::GHook(void *, int) (TabGUI)
                                                   TplMenu::FreeTPList() (Template)
                                                   TplMenu::delete ~TplMenu(TplMenu *) (Template)
                                                   Vibra::delete ~Vibra(Vibra *) (Vibra)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    *************************************************************************

  FILE NAME : D:\pasha\elf\SieELF\MySMSYS\Mss3\Release_ELKA_EN\Obj\conf_loader.r79
  PROGRAM MODULE, NAME : conf_loader

  SEGMENTS IN THE MODULE
  ======================
DATA_I
  Relative segment, address: DATA_AREA 00000420 - 00000423 (0x4 bytes), align: 2
  Segment part 4.             Intra module refs:   LoadConfigData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           successed_config_filename
                                   00000420        DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *) (DaemonCSM)
                                                   OthMenu::OpenCfgFile() (OthersMenu)
    -------------------------------------------------------------------------
CODE
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000A650 - 0000A753 (0x104 bytes), align: 2
  Segment part 7.             Intra module refs:   InitConfig
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LoadConfigData          0000A650 
               stack 1 = 00000000 ( 00000024 )
    -------------------------------------------------------------------------
CODE
  Segment part 8. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000A754 - 0000A77B (0x28 bytes), align: 2
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           InitConfig              0000A754        InitSetting() (main)
                                                   main (main)
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_ID
  Relative segment, address: CODE_AREA 00000420 - 00000423 (0x4 bytes), align: 2
  Segment part 5.             Intra module refs:   successed_config_filename
    -------------------------------------------------------------------------
DATA_ID
  Segment part 10. TENTATIVE. Used definition from EditGUI
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?*?DATA_ID              
    -------------------------------------------------------------------------
INITTAB
  Segment part 11. TENTATIVE. Used definition from EditGUI
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?init?tab?DATA_I        
    -------------------------------------------------------------------------
CONFIG_C
  Segment part 12. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000BBF0 - 0000BBF0 (0x1 bytes), align: 0
  Segment part 2.             Intra module refs:   Segment part 5
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000BA9C - 0000BACB (0x30 bytes), align: 2
  Segment part 3.             Intra module refs:   InitConfig

    *************************************************************************

  FILE NAME : D:\pasha\elf\SieELF\MySMSYS\Mss3\Release_ELKA_EN\Obj\config_data.r79
  PROGRAM MODULE, NAME : config_data

  SEGMENTS IN THE MODULE
  ======================
CONFIG_C
  Relative segment, address: CODE_AREA 0000FD20 - 0000FD4B (0x2c bytes), align: 2
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr0                 0000FD20        LoadConfigData (conf_loader)
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 0000FD4C - 0000FDCB (0x80 bytes), align: 2
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CFG_MAIN_FOLDER         0000FD4C        InitDatPath() (main)
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 0000FDCC - 0000FDF7 (0x2c bytes), align: 2
  Segment part 4. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr1                 0000FDCC 
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 0000FDF8 - 0000FE77 (0x80 bytes), align: 2
  Segment part 5. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CFG_SYSTEM_FOLDER       0000FDF8        AdrList::ConstructList() (AdrList)
                                                   InitDatPath() (main)
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 0000FE78 - 0000FEA3 (0x2c bytes), align: 2
  Segment part 6. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr2                 0000FE78 
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 0000FEA4 - 0000FEA7 (0x4 bytes), align: 2
  Segment part 7. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CFG_ENA_AUTO_SAF        0000FEA4        EditGUI::DoSmsWorkBG(void *, int) (EditGUI)
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 0000FEA8 - 0000FED3 (0x2c bytes), align: 2
  Segment part 8. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr4                 0000FEA8 
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 0000FED4 - 0000FED7 (0x4 bytes), align: 2
  Segment part 9. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CFG_ENA_SAVE_SENT       0000FED4        SendList::SendEnd(int) (SendList)
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 0000FED8 - 0000FF03 (0x2c bytes), align: 2
  Segment part 10. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdra                 0000FED8 
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 0000FF04 - 0000FF07 (0x4 bytes), align: 2
  Segment part 11. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CFG_ENA_SNED_ON_BG      0000FF04        SendList::Send(SendList *) (SendList)
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 0000FF08 - 0000FF33 (0x2c bytes), align: 2
  Segment part 12. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr7                 0000FF08 
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 0000FF34 - 0000FF37 (0x4 bytes), align: 2
  Segment part 13. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CFG_TEXT_FONT           0000FF34        Segment part 59 (EditGUI)
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 0000FF38 - 00010017 (0xe0 bytes), align: 2
  Segment part 14. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfgcbox1                0000FF38 
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 00010018 - 00010043 (0x2c bytes), align: 2
  Segment part 15. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdrb                 00010018 
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 00010044 - 000100C3 (0x80 bytes), align: 2
  Segment part 16. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CFG_DEFAULT_SENT_NUM    00010044        EditGUI::CreateEditGUI(DLG_CSM *, _SDLIST *, int, int, int) (EditGUI)
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 000100C4 - 000100EF (0x2c bytes), align: 2
  Segment part 17. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdrc                 000100C4 
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 000100F0 - 000100F3 (0x4 bytes), align: 2
  Segment part 18. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CFG_DEFAULT_TAB         000100F0        TabGUI::CreateTabGUI(DLG_CSM *) (TabGUI)
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 000100F4 - 00010193 (0xa0 bytes), align: 2
  Segment part 19. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfgcboxc                000100F4 
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 00010194 - 000101BF (0x2c bytes), align: 2
  Segment part 20. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr1_0               00010194 
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 000101C0 - 000101EB (0x2c bytes), align: 2
  Segment part 21. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr1_1               000101C0 
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 000101EC - 000101EF (0x4 bytes), align: 2
  Segment part 22. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CFG_ENA_NOTIFY          000101EC        DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *) (DaemonCSM)
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 000101F0 - 0001021B (0x2c bytes), align: 2
  Segment part 23. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr1_2               000101F0 
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 0001021C - 0001021F (0x4 bytes), align: 2
  Segment part 24. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CFG_ENA_VIBRA           0001021C        PopupNewIn::GHook(void *, int) (PopupGUI)
                                                   Segment part 19 (Vibra)
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 00010220 - 0001024B (0x2c bytes), align: 2
  Segment part 25. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr1_5               00010220 
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 0001024C - 000102CB (0x80 bytes), align: 2
  Segment part 26. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CFG_VIBRA_RHYTHM        0001024C        Vibra::InitThythm() (Vibra)
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 000102CC - 000102F7 (0x2c bytes), align: 2
  Segment part 27. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr1_3               000102CC 
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 000102F8 - 000102FB (0x4 bytes), align: 2
  Segment part 28. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CFG_NOTIFY_TIME         000102F8        DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *) (DaemonCSM)
                                                   Segment part 18 (Vibra)
                                                   Segment part 24 (PopupGUI)
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 000102FC - 00010327 (0x2c bytes), align: 2
  Segment part 29. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr1_7               000102FC 
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 00010328 - 0001032B (0x4 bytes), align: 2
  Segment part 30. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CFG_ENA_SOUND           00010328        PopupNewIn::GHook(void *, int) (PopupGUI)
                                                   Segment part 43 (DaemonCSM)
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 0001032C - 00010357 (0x2c bytes), align: 2
  Segment part 31. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr1_8               0001032C 
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 00010358 - 000103D7 (0x80 bytes), align: 2
  Segment part 32. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CFG_SOUND_PATH          00010358        PopupNewIn::GHook(void *, int) (PopupGUI)
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 000103D8 - 00010403 (0x2c bytes), align: 2
  Segment part 33. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr1_9               000103D8 
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 00010404 - 0001042F (0x2c bytes), align: 2
  Segment part 34. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr3_0               00010404 
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 00010430 - 0001045B (0x2c bytes), align: 2
  Segment part 35. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr3_1               00010430 
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 0001045C - 0001045F (0x4 bytes), align: 2
  Segment part 36. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CFG_ENA_IB              0001045C        DaemonCSM::AddIconBar(short *) (DaemonCSM)
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 00010460 - 0001048B (0x2c bytes), align: 2
  Segment part 37. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr3_2               00010460 
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 0001048C - 0001048F (0x4 bytes), align: 2
  Segment part 38. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CFG_ICON_IB             0001048C        DaemonCSM::AddIconBar(short *) (DaemonCSM)
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 00010490 - 000104BB (0x2c bytes), align: 2
  Segment part 39. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr3_9               00010490 
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 000104BC - 000104E7 (0x2c bytes), align: 2
  Segment part 40. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr11_0              000104BC 
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 000104E8 - 00010513 (0x2c bytes), align: 2
  Segment part 41. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr11_1              000104E8 
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 00010514 - 00010517 (0x4 bytes), align: 2
  Segment part 42. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CFG_FILTEROP            00010514        Segment part 131 (SmsData)
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 00010518 - 000105D7 (0xc0 bytes), align: 2
  Segment part 43. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfgcbox11_1             00010518 
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 000105D8 - 00010603 (0x2c bytes), align: 2
  Segment part 44. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr11_2              000105D8 
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 00010604 - 00010623 (0x20 bytes), align: 2
  Segment part 45. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CFG_STRORNUM            00010604        Segment part 132 (SmsData)
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 00010624 - 0001064F (0x2c bytes), align: 2
  Segment part 46. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr11_9              00010624 
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    *************************************************************************

  FILE NAME : D:\pasha\elf\SieELF\MySMSYS\Mss3\Release_ELKA_EN\Obj\func.r79
  PROGRAM MODULE, NAME : func

  SEGMENTS IN THE MODULE
  ======================
ELFBEGIN
  Relative segment, address: CODE_AREA 00000000, align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ELF_BEGIN               00000000        ElfKiller() (main)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000A77C - 0000A783 (0x8 bytes), align: 2
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           kill_data               0000A77C        ElfKiller() (main)
           seqkill                 0000A780 

    *************************************************************************

  FILE NAME : D:\pasha\elf\SieELF\MySMSYS\Mss3\Release_ELKA_EN\Obj\main.r79
  PROGRAM MODULE, NAME : main

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000A784 - 0000A82B (0xa8 bytes), align: 2
  Segment part 5.             Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IsAlreadyRuning()       0000A784 
               stack 1 = 00000000 ( 00000040 )
    -------------------------------------------------------------------------
CODE
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000A82C - 0000A847 (0x1c bytes), align: 2
  Segment part 7.             Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ElfKiller()             0000A82C        DaemonCSM::OnClose(CSM_RAM *) (DaemonCSM)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 8. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000A848 - 0000A8EF (0xa8 bytes), align: 2
  Segment part 9.             Intra module refs:   InitSetting()
                                                   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           InitDatPath()           0000A848 
               stack 1 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
CODE
  Segment part 10. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000A8F0 - 0000A8FF (0x10 bytes), align: 2
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           InitSetting()           0000A8F0        DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *) (DaemonCSM)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 12. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000A900 - 0000A9A3 (0xa4 bytes), align: 2
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           main                    0000A900        Absolute parts (?ABS_ENTRY_MOD)
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 14. NOT NEEDED.Intra module refs:   IsAlreadyRuning()
    -------------------------------------------------------------------------
CODE
  Segment part 15. NOT NEEDED.Intra module refs:   ElfKiller()
    -------------------------------------------------------------------------
CODE
  Segment part 16. NOT NEEDED.Intra module refs:   InitSetting()
                                                   main
    -------------------------------------------------------------------------
CODE
  Segment part 17. NOT NEEDED.Intra module refs:   main
    -------------------------------------------------------------------------
CODE
  Segment part 18. NOT NEEDED.Intra module refs:   main
    -------------------------------------------------------------------------
CODE
  Segment part 19. NOT NEEDED.Intra module refs:   main
    -------------------------------------------------------------------------
CODE
  Segment part 20. NOT NEEDED.Intra module refs:   main
    -------------------------------------------------------------------------
CODE
  Segment part 21. NOT NEEDED.Intra module refs:   main
    -------------------------------------------------------------------------
CODE
  Segment part 22. NOT NEEDED.Intra module refs:   main
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000BACC - 0000BAD3 (0x8 bytes), align: 2
  Segment part 2.             Intra module refs:   IsAlreadyRuning()
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000BAD4 - 0000BADF (0xc bytes), align: 2
  Segment part 3.             Intra module refs:   InitDatPath()

    *************************************************************************

  FILE NAME : D:\pasha\elf\SieELF\MySMSYS\Mss3\Release_ELKA_EN\Obj\string_works.r79
  PROGRAM MODULE, NAME : string_works

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000A9A4 - 0000AA2F (0x8c bytes), align: 2
  Segment part 4.             Intra module refs:   w_charcmp_nocase(unsigned short *, unsigned short *, int)
                                                   wstrcmp_nocase(WSHDR *, WSHDR *)
                                                   wstrncmp_nocase(WSHDR *, WSHDR *, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           char16to8(int)          0000A9A4 
    -------------------------------------------------------------------------
CODE
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000BAE0 - 0000BBDF (0x100 bytes), align: 2
  Segment part 2.             Intra module refs:   char8to16(int)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000AA30 - 0000AA4F (0x20 bytes), align: 2
  Segment part 6.             Intra module refs:   ascii_2ws(WSHDR *, char const *, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           char8to16(int)          0000AA30 
    -------------------------------------------------------------------------
CODE
  Segment part 7. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 8. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ws_2ascii(WSHDR *, char *, int)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000AA50 - 0000AA87 (0x38 bytes), align: 2
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ascii_2ws(WSHDR *, char const *, int)
                                   0000AA50        TplMenu::ReadTpl() (Template)
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 11. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000AA88 - 0000AB0B (0x84 bytes), align: 2
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           wstrcmp_nocase(WSHDR *, WSHDR *)
                                   0000AA88        EditGUI::GHook(void *, int) (EditGUI)
               stack 1 = 00000000 ( 00000020 )
    -------------------------------------------------------------------------
CODE
  Segment part 13. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000AB0C - 0000AB97 (0x8c bytes), align: 2
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           wstrncmp_nocase(WSHDR *, WSHDR *, int)
                                   0000AB0C        IsAlreadyRuning() (main)
               stack 1 = 00000000 ( 00000024 )
    -------------------------------------------------------------------------
CODE
  Segment part 15. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 16. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           wsInsert(WSHDR *, WSHDR *, int, int)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 17. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000AB98 - 0000AC2B (0x94 bytes), align: 2
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           num_2ws(WSHDR *, char const *, int)
                                   0000AB98        EditGUI::CreateEditGUI(DLG_CSM *, _SDLIST *, int, int, int) (EditGUI)
                                                   EditGUI::CreateEditGUI(DLG_CSM *, char const *) (EditGUI)
                                                   NAbCSM::OnCreate(CSM_RAM *) (NativeAddressbook)
                                                   NumList::AddToList(char const *) (NumList)
                                                   NumList::AllocNL(char const *) (NumList)
                                                   NumList::UpdateNL(_NLST *, char const *) (NumList)
               stack 1 = 00000000 ( 0000001C )
    -------------------------------------------------------------------------
CODE
  Segment part 19. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000AC2C - 0000AC93 (0x68 bytes), align: 2
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ws_2num(WSHDR *, char *, int)
                                   0000AC2C        EditGUI::GHook(void *, int) (EditGUI)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 21. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000AC94 - 0000ACD3 (0x40 bytes), align: 2
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           str2int(char const *)   0000AC94        Vibra::InitThythm() (Vibra)
    -------------------------------------------------------------------------
CODE
  Segment part 23. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000ACD4 - 0000AD17 (0x44 bytes), align: 2
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IsWsSmall(WSHDR *)      0000ACD4        EditGUI::GHook(void *, int) (EditGUI)
    -------------------------------------------------------------------------
CODE
  Segment part 25. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000AD18 - 0000AD63 (0x4c bytes), align: 2
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IsNum(WSHDR *)          0000AD18        EditGUI::GHook(void *, int) (EditGUI)
    -------------------------------------------------------------------------
CODE
  Segment part 27. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000AD64 - 0000ADDF (0x7c bytes), align: 2
  Segment part 28.            Intra module refs:   wstrstr(WSHDR *, WSHDR *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           w_charcmp_nocase(unsigned short *, unsigned short *, int)
                                   0000AD64 
               stack 1 = 00000000 ( 0000001C )
    -------------------------------------------------------------------------
CODE
  Segment part 29. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000ADE0 - 0000AE5F (0x80 bytes), align: 2
  Segment part 30.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           wstrstr(WSHDR *, WSHDR *)
                                   0000ADE0        SmsData::FilterFindSDL(WSHDR *, int) (SmsData)
                                                   SmsData::FilterGetCount(WSHDR *) (SmsData)
               stack 1 = 00000000 ( 0000001C )
    -------------------------------------------------------------------------
CODE
  Segment part 31. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000AE60 - 0000AF2B (0xcc bytes), align: 2
  Segment part 32.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NumberMatch(char const *, char const *)
                                   0000AE60        AdrList::FindCList(char const *) (AdrList)
                                                   AdrList::FindName(WSHDR *, char const *) (AdrList)
                                                   NumList::IsNumExist(char const *) (NumList)
                                                   SmsData::FilterFindNext(_SDLIST *, char const *) (SmsData)
                                                   SmsData::FilterFindPrev(_SDLIST *, char const *) (SmsData)
                                                   SmsData::FilterFindSDL(char const *, int) (SmsData)
                                                   SmsData::FilterGetCount(char const *) (SmsData)
               stack 1 = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
CODE
  Segment part 33. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000AF2C - 0000AF77 (0x4c bytes), align: 2
  Segment part 34.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           StrClearChr(char *, int)
                                   0000AF2C        SmsData::GetFilePathSDL(_SDLIST *, char *, char *, int) (SmsData)
                                                   SmsData::MoveToArchive(_SDLIST *) (SmsData)
    -------------------------------------------------------------------------
CODE
  Segment part 35. NOT NEEDED.
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.




                ****************************************
                *                                      *
                *            MODULE SUMMARY            *
                *                                      *
                ****************************************

Module               CODE   DATA
------               ----   ----
                    (Rel)  (Rel)
AFile                 196
AdrList             1 880
  + shared             12
CSMswaper             456
CreateMenu            528
DaemonCSM           3 176
DialogCSM           1 612
EditGUI             6 400     88
  + shared             12
File                  380
GlobalVariable        304     24
IconPack            1 365    120
LangPack            2 438    316
MainMenu            1 064     96
MyIpcMessage          124     12
NativeAddressbook   1 192
NumList             1 428
OthersMenu         17 800     28
PopupGUI            1 084     80
SendList            1 004
SiemensPDU          1 996
SmsData            10 888      4
SmsListMenu         2 612    112
StrConst              389
TViewGUI              484     96
TabGUI              1 084     80
Template            1 600
Vibra                 580
_cpp2                  36
conf_loader           353      4
config_data         2 352
func                    8
main                  564
string_works        1 748
N/A (alignment)
------             ------  -----
Total:             67 149  1 060


                ****************************************
                *                                      *
                *              CALL GRAPH              *
                *                                      *
                ****************************************

  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  AdrList::ConstructListCHK(AdrList *)
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  AdrList::ConstructListFRC(AdrList *)
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  CSMSwaper::do_CSMtoTop(CSMQ *, void *)
      | Stack used (prev) :  00000000
      | + function block  :  00000018
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000018


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  DaemonCSM::OnCreate(CSM_RAM *)
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *)
      | Stack used (prev) :  00000000
      | + function block  :  00000034
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000034


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  DaemonCSM::OnClose(CSM_RAM *)
      | Stack used (prev) :  00000000
      | + function block  :  00000008
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000008


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  DaemonCSM::DoNewProc()
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  DaemonCSM::UpdateNProc()
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  DaemonCSM::AddIconBar(short *)
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  DaemonCSM::PlayNotifySound(DaemonCSM *, char *)
      | Stack used (prev) :  00000000
      | + function block  :  000002F4
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  000002F4


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  DialogCSM::OnMessage(CSM_RAM *, GBS_MSG *)
      | Stack used (prev) :  00000000
      | + function block  :  00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000000


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  DialogCSM::OnCreate(CSM_RAM *)
      | Stack used (prev) :  00000000
      | + function block  :  00000028
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000028


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  DialogCSM::OnClose(CSM_RAM *)
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  EditGUI::EdOpUserItem(USR_MENU_ITEM *)
      | Stack used (prev) :  00000000
      | + function block  :  00000040
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000040


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  EditGUI::OnKey(void *, GUI_MSG *)
      | Stack used (prev) :  00000000
      | + function block  :  00000044
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000044


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  EditGUI::DoSmsWorkBG(void *, int)
      | Stack used (prev) :  00000000
      | + function block  :  00000018
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000018


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  EditGUI::GHook(void *, int)
      | Stack used (prev) :  00000000
      | + function block  :  00000054
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000054


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  EditGUI::Locret()
      | Stack used (prev) :  00000000
      | + function block  :  00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000000


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  EditOptionMenu::OnKey(void *, GUI_MSG *)
      | Stack used (prev) :  00000000
      | + function block  :  00000018
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000018


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  EditOptionMenu::GHook(void *, int)
      | Stack used (prev) :  00000000
      | + function block  :  00000014
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000014


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  EditOptionMenu::ItemProc(void *, int, void *)
      | Stack used (prev) :  00000000
      | + function block  :  00000014
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000014


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  MainMenu::OnKey(void *, GUI_MSG *)
      | Stack used (prev) :  00000000
      | + function block  :  00000018
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000018


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  MainMenu::GHook(void *, int)
      | Stack used (prev) :  00000000
      | + function block  :  00000008
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000008


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  MainMenu::ItemProc(void *, int, void *)
      | Stack used (prev) :  00000000
      | + function block  :  00000024
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000024


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  NAbCSM::OnMessage(CSM_RAM *, GBS_MSG *)
      | Stack used (prev) :  00000000
      | + function block  :  00000024
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000024


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  NAbCSM::OnCreate(CSM_RAM *)
      | Stack used (prev) :  00000000
      | + function block  :  00000084
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000084


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  NAbCSM::OnClose(CSM_RAM *)
      | Stack used (prev) :  00000000
      | + function block  :  0000000C
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000000C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  OpenArchive()
      | Stack used (prev) :  00000000
      | + function block  :  00000208
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000208


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  OthMenu::OnKey(void *, GUI_MSG *)
      | Stack used (prev) :  00000000
      | + function block  :  00000010
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000010


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  OthMenu::GHook(void *, int)
      | Stack used (prev) :  00000000
      | + function block  :  00000014
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000014


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  OthMenu::ItemProc(void *, int, void *)
      | Stack used (prev) :  00000000
      | + function block  :  00000014
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000014


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  PopupNewIn::OnKey(void *, GUI_MSG *)
      | Stack used (prev) :  00000000
      | + function block  :  00000014
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000014


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  PopupNewIn::GHook(void *, int)
      | Stack used (prev) :  00000000
      | + function block  :  0000000C
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000000C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  MyShowMsg::GHook(void *, int)
      | Stack used (prev) :  00000000
      | + function block  :  00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000000


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  MyShowMsg::OnKey(void *, GUI_MSG *)
      | Stack used (prev) :  00000000
      | + function block  :  00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000000


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  SendList::Send(SendList *)
      | Stack used (prev) :  00000000
      | + function block  :  0000000C
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000000C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  SmsData::ReadAllMessageCHK(SmsData *)
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  SmsData::CheckAllCHK(SmsData *)
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  SmsData::MoveAllToArchiveBG(SmsData *)
      | Stack used (prev) :  00000000
      | + function block  :  00000044
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000044


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  SmsData::ExportAllToTextBG(SmsData *)
      | Stack used (prev) :  00000000
      | + function block  :  00000044
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000044


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  SmsData::DeleteAllMssBG(SmsData *)
      | Stack used (prev) :  00000000
      | + function block  :  00000044
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000044


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  SmsListMenu::OnKey(void *, GUI_MSG *)
      | Stack used (prev) :  00000000
      | + function block  :  00000020
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000020


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  SmsListMenu::GHook(void *, int)
      | Stack used (prev) :  00000000
      | + function block  :  0000001C
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000001C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  SmsListMenu::ItemProc(void *, int, void *)
      | Stack used (prev) :  00000000
      | + function block  :  00000020
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000020


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  SmsOptionMenu::OnKey(void *, GUI_MSG *)
      | Stack used (prev) :  00000000
      | + function block  :  00000018
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000018


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  SmsOptionMenu::GHook(void *, int)
      | Stack used (prev) :  00000000
      | + function block  :  00000014
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000014


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  SmsOptionMenu::ItemProc(void *, int, void *)
      | Stack used (prev) :  00000000
      | + function block  :  00000014
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000014


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  TViewGUI::OnKey(void *, GUI_MSG *)
      | Stack used (prev) :  00000000
      | + function block  :  00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000000


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  TViewGUI::GHook(void *, int)
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  TViewGUI::locret()
      | Stack used (prev) :  00000000
      | + function block  :  00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000000


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  TabGUI::OnKey(void *, GUI_MSG *)
      | Stack used (prev) :  00000000
      | + function block  :  00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000000


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  TabGUI::GHook(void *, int)
      | Stack used (prev) :  00000000
      | + function block  :  00000010
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000010


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  TabGUI::Locret()
      | Stack used (prev) :  00000000
      | + function block  :  00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000000


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  TplMenu::OnKey(void *, GUI_MSG *)
      | Stack used (prev) :  00000000
      | + function block  :  00001058
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00001058


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  TplMenu::GHook(void *, int)
      | Stack used (prev) :  00000000
      | + function block  :  00000014
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000014


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  TplMenu::ItemProc(void *, int, void *)
      | Stack used (prev) :  00000000
      | + function block  :  00000014
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000014


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  Vibra::VibraNextTmrProc()
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  ElfKiller()
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00001058
  01  AFile::AFile()
      | Stack used (prev) :  00001058
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001058


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00001058
  01  AFile::~AFile()
      | Stack used (prev) :  00001058
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00001064


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00001064
  01  AFile::FClose()
      | Stack used (prev) :  00001064
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00001070


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00001070
  01  AFile::FOpen(char const *, unsigned int, unsigned int)
      | Stack used (prev) :  00001070
      | + function block  :  00000014
  <-Sub-tree of type: Function tree
    | Stack used          :  00001084


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00001084
  01  AFile::FRead(void *, int)
      | Stack used (prev) :  00001084
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00001088


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00001088
  01  AdrList::new AdrList()
      | Stack used (prev) :  00001088
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  0000108C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000108C
  01  AdrList::delete ~AdrList(AdrList *)
      | Stack used (prev) :  0000108C
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00001094


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00001094
  01  AdrList::AdrList()
      | Stack used (prev) :  00001094
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  0000109C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000109C
  01  AdrList::FreeCLIST()
      | Stack used (prev) :  0000109C
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  000010A8


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000010A8
  01  AdrList::ConstructList()
      | Stack used (prev) :  000010A8
      | + function block  :  00000464
  <-Sub-tree of type: Function tree
    | Stack used          :  0000150C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000150C
  01  AdrList::ConstructListCFGUPD()
      | Stack used (prev) :  0000150C
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00001510


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00001510
  01  AdrList::FindName(WSHDR *, char const *)
      | Stack used (prev) :  00001510
      | + function block  :  00000014
  <-Sub-tree of type: Function tree
    | Stack used          :  00001524


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00001524
  01  AdrList::FindCList(char const *)
      | Stack used (prev) :  00001524
      | + function block  :  00000010
  <-Sub-tree of type: Function tree
    | Stack used          :  00001534


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00001534
  01  CSMSwaper::LLaddToEnd(LLQ *, void *)
      | Stack used (prev) :  00001534
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001534


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00001534
  01  CSMSwaper::CSMtoTop(int, int)
      | Stack used (prev) :  00001534
      | + function block  :  00000010
  <-Sub-tree of type: Function tree
    | Stack used          :  00001544


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00001544
  01  CSMSwaper::InitUnderIdleCSM()
      | Stack used (prev) :  00001544
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00001548


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00001548
  01  patch_option_header(HEADER_DESC const *)
      | Stack used (prev) :  00001548
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00001554


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00001554
  01  CreateMenu(ML_MENU_DESC const *, HEADER_DESC const *, int, int, void *)
      | Stack used (prev) :  00001554
      | + function block  :  00000020
  <-Sub-tree of type: Function tree
    | Stack used          :  00001574


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00001574
  01  CreateMenu(MENU_DESC const *, HEADER_DESC const *, int, int, void *)
      | Stack used (prev) :  00001574
      | + function block  :  00000020
  <-Sub-tree of type: Function tree
    | Stack used          :  00001594


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00001594
  01  CreateMenu30or2(MENU_DESC const *, HEADER_DESC const *, int, int, void *)
      | Stack used (prev) :  00001594
      | + function block  :  00000020
  <-Sub-tree of type: Function tree
    | Stack used          :  000015B4


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000015B4
  01  DaemonCSM::delete ~DaemonCSM(DaemonCSM *)
      | Stack used (prev) :  000015B4
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  000015BC


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000015BC
  01  DaemonCSM::new DaemonCSM()
      | Stack used (prev) :  000015BC
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  000015C0


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000015C0
  01  DaemonCSM::DaemonCSM()
      | Stack used (prev) :  000015C0
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  000015CC


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000015CC
  01  DaemonCSM::~DaemonCSM()
      | Stack used (prev) :  000015CC
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  000015D4


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000015D4
  01  DaemonCSM::CreateDaemonCSM()
      | Stack used (prev) :  000015D4
      | + function block  :  0000003C
  <-Sub-tree of type: Function tree
    | Stack used          :  00001610


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00001610
  01  DaemonCSM::AddDlgCsmID(int)
      | Stack used (prev) :  00001610
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001610


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00001610
  01  DaemonCSM::CloseAllDlgCSM()
      | Stack used (prev) :  00001610
      | + function block  :  00000010
  <-Sub-tree of type: Function tree
    | Stack used          :  00001620


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00001620
  01  DaemonCSM::DelDlgCsmID(int)
      | Stack used (prev) :  00001620
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001620


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00001620
  01  DaemonCSM::IsOnTopMyCSM()
      | Stack used (prev) :  00001620
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00001628


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00001628
  01  DaemonCSM::GetTopCSM()
      | Stack used (prev) :  00001628
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  0000162C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000162C
  01  DialogCSM::new DialogCSM()
      | Stack used (prev) :  0000162C
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00001630


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00001630
  01  DialogCSM::DialogCSM()
      | Stack used (prev) :  00001630
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001630


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00001630
  01  DialogCSM::CreateDialogCSM(int, void *)
      | Stack used (prev) :  00001630
      | + function block  :  00000040
  <-Sub-tree of type: Function tree
    | Stack used          :  00001670


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00001670
  01  EditOptionMenu::new EditOptionMenu()
      | Stack used (prev) :  00001670
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00001674


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00001674
  01  EditGUI::new EditGUI()
      | Stack used (prev) :  00001674
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00001678


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00001678
  01  EditGUI::delete ~EditGUI(EditGUI *)
      | Stack used (prev) :  00001678
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00001680


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00001680
  01  EditGUI::EditGUI()
      | Stack used (prev) :  00001680
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00001688


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00001688
  01  EditGUI::~EditGUI()
      | Stack used (prev) :  00001688
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00001690


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00001690
  01  EditGUI::CreateEditGUI(DLG_CSM *, _SDLIST *, int, int, int)
      | Stack used (prev) :  00001690
      | + function block  :  00001078
  <-Sub-tree of type: Function tree
    | Stack used          :  00002708


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00002708
  01  EditOptionMenu::EditOptionMenu()
      | Stack used (prev) :  00002708
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00002708


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00002708
  01  EditOptionMenu::CreateEditOptionMenu(DLG_CSM *, _SDLIST *, int, int, int)
      | Stack used (prev) :  00002708
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00002714


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00002714
  01  EditGUI::CreateEditGUI(DLG_CSM *, char const *)
      | Stack used (prev) :  00002714
      | + function block  :  0000107C
  <-Sub-tree of type: Function tree
    | Stack used          :  00003790


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003790
  01  EditGUI::InsertText(void *, WSHDR *)
      | Stack used (prev) :  00003790
      | + function block  :  0000004C
  <-Sub-tree of type: Function tree
    | Stack used          :  000037DC


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000037DC
  01  EditGUI::EditSendSMS(WSHDR *)
      | Stack used (prev) :  000037DC
      | + function block  :  00000010
  <-Sub-tree of type: Function tree
    | Stack used          :  000037EC


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000037EC
  01  EditGUI::SaveDraft(WSHDR *)
      | Stack used (prev) :  000037EC
      | + function block  :  00000018
  <-Sub-tree of type: Function tree
    | Stack used          :  00003804


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003804
  01  EditGUI::InsertNumber(void *, char *)
      | Stack used (prev) :  00003804
      | + function block  :  0000005C
  <-Sub-tree of type: Function tree
    | Stack used          :  00003860


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003860
  01  EditGUI::SetNumber(void *, char *)
      | Stack used (prev) :  00003860
      | + function block  :  0000001C
  <-Sub-tree of type: Function tree
    | Stack used          :  0000387C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000387C
  01  CFile::FOpen(char const *, unsigned int, unsigned int)
      | Stack used (prev) :  0000387C
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00003880


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003880
  01  CFile::FRead(int, void *, int)
      | Stack used (prev) :  00003880
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00003884


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003884
  01  CFile::FWrite(int, void const *, int)
      | Stack used (prev) :  00003884
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00003888


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003888
  01  CFile::FClose(int)
      | Stack used (prev) :  00003888
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  0000388C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000388C
  01  CFile::LSeek(int, unsigned int, unsigned int)
      | Stack used (prev) :  0000388C
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00003894


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003894
  01  CFile::MkDir(char const *)
      | Stack used (prev) :  00003894
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00003898


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003898
  01  CFile::IsDir(char const *)
      | Stack used (prev) :  00003898
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  0000389C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000389C
  01  CFile::FindFirstFile(DIR_ENTRY *, char *)
      | Stack used (prev) :  0000389C
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  000038A0


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000038A0
  01  CFile::FindNextFile(DIR_ENTRY *)
      | Stack used (prev) :  000038A0
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  000038A4


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000038A4
  01  CFile::FindClose(DIR_ENTRY *)
      | Stack used (prev) :  000038A4
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  000038A8


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000038A8
  01  CFile::IsFileExist(char const *)
      | Stack used (prev) :  000038A8
      | + function block  :  0000002C
  <-Sub-tree of type: Function tree
    | Stack used          :  000038D4


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000038D4
  01  CFile::FDelete(char const *)
      | Stack used (prev) :  000038D4
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  000038D8


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000038D8
  01  CFile::FMove(char const *, char const *)
      | Stack used (prev) :  000038D8
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  000038DC


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000038DC
  01  IconPack::new IconPack()
      | Stack used (prev) :  000038DC
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  000038E4


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000038E4
  01  IconPack::delete ~IconPack(IconPack *)
      | Stack used (prev) :  000038E4
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  000038EC


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000038EC
  01  IconPack::LoadIconPack()
      | Stack used (prev) :  000038EC
      | + function block  :  00000114
  <-Sub-tree of type: Function tree
    | Stack used          :  00003A00


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003A00
  01  IconPack::FreeIconPack()
      | Stack used (prev) :  00003A00
      | + function block  :  00000010
  <-Sub-tree of type: Function tree
    | Stack used          :  00003A10


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003A10
  01  IconPack::LoadDefaultIP()
      | Stack used (prev) :  00003A10
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00003A14


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003A14
  01  IconPack::InitIconPack()
      | Stack used (prev) :  00003A14
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00003A14


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003A14
  01  LangPack::new LangPack()
      | Stack used (prev) :  00003A14
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00003A18


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003A18
  01  LangPack::delete ~LangPack(LangPack *)
      | Stack used (prev) :  00003A18
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00003A20


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003A20
  01  LangPack::LoadLangFile()
      | Stack used (prev) :  00003A20
      | + function block  :  00000094
  <-Sub-tree of type: Function tree
    | Stack used          :  00003AB4


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003AB4
  01  LangPack::LoadLgpDefault()
      | Stack used (prev) :  00003AB4
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00003AB8


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003AB8
  01  LangPack::GotoLangLineEnd(char *)
      | Stack used (prev) :  00003AB8
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00003AB8


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003AB8
  01  LangPack::GotoLangLineStart(char *)
      | Stack used (prev) :  00003AB8
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00003AB8


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003AB8
  01  LangPack::InitLgp()
      | Stack used (prev) :  00003AB8
      | + function block  :  0000004C
  <-Sub-tree of type: Function tree
    | Stack used          :  00003B04


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003B04
  01  LangPack::LangPack()
      | Stack used (prev) :  00003B04
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00003B0C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003B0C
  01  LangPack::~LangPack()
      | Stack used (prev) :  00003B0C
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00003B14


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003B14
  01  MainMenu::new MainMenu()
      | Stack used (prev) :  00003B14
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00003B18


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003B18
  01  MainMenu::MainMenu()
      | Stack used (prev) :  00003B18
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00003B18


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003B18
  01  MainMenu::GetMainMenuGUI(DLG_CSM *, int)
      | Stack used (prev) :  00003B18
      | + function block  :  00000018
  <-Sub-tree of type: Function tree
    | Stack used          :  00003B30


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003B30
  01  SendMyIpc(int)
      | Stack used (prev) :  00003B30
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00003B34


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003B34
  01  SendMyIpc(int, void *)
      | Stack used (prev) :  00003B34
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00003B40


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003B40
  01  NAbCSM::new NAbCSM()
      | Stack used (prev) :  00003B40
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00003B44


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003B44
  01  NAbCSM::NAbCSM()
      | Stack used (prev) :  00003B44
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00003B44


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003B44
  01  NAbCSM::CreateNAbCSM(void *, int, char *, int)
      | Stack used (prev) :  00003B44
      | + function block  :  0000005C
  <-Sub-tree of type: Function tree
    | Stack used          :  00003BA0


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003BA0
  01  NumList::new NumList()
      | Stack used (prev) :  00003BA0
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00003BA4


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003BA4
  01  NumList::delete ~NumList(NumList *)
      | Stack used (prev) :  00003BA4
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00003BAC


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003BAC
  01  NumList::AllocNL()
      | Stack used (prev) :  00003BAC
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00003BB4


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003BB4
  01  NumList::FreeList()
      | Stack used (prev) :  00003BB4
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00003BC0


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003BC0
  01  NumList::AddToList_end(_NLST *)
      | Stack used (prev) :  00003BC0
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00003BCC


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003BCC
  01  NumList::FindNL(int)
      | Stack used (prev) :  00003BCC
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00003BCC


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003BCC
  01  NumList::AddToList(char const *)
      | Stack used (prev) :  00003BCC
      | + function block  :  00000014
  <-Sub-tree of type: Function tree
    | Stack used          :  00003BE0


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003BE0
  01  NumList::DeleteNL(_NLST *)
      | Stack used (prev) :  00003BE0
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00003BEC


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003BEC
  01  NumList::DeleteNL(int)
      | Stack used (prev) :  00003BEC
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00003BF4


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003BF4
  01  NumList::AddNumsToList(char const *)
      | Stack used (prev) :  00003BF4
      | + function block  :  00000094
  <-Sub-tree of type: Function tree
    | Stack used          :  00003C88


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003C88
  01  NumList::UpdateNL(_NLST *, char const *)
      | Stack used (prev) :  00003C88
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00003C94


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003C94
  01  NumList::InsertNL_front(_NLST *, char const *)
      | Stack used (prev) :  00003C94
      | + function block  :  00000010
  <-Sub-tree of type: Function tree
    | Stack used          :  00003CA4


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003CA4
  01  NumList::AllocNL(char const *)
      | Stack used (prev) :  00003CA4
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00003CB0


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003CB0
  01  NumList::InsertNL_behind(_NLST *, char const *)
      | Stack used (prev) :  00003CB0
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00003CBC


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003CBC
  01  NumList::ClearNL(_NLST *)
      | Stack used (prev) :  00003CBC
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00003CC0


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003CC0
  01  NumList::IsNumExist(char const *)
      | Stack used (prev) :  00003CC0
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00003CCC


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003CCC
  01  OthMenu::new OthMenu()
      | Stack used (prev) :  00003CCC
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00003CD0


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003CD0
  01  OthMenu::OthMenu()
      | Stack used (prev) :  00003CD0
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00003CD0


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003CD0
  01  OthMenu::CreateOthMenu(DLG_CSM *)
      | Stack used (prev) :  00003CD0
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00003CD8


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003CD8
  01  OthMenu::OpenCfgFile()
      | Stack used (prev) :  00003CD8
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00003CE0


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003CE0
  01  OthMenu::ShowAbout()
      | Stack used (prev) :  00003CE0
      | + function block  :  00000088
  <-Sub-tree of type: Function tree
    | Stack used          :  00003D68


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003D68
  01  OthMenu::ShowHelp()
      | Stack used (prev) :  00003D68
      | + function block  :  00000098
  <-Sub-tree of type: Function tree
    | Stack used          :  00003E00


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003E00
  01  PopupNewIn::new PopupNewIn()
      | Stack used (prev) :  00003E00
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00003E04


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003E04
  01  PopupNewIn::PopupNewIn()
      | Stack used (prev) :  00003E04
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00003E04


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003E04
  01  PopupNewIn::CreatePopupNewIn(DLG_CSM *, _SDLIST *)
      | Stack used (prev) :  00003E04
      | + function block  :  00000014
  <-Sub-tree of type: Function tree
    | Stack used          :  00003E18


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003E18
  01  MyShowMsg::MyShow(int, char *)
      | Stack used (prev) :  00003E18
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00003E1C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003E1C
  01  SendList::new SendList()
      | Stack used (prev) :  00003E1C
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00003E20


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003E20
  01  SendList::delete ~SendList(SendList *)
      | Stack used (prev) :  00003E20
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00003E28


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003E28
  01  SendList::AllocSL()
      | Stack used (prev) :  00003E28
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00003E30


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003E30
  01  SendList::FreeList()
      | Stack used (prev) :  00003E30
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00003E3C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003E3C
  01  SendList::AddToList(_SNDLST *)
      | Stack used (prev) :  00003E3C
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00003E48


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003E48
  01  SendList::AddToList(char const *, WSHDR *)
      | Stack used (prev) :  00003E48
      | + function block  :  00000018
  <-Sub-tree of type: Function tree
    | Stack used          :  00003E60


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003E60
  01  SendList::DeleteSL(_SNDLST *)
      | Stack used (prev) :  00003E60
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00003E6C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003E6C
  01  SendList::FindSL(int)
      | Stack used (prev) :  00003E6C
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00003E6C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003E6C
  01  SendList::IsSending()
      | Stack used (prev) :  00003E6C
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00003E6C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003E6C
  01  SendList::SendStart()
      | Stack used (prev) :  00003E6C
      | + function block  :  00000010
  <-Sub-tree of type: Function tree
    | Stack used          :  00003E7C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003E7C
  01  SendList::SendEnd(int)
      | Stack used (prev) :  00003E7C
      | + function block  :  00000014
  <-Sub-tree of type: Function tree
    | Stack used          :  00003E90


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003E90
  01  SendList::CatList(_SNDLST *)
      | Stack used (prev) :  00003E90
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00003E9C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003E9C
  01  SiememPDU::Add2WS(char *, WSHDR *, int)
      | Stack used (prev) :  00003E9C
      | + function block  :  00000014
  <-Sub-tree of type: Function tree
    | Stack used          :  00003EB0


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003EB0
  01  SiememPDU::Hex2Num(char *, char *, int)
      | Stack used (prev) :  00003EB0
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00003EB4


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003EB4
  01  SiememPDU::Bit7Decode(WSHDR *, char *, int, int)
      | Stack used (prev) :  00003EB4
      | + function block  :  0000001C
  <-Sub-tree of type: Function tree
    | Stack used          :  00003ED0


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003ED0
  01  SiememPDU::PduDecodeTxt(SDLIST *, char *)
      | Stack used (prev) :  00003ED0
      | + function block  :  00000280
  <-Sub-tree of type: Function tree
    | Stack used          :  00004150


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00004150
  01  SiememPDU::PduDecodeAll(SDLIST *, char *)
      | Stack used (prev) :  00004150
      | + function block  :  00000294
  <-Sub-tree of type: Function tree
    | Stack used          :  000043E4


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000043E4
  01  SiememPDU::DoSmsReport(SDLIST *, char *, WSHDR *)
      | Stack used (prev) :  000043E4
      | + function block  :  00000034
  <-Sub-tree of type: Function tree
    | Stack used          :  00004418


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00004418
  01  SmsData::new SmsData()
      | Stack used (prev) :  00004418
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  0000441C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000441C
  01  SmsData::delete ~SmsData(SmsData *)
      | Stack used (prev) :  0000441C
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00004424


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00004424
  01  SmsData::AllocSDL()
      | Stack used (prev) :  00004424
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  0000442C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000442C
  01  SmsData::DeleteSDL(_SDLIST *)
      | Stack used (prev) :  0000442C
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00004438


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00004438
  01  SmsData::FreeAllSDL()
      | Stack used (prev) :  00004438
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00004444


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00004444
  01  SmsData::AddByTimeSDL(_SDLIST *)
      | Stack used (prev) :  00004444
      | + function block  :  00000010
  <-Sub-tree of type: Function tree
    | Stack used          :  00004454


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00004454
  01  SmsData::FreeOneSDL(_SDLIST *)
      | Stack used (prev) :  00004454
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  0000445C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000445C
  01  SmsData::CopyOneSDL(_SDLIST *)
      | Stack used (prev) :  0000445C
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00004468


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00004468
  01  SmsData::FindSDL(int)
      | Stack used (prev) :  00004468
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00004468


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00004468
  01  SmsData::FindOpmsgSDL(int)
      | Stack used (prev) :  00004468
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00004474


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00004474
  01  SmsData::FindSDL(char *)
      | Stack used (prev) :  00004474
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00004480


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00004480
  01  SmsData::GetSMSCount(int)
      | Stack used (prev) :  00004480
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00004484


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00004484
  01  SmsData::GetSMSCount(int, int)
      | Stack used (prev) :  00004484
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00004484


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00004484
  01  SmsData::FindSDL(int, int)
      | Stack used (prev) :  00004484
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00004488


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00004488
  01  SmsData::ReadDat()
      | Stack used (prev) :  00004488
      | + function block  :  00000010
  <-Sub-tree of type: Function tree
    | Stack used          :  00004498


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00004498
  01  SmsData::DeMsgDataList(SMS_DATA_LIST *)
      | Stack used (prev) :  00004498
      | + function block  :  0000002C
  <-Sub-tree of type: Function tree
    | Stack used          :  000044C4


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000044C4
  01  SmsData::ReadAllDatMsg()
      | Stack used (prev) :  000044C4
      | + function block  :  00000018
  <-Sub-tree of type: Function tree
    | Stack used          :  000044DC


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000044DC
  01  SmsData::FindMsgDataL(int)
      | Stack used (prev) :  000044DC
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  000044E4


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000044E4
  01  SmsData::ReadMessageOne(int)
      | Stack used (prev) :  000044E4
      | + function block  :  00000010
  <-Sub-tree of type: Function tree
    | Stack used          :  000044F4


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000044F4
  01  SmsData::ReadMss(char *, _SDLIST *)
      | Stack used (prev) :  000044F4
      | + function block  :  000000BC
  <-Sub-tree of type: Function tree
    | Stack used          :  000045B0


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000045B0
  01  SmsData::ReadFolder(int)
      | Stack used (prev) :  000045B0
      | + function block  :  00000458
  <-Sub-tree of type: Function tree
    | Stack used          :  00004A08


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00004A08
  01  SmsData::SaveMss(WSHDR *, char const *, _SDLIST *, int, int)
      | Stack used (prev) :  00004A08
      | + function block  :  00000194
  <-Sub-tree of type: Function tree
    | Stack used          :  00004B9C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00004B9C
  01  SmsData::GetMssPath(char *, char *, TTime *, TDate *)
      | Stack used (prev) :  00004B9C
      | + function block  :  000000A8
  <-Sub-tree of type: Function tree
    | Stack used          :  00004C44


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00004C44
  01  SmsData::DeleteMessage(_SDLIST *)
      | Stack used (prev) :  00004C44
      | + function block  :  00000010
  <-Sub-tree of type: Function tree
    | Stack used          :  00004C54


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00004C54
  01  SmsData::ReadAllMessage()
      | Stack used (prev) :  00004C54
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00004C60


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00004C60
  01  SmsData::SmsData()
      | Stack used (prev) :  00004C60
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00004C68


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00004C68
  01  SmsData::~SmsData()
      | Stack used (prev) :  00004C68
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00004C70


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00004C70
  01  SmsData::IsNewSMS(int)
      | Stack used (prev) :  00004C70
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00004C78


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00004C78
  01  SmsData::CheckSMS(int)
      | Stack used (prev) :  00004C78
      | + function block  :  00000010
  <-Sub-tree of type: Function tree
    | Stack used          :  00004C88


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00004C88
  01  SmsData::CheckDat()
      | Stack used (prev) :  00004C88
      | + function block  :  00000024
  <-Sub-tree of type: Function tree
    | Stack used          :  00004CAC


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00004CAC
  01  SmsData::CheckFolder(int)
      | Stack used (prev) :  00004CAC
      | + function block  :  00000458
  <-Sub-tree of type: Function tree
    | Stack used          :  00005104


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00005104
  01  SmsData::IsDatExist(int)
      | Stack used (prev) :  00005104
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  0000510C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000510C
  01  SmsData::CheckSDList()
      | Stack used (prev) :  0000510C
      | + function block  :  00000018
  <-Sub-tree of type: Function tree
    | Stack used          :  00005124


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00005124
  01  SmsData::CheckAll()
      | Stack used (prev) :  00005124
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00005130


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00005130
  01  SmsData::NewToReadSMS(_SDLIST *)
      | Stack used (prev) :  00005130
      | + function block  :  0000009C
  <-Sub-tree of type: Function tree
    | Stack used          :  000051CC


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000051CC
  01  SmsData::IsExistSDL(_SDLIST *)
      | Stack used (prev) :  000051CC
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000051CC


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000051CC
  01  SmsData::FindNextSDL(_SDLIST *, int)
      | Stack used (prev) :  000051CC
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  000051D0


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000051D0
  01  SmsData::FindPrevSDL(_SDLIST *, int)
      | Stack used (prev) :  000051D0
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  000051D4


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000051D4
  01  SmsData::FilterFindSDL(int)
      | Stack used (prev) :  000051D4
      | + function block  :  000000A8
  <-Sub-tree of type: Function tree
    | Stack used          :  0000527C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000527C
  01  SmsData::FilterFindSDL(int, int)
      | Stack used (prev) :  0000527C
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000527C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000527C
  01  SmsData::FilterFindSDL(char const *, int)
      | Stack used (prev) :  0000527C
      | + function block  :  00000014
  <-Sub-tree of type: Function tree
    | Stack used          :  00005290


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00005290
  01  SmsData::FilterFindSDL(WSHDR *, int)
      | Stack used (prev) :  00005290
      | + function block  :  00000014
  <-Sub-tree of type: Function tree
    | Stack used          :  000052A4


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000052A4
  01  SmsData::FilterGetCount()
      | Stack used (prev) :  000052A4
      | + function block  :  000000A4
  <-Sub-tree of type: Function tree
    | Stack used          :  00005348


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00005348
  01  SmsData::FilterGetCount(char const *)
      | Stack used (prev) :  00005348
      | + function block  :  00000010
  <-Sub-tree of type: Function tree
    | Stack used          :  00005358


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00005358
  01  SmsData::FilterGetCount(WSHDR *)
      | Stack used (prev) :  00005358
      | + function block  :  00000010
  <-Sub-tree of type: Function tree
    | Stack used          :  00005368


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00005368
  01  SmsData::FilterFindNext(_SDLIST *)
      | Stack used (prev) :  00005368
      | + function block  :  000000A4
  <-Sub-tree of type: Function tree
    | Stack used          :  0000540C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000540C
  01  SmsData::FilterFindNext(_SDLIST *, char const *)
      | Stack used (prev) :  0000540C
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00005418


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00005418
  01  SmsData::FilterFindPrev(_SDLIST *)
      | Stack used (prev) :  00005418
      | + function block  :  000000A4
  <-Sub-tree of type: Function tree
    | Stack used          :  000054BC


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000054BC
  01  SmsData::FilterFindPrev(_SDLIST *, char const *)
      | Stack used (prev) :  000054BC
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  000054C8


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000054C8
  01  SmsData::MoveToArchive(_SDLIST *)
      | Stack used (prev) :  000054C8
      | + function block  :  00000120
  <-Sub-tree of type: Function tree
    | Stack used          :  000055E8


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000055E8
  01  SmsData::GetFilePathSDL(_SDLIST *, char *, char *, int)
      | Stack used (prev) :  000055E8
      | + function block  :  000001A4
  <-Sub-tree of type: Function tree
    | Stack used          :  0000578C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000578C
  01  SmsData::MoveAllToArchive()
      | Stack used (prev) :  0000578C
      | + function block  :  00000010
  <-Sub-tree of type: Function tree
    | Stack used          :  0000579C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000579C
  01  SmsData::FindLastNew()
      | Stack used (prev) :  0000579C
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000579C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000579C
  01  SmsData::ExportAllToText()
      | Stack used (prev) :  0000579C
      | + function block  :  00000288
  <-Sub-tree of type: Function tree
    | Stack used          :  00005A24


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00005A24
  01  SmsData::DeleteAllMss()
      | Stack used (prev) :  00005A24
      | + function block  :  00000014
  <-Sub-tree of type: Function tree
    | Stack used          :  00005A38


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00005A38
  01  SmsOptionMenu::new SmsOptionMenu()
      | Stack used (prev) :  00005A38
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00005A3C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00005A3C
  01  SmsListMenu::new SmsListMenu()
      | Stack used (prev) :  00005A3C
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00005A40


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00005A40
  01  SmsListMenu::SmsListMenu()
      | Stack used (prev) :  00005A40
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00005A40


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00005A40
  01  SmsListMenu::CreateSmsListMenu(int, int, DLG_CSM *)
      | Stack used (prev) :  00005A40
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00005A4C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00005A4C
  01  SmsListMenu::GetSmsListMenuGUI(int, int, DLG_CSM *, int)
      | Stack used (prev) :  00005A4C
      | + function block  :  0000001C
  <-Sub-tree of type: Function tree
    | Stack used          :  00005A68


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00005A68
  01  SmsOptionMenu::SmsOptionMenu()
      | Stack used (prev) :  00005A68
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00005A68


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00005A68
  01  SmsOptionMenu::CreateSmsOptionMenu(DLG_CSM *, int, int, _SDLIST *)
      | Stack used (prev) :  00005A68
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00005A70


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00005A70
  01  SmsListMenu::ReCreateMe(void *)
      | Stack used (prev) :  00005A70
      | + function block  :  0000001C
  <-Sub-tree of type: Function tree
    | Stack used          :  00005A8C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00005A8C
  01  TViewGUI::new TViewGUI()
      | Stack used (prev) :  00005A8C
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00005A90


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00005A90
  01  TViewGUI::CreateTViewGUI(WSHDR *, WSHDR *)
      | Stack used (prev) :  00005A90
      | + function block  :  00000020
  <-Sub-tree of type: Function tree
    | Stack used          :  00005AB0


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00005AB0
  01  TabGUI::TabGUI()
      | Stack used (prev) :  00005AB0
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00005AB8


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00005AB8
  01  TabGUI::~TabGUI()
      | Stack used (prev) :  00005AB8
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00005AB8


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00005AB8
  01  TabGUI::CreateTabGUI(DLG_CSM *)
      | Stack used (prev) :  00005AB8
      | + function block  :  0000001C
  <-Sub-tree of type: Function tree
    | Stack used          :  00005AD4


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00005AD4
  01  TabGUI::ReCreateTabGUI(DLG_CSM *)
      | Stack used (prev) :  00005AD4
      | + function block  :  00000028
  <-Sub-tree of type: Function tree
    | Stack used          :  00005AFC


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00005AFC
  01  TplMenu::delete ~TplMenu(TplMenu *)
      | Stack used (prev) :  00005AFC
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00005B04


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00005B04
  01  TplMenu::new TplMenu()
      | Stack used (prev) :  00005B04
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00005B08


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00005B08
  01  TplMenu::TplMenu()
      | Stack used (prev) :  00005B08
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00005B08


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00005B08
  01  TplMenu::AllocTPList()
      | Stack used (prev) :  00005B08
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00005B10


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00005B10
  01  TplMenu::AddToTPList(_TPLIST *)
      | Stack used (prev) :  00005B10
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00005B1C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00005B1C
  01  TplMenu::FreeTPList()
      | Stack used (prev) :  00005B1C
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00005B28


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00005B28
  01  TplMenu::ReadTpl()
      | Stack used (prev) :  00005B28
      | + function block  :  000024F4
  <-Sub-tree of type: Function tree
    | Stack used          :  0000801C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000801C
  01  TplMenu::GetTpl(int)
      | Stack used (prev) :  0000801C
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000801C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000801C
  01  TplMenu::CreateTplMenu(void *)
      | Stack used (prev) :  0000801C
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00008028


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00008028
  01  Vibra::new Vibra()
      | Stack used (prev) :  00008028
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  0000802C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000802C
  01  Vibra::delete ~Vibra(Vibra *)
      | Stack used (prev) :  0000802C
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00008034


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00008034
  01  Vibra::Vibra()
      | Stack used (prev) :  00008034
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  0000803C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000803C
  01  Vibra::InitThythm()
      | Stack used (prev) :  0000803C
      | + function block  :  00000014
  <-Sub-tree of type: Function tree
    | Stack used          :  00008050


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00008050
  01  Vibra::ReInitThythm()
      | Stack used (prev) :  00008050
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00008058


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00008058
  01  Vibra::VibraStart()
      | Stack used (prev) :  00008058
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00008060


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00008060
  01  Vibra::VibraNext()
      | Stack used (prev) :  00008060
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00008068


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00008068
  01  Vibra::VibraStop()
      | Stack used (prev) :  00008068
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  0000806C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000806C
  01  operator new(unsigned int)
      | Stack used (prev) :  0000806C
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00008070


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00008070
  01  operator new[](unsigned int)
      | Stack used (prev) :  00008070
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00008074


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00008074
  01  operator delete(void *)
      | Stack used (prev) :  00008074
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00008078


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00008078
  01  LoadConfigData
      | Stack used (prev) :  00008078
      | + function block  :  00000024
  <-Sub-tree of type: Function tree
    | Stack used          :  0000809C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000809C
  01  InitConfig
      | Stack used (prev) :  0000809C
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  000080A4


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000080A4
  01  IsAlreadyRuning()
      | Stack used (prev) :  000080A4
      | + function block  :  00000040
  <-Sub-tree of type: Function tree
    | Stack used          :  000080E4


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000080E4
  01  InitDatPath()
      | Stack used (prev) :  000080E4
      | + function block  :  00000010
  <-Sub-tree of type: Function tree
    | Stack used          :  000080F4


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000080F4
  01  InitSetting()
      | Stack used (prev) :  000080F4
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  000080F8


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000080F8
  01  main
      | Stack used (prev) :  000080F8
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00008104


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00008104
  01  char16to8(int)
      | Stack used (prev) :  00008104
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00008104


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00008104
  01  char8to16(int)
      | Stack used (prev) :  00008104
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00008104


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00008104
  01  ascii_2ws(WSHDR *, char const *, int)
      | Stack used (prev) :  00008104
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00008110


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00008110
  01  wstrcmp_nocase(WSHDR *, WSHDR *)
      | Stack used (prev) :  00008110
      | + function block  :  00000020
  <-Sub-tree of type: Function tree
    | Stack used          :  00008130


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00008130
  01  wstrncmp_nocase(WSHDR *, WSHDR *, int)
      | Stack used (prev) :  00008130
      | + function block  :  00000024
  <-Sub-tree of type: Function tree
    | Stack used          :  00008154


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00008154
  01  num_2ws(WSHDR *, char const *, int)
      | Stack used (prev) :  00008154
      | + function block  :  0000001C
  <-Sub-tree of type: Function tree
    | Stack used          :  00008170


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00008170
  01  ws_2num(WSHDR *, char *, int)
      | Stack used (prev) :  00008170
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00008174


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00008174
  01  str2int(char const *)
      | Stack used (prev) :  00008174
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00008174


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00008174
  01  IsWsSmall(WSHDR *)
      | Stack used (prev) :  00008174
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00008174


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00008174
  01  IsNum(WSHDR *)
      | Stack used (prev) :  00008174
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00008174


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00008174
  01  w_charcmp_nocase(unsigned short *, unsigned short *, int)
      | Stack used (prev) :  00008174
      | + function block  :  0000001C
  <-Sub-tree of type: Function tree
    | Stack used          :  00008190


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00008190
  01  wstrstr(WSHDR *, WSHDR *)
      | Stack used (prev) :  00008190
      | + function block  :  0000001C
  <-Sub-tree of type: Function tree
    | Stack used          :  000081AC


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000081AC
  01  NumberMatch(char const *, char const *)
      | Stack used (prev) :  000081AC
      | + function block  :  00000014
  <-Sub-tree of type: Function tree
    | Stack used          :  000081C0


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000081C0
  01  StrClearChr(char *, int)
      | Stack used (prev) :  000081C0
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000081C0




                ****************************************
                *                                      *
                *      SEGMENTS IN ADDRESS ORDER       *
                *                                      *
                ****************************************


SEGMENT              SPACE    START ADDRESS   END ADDRESS     SIZE  TYPE  ALIGN
=======              =====    =============   ===========     ====  ====  =====
ELFBEGIN             CODE_AREA           00000000                     rel    0
DATA_ID              CODE_AREA      00000000 - 00000423         424   rel    2
START                CODE_AREA           00000424                     dse    0
CODE                 CODE_AREA      00000424 - 0000AF77        AB54   rel    2
DATA_C               CODE_AREA      0000AF78 - 0000BBF0         C79   rel    2
INITTAB              CODE_AREA      0000BBF4 - 0000BC0B          18   rel    2
DATA_Z               CODE_AREA      0000BC0C - 0000FD1F        4114   rel    2
MYSEG                CODE_AREA           0000FD20                     dse    0
DATA_N               CODE_AREA           0000FD20                     dse    0
CONFIG_C             CODE_AREA      0000FD20 - 0001064F         930   rel    2
DATA_I               DATA_AREA      00000000 - 00000423         424   rel    2

                ****************************************
                *                                      *
                *        END OF CROSS REFERENCE        *
                *                                      *
                ****************************************

 67 149 bytes of CODE memory
  1 060 bytes of DATA memory

Errors: none
Warnings: none

