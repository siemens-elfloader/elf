##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION    05/Mar/2009  13:11:57 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  D:\pasha\elf\SieELF\MySMSYS\Mss3\config_data.c       #
#    Command line    =  D:\pasha\elf\SieELF\MySMSYS\Mss3\config_data.c -D    #
#                       NEWSGOLD -D ELKA -D LANG_EN -lcN                     #
#                       D:\pasha\elf\SieELF\MySMSYS\Mss3\Release_ELKA_EN\Lis #
#                       t\ -o D:\pasha\elf\SieELF\MySMSYS\Mss3\Release_ELKA_ #
#                       EN\Obj\ -s9 --no_unroll --cpu_mode arm --endian      #
#                       little --cpu ARM926EJ-S --stack_align 4 --interwork  #
#                       -e --fpu None --dlib_config "D:\pasha\Embedded       #
#                       Workbench 4.0 Evaluation2\ARM\LIB\dl5tpainl8n.h"     #
#                       --segment code=CONFIG --segment data=CONFIG -I       #
#                       "D:\pasha\Embedded Workbench 4.0                     #
#                       Evaluation2\ARM\INC\" --inline_threshold=2           #
#    List file       =  D:\pasha\elf\SieELF\MySMSYS\Mss3\Release_ELKA_EN\Lis #
#                       t\config_data.lst                                    #
#    Object file     =  D:\pasha\elf\SieELF\MySMSYS\Mss3\Release_ELKA_EN\Obj #
#                       \config_data.r79                                     #
#                                                                            #
#                                                                            #
##############################################################################

D:\pasha\elf\SieELF\MySMSYS\Mss3\config_data.c
      1          #include "..\..\inc\swilib.h"
      2          #include "..\..\inc\cfg_items.h"
      3          #include "config_data.h"
      4          #include "StrConst.h"
      5          
      6          __root const CFG_HDR cfghdr0 = {CFG_STR_UTF8, LGP_CFG_MAIN_FOLDER, 3, 127};
      7          __root const char CFG_MAIN_FOLDER[128] = "4:\\ZBin\\MySMSYS\\";
      8          
      9          __root const CFG_HDR cfghdr1 = {CFG_STR_UTF8, LGP_CFG_SYSTEM_FOLDER, 3, 127};
     10          __root const char CFG_SYSTEM_FOLDER[128] = "0:\\System\\";
     11          
     12          __root const CFG_HDR cfghdr2 = {CFG_CHECKBOX, LGP_CFG_ENA_AUTO_SAF, 0, 3};
     13          __root const int CFG_ENA_AUTO_SAF = 1;
     14          
     15          //__root const CFG_HDR cfghdr9 = {CFG_CHECKBOX, LGP_CFG_ENA_AUTO_SAF_RT, 0, 3};
     16          //__root const int CFG_ENA_AUTO_SAF_RT = 0;
     17          
     18          __root const CFG_HDR cfghdr4 = {CFG_CHECKBOX, LGP_CFG_ENA_SAVE_SENT, 0, 3};
     19          __root const int CFG_ENA_SAVE_SENT = 1;
     20          
     21          //__root const CFG_HDR cfghdr5 = {CFG_CHECKBOX, LGP_CFG_ENA_AUTO_DEL_RP, 0, 3};
     22          //__root const int CFG_ENA_AUTO_DEL_RP = 1;
     23          
     24          //__root const CFG_HDR cfghdr6 = {CFG_CHECKBOX, LGP_CFG_ENA_EXIT_SAVE_DRAFT, 0, 3};
     25          //__root const int CFG_ENA_EXIT_SAVE_DRAFT = 1;
     26          
     27          //__root const CFG_HDR cfghdr8 = {CFG_CHECKBOX, LGP_CFG_ENA_AUTO_SAVE_DRAFT, 0, 3};
     28          //__root const int CFG_ENA_AUTO_SAVE_DRAFT = 1;
     29          
     30          __root const CFG_HDR cfghdra = {CFG_CHECKBOX, LGP_CFG_ENA_SNED_ON_BG, 0, 3};
     31          __root const int CFG_ENA_SNED_ON_BG = 1;
     32          
     33          //__root const CFG_HDR cfghdr3 = {CFG_CBOX, LGP_CFG_EXPORT_CHARSET, 0, 2};
     34          //__root const int CFG_EXPORT_CHARSET = 1;
     35          //#ifdef LANG_CN
     36          //__root const CFG_CBOX_ITEM cfgcbox0[2] = {"ASCII", "UTF8"};
     37          //#else
     38          //__root const CFG_CBOX_ITEM cfgcbox0[2] = {"WIN1251", "UTF8"};
     39          //#endif
     40          
     41          __root const CFG_HDR cfghdr7 = {CFG_CBOX, LGP_CFG_TEXT_FONT, 0, 7};
     42          __root const unsigned int CFG_TEXT_FONT = 1;
     43          __root const CFG_CBOX_ITEM cfgcbox1[7] = 
     44          {
     45          	LGP_EDIT_FONT_DEFAULT, 
     46          	LGP_EDIT_FONT_SMALL,
     47          	LGP_EDIT_FONT_SMALL_BOLD,
     48          	LGP_EDIT_FONT_MEDIUM,
     49          	LGP_EDIT_FONT_MEDIUM_BOLD,
     50          	LGP_EDIT_FONT_LARGE,
     51          	LGP_EDIT_FONT_LARGE_BOLD
     52          };
     53          
     54          
     55          __root const CFG_HDR cfghdrb = {CFG_UTF8_STRING, LGP_CFG_DEFAULT_SENT_NUM, 0, 127};
     56          __root const char CFG_DEFAULT_SENT_NUM[128] = "";
     57          
     58          __root const CFG_HDR cfghdrc = {CFG_CBOX, LGP_CFG_DEFAULT_TAB, 0, 5};
     59          __root const unsigned int CFG_DEFAULT_TAB = 0;
     60          __root const CFG_CBOX_ITEM cfgcboxc[5] = 
     61          {
     62          	LGP_CFG_MAINMENU, 
     63          	LGP_CFG_INBOX,
     64          	LGP_CFG_SENT,
     65          	LGP_CFG_DRAFT,
     66          	LGP_CFG_FILTER,
     67          };
     68          
     69          /*
     70          __root const CFG_HDR cfghdr8= {CFG_UTF8_STRING, "Utf8≤‚ ‘", 0, 127};
     71          __root const char UTF8_TEST[128]="";
     72          */
     73          __root const CFG_HDR cfghdr1_0 = {CFG_LEVEL, LGP_CFG_NOTIFY_SET, 1, 0};
     74          
     75          __root const CFG_HDR cfghdr1_1 = {CFG_CHECKBOX, LGP_CFG_ENA_NOTIFY, 0, 3};
     76          __root const int CFG_ENA_NOTIFY = 1;
     77          
     78          //__root const CFG_HDR cfghdr1_2 = {CFG_UINT, LGP_CFG_VIBRA_POWER, 0, 100};
     79          //__root const unsigned int CFG_VIBRA_POWER = 50;
     80          
     81          __root const CFG_HDR cfghdr1_2 = {CFG_CHECKBOX, LGP_CFG_ENA_VIBRA, 0, 3};
     82          __root const int CFG_ENA_VIBRA = 1;
     83          
     84          __root const CFG_HDR cfghdr1_5 = {CFG_UTF8_STRING, LGP_CFG_VIBRA_RHYTHM, 0, 127};
     85          __root const char CFG_VIBRA_RHYTHM[128] = "90;10;60;20;70;40;;80;30;50;";
     86          
     87          __root const CFG_HDR cfghdr1_3 = {CFG_UINT, LGP_CFG_NOTIFY_TIME, 0, 100};
     88          __root const int CFG_NOTIFY_TIME = 4;
     89          
     90          //__root const CFG_HDR cfghdr1_4 = {CFG_CHECKBOX, LGP_CFG_ENA_NEWSMS_ICON, 0, 3};
     91          //__root const int CFG_ENA_NEWSMS_ICON = 1;
     92          
     93          /*
     94          __root const CFG_HDR cfghdr1_5= {CFG_STR_UTF8, LGP_CFG_ICONNEW_PATH, 0, 127};
     95          #ifdef NEWSGOLD
     96          #ifdef ELKA
     97          __root const char CFG_ICONNEW_PATH[128] = "426";//"0:\\ZBin\\MySMSYS\\new.png";
     98          #else
     99          __root const char CFG_ICONNEW_PATH[128] = "467";//"0:\\ZBin\\MySMSYS\\new.png";
    100          #endif
    101          #endif
    102          
    103          __root const CFG_HDR cfghdr1_6= {CFG_COORDINATES, LGP_CFG_ICONNEW_POS, 0, 0};
    104          __root const unsigned int CFG_ICONNEW_POS_X = 2;
    105          __root const unsigned int CFG_ICONNEW_POS_Y = 140;
    106          */
    107          __root const CFG_HDR cfghdr1_7 = {CFG_CHECKBOX, LGP_CFG_ENA_SOUND, 0, 3};
    108          __root const int CFG_ENA_SOUND = 1;
    109          
    110          __root const CFG_HDR cfghdr1_8= {CFG_STR_UTF8, LGP_CFG_SOUND_PATH, 3, 127};
    111          __root const char CFG_SOUND_PATH[128] = "2:\\Default\\MessageMelody.wav";
    112          
    113          //__root const CFG_HDR cfghdr1_a = {CFG_UINT, LGP_CFG_SOUND_VOL, 0, 10};
    114          //__root const unsigned int CFG_SOUND_VOL = 5;
    115          
    116          //#ifdef ELKA
    117          //__root const CFG_HDR cfghdr1_5 = {CFG_CHECKBOX, LGP_CFG_ENA_SLI, 0, 3};
    118          //__root const int CFG_ENA_SLI = 1;
    119          //#endif
    120          
    121          //------------------------ profile
    122          /*
    123          __root const CFG_HDR cfghdr1_10 = {CFG_LEVEL, LGP_CFG_PROFILE1_SET, 1, 0};
    124          
    125          __root const CFG_HDR cfghdr1_11 = {CFG_UINT, LGP_CFG_SOUND_VOL, 0, 10};
    126          __root const unsigned int CFG_SOUND_VOL1 = 5;
    127          
    128          __root const CFG_HDR cfghdr1_12 = {CFG_UINT, LGP_CFG_VIBRA_POWER, 0, 100};
    129          __root const unsigned int CFG_VIBRA_POWER1 = 50;
    130          
    131          __root const CFG_HDR cfghdr1_19 = {CFG_LEVEL, "", 0, 0};
    132          
    133          __root const CFG_HDR cfghdr1_20 = {CFG_LEVEL, LGP_CFG_PROFILE2_SET, 1, 0};
    134          
    135          __root const CFG_HDR cfghdr1_21 = {CFG_UINT, LGP_CFG_SOUND_VOL, 0, 10};
    136          __root const unsigned int CFG_SOUND_VOL2 = 0;
    137          
    138          __root const CFG_HDR cfghdr1_22 = {CFG_UINT, LGP_CFG_VIBRA_POWER, 0, 100};
    139          __root const unsigned int CFG_VIBRA_POWER2 = 50;
    140          
    141          __root const CFG_HDR cfghdr1_29 = {CFG_LEVEL, "", 0, 0};
    142          
    143          __root const CFG_HDR cfghdr1_30 = {CFG_LEVEL, LGP_CFG_PROFILE3_SET, 1, 0};
    144          
    145          __root const CFG_HDR cfghdr1_31 = {CFG_UINT, LGP_CFG_SOUND_VOL, 0, 10};
    146          __root const unsigned int CFG_SOUND_VOL3 = 5;
    147          
    148          __root const CFG_HDR cfghdr1_32 = {CFG_UINT, LGP_CFG_VIBRA_POWER, 0, 100};
    149          __root const unsigned int CFG_VIBRA_POWER3 = 50;
    150          
    151          __root const CFG_HDR cfghdr1_39 = {CFG_LEVEL, "", 0, 0};
    152          
    153          __root const CFG_HDR cfghdr1_40 = {CFG_LEVEL, LGP_CFG_PROFILE4_SET, 1, 0};
    154          
    155          __root const CFG_HDR cfghdr1_41 = {CFG_UINT, LGP_CFG_SOUND_VOL, 0, 10};
    156          __root const unsigned int CFG_SOUND_VOL4 = 5;
    157          
    158          __root const CFG_HDR cfghdr1_42 = {CFG_UINT, LGP_CFG_VIBRA_POWER, 0, 100};
    159          __root const unsigned int CFG_VIBRA_POWER4 = 50;
    160          
    161          __root const CFG_HDR cfghdr1_49 = {CFG_LEVEL, "", 0, 0};
    162          
    163          __root const CFG_HDR cfghdr1_50 = {CFG_LEVEL, LGP_CFG_PROFILE5_SET, 1, 0};
    164          
    165          __root const CFG_HDR cfghdr1_51 = {CFG_UINT, LGP_CFG_SOUND_VOL, 0, 10};
    166          __root const unsigned int CFG_SOUND_VOL5 = 5;
    167          
    168          __root const CFG_HDR cfghdr1_52 = {CFG_UINT, LGP_CFG_VIBRA_POWER, 0, 100};
    169          __root const unsigned int CFG_VIBRA_POWER5 = 50;
    170          
    171          __root const CFG_HDR cfghdr1_59 = {CFG_LEVEL, "", 0, 0};
    172          
    173          __root const CFG_HDR cfghdr1_60 = {CFG_LEVEL, LGP_CFG_PROFILE6_SET, 1, 0};
    174          
    175          __root const CFG_HDR cfghdr1_61 = {CFG_UINT, LGP_CFG_SOUND_VOL, 0, 10};
    176          __root const unsigned int CFG_SOUND_VOL6 = 5;
    177          
    178          __root const CFG_HDR cfghdr1_62 = {CFG_UINT, LGP_CFG_VIBRA_POWER, 0, 100};
    179          __root const unsigned int CFG_VIBRA_POWER6 = 50;
    180          
    181          __root const CFG_HDR cfghdr1_69 = {CFG_LEVEL, "", 0, 0};
    182          
    183          __root const CFG_HDR cfghdr1_70 = {CFG_LEVEL, LGP_CFG_PROFILE7_SET, 1, 0};
    184          
    185          __root const CFG_HDR cfghdr1_71 = {CFG_UINT, LGP_CFG_SOUND_VOL, 0, 10};
    186          __root const unsigned int CFG_SOUND_VOL7 = 5;
    187          
    188          __root const CFG_HDR cfghdr1_72 = {CFG_UINT, LGP_CFG_VIBRA_POWER, 0, 100};
    189          __root const unsigned int CFG_VIBRA_POWER7 = 50;
    190          
    191          __root const CFG_HDR cfghdr1_79 = {CFG_LEVEL, "", 0, 0};
    192          
    193          __root const CFG_HDR cfghdr1_80 = {CFG_LEVEL, LGP_CFG_PROFILE8_SET, 1, 0};
    194          
    195          __root const CFG_HDR cfghdr1_81 = {CFG_UINT, LGP_CFG_SOUND_VOL, 0, 10};
    196          __root const unsigned int CFG_SOUND_VOL8 = 2;
    197          
    198          __root const CFG_HDR cfghdr1_82 = {CFG_UINT, LGP_CFG_VIBRA_POWER, 0, 100};
    199          __root const unsigned int CFG_VIBRA_POWER8 = 50;
    200          
    201          __root const CFG_HDR cfghdr1_89 = {CFG_LEVEL, "", 0, 0};
    202          */
    203          //-----------------------------
    204          
    205          __root const CFG_HDR cfghdr1_9 = {CFG_LEVEL, "", 0, 0};
    206          /*
    207          __root const CFG_HDR cfghdr2_0 = {CFG_LEVEL, LGP_CFG_KEYHOOK_SETTING, 1, 0};
    208          
    209          __root const CFG_HDR cfghdr2_1 = {CFG_UINT, LGP_CFG_1ST_KEY, 0, 100};
    210          __root const unsigned int KEY1 = '*';
    211          
    212          __root const CFG_HDR cfghdr2_2 = {CFG_UINT, LGP_CFG_2ND_KEY, 0, 100};
    213          __root const unsigned int KEY2 = '#';
    214          
    215          __root const CFG_HDR cfghdr2_9 = {CFG_LEVEL, "", 0, 0};
    216          */
    217          __root const CFG_HDR cfghdr3_0 = {CFG_LEVEL, LGP_CFG_ICONBAR_SETTING, 1, 0};
    218          
    219          __root const CFG_HDR cfghdr3_1 = {CFG_CHECKBOX, LGP_CFG_ENA_IB, 0, 3};
    220          __root const int CFG_ENA_IB = 1;
    221          
    222          __root const CFG_HDR cfghdr3_2 = {CFG_UINT, LGP_CFG_ICON_IB, 0, 9999};
    223          #ifdef NEWSGOLD
    224          #ifdef ELKA
    225          __root const unsigned int CFG_ICON_IB = 597;
    226          #else
    227          __root const unsigned int CFG_ICON_IB = 475;
    228          #endif
    229          #endif
    230          /*
    231          __root const CFG_HDR cfghdr3_3 = {CFG_UINT, LGP_CFG_ICONSNED_IB, 0, 9999};
    232          #ifdef NEWSGOLD
    233          #ifdef ELKA
    234          __root const unsigned int CFG_ICONSNED_IB = 428;
    235          #else
    236          __root const unsigned int CFG_ICONSNED_IB = 477;
    237          #endif
    238          #endif
    239          */
    240          __root const CFG_HDR cfghdr3_9 = {CFG_LEVEL, "", 0, 0};
    241          
    242          
    243          //-------------------
    244          //megadial
    245          
    246          /*
    247          #ifdef MEGADIAL
    248          __root const CFG_HDR cfghdr10_0 = {CFG_LEVEL, LGP_CFG_MDSETTING, 1, 0};
    249          
    250          __root const CFG_HDR cfghdr107 = {CFG_CHECKBOX, LGP_CFG_ENA_MD, 0, 3};
    251          __root const int CFG_ENA_MD = 1;
    252          
    253          __root const CFG_HDR cfghdr100={CFG_COLOR,LGP_CFG_MDBGCOL,0,0};
    254          __root const char COLOR_MENU_BK[4]={0xFF,0xFF,0x0,0x64};
    255          
    256          __root const CFG_HDR cfghdr101={CFG_COLOR,LGP_CFG_MDMNBDCOL,0,0};
    257          __root const char COLOR_MENU_BRD[4]={0x0,0x0,0x0,0x64};
    258          
    259          __root const CFG_HDR cfghdr102={CFG_COLOR,LGP_CFG_MDNSLCOL,0,0};
    260          __root const char COLOR_NOTSELECTED[4]={0x0,0x0,0x0,0x64};
    261          
    262          __root const CFG_HDR cfghdr103={CFG_COLOR,LGP_CFG_MDSLCOL,0,0};
    263          __root const char COLOR_SELECTED[4]={0xFF,0xFF,0xFF,0x64};
    264          
    265          __root const CFG_HDR cfghdr104={CFG_COLOR,LGP_CFG_MDSLBGCOL,0,0};
    266          __root const char COLOR_SELECTED_BG[4]={0x0,0x0,0xFF,0x64};
    267          
    268          __root const CFG_HDR cfghdr105={CFG_COLOR,LGP_CFG_MDSLBDCOL,0,0};
    269          __root const char COLOR_SELECTED_BRD[4]={0x0,0x0,0xFF,0x64};
    270          
    271          __root const CFG_HDR cfghdr106={CFG_COLOR,LGP_CFG_MDSHMKCOL,0,0};
    272          __root const char COLOR_SEARCH_MARK[4]={0xFF,0x0,0x0,0x64};
    273          
    274          #ifdef LANG_CN
    275          __root const CFG_HDR cfghdr108={CFG_COLOR,LGP_CFG_MDCSCOL,0,0};
    276          __root const char COLOR_CODE_SHOW[4]={0xFF,0xFF,0xFF,0x64};
    277          #endif
    278          
    279          __root const CFG_HDR cfghdr10_9 = {CFG_LEVEL, "", 0, 0};
    280          #endif
    281          
    282          */
    283          __root const CFG_HDR cfghdr11_0 = {CFG_LEVEL, LGP_CFG_FILTERSET, 1, 0};
    284          
    285          __root const CFG_HDR cfghdr11_1 = {CFG_CBOX, LGP_CFG_FILTEROP, 0, 6};
    286          __root const unsigned int CFG_FILTEROP = 0;
    287          __root const CFG_CBOX_ITEM cfgcbox11_1[6] = 
    288          {
    289          	LGP_FILTER_ALL, 
    290          	LGP_FILTER_NEW,
    291                  LGP_FILTER_DAT,
    292                  LGP_FILTER_FILE,
    293          	LGP_FILTER_NUM,
    294          	LGP_FILTER_STR,
    295          };
    296          
    297          __root const CFG_HDR cfghdr11_2 = {CFG_UTF8_STRING, LGP_CFG_STRORNUM, 0, 31};
    298          __root const char CFG_STRORNUM[32] = "";
    299          
    300          __root const CFG_HDR cfghdr11_9 = {CFG_LEVEL, "", 0, 0};
    301          //-------------------


   Segment part sizes:

     Function/Label       Bytes
     --------------       -----
     cfghdr0                44
     CFG_MAIN_FOLDER       128
     cfghdr1                44
     CFG_SYSTEM_FOLDER     128
     cfghdr2                44
     CFG_ENA_AUTO_SAF        4
     cfghdr4                44
     CFG_ENA_SAVE_SENT       4
     cfghdra                44
     CFG_ENA_SNED_ON_BG      4
     cfghdr7                44
     CFG_TEXT_FONT           4
     cfgcbox1              224
     cfghdrb                44
     CFG_DEFAULT_SENT_NUM  128
     cfghdrc                44
     CFG_DEFAULT_TAB         4
     cfgcboxc              160
     cfghdr1_0              44
     cfghdr1_1              44
     CFG_ENA_NOTIFY          4
     cfghdr1_2              44
     CFG_ENA_VIBRA           4
     cfghdr1_5              44
     CFG_VIBRA_RHYTHM      128
     cfghdr1_3              44
     CFG_NOTIFY_TIME         4
     cfghdr1_7              44
     CFG_ENA_SOUND           4
     cfghdr1_8              44
     CFG_SOUND_PATH        128
     cfghdr1_9              44
     cfghdr3_0              44
     cfghdr3_1              44
     CFG_ENA_IB              4
     cfghdr3_2              44
     CFG_ICON_IB             4
     cfghdr3_9              44
     cfghdr11_0             44
     cfghdr11_1             44
     CFG_FILTEROP            4
     cfgcbox11_1           192
     cfghdr11_2             44
     CFG_STRORNUM           32
     cfghdr11_9             44

 
 2 352 bytes in segment CONFIG_C
 
 2 352 bytes of CONST memory

Errors: none
Warnings: none
