##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION    14/Jan/2009  12:36:52 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  K:\Pasha\elf\SieELF\MySMSYS\popGui.c                 #
#    Command line    =  K:\Pasha\elf\SieELF\MySMSYS\popGui.c -D NEWSGOLD -D  #
#                       ELKA -D LANG_EN -D NO_CS -lC                         #
#                       K:\Pasha\elf\SieELF\MySMSYS\Release_ELKA_EN\List\    #
#                       -o K:\Pasha\elf\SieELF\MySMSYS\Release_ELKA_EN\Obj\  #
#                       -s9 --no_unroll --cpu_mode arm --endian little       #
#                       --cpu ARM926EJ-S --stack_align 4 --interwork -e      #
#                       --fpu None --dlib_config "K:\Pasha\Embedded          #
#                       Workbench 4.0 Evaluation2\ARM\LIB\dl5tpainl8n.h" -I  #
#                       "K:\Pasha\Embedded Workbench 4.0                     #
#                       Evaluation2\ARM\INC\" --inline_threshold=2           #
#    List file       =  K:\Pasha\elf\SieELF\MySMSYS\Release_ELKA_EN\List\pop #
#                       Gui.lst                                              #
#    Object file     =  K:\Pasha\elf\SieELF\MySMSYS\Release_ELKA_EN\Obj\popG #
#                       ui.r79                                               #
#                                                                            #
#                                                                            #
##############################################################################

K:\Pasha\elf\SieELF\MySMSYS\popGui.c
      1          #include "..\inc\swilib.h"
      2          #include "..\inc\mplayer.h"
      3          #include "language.h"
      4          #include "sms_dat.h"
      5          #include "popGui.h"
      6          #include "main.h"
      7          #include "edGui.h"
      8          #include "adrList.h"
      9          #include "CodeShow.h" 
     10          #include "config_data.h"
     11          #include "lgp_pic.h"
     12          #include "NewDatReader.h"
     13          //int sndVolume=5;

   \                                 In segment DATA_Z, align 4, align-sorted
     14          short PLAY_ID=0;
   \                     PLAY_ID:
   \   00000000                      DS8 2
   \   00000002                      DS8 2
     15          
     16          int vibra_power=0;
   \                     vibra_power:
   \   00000004                      DS8 4
     17          int sound_vol=0;
   \                     sound_vol:
   \   00000008                      DS8 4

   \                                 In segment CODE, align 4, keep-with-next
     18          void SetSoundVibraByProfile(void)
     19          {
   \                     SetSoundVibraByProfile:
   \   00000000   00402DE9           PUSH     {LR}
     20            int c=GetProfile()+1;
   \   00000004   B60000EF           SWI      +182
   \   00000008   010080E2           ADD      R0,R0,#+1
     21            switch(c)
   \   0000000C   010040E2           SUB      R0,R0,#+1
   \   00000010   070050E3           CMP      R0,#+7
   \   00000014   2100008A           BHI      ??SetSoundVibraByProfile_1
   \   00000018   011F8FE2           ADR      R1,??SetSoundVibraByProfile_0
   \   0000001C   0010D1E7           LDRB     R1,[R1, R0]
   \   00000020   01F18FE0           ADD      PC,PC,R1, LSL #+2
   \                     ??SetSoundVibraByProfile_0:
   \   00000024   0106090D           DC8      +1,+6,+9,+13
   \   00000028   1013161B           DC8      +16,+19,+22,+27
     22            {
     23            case 1:
     24              vibra_power=CFG_VIBRA_POWER1;
   \                     ??SetSoundVibraByProfile_2:
   \   0000002C   84009FE5           LDR      R0,??SetSoundVibraByProfile_3  ;; CFG_VIBRA_POWER1
     25              sound_vol=CFG_SOUND_VOL1;
   \   00000030   84109FE5           LDR      R1,??SetSoundVibraByProfile_3+0x4  ;; CFG_SOUND_VOL1
   \                     ??SetSoundVibraByProfile_4:
   \   00000034   000090E5           LDR      R0,[R0, #+0]
   \                     ??SetSoundVibraByProfile_5:
   \   00000038   001091E5           LDR      R1,[R1, #+0]
   \   0000003C   190000EA           B        ??SetSoundVibraByProfile_6
     26              break;
     27            case 2:
     28              vibra_power=CFG_VIBRA_POWER2;
   \                     ??SetSoundVibraByProfile_7:
   \   00000040   78009FE5           LDR      R0,??SetSoundVibraByProfile_3+0x8  ;; CFG_VIBRA_POWER2
     29              sound_vol=CFG_SOUND_VOL2;
   \   00000044   78109FE5           LDR      R1,??SetSoundVibraByProfile_3+0xC  ;; CFG_SOUND_VOL2
   \   00000048   F9FFFFEA           B        ??SetSoundVibraByProfile_4
     30              break;
     31            case 3:
     32              vibra_power=CFG_VIBRA_POWER3;
   \                     ??SetSoundVibraByProfile_8:
   \   0000004C   74009FE5           LDR      R0,??SetSoundVibraByProfile_3+0x10  ;; CFG_VIBRA_POWER3
     33              sound_vol=CFG_SOUND_VOL3;
   \   00000050   74109FE5           LDR      R1,??SetSoundVibraByProfile_3+0x14  ;; CFG_SOUND_VOL3
   \                     ??SetSoundVibraByProfile_9:
   \   00000054   000090E5           LDR      R0,[R0, #+0]
   \   00000058   F6FFFFEA           B        ??SetSoundVibraByProfile_5
     34              break;
     35            case 4:
     36              vibra_power=CFG_VIBRA_POWER4;
   \                     ??SetSoundVibraByProfile_10:
   \   0000005C   6C009FE5           LDR      R0,??SetSoundVibraByProfile_3+0x18  ;; CFG_VIBRA_POWER4
     37              sound_vol=CFG_SOUND_VOL4;
   \   00000060   6C109FE5           LDR      R1,??SetSoundVibraByProfile_3+0x1C  ;; CFG_SOUND_VOL4
   \   00000064   F2FFFFEA           B        ??SetSoundVibraByProfile_4
     38              break;
     39            case 5:
     40              vibra_power=CFG_VIBRA_POWER5;
   \                     ??SetSoundVibraByProfile_11:
   \   00000068   68009FE5           LDR      R0,??SetSoundVibraByProfile_3+0x20  ;; CFG_VIBRA_POWER5
     41              sound_vol=CFG_SOUND_VOL5;
   \   0000006C   68109FE5           LDR      R1,??SetSoundVibraByProfile_3+0x24  ;; CFG_SOUND_VOL5
   \   00000070   F7FFFFEA           B        ??SetSoundVibraByProfile_9
     42              break;
     43            case 6:
     44              vibra_power=CFG_VIBRA_POWER6;
   \                     ??SetSoundVibraByProfile_12:
   \   00000074   64009FE5           LDR      R0,??SetSoundVibraByProfile_3+0x28  ;; CFG_VIBRA_POWER6
     45              sound_vol=CFG_SOUND_VOL6;
   \   00000078   64109FE5           LDR      R1,??SetSoundVibraByProfile_3+0x2C  ;; CFG_SOUND_VOL6
   \   0000007C   ECFFFFEA           B        ??SetSoundVibraByProfile_4
     46              break;
     47            case 7:
     48              vibra_power=CFG_VIBRA_POWER7;
   \                     ??SetSoundVibraByProfile_13:
   \   00000080   60009FE5           LDR      R0,??SetSoundVibraByProfile_3+0x30  ;; CFG_VIBRA_POWER7
     49              sound_vol=CFG_SOUND_VOL7;
   \   00000084   60109FE5           LDR      R1,??SetSoundVibraByProfile_3+0x34  ;; CFG_SOUND_VOL7
   \   00000088   000090E5           LDR      R0,[R0, #+0]
   \   0000008C   001091E5           LDR      R1,[R1, #+0]
   \   00000090   040000EA           B        ??SetSoundVibraByProfile_6
     50              break;
     51            case 8:
     52              vibra_power=CFG_VIBRA_POWER8;
   \                     ??SetSoundVibraByProfile_14:
   \   00000094   54009FE5           LDR      R0,??SetSoundVibraByProfile_3+0x38  ;; CFG_VIBRA_POWER8
     53              sound_vol=CFG_SOUND_VOL8;
   \   00000098   54109FE5           LDR      R1,??SetSoundVibraByProfile_3+0x3C  ;; CFG_SOUND_VOL8
   \   0000009C   E4FFFFEA           B        ??SetSoundVibraByProfile_4
     54              break;
     55            default:
     56              vibra_power=0;
   \                     ??SetSoundVibraByProfile_1:
   \   000000A0   0000A0E3           MOV      R0,#+0
     57              sound_vol=0;
   \   000000A4   0010A0E3           MOV      R1,#+0
   \                     ??SetSoundVibraByProfile_6:
   \   000000A8   48209FE5           LDR      R2,??SetSoundVibraByProfile_3+0x40  ;; PLAY_ID
   \   000000AC   081082E5           STR      R1,[R2, #+8]
   \   000000B0   040082E5           STR      R0,[R2, #+4]
     58              break;
     59            }
     60          }
   \   000000B4   0080BDE8           POP      {PC}             ;; return
   \                     ??SetSoundVibraByProfile_3:
   \   000000B8   ........           DC32     CFG_VIBRA_POWER1
   \   000000BC   ........           DC32     CFG_SOUND_VOL1
   \   000000C0   ........           DC32     CFG_VIBRA_POWER2
   \   000000C4   ........           DC32     CFG_SOUND_VOL2
   \   000000C8   ........           DC32     CFG_VIBRA_POWER3
   \   000000CC   ........           DC32     CFG_SOUND_VOL3
   \   000000D0   ........           DC32     CFG_VIBRA_POWER4
   \   000000D4   ........           DC32     CFG_SOUND_VOL4
   \   000000D8   ........           DC32     CFG_VIBRA_POWER5
   \   000000DC   ........           DC32     CFG_SOUND_VOL5
   \   000000E0   ........           DC32     CFG_VIBRA_POWER6
   \   000000E4   ........           DC32     CFG_SOUND_VOL6
   \   000000E8   ........           DC32     CFG_VIBRA_POWER7
   \   000000EC   ........           DC32     CFG_SOUND_VOL7
   \   000000F0   ........           DC32     CFG_VIBRA_POWER8
   \   000000F4   ........           DC32     CFG_SOUND_VOL8
   \   000000F8   ........           DC32     PLAY_ID

   \                                 In segment CODE, align 4, keep-with-next
     61          void Play(const char *fname)
     62          {
   \                     Play:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   B3DF4DE2           SUB      SP,SP,#+716
   \   00000008   0060A0E1           MOV      R6,R0
     63            PLAYFILE_OPT _sfo1;
     64            WSHDR *sndPath,sndPathn;
     65            WSHDR *sndFName,sndFNamen;
     66            unsigned short sndPathb[128];
     67            unsigned short sndFNameb[128];
     68            char s[128];
     69            const char *p;
     70            if(!IsFileExist(fname))
   \   0000000C   ........           _BLF     IsFileExist,??IsFileExist??rA
   \   00000010   000050E3           CMP      R0,#+0
   \   00000014   3800000A           BEQ      ??Play_0
     71              return;
     72            sndPath=CreateLocalWS(&sndPathn, sndPathb, 128);
   \   00000018   8020A0E3           MOV      R2,#+128
   \   0000001C   24108DE2           ADD      R1,SP,#+36
   \   00000020   A90F8DE2           ADD      R0,SP,#+676
   \   00000024   270100EF           SWI      +295
   \   00000028   0040A0E1           MOV      R4,R0
     73            sndFName=CreateLocalWS(&sndFNamen, sndFNameb, 128);
   \   0000002C   8020A0E3           MOV      R2,#+128
   \   00000030   491F8DE2           ADD      R1,SP,#+292
   \   00000034   AE0F8DE2           ADD      R0,SP,#+696
   \   00000038   270100EF           SWI      +295
   \   0000003C   0050A0E1           MOV      R5,R0
     74            p=strrchr(fname,'\\')+1;
   \   00000040   5C10A0E3           MOV      R1,#+92
   \   00000044   0600A0E1           MOV      R0,R6
   \   00000048   170100EF           SWI      +279
   \   0000004C   017080E2           ADD      R7,R0,#+1
     75            str_2ws(sndFName,p,128);
   \   00000050   8020A0E3           MOV      R2,#+128
   \   00000054   0710A0E1           MOV      R1,R7
   \   00000058   0500A0E1           MOV      R0,R5
   \   0000005C   6C0100EF           SWI      +364
     76            strncpy(s,fname,p-fname);
   \   00000060   067047E0           SUB      R7,R7,R6
   \   00000064   0720A0E1           MOV      R2,R7
   \   00000068   0610A0E1           MOV      R1,R6
   \   0000006C   890F8DE2           ADD      R0,SP,#+548
   \   00000070   160100EF           SWI      +278
     77            s[p-fname]='\0';
   \   00000074   0060A0E3           MOV      R6,#+0
   \   00000078   890F8DE2           ADD      R0,SP,#+548
   \   0000007C   0060C7E7           STRB     R6,[R7, +R0]
     78            str_2ws(sndPath,s,128);
   \   00000080   8020A0E3           MOV      R2,#+128
   \   00000084   891F8DE2           ADD      R1,SP,#+548
   \   00000088   0400A0E1           MOV      R0,R4
   \   0000008C   6C0100EF           SWI      +364
     79            zeromem(&_sfo1,sizeof(PLAYFILE_OPT));
   \   00000090   2410A0E3           MOV      R1,#+36
   \   00000094   0D00A0E1           MOV      R0,SP
   \   00000098   1D0100EF           SWI      +285
     80            _sfo1.repeat_num=1;
   \   0000009C   0100A0E3           MOV      R0,#+1
   \   000000A0   B000CDE1           STRH     R0,[SP, #+0]
     81            _sfo1.time_between_play=0;
   \   000000A4   04608DE5           STR      R6,[SP, #+4]
     82            _sfo1.play_first=0;
   \   000000A8   08608DE5           STR      R6,[SP, #+8]
     83            _sfo1.volume=sound_vol;//
   \   000000AC   ........           LDR      R6,??DataTable5  ;; PLAY_ID
     84          #ifdef NEWSGOLD
     85            _sfo1.unk6=1;
     86            _sfo1.unk7=1;
     87            _sfo1.unk9=2;
   \   000000B0   0210A0E3           MOV      R1,#+2
   \   000000B4   082096E5           LDR      R2,[R6, #+8]
   \   000000B8   0C208DE5           STR      R2,[SP, #+12]
   \   000000BC   14008DE5           STR      R0,[SP, #+20]
   \   000000C0   18008DE5           STR      R0,[SP, #+24]
   \   000000C4   20108DE5           STR      R1,[SP, #+32]
     88            PLAY_ID=PlayFile(0x10, sndPath, sndFName, GBS_GetCurCepid(), MSG_PLAYFILE_REPORT, &_sfo1);
   \   000000C8   450100EF           SWI      +325
   \   000000CC   0D10A0E1           MOV      R1,SP
   \   000000D0   02002DE9           PUSH     {R1}
   \   000000D4   0030A0E1           MOV      R3,R0
   \   000000D8   0520A0E1           MOV      R2,R5
   \   000000DC   1000A0E3           MOV      R0,#+16
   \   000000E0   BC10A0E3           MOV      R1,#+188
   \   000000E4   701C81E3           ORR      R1,R1,#0x7000
   \   000000E8   02002DE9           PUSH     {R1}
   \   000000EC   0410A0E1           MOV      R1,R4
   \   000000F0   4A0000EF           SWI      +74
   \   000000F4   B000C6E1           STRH     R0,[R6, #+0]
     89          #else
     90          #ifdef X75
     91            _sfo1.unk4=0x80000000;
     92            _sfo1.unk5=1;
     93            PLAY_ID=PlayFile(0xC, sndPath, sndFName, 0,GBS_GetCurCepid(), MSG_PLAYFILE_REPORT, &_sfo1);
     94          #else
     95            _sfo1.unk5=1;
     96            PLAY_ID=PlayFile(0xC, sndPath, sndFName, GBS_GetCurCepid(), MSG_PLAYFILE_REPORT, &_sfo1);
     97          #endif
     98          #endif
     99          }
   \   000000F8   08D08DE2           ADD      SP,SP,#+8
   \                     ??Play_0:
   \   000000FC   B3DF8DE2           ADD      SP,SP,#+716      ;; stack cleaning
   \   00000100   F080BDE8           POP      {R4-R7,PC}       ;; return
    100          
    101          #pragma swi_number=0x44
    102          __swi __arm void TempLightOn(int x, int y);
    103          
    104          #pragma swi_number=0x80CB
    105          __swi __arm char *RamRingtoneStatus(); //0 on, 1, off
    106          

   \                                 In segment DATA_C, align 4, align-sorted
    107          const int popup_softkeys[]={0, 1, 2};
   \                     popup_softkeys:
   \   00000000   000000000100       DC32 0, 1, 2
   \              000002000000

   \                                 In segment DATA_I, align 4, align-sorted
    108          SOFTKEY_DESC popup_sk[]=
   \                     popup_sk:
   \   00000000                      DS8 24
   \   00000018                      REQUIRE `?<Initializer for popup_sk>`
    109          {
    110            {0x0018,0x0000,(int)LGP_NULL},
    111            {0x0001,0x0000,(int)LGP_NULL},
    112            {0x003D,0x0000,LGP_DOIT_PIC}
    113          };

   \                                 In segment DATA_C, align 4, align-sorted
    114          const SOFTKEYSTAB popup_skt={popup_sk, 0};
   \                     popup_skt:
   \   00000000   ........0000       DC32 popup_sk, 0
   \              0000        
    115          
    116          #ifdef ELKA

   \                                 In segment DATA_I, align 4, align-sorted
    117          int pp_incoming_icons[]={0x282, 0};
   \                     pp_incoming_icons:
   \   00000000                      DS8 8
   \   00000008                      REQUIRE `?<Initializer for pp_incoming_icons>`

   \                                 In segment DATA_I, align 4, align-sorted
    118          int pp_showmsg_icons[]={0x52C, 0};
   \                     pp_showmsg_icons:
   \   00000000                      DS8 8
   \   00000008                      REQUIRE `?<Initializer for pp_showmsg_icons>`
    119          #else
    120          int pp_incoming_icons[]={0x278, 0};
    121          int pp_showmsg_icons[]={0x558, 0};
    122          #endif
    123          
    124          #define TIME_SECOND 216
    125          

   \                                 In segment CODE, align 4, keep-with-next
    126          int popup_onkey(void *data, GUI_MSG *msg)
    127          {
   \                     popup_onkey:
   \   00000000   10402DE9           PUSH     {R4,LR}
    128            if((msg->keys==0x18)||(msg->keys==0x3D))
   \   00000004   F220D1E1           LDRSH    R2,[R1, #+2]
   \   00000008   180052E3           CMP      R2,#+24
   \   0000000C   3D005213           CMPNE    R2,#+61
   \   00000010   0900001A           BNE      ??popup_onkey_0
    129            {
    130              DLG_CSM *dlg_csm=GetPopupUserPointer(data);
   \   00000014   AB0200EF           SWI      +683
   \   00000018   0040B0E1           MOVS     R4,R0
    131              if(dlg_csm)
   \   0000001C   0400000A           BEQ      ??popup_onkey_1
    132              {
    133                if(!(dlg_csm->gui_id=viewTheLastNew(dlg_csm)))
   \   00000020   ........           _BLF     viewTheLastNew,??viewTheLastNew??rA
   \   00000024   280084E5           STR      R0,[R4, #+40]
   \   00000028   000050E3           CMP      R0,#+0
    134                  dlg_csm->csm.state=-3; //close
   \   0000002C   0200E003           MVNEQ    R0,#+2
   \   00000030   10008405           STREQ    R0,[R4, #+16]
    135          	//dlg_csm->gui_id=CreateMainMenu(dlg_csm);
    136              }
    137              return 1;
   \                     ??popup_onkey_1:
   \   00000034   0100A0E3           MOV      R0,#+1
   \   00000038   1080BDE8           POP      {R4,PC}
    138            }
    139            if(msg->keys==0x1)
   \                     ??popup_onkey_0:
   \   0000003C   010052E3           CMP      R2,#+1
   \   00000040   FBFFFF0A           BEQ      ??popup_onkey_1
    140              return 1;
    141            if(msg->gbsmsg->msg==KEY_DOWN)
   \   00000044   040091E5           LDR      R0,[R1, #+4]
   \   00000048   9310A0E3           MOV      R1,#+147
   \   0000004C   040090E5           LDR      R0,[R0, #+4]
   \   00000050   401F81E3           ORR      R1,R1,#0x100
   \   00000054   010050E1           CMP      R0,R1
   \   00000058   2400001A           BNE      ??popup_onkey_2
    142            {	 
    143              if(!IsUnlocked())
   \   0000005C   430000EF           SWI      +67
   \   00000060   000050E3           CMP      R0,#+0
   \   00000064   0300001A           BNE      ??popup_onkey_3
    144                TempLightOn(3, 0x7FFF);
   \   00000068   FF10A0E3           MOV      R1,#+255
   \   0000006C   7F1C81E3           ORR      R1,R1,#0x7F00
   \   00000070   0300A0E3           MOV      R0,#+3
   \   00000074   440000EF           SWI      +68
    145              if(PLAY_ID)
   \                     ??popup_onkey_3:
   \   00000078   ........           LDR      R4,??DataTable5  ;; PLAY_ID
   \   0000007C   F000D4E1           LDRSH    R0,[R4, #+0]
   \   00000080   000050E3           CMP      R0,#+0
   \   00000084   0200000A           BEQ      ??popup_onkey_4
    146              {
    147                PlayMelody_StopPlayback(PLAY_ID);
   \   00000088   260200EF           SWI      +550
    148                PLAY_ID=0;
   \   0000008C   0000A0E3           MOV      R0,#+0
   \   00000090   B000C4E1           STRH     R0,[R4, #+0]
    149              }
    150              if(CFG_ENA_SOUND && IsPlayerOn() && !GetPlayStatus()) MPlayer_Start();
   \                     ??popup_onkey_4:
   \   00000094   ........           LDR      R0,??DataTable6  ;; CFG_ENA_SOUND
   \   00000098   000090E5           LDR      R0,[R0, #+0]
   \   0000009C   000050E3           CMP      R0,#+0
   \   000000A0   1100000A           BEQ      ??popup_onkey_5
   \   000000A4   7F0000EF           SWI      +127
   \   000000A8   000050E3           CMP      R0,#+0
   \   000000AC   0E00000A           BEQ      ??popup_onkey_5
   \   000000B0   F80100EF           SWI      +504
   \   000000B4   000050E3           CMP      R0,#+0
   \   000000B8   0A00001A           BNE      ??popup_onkey_6
   \   000000BC   E18000EF           SWI      +32993
   \   000000C0   0E10A0E3           MOV      R1,#+14
   \   000000C4   02002DE9           PUSH     {R1}
   \   000000C8   003090E5           LDR      R3,[R0, #+0]
   \   000000CC   0020A0E3           MOV      R2,#+0
   \   000000D0   0900A0E3           MOV      R0,#+9
   \   000000D4   5310A0E3           MOV      R1,#+83
   \   000000D8   801C81E3           ORR      R1,R1,#0x8000
   \   000000DC   420C80E3           ORR      R0,R0,#0x4200
   \   000000E0   000100EF           SWI      +256
   \   000000E4   04D08DE2           ADD      SP,SP,#+4
    151              SetVibration(0);
   \                     ??popup_onkey_6:
   \   000000E8   0000A0E3           MOV      R0,#+0
   \                     ??popup_onkey_5:
   \   000000EC   7C0000EF           SWI      +124
    152            }
    153            return 0;
   \                     ??popup_onkey_2:
   \   000000F0   0000A0E3           MOV      R0,#+0
   \   000000F4   1080BDE8           POP      {R4,PC}          ;; return
    154          }
    155          

   \                                 In segment CODE, align 4, keep-with-next
    156          void popup_ghook(void *data, int cmd)
    157          {
   \                     popup_ghook:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
    158          /*  if(cmd==2) //Create
    159            {
    160              TempLightOn(3, 0x7FFF);
    161              if(CFG_NOTIFY_TIME && !IsCalling())
    162              {
    163                SetSoundVibraByProfile();
    164                if(CFG_ENA_SOUND&& sound_vol && !(*(RamRingtoneStatus())) && IsFileExist(CFG_SOUND_PATH))
    165                {
    166          	if(GetPlayStatus()) MPlayer_Stop();
    167          	if(!PLAY_ID)
    168          	{
    169          	  Play(CFG_SOUND_PATH);
    170          	}
    171                }
    172                SetVibration(vibra_power);
    173              }
    174            }
    175            else*/
    176            if(cmd==3) //Close
   \   00000004   030051E3           CMP      R1,#+3
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   3080BD18           POPNE    {R4,R5,PC}
    177            {
    178              POPUP_DESC *pd;
    179              if(PLAY_ID)
   \   00000010   ........           LDR      R5,??DataTable5  ;; PLAY_ID
   \   00000014   F000D5E1           LDRSH    R0,[R5, #+0]
   \   00000018   000050E3           CMP      R0,#+0
   \   0000001C   0200000A           BEQ      ??popup_ghook_0
    180              {
    181                PlayMelody_StopPlayback(PLAY_ID);
   \   00000020   260200EF           SWI      +550
    182                PLAY_ID=0;
   \   00000024   0000A0E3           MOV      R0,#+0
   \   00000028   B000C5E1           STRH     R0,[R5, #+0]
    183              }
    184              if(CFG_ENA_SOUND && IsPlayerOn() && !GetPlayStatus()) MPlayer_Start();
   \                     ??popup_ghook_0:
   \   0000002C   ........           LDR      R0,??DataTable6  ;; CFG_ENA_SOUND
   \   00000030   000090E5           LDR      R0,[R0, #+0]
   \   00000034   000050E3           CMP      R0,#+0
   \   00000038   1100000A           BEQ      ??popup_ghook_1
   \   0000003C   7F0000EF           SWI      +127
   \   00000040   000050E3           CMP      R0,#+0
   \   00000044   0E00000A           BEQ      ??popup_ghook_1
   \   00000048   F80100EF           SWI      +504
   \   0000004C   000050E3           CMP      R0,#+0
   \   00000050   0A00001A           BNE      ??popup_ghook_2
   \   00000054   E18000EF           SWI      +32993
   \   00000058   0E10A0E3           MOV      R1,#+14
   \   0000005C   02002DE9           PUSH     {R1}
   \   00000060   003090E5           LDR      R3,[R0, #+0]
   \   00000064   0020A0E3           MOV      R2,#+0
   \   00000068   0900A0E3           MOV      R0,#+9
   \   0000006C   5310A0E3           MOV      R1,#+83
   \   00000070   801C81E3           ORR      R1,R1,#0x8000
   \   00000074   420C80E3           ORR      R0,R0,#0x4200
   \   00000078   000100EF           SWI      +256
   \   0000007C   04D08DE2           ADD      SP,SP,#+4
    185              SetVibration(0);
   \                     ??popup_ghook_2:
   \   00000080   0000A0E3           MOV      R0,#+0
   \                     ??popup_ghook_1:
   \   00000084   7C0000EF           SWI      +124
    186              //get POPUP_DESC
    187              pd=(POPUP_DESC *)(((void **)data)[8/4]);
    188              mfree(pd);
   \   00000088   080094E5           LDR      R0,[R4, #+8]
   \   0000008C   150000EF           SWI      +21
    189            }
    190          }
   \   00000090   3080BDE8           POP      {R4,R5,PC}       ;; return
    191          

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "%t\\n%t:\\n%w">`:
   \   00000000   25740A25743A       DC8 "%t\012%t:\012%w"
   \              0A257700    
   \   0000000A   0000               DC8 0, 0
   \   0000000C   25740A25743A       DC8 "%t\012%t:\012%s"
   \              0A257300    
   \   00000016   0000               DC8 0, 0
    192          const POPUP_DESC popup=
   \                     popup:
   \   00000018   08000000....       DC32 8, popup_onkey, popup_ghook, 0H, popup_softkeys, popup_skt, 1
   \              ............
   \              00000000....
   \              ............
   \              01000000    
   \   00000034   FFFFFF7F....       DC32 2147483647, pp_incoming_icons, 0, 4, 100, 101, 0
   \              ....00000000
   \              040000006400
   \              000065000000
   \              00000000    
    193          {
    194            8,
    195            popup_onkey,
    196            popup_ghook,
    197            NULL,
    198            popup_softkeys,
    199            &popup_skt,
    200            0x1,
    201            LGP_NULL,
    202            pp_incoming_icons,//popup_icons,
    203            0,
    204            FONT_MEDIUM,
    205            100,
    206            101,
    207            0
    208          };
    209          int ShowMSG_report(void *dlg_csm, SMS_DATA *sd);

   \                                 In segment CODE, align 4, keep-with-next
    210          int StartIncomingWin(void *dlg_csm)
    211          {
   \                     StartIncomingWin:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    212            SMS_DATA *sd;
    213            WSHDR *ws;
    214          //  WSHDR wsloc, *wn;
    215          //  unsigned short wsb[150];
    216            POPUP_DESC *pd;
    217            CLIST *cl;
    218            const char *melody_filepath;
    219            extern unsigned int DlgCsmIDs[]; //main.c
    220            extern int IsNoDlg(unsigned int *id_pool); //main.c
    221            //if(IsNoDlg(DlgCsmIDs))
    222            //  sd=GetTheLastNew(1);
    223            //else
    224            //{
    225            //  readAllSMS();
    226            //  sd=GetTheLastNew(0);
    227            //}
    228            sd=GetTheLastNew(0);
   \   00000008   0000A0E3           MOV      R0,#+0
   \   0000000C   ........           _BLF     GetTheLastNew,??GetTheLastNew??rA
   \   00000010   0090B0E1           MOVS     R9,R0
    229            if(!sd) return 0;
   \   00000014   0100001A           BNE      ??StartIncomingWin_0
   \                     ??StartIncomingWin_1:
   \   00000018   0000A0E3           MOV      R0,#+0
   \   0000001C   F087BDE8           POP      {R4-R10,PC}
    230            if(!CFG_NOTIFY_TIME) return 0;
   \                     ??StartIncomingWin_0:
   \   00000020   8C019FE5           LDR      R0,??StartIncomingWin_2  ;; CFG_NOTIFY_TIME
   \   00000024   005090E5           LDR      R5,[R0, #+0]
   \   00000028   000055E3           CMP      R5,#+0
   \   0000002C   F9FFFF0A           BEQ      ??StartIncomingWin_1
    231            if((sd->msg_type&ISREPORT)) return (ShowMSG_report(dlg_csm, sd));
   \   00000030   180099E5           LDR      R0,[R9, #+24]
   \   00000034   020010E3           TST      R0,#0x2
   \   00000038   0300000A           BEQ      ??StartIncomingWin_3
   \   0000003C   0910A0E1           MOV      R1,R9
   \   00000040   0400A0E1           MOV      R0,R4
   \   00000044   ........           BL       ShowMSG_report
   \   00000048   F087BDE8           POP      {R4-R10,PC}
    232            ws=AllocWS(150);
    233          //  wn=CreateLocalWS(&wsloc,wsb,150);
    234          #ifndef LANG_CN
    235            cl=FindClByNum(sd->Number);
    236            if(cl)
   \                     ??StartIncomingWin_3:
   \   0000004C   64719FE5           LDR      R7,??StartIncomingWin_2+0x4  ;; `?<Constant "%t\\n%t:\\n%w">`
   \   00000050   64819FE5           LDR      R8,??StartIncomingWin_2+0x8  ;; lgp
   \   00000054   9600A0E3           MOV      R0,#+150
   \   00000058   250100EF           SWI      +293
   \   0000005C   0060A0E1           MOV      R6,R0
   \   00000060   240089E2           ADD      R0,R9,#+36
   \   00000064   ........           _BLF     FindClByNum,??FindClByNum??rA
   \   00000068   00A0B0E1           MOVS     R10,R0
   \   0000006C   0500000A           BEQ      ??StartIncomingWin_4
    237            {
    238              wsprintf(ws, "%t\n%t:\n%w", lgp.LGP_NEW_MSG, lgp.LGP_FROM, cl->name);
   \   00000070   04009AE5           LDR      R0,[R10, #+4]
   \   00000074   0710A0E1           MOV      R1,R7
   \   00000078   01002DE9           PUSH     {R0}
   \   0000007C   703098E5           LDR      R3,[R8, #+112]
   \   00000080   6C2098E5           LDR      R2,[R8, #+108]
   \   00000084   040000EA           B        ??StartIncomingWin_5
    239            }
    240            else
    241            {
    242              wsprintf(ws, "%t\n%t:\n%s", lgp.LGP_NEW_MSG, lgp.LGP_FROM, sd->Number);
   \                     ??StartIncomingWin_4:
   \   00000088   240089E2           ADD      R0,R9,#+36
   \   0000008C   01002DE9           PUSH     {R0}
   \   00000090   703098E5           LDR      R3,[R8, #+112]
   \   00000094   6C2098E5           LDR      R2,[R8, #+108]
   \   00000098   0C1087E2           ADD      R1,R7,#+12
   \                     ??StartIncomingWin_5:
   \   0000009C   0600A0E1           MOV      R0,R6
   \   000000A0   240100EF           SWI      +292
   \   000000A4   04D08DE2           ADD      SP,SP,#+4
    243            }
    244          #else
    245            char num[32];
    246            int is_fetion=0;
    247            WSHDR csloc, *cs;
    248            unsigned short csb[30];
    249            cs=CreateLocalWS(&csloc,csb,30);
    250            if(!strncmp(num_fetion, sd->Number, 5)) is_fetion=1;
    251            strcpy(num, is_fetion?(sd->Number+5):sd->Number);
    252            cl=FindClByNum(num);
    253            GetProvAndCity(cs->wsbody, num);
    254            if(cl)
    255            {
    256              if(is_fetion) wsprintf(ws, "%t\n%t:\n%w (%t)\n%w", lgp.LGP_NEW_MSG, lgp.LGP_FROM, cl->name, lgp.LGP_FETION, cs);
    257              else wsprintf(ws, "%t\n%t:\n%w\n%w", lgp.LGP_NEW_MSG, lgp.LGP_FROM, cl->name, cs);
    258            }
    259            else
    260            {
    261              wsprintf(ws, "%t\n%t:\n%s\n%w", lgp.LGP_NEW_MSG, lgp.LGP_FROM, sd->Number, cs);
    262            }
    263          #endif
    264            //---------------------- notify
    265            TempLightOn(3, 0x7FFF);
   \   000000A8   FF10A0E3           MOV      R1,#+255
   \   000000AC   7F1C81E3           ORR      R1,R1,#0x7F00
   \   000000B0   0300A0E3           MOV      R0,#+3
   \   000000B4   440000EF           SWI      +68
    266            if(CFG_NOTIFY_TIME && !IsCalling())
   \   000000B8   6E0000EF           SWI      +110
   \   000000BC   000050E3           CMP      R0,#+0
   \   000000C0   2800001A           BNE      ??StartIncomingWin_6
    267            {
    268              SetSoundVibraByProfile();
    269              if(!cl || !cl->sms_melody_filepath) melody_filepath=CFG_SOUND_PATH;
    270              else melody_filepath=cl->sms_melody_filepath;
    271              if(CFG_ENA_SOUND&& sound_vol && !(*(RamRingtoneStatus())) && IsFileExist(melody_filepath))
   \   000000C4   ........           LDR      R9,??DataTable5  ;; PLAY_ID
   \   000000C8   ........           BL       SetSoundVibraByProfile
   \   000000CC   ........           LDR      R0,??DataTable6  ;; CFG_ENA_SOUND
   \   000000D0   00005AE3           CMP      R10,#+0
   \   000000D4   1CA09A15           LDRNE    R10,[R10, #+28]
   \   000000D8   000090E5           LDR      R0,[R0, #+0]
   \   000000DC   00005A13           CMPNE    R10,#+0
   \   000000E0   D8A09F05           LDREQ    R10,??StartIncomingWin_2+0xC  ;; CFG_SOUND_PATH
   \   000000E4   000050E3           CMP      R0,#+0
   \   000000E8   08009915           LDRNE    R0,[R9, #+8]
   \   000000EC   00005013           CMPNE    R0,#+0
   \   000000F0   1A00000A           BEQ      ??StartIncomingWin_7
   \   000000F4   CB8000EF           SWI      +32971
   \   000000F8   0000D0E5           LDRB     R0,[R0, #+0]
   \   000000FC   000050E3           CMP      R0,#+0
   \   00000100   1600001A           BNE      ??StartIncomingWin_7
   \   00000104   0A00A0E1           MOV      R0,R10
   \   00000108   ........           _BLF     IsFileExist,??IsFileExist??rA
   \   0000010C   000050E3           CMP      R0,#+0
   \   00000110   1200000A           BEQ      ??StartIncomingWin_7
    272              {
    273                if(GetPlayStatus()) MPlayer_Stop();
   \   00000114   F80100EF           SWI      +504
   \   00000118   000050E3           CMP      R0,#+0
   \   0000011C   0A00000A           BEQ      ??StartIncomingWin_8
   \   00000120   E18000EF           SWI      +32993
   \   00000124   0F10A0E3           MOV      R1,#+15
   \   00000128   02002DE9           PUSH     {R1}
   \   0000012C   003090E5           LDR      R3,[R0, #+0]
   \   00000130   0020A0E3           MOV      R2,#+0
   \   00000134   0900A0E3           MOV      R0,#+9
   \   00000138   5310A0E3           MOV      R1,#+83
   \   0000013C   801C81E3           ORR      R1,R1,#0x8000
   \   00000140   420C80E3           ORR      R0,R0,#0x4200
   \   00000144   000100EF           SWI      +256
   \   00000148   04D08DE2           ADD      SP,SP,#+4
    274                if(!PLAY_ID)
   \                     ??StartIncomingWin_8:
   \   0000014C   F000D9E1           LDRSH    R0,[R9, #+0]
   \   00000150   000050E3           CMP      R0,#+0
   \   00000154   0100001A           BNE      ??StartIncomingWin_7
    275                {
    276          	Play(melody_filepath);
   \   00000158   0A00A0E1           MOV      R0,R10
   \   0000015C   ........           BL       Play
    277                }
    278              }
    279              SetVibration(vibra_power);
   \                     ??StartIncomingWin_7:
   \   00000160   040099E5           LDR      R0,[R9, #+4]
   \   00000164   7C0000EF           SWI      +124
    280            }
    281            //---------------------
    282          /*  if(sd)
    283            {
    284          #ifdef NO_CS 
    285              if(findNameByNum(wn, sd->Number))
    286                wsprintf(ws, "%t\n%t:\n%w", lgp.LGP_NEW_MSG, lgp.LGP_FROM, wn);
    287              else
    288                wsprintf(ws, "%t\n%t:\n%s", lgp.LGP_NEW_MSG, lgp.LGP_FROM, sd->Number);
    289          #else
    290              char num[32];
    291              int is_fetion=0;
    292              if(!strncmp(num_fetion, sd->Number, 5)) is_fetion=1;
    293              strcpy(num, is_fetion?(sd->Number+5):sd->Number);
    294              GetProvAndCity(cs->wsbody, num);
    295              if(findNameByNum(wn, is_fetion?(sd->Number+5):sd->Number))
    296              {
    297                if(is_fetion) wsprintf(ws, "%t\n%t:\n%w (%t)\n%w", lgp.LGP_NEW_MSG, lgp.LGP_FROM, wn, lgp.LGP_FETION, cs);
    298                else wsprintf(ws, "%t\n%t:\n%w\n%w", lgp.LGP_NEW_MSG, lgp.LGP_FROM, wn, cs);
    299              }
    300              else
    301                wsprintf(ws, "%t\n%t:\n%s\n%w", lgp.LGP_NEW_MSG, lgp.LGP_FROM, sd->Number, cs);
    302          #endif
    303            }*/
    304            pd=malloc(sizeof(POPUP_DESC));
   \                     ??StartIncomingWin_6:
   \   00000168   3800A0E3           MOV      R0,#+56
   \   0000016C   140000EF           SWI      +20
   \   00000170   0090A0E1           MOV      R9,R0
    305            memcpy(pd, &popup, sizeof(POPUP_DESC));
   \   00000174   3820A0E3           MOV      R2,#+56
   \   00000178   181087E2           ADD      R1,R7,#+24
   \   0000017C   1E0100EF           SWI      +286
    306            pd->time=CFG_NOTIFY_TIME*1300; //1300=1s
   \   00000180   1400A0E3           MOV      R0,#+20
   \   00000184   500E80E3           ORR      R0,R0,#0x500
   \   00000188   900501E0           MUL      R1,R0,R5
    307            UpdateDlgCsmName(dlg_csm, lgp.LGP_NEW_MSG);
   \   0000018C   0400A0E1           MOV      R0,R4
   \   00000190   341089E5           STR      R1,[R9, #+52]
   \   00000194   6C1098E5           LDR      R1,[R8, #+108]
   \   00000198   ........           _BLF     UpdateDlgCsmName,??UpdateDlgCsmName??rA
    308            return (CreatePopupGUI_ws(1, dlg_csm, pd, ws));
   \   0000019C   0630A0E1           MOV      R3,R6
   \   000001A0   0920A0E1           MOV      R2,R9
   \   000001A4   0410A0E1           MOV      R1,R4
   \   000001A8   0100A0E3           MOV      R0,#+1
   \   000001AC   AA0200EF           SWI      +682
   \   000001B0   F087BDE8           POP      {R4-R10,PC}      ;; return
   \                     ??StartIncomingWin_2:
   \   000001B4   ........           DC32     CFG_NOTIFY_TIME
   \   000001B8   ........           DC32     `?<Constant "%t\\n%t:\\n%w">`
   \   000001BC   ........           DC32     lgp
   \   000001C0   ........           DC32     CFG_SOUND_PATH
    309          }
    310          

   \                                 In segment DATA_I, align 4, align-sorted
    311          SOFTKEY_DESC msg_popup_sk[]=
   \                     msg_popup_sk:
   \   00000000                      DS8 24
   \   00000018                      REQUIRE `?<Initializer for msg_popup_sk>`
    312          {
    313            {0x0018,0x0000,(int)LGP_NULL},
    314            {0x0001,0x0000,(int)LGP_NONE_PIC},
    315            {0x003D,0x0000,LGP_DOIT_PIC}
    316          };

   \                                 In segment DATA_C, align 4, align-sorted
    317          const SOFTKEYSTAB msg_popup_skt={msg_popup_sk, 0};
   \                     msg_popup_skt:
   \   00000000   ........0000       DC32 msg_popup_sk, 0
   \              0000        
    318          

   \                                 In segment CODE, align 4, keep-with-next
    319          int msg_popup_onkey(void *data, GUI_MSG *msg)
    320          {
    321            if((msg->keys==0x18)||(msg->keys==0x3D))
   \                     msg_popup_onkey:
   \   00000000   F200D1E1           LDRSH    R0,[R1, #+2]
   \   00000004   180050E3           CMP      R0,#+24
   \   00000008   3D005013           CMPNE    R0,#+61
    322              return 1;
   \   0000000C   0100A003           MOVEQ    R0,#+1
   \   00000010   1EFF2F01           BXEQ     LR
    323            return 0;
   \   00000014   0000A0E3           MOV      R0,#+0
   \   00000018   1EFF2FE1           BX       LR               ;; return
    324          }

   \                                 In segment DATA_C, align 4, align-sorted
    325          const POPUP_DESC msg_popup=
   \                     msg_popup:
   \   00000000   08000000....       DC32 8, msg_popup_onkey, 0H, 0H, popup_softkeys, msg_popup_skt, 1
   \              ....00000000
   \              00000000....
   \              ............
   \              01000000    
   \   0000001C   FFFFFF7F....       DC32 2147483647, pp_showmsg_icons, 0, 4, 100, 101, 2000
   \              ....00000000
   \              040000006400
   \              000065000000
   \              D0070000    
    326          {
    327            8,
    328            msg_popup_onkey,
    329            NULL,
    330            NULL,
    331            popup_softkeys,
    332            &msg_popup_skt,
    333            0x1,
    334            LGP_NULL,
    335            pp_showmsg_icons,
    336            0, // pos, 0:left, 1:top mid, 2:top right, 3: top left
    337            FONT_MEDIUM,
    338            100,
    339            101,
    340            0x7D0 //flag2 ? auto off time?
    341          };
    342          
    343          /*
    344          // pos, 0:left, 1:top mid, 2:top right, 3: top left
    345          // p, t
    346          0: left, right
    347          1: mid top, left
    348          2: top right, left top
    349          3: top left, left top
    350          */

   \                                 In segment CODE, align 4, keep-with-next
    351          int ShowMSG_ws(int flag, WSHDR *msg)
    352          {
    353            return (CreatePopupGUI_ws(flag, 0, &msg_popup, msg));
   \                     ShowMSG_ws:
   \   00000000   10209FE5           LDR      R2,??ShowMSG_ws_0  ;; msg_popup
   \   00000004   00402DE9           PUSH     {LR}
   \   00000008   0130A0E1           MOV      R3,R1
   \   0000000C   0010A0E3           MOV      R1,#+0
   \   00000010   AA0200EF           SWI      +682
   \   00000014   0080BDE8           POP      {PC}             ;; return
   \                     ??ShowMSG_ws_0:
   \   00000018   ........           DC32     msg_popup
    354          }
    355          
    356          

   \                                 In segment CODE, align 4, keep-with-next
    357          int offproc_popup_onkey(void *data, GUI_MSG *msg)
    358          {
    359            if((msg->keys==0x18)||(msg->keys==0x3D))
   \                     offproc_popup_onkey:
   \   00000000   F200D1E1           LDRSH    R0,[R1, #+2]
   \   00000004   180050E3           CMP      R0,#+24
   \   00000008   3D005013           CMPNE    R0,#+61
    360              return 1;
   \   0000000C   0100A003           MOVEQ    R0,#+1
   \   00000010   1EFF2F01           BXEQ     LR
    361            return 0;
   \   00000014   0000A0E3           MOV      R0,#+0
   \   00000018   1EFF2FE1           BX       LR               ;; return
    362          }

   \                                 In segment CODE, align 4, keep-with-next
    363          void offproc_popup_ghook(void *data, int cmd)
    364          {
   \                     offproc_popup_ghook:
   \   00000000   00402DE9           PUSH     {LR}
    365            if(cmd==3)
   \   00000004   030051E3           CMP      R1,#+3
   \   00000008   0080BD18           POPNE    {PC}
    366            {
    367              void *proc=GetPopupUserPointer(data);
   \   0000000C   AB0200EF           SWI      +683
    368              ((void (*)(void))proc)();
   \   00000010   30FF2FE1           BLX      R0
    369            }
    370          }
   \   00000014   0080BDE8           POP      {PC}             ;; return

   \                                 In segment DATA_C, align 4, align-sorted
    371          const POPUP_DESC offproc_popup=
   \                     offproc_popup:
   \   00000000   00000000....       DC32 0, offproc_popup_onkey, offproc_popup_ghook, 0H, popup_softkeys
   \              ............
   \              00000000....
   \              ....        
   \   00000014   ........0100       DC32 msg_popup_skt, 1, 2147483647, pp_showmsg_icons, 0, 4, 100, 101
   \              0000FFFFFF7F
   \              ........0000
   \              000004000000
   \              640000006500
   \              0000        
   \   00000034   D0070000           DC32 2000
    372          {
    373            0,
    374            offproc_popup_onkey,
    375            offproc_popup_ghook,
    376            NULL,
    377            popup_softkeys,
    378            &msg_popup_skt,
    379            0x1,
    380            LGP_NULL,
    381            pp_showmsg_icons,
    382            0,
    383            FONT_MEDIUM,
    384            100,
    385            101,
    386            0x7D0 //flag2 ? auto off time?
    387          };
    388          

   \                                 In segment CODE, align 4, keep-with-next
    389          int ShowMSG_offproc(int flag, const char *msg, void proc(void))
    390          {
   \                     ShowMSG_offproc:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   02C0A0E1           MOV      R12,R2
    391            return (CreatePopupGUI(flag, (void *)proc, &offproc_popup, (int)msg));
   \   00000008   0C209FE5           LDR      R2,??ShowMSG_offproc_0  ;; offproc_popup
   \   0000000C   0130A0E1           MOV      R3,R1
   \   00000010   0C10A0E1           MOV      R1,R12
   \   00000014   A90200EF           SWI      +681
   \   00000018   0080BDE8           POP      {PC}             ;; return
   \                     ??ShowMSG_offproc_0:
   \   0000001C   ........           DC32     offproc_popup
    392          }
    393          

   \                                 In segment DATA_C, align 4, align-sorted
    394          const POPUP_DESC msg_noff_popup=
   \                     msg_noff_popup:
   \   00000000   00000000....       DC32 0, msg_popup_onkey, 0H, 0H, popup_softkeys, msg_popup_skt, 1
   \              ....00000000
   \              00000000....
   \              ............
   \              01000000    
   \   0000001C   FFFFFF7F0000       DC32 2147483647, 0H, 0, 4, 100, 101, 0
   \              000000000000
   \              040000006400
   \              000065000000
   \              00000000    
    395          {
    396            0,
    397            msg_popup_onkey,
    398            NULL,
    399            NULL,
    400            popup_softkeys,
    401            &msg_popup_skt,
    402            0x1,
    403            LGP_NULL,
    404            NULL,
    405            0,
    406            FONT_MEDIUM,
    407            100,
    408            101,
    409            0 //flag2 ? auto off time?
    410          };
    411          

   \                                 In segment CODE, align 4, keep-with-next
    412          int ShowMSG_noff(int flag, const char *msg)
    413          {
    414            return (CreatePopupGUI(flag, 0, &msg_noff_popup, (int)msg));
   \                     ShowMSG_noff:
   \   00000000   10209FE5           LDR      R2,??ShowMSG_noff_0  ;; msg_noff_popup
   \   00000004   00402DE9           PUSH     {LR}
   \   00000008   0130A0E1           MOV      R3,R1
   \   0000000C   0010A0E3           MOV      R1,#+0
   \   00000010   A90200EF           SWI      +681
   \   00000014   0080BDE8           POP      {PC}             ;; return
   \                     ??ShowMSG_noff_0:
   \   00000018   ........           DC32     msg_noff_popup
    415          }
    416          

   \                                 In segment CODE, align 4, keep-with-next
    417          void report_popup_ghook(void *data, int cmd)
    418          {
   \                     report_popup_ghook:
   \   00000000   10402DE9           PUSH     {R4,LR}
    419            if(cmd==3)
   \   00000004   030051E3           CMP      R1,#+3
   \   00000008   1080BD18           POPNE    {R4,PC}
    420            {
    421              SMS_DATA *sd=GetPopupUserPointer(data);
   \   0000000C   AB0200EF           SWI      +683
   \   00000010   0040A0E1           MOV      R4,R0
    422              if(CFG_ENA_AUTO_DEL_RP && IsSdInList(sd) && deleteDat(sd, 0))
   \   00000014   38009FE5           LDR      R0,??report_popup_ghook_0  ;; CFG_ENA_AUTO_DEL_RP
   \   00000018   000090E5           LDR      R0,[R0, #+0]
   \   0000001C   000050E3           CMP      R0,#+0
   \   00000020   1080BD08           POPEQ    {R4,PC}
   \   00000024   0400A0E1           MOV      R0,R4
   \   00000028   ........           _BLF     IsSdInList,??IsSdInList??rA
   \   0000002C   000050E3           CMP      R0,#+0
   \   00000030   1080BD08           POPEQ    {R4,PC}
   \   00000034   0010A0E3           MOV      R1,#+0
   \   00000038   0400A0E1           MOV      R0,R4
   \   0000003C   ........           _BLF     deleteDat,??deleteDat??rA
   \   00000040   000050E3           CMP      R0,#+0
   \   00000044   1080BD08           POPEQ    {R4,PC}
    423                delSDList(sd);
   \   00000048   0400A0E1           MOV      R0,R4
   \   0000004C   ........           _BLF     delSDList,??delSDList??rA
    424            }
    425          }
   \   00000050   1080BDE8           POP      {R4,PC}          ;; return
   \                     ??report_popup_ghook_0:
   \   00000054   ........           DC32     CFG_ENA_AUTO_DEL_RP
    426          

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "%w\\n%t:\\n%w">`:
   \   00000000   25770A25743A       DC8 "%w\012%t:\012%w"
   \              0A257700    
   \   0000000A   0000               DC8 0, 0
   \   0000000C   25770A25743A       DC8 "%w\012%t:\012%s"
   \              0A257300    
   \   00000016   0000               DC8 0, 0
    427          const POPUP_DESC msg_report=
   \                     msg_report:
   \   00000018   00000000....       DC32 0, msg_popup_onkey, report_popup_ghook, 0H, popup_softkeys
   \              ............
   \              00000000....
   \              ....        
   \   0000002C   ........0100       DC32 msg_popup_skt, 1, 2147483647, 0H, 0, 4, 100, 101, 2000
   \              0000FFFFFF7F
   \              000000000000
   \              000004000000
   \              640000006500
   \              0000D0070000
    428          {
    429            0,
    430            msg_popup_onkey,
    431            report_popup_ghook,
    432            NULL,
    433            popup_softkeys,
    434            &msg_popup_skt,
    435            0x1,
    436            LGP_NULL,
    437            NULL,
    438            0,
    439            FONT_MEDIUM,
    440            100,
    441            101,
    442            0x7D0 //flag2 ? auto off time?
    443          };
    444          

   \                                 In segment CODE, align 4, keep-with-next
    445          int ShowMSG_report(void *dlg_csm, SMS_DATA *sd)
    446          {
   \                     ShowMSG_report:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   \   00000004   50DF4DE2           SUB      SP,SP,#+320
    447            WSHDR wsloc, *wn;
    448            unsigned short wsb[150];
    449            WSHDR *ws=AllocWS(256);
    450            wn=CreateLocalWS(&wsloc,wsb,150);
    451          #ifdef NO_CS 
    452            if(findNameByNum(wn, sd->Number))
   \   00000008   94809FE5           LDR      R8,??ShowMSG_report_0  ;; `?<Constant "%w\\n%t:\\n%w">`
   \   0000000C   94909FE5           LDR      R9,??ShowMSG_report_0+0x4  ;; lgp
   \   00000010   0040A0E1           MOV      R4,R0
   \   00000014   0150A0E1           MOV      R5,R1
   \   00000018   400FA0E3           MOV      R0,#+256
   \   0000001C   250100EF           SWI      +293
   \   00000020   0060A0E1           MOV      R6,R0
   \   00000024   9620A0E3           MOV      R2,#+150
   \   00000028   0D10A0E1           MOV      R1,SP
   \   0000002C   4B0F8DE2           ADD      R0,SP,#+300
   \   00000030   270100EF           SWI      +295
   \   00000034   0070A0E1           MOV      R7,R0
   \   00000038   241085E2           ADD      R1,R5,#+36
   \   0000003C   ........           _BLF     findNameByNum,??findNameByNum??rA
   \   00000040   000050E3           CMP      R0,#+0
   \   00000044   0400000A           BEQ      ??ShowMSG_report_1
    453              wsprintf(ws, "%w\n%t:\n%w", sd->SMS_TEXT, lgp.LGP_FROM, wn);
   \   00000048   80002DE9           PUSH     {R7}
   \   0000004C   703099E5           LDR      R3,[R9, #+112]
   \   00000050   642095E5           LDR      R2,[R5, #+100]
   \   00000054   0810A0E1           MOV      R1,R8
   \   00000058   040000EA           B        ??ShowMSG_report_2
    454            else
    455              wsprintf(ws, "%w\n%t:\n%s", sd->SMS_TEXT, lgp.LGP_FROM, sd->Number);
   \                     ??ShowMSG_report_1:
   \   0000005C   240085E2           ADD      R0,R5,#+36
   \   00000060   01002DE9           PUSH     {R0}
   \   00000064   703099E5           LDR      R3,[R9, #+112]
   \   00000068   642095E5           LDR      R2,[R5, #+100]
   \   0000006C   0C1088E2           ADD      R1,R8,#+12
   \                     ??ShowMSG_report_2:
   \   00000070   0600A0E1           MOV      R0,R6
   \   00000074   240100EF           SWI      +292
   \   00000078   04D08DE2           ADD      SP,SP,#+4
    456          #else
    457            char num[32];
    458            int is_fetion=0;
    459            WSHDR csloc, *cs;
    460            unsigned short csb[30];
    461            cs=CreateLocalWS(&csloc,csb,30);
    462            if(!strncmp(num_fetion, sd->Number, 5)) is_fetion=1;
    463            strcpy(num, sd->Number);
    464            GetProvAndCity(cs->wsbody, num);
    465            if(findNameByNum(wn, is_fetion?(sd->Number+5):sd->Number))
    466            {
    467              if(is_fetion) wsprintf(ws, "%w\n%t:\n%w(%t)\n%w", sd->SMS_TEXT, lgp.LGP_FROM, wn, lgp.LGP_FETION, cs);
    468              else wsprintf(ws, "%w\n%t:\n%w\n%w", sd->SMS_TEXT, lgp.LGP_FROM, wn, cs);
    469            }
    470            else
    471              wsprintf(ws, "%w\n%t:\n%s\n%w", sd->SMS_TEXT, lgp.LGP_FROM, sd->Number, cs);
    472          #endif
    473            UpdateDlgCsmName(dlg_csm, lgp.LGP_MSG_REPORT);
   \   0000007C   DC1099E5           LDR      R1,[R9, #+220]
   \   00000080   0400A0E1           MOV      R0,R4
   \   00000084   ........           _BLF     UpdateDlgCsmName,??UpdateDlgCsmName??rA
    474            return (CreatePopupGUI_ws(0, sd, &msg_report, ws));
   \   00000088   0630A0E1           MOV      R3,R6
   \   0000008C   182088E2           ADD      R2,R8,#+24
   \   00000090   0510A0E1           MOV      R1,R5
   \   00000094   0000A0E3           MOV      R0,#+0
   \   00000098   AA0200EF           SWI      +682
   \   0000009C   50DF8DE2           ADD      SP,SP,#+320
   \   000000A0   F083BDE8           POP      {R4-R9,PC}       ;; return
   \                     ??ShowMSG_report_0:
   \   000000A4   ........           DC32     `?<Constant "%w\\n%t:\\n%w">`
   \   000000A8   ........           DC32     lgp
    475          }

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable5:
   \   00000000   ........           DC32     PLAY_ID

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable6:
   \   00000000   ........           DC32     CFG_ENA_SOUND

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for popup_sk>`:
   \   00000000   18000000           DC16 24, 0
   \   00000004   FFFFFF7F           DC32 2147483647
   \   00000008   01000000           DC16 1, 0
   \   0000000C   FFFFFF7F           DC32 2147483647
   \   00000010   3D000000           DC16 61, 0
   \   00000014   FBC0FF7F           DC32 2147467515

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for pp_incoming_icons>`:
   \   00000000   820200000000       DC32 642, 0
   \              0000        

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for pp_showmsg_icons>`:
   \   00000000   2C0500000000       DC32 1324, 0
   \              0000        

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for msg_popup_sk>`:
   \   00000000   18000000           DC16 24, 0
   \   00000004   FFFFFF7F           DC32 2147483647
   \   00000008   01000000           DC16 1, 0
   \   0000000C   F8C0FF7F           DC32 2147467512
   \   00000010   3D000000           DC16 61, 0
   \   00000014   FBC0FF7F           DC32 2147467515

   Maximum stack usage in bytes:

     Function               CSTACK
     --------               ------
     Play                     744
     SetSoundVibraByProfile     4
     ShowMSG_noff               4
     ShowMSG_offproc            4
     ShowMSG_report           352
     ShowMSG_ws                 4
     StartIncomingWin          36
     msg_popup_onkey            0
     offproc_popup_ghook        4
     offproc_popup_onkey        0
     popup_ghook               16
     popup_onkey               12
     report_popup_ghook         8


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     PLAY_ID                          12
     SetSoundVibraByProfile          252
     Play                            260
     popup_softkeys                   12
     popup_sk                         24
     popup_skt                         8
     pp_incoming_icons                 8
     pp_showmsg_icons                  8
     popup_onkey                     248
     popup_ghook                     148
     ?<Constant "%t\n%t:\n%w">        80
     StartIncomingWin                452
     msg_popup_sk                     24
     msg_popup_skt                     8
     msg_popup_onkey                  28
     msg_popup                        56
     ShowMSG_ws                       28
     offproc_popup_onkey              28
     offproc_popup_ghook              24
     offproc_popup                    56
     ShowMSG_offproc                  32
     msg_noff_popup                   56
     ShowMSG_noff                     28
     report_popup_ghook               88
     ?<Constant "%w\n%t:\n%w">        80
     ShowMSG_report                  172
     ??DataTable5                      4
     ??DataTable6                      4
     ?<Initializer for popup_sk>      24
     ?<Initializer for pp_incoming_icons>
                                       8
     ?<Initializer for pp_showmsg_icons>
                                       8
     ?<Initializer for msg_popup_sk>
                                      24
      Others                         184

 
 1 956 bytes in segment CODE
   356 bytes in segment DATA_C
    64 bytes in segment DATA_I
    64 bytes in segment DATA_ID
    12 bytes in segment DATA_Z
    24 bytes in segment INITTAB
 
 1 796 bytes of CODE  memory (+ 184 bytes shared)
   420 bytes of CONST memory
    76 bytes of DATA  memory

Errors: none
Warnings: none
