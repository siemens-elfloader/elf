##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION    02/Dec/2008  15:15:28 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  D:\Pasha\elf\SVN2\SndDemon\speech_txt.c              #
#    Command line    =  D:\Pasha\elf\SVN2\SndDemon\speech_txt.c -D ELKA -D   #
#                       NEWSGOLD --preprocess D:\Pasha\elf\SVN2\SndDemon\Rel #
#                       ease_ELKA\List\ -lC D:\Pasha\elf\SVN2\SndDemon\Relea #
#                       se_ELKA\List\ -o D:\Pasha\elf\SVN2\SndDemon\Release_ #
#                       ELKA\Obj\ -z9 --cpu_mode arm --endian little --cpu   #
#                       ARM7TDMI --stack_align 4 --interwork -e --fpu None   #
#                       --dlib_config "D:\Pasha\Embedded Workbench 4.0       #
#                       Evaluation2\ARM\LIB\dl4tpainl8n.h" -I                #
#                       "D:\Pasha\Embedded Workbench 4.0                     #
#                       Evaluation2\ARM\INC\" --inline_threshold=2           #
#    List file       =  D:\Pasha\elf\SVN2\SndDemon\Release_ELKA\List\speech_ #
#                       txt.lst                                              #
#    Object file     =  D:\Pasha\elf\SVN2\SndDemon\Release_ELKA\Obj\speech_t #
#                       xt.r79                                               #
#                                                                            #
#                                                                            #
##############################################################################

D:\Pasha\elf\SVN2\SndDemon\speech_txt.c
      1          
      2          //#include "swilib3.h"
      3          #include "..\inc\swilib.h"
      4          //#include "speech_txt.h"
      5          //#include "..\inc\mplayer.h"
      6          extern void Send_MPlayer_Command(unsigned short cmd, short substract);
      7          //extern void Send_MPlayer_Command(unsigned short cmd, short substract);
      8          #define PLAYER_TOGGLE	0x11
      9          inline void MPlayer_Toggle2()	{Send_MPlayer_Command(PLAYER_TOGGLE,0);}// Пауза/воспроизведение
     10          
     11          #include "swilib2.h"
     12          #include "speech_txt.h"
     13          #include "some_utils.h"
     14          

   \                                 In segment DATA_Z, align 1, align-sorted
     15            byte gfp=0;
   \                     gfp:
   \   00000000                      DS8 1

   \                                 In segment DATA_Z, align 4, align-sorted
     16           WSHDR* sndPath;
   \                     sndPath:
   \   00000000                      DS8 4
     17            WSHDR* sndFName;
   \                     sndFName:
   \   00000004                      DS8 4
     18          
     19            #define PLAY_CEPID MMI_CEPID

   \                                 In segment DATA_Z, align 4, align-sorted
     20          TDate dt;
     21          TTime tm;
   \                     tm:
   \   00000000                      DS8 8
   \                     dt:
   \   00000008                      DS8 8
     22          
     23          
     24          //--------------------------------------------

   \                                 In segment CODE, align 4, keep-with-next
     25          inline word PlayF3(const char *fpath,const char *fname,int vol ){
   \                     PlayF3:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   24D04DE2           SUB      SP,SP,#+36
   \   00000008   0060A0E1           MOV      R6,R0
   \   0000000C   0250A0E1           MOV      R5,R2
     26            PLAYFILE_OPT _sfo1;
     27            word i;
     28            str_2ws(sndFName,fname,256);
   \   00000010   E8409FE5           LDR      R4,??PlayF3_0    ;; sndPath
   \   00000014   402FA0E3           MOV      R2,#+256
   \   00000018   040094E5           LDR      R0,[R4, #+4]
   \   0000001C   6C0100EF           SWI      +364
     29            str_2ws(sndPath,fpath,256);
   \   00000020   402FA0E3           MOV      R2,#+256
   \   00000024   0610A0E1           MOV      R1,R6
   \   00000028   000094E5           LDR      R0,[R4, #+0]
   \   0000002C   6C0100EF           SWI      +364
     30          //  if (1/*!IsCalling()*/) //very warining!!!!!!
     31          
     32            if (!IsCalling())
   \   00000030   6E0000EF           SWI      +110
   \   00000034   000050E3           CMP      R0,#+0
   \   00000038   2700001A           BNE      ??PlayF3_1
     33            {
     34              zeromem(&_sfo1,sizeof(PLAYFILE_OPT));
   \   0000003C   2410A0E3           MOV      R1,#+36
   \   00000040   0D00A0E1           MOV      R0,SP
   \   00000044   1D0100EF           SWI      +285
     35              _sfo1.repeat_num=1;
   \   00000048   0100A0E3           MOV      R0,#+1
   \   0000004C   B000CDE1           STRH     R0,[SP, #+0]
     36              _sfo1.time_between_play=0;
   \   00000050   0010A0E3           MOV      R1,#+0
   \   00000054   04108DE5           STR      R1,[SP, #+4]
     37              _sfo1.play_first=0;
   \   00000058   08108DE5           STR      R1,[SP, #+8]
     38          
     39          #ifdef NEWSGOLD
     40              _sfo1.unk6=1;
   \   0000005C   14008DE5           STR      R0,[SP, #+20]
     41              _sfo1.unk7=1;
   \   00000060   18008DE5           STR      R0,[SP, #+24]
     42              _sfo1.unk9=2;
   \   00000064   0210A0E3           MOV      R1,#+2
   \   00000068   20108DE5           STR      R1,[SP, #+32]
     43          
     44              /* parametrs when called tel
     45                  _sfo1.unk6=1;
     46              _sfo1.unk7=1;
     47          //    _sfo1.unk11=1;
     48              cepid=4206
     49          */
     50              if (vol<7)_sfo1.volume=vol;    
   \   0000006C   070055E3           CMP      R5,#+7
   \   00000070   0C508DB5           STRLT    R5,[SP, #+12]
   \   00000074   030000BA           BLT      ??PlayF3_2
     51          ///      else  _sfo1.volume=GetValFromCache("1:\\default\\setup.pd","AUDIO_SYSTEMVOLUME")+vol-8;
     52                else  _sfo1.volume=GetValFromCache()+vol-8;      
   \   00000078   ........           _BLF     GetValFromCache,??GetValFromCache??rA
   \   0000007C   000085E0           ADD      R0,R5,R0
   \   00000080   080040E2           SUB      R0,R0,#+8
   \   00000084   0C008DE5           STR      R0,[SP, #+12]
     53              if (_sfo1.volume<0) _sfo1.volume=0;
   \                     ??PlayF3_2:
   \   00000088   0C009DE5           LDR      R0,[SP, #+12]
   \   0000008C   000050E3           CMP      R0,#+0
   \   00000090   1800004A           BMI      ??PlayF3_3
     54              if (_sfo1.volume>6)_sfo1.volume=6;
   \   00000094   070050E3           CMP      R0,#+7
   \   00000098   140000BA           BLT      ??PlayF3_4
   \   0000009C   0610A0E3           MOV      R1,#+6
   \   000000A0   0C108DE5           STR      R1,[SP, #+12]
     55              if (!_sfo1.volume)return 0;
     56              i=PlayFile(0x10, sndPath, sndFName,PLAY_CEPID , MSG_PLAYFILE_REPORT, &_sfo1);    
   \                     ??PlayF3_5:
   \   000000A4   0D00A0E1           MOV      R0,SP
   \   000000A8   01002DE9           PUSH     {R0}
   \   000000AC   BC00A0E3           MOV      R0,#+188
   \   000000B0   700C80E3           ORR      R0,R0,#0x7000
   \   000000B4   01002DE9           PUSH     {R0}
   \   000000B8   0930A0E3           MOV      R3,#+9
   \   000000BC   423C83E3           ORR      R3,R3,#0x4200
   \   000000C0   042094E5           LDR      R2,[R4, #+4]
   \   000000C4   001094E5           LDR      R1,[R4, #+0]
   \   000000C8   1000A0E3           MOV      R0,#+16
   \   000000CC   4A0000EF           SWI      +74
   \   000000D0   0078A0E1           MOV      R7,R0, LSL #+16
   \   000000D4   2778A0E1           MOV      R7,R7, LSR #+16
   \   000000D8   08D08DE2           ADD      SP,SP,#+8        ;; stack cleaning
     57              //warning  high priority
     58          
     59          //    i=PlayFile(0x0, sndPath, sndFName,PLAY_CEPID, MSG_PLAYFILE_REPORT, &_sfo1);        
     60          
     61          #else
     62              _sfo1.volume=vol;    
     63              _sfo1.unk5=1;    
     64            #ifdef X75
     65              _sfo1.unk4=0x80000000;
     66              i=PlayFile(0xC, sndPath, sndFName, 0, PLAY_CEPID, MSG_PLAYFILE_REPORT, &_sfo1);
     67          //    i=PlayFile(0x0, sndPath, sndFName, 0, PLAY_CEPID, MSG_PLAYFILE_REPORT, &_sfo1);    
     68          
     69             #else    
     70              i=PlayFile(0xC, sndPath, sndFName, PLAY_CEPID, MSG_PLAYFILE_REPORT, &_sfo1);
     71          //    i=PlayFile(0x0, sndPath, sndFName, PLAY_CEPID, MSG_PLAYFILE_REPORT, &_sfo1);    
     72          
     73            #endif
     74              
     75          #endif    
     76            }
     77            return i;
   \                     ??PlayF3_1:
   \   000000DC   0708A0E1           MOV      R0,R7, LSL #+16
   \   000000E0   2008A0E1           MOV      R0,R0, LSR #+16
   \                     ??PlayF3_6:
   \   000000E4   24D08DE2           ADD      SP,SP,#+36       ;; stack cleaning
   \   000000E8   F040BDE8           POP      {R4-R7,LR}
   \   000000EC   1EFF2FE1           BX       LR               ;; return
   \                     ??PlayF3_4:
   \   000000F0   000050E3           CMP      R0,#+0
   \   000000F4   EAFFFF1A           BNE      ??PlayF3_5
   \                     ??PlayF3_3:
   \   000000F8   0000A0E3           MOV      R0,#+0
   \   000000FC   F8FFFFEA           B        ??PlayF3_6
   \                     ??PlayF3_0:
   \   00000100   ........           DC32     sndPath
     78          }
     79          
     80          void SpeechPhrases(char *);
     81          
     82          //-------------------------------------------------------------------

   \                                 In segment CODE, align 4, keep-with-next
     83          void SpeechPhrasesChkNat(char *str){
   \                     SpeechPhrasesChkNat:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
     84          
     85            if (next)
   \   00000008   ........           LDR      R0,??DataTable2  ;; next
   \   0000000C   B000D0E1           LDRH     R0,[R0, #+0]
   \   00000010   000050E3           CMP      R0,#+0
   \   00000014   0000000A           BEQ      ??SpeechPhrasesChkNat_0
     86              PlayMelody_StopPlayback(next);
   \   00000018   260200EF           SWI      +550
     87          
     88          
     89          #ifndef NOHEADSET  
     90            gfp=((GetPlayStatus()==2));
   \                     ??SpeechPhrasesChkNat_0:
   \   0000001C   0050A0E3           MOV      R5,#+0
   \   00000020   F80100EF           SWI      +504
   \   00000024   020050E3           CMP      R0,#+2
   \   00000028   0100A003           MOVEQ    R0,#+1
   \   0000002C   0000A013           MOVNE    R0,#+0
   \   00000030   ........           LDR      R1,??DataTable3  ;; gfp
   \   00000034   0000C1E5           STRB     R0,[R1, #+0]
     91            if (gfp&&spc_ign){gfp=0;return;}
   \   00000038   0000D1E5           LDRB     R0,[R1, #+0]
   \   0000003C   000050E3           CMP      R0,#+0
   \   00000040   0700000A           BEQ      ??SpeechPhrasesChkNat_1
   \   00000044   24009FE5           LDR      R0,??SpeechPhrasesChkNat_2  ;; spc_ign
   \   00000048   000090E5           LDR      R0,[R0, #+0]
   \   0000004C   000050E3           CMP      R0,#+0
   \   00000050   0050C115           STRBNE   R5,[R1, #+0]
   \   00000054   0400001A           BNE      ??SpeechPhrasesChkNat_3
     92            if(gfp!=0){
     93          
     94               MPlayer_Toggle2();
   \   00000058   0010A0E3           MOV      R1,#+0
   \   0000005C   1100A0E3           MOV      R0,#+17
   \   00000060   ........           _BLF     Send_MPlayer_Command,??Send_MPlayer_Command??rA
     95            } 
     96          #endif  
     97            
     98          
     99            
    100            SpeechPhrases(str);
   \                     ??SpeechPhrasesChkNat_1:
   \   00000064   0400A0E1           MOV      R0,R4
   \   00000068   ........           BL       SpeechPhrases
    101          }
   \                     ??SpeechPhrasesChkNat_3:
   \   0000006C   ........           B        ?Subroutine3
   \                     ??SpeechPhrasesChkNat_2:
   \   00000070   ........           DC32     spc_ign

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine3:
   \   00000000   3040BDE8           POP      {R4,R5,LR}
   \   00000004   1EFF2FE1           BX       LR               ;; return
   \                     ??Subroutine3_0:
   \   00000008   ........           DC32     tm
   \   0000000C   ........           DC32     spc_mn
   \   00000010   ........           DC32     spc_en
    102          //-------------------------------------------------------------------

   \                                 In segment CODE, align 4, keep-with-next
    103          void SpeechPhrasesChk(char *str){  
   \                     SpeechPhrasesChk:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    104            GetDateTime (&dt,&tm);
   \   00000008   ........           LDR      R5,??Subroutine3_0  ;; tm
   \   0000000C   0510A0E1           MOV      R1,R5
   \   00000010   080085E2           ADD      R0,R5,#+8
   \   00000014   B40000EF           SWI      +180
   \   00000018   0000D5E5           LDRB     R0,[R5, #+0]
   \   0000001C   ........           LDR      R1,??Subroutine3_0+0x4  ;; spc_mn
   \   00000020   001091E5           LDR      R1,[R1, #+0]
   \   00000024   010050E1           CMP      R0,R1
   \   00000028   0500003A           BCC      ??SpeechPhrasesChk_0
   \   0000002C   ........           LDR      R1,??Subroutine3_0+0x8  ;; spc_en
   \   00000030   001091E5           LDR      R1,[R1, #+0]
   \   00000034   010050E1           CMP      R0,R1
   \   00000038   0100002A           BCS      ??SpeechPhrasesChk_0
    105            if ((tm.hour<spc_mn)||(tm.hour>=spc_en))    return;
    106            SpeechPhrasesChkNat(str);
   \   0000003C   0400A0E1           MOV      R0,R4
   \   00000040   ........           BL       SpeechPhrasesChkNat
    107          }
   \                     ??SpeechPhrasesChk_0:
   \   00000044                      REQUIRE ?Subroutine3
   \   00000044                      ;; // Fall through to label ?Subroutine3
    108          //-------------------------------------------------------------------

   \                                 In segment CODE, align 4, keep-with-next
    109          void SpeechPhrases(char *str){
   \                     SpeechPhrases:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   80D04DE2           SUB      SP,SP,#+128
   \   00000008   0050A0E1           MOV      R5,R0
    110            char tmp[128];
    111            int i;
    112            for (i=0;str[i]!=';'&&(i<strlen (str)) ;i++);
   \   0000000C   0060A0E3           MOV      R6,#+0
   \   00000010   000000EA           B        ??SpeechPhrases_0
   \                     ??SpeechPhrases_1:
   \   00000014   0460A0E1           MOV      R6,R4
   \                     ??SpeechPhrases_0:
   \   00000018   014086E2           ADD      R4,R6,#+1
   \   0000001C   0500D6E7           LDRB     R0,[R6, +R5]
   \   00000020   3B0050E3           CMP      R0,#+59
   \   00000024   0300000A           BEQ      ??SpeechPhrases_2
   \   00000028   0500A0E1           MOV      R0,R5
   \   0000002C   1B0000EF           SWI      +27
   \   00000030   000056E1           CMP      R6,R0
   \   00000034   F6FFFF3A           BCC      ??SpeechPhrases_1
    113            strncpy(tmp,str,i+1);
   \                     ??SpeechPhrases_2:
   \   00000038   0420A0E1           MOV      R2,R4
   \   0000003C   0510A0E1           MOV      R1,R5
   \   00000040   0D00A0E1           MOV      R0,SP
   \   00000044   160100EF           SWI      +278
    114            tmp[i]=0;
   \   00000048   0040A0E3           MOV      R4,#+0
   \   0000004C   0D00A0E1           MOV      R0,SP
   \   00000050   0040C6E7           STRB     R4,[R6, +R0]
    115            strcpy(gbs,(str+i)+1);  
   \   00000054   050086E0           ADD      R0,R6,R5
   \   00000058   011080E2           ADD      R1,R0,#+1
   \   0000005C   60009FE5           LDR      R0,??SpeechPhrases_3  ;; gbs
   \   00000060   1A0000EF           SWI      +26
    116            if ((tmp[0]!='#')&&(next=PlayF3(DEFAULT_DISK ":\\Zbin\\SndDemon",tmp,spc_vol))) {
   \   00000064   ........           LDR      R5,??DataTable2  ;; next
   \   00000068   0000DDE5           LDRB     R0,[SP, #+0]
   \   0000006C   230050E3           CMP      R0,#+35
   \   00000070   0700000A           BEQ      ??SpeechPhrases_4
   \   00000074   4C009FE5           LDR      R0,??SpeechPhrases_3+0x4  ;; spc_vol
   \   00000078   002090E5           LDR      R2,[R0, #+0]
   \   0000007C   0D10A0E1           MOV      R1,SP
   \   00000080   44009FE5           LDR      R0,??SpeechPhrases_3+0x8  ;; `?<Constant "4:\\\\Zbin\\\\SndDemon">`
   \   00000084   ........           _BLF     PlayF3,??PlayF3??rA
   \   00000088   B000C5E1           STRH     R0,[R5, #+0]
   \   0000008C   000050E3           CMP      R0,#+0
   \   00000090   0800001A           BNE      ??SpeechPhrases_5
    117              ;  
    118          
    119            }
    120             else{
    121              next=0;
   \                     ??SpeechPhrases_4:
   \   00000094   B040C5E1           STRH     R4,[R5, #+0]
    122          #ifndef NOHEADSET  
    123              if (gfp!=0)  MPlayer_Toggle2();      
   \   00000098   ........           LDR      R5,??DataTable3  ;; gfp
   \   0000009C   0000D5E5           LDRB     R0,[R5, #+0]
   \   000000A0   000050E3           CMP      R0,#+0
   \   000000A4   0200000A           BEQ      ??SpeechPhrases_6
   \   000000A8   0010A0E3           MOV      R1,#+0
   \   000000AC   1100A0E3           MOV      R0,#+17
   \   000000B0   ........           _BLF     Send_MPlayer_Command,??Send_MPlayer_Command??rA
    124              gfp=0;
   \                     ??SpeechPhrases_6:
   \   000000B4   0040C5E5           STRB     R4,[R5, #+0]
    125           #else
    126          #endif    
    127            }
    128          }
   \                     ??SpeechPhrases_5:
   \   000000B8   80D08DE2           ADD      SP,SP,#+128      ;; stack cleaning
   \   000000BC   7040BDE8           POP      {R4-R6,LR}
   \   000000C0   1EFF2FE1           BX       LR               ;; return
   \                     ??SpeechPhrases_3:
   \   000000C4   ........           DC32     gbs
   \   000000C8   ........           DC32     spc_vol
   \   000000CC   ........           DC32     `?<Constant "4:\\\\Zbin\\\\SndDemon">`

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   ........           DC32     next

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   ........           DC32     gfp

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "4:\\\\Zbin\\\\SndDemon">`:
   \   00000000   343A5C5A6269       DC8 "4:\\Zbin\\SndDemon"
   \              6E5C536E6444
   \              656D6F6E00  
   \   00000011   000000             DC8 0, 0, 0

   Maximum stack usage in bytes:

     Function            CSTACK
     --------            ------
     PlayF3                 64
     SpeechPhrases         144
     SpeechPhrasesChk       12
     SpeechPhrasesChkNat    12


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     gfp                               1
     sndPath                           8
     tm                               16
     PlayF3                          260
     SpeechPhrasesChkNat             116
     ?Subroutine3                     20
     SpeechPhrasesChk                 68
     SpeechPhrases                   208
     ??DataTable2                      4
     ??DataTable3                      4
     ?<Constant "4:\\Zbin\\SndDemon">
                                      20
      Others                          60

 
 728 bytes in segment CODE
  20 bytes in segment DATA_C
  25 bytes in segment DATA_Z
  12 bytes in segment INITTAB
 
 420 bytes of CODE  memory (+ 320 bytes shared)
  20 bytes of CONST memory
  25 bytes of DATA  memory

Errors: none
Warnings: none
