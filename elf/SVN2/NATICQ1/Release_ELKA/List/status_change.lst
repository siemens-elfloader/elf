##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION    14/Apr/2011  09:16:53 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  D:\pasha\elf\SVN2\NATICQ1\status_change.c            #
#    Command line    =  D:\pasha\elf\SVN2\NATICQ1\status_change.c -D         #
#                       NEWSGOLD -D ELKA --preprocess                        #
#                       D:\pasha\elf\SVN2\NATICQ1\Release_ELKA\List\ -lC     #
#                       D:\pasha\elf\SVN2\NATICQ1\Release_ELKA\List\ -o      #
#                       D:\pasha\elf\SVN2\NATICQ1\Release_ELKA\Obj\ -s9      #
#                       --no_unroll --cpu_mode arm --endian little --cpu     #
#                       ARM926EJ-S --stack_align 4 --interwork -e --fpu      #
#                       None --dlib_config "D:\pasha\Embedded Workbench 4.0  #
#                       Evaluation2\ARM\LIB\dl5tpainl8n.h" -I                #
#                       "D:\pasha\Embedded Workbench 4.0                     #
#                       Evaluation2\ARM\INC\" --inline_threshold=2           #
#    List file       =  D:\pasha\elf\SVN2\NATICQ1\Release_ELKA\List\status_c #
#                       hange.lst                                            #
#    Object file     =  D:\pasha\elf\SVN2\NATICQ1\Release_ELKA\Obj\status_ch #
#                       ange.r79                                             #
#                                                                            #
#                                                                            #
##############################################################################

D:\pasha\elf\SVN2\NATICQ1\status_change.c
      1          /*
      2            Интерфейс и функции смены своего статуса
      3          */
      4          #include "../inc/swilib.h"
      5          #include "../inc/cfg_items.h"
      6          #include "../inc/pnglist.h"
      7          #include "NatICQ.h"
      8          #include "main.h"
      9          #include "status_change.h"
     10          #include "strings.h"
     11          #include "lang.h"
     12          
     13          //===============================================================================================
     14          // ELKA Compatibility
     15          #pragma inline
     16          static void patch_header(const HEADER_DESC* head)
     17          {
     18            ((HEADER_DESC *)head)->rc.x=0;
     19            ((HEADER_DESC *)head)->rc.y=YDISP;
     20            ((HEADER_DESC *)head)->rc.x2=ScreenW()-1;
     21            ((HEADER_DESC *)head)->rc.y2=HeaderH()-1+YDISP;
     22          }
     23          #pragma inline
     24          void patch_input(const INPUTDIA_DESC* inp)
     25          {
     26            ((INPUTDIA_DESC *)inp)->rc.x = 0;
     27            ((INPUTDIA_DESC *)inp)->rc.y = HeaderH() + 1 + YDISP;
     28            ((INPUTDIA_DESC *)inp)->rc.x2=ScreenW() - 1;
     29            ((INPUTDIA_DESC *)inp)->rc.y2=ScreenH() - SoftkeyH() - 1;
     30          }
     31          //===============================================================================================
     32          
     33          extern const char TEMPLATES_PATH[];

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\\\">`:
   \   00000000   5C00               DC8 "\\"
   \   00000002   0000               DC8 0, 0
   \   00000004   585374617475       DC8 "XStatuses.txt"
   \              7365732E7478
   \              7400        
   \   00000012   0000               DC8 0, 0
     34          static const char XS_FILE_NAME[]="XStatuses.txt";
     35          
     36          

   \                                 In segment DATA_Z, align 4, align-sorted
     37          char *XStatusText;
   \                     XStatusText:
   \   00000000                      DS8 4
     38          
     39          extern int CurrentStatus;
     40          extern int CurrentXStatus;
     41          extern  int S_ICONS[];
     42          
     43          #pragma inline
     44          static void Change_Status(int status)
     45          {
     46            CurrentStatus=status;
     47            set_my_status();
     48            SUBPROC((void*)WriteDefSettings);
     49          }
     50          
     51          #pragma inline
     52          static void Change_XStatus(int xstatus)
     53          {
     54            CurrentXStatus=xstatus;
     55            set_my_xstatus();
     56            SUBPROC((void*)WriteDefSettings);
     57          }
     58          
     59          ///////////////////////////////////////////////////////////////////////////////
     60          #pragma inline
     61          static unsigned int GetStatusIndexInMenu(unsigned int status)
     62          {
     63            switch(status)
     64            {
     65            case IS_ONLINE: {return 0;}
     66            case IS_AWAY: {return 1;}
     67            case IS_NA: {return 2;}
     68            case IS_DND: {return 3;}
     69            case IS_OCCUPIED: {return 4;}
     70            case IS_FFC: {return 5;}
     71            case IS_INVISIBLE: {return 6;}
     72            case IS_DEPRESSION: return 7;
     73            case IS_EVIL: return 8;
     74            case IS_HOME: return 9;
     75            case IS_LUNCH: return 10;
     76            case IS_WORK: return 11;
     77            }
     78            return 0;
     79          }
     80          
     81          #pragma inline 
     82          static unsigned int GetStatusInMenuByPos(int pos)
     83          {
     84            switch(pos)
     85            {
     86            case 0:
     87              return IS_ONLINE;
     88            case 1:
     89              return IS_AWAY;
     90            case 2:
     91              return IS_NA;
     92            case 3:
     93              return IS_DND;
     94            case 4:
     95              return IS_OCCUPIED;
     96            case 5:
     97              return IS_FFC;
     98            case 6:
     99              return IS_INVISIBLE;
    100            case 7:
    101              return IS_DEPRESSION;
    102            case 8:
    103              return IS_EVIL;
    104            case 9:
    105              return IS_HOME;
    106            case 10:
    107              return IS_LUNCH;
    108            case 11:
    109              return IS_WORK;
    110            }
    111            return IS_UNKNOWN;
    112          }
    113          

   \                                 In segment CODE, align 4, keep-with-next
    114          static int st_onkey(void *data, GUI_MSG *msg)
    115          {
   \                     st_onkey:
   \   00000000   00402DE9           PUSH     {LR}
    116            int i;
    117            if (msg->keys==0x18 || msg->keys==0x3D)
   \   00000004   F210D1E1           LDRSH    R1,[R1, #+2]
   \   00000008   180051E3           CMP      R1,#+24
   \   0000000C   3D005113           CMPNE    R1,#+61
   \   00000010   2800001A           BNE      ??st_onkey_1
    118            {
    119              i=GetCurMenuItem(data);
    120              Change_Status(GetStatusInMenuByPos(i));
   \   00000014   8F0100EF           SWI      +399
   \   00000018   0B0050E3           CMP      R0,#+11
   \   0000001C   1D00008A           BHI      ??st_onkey_2
   \   00000020   011F8FE2           ADR      R1,??st_onkey_0
   \   00000024   0010D1E7           LDRB     R1,[R1, R0]
   \   00000028   01F18FE0           ADD      PC,PC,R1, LSL #+2
   \                     ??st_onkey_0:
   \   0000002C   02040608           DC8      +2,+4,+6,+8
   \   00000030   0A0C0E10           DC8      +10,+12,+14,+16
   \   00000034   12141618           DC8      +18,+20,+22,+24
   \                     ??st_onkey_3:
   \   00000038   0B00A0E3           MOV      R0,#+11
   \   0000003C   160000EA           B        ??st_onkey_4
   \                     ??st_onkey_5:
   \   00000040   0200A0E3           MOV      R0,#+2
   \   00000044   140000EA           B        ??st_onkey_4
   \                     ??st_onkey_6:
   \   00000048   0300A0E3           MOV      R0,#+3
   \   0000004C   120000EA           B        ??st_onkey_4
   \                     ??st_onkey_7:
   \   00000050   0500A0E3           MOV      R0,#+5
   \   00000054   100000EA           B        ??st_onkey_4
   \                     ??st_onkey_8:
   \   00000058   0400A0E3           MOV      R0,#+4
   \   0000005C   0E0000EA           B        ??st_onkey_4
   \                     ??st_onkey_9:
   \   00000060   0C00A0E3           MOV      R0,#+12
   \   00000064   0C0000EA           B        ??st_onkey_4
   \                     ??st_onkey_10:
   \   00000068   0100A0E3           MOV      R0,#+1
   \   0000006C   0A0000EA           B        ??st_onkey_4
   \                     ??st_onkey_11:
   \   00000070   0600A0E3           MOV      R0,#+6
   \   00000074   080000EA           B        ??st_onkey_4
   \                     ??st_onkey_12:
   \   00000078   0700A0E3           MOV      R0,#+7
   \   0000007C   060000EA           B        ??st_onkey_4
   \                     ??st_onkey_13:
   \   00000080   0800A0E3           MOV      R0,#+8
   \   00000084   040000EA           B        ??st_onkey_4
   \                     ??st_onkey_14:
   \   00000088   0900A0E3           MOV      R0,#+9
   \   0000008C   020000EA           B        ??st_onkey_4
   \                     ??st_onkey_15:
   \   00000090   0A00A0E3           MOV      R0,#+10
   \   00000094   000000EA           B        ??st_onkey_4
   \                     ??st_onkey_2:
   \   00000098   0E00A0E3           MOV      R0,#+14
   \                     ??st_onkey_4:
   \   0000009C   ........           LDR      R1,??DataTable5  ;; CurrentStatus
   \   000000A0   000081E5           STR      R0,[R1, #+0]
   \   000000A4   ........           _BLF     set_my_status,??set_my_status??rA
   \   000000A8   ........           LDR      R0,??DataTable9  ;; WriteDefSettings
   \   000000AC   710100EF           SWI      +369
    121              return (1);
   \   000000B0   0100A0E3           MOV      R0,#+1
   \   000000B4   0080BDE8           POP      {PC}
    122            }
    123            return (0);
   \                     ??st_onkey_1:
   \   000000B8   0000A0E3           MOV      R0,#+0
   \   000000BC   0080BDE8           POP      {PC}             ;; return
    124          }
    125              
    126          ///////////////////////////////////////////////////////////////////////////////
    127          
    128          #define STATUSES_NUM 12
    129          
    130          static char * menutexts[STATUSES_NUM]=
    131          {
    132            NULL,
    133            NULL,
    134            NULL,
    135            NULL,
    136            NULL,
    137            NULL,
    138            NULL,
    139            NULL,
    140            NULL,
    141            NULL,
    142            NULL,
    143            NULL
    144          };
    145          

   \                                 In segment CODE, align 4, keep-with-next
    146          void st_icons_set(void *data, int curitem, void *unk)
    147          {
   \                     st_icons_set:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
    148            WSHDR *ws;
    149            void *item=AllocMenuItem(data);
   \   0000000C   970100EF           SWI      +407
   \   00000010   0060A0E1           MOV      R6,R0
    150            extern const char percent_t[];
    151            ws=AllocMenuWS(data,strlen(menutexts[curitem]));
   \   00000014   D8009FE5           LDR      R0,??st_icons_set_1  ;; st_menuhdr
   \   00000018   058180E0           ADD      R8,R0,R5, LSL #+2
   \   0000001C   140098E5           LDR      R0,[R8, #+20]
   \   00000020   1B0000EF           SWI      +27
   \   00000024   0010A0E1           MOV      R1,R0
   \   00000028   0400A0E1           MOV      R0,R4
   \   0000002C   980100EF           SWI      +408
    152            wsprintf(ws,percent_t,menutexts[curitem]);
   \   00000030   142098E5           LDR      R2,[R8, #+20]
   \   00000034   ........           LDR      R1,??DataTable10  ;; percent_t
   \   00000038   0070A0E1           MOV      R7,R0
   \   0000003C   240100EF           SWI      +292
    153            SetMenuItemIconArray(data,item,S_ICONS+GetStatusInMenuByPos(curitem));
   \   00000040   0500A0E1           MOV      R0,R5
   \   00000044   0B0050E3           CMP      R0,#+11
   \   00000048   1D00008A           BHI      ??st_icons_set_2
   \   0000004C   011F8FE2           ADR      R1,??st_icons_set_0
   \   00000050   0010D1E7           LDRB     R1,[R1, R0]
   \   00000054   01F18FE0           ADD      PC,PC,R1, LSL #+2
   \                     ??st_icons_set_0:
   \   00000058   02040608           DC8      +2,+4,+6,+8
   \   0000005C   0A0C0E10           DC8      +10,+12,+14,+16
   \   00000060   12141618           DC8      +18,+20,+22,+24
   \                     ??st_icons_set_3:
   \   00000064   0B00A0E3           MOV      R0,#+11
   \   00000068   160000EA           B        ??st_icons_set_4
   \                     ??st_icons_set_5:
   \   0000006C   0200A0E3           MOV      R0,#+2
   \   00000070   140000EA           B        ??st_icons_set_4
   \                     ??st_icons_set_6:
   \   00000074   0300A0E3           MOV      R0,#+3
   \   00000078   120000EA           B        ??st_icons_set_4
   \                     ??st_icons_set_7:
   \   0000007C   0500A0E3           MOV      R0,#+5
   \   00000080   100000EA           B        ??st_icons_set_4
   \                     ??st_icons_set_8:
   \   00000084   0400A0E3           MOV      R0,#+4
   \   00000088   0E0000EA           B        ??st_icons_set_4
   \                     ??st_icons_set_9:
   \   0000008C   0C00A0E3           MOV      R0,#+12
   \   00000090   0C0000EA           B        ??st_icons_set_4
   \                     ??st_icons_set_10:
   \   00000094   0100A0E3           MOV      R0,#+1
   \   00000098   0A0000EA           B        ??st_icons_set_4
   \                     ??st_icons_set_11:
   \   0000009C   0600A0E3           MOV      R0,#+6
   \   000000A0   080000EA           B        ??st_icons_set_4
   \                     ??st_icons_set_12:
   \   000000A4   0700A0E3           MOV      R0,#+7
   \   000000A8   060000EA           B        ??st_icons_set_4
   \                     ??st_icons_set_13:
   \   000000AC   0800A0E3           MOV      R0,#+8
   \   000000B0   040000EA           B        ??st_icons_set_4
   \                     ??st_icons_set_14:
   \   000000B4   0900A0E3           MOV      R0,#+9
   \   000000B8   020000EA           B        ??st_icons_set_4
   \                     ??st_icons_set_15:
   \   000000BC   0A00A0E3           MOV      R0,#+10
   \   000000C0   000000EA           B        ??st_icons_set_4
   \                     ??st_icons_set_2:
   \   000000C4   0E00A0E3           MOV      R0,#+14
   \                     ??st_icons_set_4:
   \   000000C8   ........           LDR      R1,??DataTable4  ;; S_ICONS
   \   000000CC   002181E0           ADD      R2,R1,R0, LSL #+2
   \   000000D0   0610A0E1           MOV      R1,R6
   \   000000D4   0400A0E1           MOV      R0,R4
   \   000000D8   990100EF           SWI      +409
    154            SetMenuItemText(data, item, ws, curitem);
   \   000000DC   0530A0E1           MOV      R3,R5
   \   000000E0   0720A0E1           MOV      R2,R7
   \   000000E4   0610A0E1           MOV      R1,R6
   \   000000E8   0400A0E1           MOV      R0,R4
   \   000000EC   9A0100EF           SWI      +410
    155          }
   \   000000F0   F081BDE8           POP      {R4-R8,PC}       ;; return
   \                     ??st_icons_set_1:
   \   000000F4   ........           DC32     st_menuhdr
    156          
    157          static HEADER_DESC st_menuhdr={0,0,0,0,NULL,NULL,LGP_NULL};
    158          

   \                                 In segment DATA_C, align 4, align-sorted
    159          static const int st_menusoftkeys[]={0,1,2};
   \                     st_menusoftkeys:
   \   00000000   000000000100       DC32 0, 1, 2
   \              000002000000

   \                                 In segment DATA_I, align 4, align-sorted
   \                     st_menuhdr:
   \   00000000                      DS8 20
   \   00000014                      REQUIRE `?<Initializer for st_menuhdr>`
   \   00000014                      DS8 48
   \   00000044                      REQUIRE `?<Initializer for menutexts>`
    160          
    161          static SOFTKEY_DESC st_menu_sk[]=
   \                     st_menu_sk:
   \   00000044                      DS8 24
   \   0000005C                      REQUIRE `?<Initializer for st_menu_sk>`
    162          {
    163            {0x0018,0x0000,NULL},
    164            {0x0001,0x0000,NULL},
    165            {0x003D,0x0000,(int)LGP_DOIT_PIC}
    166          };
    167          

   \                                 In segment DATA_C, align 4, align-sorted
    168          static const SOFTKEYSTAB st_menu_skt=
   \                     st_menu_skt:
   \   00000000   ........0000       DC32 st_menu_sk, 0
   \              0000        
    169          {
    170            st_menu_sk,0
    171          };
    172          

   \                                 In segment CODE, align 4, keep-with-next
    173          static void stmenu_ghook(void *data, int cmd)
    174          {
   \                     stmenu_ghook:
   \   00000000   00402DE9           PUSH     {LR}
    175            if (cmd==0x0A)
   \   00000004   0A0051E3           CMP      R1,#+10
   \   00000008   0080BD18           POPNE    {PC}
    176            {
    177              DisableIDLETMR();
   \   0000000C   7F0100EF           SWI      +383
    178            }
    179          }
   \   00000010   0080BDE8           POP      {PC}             ;; return
    180          

   \                                 In segment DATA_C, align 4, align-sorted
    181          static const MENU_DESC st_tmenu=
   \                     st_tmenu:
   \   00000000   08000000....       DC32 8, st_onkey, stmenu_ghook, 0H, st_menusoftkeys, st_menu_skt, 17
   \              ............
   \              00000000....
   \              ............
   \              11000000    
   \   0000001C   ........0000       DC32 st_icons_set, 0H, 0H, 12
   \              000000000000
   \              0C000000    
    182          {
    183            8,st_onkey,stmenu_ghook,NULL,
    184            st_menusoftkeys,
    185            &st_menu_skt,
    186            0x11,//MENU_FLAG,
    187            st_icons_set,
    188            NULL,//st_menuitems,
    189            NULL,
    190            STATUSES_NUM
    191          };
    192          
    193          

   \                                 In segment CODE, align 4, keep-with-next
    194          void DispStatusChangeMenu()
    195          {
    196            *((int **)(&st_menuhdr.icon))=S_ICONS+CurrentStatus;
   \                     DispStatusChangeMenu:
   \   00000000   ........           LDR      R1,??DataTable4  ;; S_ICONS
   \   00000004   70402DE9           PUSH     {R4-R6,LR}
   \   00000008   5C419FE5           LDR      R4,??DispStatusChangeMenu_1  ;; st_menuhdr
   \   0000000C   ........           LDR      R5,??DataTable5  ;; CurrentStatus
    197            patch_header(&st_menuhdr);
   \   00000010   0060A0E3           MOV      R6,#+0
   \   00000014   000095E5           LDR      R0,[R5, #+0]
   \   00000018   B060C4E1           STRH     R6,[R4, #+0]
   \   0000001C   000181E0           ADD      R0,R1,R0, LSL #+2
   \   00000020   080084E5           STR      R0,[R4, #+8]
   \   00000024   1800A0E3           MOV      R0,#+24
   \   00000028   B200C4E1           STRH     R0,[R4, #+2]
   \   0000002C   888100EF           SWI      +33160
   \   00000030   010040E2           SUB      R0,R0,#+1
   \   00000034   B400C4E1           STRH     R0,[R4, #+4]
   \   00000038   8A8100EF           SWI      +33162
   \   0000003C   170080E2           ADD      R0,R0,#+23
   \   00000040   B600C4E1           STRH     R0,[R4, #+6]
    198            
    199            //Инициализация ленгпака
    200            st_menuhdr.lgp_id=(int)lgpData[LGP_ChgStatus];
   \   00000044   ........           LDR      R0,??DataTable14  ;; lgpData
   \   00000048   B81090E5           LDR      R1,[R0, #+184]
   \   0000004C   0C1084E5           STR      R1,[R4, #+12]
    201            st_menu_sk[0].lgp_id=(int)lgpData[LGP_Select];
   \   00000050   301090E5           LDR      R1,[R0, #+48]
   \   00000054   481084E5           STR      R1,[R4, #+72]
    202            st_menu_sk[1].lgp_id=(int)lgpData[LGP_Back];
   \   00000058   381090E5           LDR      R1,[R0, #+56]
   \   0000005C   501084E5           STR      R1,[R4, #+80]
    203            
    204            menutexts[0]=(char *)lgpData[LGP_StOnline];
   \   00000060   C01090E5           LDR      R1,[R0, #+192]
   \   00000064   141084E5           STR      R1,[R4, #+20]
    205            menutexts[1]=(char *)lgpData[LGP_StAway];
   \   00000068   C41090E5           LDR      R1,[R0, #+196]
   \   0000006C   181084E5           STR      R1,[R4, #+24]
    206            menutexts[2]=(char *)lgpData[LGP_StNa];
   \   00000070   C81090E5           LDR      R1,[R0, #+200]
   \   00000074   1C1084E5           STR      R1,[R4, #+28]
    207            menutexts[3]=(char *)lgpData[LGP_StDnd];
   \   00000078   CC1090E5           LDR      R1,[R0, #+204]
   \   0000007C   201084E5           STR      R1,[R4, #+32]
    208            menutexts[4]=(char *)lgpData[LGP_StOccup];
   \   00000080   D01090E5           LDR      R1,[R0, #+208]
   \   00000084   241084E5           STR      R1,[R4, #+36]
    209            menutexts[5]=(char *)lgpData[LGP_StFfc];
   \   00000088   D41090E5           LDR      R1,[R0, #+212]
   \   0000008C   281084E5           STR      R1,[R4, #+40]
    210            menutexts[6]=(char *)lgpData[LGP_StInvis];
   \   00000090   D81090E5           LDR      R1,[R0, #+216]
   \   00000094   2C1084E5           STR      R1,[R4, #+44]
    211            menutexts[7]=(char *)lgpData[LGP_StDepression];
   \   00000098   DC1090E5           LDR      R1,[R0, #+220]
   \   0000009C   301084E5           STR      R1,[R4, #+48]
    212            menutexts[8]=(char *)lgpData[LGP_StEvil];
   \   000000A0   E01090E5           LDR      R1,[R0, #+224]
   \   000000A4   341084E5           STR      R1,[R4, #+52]
    213            menutexts[9]=(char *)lgpData[LGP_StHome];
   \   000000A8   E41090E5           LDR      R1,[R0, #+228]
   \   000000AC   381084E5           STR      R1,[R4, #+56]
    214            menutexts[10]=(char *)lgpData[LGP_StLunch];
   \   000000B0   E81090E5           LDR      R1,[R0, #+232]
    215            menutexts[11]=(char *)lgpData[LGP_StWork];
   \   000000B4   EC0090E5           LDR      R0,[R0, #+236]
   \   000000B8   3C1084E5           STR      R1,[R4, #+60]
   \   000000BC   400084E5           STR      R0,[R4, #+64]
    216            
    217            CreateMenu(0,0,&st_tmenu,&st_menuhdr,GetStatusIndexInMenu(CurrentStatus),STATUSES_NUM,0,0);
   \   000000C0   000095E5           LDR      R0,[R5, #+0]
   \   000000C4   010040E2           SUB      R0,R0,#+1
   \   000000C8   0B0050E3           CMP      R0,#+11
   \   000000CC   1A00008A           BHI      ??DispStatusChangeMenu_2
   \   000000D0   011F8FE2           ADR      R1,??DispStatusChangeMenu_0
   \   000000D4   0010D1E7           LDRB     R1,[R1, R0]
   \   000000D8   01F18FE0           ADD      PC,PC,R1, LSL #+2
   \                     ??DispStatusChangeMenu_0:
   \   000000DC   0C020408           DC8      +12,+2,+4,+8
   \   000000E0   060E1012           DC8      +6,+14,+16,+18
   \   000000E4   1416170A           DC8      +20,+22,+23,+10
   \                     ??DispStatusChangeMenu_3:
   \   000000E8   0160A0E3           MOV      R6,#+1
   \   000000EC   120000EA           B        ??DispStatusChangeMenu_2
   \                     ??DispStatusChangeMenu_4:
   \   000000F0   0260A0E3           MOV      R6,#+2
   \   000000F4   100000EA           B        ??DispStatusChangeMenu_2
   \                     ??DispStatusChangeMenu_5:
   \   000000F8   0360A0E3           MOV      R6,#+3
   \   000000FC   0E0000EA           B        ??DispStatusChangeMenu_2
   \                     ??DispStatusChangeMenu_6:
   \   00000100   0460A0E3           MOV      R6,#+4
   \   00000104   0C0000EA           B        ??DispStatusChangeMenu_2
   \                     ??DispStatusChangeMenu_7:
   \   00000108   0560A0E3           MOV      R6,#+5
   \   0000010C   0A0000EA           B        ??DispStatusChangeMenu_2
   \                     ??DispStatusChangeMenu_8:
   \   00000110   0660A0E3           MOV      R6,#+6
   \   00000114   080000EA           B        ??DispStatusChangeMenu_2
   \                     ??DispStatusChangeMenu_9:
   \   00000118   0760A0E3           MOV      R6,#+7
   \   0000011C   060000EA           B        ??DispStatusChangeMenu_2
   \                     ??DispStatusChangeMenu_10:
   \   00000120   0860A0E3           MOV      R6,#+8
   \   00000124   040000EA           B        ??DispStatusChangeMenu_2
   \                     ??DispStatusChangeMenu_11:
   \   00000128   0960A0E3           MOV      R6,#+9
   \   0000012C   020000EA           B        ??DispStatusChangeMenu_2
   \                     ??DispStatusChangeMenu_12:
   \   00000130   0A60A0E3           MOV      R6,#+10
   \   00000134   000000EA           B        ??DispStatusChangeMenu_2
   \                     ??DispStatusChangeMenu_13:
   \   00000138   0B60A0E3           MOV      R6,#+11
   \                     ??DispStatusChangeMenu_2:
   \   0000013C   2C209FE5           LDR      R2,??DispStatusChangeMenu_1+0x4  ;; st_tmenu
   \   00000140   0000A0E3           MOV      R0,#+0
   \   00000144   01002DE9           PUSH     {R0}
   \   00000148   01002DE9           PUSH     {R0}
   \   0000014C   0430A0E1           MOV      R3,R4
   \   00000150   0010A0E3           MOV      R1,#+0
   \   00000154   0C00A0E3           MOV      R0,#+12
   \   00000158   01002DE9           PUSH     {R0}
   \   0000015C   40002DE9           PUSH     {R6}
   \   00000160   0000A0E3           MOV      R0,#+0
   \   00000164   520100EF           SWI      +338
    218          }
   \   00000168   7F80BDE8           POP      {R0-R6,PC}       ;; return
   \                     ??DispStatusChangeMenu_1:
   \   0000016C   ........           DC32     st_menuhdr
   \   00000170   ........           DC32     st_tmenu
    219          
    220          //--------------------------------
    221          // XStatuses
    222          //--------------------------------
    223          extern DYNPNGICONLIST *XStatusesImgList;
    224          extern int *XStatusesIconArray;
    225          extern volatile int total_xstatuses;
    226          

   \                                 In segment DATA_I, align 4, align-sorted
    227          SOFTKEY_DESC edit_x_sk[]=
   \                     edit_x_sk:
   \   00000000                      DS8 24
   \   00000018                      REQUIRE `?<Initializer for edit_x_sk>`
    228          {
    229            {0x0018,0x0000,(int)"Save!"},
    230            {0x0001,0x0000,(int)""},
    231            {0x003D,0x0000,(int)LGP_DOIT_PIC}
    232          };
    233          

   \                                 In segment DATA_I, align 4, align-sorted
    234          SOFTKEYSTAB edit_x_skt=
   \                     edit_x_skt:
   \   00000000                      DS8 8
   \   00000008                      REQUIRE `?<Initializer for edit_x_skt>`
    235          {
    236            edit_x_sk,0
    237          };
    238          

   \                                 In segment CODE, align 4, keep-with-next
    239          void edit_xstatus_locret(void){}
   \                     edit_xstatus_locret:
   \   00000000   1EFF2FE1           BX       LR               ;; return
    240          

   \                                 In segment CODE, align 4, keep-with-next
    241          void ReplaceStr(char **str, int start_prev, int prev_len, char *next, int next_len)
    242          {
   \                     ReplaceStr:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000004   24809DE5           LDR      R8,[SP, #+36]
   \   00000008   0040A0E1           MOV      R4,R0
    243            char *d, *buf;
    244            char *s=*str;
   \   0000000C   009094E5           LDR      R9,[R4, #+0]
   \   00000010   0150A0E1           MOV      R5,R1
   \   00000014   0260A0E1           MOV      R6,R2
   \   00000018   0370A0E1           MOV      R7,R3
    245            if (s)
   \   0000001C   000059E3           CMP      R9,#+0
   \   00000020   F08FBD08           POPEQ    {R4-R11,PC}
    246            {
    247              d=buf=malloc(strlen(s)+next_len-prev_len+1);
   \   00000024   0900A0E1           MOV      R0,R9
   \   00000028   1B0000EF           SWI      +27
   \   0000002C   000088E0           ADD      R0,R8,R0
   \   00000030   060040E0           SUB      R0,R0,R6
   \   00000034   010080E2           ADD      R0,R0,#+1
   \   00000038   140000EF           SWI      +20
   \   0000003C   00B0A0E1           MOV      R11,R0
   \   00000040   0BA0A0E1           MOV      R10,R11
    248              if (start_prev)
   \   00000044   000055E3           CMP      R5,#+0
   \   00000048   0300000A           BEQ      ??ReplaceStr_0
    249              {
    250                memcpy(buf, s, start_prev);
   \   0000004C   0520A0E1           MOV      R2,R5
   \   00000050   0910A0E1           MOV      R1,R9
   \   00000054   1E0100EF           SWI      +286
    251                buf+=start_prev;
   \   00000058   0BB085E0           ADD      R11,R5,R11
    252              }
    253              if (next_len)
   \                     ??ReplaceStr_0:
   \   0000005C   000058E3           CMP      R8,#+0
   \   00000060   0400000A           BEQ      ??ReplaceStr_1
    254              {
    255                memcpy(buf,next,next_len);
   \   00000064   0820A0E1           MOV      R2,R8
   \   00000068   0710A0E1           MOV      R1,R7
   \   0000006C   0B00A0E1           MOV      R0,R11
   \   00000070   1E0100EF           SWI      +286
    256                buf+=next_len;
   \   00000074   0BB088E0           ADD      R11,R8,R11
    257              }
    258              strcpy(buf, s+start_prev+prev_len);
   \                     ??ReplaceStr_1:
   \   00000078   090085E0           ADD      R0,R5,R9
   \   0000007C   001086E0           ADD      R1,R6,R0
   \   00000080   0B00A0E1           MOV      R0,R11
   \   00000084   1A0000EF           SWI      +26
    259              mfree(s);
   \   00000088   0900A0E1           MOV      R0,R9
   \   0000008C   150000EF           SWI      +21
    260              *str=d;
   \   00000090   00A084E5           STR      R10,[R4, #+0]
    261            }
    262          }
   \   00000094   F08FBDE8           POP      {R4-R11,PC}      ;; return
    263          

   \                                 In segment CODE, align 4, keep-with-next
    264          int edit_xstatus_onkey(GUI *data, GUI_MSG *msg)
    265          {
   \                     edit_xstatus_onkey:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000004   B8D04DE2           SUB      SP,SP,#+184
   \   00000008   0040A0E1           MOV      R4,R0
    266            WSHDR *ws;
    267            char *s, *d, tmp[132];
    268            int cur_x_st;
    269            int len, l;
    270            int is_any_change=0;
    271            if (msg->keys==0xFFF)
   \   0000000C   F200D1E1           LDRSH    R0,[R1, #+2]
   \   00000010   0060A0E3           MOV      R6,#+0
   \   00000014   FF10A0E3           MOV      R1,#+255
   \   00000018   F01E81E3           ORR      R1,R1,#0xF00
   \   0000001C   010050E1           CMP      R0,R1
   \   00000020   9400001A           BNE      ??edit_xstatus_onkey_0
    272            {
    273              cur_x_st=(int)EDIT_GetUserPointer(data);
   \   00000024   0400A0E1           MOV      R0,R4
   \   00000028   DF0100EF           SWI      +479
   \   0000002C   0050A0E1           MOV      R5,R0
    274              EDITCONTROL ec;
    275              ExtractEditControl(data,2,&ec);   // Комментарий
   \   00000030   08208DE2           ADD      R2,SP,#+8
   \   00000034   0210A0E3           MOV      R1,#+2
   \   00000038   0400A0E1           MOV      R0,R4
   \   0000003C   690100EF           SWI      +361
    276              ws=ec.pWS;
   \   00000040   30809DE5           LDR      R8,[SP, #+48]
    277              
    278              s=GetXStatusStr(cur_x_st*3,&len);
   \   00000044   851085E0           ADD      R1,R5,R5, LSL #+1
    279              d=tmp;
    280          
    281              if (s)
   \   00000048   ........           LDR      R5,??DataTable20  ;; XStatusText
   \   0000004C   04108DE5           STR      R1,[SP, #+4]
   \   00000050   04009DE5           LDR      R0,[SP, #+4]
   \   00000054   0D10A0E1           MOV      R1,SP
   \   00000058   ........           BL       GetXStatusStr
   \   0000005C   0090B0E1           MOVS     R9,R0
   \   00000060   34A08DE2           ADD      R10,SP,#+52
   \   00000064   2100000A           BEQ      ??edit_xstatus_onkey_1
    282              {
    283                l=ws->wsbody[0];
   \   00000068   000098E5           LDR      R0,[R8, #+0]
    284                for (int i=0; i<l; i++) 
   \   0000006C   00B0A0E3           MOV      R11,#+0
   \   00000070   B070D0E1           LDRH     R7,[R0, #+0]
   \   00000074   010057E3           CMP      R7,#+1
   \   00000078   060000AA           BGE      ??edit_xstatus_onkey_2
   \   0000007C   070000EA           B        ??edit_xstatus_onkey_3
    285                {
    286                  *d++=char16to8(ws->wsbody[i+1]);
   \                     ??edit_xstatus_onkey_4:
   \   00000080   000098E5           LDR      R0,[R8, #+0]
   \   00000084   8B0080E0           ADD      R0,R0,R11, LSL #+1
   \   00000088   B200D0E1           LDRH     R0,[R0, #+2]
    287                }
   \   0000008C   01B08BE2           ADD      R11,R11,#+1
   \   00000090   ........           _BLF     char16to8,??char16to8??rA
   \   00000094   ........           STRB     R0,[R10], #+1
   \                     ??edit_xstatus_onkey_2:
   \   00000098   07005BE1           CMP      R11,R7
   \   0000009C   F7FFFFBA           BLT      ??edit_xstatus_onkey_4
    288                *d=0;
   \                     ??edit_xstatus_onkey_3:
   \   000000A0   0000A0E3           MOV      R0,#+0
   \   000000A4   0000CAE5           STRB     R0,[R10, #+0]
    289                if (len!=l || strncmp(s,tmp,len))
   \   000000A8   00009DE5           LDR      R0,[SP, #+0]
   \   000000AC   070050E1           CMP      R0,R7
   \   000000B0   0500001A           BNE      ??edit_xstatus_onkey_5
   \   000000B4   0020A0E1           MOV      R2,R0
   \   000000B8   34108DE2           ADD      R1,SP,#+52
   \   000000BC   0900A0E1           MOV      R0,R9
   \   000000C0   150100EF           SWI      +277
   \   000000C4   000050E3           CMP      R0,#+0
   \   000000C8   0800000A           BEQ      ??edit_xstatus_onkey_1
    290                {
    291                  ReplaceStr(&XStatusText,s-XStatusText,len,tmp,l);
   \                     ??edit_xstatus_onkey_5:
   \   000000CC   80002DE9           PUSH     {R7}
   \   000000D0   000095E5           LDR      R0,[R5, #+0]
   \   000000D4   04209DE5           LDR      R2,[SP, #+4]
   \   000000D8   38308DE2           ADD      R3,SP,#+56
   \   000000DC   001049E0           SUB      R1,R9,R0
   \   000000E0   0500A0E1           MOV      R0,R5
   \   000000E4   ........           BL       ReplaceStr
    292                  is_any_change=1;
   \   000000E8   0160A0E3           MOV      R6,#+1
   \   000000EC   04D08DE2           ADD      SP,SP,#+4
    293                }
    294              }
    295          
    296              ExtractEditControl(data,4,&ec);   // Короткий икс статус
   \                     ??edit_xstatus_onkey_1:
   \   000000F0   08208DE2           ADD      R2,SP,#+8
   \   000000F4   0410A0E3           MOV      R1,#+4
   \   000000F8   0400A0E1           MOV      R0,R4
   \   000000FC   690100EF           SWI      +361
    297              ws=ec.pWS;
    298              
    299              s=GetXStatusStr(cur_x_st*3+1,&len);
   \   00000100   04009DE5           LDR      R0,[SP, #+4]
   \   00000104   30809DE5           LDR      R8,[SP, #+48]
   \   00000108   0D10A0E1           MOV      R1,SP
   \   0000010C   010080E2           ADD      R0,R0,#+1
   \   00000110   ........           BL       GetXStatusStr
   \   00000114   0090B0E1           MOVS     R9,R0
    300              d=tmp;
   \   00000118   34A08DE2           ADD      R10,SP,#+52
    301          
    302              if (s)
   \   0000011C   2100000A           BEQ      ??edit_xstatus_onkey_6
    303              {
    304                l=ws->wsbody[0];
   \   00000120   000098E5           LDR      R0,[R8, #+0]
    305                for (int i=0; i<l; i++) 
   \   00000124   00B0A0E3           MOV      R11,#+0
   \   00000128   B070D0E1           LDRH     R7,[R0, #+0]
   \   0000012C   010057E3           CMP      R7,#+1
   \   00000130   060000AA           BGE      ??edit_xstatus_onkey_7
   \   00000134   070000EA           B        ??edit_xstatus_onkey_8
    306                {
    307                  *d++=char16to8(ws->wsbody[i+1]);
   \                     ??edit_xstatus_onkey_9:
   \   00000138   000098E5           LDR      R0,[R8, #+0]
   \   0000013C   8B0080E0           ADD      R0,R0,R11, LSL #+1
   \   00000140   B200D0E1           LDRH     R0,[R0, #+2]
    308                }
   \   00000144   01B08BE2           ADD      R11,R11,#+1
   \   00000148   ........           _BLF     char16to8,??char16to8??rA
   \   0000014C   ........           STRB     R0,[R10], #+1
   \                     ??edit_xstatus_onkey_7:
   \   00000150   07005BE1           CMP      R11,R7
   \   00000154   F7FFFFBA           BLT      ??edit_xstatus_onkey_9
    309                *d=0;
   \                     ??edit_xstatus_onkey_8:
   \   00000158   0000A0E3           MOV      R0,#+0
   \   0000015C   0000CAE5           STRB     R0,[R10, #+0]
    310                if (len!=l || strncmp(s,tmp,len))
   \   00000160   00009DE5           LDR      R0,[SP, #+0]
   \   00000164   070050E1           CMP      R0,R7
   \   00000168   0500001A           BNE      ??edit_xstatus_onkey_10
   \   0000016C   0020A0E1           MOV      R2,R0
   \   00000170   34108DE2           ADD      R1,SP,#+52
   \   00000174   0900A0E1           MOV      R0,R9
   \   00000178   150100EF           SWI      +277
   \   0000017C   000050E3           CMP      R0,#+0
   \   00000180   0800000A           BEQ      ??edit_xstatus_onkey_6
    311                {
    312                  ReplaceStr(&XStatusText,s-XStatusText,len,tmp,l);
   \                     ??edit_xstatus_onkey_10:
   \   00000184   80002DE9           PUSH     {R7}
   \   00000188   000095E5           LDR      R0,[R5, #+0]
   \   0000018C   04209DE5           LDR      R2,[SP, #+4]
   \   00000190   38308DE2           ADD      R3,SP,#+56
   \   00000194   001049E0           SUB      R1,R9,R0
   \   00000198   0500A0E1           MOV      R0,R5
   \   0000019C   ........           BL       ReplaceStr
    313                  is_any_change=1;
   \   000001A0   0160A0E3           MOV      R6,#+1
   \   000001A4   04D08DE2           ADD      SP,SP,#+4
    314                }
    315              }
    316              
    317              ExtractEditControl(data,6,&ec);   // Длинный икс статус
   \                     ??edit_xstatus_onkey_6:
   \   000001A8   08208DE2           ADD      R2,SP,#+8
   \   000001AC   0610A0E3           MOV      R1,#+6
   \   000001B0   0400A0E1           MOV      R0,R4
   \   000001B4   690100EF           SWI      +361
    318              ws=ec.pWS;
    319              
    320              s=GetXStatusStr(cur_x_st*3+2,&len);
   \   000001B8   04009DE5           LDR      R0,[SP, #+4]
   \   000001BC   30409DE5           LDR      R4,[SP, #+48]
   \   000001C0   0D10A0E1           MOV      R1,SP
   \   000001C4   020080E2           ADD      R0,R0,#+2
   \   000001C8   ........           BL       GetXStatusStr
   \   000001CC   0080B0E1           MOVS     R8,R0
    321              d=tmp;
   \   000001D0   34908DE2           ADD      R9,SP,#+52
    322          
    323              if (s)
   \   000001D4   2100000A           BEQ      ??edit_xstatus_onkey_11
    324              {
    325                l=ws->wsbody[0];
   \   000001D8   000094E5           LDR      R0,[R4, #+0]
    326                for (int i=0; i<l; i++) 
   \   000001DC   00A0A0E3           MOV      R10,#+0
   \   000001E0   B070D0E1           LDRH     R7,[R0, #+0]
   \   000001E4   010057E3           CMP      R7,#+1
   \   000001E8   060000AA           BGE      ??edit_xstatus_onkey_12
   \   000001EC   070000EA           B        ??edit_xstatus_onkey_13
    327                {
    328                  *d++=char16to8(ws->wsbody[i+1]);
   \                     ??edit_xstatus_onkey_14:
   \   000001F0   000094E5           LDR      R0,[R4, #+0]
   \   000001F4   8A0080E0           ADD      R0,R0,R10, LSL #+1
   \   000001F8   B200D0E1           LDRH     R0,[R0, #+2]
    329                }
   \   000001FC   01A08AE2           ADD      R10,R10,#+1
   \   00000200   ........           _BLF     char16to8,??char16to8??rA
   \   00000204   ........           STRB     R0,[R9], #+1
   \                     ??edit_xstatus_onkey_12:
   \   00000208   07005AE1           CMP      R10,R7
   \   0000020C   F7FFFFBA           BLT      ??edit_xstatus_onkey_14
    330                *d=0;
   \                     ??edit_xstatus_onkey_13:
   \   00000210   0000A0E3           MOV      R0,#+0
   \   00000214   0000C9E5           STRB     R0,[R9, #+0]
    331                if (len!=l || strncmp(s,tmp,len))
   \   00000218   00009DE5           LDR      R0,[SP, #+0]
   \   0000021C   070050E1           CMP      R0,R7
   \   00000220   0500001A           BNE      ??edit_xstatus_onkey_15
   \   00000224   0020A0E1           MOV      R2,R0
   \   00000228   34108DE2           ADD      R1,SP,#+52
   \   0000022C   0800A0E1           MOV      R0,R8
   \   00000230   150100EF           SWI      +277
   \   00000234   000050E3           CMP      R0,#+0
   \   00000238   0800000A           BEQ      ??edit_xstatus_onkey_11
    332                {
    333                  ReplaceStr(&XStatusText,s-XStatusText,len,tmp,l);
   \                     ??edit_xstatus_onkey_15:
   \   0000023C   80002DE9           PUSH     {R7}
   \   00000240   000095E5           LDR      R0,[R5, #+0]
   \   00000244   04209DE5           LDR      R2,[SP, #+4]
   \   00000248   38308DE2           ADD      R3,SP,#+56
   \   0000024C   001048E0           SUB      R1,R8,R0
   \   00000250   0500A0E1           MOV      R0,R5
   \   00000254   ........           BL       ReplaceStr
    334                  is_any_change=1;
   \   00000258   04D08DE2           ADD      SP,SP,#+4
   \   0000025C   010000EA           B        ??edit_xstatus_onkey_16
    335                }
    336              }
    337              
    338              if (is_any_change)
   \                     ??edit_xstatus_onkey_11:
   \   00000260   000056E3           CMP      R6,#+0
   \   00000264   0000000A           BEQ      ??edit_xstatus_onkey_17
    339              {
    340                SaveXStatusText();
   \                     ??edit_xstatus_onkey_16:
   \   00000268   ........           BL       SaveXStatusText
    341              }
    342              return (1);
   \                     ??edit_xstatus_onkey_17:
   \   0000026C   0100A0E3           MOV      R0,#+1
   \   00000270   B8D08DE2           ADD      SP,SP,#+184
   \   00000274   F08FBDE8           POP      {R4-R11,PC}
    343            }
    344            return (0);
   \                     ??edit_xstatus_onkey_0:
   \   00000278   0000A0E3           MOV      R0,#+0
   \   0000027C   B8D08DE2           ADD      SP,SP,#+184
   \   00000280   F08FBDE8           POP      {R4-R11,PC}      ;; return
    345          }
    346          

   \                                 In segment CODE, align 4, keep-with-next
    347          void edit_xstatus_ghook(GUI *data, int cmd)
    348          {
   \                     edit_xstatus_ghook:
   \   00000000   00402DE9           PUSH     {LR}
    349            static SOFTKEY_DESC sk={0x0FFF,0x0000,(int)"Save!"};
    350            if (cmd==0x0A)
   \   00000004   0A0051E3           CMP      R1,#+10
   \   00000008   0100001A           BNE      ??edit_xstatus_ghook_0
    351            {
    352              DisableIDLETMR();
   \   0000000C   7F0100EF           SWI      +383
   \   00000010   0080BDE8           POP      {PC}
    353            }
    354            if (cmd==7)
   \                     ??edit_xstatus_ghook_0:
   \   00000014   070051E3           CMP      R1,#+7
   \   00000018   0080BD18           POPNE    {PC}
    355            {
    356              SetSoftKey(data,&sk,SET_SOFT_KEY_N);
   \   0000001C   08109FE5           LDR      R1,??edit_xstatus_ghook_1  ;; ??sk
   \   00000020   0020A0E3           MOV      R2,#+0
   \   00000024   680100EF           SWI      +360
    357            }
    358          }
   \   00000028   0080BDE8           POP      {PC}             ;; return
   \                     ??edit_xstatus_ghook_1:
   \   0000002C   ........           DC32     ??sk

   \                                 In segment DATA_I, align 4, align-sorted
   \                     ??sk:
   \   00000000                      DS8 8
   \   00000008                      REQUIRE `?<Initializer for sk>`
    359          
    360          HEADER_DESC edit_xstatus_hdr={0,0,0,0,NULL,NULL,LGP_NULL};
    361          
    362          INPUTDIA_DESC edit_xstatus_desc =
    363          {
    364            1,
    365            edit_xstatus_onkey,
    366            edit_xstatus_ghook,
    367            (void *)edit_xstatus_locret,
    368            0,
    369            &edit_x_skt,
    370            {0,0,0,0},
    371            FONT_SMALL,
    372            100,
    373            101,
    374            0,
    375            //  0x00000001 - Выровнять по правому краю
    376            //  0x00000002 - Выровнять по центру
    377            //  0x00000004 - Инверсия знакомест
    378            //  0x00000008 - UnderLine
    379            //  0x00000020 - Не переносить слова
    380            //  0x00000200 - bold
    381            0,
    382            //  0x00000002 - ReadOnly
    383            //  0x00000004 - Не двигается курсор
    384            //  0x40000000 - Поменять местами софт-кнопки
    385            0x40000000
    386          };
    387          
    388          

   \                                 In segment CODE, align 4, keep-with-next
    389          static void EditXStatus(int xstatus)
    390          {
   \                     EditXStatus:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   \   00000004   30D04DE2           SUB      SP,SP,#+48
   \   00000008   0040A0E1           MOV      R4,R0
    391            void *ma=malloc_adr();
    392            void *eq;
    393            EDITCONTROL ec;
    394            char *s;
    395            int len;
    396            int c;
    397             
    398            eq=AllocEQueue(ma,mfree_adr());    
    399            WSHDR *ews=AllocWS(128);
    400            ascii2ws(ews, (char*)lgpData[LGP_Comment] );   // Коментарий
    401            PrepareEditControl(&ec);
    402            ConstructEditControl(&ec,ECT_HEADER,0x40,ews,ews->wsbody[0]);
    403            AddEditControlToEditQend(eq,&ec,ma);    //1
    404            
    405            CutWSTR(ews,0);
    406            s=GetXStatusStr(xstatus*3, &len);
   \   0000000C   848084E0           ADD      R8,R4,R4, LSL #+1
   \   00000010   148000EF           SWI      +32788
   \   00000014   0050A0E1           MOV      R5,R0
   \   00000018   158000EF           SWI      +32789
   \   0000001C   0010A0E1           MOV      R1,R0
   \   00000020   0500A0E1           MOV      R0,R5
   \   00000024   630100EF           SWI      +355
   \   00000028   0060A0E1           MOV      R6,R0
   \   0000002C   8000A0E3           MOV      R0,#+128
   \   00000030   250100EF           SWI      +293
   \   00000034   0070A0E1           MOV      R7,R0
   \   00000038   F8029FE5           LDR      R0,??EditXStatus_0  ;; lgpData + 240
   \   0000003C   001090E5           LDR      R1,[R0, #+0]
   \   00000040   0700A0E1           MOV      R0,R7
   \   00000044   ........           _BLF     ascii2ws,??ascii2ws??rA
   \   00000048   04008DE2           ADD      R0,SP,#+4
   \   0000004C   640100EF           SWI      +356
   \   00000050   000097E5           LDR      R0,[R7, #+0]
   \   00000054   0730A0E1           MOV      R3,R7
   \   00000058   B000D0E1           LDRH     R0,[R0, #+0]
   \   0000005C   4020A0E3           MOV      R2,#+64
   \   00000060   0110A0E3           MOV      R1,#+1
   \   00000064   01002DE9           PUSH     {R0}
   \   00000068   08008DE2           ADD      R0,SP,#+8
   \   0000006C   650100EF           SWI      +357
   \   00000070   0520A0E1           MOV      R2,R5
   \   00000074   08108DE2           ADD      R1,SP,#+8
   \   00000078   0600A0E1           MOV      R0,R6
   \   0000007C   660100EF           SWI      +358
   \   00000080   0010A0E3           MOV      R1,#+0
   \   00000084   0700A0E1           MOV      R0,R7
   \   00000088   260100EF           SWI      +294
   \   0000008C   04108DE2           ADD      R1,SP,#+4
   \   00000090   0800A0E1           MOV      R0,R8
   \   00000094   ........           BL       GetXStatusStr
   \   00000098   0090B0E1           MOVS     R9,R0
    407            if (s)
   \   0000009C   04D08DE2           ADD      SP,SP,#+4
   \   000000A0   0C00000A           BEQ      ??EditXStatus_1
   \   000000A4   060000EA           B        ??EditXStatus_2
    408            {
    409              while((c=*s++) && len)
    410              {
    411                wsAppendChar(ews,char8to16(c));
   \                     ??EditXStatus_3:
   \   000000A8   ........           _BLF     char8to16,??char8to16??rA
   \   000000AC   0010A0E1           MOV      R1,R0
   \   000000B0   0700A0E1           MOV      R0,R7
   \   000000B4   1C0000EF           SWI      +28
    412                len--;
   \   000000B8   00109DE5           LDR      R1,[SP, #+0]
   \   000000BC   011041E2           SUB      R1,R1,#+1
   \   000000C0   00108DE5           STR      R1,[SP, #+0]
    413              }
   \                     ??EditXStatus_2:
   \   000000C4   ........           LDRB     R0,[R9], #+1
   \   000000C8   000050E3           CMP      R0,#+0
   \   000000CC   00109D15           LDRNE    R1,[SP, #+0]
   \   000000D0   00005113           CMPNE    R1,#+0
   \   000000D4   F3FFFF1A           BNE      ??EditXStatus_3
    414            }
    415            PrepareEditControl(&ec);
    416            ConstructEditControl(&ec,ECT_NORMAL_TEXT,0x40,ews,20);
    417            AddEditControlToEditQend(eq,&ec,ma);   //2
    418            
    419            ascii2ws(ews,"Short X:");      // Короткий Икс Статус
   \                     ??EditXStatus_1:
   \   000000D8   5C929FE5           LDR      R9,??EditXStatus_0+0x4  ;; `?<Constant "Short X:">`
   \   000000DC   04008DE2           ADD      R0,SP,#+4
   \   000000E0   640100EF           SWI      +356
   \   000000E4   1400A0E3           MOV      R0,#+20
   \   000000E8   01002DE9           PUSH     {R0}
   \   000000EC   0730A0E1           MOV      R3,R7
   \   000000F0   4020A0E3           MOV      R2,#+64
   \   000000F4   0310A0E3           MOV      R1,#+3
   \   000000F8   08008DE2           ADD      R0,SP,#+8
   \   000000FC   650100EF           SWI      +357
   \   00000100   0520A0E1           MOV      R2,R5
   \   00000104   08108DE2           ADD      R1,SP,#+8
   \   00000108   0600A0E1           MOV      R0,R6
   \   0000010C   660100EF           SWI      +358
   \   00000110   0910A0E1           MOV      R1,R9
   \   00000114   0700A0E1           MOV      R0,R7
   \   00000118   ........           _BLF     ascii2ws,??ascii2ws??rA
    420            PrepareEditControl(&ec);
   \   0000011C   08008DE2           ADD      R0,SP,#+8
   \   00000120   640100EF           SWI      +356
    421            ConstructEditControl(&ec,ECT_HEADER,0x40,ews,ews->wsbody[0]);
   \   00000124   000097E5           LDR      R0,[R7, #+0]
   \   00000128   0730A0E1           MOV      R3,R7
   \   0000012C   B000D0E1           LDRH     R0,[R0, #+0]
   \   00000130   4020A0E3           MOV      R2,#+64
   \   00000134   0110A0E3           MOV      R1,#+1
   \   00000138   01002DE9           PUSH     {R0}
   \   0000013C   0C008DE2           ADD      R0,SP,#+12
   \   00000140   650100EF           SWI      +357
    422            AddEditControlToEditQend(eq,&ec,ma);   //3
   \   00000144   0520A0E1           MOV      R2,R5
   \   00000148   0C108DE2           ADD      R1,SP,#+12
   \   0000014C   0600A0E1           MOV      R0,R6
   \   00000150   660100EF           SWI      +358
    423            
    424            CutWSTR(ews,0);
   \   00000154   0010A0E3           MOV      R1,#+0
   \   00000158   0700A0E1           MOV      R0,R7
   \   0000015C   260100EF           SWI      +294
    425            s=GetXStatusStr(xstatus*3+1, &len);
   \   00000160   08108DE2           ADD      R1,SP,#+8
   \   00000164   010088E2           ADD      R0,R8,#+1
   \   00000168   ........           BL       GetXStatusStr
   \   0000016C   00A0B0E1           MOVS     R10,R0
    426            if (s)
   \   00000170   08D08DE2           ADD      SP,SP,#+8
   \   00000174   0C00000A           BEQ      ??EditXStatus_4
   \   00000178   060000EA           B        ??EditXStatus_5
    427            {
    428              while((c=*s++) && len)
    429              {
    430                wsAppendChar(ews,char8to16(c));
   \                     ??EditXStatus_6:
   \   0000017C   ........           _BLF     char8to16,??char8to16??rA
   \   00000180   0010A0E1           MOV      R1,R0
   \   00000184   0700A0E1           MOV      R0,R7
   \   00000188   1C0000EF           SWI      +28
    431                len--;
   \   0000018C   00109DE5           LDR      R1,[SP, #+0]
   \   00000190   011041E2           SUB      R1,R1,#+1
   \   00000194   00108DE5           STR      R1,[SP, #+0]
    432              }
   \                     ??EditXStatus_5:
   \   00000198   ........           LDRB     R0,[R10], #+1
   \   0000019C   000050E3           CMP      R0,#+0
   \   000001A0   00109D15           LDRNE    R1,[SP, #+0]
   \   000001A4   00005113           CMPNE    R1,#+0
   \   000001A8   F3FFFF1A           BNE      ??EditXStatus_6
    433            }
    434            PrepareEditControl(&ec);
   \                     ??EditXStatus_4:
   \   000001AC   04008DE2           ADD      R0,SP,#+4
   \   000001B0   640100EF           SWI      +356
    435            ConstructEditControl(&ec,ECT_NORMAL_TEXT,0x40,ews,128);
   \   000001B4   8000A0E3           MOV      R0,#+128
   \   000001B8   01002DE9           PUSH     {R0}
   \   000001BC   0730A0E1           MOV      R3,R7
   \   000001C0   4020A0E3           MOV      R2,#+64
   \   000001C4   0310A0E3           MOV      R1,#+3
   \   000001C8   08008DE2           ADD      R0,SP,#+8
   \   000001CC   650100EF           SWI      +357
    436            AddEditControlToEditQend(eq,&ec,ma);   //4
   \   000001D0   0520A0E1           MOV      R2,R5
   \   000001D4   08108DE2           ADD      R1,SP,#+8
   \   000001D8   0600A0E1           MOV      R0,R6
   \   000001DC   660100EF           SWI      +358
    437            
    438            ascii2ws(ews,"Large X:");     // Длинный Икс Статус
   \   000001E0   0C1089E2           ADD      R1,R9,#+12
   \   000001E4   0700A0E1           MOV      R0,R7
   \   000001E8   ........           _BLF     ascii2ws,??ascii2ws??rA
    439            PrepareEditControl(&ec);
   \   000001EC   08008DE2           ADD      R0,SP,#+8
   \   000001F0   640100EF           SWI      +356
    440            ConstructEditControl(&ec,ECT_HEADER,0x40,ews,ews->wsbody[0]);
   \   000001F4   000097E5           LDR      R0,[R7, #+0]
   \   000001F8   0730A0E1           MOV      R3,R7
   \   000001FC   B000D0E1           LDRH     R0,[R0, #+0]
   \   00000200   4020A0E3           MOV      R2,#+64
   \   00000204   0110A0E3           MOV      R1,#+1
   \   00000208   01002DE9           PUSH     {R0}
   \   0000020C   0C008DE2           ADD      R0,SP,#+12
   \   00000210   650100EF           SWI      +357
    441            AddEditControlToEditQend(eq,&ec,ma);   //5
   \   00000214   0520A0E1           MOV      R2,R5
   \   00000218   0C108DE2           ADD      R1,SP,#+12
   \   0000021C   0600A0E1           MOV      R0,R6
   \   00000220   660100EF           SWI      +358
    442            
    443            CutWSTR(ews,0);
   \   00000224   0010A0E3           MOV      R1,#+0
   \   00000228   0700A0E1           MOV      R0,R7
   \   0000022C   260100EF           SWI      +294
    444            s=GetXStatusStr(xstatus*3+2, &len);
   \   00000230   08108DE2           ADD      R1,SP,#+8
   \   00000234   020088E2           ADD      R0,R8,#+2
   \   00000238   ........           BL       GetXStatusStr
   \   0000023C   0080B0E1           MOVS     R8,R0
    445            if (s)
   \   00000240   08D08DE2           ADD      SP,SP,#+8
   \   00000244   0C00000A           BEQ      ??EditXStatus_7
   \   00000248   060000EA           B        ??EditXStatus_8
    446            {
    447              while((c=*s++) && len)
    448              {
    449                wsAppendChar(ews,char8to16(c));
   \                     ??EditXStatus_9:
   \   0000024C   ........           _BLF     char8to16,??char8to16??rA
   \   00000250   0010A0E1           MOV      R1,R0
   \   00000254   0700A0E1           MOV      R0,R7
   \   00000258   1C0000EF           SWI      +28
    450                len--;
   \   0000025C   00109DE5           LDR      R1,[SP, #+0]
   \   00000260   011041E2           SUB      R1,R1,#+1
   \   00000264   00108DE5           STR      R1,[SP, #+0]
    451              }
   \                     ??EditXStatus_8:
   \   00000268   ........           LDRB     R0,[R8], #+1
   \   0000026C   000050E3           CMP      R0,#+0
   \   00000270   00109D15           LDRNE    R1,[SP, #+0]
   \   00000274   00005113           CMPNE    R1,#+0
   \   00000278   F3FFFF1A           BNE      ??EditXStatus_9
    452            }
    453            PrepareEditControl(&ec);
   \                     ??EditXStatus_7:
   \   0000027C   04008DE2           ADD      R0,SP,#+4
   \   00000280   640100EF           SWI      +356
    454            ConstructEditControl(&ec,ECT_NORMAL_TEXT,0x40,ews,128);
   \   00000284   8000A0E3           MOV      R0,#+128
   \   00000288   01002DE9           PUSH     {R0}
   \   0000028C   0730A0E1           MOV      R3,R7
   \   00000290   4020A0E3           MOV      R2,#+64
   \   00000294   0310A0E3           MOV      R1,#+3
   \   00000298   08008DE2           ADD      R0,SP,#+8
   \   0000029C   650100EF           SWI      +357
    455            AddEditControlToEditQend(eq,&ec,ma);   //6
   \   000002A0   0520A0E1           MOV      R2,R5
    456            
    457            FreeWS(ews);
    458            patch_header(&edit_xstatus_hdr);
   \   000002A4   94509FE5           LDR      R5,??EditXStatus_0+0x8  ;; edit_xstatus_desc
   \   000002A8   08108DE2           ADD      R1,SP,#+8
   \   000002AC   0600A0E1           MOV      R0,R6
   \   000002B0   660100EF           SWI      +358
   \   000002B4   0700A0E1           MOV      R0,R7
   \   000002B8   290100EF           SWI      +297
   \   000002BC   0070A0E3           MOV      R7,#+0
   \   000002C0   B873C5E1           STRH     R7,[R5, #+56]
   \   000002C4   1800A0E3           MOV      R0,#+24
   \   000002C8   BA03C5E1           STRH     R0,[R5, #+58]
   \   000002CC   888100EF           SWI      +33160
   \   000002D0   010040E2           SUB      R0,R0,#+1
   \   000002D4   BC03C5E1           STRH     R0,[R5, #+60]
   \   000002D8   8A8100EF           SWI      +33162
   \   000002DC   170080E2           ADD      R0,R0,#+23
   \   000002E0   BE03C5E1           STRH     R0,[R5, #+62]
    459            patch_input(&edit_xstatus_desc);
   \   000002E4   B871C5E1           STRH     R7,[R5, #+24]
   \   000002E8   8A8100EF           SWI      +33162
   \   000002EC   190080E2           ADD      R0,R0,#+25
   \   000002F0   BA01C5E1           STRH     R0,[R5, #+26]
   \   000002F4   888100EF           SWI      +33160
   \   000002F8   010040E2           SUB      R0,R0,#+1
   \   000002FC   BC01C5E1           STRH     R0,[R5, #+28]
   \   00000300   898100EF           SWI      +33161
   \   00000304   0070A0E1           MOV      R7,R0
   \   00000308   8B8100EF           SWI      +33163
   \   0000030C   000047E0           SUB      R0,R7,R0
   \   00000310   010040E2           SUB      R0,R0,#+1
   \   00000314   BE01C5E1           STRH     R0,[R5, #+30]
    460            CreateInputTextDialog(&edit_xstatus_desc,&edit_xstatus_hdr,eq,1,(void *)xstatus);  
   \   00000318   10002DE9           PUSH     {R4}
   \   0000031C   0130A0E3           MOV      R3,#+1
   \   00000320   0620A0E1           MOV      R2,R6
   \   00000324   381085E2           ADD      R1,R5,#+56
   \   00000328   0500A0E1           MOV      R0,R5
   \   0000032C   670100EF           SWI      +359
    461          }
   \   00000330   38D08DE2           ADD      SP,SP,#+56
   \   00000334   F087BDE8           POP      {R4-R10,PC}      ;; return
   \                     ??EditXStatus_0:
   \   00000338   ........           DC32     lgpData + 240
   \   0000033C   ........           DC32     `?<Constant "Short X:">`
   \   00000340   ........           DC32     edit_xstatus_desc
    462          

   \                                 In segment CODE, align 4, keep-with-next
    463          static int xst_onkey(void *data, GUI_MSG *msg)
    464          {
   \                     xst_onkey:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0140A0E1           MOV      R4,R1
    465            int i;
    466            i=GetCurMenuItem(data);
   \   00000008   8F0100EF           SWI      +399
    467            if (msg->keys==0x18)
   \   0000000C   F210D4E1           LDRSH    R1,[R4, #+2]
   \   00000010   180051E3           CMP      R1,#+24
   \   00000014   0200001A           BNE      ??xst_onkey_0
    468            {
    469              EditXStatus(i);
   \   00000018   ........           BL       EditXStatus
    470              return(0);
   \   0000001C   0000A0E3           MOV      R0,#+0
   \   00000020   1080BDE8           POP      {R4,PC}
    471            }
    472            if (msg->keys==0x3D)
   \                     ??xst_onkey_0:
   \   00000024   3D0051E3           CMP      R1,#+61
   \   00000028   0600001A           BNE      ??xst_onkey_1
    473            {
    474              Change_XStatus(i);
   \   0000002C   ........           LDR      R1,??DataTable13  ;; CurrentXStatus
   \   00000030   000081E5           STR      R0,[R1, #+0]
   \   00000034   ........           _BLF     set_my_xstatus,??set_my_xstatus??rA
   \   00000038   ........           LDR      R0,??DataTable9  ;; WriteDefSettings
   \   0000003C   710100EF           SWI      +369
    475              return(1);
   \   00000040   0100A0E3           MOV      R0,#+1
   \   00000044   1080BDE8           POP      {R4,PC}
    476            }
    477            return (0);
   \                     ??xst_onkey_1:
   \   00000048   0000A0E3           MOV      R0,#+0
   \   0000004C   1080BDE8           POP      {R4,PC}          ;; return
    478          }
    479          

   \                                 In segment CODE, align 4, keep-with-next
    480          static void xst_ghook(void *data, int cmd)
    481          {
   \                     xst_ghook:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0140A0E1           MOV      R4,R1
    482            PNGTOP_DESC *pltop=PNG_TOP();
   \   00000008   B98100EF           SWI      +33209
    483            if (cmd==9)
   \   0000000C   090054E3           CMP      R4,#+9
    484            {
    485              pltop->dyn_pltop=NULL;
   \   00000010   0010A003           MOVEQ    R1,#+0
   \   00000014   08108005           STREQ    R1,[R0, #+8]
   \   00000018   1080BD08           POPEQ    {R4,PC}
    486            }
    487            if (cmd==0x0A)
   \   0000001C   0A0054E3           CMP      R4,#+10
   \   00000020   1080BD18           POPNE    {R4,PC}
    488            {
    489              pltop->dyn_pltop=XStatusesImgList;
   \   00000024   10109FE5           LDR      R1,??xst_ghook_0  ;; XStatusesImgList
   \   00000028   001091E5           LDR      R1,[R1, #+0]
   \   0000002C   081080E5           STR      R1,[R0, #+8]
    490              DisableIDLETMR();
   \   00000030   7F0100EF           SWI      +383
    491              //Загрузка текста при фокусе
    492              LoadXStatusText();
   \   00000034   ........           BL       LoadXStatusText
    493            }
    494          }
   \   00000038   1080BDE8           POP      {R4,PC}          ;; return
   \                     ??xst_ghook_0:
   \   0000003C   ........           DC32     XStatusesImgList
    495          

   \                                 In segment CODE, align 4, keep-with-next
    496          static void xst_itemh(void *data, int curitem, void *unk)
    497          {
   \                     xst_itemh:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
    498            void *item=AllocMLMenuItem(data);
    499            WSHDR ws1loc, *ws1, *ws2;
    500            unsigned short num[128];
    501            WSHDR ws3loc, *ws3, *ws4;
    502            unsigned short num3[128];
    503            char ss[128];
    504            char *s;
    505            int l;
    506            extern const char percent_t[];
    507            
    508            ws1=CreateLocalWS(&ws1loc,num,128);
    509            ws3=CreateLocalWS(&ws3loc,num3,128);
    510            
    511            if (s=GetXStatusStr(curitem*3+1,&l))
   \   00000004   ........           LDR      R9,??DataTable10  ;; percent_t
   \   00000008   70A19FE5           LDR      R10,??xst_itemh_0  ;; `?<Constant "Short XS %d">`
   \   0000000C   ACDF4DE2           SUB      SP,SP,#+688
   \   00000010   0040A0E1           MOV      R4,R0
   \   00000014   0150A0E1           MOV      R5,R1
   \   00000018   190200EF           SWI      +537
   \   0000001C   0060A0E1           MOV      R6,R0
   \   00000020   8020A0E3           MOV      R2,#+128
   \   00000024   08108DE2           ADD      R1,SP,#+8
   \   00000028   A20F8DE2           ADD      R0,SP,#+648
   \   0000002C   270100EF           SWI      +295
   \   00000030   0070A0E1           MOV      R7,R0
   \   00000034   8020A0E3           MOV      R2,#+128
   \   00000038   421F8DE2           ADD      R1,SP,#+264
   \   0000003C   A70F8DE2           ADD      R0,SP,#+668
   \   00000040   270100EF           SWI      +295
   \   00000044   0080A0E1           MOV      R8,R0
   \   00000048   85B085E0           ADD      R11,R5,R5, LSL #+1
   \   0000004C   0D10A0E1           MOV      R1,SP
   \   00000050   01008BE2           ADD      R0,R11,#+1
   \   00000054   ........           BL       GetXStatusStr
   \   00000058   04008DE5           STR      R0,[SP, #+4]
   \   0000005C   000050E3           CMP      R0,#+0
   \   00000060   0E00000A           BEQ      ??xst_itemh_1
    512            {
    513              memset(ss,0,128);
   \   00000064   8020A0E3           MOV      R2,#+128
   \   00000068   0010A0E3           MOV      R1,#+0
   \   0000006C   820F8DE2           ADD      R0,SP,#+520
   \   00000070   BB0000EF           SWI      +187
    514              if (l>127) l=127;
   \   00000074   00009DE5           LDR      R0,[SP, #+0]
   \   00000078   800050E3           CMP      R0,#+128
   \   0000007C   7F10A0A3           MOVGE    R1,#+127
   \   00000080   00108DA5           STRGE    R1,[SP, #+0]
    515              strncpy(ss,s,l);
   \   00000084   00209DE5           LDR      R2,[SP, #+0]
   \   00000088   04109DE5           LDR      R1,[SP, #+4]
   \   0000008C   820F8DE2           ADD      R0,SP,#+520
   \   00000090   160100EF           SWI      +278
    516              wsprintf(ws1,percent_t,ss);
   \   00000094   822F8DE2           ADD      R2,SP,#+520
   \   00000098   0910A0E1           MOV      R1,R9
   \   0000009C   010000EA           B        ??xst_itemh_2
    517            }
    518            else
    519            {
    520              wsprintf(ws1,"Short XS %d",curitem);
   \                     ??xst_itemh_1:
   \   000000A0   0520A0E1           MOV      R2,R5
   \   000000A4   0A10A0E1           MOV      R1,R10
   \                     ??xst_itemh_2:
   \   000000A8   0700A0E1           MOV      R0,R7
   \   000000AC   240100EF           SWI      +292
    521            }
    522            if (s=GetXStatusStr(curitem*3+2,&l))
   \   000000B0   0D10A0E1           MOV      R1,SP
   \   000000B4   02008BE2           ADD      R0,R11,#+2
   \   000000B8   ........           BL       GetXStatusStr
   \   000000BC   00B0B0E1           MOVS     R11,R0
   \   000000C0   0E00000A           BEQ      ??xst_itemh_3
    523            {
    524              memset(ss,0,128);
   \   000000C4   8020A0E3           MOV      R2,#+128
   \   000000C8   0010A0E3           MOV      R1,#+0
   \   000000CC   820F8DE2           ADD      R0,SP,#+520
   \   000000D0   BB0000EF           SWI      +187
    525              if (l>127) l=127;
   \   000000D4   00009DE5           LDR      R0,[SP, #+0]
   \   000000D8   800050E3           CMP      R0,#+128
   \   000000DC   7F10A0A3           MOVGE    R1,#+127
   \   000000E0   00108DA5           STRGE    R1,[SP, #+0]
    526              strncpy(ss,s,l);
   \   000000E4   00209DE5           LDR      R2,[SP, #+0]
   \   000000E8   0B10A0E1           MOV      R1,R11
   \   000000EC   820F8DE2           ADD      R0,SP,#+520
   \   000000F0   160100EF           SWI      +278
    527              wsprintf(ws3,percent_t,ss);
   \   000000F4   822F8DE2           ADD      R2,SP,#+520
   \   000000F8   0910A0E1           MOV      R1,R9
   \   000000FC   010000EA           B        ??xst_itemh_4
    528            }
    529            else
    530            {
    531              wsprintf(ws3,"Large XS %d",curitem);
   \                     ??xst_itemh_3:
   \   00000100   0520A0E1           MOV      R2,R5
   \   00000104   0C108AE2           ADD      R1,R10,#+12
   \                     ??xst_itemh_4:
   \   00000108   0800A0E1           MOV      R0,R8
   \   0000010C   240100EF           SWI      +292
    532            }
    533            ws2=AllocMenuWS(data,ws1->wsbody[0]);
   \   00000110   000097E5           LDR      R0,[R7, #+0]
   \   00000114   B010D0E1           LDRH     R1,[R0, #+0]
   \   00000118   0400A0E1           MOV      R0,R4
   \   0000011C   980100EF           SWI      +408
   \   00000120   0090A0E1           MOV      R9,R0
    534          
    535            wstrcpy(ws2,ws1);
   \   00000124   0710A0E1           MOV      R1,R7
   \   00000128   1F0100EF           SWI      +287
    536            ws4=AllocMenuWS(data,ws3->wsbody[0]);
   \   0000012C   000098E5           LDR      R0,[R8, #+0]
   \   00000130   B010D0E1           LDRH     R1,[R0, #+0]
   \   00000134   0400A0E1           MOV      R0,R4
   \   00000138   980100EF           SWI      +408
   \   0000013C   0070A0E1           MOV      R7,R0
    537            wstrcpy(ws4,ws3);
   \   00000140   0810A0E1           MOV      R1,R8
   \   00000144   1F0100EF           SWI      +287
    538            SetMenuItemIconArray(data, item, XStatusesIconArray+curitem);
   \   00000148   ........           LDR      R0,??DataTable12  ;; XStatusesIconArray
   \   0000014C   0610A0E1           MOV      R1,R6
   \   00000150   000090E5           LDR      R0,[R0, #+0]
   \   00000154   052180E0           ADD      R2,R0,R5, LSL #+2
   \   00000158   0400A0E1           MOV      R0,R4
   \   0000015C   990100EF           SWI      +409
    539            SetMLMenuItemText(data, item, ws2, ws4, curitem);
   \   00000160   20002DE9           PUSH     {R5}
   \   00000164   0730A0E1           MOV      R3,R7
   \   00000168   0920A0E1           MOV      R2,R9
   \   0000016C   0610A0E1           MOV      R1,R6
   \   00000170   0400A0E1           MOV      R0,R4
   \   00000174   180200EF           SWI      +536
    540          }
   \   00000178   ADDF8DE2           ADD      SP,SP,#+692
   \   0000017C   F08FBDE8           POP      {R4-R11,PC}      ;; return
   \                     ??xst_itemh_0:
   \   00000180   ........           DC32     `?<Constant "Short XS %d">`
    541          
    542          static SOFTKEY_DESC xst_menu_sk[]=
    543          {
    544            {0x0018,0x0000,NULL},
    545            {0x0001,0x0000,NULL},
    546            {0x003D,0x0000,(int)LGP_DOIT_PIC}
    547          };
    548          

   \                                 In segment DATA_C, align 4, align-sorted
    549          static const SOFTKEYSTAB xst_menu_skt=
   \                     xst_menu_skt:
   \   00000000   ........0000       DC32 xst_menu_sk, 0
   \              0000        

   \                                 In segment DATA_I, align 4, align-sorted
   \                     edit_xstatus_desc:
   \   00000000                      DS8 56
   \   00000038                      REQUIRE `?<Initializer for edit_xstatus_desc>`
   \                     edit_xstatus_hdr:
   \   00000038                      DS8 20
   \   0000004C                      REQUIRE `?<Initializer for edit_xstatus_hdr>`
   \   0000004C                      DS8 20
   \   00000060                      REQUIRE `?<Initializer for xst_menuhdr>`
   \                     xst_menu_sk:
   \   00000060                      DS8 24
   \   00000078                      REQUIRE `?<Initializer for xst_menu_sk>`
    550          {
    551            xst_menu_sk,0
    552          };
    553          
    554          static HEADER_DESC xst_menuhdr={0,0,0,0,NULL,NULL,LGP_NULL};
    555          

   \                                 In segment DATA_C, align 4, align-sorted
    556          static const ML_MENU_DESC xst_menu=
   \                     xst_menu:
   \   00000000   08000000....       DC32 8, xst_onkey, xst_ghook, 0H, st_menusoftkeys, xst_menu_skt, 17
   \              ............
   \              00000000....
   \              ............
   \              11000000    
   \   0000001C   ........0000       DC32 xst_itemh, 0H, 0H, 0, 1
   \              000000000000
   \              000000000100
   \              0000        
    557          {
    558            8,xst_onkey,xst_ghook,NULL,
    559            st_menusoftkeys,
    560            &xst_menu_skt,
    561            0x11,
    562            xst_itemh,
    563            NULL,
    564            NULL,
    565            0,
    566            1
    567          };
    568          

   \                                 In segment CODE, align 4, keep-with-next
    569          void DispXStatusChangeMenu(void)
    570          {
   \                     DispXStatusChangeMenu:
   \   00000000   10402DE9           PUSH     {R4,LR}
    571            patch_header(&xst_menuhdr);
   \   00000004   88409FE5           LDR      R4,??DispXStatusChangeMenu_0  ;; edit_xstatus_desc
   \   00000008   0000A0E3           MOV      R0,#+0
   \   0000000C   BC04C4E1           STRH     R0,[R4, #+76]
   \   00000010   1800A0E3           MOV      R0,#+24
   \   00000014   BE04C4E1           STRH     R0,[R4, #+78]
   \   00000018   888100EF           SWI      +33160
   \   0000001C   010040E2           SUB      R0,R0,#+1
   \   00000020   B005C4E1           STRH     R0,[R4, #+80]
   \   00000024   8A8100EF           SWI      +33162
    572            *((int **)(&xst_menuhdr.icon))=XStatusesIconArray+CurrentXStatus;
   \   00000028   ........           LDR      R1,??DataTable12  ;; XStatusesIconArray
   \   0000002C   170080E2           ADD      R0,R0,#+23
   \   00000030   001091E5           LDR      R1,[R1, #+0]
   \   00000034   B205C4E1           STRH     R0,[R4, #+82]
   \   00000038   ........           LDR      R0,??DataTable13  ;; CurrentXStatus
    573            
    574            //Инициализация ленгпака
    575            xst_menuhdr.lgp_id=(int)lgpData[LGP_ChgXStatus];
    576            edit_xstatus_hdr.lgp_id=(int)lgpData[LGP_MnuXStatus];
    577            xst_menu_sk[0].lgp_id=(int)lgpData[LGP_Text];
    578            xst_menu_sk[1].lgp_id=(int)lgpData[LGP_Back];
    579           
    580            CreateMultiLinesMenu(0,0,&xst_menu,&xst_menuhdr,CurrentXStatus,total_xstatuses);
   \   0000003C   4C3084E2           ADD      R3,R4,#+76
   \   00000040   000090E5           LDR      R0,[R0, #+0]
   \   00000044   001181E0           ADD      R1,R1,R0, LSL #+2
   \   00000048   541084E5           STR      R1,[R4, #+84]
   \   0000004C   ........           LDR      R1,??DataTable14  ;; lgpData
   \   00000050   BC2091E5           LDR      R2,[R1, #+188]
   \   00000054   582084E5           STR      R2,[R4, #+88]
   \   00000058   602091E5           LDR      R2,[R1, #+96]
   \   0000005C   442084E5           STR      R2,[R4, #+68]
   \   00000060   342091E5           LDR      R2,[R1, #+52]
   \   00000064   381091E5           LDR      R1,[R1, #+56]
   \   00000068   642084E5           STR      R2,[R4, #+100]
   \   0000006C   24209FE5           LDR      R2,??DispXStatusChangeMenu_0+0x4  ;; xst_menu
   \   00000070   6C1084E5           STR      R1,[R4, #+108]
   \   00000074   20109FE5           LDR      R1,??DispXStatusChangeMenu_0+0x8  ;; total_xstatuses
   \   00000078   001091E5           LDR      R1,[R1, #+0]
   \   0000007C   02002DE9           PUSH     {R1}
   \   00000080   01002DE9           PUSH     {R0}
   \   00000084   0010A0E3           MOV      R1,#+0
   \   00000088   0000A0E3           MOV      R0,#+0
   \   0000008C   170200EF           SWI      +535
    581          }
   \   00000090   1380BDE8           POP      {R0,R1,R4,PC}    ;; return
   \                     ??DispXStatusChangeMenu_0:
   \   00000094   ........           DC32     edit_xstatus_desc
   \   00000098   ........           DC32     xst_menu
   \   0000009C   ........           DC32     total_xstatuses
    582          

   \                                 In segment CODE, align 4, keep-with-next
    583          void LoadXStatusText(void)
    584          {
   \                     LoadXStatusText:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
    585            FSTATS stat;
    586            const char _slash[]="\\";
   \   00000004   28419FE5           LDR      R4,??LoadXStatusText_0  ;; `?<Constant "\\\\">`
   \   00000008   4CDF4DE2           SUB      SP,SP,#+304
   \   0000000C   0010D4E5           LDRB     R1,[R4, #0]
   \   00000010   04008DE2           ADD      R0,SP,#+4
   \   00000014   0010C0E5           STRB     R1,[R0, #+0]
   \   00000018   0110D4E5           LDRB     R1,[R4, #+1]
   \   0000001C   0110C0E5           STRB     R1,[R0, #+1]
    587            char fn[256];
    588            int f;
    589            unsigned int ul;
    590            int fsize;
    591            char *p, *s;
    592            int c;
    593            FreeXStatusText();
   \   00000020   ........           BL       FreeXStatusText
    594            strcpy(fn,TEMPLATES_PATH);
   \   00000024   ........           LDR      R1,??DataTable18  ;; TEMPLATES_PATH
   \   00000028   08008DE2           ADD      R0,SP,#+8
   \   0000002C   1A0000EF           SWI      +26
    595            if (fn[strlen(fn)-1]!='\\') strcat(fn,_slash);
   \   00000030   08008DE2           ADD      R0,SP,#+8
   \   00000034   1B0000EF           SWI      +27
   \   00000038   08108DE2           ADD      R1,SP,#+8
   \   0000003C   010080E0           ADD      R0,R0,R1
   \   00000040   010050E5           LDRB     R0,[R0, #-1]
   \   00000044   5C0050E3           CMP      R0,#+92
   \   00000048   0200000A           BEQ      ??LoadXStatusText_1
   \   0000004C   04108DE2           ADD      R1,SP,#+4
   \   00000050   08008DE2           ADD      R0,SP,#+8
   \   00000054   170000EF           SWI      +23
    596            strcat(fn,XS_FILE_NAME);
   \                     ??LoadXStatusText_1:
   \   00000058   041084E2           ADD      R1,R4,#+4
   \   0000005C   08008DE2           ADD      R0,SP,#+8
   \   00000060   170000EF           SWI      +23
    597            if (GetFileStats(fn,&stat,&ul)==-1) return;
   \   00000064   0040E0E3           MVN      R4,#+0
   \   00000068   0D20A0E1           MOV      R2,SP
   \   0000006C   421F8DE2           ADD      R1,SP,#+264
   \   00000070   08008DE2           ADD      R0,SP,#+8
   \   00000074   840000EF           SWI      +132
   \   00000078   040050E1           CMP      R0,R4
   \   0000007C   2A00000A           BEQ      ??LoadXStatusText_2
    598            if ((fsize=stat.size)<=0) return;
   \   00000080   0C519DE5           LDR      R5,[SP, #+268]
   \   00000084   010055E3           CMP      R5,#+1
   \   00000088   270000BA           BLT      ??LoadXStatusText_2
    599            if ((f=fopen(fn,A_ReadOnly+A_BIN,P_READ,&ul))==-1) return;
   \   0000008C   0D30A0E1           MOV      R3,SP
   \   00000090   8020A0E3           MOV      R2,#+128
   \   00000094   801CA0E3           MOV      R1,#+32768
   \   00000098   08008DE2           ADD      R0,SP,#+8
   \   0000009C   0A0000EF           SWI      +10
   \   000000A0   0060A0E1           MOV      R6,R0
   \   000000A4   040056E1           CMP      R6,R4
   \   000000A8   1F00000A           BEQ      ??LoadXStatusText_2
    600            p=XStatusText=malloc(fsize+2);
   \   000000AC   ........           LDR      R4,??DataTable20  ;; XStatusText
   \   000000B0   020085E2           ADD      R0,R5,#+2
   \   000000B4   140000EF           SWI      +20
   \   000000B8   000084E5           STR      R0,[R4, #+0]
   \   000000BC   0040A0E1           MOV      R4,R0
    601            s=p+1;
   \   000000C0   017084E2           ADD      R7,R4,#+1
    602            s[fread(f,s,fsize,&ul)]=0;
   \   000000C4   0080A0E3           MOV      R8,#+0
   \   000000C8   0D30A0E1           MOV      R3,SP
   \   000000CC   0520A0E1           MOV      R2,R5
   \   000000D0   0710A0E1           MOV      R1,R7
   \   000000D4   0600A0E1           MOV      R0,R6
   \   000000D8   0B0000EF           SWI      +11
   \   000000DC   0780C0E7           STRB     R8,[R0, +R7]
    603            fclose(f,&ul);
   \   000000E0   0D10A0E1           MOV      R1,SP
   \   000000E4   0600A0E1           MOV      R0,R6
   \   000000E8   0D0000EF           SWI      +13
   \   000000EC   040000EA           B        ??LoadXStatusText_3
    604            while((c=*s++)!=0)
    605            {
    606              if (c==10)
    607              {
    608                c=13;
    609                if (*s==13) s++;   // пропускаем
    610              }
    611              else if (c==13)
   \                     ??LoadXStatusText_4:
   \   000000F0   0D0050E3           CMP      R0,#+13
   \   000000F4   0100001A           BNE      ??LoadXStatusText_5
    612              {
    613                if (*s==10) s++;  // пропускаем
   \   000000F8   0A0051E3           CMP      R1,#+10
   \                     ??LoadXStatusText_6:
   \   000000FC   01708702           ADDEQ    R7,R7,#+1
    614              }
    615              *p++=c;
   \                     ??LoadXStatusText_5:
   \   00000100   ........           STRB     R0,[R4], #+1
   \                     ??LoadXStatusText_3:
   \   00000104   ........           LDRB     R0,[R7], #+1
   \   00000108   000050E3           CMP      R0,#+0
   \   0000010C   0500000A           BEQ      ??LoadXStatusText_7
   \   00000110   0010D7E5           LDRB     R1,[R7, #+0]
   \   00000114   0A0050E3           CMP      R0,#+10
   \   00000118   F4FFFF1A           BNE      ??LoadXStatusText_4
   \   0000011C   0D00A0E3           MOV      R0,#+13
   \   00000120   0D0051E3           CMP      R1,#+13
   \   00000124   F4FFFFEA           B        ??LoadXStatusText_6
    616            }
    617            *p=0;
   \                     ??LoadXStatusText_7:
   \   00000128   0080C4E5           STRB     R8,[R4, #+0]
    618          }
   \                     ??LoadXStatusText_2:
   \   0000012C   4CDF8DE2           ADD      SP,SP,#+304      ;; stack cleaning
   \   00000130   F081BDE8           POP      {R4-R8,PC}       ;; return
   \                     ??LoadXStatusText_0:
   \   00000134   ........           DC32     `?<Constant "\\\\">`
    619          

   \                                 In segment CODE, align 4, keep-with-next
    620          void SaveXStatusText(void)
    621          {
    622            int f;
    623            char fn[256];
    624            const char _slash[]="\\";
   \                     SaveXStatusText:
   \   00000000   BC109FE5           LDR      R1,??SaveXStatusText_0  ;; `?<Constant "\\\\">_1`
   \   00000004   30402DE9           PUSH     {R4,R5,LR}
    625            unsigned int ul;
    626            if (!XStatusText) return;
   \   00000008   ........           LDR      R4,??DataTable20  ;; XStatusText
   \   0000000C   42DF4DE2           SUB      SP,SP,#+264
   \   00000010   0020D1E5           LDRB     R2,[R1, #0]
   \   00000014   04008DE2           ADD      R0,SP,#+4
   \   00000018   0020C0E5           STRB     R2,[R0, #+0]
   \   0000001C   0120D1E5           LDRB     R2,[R1, #+1]
   \   00000020   0120C0E5           STRB     R2,[R0, #+1]
   \   00000024   000094E5           LDR      R0,[R4, #+0]
   \   00000028   000050E3           CMP      R0,#+0
   \   0000002C   2200000A           BEQ      ??SaveXStatusText_1
    627            strcpy(fn,TEMPLATES_PATH);
   \   00000030   ........           LDR      R1,??DataTable18  ;; TEMPLATES_PATH
   \   00000034   08008DE2           ADD      R0,SP,#+8
   \   00000038   1A0000EF           SWI      +26
    628            if (fn[strlen(fn)-1]!='\\') strcat(fn,_slash);
   \   0000003C   08008DE2           ADD      R0,SP,#+8
   \   00000040   1B0000EF           SWI      +27
   \   00000044   08108DE2           ADD      R1,SP,#+8
   \   00000048   010080E0           ADD      R0,R0,R1
   \   0000004C   010050E5           LDRB     R0,[R0, #-1]
   \   00000050   5C0050E3           CMP      R0,#+92
   \   00000054   0200000A           BEQ      ??SaveXStatusText_2
   \   00000058   04108DE2           ADD      R1,SP,#+4
   \   0000005C   08008DE2           ADD      R0,SP,#+8
   \   00000060   170000EF           SWI      +23
    629            strcat(fn,XS_FILE_NAME);
   \                     ??SaveXStatusText_2:
   \   00000064   5C109FE5           LDR      R1,??SaveXStatusText_0+0x4  ;; `?<Constant "\\\\">` + 4
   \   00000068   08008DE2           ADD      R0,SP,#+8
   \   0000006C   170000EF           SWI      +23
    630            if ((f=fopen(fn,A_ReadWrite+A_Create+A_Truncate+A_BIN,P_READ+P_WRITE,&ul))==-1) return;
   \   00000070   0D30A0E1           MOV      R3,SP
   \   00000074   602FA0E3           MOV      R2,#+384
   \   00000078   0210A0E3           MOV      R1,#+2
   \   0000007C   831C81E3           ORR      R1,R1,#0x8300
   \   00000080   08008DE2           ADD      R0,SP,#+8
   \   00000084   0A0000EF           SWI      +10
   \   00000088   0050A0E1           MOV      R5,R0
   \   0000008C   010075E3           CMN      R5,#+1
   \   00000090   0900000A           BEQ      ??SaveXStatusText_1
    631            fwrite(f,XStatusText,strlen(XStatusText),&ul);
   \   00000094   000094E5           LDR      R0,[R4, #+0]
   \   00000098   1B0000EF           SWI      +27
   \   0000009C   001094E5           LDR      R1,[R4, #+0]
   \   000000A0   0020A0E1           MOV      R2,R0
   \   000000A4   0D30A0E1           MOV      R3,SP
   \   000000A8   0500A0E1           MOV      R0,R5
   \   000000AC   0C0000EF           SWI      +12
    632            fclose(f,&ul);
   \   000000B0   0D10A0E1           MOV      R1,SP
   \   000000B4   0500A0E1           MOV      R0,R5
   \   000000B8   0D0000EF           SWI      +13
    633          }
   \                     ??SaveXStatusText_1:
   \   000000BC   42DF8DE2           ADD      SP,SP,#+264      ;; stack cleaning
   \   000000C0   3080BDE8           POP      {R4,R5,PC}       ;; return
   \                     ??SaveXStatusText_0:
   \   000000C4   ........           DC32     `?<Constant "\\\\">_1`
   \   000000C8   ........           DC32     `?<Constant "\\\\">` + 4
    634          

   \                                 In segment CODE, align 4, keep-with-next
    635          void FreeXStatusText(void)
    636          {
   \                     FreeXStatusText:
   \   00000000   10402DE9           PUSH     {R4,LR}
    637            mfree(XStatusText);
   \   00000004   ........           LDR      R4,??DataTable20  ;; XStatusText
   \   00000008   000094E5           LDR      R0,[R4, #+0]
   \   0000000C   150000EF           SWI      +21
    638            XStatusText=NULL;
   \   00000010   0000A0E3           MOV      R0,#+0
   \   00000014   000084E5           STR      R0,[R4, #+0]
    639          }
   \   00000018   1080BDE8           POP      {R4,PC}          ;; return
    640          

   \                                 In segment CODE, align 4, keep-with-next
    641          char *GetXStatusStr(int n, int *len)
    642          {
    643            int l=0;
    644            int c;
    645            char *p=XStatusText;
   \                     GetXStatusStr:
   \   00000000   ........           LDR      R2,??DataTable20  ;; XStatusText
   \   00000004   0030A0E3           MOV      R3,#+0
   \   00000008   002092E5           LDR      R2,[R2, #+0]
    646            char *pp;
    647            if (len) *len=0;
   \   0000000C   000051E3           CMP      R1,#+0
   \   00000010   00C0A013           MOVNE    R12,#+0
   \   00000014   00C08115           STRNE    R12,[R1, #+0]
    648            if (!p) return p;
   \   00000018   000052E3           CMP      R2,#+0
   \   0000001C   0700001A           BNE      ??GetXStatusStr_0
   \                     ??GetXStatusStr_1:
   \   00000020   0000A0E3           MOV      R0,#+0
   \   00000024   1EFF2FE1           BX       LR
    649            while(n)
    650            {
    651              while((c=*p++)>=32);
   \                     ??GetXStatusStr_2:
   \   00000028   ........           LDRB     R12,[R2], #+1
   \   0000002C   20005CE3           CMP      R12,#+32
   \   00000030   FCFFFFAA           BGE      ??GetXStatusStr_2
    652              if (!c) return NULL;
   \   00000034   00005CE3           CMP      R12,#+0
   \   00000038   F8FFFF0A           BEQ      ??GetXStatusStr_1
    653              n--;
   \   0000003C   010040E2           SUB      R0,R0,#+1
    654            }
   \                     ??GetXStatusStr_0:
   \   00000040   000050E3           CMP      R0,#+0
   \   00000044   F7FFFF1A           BNE      ??GetXStatusStr_2
    655            pp=p;
   \   00000048   0200A0E1           MOV      R0,R2
   \   0000004C   000000EA           B        ??GetXStatusStr_3
    656            while((*pp++)>=32) l++;
   \                     ??GetXStatusStr_4:
   \   00000050   013083E2           ADD      R3,R3,#+1
   \                     ??GetXStatusStr_3:
   \   00000054   ........           LDRB     R12,[R0], #+1
   \   00000058   20005CE3           CMP      R12,#+32
   \   0000005C   FBFFFF2A           BCS      ??GetXStatusStr_4
    657            if (len) *len=l;
   \   00000060   000051E3           CMP      R1,#+0
   \   00000064   00308115           STRNE    R3,[R1, #+0]
    658            return p;
   \   00000068   0200A0E1           MOV      R0,R2
   \   0000006C   1EFF2FE1           BX       LR               ;; return
    659          }

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   ........           DC32     S_ICONS

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable5:
   \   00000000   ........           DC32     CurrentStatus

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable9:
   \   00000000   ........           DC32     WriteDefSettings

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable10:
   \   00000000   ........           DC32     percent_t

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable12:
   \   00000000   ........           DC32     XStatusesIconArray

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable13:
   \   00000000   ........           DC32     CurrentXStatus

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable14:
   \   00000000   ........           DC32     lgpData

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable18:
   \   00000000   ........           DC32     TEMPLATES_PATH

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable20:
   \   00000000   ........           DC32     XStatusText

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for st_menuhdr>`:
   \   00000000   000000000000       DC16 0, 0, 0, 0
   \              0000        
   \   00000008   000000000000       DC32 0H, 0, 2147483647
   \              0000FFFFFF7F
   \                     `?<Initializer for menutexts>`:
   \   00000014   000000000000       DC32 0H, 0H, 0H, 0H, 0H, 0H, 0H, 0H, 0H, 0H, 0H, 0H
   \              000000000000
   \              000000000000
   \              000000000000
   \              000000000000
   \              000000000000
   \              000000000000
   \              000000000000
   \                     `?<Initializer for st_menu_sk>`:
   \   00000044   18000000           DC16 24, 0
   \   00000048   00000000           DC32 0
   \   0000004C   01000000           DC16 1, 0
   \   00000050   00000000           DC32 0
   \   00000054   3D000000           DC16 61, 0
   \   00000058   FBC0FF7F           DC32 2147467515

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for edit_x_sk>`:
   \   00000000   18000000           DC16 24, 0
   \   00000004   ........           DC32 `?<Constant "Save!">`
   \   00000008   01000000           DC16 1, 0
   \   0000000C   ........           DC32 `?<Constant "">`
   \   00000010   3D000000           DC16 61, 0
   \   00000014   FBC0FF7F           DC32 2147467515

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for edit_x_skt>`:
   \   00000000   ........0000       DC32 edit_x_sk, 0
   \              0000        

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for sk>`:
   \   00000000   FF0F0000           DC16 4095, 0
   \   00000004   ........           DC32 `?<Constant "Save!">`

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for edit_xstatus_desc>`:
   \   00000000   01000000....       DC32 1, edit_xstatus_onkey, edit_xstatus_ghook, edit_xstatus_locret, 0
   \              ............
   \              ........0000
   \              0000        
   \   00000014   ........           DC32 edit_x_skt
   \   00000018   000000000000       DC16 0, 0, 0, 0
   \              0000        
   \   00000020   080000006400       DC32 8, 100, 101, 0, 0, 1073741824
   \              000065000000
   \              000000000000
   \              000000000040
   \                     `?<Initializer for edit_xstatus_hdr>`:
   \   00000038   000000000000       DC16 0, 0, 0, 0
   \              0000        
   \   00000040   000000000000       DC32 0H, 0, 2147483647
   \              0000FFFFFF7F
   \                     `?<Initializer for xst_menuhdr>`:
   \   0000004C   000000000000       DC16 0, 0, 0, 0
   \              0000        
   \   00000054   000000000000       DC32 0H, 0, 2147483647
   \              0000FFFFFF7F
   \                     `?<Initializer for xst_menu_sk>`:
   \   00000060   18000000           DC16 24, 0
   \   00000064   00000000           DC32 0
   \   00000068   01000000           DC16 1, 0
   \   0000006C   00000000           DC32 0
   \   00000070   3D000000           DC16 61, 0
   \   00000074   FBC0FF7F           DC32 2147467515

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Save!">`:
   \   00000000   536176652100       DC8 "Save!"
   \   00000006   0000               DC8 0, 0

   \                                 In segment DATA_C, align 1, align-sorted
   \                     `?<Constant "">`:
   \   00000000   00                 DC8 ""

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Short X:">`:
   \   00000000   53686F727420       DC8 "Short X:"
   \              583A00      
   \   00000009   000000             DC8 0, 0, 0
   \   0000000C   4C6172676520       DC8 "Large X:"
   \              583A00      
   \   00000015   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Short XS %d">`:
   \   00000000   53686F727420       DC8 "Short XS %d"
   \              585320256400
   \   0000000C   4C6172676520       DC8 "Large XS %d"
   \              585320256400

   \                                 In segment DATA_C, align 1, align-sorted
   \                     `?<Constant "\\\\">_1`:
   \   00000000   5C00               DC8 "\\"

   Maximum stack usage in bytes:

     Function              CSTACK
     --------              ------
     DispStatusChangeMenu     32
     DispXStatusChangeMenu    16
     EditXStatus              88
     FreeXStatusText           8
     GetXStatusStr             0
     LoadXStatusText         328
     ReplaceStr               36
     SaveXStatusText         276
     edit_xstatus_ghook        4
     edit_xstatus_locret       0
     edit_xstatus_onkey      224
     st_icons_set             24
     st_onkey                  4
     stmenu_ghook              4
     xst_ghook                 8
     xst_itemh               728
     xst_onkey                 8


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     ?<Constant "\\">                 20
     XStatusText                       4
     st_onkey                        192
     st_icons_set                    248
     st_menusoftkeys                  12
     st_menuhdr                       92
     st_menu_skt                       8
     stmenu_ghook                     20
     st_tmenu                         44
     DispStatusChangeMenu            372
     edit_x_sk                        24
     edit_x_skt                        8
     edit_xstatus_locret               4
     ReplaceStr                      152
     edit_xstatus_onkey              644
     edit_xstatus_ghook               48
     sk                                8
     EditXStatus                     836
     xst_onkey                        80
     xst_ghook                        64
     xst_itemh                       388
     xst_menu_skt                      8
     edit_xstatus_desc               120
     xst_menu                         48
     DispXStatusChangeMenu           160
     LoadXStatusText                 312
     SaveXStatusText                 204
     FreeXStatusText                  28
     GetXStatusStr                   112
     ??DataTable4                      4
     ??DataTable5                      4
     ??DataTable9                      4
     ??DataTable10                     4
     ??DataTable12                     4
     ??DataTable13                     4
     ??DataTable14                     4
     ??DataTable18                     4
     ??DataTable20                     4
     ?<Initializer for st_menuhdr>    92
     ?<Initializer for edit_x_sk>     24
     ?<Initializer for edit_x_skt>     8
     ?<Initializer for sk>             8
     ?<Initializer for edit_xstatus_desc>
                                     120
     ?<Constant "Save!">               8
     ?<Constant "">                    1
     ?<Constant "Short X:">           24
     ?<Constant "Short XS %d">        24
     ?<Constant "\\">_1                2
      Others                         152

 
 4 028 bytes in segment CODE
   199 bytes in segment DATA_C
   252 bytes in segment DATA_I
   252 bytes in segment DATA_ID
     4 bytes in segment DATA_Z
    24 bytes in segment INITTAB
 
 3 900 bytes of CODE  memory (+ 152 bytes shared)
   451 bytes of CONST memory
   256 bytes of DATA  memory

Errors: none
Warnings: none
