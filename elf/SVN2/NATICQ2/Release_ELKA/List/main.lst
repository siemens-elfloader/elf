##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION    03/Dec/2010  11:08:12 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  D:\pasha\elf\SVN2\NATICQ\main.c                      #
#    Command line    =  D:\pasha\elf\SVN2\NATICQ\main.c -D NEWSGOLD -D ELKA  #
#                       --preprocess D:\pasha\elf\SVN2\NATICQ\Release_ELKA\L #
#                       ist\ -lC D:\pasha\elf\SVN2\NATICQ\Release_ELKA\List\ #
#                        -o D:\pasha\elf\SVN2\NATICQ\Release_ELKA\Obj\ -s9   #
#                       --no_unroll --cpu_mode arm --endian little --cpu     #
#                       ARM926EJ-S --stack_align 4 --interwork -e --fpu      #
#                       None --dlib_config "D:\pasha\Embedded Workbench 4.0  #
#                       Evaluation2\ARM\LIB\dl5tpainl8n.h" -I                #
#                       "D:\pasha\Embedded Workbench 4.0                     #
#                       Evaluation2\ARM\INC\" --inline_threshold=2           #
#    List file       =  D:\pasha\elf\SVN2\NATICQ\Release_ELKA\List\main.lst  #
#    Object file     =  D:\pasha\elf\SVN2\NATICQ\Release_ELKA\Obj\main.r79   #
#                                                                            #
#                                                                            #
##############################################################################

D:\pasha\elf\SVN2\NATICQ\main.c
      1          #include "../inc/swilib.h"
      2          #include "../inc/cfg_items.h"
      3          #include "../inc/pnglist.h"
      4          #include "../inc/xtask_ipc.h"
      5          #include "../inc/naticq_ipc.h"
      6          #include "NatICQ.h"
      7          #include "history.h"
      8          #include "conf_loader.h"
      9          #include "mainmenu.h"
     10          #include "main.h"
     11          #include "language.h"
     12          #include "smiles.h"
     13          #include "naticq_ipc.h"
     14          #include <stdbool.h>
     15          #include "status_change.h"
     16          #include "strings.h"
     17          #include "manage_cl.h"
     18          #include "cl_work.h"
     19          #include "select_smile.h"
     20          #include "revision.h"
     21          #include "lang.h"
     22          #include "auth.h"
     23          
     24          #ifndef NEWSGOLD
     25          #define SEND_TIMER
     26          #endif
     27          

   \                                 In segment DATA_Z, align 4, align-sorted
     28          GUI *deleting_contact;
   \                     deleting_contact:
   \   00000000                      DS8 4
     29          
     30          extern volatile int total_smiles;
     31          extern volatile int total_xstatuses;
     32          extern volatile int xstatuses_load;
     33          extern volatile int pictures_max;
     34          extern volatile int pictures_loaded;
     35          extern char *successed_config_filename;
     36          
     37          extern int mrand(void);
     38          extern void msrand(unsigned seed);
     39          
     40          #define USE_MLMENU
     41          
     42          #define TMR_SECOND 216
     43          
     44          //IPC
     45          const char ipc_my_name[32]=IPC_NATICQ_NAME;
     46          const char ipc_xtask_name[]=IPC_XTASK_NAME;
     47          IPC_REQ gipc;
     48          
     49          char elf_path[256];
     50          int maincsm_id;
     51          int maingui_id;
     52          
     53          // tridog, 30.04.2009
     54          // Ибо IAR :'(
     55          char *ss = "%s%s";
     56          char *sd = "%s%d";
     57          char *sw = "%s%w";
     58          char *s = "%s";
     59          char *empty_string = "";
     60          

   \                                 In segment CODE, align 4, keep-with-next
     61          void SMART_REDRAW(void)
     62          {
   \                     SMART_REDRAW:
   \   00000000   10402DE9           PUSH     {R4,LR}
     63            int f;
     64            LockSched();
   \   00000004   460100EF           SWI      +326
     65            f=IsGuiOnTop(maingui_id);
   \   00000008   1C009FE5           LDR      R0,??SMART_REDRAW_0  ;; contactlist_menuhdr + 552
   \   0000000C   000090E5           LDR      R0,[R0, #+0]
   \   00000010   350100EF           SWI      +309
   \   00000014   0040A0E1           MOV      R4,R0
     66            UnlockSched();
   \   00000018   470100EF           SWI      +327
     67            if (f) REDRAW();
   \   0000001C   000054E3           CMP      R4,#+0
   \   00000020   1080BD08           POPEQ    {R4,PC}
   \   00000024   720100EF           SWI      +370
     68          }
   \   00000028   1080BDE8           POP      {R4,PC}          ;; return
   \                     ??SMART_REDRAW_0:
   \   0000002C   ........           DC32     contactlist_menuhdr + 552
     69          
     70          //По 10 секунд
     71          #define ACTIVE_TIME 180
     72          
     73          //Максимальное количество сообщений в логе
     74          #define MAXLOGMSG (20)
     75          #define MAXCHATSIZE 7168
     76          
     77          // Строковые описания статусов
     78          const char S_OFFLINE[]="Offline";
     79          const char S_INVISIBLE[]="Invisible";
     80          const char S_AWAY[]="Away";
     81          const char S_NA[]="N/A";
     82          const char S_OCCUPIED[]="Occupied";
     83          const char S_DND[]="DND";
     84          const char S_ONLINE[]="Online";
     85          const char S_FFC[]="FFC";
     86          
     87          volatile int SENDMSGCOUNT;
     88          
     89          int S_ICONS[TOTAL_ICONS+1];
     90          
     91          #define EOP -10
     92          int CurrentStatus;
     93          int CurrentXStatus;
     94          
     95          WSHDR *ews;
     96          
     97          extern const unsigned int UIN;
     98          extern const char PASS[];
     99          
    100          static const char * const icons_names[TOTAL_ICONS]=
    101          {
    102            "offline.png",
    103            "invisible.png",
    104            "away.png",
    105            "na.png",
    106            "occupied.png",
    107            "dnd.png",
    108            "depression.png",
    109            "evil.png",
    110            "home.png",
    111            "lunch.png",
    112            "work.png",
    113            "online.png",
    114            "ffc.png",
    115            "message.png",
    116            "unknown.png",
    117            "groupon.png",
    118            "groupoff.png",
    119            "null.png",
    120            "addcont.png",
    121            "head.png",
    122            "logo.png",
    123            "ping.png",
    124            "settings.png",
    125            "vis1.png",
    126            "vis2.png",
    127            "vis3.png",
    128            "vis4.png",
    129            "vis5.png"
    130          };
    131          

   \                                 In segment CODE, align 4, keep-with-next
    132          void setup_ICONS(void)
    133          {
   \                     setup_ICONS:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
    134            extern const char ICON_PATH[];
    135            const char _slash[]="\\";
   \   00000004   98409FE5           LDR      R4,??setup_ICONS_0  ;; `?<Constant "\\\\">_3`
   \   00000008   84D04DE2           SUB      SP,SP,#+132
   \   0000000C   0010D4E5           LDRB     R1,[R4, #0]
   \   00000010   0D00A0E1           MOV      R0,SP
   \   00000014   0010C0E5           STRB     R1,[R0, #+0]
   \   00000018   0110D4E5           LDRB     R1,[R4, #+1]
   \   0000001C   0110C0E5           STRB     R1,[R0, #+1]
    136            char icon_path[128];
    137            zeromem(icon_path,128);
   \   00000020   8010A0E3           MOV      R1,#+128
   \   00000024   04008DE2           ADD      R0,SP,#+4
   \   00000028   1D0100EF           SWI      +285
    138            strcpy(icon_path,ICON_PATH);
   \   0000002C   74109FE5           LDR      R1,??setup_ICONS_0+0x4  ;; ICON_PATH
   \   00000030   04008DE2           ADD      R0,SP,#+4
   \   00000034   1A0000EF           SWI      +26
    139            if (icon_path[strlen(icon_path)-1]!='\\') strcat(icon_path,_slash);
   \   00000038   04008DE2           ADD      R0,SP,#+4
   \   0000003C   1B0000EF           SWI      +27
   \   00000040   04108DE2           ADD      R1,SP,#+4
   \   00000044   010080E0           ADD      R0,R0,R1
   \   00000048   010050E5           LDRB     R0,[R0, #-1]
   \   0000004C   5C0050E3           CMP      R0,#+92
   \   00000050   0200000A           BEQ      ??setup_ICONS_1
   \   00000054   0D10A0E1           MOV      R1,SP
   \   00000058   04008DE2           ADD      R0,SP,#+4
   \   0000005C   170000EF           SWI      +23
    140            int i=0;
   \                     ??setup_ICONS_1:
   \   00000060   0050A0E3           MOV      R5,#+0
    141            do
    142            {
    143              if (!S_ICONS[i]) S_ICONS[i]=(int)MakeGlobalString(icon_path,0,icons_names[i]);
   \                     ??setup_ICONS_2:
   \   00000064   ........           LDR      R0,??DataTable25  ;; contactlist_menuhdr
   \   00000068   056180E0           ADD      R6,R0,R5, LSL #+2
   \   0000006C   100196E5           LDR      R0,[R6, #+272]
   \   00000070   000050E3           CMP      R0,#+0
   \   00000074   0500001A           BNE      ??setup_ICONS_3
   \   00000078   050184E0           ADD      R0,R4,R5, LSL #+2
   \   0000007C   042090E5           LDR      R2,[R0, #+4]
   \   00000080   0010A0E3           MOV      R1,#+0
   \   00000084   04008DE2           ADD      R0,SP,#+4
   \   00000088   ........           _BLF     MakeGlobalString,??MakeGlobalString??rA
   \   0000008C   100186E5           STR      R0,[R6, #+272]
    144              i++;
   \                     ??setup_ICONS_3:
   \   00000090   015085E2           ADD      R5,R5,#+1
    145            }
    146            while(i<TOTAL_ICONS);
   \   00000094   1C0055E3           CMP      R5,#+28
   \   00000098   F1FFFF3A           BCC      ??setup_ICONS_2
    147            return;
   \   0000009C   84D08DE2           ADD      SP,SP,#+132      ;; stack cleaning
   \   000000A0   7080BDE8           POP      {R4-R6,PC}       ;; return
   \                     ??setup_ICONS_0:
   \   000000A4   ........           DC32     `?<Constant "\\\\">_3`
   \   000000A8   ........           DC32     ICON_PATH
    148          }
    149          

   \                                 In segment CODE, align 4, keep-with-next
    150          void free_ICONS(void)
    151          {
   \                     free_ICONS:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
    152            int i=0;
   \   00000004   0040A0E3           MOV      R4,#+0
   \   00000008   0050A0E3           MOV      R5,#+0
    153            do
    154            {
    155              mfree((void*)S_ICONS[i]);
   \                     ??free_ICONS_0:
   \   0000000C   ........           LDR      R0,??DataTable25  ;; contactlist_menuhdr
   \   00000010   046180E0           ADD      R6,R0,R4, LSL #+2
   \   00000014   100196E5           LDR      R0,[R6, #+272]
    156              S_ICONS[i]=0;
    157              i++;
   \   00000018   014084E2           ADD      R4,R4,#+1
   \   0000001C   150000EF           SWI      +21
   \   00000020   105186E5           STR      R5,[R6, #+272]
    158            }
    159            while(i<TOTAL_ICONS);
   \   00000024   1C0054E3           CMP      R4,#+28
   \   00000028   F7FFFF3A           BCC      ??free_ICONS_0
    160            return;
   \   0000002C   7080BDE8           POP      {R4-R6,PC}       ;; return
    161          }
    162          
    163          extern const unsigned int IDLEICON_X;
    164          extern const unsigned int IDLEICON_Y;
    165          
    166          #ifdef NEWSGOLD
    167          #pragma swi_number=0x27 
    168          __swi __arm void AddIconToIconBar(int pic, short *num);
    169          
    170          extern const unsigned int ST_FIRST;
    171          extern const unsigned int X_FIRST;
    172          extern const unsigned int ICON_ON;
    173          extern const unsigned int XST_IC;
    174          #endif
    175          
    176          extern const unsigned int I_COLOR;
    177          extern const unsigned int TO_COLOR;
    178          extern const unsigned int X_COLOR;
    179          extern const unsigned int O_I_COLOR;
    180          extern const unsigned int O_TO_COLOR;
    181          extern const unsigned int O_X_COLOR;
    182          
    183          extern const unsigned int ED_FONT_SIZE;
    184          extern const unsigned int ED_H_FONT_SIZE;
    185          extern const unsigned int ED_X_FONT_SIZE;
    186          extern const unsigned int O_ED_FONT_SIZE;
    187          extern const unsigned int O_ED_H_FONT_SIZE;
    188          extern const unsigned int O_ED_X_FONT_SIZE;
    189          
    190          extern const unsigned int ACK_COLOR;
    191          extern const unsigned int UNACK_COLOR;
    192          
    193          extern const int ENA_AUTO_XTXT;
    194          extern const int NOT_LOG_SAME_XTXT;
    195          extern const int LOG_XTXT;
    196          
    197          extern const int HISTORY_BUFFER;
    198          
    199          const char percent_t[]="%t";
    200          const char percent_d[]="%d";
    201          const char empty_str[]="";
    202          const char I_str[]="I";
    203          const char x_status_change[]="X-Status change";
    204          
    205          char logmsg[256];
    206          
    207          //Illumination by BoBa 19.04.2007
    208          ///////////
    209          extern const unsigned int ILL_DISP_RECV;
    210          extern const unsigned int ILL_KEYS_RECV;
    211          extern const unsigned int ILL_DISP_SEND;
    212          extern const unsigned int ILL_KEYS_SEND;
    213          extern const unsigned int ILL_SEND_TMR;
    214          extern const unsigned int ILL_SEND_FADE;
    215          extern const unsigned int ILL_RECV_TMR;
    216          extern const unsigned int ILL_RECV_FADE;
    217          extern const unsigned int ILL_OFF_FADE;
    218          
    219          GBSTMR tmr_illumination;
    220          

   \                                 In segment CODE, align 4, keep-with-next
    221          void IlluminationOff(){
    222            SetIllumination(0,1,0,ILL_OFF_FADE);
   \                     IlluminationOff:
   \   00000000   30009FE5           LDR      R0,??IlluminationOff_0  ;; ILL_OFF_FADE
   \   00000004   10402DE9           PUSH     {R4,LR}
   \   00000008   004090E5           LDR      R4,[R0, #+0]
   \   0000000C   0020A0E3           MOV      R2,#+0
   \   00000010   0430A0E1           MOV      R3,R4
   \   00000014   0110A0E3           MOV      R1,#+1
   \   00000018   0000A0E3           MOV      R0,#+0
   \   0000001C   080000EF           SWI      +8
    223            SetIllumination(1,1,0,ILL_OFF_FADE);
   \   00000020   0430A0E1           MOV      R3,R4
   \   00000024   0020A0E3           MOV      R2,#+0
   \   00000028   0110A0E3           MOV      R1,#+1
   \   0000002C   0100A0E1           MOV      R0,R1
   \   00000030   080000EF           SWI      +8
    224          }
   \   00000034   1080BDE8           POP      {R4,PC}          ;; return
   \                     ??IlluminationOff_0:
   \   00000038   ........           DC32     ILL_OFF_FADE
    225          

   \                                 In segment CODE, align 4, keep-with-next
    226          void IlluminationOn(const int disp, const int key, const int tmr, const int fade){
   \                     IlluminationOn:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0260A0E1           MOV      R6,R2
   \   00000010   0370A0E1           MOV      R7,R3
    227            if(!tmr) return;
   \   00000014   000056E3           CMP      R6,#+0
   \   00000018   F083BD08           POPEQ    {R4-R9,PC}
    228            GBS_DelTimer(&tmr_illumination);
   \   0000001C   ........           LDR      R9,??DataTable25  ;; contactlist_menuhdr
   \   00000020   2880A0E3           MOV      R8,#+40
   \   00000024   508E88E3           ORR      R8,R8,#0x500
   \   00000028   090088E0           ADD      R0,R8,R9
   \   0000002C   8C0100EF           SWI      +396
    229            SetIllumination(0,1,disp,fade);
   \   00000030   0730A0E1           MOV      R3,R7
   \   00000034   0428A0E1           MOV      R2,R4, LSL #+16
   \   00000038   2228A0E1           MOV      R2,R2, LSR #+16
   \   0000003C   0110A0E3           MOV      R1,#+1
   \   00000040   0000A0E3           MOV      R0,#+0
   \   00000044   080000EF           SWI      +8
    230            SetIllumination(1,1,key,fade);
   \   00000048   0730A0E1           MOV      R3,R7
   \   0000004C   0528A0E1           MOV      R2,R5, LSL #+16
   \   00000050   2228A0E1           MOV      R2,R2, LSR #+16
   \   00000054   0110A0E3           MOV      R1,#+1
   \   00000058   0100A0E3           MOV      R0,#+1
   \   0000005C   080000EF           SWI      +8
    231            GBS_StartTimerProc(&tmr_illumination,tmr*216,IlluminationOff);
   \   00000060   10209FE5           LDR      R2,??IlluminationOn_0  ;; IlluminationOff
   \   00000064   D800A0E3           MOV      R0,#+216
   \   00000068   900601E0           MUL      R1,R0,R6
   \   0000006C   090088E0           ADD      R0,R8,R9
   \   00000070   4D0000EF           SWI      +77
    232          }
   \   00000074   F083BDE8           POP      {R4-R9,PC}       ;; return
   \                     ??IlluminationOn_0:
   \   00000078   ........           DC32     IlluminationOff
    233          
    234          volatile int silenthide;    //by BoBa 25.06.07
    235          volatile int disautorecconect;	//by BoBa 10.07
    236          ///////////
    237          int Is_Vibra_Enabled;
    238          int Is_Sounds_Enabled;
    239          int Is_Show_Offline;
    240          int Is_Show_Groups;
    241          int CurrentStatus;
    242          int CurrentXStatus;
    243          int CurrentPrivateStatus;
    244          int Is_Active_Up;
    245          
    246          //===================================================================

   \                                 In segment CODE, align 4, keep-with-next
    247          int InAway()
    248          {
   \                     InAway:
   \   00000000   ........           LDR      R0,??DataTable3  ;; contactlist_menuhdr + 592
   \   00000004   000090E5           LDR      R0,[R0, #+0]
   \   00000008   030050E3           CMP      R0,#+3
   \   0000000C   05005013           CMPNE    R0,#+5
   \   00000010   04005013           CMPNE    R0,#+4
   \   00000014   0500001A           BNE      ??InAway_0
   \   00000018   18009FE5           LDR      R0,??InAway_1    ;; STRONG_AWAY
   \   0000001C   000090E5           LDR      R0,[R0, #+0]
   \   00000020   000050E3           CMP      R0,#+0
   \   00000024   1EFF2F01           BXEQ     LR
    249            extern const int STRONG_AWAY;
    250            if((CurrentStatus == IS_NA || 
    251               CurrentStatus == IS_DND || 
    252               CurrentStatus == IS_OCCUPIED) &&
    253               STRONG_AWAY)
    254              return 1;
   \   00000028   0100A0E3           MOV      R0,#+1
   \   0000002C   1EFF2FE1           BX       LR
    255            return 0;
   \                     ??InAway_0:
   \   00000030   0000A0E3           MOV      R0,#+0
   \   00000034   1EFF2FE1           BX       LR               ;; return
   \                     ??InAway_1:
   \   00000038   ........           DC32     STRONG_AWAY
    256          }
    257          //===================================================================
    258          const char def_setting[]="%sdef_settings_%d";
    259          

   \                                 In segment CODE, align 4, keep-with-next
    260          void ReadDefSettings(void)
    261          {
    262            DEF_SETTINGS def_set;
    263            int f;
    264            unsigned int err;
    265            char str[128];
    266            snprintf(str,127,def_setting,elf_path,UIN);
   \                     ReadDefSettings:
   \   00000000   ........           LDR      R0,??DataTable7  ;; UIN
   \   00000004   ........           LDR      R2,??DataTable8  ;; def_setting
   \   00000008   30402DE9           PUSH     {R4,R5,LR}
   \   0000000C   ........           LDR      R4,??DataTable25  ;; contactlist_menuhdr
   \   00000010   88D04DE2           SUB      SP,SP,#+136
   \   00000014   000090E5           LDR      R0,[R0, #+0]
   \   00000018   C23F84E2           ADD      R3,R4,#+776
   \   0000001C   01002DE9           PUSH     {R0}
   \   00000020   7F10A0E3           MOV      R1,#+127
   \   00000024   0C008DE2           ADD      R0,SP,#+12
   \   00000028   1B0100EF           SWI      +283
    267            if ((f=fopen(str,A_ReadOnly+A_BIN,P_READ,&err))!=-1)
   \   0000002C   08308DE2           ADD      R3,SP,#+8
   \   00000030   8020A0E3           MOV      R2,#+128
   \   00000034   801CA0E3           MOV      R1,#+32768
   \   00000038   0C008DE2           ADD      R0,SP,#+12
   \   0000003C   0A0000EF           SWI      +10
   \   00000040   0050A0E1           MOV      R5,R0
   \   00000044   010075E3           CMN      R5,#+1
   \   00000048   04D08DE2           ADD      SP,SP,#+4
   \   0000004C   1900000A           BEQ      ??ReadDefSettings_0
    268            {
    269              fread(f,&def_set,sizeof(DEF_SETTINGS),&err);
   \   00000050   04308DE2           ADD      R3,SP,#+4
   \   00000054   0420A0E3           MOV      R2,#+4
   \   00000058   0D10A0E1           MOV      R1,SP
   \   0000005C   0B0000EF           SWI      +11
    270              fclose(f,&err);
   \   00000060   04108DE2           ADD      R1,SP,#+4
   \   00000064   0500A0E1           MOV      R0,R5
   \   00000068   0D0000EF           SWI      +13
    271              Is_Vibra_Enabled=def_set.vibra_status;
   \   0000006C   0000DDE5           LDRB     R0,[SP, #+0]
   \   00000070   010000E2           AND      R0,R0,#0x1
   \   00000074   400284E5           STR      R0,[R4, #+576]
    272              Is_Sounds_Enabled=def_set.sound_status;
   \   00000078   0000DDE5           LDRB     R0,[SP, #+0]
   \   0000007C   020000E2           AND      R0,R0,#0x2
   \   00000080   A000A0E1           LSR      R0,R0,#+1
   \   00000084   440284E5           STR      R0,[R4, #+580]
    273              Is_Show_Offline=def_set.off_contacts;
   \   00000088   0000DDE5           LDRB     R0,[SP, #+0]
    274              Is_Show_Groups=def_set.show_groups;
   \   0000008C   0010DDE5           LDRB     R1,[SP, #+0]
    275              CurrentStatus=def_set.def_status+1;
   \   00000090   0120DDE5           LDRB     R2,[SP, #+1]
    276              CurrentXStatus=def_set.def_xstatus;
    277              Is_Active_Up=def_set.active_up;
   \   00000094   0350DDE5           LDRB     R5,[SP, #+3]
   \   00000098   0230DDE5           LDRB     R3,[SP, #+2]
   \   0000009C   040000E2           AND      R0,R0,#0x4
   \   000000A0   2001A0E1           LSR      R0,R0,#+2
   \   000000A4   081001E2           AND      R1,R1,#0x8
   \   000000A8   A111A0E1           LSR      R1,R1,#+3
   \   000000AC   012082E2           ADD      R2,R2,#+1
   \   000000B0   015005E2           AND      R5,R5,#0x1
   \   000000B4   060000EA           B        ??ReadDefSettings_1
    278            }
    279            else
    280            {
    281              Is_Vibra_Enabled=0;
   \                     ??ReadDefSettings_0:
   \   000000B8   0000A0E3           MOV      R0,#+0
   \   000000BC   400284E5           STR      R0,[R4, #+576]
    282              Is_Sounds_Enabled=0;
   \   000000C0   440284E5           STR      R0,[R4, #+580]
    283              Is_Show_Offline=0;
    284              Is_Show_Groups=1;
   \   000000C4   0110A0E3           MOV      R1,#+1
    285              CurrentStatus=IS_ONLINE;
   \   000000C8   0B20A0E3           MOV      R2,#+11
    286              CurrentXStatus=0;
   \   000000CC   0030A0E3           MOV      R3,#+0
    287              Is_Active_Up=1;
   \   000000D0   0150A0E1           MOV      R5,R1
   \                     ??ReadDefSettings_1:
   \   000000D4   5C5284E5           STR      R5,[R4, #+604]
   \   000000D8   543284E5           STR      R3,[R4, #+596]
   \   000000DC   502284E5           STR      R2,[R4, #+592]
   \   000000E0   4C1284E5           STR      R1,[R4, #+588]
   \   000000E4   480284E5           STR      R0,[R4, #+584]
    288            }
    289          }
   \   000000E8   88D08DE2           ADD      SP,SP,#+136
   \   000000EC   3080BDE8           POP      {R4,R5,PC}       ;; return
    290          

   \                                 In segment CODE, align 4, keep-with-next
    291          void WriteDefSettings(void)
    292          {
    293            DEF_SETTINGS def_set;
    294            int f;
    295            unsigned int err;
    296            char str[128];
    297            snprintf(str,127,def_setting,elf_path,UIN);
   \                     WriteDefSettings:
   \   00000000   ........           LDR      R0,??DataTable7  ;; UIN
   \   00000004   ........           LDR      R2,??DataTable8  ;; def_setting
   \   00000008   30402DE9           PUSH     {R4,R5,LR}
   \   0000000C   ........           LDR      R4,??DataTable25  ;; contactlist_menuhdr
   \   00000010   88D04DE2           SUB      SP,SP,#+136
   \   00000014   000090E5           LDR      R0,[R0, #+0]
   \   00000018   C23F84E2           ADD      R3,R4,#+776
   \   0000001C   01002DE9           PUSH     {R0}
   \   00000020   7F10A0E3           MOV      R1,#+127
   \   00000024   0C008DE2           ADD      R0,SP,#+12
   \   00000028   1B0100EF           SWI      +283
    298            if ((f=fopen(str,A_WriteOnly+A_BIN+A_Create+A_Truncate,P_WRITE,&err))!=-1)
   \   0000002C   08308DE2           ADD      R3,SP,#+8
   \   00000030   402FA0E3           MOV      R2,#+256
   \   00000034   0110A0E3           MOV      R1,#+1
   \   00000038   831C81E3           ORR      R1,R1,#0x8300
   \   0000003C   0C008DE2           ADD      R0,SP,#+12
   \   00000040   0A0000EF           SWI      +10
   \   00000044   0050A0E1           MOV      R5,R0
   \   00000048   010075E3           CMN      R5,#+1
   \   0000004C   04D08DE2           ADD      SP,SP,#+4
   \   00000050   2300000A           BEQ      ??WriteDefSettings_0
    299            {
    300              def_set.vibra_status=Is_Vibra_Enabled;
    301              def_set.sound_status=Is_Sounds_Enabled;
    302              def_set.off_contacts=Is_Show_Offline;
    303              def_set.show_groups=Is_Show_Groups;
   \   00000054   0010DDE5           LDRB     R1,[SP, #+0]
   \   00000058   402294E5           LDR      R2,[R4, #+576]
   \   0000005C   F01001E2           AND      R1,R1,#0xF0
   \   00000060   012002E2           AND      R2,R2,#0x1
   \   00000064   011082E1           ORR      R1,R2,R1
   \   00000068   442294E5           LDR      R2,[R4, #+580]
   \   0000006C   0230A0E3           MOV      R3,#+2
   \   00000070   822003E0           AND      R2,R3,R2, LSL #+1
   \   00000074   011082E1           ORR      R1,R2,R1
   \   00000078   482294E5           LDR      R2,[R4, #+584]
   \   0000007C   0430A0E3           MOV      R3,#+4
   \   00000080   022103E0           AND      R2,R3,R2, LSL #+2
   \   00000084   011082E1           ORR      R1,R2,R1
   \   00000088   4C2294E5           LDR      R2,[R4, #+588]
   \   0000008C   0830A0E3           MOV      R3,#+8
   \   00000090   822103E0           AND      R2,R3,R2, LSL #+3
   \   00000094   011082E1           ORR      R1,R2,R1
   \   00000098   0010CDE5           STRB     R1,[SP, #+0]
    304              def_set.def_status=CurrentStatus-1;
   \   0000009C   501294E5           LDR      R1,[R4, #+592]
    305              def_set.def_xstatus=CurrentXStatus;
    306              def_set.active_up=Is_Active_Up;
    307              fwrite(f,&def_set,sizeof(DEF_SETTINGS),&err);
   \   000000A0   04308DE2           ADD      R3,SP,#+4
   \   000000A4   011041E2           SUB      R1,R1,#+1
   \   000000A8   0110CDE5           STRB     R1,[SP, #+1]
   \   000000AC   541294E5           LDR      R1,[R4, #+596]
   \   000000B0   0210CDE5           STRB     R1,[SP, #+2]
   \   000000B4   0310DDE5           LDRB     R1,[SP, #+3]
   \   000000B8   5C2294E5           LDR      R2,[R4, #+604]
   \   000000BC   FE1001E2           AND      R1,R1,#0xFE
   \   000000C0   012002E2           AND      R2,R2,#0x1
   \   000000C4   011082E1           ORR      R1,R2,R1
   \   000000C8   0310CDE5           STRB     R1,[SP, #+3]
   \   000000CC   0420A0E3           MOV      R2,#+4
   \   000000D0   0D10A0E1           MOV      R1,SP
   \   000000D4   0C0000EF           SWI      +12
    308              fclose(f,&err);
   \   000000D8   04108DE2           ADD      R1,SP,#+4
   \   000000DC   0500A0E1           MOV      R0,R5
   \   000000E0   0D0000EF           SWI      +13
    309            }
    310          }
   \                     ??WriteDefSettings_0:
   \   000000E4   88D08DE2           ADD      SP,SP,#+136      ;; stack cleaning
   \   000000E8   3080BDE8           POP      {R4,R5,PC}       ;; return
    311          //by KreN 27.09.2007
    312          //===================================================================
    313          extern S_SMILES *s_top;
    314          extern DYNPNGICONLIST *SmilesImgList;
    315          extern DYNPNGICONLIST *XStatusesImgList;
    316          
    317          //=============================Проигрывание звука=======================
    318          extern const char sndStartup[];
    319          extern const char sndSrvMsg[];
    320          extern const char sndGlobal[];
    321          extern const char sndMsg[];
    322          extern const char sndMsgSent[];
    323          extern const unsigned int sndVolume;
    324          

   \                                 In segment CODE, align 4, keep-with-next
    325          void Play(const char *fname)
    326          {
   \                     Play:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   D0D04DE2           SUB      SP,SP,#+208
   \   00000008   0060A0E1           MOV      R6,R0
    327            if ((!IsCalling())&&Is_Sounds_Enabled&&!InAway())
   \   0000000C   6E0000EF           SWI      +110
   \   00000010   000050E3           CMP      R0,#+0
   \   00000014   4400001A           BNE      ??Play_0
   \   00000018   14019FE5           LDR      R0,??Play_1      ;; contactlist_menuhdr + 580
   \   0000001C   000090E5           LDR      R0,[R0, #+0]
   \   00000020   000050E3           CMP      R0,#+0
   \   00000024   4000000A           BEQ      ??Play_0
   \   00000028   ........           BL       InAway
   \   0000002C   000050E3           CMP      R0,#+0
   \   00000030   3D00001A           BNE      ??Play_0
    328            {
    329              FSTATS fstats;
    330              unsigned int err;
    331              if (GetFileStats(fname,&fstats,&err)!=-1)
   \   00000034   0D20A0E1           MOV      R2,SP
   \   00000038   A8108DE2           ADD      R1,SP,#+168
   \   0000003C   0600A0E1           MOV      R0,R6
   \   00000040   840000EF           SWI      +132
   \   00000044   010070E3           CMN      R0,#+1
   \   00000048   3700000A           BEQ      ??Play_0
    332              {
    333                PLAYFILE_OPT _sfo1;
    334                WSHDR* sndPath=AllocWS(128);
   \   0000004C   8000A0E3           MOV      R0,#+128
   \   00000050   250100EF           SWI      +293
   \   00000054   0040A0E1           MOV      R4,R0
    335                WSHDR* sndFName=AllocWS(128);
   \   00000058   8000A0E3           MOV      R0,#+128
   \   0000005C   250100EF           SWI      +293
   \   00000060   0050A0E1           MOV      R5,R0
    336                char s[128];
    337                const char *p=strrchr(fname,'\\')+1;
   \   00000064   5C10A0E3           MOV      R1,#+92
   \   00000068   0600A0E1           MOV      R0,R6
   \   0000006C   170100EF           SWI      +279
   \   00000070   017080E2           ADD      R7,R0,#+1
    338                str_2ws(sndFName,p,128);
   \   00000074   8020A0E3           MOV      R2,#+128
   \   00000078   0710A0E1           MOV      R1,R7
   \   0000007C   0500A0E1           MOV      R0,R5
   \   00000080   6C0100EF           SWI      +364
    339                strncpy(s,fname,p-fname);
   \   00000084   067047E0           SUB      R7,R7,R6
   \   00000088   0720A0E1           MOV      R2,R7
   \   0000008C   0610A0E1           MOV      R1,R6
   \   00000090   28008DE2           ADD      R0,SP,#+40
   \   00000094   160100EF           SWI      +278
    340                s[p-fname]='\0';
   \   00000098   0060A0E3           MOV      R6,#+0
   \   0000009C   28008DE2           ADD      R0,SP,#+40
   \   000000A0   0060C7E7           STRB     R6,[R7, +R0]
    341                str_2ws(sndPath,s,128);
   \   000000A4   8020A0E3           MOV      R2,#+128
   \   000000A8   28108DE2           ADD      R1,SP,#+40
   \   000000AC   0400A0E1           MOV      R0,R4
   \   000000B0   6C0100EF           SWI      +364
    342          
    343                zeromem(&_sfo1,sizeof(PLAYFILE_OPT));
   \   000000B4   2410A0E3           MOV      R1,#+36
   \   000000B8   04008DE2           ADD      R0,SP,#+4
   \   000000BC   1D0100EF           SWI      +285
    344                _sfo1.repeat_num=1;
    345                _sfo1.time_between_play=0;
    346                _sfo1.play_first=0;
    347                _sfo1.volume=sndVolume;
   \   000000C0   70209FE5           LDR      R2,??Play_1+0x4  ;; sndVolume
   \   000000C4   0100A0E3           MOV      R0,#+1
   \   000000C8   B400CDE1           STRH     R0,[SP, #+4]
   \   000000CC   08608DE5           STR      R6,[SP, #+8]
   \   000000D0   0C608DE5           STR      R6,[SP, #+12]
   \   000000D4   002092E5           LDR      R2,[R2, #+0]
    348          #ifdef NEWSGOLD
    349                _sfo1.unk6=1;
    350                _sfo1.unk7=1;
    351                _sfo1.unk9=2;
   \   000000D8   0210A0E3           MOV      R1,#+2
   \   000000DC   10208DE5           STR      R2,[SP, #+16]
   \   000000E0   18008DE5           STR      R0,[SP, #+24]
   \   000000E4   1C008DE5           STR      R0,[SP, #+28]
   \   000000E8   24108DE5           STR      R1,[SP, #+36]
    352                PlayFile(0x10, sndPath, sndFName, GBS_GetCurCepid(), MSG_PLAYFILE_REPORT, &_sfo1);
   \   000000EC   450100EF           SWI      +325
   \   000000F0   04108DE2           ADD      R1,SP,#+4
   \   000000F4   02002DE9           PUSH     {R1}
   \   000000F8   0030A0E1           MOV      R3,R0
   \   000000FC   0520A0E1           MOV      R2,R5
   \   00000100   1000A0E3           MOV      R0,#+16
   \   00000104   BC10A0E3           MOV      R1,#+188
   \   00000108   701C81E3           ORR      R1,R1,#0x7000
   \   0000010C   02002DE9           PUSH     {R1}
   \   00000110   0410A0E1           MOV      R1,R4
   \   00000114   4A0000EF           SWI      +74
    353          #else
    354          #ifdef X75
    355                _sfo1.unk4=0x80000000;
    356                _sfo1.unk5=1;
    357                PlayFile(0xC, sndPath, sndFName, 0,GBS_GetCurCepid(), MSG_PLAYFILE_REPORT, &_sfo1);
    358          #else
    359                _sfo1.unk5=1;
    360                PlayFile(0xC, sndPath, sndFName, GBS_GetCurCepid(), MSG_PLAYFILE_REPORT, &_sfo1);
    361          #endif
    362          #endif
    363                FreeWS(sndPath);
   \   00000118   0400A0E1           MOV      R0,R4
   \   0000011C   290100EF           SWI      +297
    364                FreeWS(sndFName);
   \   00000120   0500A0E1           MOV      R0,R5
   \   00000124   290100EF           SWI      +297
   \   00000128   08D08DE2           ADD      SP,SP,#+8
    365              }
    366            }
    367          }
   \                     ??Play_0:
   \   0000012C   D0D08DE2           ADD      SP,SP,#+208      ;; stack cleaning
   \   00000130   F080BDE8           POP      {R4-R7,PC}       ;; return
   \                     ??Play_1:
   \   00000134   ........           DC32     contactlist_menuhdr + 580
   \   00000138   ........           DC32     sndVolume
    368          
    369          GBSTMR tmr_vibra;
    370          volatile int vibra_count;
    371          

   \                                 In segment CODE, align 4, keep-with-next
    372          void start_vibra(void)
    373          {
   \                     start_vibra:
   \   00000000   10402DE9           PUSH     {R4,LR}
    374            extern const int VIBR_TYPE;
    375            void stop_vibra(void);
    376            if((Is_Vibra_Enabled)&&(GetVibraStatus())&&(!IsCalling())&&!InAway())
   \   00000004   ........           LDR      R4,??DataTable25  ;; contactlist_menuhdr
   \   00000008   400294E5           LDR      R0,[R4, #+576]
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   1080BD08           POPEQ    {R4,PC}
   \   00000014   400000EF           SWI      +64
   \   00000018   000050E3           CMP      R0,#+0
   \   0000001C   1080BD08           POPEQ    {R4,PC}
   \   00000020   6E0000EF           SWI      +110
   \   00000024   000050E3           CMP      R0,#+0
   \   00000028   1080BD18           POPNE    {R4,PC}
   \   0000002C   ........           BL       InAway
   \   00000030   000050E3           CMP      R0,#+0
   \   00000034   1080BD18           POPNE    {R4,PC}
    377            {
    378              extern const unsigned int vibraPower;
    379              SetVibration(vibraPower);
   \   00000038   38009FE5           LDR      R0,??start_vibra_0  ;; vibraPower
   \   0000003C   000090E5           LDR      R0,[R0, #+0]
   \   00000040   7C0000EF           SWI      +124
    380              if(VIBR_TYPE)
   \   00000044   ........           LDR      R1,??DataTable13  ;; VIBR_TYPE
   \   00000048   2C209FE5           LDR      R2,??start_vibra_0+0x4  ;; stop_vibra
   \   0000004C   001091E5           LDR      R1,[R1, #+0]
   \   00000050   3800A0E3           MOV      R0,#+56
   \   00000054   500E80E3           ORR      R0,R0,#0x500
   \   00000058   000051E3           CMP      R1,#+0
   \   0000005C   0100000A           BEQ      ??start_vibra_1
    381                GBS_StartTimerProc(&tmr_vibra,TMR_SECOND>>2,stop_vibra);
   \   00000060   3610A0E3           MOV      R1,#+54
   \   00000064   000000EA           B        ??start_vibra_2
    382              else
    383                GBS_StartTimerProc(&tmr_vibra,TMR_SECOND>>1,stop_vibra);
   \                     ??start_vibra_1:
   \   00000068   6C10A0E3           MOV      R1,#+108
   \                     ??start_vibra_2:
   \   0000006C   040080E0           ADD      R0,R0,R4
   \   00000070   4D0000EF           SWI      +77
    384            }
    385          }
   \   00000074   1080BDE8           POP      {R4,PC}          ;; return
   \                     ??start_vibra_0:
   \   00000078   ........           DC32     vibraPower
   \   0000007C   ........           DC32     stop_vibra
    386          

   \                                 In segment CODE, align 4, keep-with-next
    387          void stop_vibra(void)
    388          {
   \                     stop_vibra:
   \   00000000   00402DE9           PUSH     {LR}
    389            extern const int VIBR_TYPE;
    390            SetVibration(0);
   \   00000004   0000A0E3           MOV      R0,#+0
   \   00000008   7C0000EF           SWI      +124
    391            if (--vibra_count)
   \   0000000C   ........           LDR      R0,??DataTable25  ;; contactlist_menuhdr
   \   00000010   601290E5           LDR      R1,[R0, #+608]
   \   00000014   011051E2           SUBS     R1,R1,#+1
   \   00000018   601280E5           STR      R1,[R0, #+608]
   \   0000001C   0080BD08           POPEQ    {PC}
    392            {
    393              if(VIBR_TYPE)
   \   00000020   ........           LDR      R1,??DataTable13  ;; VIBR_TYPE
   \   00000024   28209FE5           LDR      R2,??stop_vibra_0  ;; start_vibra
   \   00000028   001091E5           LDR      R1,[R1, #+0]
   \   0000002C   3830A0E3           MOV      R3,#+56
   \   00000030   503E83E3           ORR      R3,R3,#0x500
   \   00000034   000051E3           CMP      R1,#+0
   \   00000038   0100000A           BEQ      ??stop_vibra_1
    394                GBS_StartTimerProc(&tmr_vibra,TMR_SECOND/40,start_vibra);
   \   0000003C   0510A0E3           MOV      R1,#+5
   \   00000040   000000EA           B        ??stop_vibra_2
    395              else
    396                GBS_StartTimerProc(&tmr_vibra,TMR_SECOND>>1,start_vibra);
   \                     ??stop_vibra_1:
   \   00000044   6C10A0E3           MOV      R1,#+108
   \                     ??stop_vibra_2:
   \   00000048   000083E0           ADD      R0,R3,R0
   \   0000004C   4D0000EF           SWI      +77
    397            }
    398          }
   \   00000050   0080BDE8           POP      {PC}             ;; return
   \                     ??stop_vibra_0:
   \   00000054   ........           DC32     start_vibra
    399          

   \                                 In segment CODE, align 4, keep-with-next
    400          void ChangeVibra(void)
    401          {
    402            if (!(Is_Vibra_Enabled=!(Is_Vibra_Enabled)))
   \                     ChangeVibra:
   \   00000000   ........           LDR      R0,??DataTable25  ;; contactlist_menuhdr
   \   00000004   00402DE9           PUSH     {LR}
   \   00000008   401290E5           LDR      R1,[R0, #+576]
   \   0000000C   000051E3           CMP      R1,#+0
   \   00000010   0110A003           MOVEQ    R1,#+1
   \   00000014   0010A013           MOVNE    R1,#+0
   \   00000018   401280E5           STR      R1,[R0, #+576]
   \   0000001C   ........           LDR      R0,??DataTable26  ;; lgpData
   \   00000020   000051E3           CMP      R1,#+0
    403              ShowMSG(1,(int)lgpData[LGP_MsgVibraDis]);
   \   00000024   2C119005           LDREQ    R1,[R0, #+300]
    404            else
    405              ShowMSG(1,(int)lgpData[LGP_MsgVibraEna]);
   \   00000028   30119015           LDRNE    R1,[R0, #+304]
   \   0000002C   0100A0E3           MOV      R0,#+1
   \   00000030   480100EF           SWI      +328
    406          }
   \   00000034   0080BDE8           POP      {PC}             ;; return
    407          

   \                                 In segment CODE, align 4, keep-with-next
    408          void ChangeSound(void)
    409          {
    410            if (!(Is_Sounds_Enabled=!(Is_Sounds_Enabled)))
   \                     ChangeSound:
   \   00000000   ........           LDR      R0,??DataTable25  ;; contactlist_menuhdr
   \   00000004   00402DE9           PUSH     {LR}
   \   00000008   441290E5           LDR      R1,[R0, #+580]
   \   0000000C   000051E3           CMP      R1,#+0
   \   00000010   0110A003           MOVEQ    R1,#+1
   \   00000014   0010A013           MOVNE    R1,#+0
   \   00000018   441280E5           STR      R1,[R0, #+580]
   \   0000001C   ........           LDR      R0,??DataTable26  ;; lgpData
   \   00000020   000051E3           CMP      R1,#+0
    411              ShowMSG(1,(int)lgpData[LGP_MsgSndDis]);
   \   00000024   34119005           LDREQ    R1,[R0, #+308]
    412            else
    413              ShowMSG(1,(int)lgpData[LGP_MsgSndEna]);
   \   00000028   38119015           LDRNE    R1,[R0, #+312]
   \   0000002C   0100A0E3           MOV      R0,#+1
   \   00000030   480100EF           SWI      +328
    414          }
   \   00000034   0080BDE8           POP      {PC}             ;; return
    415          
    416          //===================================================================
    417          //Templates
    418          char *templates_chars; //Собственно файл
    419          char **templates_lines; //Массив указателей на строки
    420          

   \                                 In segment CODE, align 4, keep-with-next
    421          void FreeTemplates(void)
    422          {
   \                     FreeTemplates:
   \   00000000   10402DE9           PUSH     {R4,LR}
    423            if (templates_lines) mfree(templates_lines);
   \   00000004   ........           LDR      R4,??DataTable25  ;; contactlist_menuhdr
   \   00000008   680294E5           LDR      R0,[R4, #+616]
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   0000000A           BEQ      ??FreeTemplates_0
   \   00000014   150000EF           SWI      +21
    424            if (templates_chars) mfree(templates_chars);
   \                     ??FreeTemplates_0:
   \   00000018   640294E5           LDR      R0,[R4, #+612]
   \   0000001C   000050E3           CMP      R0,#+0
   \   00000020   0100000A           BEQ      ??FreeTemplates_1
   \   00000024   150000EF           SWI      +21
    425            templates_lines=NULL;
   \   00000028   0000A0E3           MOV      R0,#+0
   \                     ??FreeTemplates_1:
   \   0000002C   680284E5           STR      R0,[R4, #+616]
    426            templates_chars=NULL;
   \   00000030   640284E5           STR      R0,[R4, #+612]
    427          }
   \   00000034   1080BDE8           POP      {R4,PC}          ;; return
    428          
    429          extern const char TEMPLATES_PATH[];
    430          

   \                                 In segment CODE, align 4, keep-with-next
    431          int LoadTemplates(CLIST *t)
    432          {
    433            FSTATS stat;
    434            char fn[256];
    435            int f;
    436            unsigned int ul;
    437            unsigned int uin;
    438            int i;
    439            int fsize;
    440            char *p, *pp, *j;
    441            int c, firstgps;
    442            LOGQ *curlog, *lastadd;
    443            int loglen=0;
   \                     LoadTemplates:
   \   00000000   BC149FE5           LDR      R1,??LoadTemplates_0+0x4  ;; `?<Constant "\\\\">_2`
   \   00000004   F14F2DE9           PUSH     {R0,R4-R11,LR}
   \   00000008   4DDF4DE2           SUB      SP,SP,#+308
   \   0000000C   0020D1E5           LDRB     R2,[R1, #0]
   \   00000010   08008DE2           ADD      R0,SP,#+8
   \   00000014   0050A0E3           MOV      R5,#+0
   \   00000018   0020C0E5           STRB     R2,[R0, #+0]
   \   0000001C   0120D1E5           LDRB     R2,[R1, #+1]
   \   00000020   0120C0E5           STRB     R2,[R0, #+1]
    444            const char _slash[]="\\";
    445            uin = t->uin;
   \   00000024   34019DE5           LDR      R0,[SP, #+308]
   \   00000028   0C4090E5           LDR      R4,[R0, #+12]
    446            FreeTemplates();
   \   0000002C   ........           BL       FreeTemplates
    447            strcpy(fn,TEMPLATES_PATH);
   \   00000030   ........           LDR      R1,??DataTable19  ;; TEMPLATES_PATH
   \   00000034   34008DE2           ADD      R0,SP,#+52
   \   00000038   1A0000EF           SWI      +26
    448            if (fn[strlen(fn)-1]!='\\') strcat(fn,_slash);
   \   0000003C   34008DE2           ADD      R0,SP,#+52
   \   00000040   1B0000EF           SWI      +27
   \   00000044   34108DE2           ADD      R1,SP,#+52
   \   00000048   010080E0           ADD      R0,R0,R1
   \   0000004C   010050E5           LDRB     R0,[R0, #-1]
   \   00000050   5C0050E3           CMP      R0,#+92
   \   00000054   0200000A           BEQ      ??LoadTemplates_1
   \   00000058   08108DE2           ADD      R1,SP,#+8
   \   0000005C   34008DE2           ADD      R0,SP,#+52
   \   00000060   170000EF           SWI      +23
    449            i=strlen(fn);
   \                     ??LoadTemplates_1:
   \   00000064   34008DE2           ADD      R0,SP,#+52
   \   00000068   1B0000EF           SWI      +27
    450            sprintf(fn+i,"%d.txt",uin);
   \   0000006C   54149FE5           LDR      R1,??LoadTemplates_0+0x8  ;; `?<Constant "\\\\">_2` + 20
   \   00000070   0080A0E1           MOV      R8,R0
   \   00000074   34008DE2           ADD      R0,SP,#+52
   \   00000078   006088E0           ADD      R6,R8,R0
   \   0000007C   0420A0E1           MOV      R2,R4
   \   00000080   0600A0E1           MOV      R0,R6
   \   00000084   160000EF           SWI      +22
    451            if (GetFileStats(fn,&stat,&ul)==-1) goto L1;
   \   00000088   0540E0E1           MVN      R4,R5
   \   0000008C   0D20A0E1           MOV      R2,SP
   \   00000090   0C108DE2           ADD      R1,SP,#+12
   \   00000094   34008DE2           ADD      R0,SP,#+52
   \   00000098   840000EF           SWI      +132
   \   0000009C   040050E1           CMP      R0,R4
   \   000000A0   0A00000A           BEQ      ??LoadTemplates_2
    452            if ((fsize=stat.size)<=0) goto L1;
   \   000000A4   10809DE5           LDR      R8,[SP, #+16]
   \   000000A8   010058E3           CMP      R8,#+1
   \   000000AC   070000BA           BLT      ??LoadTemplates_2
    453            if ((f=fopen(fn,A_ReadOnly+A_BIN,P_READ,&ul))==-1)
   \   000000B0   0D30A0E1           MOV      R3,SP
   \   000000B4   8020A0E3           MOV      R2,#+128
   \   000000B8   801CA0E3           MOV      R1,#+32768
   \   000000BC   34008DE2           ADD      R0,SP,#+52
   \   000000C0   0A0000EF           SWI      +10
   \   000000C4   0090A0E1           MOV      R9,R0
   \   000000C8   040050E1           CMP      R0,R4
   \   000000CC   1400001A           BNE      ??LoadTemplates_3
    454            {
    455            L1:
    456              strcpy(fn+i,"0.txt");
   \                     ??LoadTemplates_2:
   \   000000D0   F4139FE5           LDR      R1,??LoadTemplates_0+0xC  ;; `?<Constant "\\\\">_2` + 12
   \   000000D4   0600A0E1           MOV      R0,R6
   \   000000D8   1A0000EF           SWI      +26
    457              if (GetFileStats(fn,&stat,&ul)==-1) return 0;
   \   000000DC   0D20A0E1           MOV      R2,SP
   \   000000E0   0C108DE2           ADD      R1,SP,#+12
   \   000000E4   34008DE2           ADD      R0,SP,#+52
   \   000000E8   840000EF           SWI      +132
   \   000000EC   040050E1           CMP      R0,R4
   \   000000F0   0200001A           BNE      ??LoadTemplates_4
   \                     ??LoadTemplates_5:
   \   000000F4   0000A0E3           MOV      R0,#+0
   \   000000F8   4EDF8DE2           ADD      SP,SP,#+312
   \   000000FC   F08FBDE8           POP      {R4-R11,PC}      ;; return
    458              if ((fsize=stat.size)<=0) return 0;
   \                     ??LoadTemplates_4:
   \   00000100   10809DE5           LDR      R8,[SP, #+16]
   \   00000104   010058E3           CMP      R8,#+1
   \   00000108   F9FFFFBA           BLT      ??LoadTemplates_5
    459              f=fopen(fn,A_ReadOnly+A_BIN,P_READ,&ul);
   \   0000010C   0D30A0E1           MOV      R3,SP
   \   00000110   8020A0E3           MOV      R2,#+128
   \   00000114   801CA0E3           MOV      R1,#+32768
   \   00000118   34008DE2           ADD      R0,SP,#+52
   \   0000011C   0A0000EF           SWI      +10
   \   00000120   0090A0E1           MOV      R9,R0
    460            }
    461            if (f==-1) return 0;
   \                     ??LoadTemplates_3:
   \   00000124   040059E1           CMP      R9,R4
   \   00000128   F1FFFF0A           BEQ      ??LoadTemplates_5
    462            
    463            if(t->name[0] == '#')       //Это бот
   \   0000012C   34019DE5           LDR      R0,[SP, #+308]
   \   00000130   1400D0E5           LDRB     R0,[R0, #+20]
   \   00000134   230050E3           CMP      R0,#+35
   \   00000138   0D00001A           BNE      ??LoadTemplates_6
    464            {
    465              curlog = t->log;
   \   0000013C   34019DE5           LDR      R0,[SP, #+308]
   \   00000140   A84090E5           LDR      R4,[R0, #+168]
   \   00000144   000054E3           CMP      R4,#+0
   \   00000148   0600000A           BEQ      ??LoadTemplates_7
    466              while(curlog)               //Посчитаем предельную длину
    467              {
    468                loglen += strlen(curlog->text)+1;
   \                     ??LoadTemplates_8:
   \   0000014C   600084E2           ADD      R0,R4,#+96
   \   00000150   1B0000EF           SWI      +27
    469                curlog = curlog->next;
   \   00000154   004094E5           LDR      R4,[R4, #+0]
   \   00000158   000085E0           ADD      R0,R5,R0
   \   0000015C   015080E2           ADD      R5,R0,#+1
    470              }
   \   00000160   000054E3           CMP      R4,#+0
   \   00000164   F8FFFF1A           BNE      ??LoadTemplates_8
    471              p=templates_chars=malloc(fsize+1+loglen); //размер буфера под шаблоны
   \                     ??LoadTemplates_7:
   \   00000168   080085E0           ADD      R0,R5,R8
   \   0000016C   010080E2           ADD      R0,R0,#+1
   \   00000170   000000EA           B        ??LoadTemplates_9
    472            }
    473            else  
    474              p=templates_chars=malloc(fsize+1);
   \                     ??LoadTemplates_6:
   \   00000174   010088E2           ADD      R0,R8,#+1
   \                     ??LoadTemplates_9:
   \   00000178   ........           LDR      R6,??DataTable25  ;; contactlist_menuhdr
   \   0000017C   140000EF           SWI      +20
   \   00000180   0050A0E1           MOV      R5,R0
   \   00000184   640286E5           STR      R0,[R6, #+612]
    475            p[fread(f,p,fsize,&ul)]=0;
   \   00000188   0070A0E3           MOV      R7,#+0
   \   0000018C   0D30A0E1           MOV      R3,SP
   \   00000190   0820A0E1           MOV      R2,R8
   \   00000194   0510A0E1           MOV      R1,R5
   \   00000198   0900A0E1           MOV      R0,R9
   \   0000019C   0B0000EF           SWI      +11
   \   000001A0   0570C0E7           STRB     R7,[R0, +R5]
    476            fclose(f,&ul);
   \   000001A4   0D10A0E1           MOV      R1,SP
   \   000001A8   0900A0E1           MOV      R0,R9
   \   000001AC   0D0000EF           SWI      +13
    477            i=0;
   \   000001B0   0080A0E3           MOV      R8,#+0
    478            pp=p;
   \   000001B4   0540A0E1           MOV      R4,R5
   \   000001B8   020000EA           B        ??LoadTemplates_10
    479            for(;;)
    480            {
    481              c=*p;
    482              if (c<32)
    483              {
    484                if (pp&&(pp!=p))
    485                {
    486          	templates_lines=realloc(templates_lines,(i+1)*sizeof(char *));
    487          	templates_lines[i++]=pp;
    488                }
    489                pp=NULL;
    490                if (!c) break;
    491                *p=0;
    492              }
    493              else
    494              {
    495                if (pp==NULL) pp=p;
   \                     ??LoadTemplates_11:
   \   000001BC   000054E3           CMP      R4,#+0
   \   000001C0   0540A001           MOVEQ    R4,R5
    496              }
    497              p++;
   \                     ??LoadTemplates_12:
   \   000001C4   015085E2           ADD      R5,R5,#+1
   \                     ??LoadTemplates_10:
   \   000001C8   00A0D5E5           LDRB     R10,[R5, #+0]
   \   000001CC   20005AE3           CMP      R10,#+32
   \   000001D0   F9FFFFAA           BGE      ??LoadTemplates_11
   \   000001D4   000054E3           CMP      R4,#+0
   \   000001D8   05005411           CMPNE    R4,R5
   \   000001DC   0600000A           BEQ      ??LoadTemplates_13
   \   000001E0   680296E5           LDR      R0,[R6, #+616]
   \   000001E4   019088E2           ADD      R9,R8,#+1
   \   000001E8   0911A0E1           LSL      R1,R9,#+2
   \   000001EC   BA0000EF           SWI      +186
   \   000001F0   680286E5           STR      R0,[R6, #+616]
   \   000001F4   084180E7           STR      R4,[R0, +R8, LSL #+2]
   \   000001F8   0980A0E1           MOV      R8,R9
   \                     ??LoadTemplates_13:
   \   000001FC   0040A0E3           MOV      R4,#+0
   \   00000200   00005AE3           CMP      R10,#+0
   \   00000204   0A00001A           BNE      ??LoadTemplates_14
    498            }
    499            if(t->name[0] != '#')       //Это не бот
   \   00000208   34019DE5           LDR      R0,[SP, #+308]
   \   0000020C   1400D0E5           LDRB     R0,[R0, #+20]
   \   00000210   230050E3           CMP      R0,#+35
   \   00000214   0800001A           BNE      ??LoadTemplates_15
    500              return i;
    501            
    502            curlog = t->log;
   \   00000218   34019DE5           LDR      R0,[SP, #+308]
   \   0000021C   A89090E5           LDR      R9,[R0, #+168]
    503            firstgps = i;
   \   00000220   04808DE5           STR      R8,[SP, #+4]
   \   00000224   000059E3           CMP      R9,#+0
   \   00000228   5000000A           BEQ      ??LoadTemplates_16
    504            while(curlog)
    505            {
    506              pp = curlog->text;
   \                     ??LoadTemplates_17:
   \   0000022C   604089E2           ADD      R4,R9,#+96
   \   00000230   180000EA           B        ??LoadTemplates_18
   \                     ??LoadTemplates_14:
   \   00000234   0070C5E5           STRB     R7,[R5, #+0]
   \   00000238   E1FFFFEA           B        ??LoadTemplates_12
   \                     ??LoadTemplates_15:
   \   0000023C   0800A0E1           MOV      R0,R8
   \   00000240   4EDF8DE2           ADD      SP,SP,#+312
   \   00000244   F08FBDE8           POP      {R4-R11,PC}
    507              while(pp = strstr(pp, "| "))
    508              {    
    509                pp+=2; j = pp;
    510                if(curlog->text[0] != 'g') for(j = pp; (*j >= '0' && *j <= '9') || *j == '*'; j++);
    511                for(; *j == ' '; j++);
    512                pp = j;
    513          
    514                for(; *j && *j != 13 && *j != '|' && *j != '{'; j++);
    515          
    516                if(j != pp)
    517                {
    518                  memcpy(p, pp, j-pp);
    519                  *(p+(j-pp)) = 0;
    520                  for(c = j-pp-1; *(p+c) == ' '; *(p+c)=0, c--);
    521                  for(c = firstgps; c < i; c++)
   \                     ??LoadTemplates_19:
   \   00000248   01A08AE2           ADD      R10,R10,#+1
   \                     ??LoadTemplates_20:
   \   0000024C   08005AE1           CMP      R10,R8
   \   00000250   080000AA           BGE      ??LoadTemplates_21
    522                    if(!strcmp(templates_lines[c], p)) {*templates_lines[c] = 0; break;}
   \   00000254   680296E5           LDR      R0,[R6, #+616]
   \   00000258   0510A0E1           MOV      R1,R5
   \   0000025C   0A0190E7           LDR      R0,[R0, +R10, LSL #+2]
   \   00000260   190000EF           SWI      +25
   \   00000264   000050E3           CMP      R0,#+0
   \   00000268   F6FFFF1A           BNE      ??LoadTemplates_19
   \   0000026C   680296E5           LDR      R0,[R6, #+616]
   \   00000270   0A0190E7           LDR      R0,[R0, +R10, LSL #+2]
   \   00000274   0070C0E5           STRB     R7,[R0, #+0]
    523                  templates_lines=(char **)realloc(templates_lines,(i+1)*sizeof(char *));
   \                     ??LoadTemplates_21:
   \   00000278   680296E5           LDR      R0,[R6, #+616]
   \   0000027C   01A088E2           ADD      R10,R8,#+1
   \   00000280   0A11A0E1           LSL      R1,R10,#+2
   \   00000284   BA0000EF           SWI      +186
   \   00000288   680286E5           STR      R0,[R6, #+616]
    524                  templates_lines[i++]=p;
   \   0000028C   085180E7           STR      R5,[R0, +R8, LSL #+2]
   \   00000290   0A80A0E1           MOV      R8,R10
    525                  p+=j-pp+1;
   \   00000294   01508BE2           ADD      R5,R11,#+1
   \                     ??LoadTemplates_18:
   \   00000298   881F8FE2           ADR      R1,??LoadTemplates_0  ;; "| "
   \   0000029C   0400A0E1           MOV      R0,R4
   \   000002A0   180100EF           SWI      +280
   \   000002A4   0040B0E1           MOVS     R4,R0
   \   000002A8   2D00000A           BEQ      ??LoadTemplates_22
   \   000002AC   02A080E2           ADD      R10,R0,#+2
   \   000002B0   6000D9E5           LDRB     R0,[R9, #+96]
   \   000002B4   670050E3           CMP      R0,#+103
   \   000002B8   0300001A           BNE      ??LoadTemplates_23
   \   000002BC   070000EA           B        ??LoadTemplates_24
   \                     ??LoadTemplates_25:
   \   000002C0   3A0050E3           CMP      R0,#+58
   \   000002C4   0500002A           BCS      ??LoadTemplates_24
   \                     ??LoadTemplates_26:
   \   000002C8   01A08AE2           ADD      R10,R10,#+1
   \                     ??LoadTemplates_23:
   \   000002CC   0000DAE5           LDRB     R0,[R10, #+0]
   \   000002D0   300050E3           CMP      R0,#+48
   \   000002D4   F9FFFF2A           BCS      ??LoadTemplates_25
   \   000002D8   2A0050E3           CMP      R0,#+42
   \   000002DC   F9FFFF0A           BEQ      ??LoadTemplates_26
   \                     ??LoadTemplates_24:
   \   000002E0   0000DAE5           LDRB     R0,[R10, #+0]
   \   000002E4   200050E3           CMP      R0,#+32
   \   000002E8   01A08A02           ADDEQ    R10,R10,#+1
   \   000002EC   FBFFFF0A           BEQ      ??LoadTemplates_24
   \   000002F0   0A40A0E1           MOV      R4,R10
   \   000002F4   000000EA           B        ??LoadTemplates_27
   \                     ??LoadTemplates_28:
   \   000002F8   01A08AE2           ADD      R10,R10,#+1
   \                     ??LoadTemplates_27:
   \   000002FC   0000DAE5           LDRB     R0,[R10, #+0]
   \   00000300   000050E3           CMP      R0,#+0
   \   00000304   0D005013           CMPNE    R0,#+13
   \   00000308   7C005013           CMPNE    R0,#+124
   \   0000030C   7B005013           CMPNE    R0,#+123
   \   00000310   F8FFFF1A           BNE      ??LoadTemplates_28
   \   00000314   04005AE1           CMP      R10,R4
   \   00000318   DEFFFF0A           BEQ      ??LoadTemplates_18
   \   0000031C   04A04AE0           SUB      R10,R10,R4
   \   00000320   0A20A0E1           MOV      R2,R10
   \   00000324   0410A0E1           MOV      R1,R4
   \   00000328   0500A0E1           MOV      R0,R5
   \   0000032C   1E0100EF           SWI      +286
   \   00000330   05B08AE0           ADD      R11,R10,R5
   \   00000334   0070CBE5           STRB     R7,[R11, #+0]
   \   00000338   01004AE2           SUB      R0,R10,#+1
   \   0000033C   0510D0E7           LDRB     R1,[R0, +R5]
   \   00000340   200051E3           CMP      R1,#+32
   \   00000344   0400001A           BNE      ??LoadTemplates_29
   \                     ??LoadTemplates_30:
   \   00000348   0570C0E7           STRB     R7,[R0, +R5]
   \   0000034C   010040E2           SUB      R0,R0,#+1
   \   00000350   0510D0E7           LDRB     R1,[R0, +R5]
   \   00000354   200051E3           CMP      R1,#+32
   \   00000358   FAFFFF0A           BEQ      ??LoadTemplates_30
   \                     ??LoadTemplates_29:
   \   0000035C   04A09DE5           LDR      R10,[SP, #+4]
   \   00000360   B9FFFFEA           B        ??LoadTemplates_20
    526                }
    527              }
    528              curlog = curlog->next;
   \                     ??LoadTemplates_22:
   \   00000364   009099E5           LDR      R9,[R9, #+0]
    529            }
   \   00000368   000059E3           CMP      R9,#+0
   \   0000036C   AEFFFF1A           BNE      ??LoadTemplates_17
    530            for(c = f = firstgps; c < i; c++)
   \                     ??LoadTemplates_16:
   \   00000370   04909DE5           LDR      R9,[SP, #+4]
   \   00000374   09A0A0E1           MOV      R10,R9
   \   00000378   08005AE1           CMP      R10,R8
   \   0000037C   0A0000AA           BGE      ??LoadTemplates_31
    531              if(*templates_lines[c])
   \                     ??LoadTemplates_32:
   \   00000380   680296E5           LDR      R0,[R6, #+616]
   \   00000384   0A1180E0           ADD      R1,R0,R10, LSL #+2
   \   00000388   002091E5           LDR      R2,[R1, #+0]
    532                templates_lines[f++] = templates_lines[c];
   \   0000038C   01A08AE2           ADD      R10,R10,#+1
   \   00000390   0020D2E5           LDRB     R2,[R2, #+0]
   \   00000394   000052E3           CMP      R2,#+0
   \   00000398   00109115           LDRNE    R1,[R1, #+0]
   \   0000039C   09118017           STRNE    R1,[R0, +R9, LSL #+2]
   \   000003A0   01908912           ADDNE    R9,R9,#+1
   \   000003A4   08005AE1           CMP      R10,R8
   \   000003A8   F4FFFFBA           BLT      ??LoadTemplates_32
    533            i = f;
   \                     ??LoadTemplates_31:
   \   000003AC   0980A0E1           MOV      R8,R9
    534            if(i > 27)
   \   000003B0   1C0058E3           CMP      R8,#+28
   \   000003B4   0B0000BA           BLT      ??LoadTemplates_33
    535            {
    536              memcpy(&templates_lines[firstgps], &templates_lines[firstgps+(i-27)], (27-firstgps)*sizeof(char *));
   \   000003B8   04109DE5           LDR      R1,[SP, #+4]
   \   000003BC   680296E5           LDR      R0,[R6, #+616]
   \   000003C0   04309DE5           LDR      R3,[SP, #+4]
   \   000003C4   1B1061E2           RSB      R1,R1,#+27
   \   000003C8   0121A0E1           LSL      R2,R1,#+2
   \   000003CC   04109DE5           LDR      R1,[SP, #+4]
   \   000003D0   011088E0           ADD      R1,R8,R1
   \   000003D4   011180E0           ADD      R1,R0,R1, LSL #+2
   \   000003D8   6C1041E2           SUB      R1,R1,#+108
   \   000003DC   030180E0           ADD      R0,R0,R3, LSL #+2
   \   000003E0   1E0100EF           SWI      +286
    537              i = 27;
   \   000003E4   1B80A0E3           MOV      R8,#+27
    538            }
    539          
    540            curlog = t->log;
   \                     ??LoadTemplates_33:
   \   000003E8   34019DE5           LDR      R0,[SP, #+308]
   \   000003EC   A84090E5           LDR      R4,[R0, #+168]
    541            if(curlog)
   \   000003F0   000054E3           CMP      R4,#+0
   \   000003F4   90FFFF0A           BEQ      ??LoadTemplates_15
    542            {
    543              lastadd = 0;
   \   000003F8   0090A0E3           MOV      R9,#+0
    544              if(strstr(curlog->text, "add ")) lastadd = curlog;
    545            
    546              while(curlog->next) 
    547              {
    548                curlog = curlog->next;
    549                if(strstr(curlog->text, "add ")) lastadd = curlog;
   \                     ??LoadTemplates_34:
   \   000003FC   CC109FE5           LDR      R1,??LoadTemplates_0+0x10  ;; `?<Constant "\\\\">_2` + 4
   \   00000400   600084E2           ADD      R0,R4,#+96
   \   00000404   180100EF           SWI      +280
   \   00000408   000050E3           CMP      R0,#+0
   \   0000040C   0490A011           MOVNE    R9,R4
    550              }
   \   00000410   004094E5           LDR      R4,[R4, #+0]
   \   00000414   000054E3           CMP      R4,#+0
   \   00000418   F7FFFF1A           BNE      ??LoadTemplates_34
    551            
    552              if(lastadd)
   \   0000041C   000059E3           CMP      R9,#+0
   \   00000420   85FFFF0A           BEQ      ??LoadTemplates_15
    553              {
    554                pp = lastadd->text;
   \   00000424   604089E2           ADD      R4,R9,#+96
   \   00000428   1C0000EA           B        ??LoadTemplates_35
    555                
    556                while(pp = strstr(pp, "add "))
    557                {
    558                  for(j = pp = pp+4; *j >= '0' && *j <= '9'; j++);
   \                     ??LoadTemplates_36:
   \   0000042C   01A08AE2           ADD      R10,R10,#+1
   \                     ??LoadTemplates_37:
   \   00000430   0000DAE5           LDRB     R0,[R10, #+0]
   \   00000434   300050E3           CMP      R0,#+48
   \   00000438   0100003A           BCC      ??LoadTemplates_38
   \   0000043C   3A0050E3           CMP      R0,#+58
   \   00000440   F9FFFF3A           BCC      ??LoadTemplates_36
    559                  if(j != pp)
   \                     ??LoadTemplates_38:
   \   00000444   04005AE1           CMP      R10,R4
   \   00000448   1400000A           BEQ      ??LoadTemplates_35
    560                  {
    561                    memcpy(p, "add ", 4);
   \   0000044C   7C109FE5           LDR      R1,??LoadTemplates_0+0x10  ;; `?<Constant "\\\\">_2` + 4
   \   00000450   0420A0E3           MOV      R2,#+4
   \   00000454   0500A0E1           MOV      R0,R5
   \   00000458   1E0100EF           SWI      +286
    562                    memcpy(p+4, pp, j-pp);
   \   0000045C   04904AE0           SUB      R9,R10,R4
   \   00000460   0920A0E1           MOV      R2,R9
   \   00000464   0410A0E1           MOV      R1,R4
   \   00000468   040085E2           ADD      R0,R5,#+4
   \   0000046C   1E0100EF           SWI      +286
    563                    templates_lines=(char **)realloc(templates_lines,(i+1)*sizeof(char *));
   \   00000470   680296E5           LDR      R0,[R6, #+616]
   \   00000474   01A088E2           ADD      R10,R8,#+1
   \   00000478   0A11A0E1           LSL      R1,R10,#+2
   \   0000047C   BA0000EF           SWI      +186
   \   00000480   680286E5           STR      R0,[R6, #+616]
    564                    templates_lines[i++]=p;
   \   00000484   085180E7           STR      R5,[R0, +R8, LSL #+2]
   \   00000488   0A80A0E1           MOV      R8,R10
    565                    p+=j-pp+4;
   \   0000048C   050089E0           ADD      R0,R9,R5
   \   00000490   045080E2           ADD      R5,R0,#+4
    566                    *p=32;p++;
   \   00000494   2000A0E3           MOV      R0,#+32
   \   00000498   ........           STRB     R0,[R5], #+1
    567                    *p=0;p++;
   \   0000049C   ........           STRB     R7,[R5], #+1
    568                  }
   \                     ??LoadTemplates_35:
   \   000004A0   28109FE5           LDR      R1,??LoadTemplates_0+0x10  ;; `?<Constant "\\\\">_2` + 4
   \   000004A4   0400A0E1           MOV      R0,R4
   \   000004A8   180100EF           SWI      +280
   \   000004AC   0040B0E1           MOVS     R4,R0
   \   000004B0   61FFFF0A           BEQ      ??LoadTemplates_15
   \   000004B4   044080E2           ADD      R4,R0,#+4
   \   000004B8   04A0A0E1           MOV      R10,R4
   \   000004BC   DBFFFFEA           B        ??LoadTemplates_37
   \                     ??LoadTemplates_0:
   \   000004C0   7C200000           DC8      "| ",+0
   \   000004C4   ........           DC32     `?<Constant "\\\\">_2`
   \   000004C8   ........           DC32     `?<Constant "\\\\">_2` + 20
   \   000004CC   ........           DC32     `?<Constant "\\\\">_2` + 12
   \   000004D0   ........           DC32     `?<Constant "\\\\">_2` + 4
    569                }
    570              }
    571            }
    572            return i;
    573          }
    574          
    575          //===================================================================
    576          typedef struct
    577          {
    578            CSM_RAM csm;
    579            int gui_id;
    580          }MAIN_CSM;
    581          
    582          typedef struct
    583          {
    584            GUI gui;
    585            WSHDR *ws1;
    586            WSHDR *ws2;
    587            int i1;
    588          }MAIN_GUI;
    589          
    590          int RXstate=EOP; //-sizeof(RXpkt)..-1 - receive header, 0..RXpkt.data_len - receive data
    591          

   \                                 In segment DATA_Z, align 4, align-sorted
    592          TPKT RXbuf;
   \                     RXbuf:
   \   00000000                      DS8 16392

   \                                 In segment DATA_Z, align 4, align-sorted
    593          TPKT TXbuf;
   \                     TXbuf:
   \   00000000                      DS8 16392
    594          
    595          int connect_state=0;
    596          
    597          int sock=-1;
    598          
    599          volatile unsigned long TOTALRECEIVED;
    600          volatile unsigned long TOTALSENDED;
    601          volatile unsigned long ALLTOTALRECEIVED;	//by BoBa 10.07
    602          volatile unsigned long ALLTOTALSENDED;
    603          
    604          volatile int sendq_l=0; //Длинна очереди для send
    605          volatile void *sendq_p=NULL; //указатель очереди
    606          
    607          volatile int is_gprs_online=1;
    608          
    609          GBSTMR reconnect_tmr;
    610          
    611          extern void kill_data(void *p,void (*func_p)(void *));
    612          

   \                                 In segment CODE, align 4, keep-with-next
    613          void ElfKiller(void)
    614          {
   \                     ElfKiller:
   \   00000000   00402DE9           PUSH     {LR}
    615            extern void *ELF_BEGIN;
    616            kill_data(&ELF_BEGIN,(void (*)(void *))mfree_adr());
   \   00000004   158000EF           SWI      +32789
   \   00000008   0010A0E1           MOV      R1,R0
   \   0000000C   04009FE5           LDR      R0,??ElfKiller_0  ;; ELF_BEGIN
   \   00000010   0040BDE8           POP      {LR}             ;; Pop
   \   00000014   ........           _BF      kill_data,??kill_data??rA  ;; tailcall
   \                     ??ElfKiller_0:
   \   00000018   ........           DC32     ELF_BEGIN
    617          }
    618          
    619          int total_unread;
    620          int messages_unread;
    621          
    622          //===============================================================================================
    623          #pragma inline
    624          void patch_rect(RECT*rc,int x,int y, int x2, int y2)
    625          {
    626            rc->x=x;
    627            rc->y=y;
    628            rc->x2=x2;
    629            rc->y2=y2;
    630          }
    631          
    632          #pragma inline
    633          void patch_header(const HEADER_DESC* head)
    634          {
    635            ((HEADER_DESC*)head)->rc.x=0;
    636            ((HEADER_DESC*)head)->rc.y=YDISP;
    637            ((HEADER_DESC*)head)->rc.x2=ScreenW()-1;
    638            ((HEADER_DESC*)head)->rc.y2=HeaderH()+YDISP-1;
    639          }
    640          #pragma inline
    641          void patch_input(const INPUTDIA_DESC* inp)
    642          {
    643            ((INPUTDIA_DESC*)inp)->rc.x=0;
    644            ((INPUTDIA_DESC*)inp)->rc.y=HeaderH()+1+YDISP;
    645            ((INPUTDIA_DESC*)inp)->rc.x2=ScreenW()-1;
    646            ((INPUTDIA_DESC*)inp)->rc.y2=ScreenH()-SoftkeyH()-1;
    647          }
    648          //===============================================================================================
    649          
    650          volatile CLIST *cltop;
    651          
    652          volatile unsigned int GROUP_CACHE; //Текущая группа для добавления
    653          
    654          volatile int contactlist_menu_id;
    655          
    656          GBSTMR tmr_active;
    657          
    658          volatile int edchat_id;
    659          
    660          //Применяется для добавления сообщений
    661          //CLIST *edcontact;
    662          //void *edgui_data;
    663          
    664          static int prev_clmenu_itemcount;
    665          
    666          char clm_hdr_text[48];
    667          static char def_clm_hdr_text[32] = "";//LgpData[LGP_ClTitle];
    668          static char key_clm_hdr_text[32] = "";//LgpData[LGP_ClT9Inp];
    669          
    670          static HEADER_DESC contactlist_menuhdr = {0, 0, 0, 0, S_ICONS+ICON_HEAD, (int)clm_hdr_text, LGP_NULL};
    671          static const int menusoftkeys[] = {0,1,2};
    672          
    673          static SOFTKEY_DESC menu_sk[] =
    674          {
    675            {0x0018, 0x0000, NULL},
    676            {0x0001, 0x0000, NULL},
    677            {0x003D, 0x0000, (int)LGP_DOIT_PIC}
    678          };
    679          
    680          char clmenu_sk_r[16];
    681          
    682          static char def_clmenu_sk_r[32] = "";
    683          static char key_clmenu_sk_r[32] = "";
    684          
    685          

   \                                 In segment CODE, align 4, keep-with-next
    686          void lgpUpdateClHdr()
    687          {
   \                     lgpUpdateClHdr:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
    688            strcpy(def_clm_hdr_text, (char*) lgpData[LGP_ClTitle]);
   \   00000004   ........           LDR      R4,??DataTable25  ;; contactlist_menuhdr
   \   00000008   ........           LDR      R5,??DataTable26  ;; lgpData
   \   0000000C   9800A0E3           MOV      R0,#+152
   \   00000010   041095E5           LDR      R1,[R5, #+4]
   \   00000014   500E80E3           ORR      R0,R0,#0x500
   \   00000018   040080E0           ADD      R0,R0,R4
   \   0000001C   1A0000EF           SWI      +26
    689            strcpy(key_clm_hdr_text, (char*) lgpData[LGP_ClT9Inp]);
   \   00000020   081095E5           LDR      R1,[R5, #+8]
   \   00000024   B800A0E3           MOV      R0,#+184
   \   00000028   500E80E3           ORR      R0,R0,#0x500
   \   0000002C   040080E0           ADD      R0,R0,R4
   \   00000030   1A0000EF           SWI      +26
    690            strcpy(def_clmenu_sk_r,  (char*) lgpData[LGP_Close]);
   \   00000034   201095E5           LDR      R1,[R5, #+32]
   \   00000038   E800A0E3           MOV      R0,#+232
   \   0000003C   500E80E3           ORR      R0,R0,#0x500
   \   00000040   040080E0           ADD      R0,R0,R4
   \   00000044   1A0000EF           SWI      +26
    691            strcpy(key_clmenu_sk_r,  (char*) lgpData[LGP_Clear]);
   \   00000048   241095E5           LDR      R1,[R5, #+36]
   \   0000004C   0800A0E3           MOV      R0,#+8
   \   00000050   600E80E3           ORR      R0,R0,#0x600
   \   00000054   040080E0           ADD      R0,R0,R4
   \   00000058   1A0000EF           SWI      +26
    692          }
   \   0000005C   3080BDE8           POP      {R4,R5,PC}       ;; return
    693          static SOFTKEY_DESC clmenu_sk[]=
    694          {
    695            {0x0018, 0x0000, NULL},
    696            {0x0001, 0x0000, (int)clmenu_sk_r},
    697            {0x003D, 0x0000, (int)LGP_DOIT_PIC}
    698          };
    699          
    700          const SOFTKEYSTAB menu_skt =
    701          {
    702            menu_sk, 0
    703          };
    704          
    705          static const SOFTKEYSTAB clmenu_skt =
    706          {
    707            clmenu_sk, 0
    708          };
    709          
    710          void contactlist_menu_ghook(void *data, int cmd);
    711          int contactlist_menu_onkey(void *data, GUI_MSG *msg);
    712          void contactlist_menu_iconhndl(void *data, int curitem, void *unk);
    713          
    714          #ifdef USE_MLMENU
    715          static const ML_MENU_DESC contactlist_menu=
    716          {
    717            8,contactlist_menu_onkey,contactlist_menu_ghook,NULL,
    718            menusoftkeys,
    719            &clmenu_skt,
    720            0x11, //+0x400
    721            contactlist_menu_iconhndl,
    722            NULL,   //Items
    723            NULL,   //Procs
    724            0,   //n
    725            1 //Добавочных строк
    726          };
    727          #else
    728          static const MENU_DESC contactlist_menu=
    729          {
    730            8,contactlist_menu_onkey,contactlist_menu_ghook,NULL,
    731            menusoftkeys,
    732            &clmenu_skt,
    733            0x11, //+0x400
    734            contactlist_menu_iconhndl,
    735            NULL,   //Items
    736            NULL,   //Procs
    737            0   //n
    738          };
    739          #endif
    740          
    741          int tenseconds_to_ping;
    742          

   \                                 In segment CODE, align 4, keep-with-next
    743          LOGQ *NewLOGQ(const char *s)
    744          {
   \                     NewLOGQ:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    745            LOGQ *p=malloc(sizeof(LOGQ)+1+strlen(s));
   \   00000008   1B0000EF           SWI      +27
   \   0000000C   610080E2           ADD      R0,R0,#+97
   \   00000010   140000EF           SWI      +20
   \   00000014   0050A0E1           MOV      R5,R0
    746            zeromem(p,sizeof(LOGQ));
   \   00000018   6010A0E3           MOV      R1,#+96
   \   0000001C   1D0100EF           SWI      +285
    747            strcpy(p->text,s);
   \   00000020   0410A0E1           MOV      R1,R4
   \   00000024   600085E2           ADD      R0,R5,#+96
   \   00000028   1A0000EF           SWI      +26
    748            return p;
   \   0000002C   0500A0E1           MOV      R0,R5
   \   00000030   3080BDE8           POP      {R4,R5,PC}       ;; return
    749          }
    750          

   \                                 In segment CODE, align 4, keep-with-next
    751          LOGQ *LastLOGQ(LOGQ **pp)
    752          {
    753            LOGQ *q=*pp;
   \                     LastLOGQ:
   \   00000000   000090E5           LDR      R0,[R0, #+0]
    754            if (q)
   \   00000004   000050E3           CMP      R0,#+0
   \   00000008   1EFF2F01           BXEQ     LR
   \   0000000C   000000EA           B        ??LastLOGQ_0
    755            {
    756              while(q->next) q=q->next;
   \                     ??LastLOGQ_1:
   \   00000010   0100A0E1           MOV      R0,R1
   \                     ??LastLOGQ_0:
   \   00000014   001090E5           LDR      R1,[R0, #+0]
   \   00000018   000051E3           CMP      R1,#+0
   \   0000001C   FBFFFF1A           BNE      ??LastLOGQ_1
    757            }
    758            return(q);
   \   00000020   1EFF2FE1           BX       LR               ;; return
    759          }
    760          
    761          //Уничтожить лог

   \                                 In segment CODE, align 4, keep-with-next
    762          void FreeLOGQ(LOGQ **pp)
    763          {
   \                     FreeLOGQ:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0010A0E1           MOV      R1,R0
    764            LOGQ *p=*pp;
   \   00000008   000091E5           LDR      R0,[R1, #+0]
    765            *pp=NULL; //Сразу обрежем
   \   0000000C   0020A0E3           MOV      R2,#+0
   \   00000010   002081E5           STR      R2,[R1, #+0]
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   1080BD08           POPEQ    {R4,PC}
    766            while(p)
    767            {
    768              LOGQ *np=p->next;
   \                     ??FreeLOGQ_0:
   \   0000001C   004090E5           LDR      R4,[R0, #+0]
    769              mfree(p);
   \   00000020   150000EF           SWI      +21
    770              p=np;
   \   00000024   0400B0E1           MOVS     R0,R4
    771            }
   \   00000028   FBFFFF1A           BNE      ??FreeLOGQ_0
    772          }
   \   0000002C   1080BDE8           POP      {R4,PC}          ;; return
    773          
    774          //Удалить элемент из лога

   \                                 In segment CODE, align 4, keep-with-next
    775          void RemoveLOGQ(LOGQ **queue, LOGQ *p)
    776          {
   \                     RemoveLOGQ:
   \   00000000   00402DE9           PUSH     {LR}
    777            LOGQ *q=(LOGQ *)queue;
   \   00000004   000000EA           B        ??RemoveLOGQ_0
    778            LOGQ *qp;
    779            while(qp=q->next)
    780            {
    781              if (qp==p)
    782              {
    783                q->next=p->next;
    784                break;
    785              }
    786              q=qp;
   \                     ??RemoveLOGQ_1:
   \   00000008   0200A0E1           MOV      R0,R2
   \                     ??RemoveLOGQ_0:
   \   0000000C   002090E5           LDR      R2,[R0, #+0]
   \   00000010   000052E3           CMP      R2,#+0
   \   00000014   0300000A           BEQ      ??RemoveLOGQ_2
   \   00000018   010052E1           CMP      R2,R1
   \   0000001C   F9FFFF1A           BNE      ??RemoveLOGQ_1
   \   00000020   002091E5           LDR      R2,[R1, #+0]
   \   00000024   002080E5           STR      R2,[R0, #+0]
    787            }
    788            mfree(p); //Если элемент вообще не в логе
   \                     ??RemoveLOGQ_2:
   \   00000028   0100A0E1           MOV      R0,R1
   \   0000002C   150000EF           SWI      +21
    789          }
   \   00000030   0080BDE8           POP      {PC}             ;; return
    790          
    791          //Добавить элемент в лог

   \                                 In segment CODE, align 4, keep-with-next
    792          int AddLOGQ(LOGQ **queue, LOGQ *p)
    793          {
    794            LOGQ *q=(LOGQ *)queue;
    795            LOGQ *qp;
    796            int i=0;
   \                     AddLOGQ:
   \   00000000   0020A0E3           MOV      R2,#+0
   \   00000004   000000EA           B        ??AddLOGQ_0
    797            while(qp=q->next) {q=qp;i++;}
   \                     ??AddLOGQ_1:
   \   00000008   0300A0E1           MOV      R0,R3
   \                     ??AddLOGQ_0:
   \   0000000C   003090E5           LDR      R3,[R0, #+0]
   \   00000010   012082E2           ADD      R2,R2,#+1
   \   00000014   000053E3           CMP      R3,#+0
   \   00000018   FAFFFF1A           BNE      ??AddLOGQ_1
    798            p->next=NULL;
   \   0000001C   003081E5           STR      R3,[R1, #+0]
    799            q->next=p;
   \   00000020   001080E5           STR      R1,[R0, #+0]
    800            return(i+1); //Теперь всего в логе элементов
   \   00000024   0200A0E1           MOV      R0,R2
   \   00000028   1EFF2FE1           BX       LR               ;; return
    801          }
    802          
    803          //Получаем последний полученный X-статус

   \                                 In segment CODE, align 4, keep-with-next
    804          char *GetLastXTextLOGQ(CLIST *t)
    805          {
    806            LOGQ *p = t->log;
   \                     GetLastXTextLOGQ:
   \   00000000   A81090E5           LDR      R1,[R0, #+168]
    807            char *s = 0;
   \   00000004   0000A0E3           MOV      R0,#+0
    808            if(!p) return 0;
   \   00000008   000051E3           CMP      R1,#+0
   \   0000000C   0500001A           BNE      ??GetLastXTextLOGQ_0
   \   00000010   1EFF2FE1           BX       LR
    809            while(p->next)
    810            {
    811              if((p->type&0x0F)==3)
   \                     ??GetLastXTextLOGQ_1:
   \   00000014   0C3091E5           LDR      R3,[R1, #+12]
   \   00000018   0F3003E2           AND      R3,R3,#0xF
   \   0000001C   030053E3           CMP      R3,#+3
    812                s = p->text;
   \   00000020   60008102           ADDEQ    R0,R1,#+96
    813              p = p->next;
   \   00000024   0210A0E1           MOV      R1,R2
    814            }
   \                     ??GetLastXTextLOGQ_0:
   \   00000028   002091E5           LDR      R2,[R1, #+0]
   \   0000002C   000052E3           CMP      R2,#+0
   \   00000030   F7FFFF1A           BNE      ??GetLastXTextLOGQ_1
    815            if((p->type&0x0F)==3)
   \   00000034   0C2091E5           LDR      R2,[R1, #+12]
   \   00000038   0F2002E2           AND      R2,R2,#0xF
   \   0000003C   030052E3           CMP      R2,#+3
    816              s = p->text;
   \   00000040   60008102           ADDEQ    R0,R1,#+96
    817            return s;
   \   00000044   1EFF2FE1           BX       LR               ;; return
    818          }
    819          

   \                                 In segment CODE, align 4, keep-with-next
    820          int GetIconIndex(CLIST *t)
    821          {
    822            unsigned short s;
    823            if (t)
   \                     GetIconIndex:
   \   00000000   000050E3           CMP      R0,#+0
   \   00000004   3400000A           BEQ      ??GetIconIndex_0
    824            {
    825              s=t->state;
    826              if (t->isgroup) return(IS_GROUP);
   \   00000008   082090E5           LDR      R2,[R0, #+8]
   \   0000000C   B419D0E1           LDRH     R1,[R0, #+148]
   \   00000010   000052E3           CMP      R2,#+0
   \   00000014   0F00A013           MOVNE    R0,#+15
   \   00000018   1EFF2F11           BXNE     LR
    827              if (t->isunread)
   \   0000001C   9C0090E5           LDR      R0,[R0, #+156]
   \   00000020   000050E3           CMP      R0,#+0
    828                return(IS_MSG);
   \   00000024   0D00A013           MOVNE    R0,#+13
   \   00000028   1EFF2F11           BXNE     LR
    829              else
    830              {
    831                if (s==0xFFFF) return(IS_OFFLINE);
   \   0000002C   FF20A0E3           MOV      R2,#+255
   \   00000030   FF2C82E3           ORR      R2,R2,#0xFF00
   \   00000034   020051E1           CMP      R1,R2
   \   00000038   1EFF2F01           BXEQ     LR
    832                if ((s&0xF000)==0x2000) return (IS_LUNCH);
   \   0000003C   F02C01E2           AND      R2,R1,#0xF000
   \   00000040   800D52E3           CMP      R2,#+8192
   \   00000044   0900A003           MOVEQ    R0,#+9
   \   00000048   1EFF2F01           BXEQ     LR
    833                if ((s&0xF000)==0x3000) return (IS_EVIL);
   \   0000004C   C00D52E3           CMP      R2,#+12288
   \   00000050   0700A003           MOVEQ    R0,#+7
   \   00000054   1EFF2F01           BXEQ     LR
    834                if ((s&0xF000)==0x4000) return (IS_DEPRESSION);
   \   00000058   400C52E3           CMP      R2,#+16384
   \   0000005C   0600A003           MOVEQ    R0,#+6
   \   00000060   1EFF2F01           BXEQ     LR
    835                if ((s&0xF000)==0x5000) return (IS_HOME);
   \   00000064   500C52E3           CMP      R2,#+20480
   \   00000068   0800A003           MOVEQ    R0,#+8
   \   0000006C   1EFF2F01           BXEQ     LR
    836                if ((s&0xF000)==0x6000) return (IS_WORK);
   \   00000070   F00C01E2           AND      R0,R1,#0xF000
   \   00000074   600C50E3           CMP      R0,#+24576
   \   00000078   0A00A003           MOVEQ    R0,#+10
   \   0000007C   1EFF2F01           BXEQ     LR
    837                if (s & 0x0020) return(IS_FFC);
   \   00000080   200011E3           TST      R1,#0x20
   \   00000084   0100000A           BEQ      ??GetIconIndex_1
   \                     ??GetIconIndex_2:
   \   00000088   0C00A0E3           MOV      R0,#+12
   \   0000008C   1EFF2FE1           BX       LR
    838                if (s & 0x0001) return(IS_AWAY);
   \                     ??GetIconIndex_1:
   \   00000090   010011E3           TST      R1,#0x1
   \   00000094   0200A013           MOVNE    R0,#+2
   \   00000098   1EFF2F11           BXNE     LR
    839                if (s & 0x0005) return(IS_NA);
   \   0000009C   050011E3           TST      R1,#0x5
   \   000000A0   0300A013           MOVNE    R0,#+3
   \   000000A4   1EFF2F11           BXNE     LR
    840                if (s & 0x0011) return(IS_OCCUPIED);
   \   000000A8   110011E3           TST      R1,#0x11
   \   000000AC   0400A013           MOVNE    R0,#+4
   \   000000B0   1EFF2F11           BXNE     LR
    841                if (s & 0x0013) return(IS_DND);
   \   000000B4   130011E3           TST      R1,#0x13
   \   000000B8   0500A013           MOVNE    R0,#+5
   \   000000BC   1EFF2F11           BXNE     LR
    842                if (s & 0x0002) return(IS_FFC);
   \   000000C0   020011E3           TST      R1,#0x2
   \   000000C4   EFFFFF1A           BNE      ??GetIconIndex_2
    843                if (s & 0x0100) return(IS_INVISIBLE);
   \   000000C8   400F11E3           TST      R1,#0x100
   \   000000CC   0100A013           MOVNE    R0,#+1
   \   000000D0   1EFF2F11           BXNE     LR
    844              }
    845            }
    846            else
    847            {
    848              return(IS_UNKNOWN);
    849            }
    850            return(IS_ONLINE);
   \   000000D4   0B00A0E3           MOV      R0,#+11
   \   000000D8   1EFF2FE1           BX       LR
   \                     ??GetIconIndex_0:
   \   000000DC   0E00A0E3           MOV      R0,#+14
   \   000000E0   1EFF2FE1           BX       LR               ;; return
    851          }
    852          

   \                                 In segment CODE, align 4, keep-with-next
    853          LOGQ *FindContactLOGQByAck(TPKT *p)
    854          {
   \                     FindContactLOGQByAck:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    855            CLIST *t;
    856            LockSched();
   \   00000008   460100EF           SWI      +326
    857            t=FindContactByUin(p->pkt.uin);
   \   0000000C   000094E5           LDR      R0,[R4, #+0]
   \   00000010   ........           _BLF     FindContactByUin,??FindContactByUin??rA
   \   00000014   0050A0E1           MOV      R5,R0
    858            UnlockSched();
   \   00000018   470100EF           SWI      +327
    859            unsigned int id=*((unsigned short*)(p->data));
   \   0000001C   B840D4E1           LDRH     R4,[R4, #+8]
    860            LOGQ *q;
    861            if (!t) return NULL;
   \   00000020   000055E3           CMP      R5,#+0
   \   00000024   0000A003           MOVEQ    R0,#+0
   \   00000028   3080BD08           POPEQ    {R4,R5,PC}
    862            LockSched();
   \   0000002C   460100EF           SWI      +326
    863            q=t->log;
   \   00000030   A85095E5           LDR      R5,[R5, #+168]
   \   00000034   000000EA           B        ??FindContactLOGQByAck_0
    864            while(q)
    865            {
    866              if (q->ID==id) break;
    867              q=q->next;
   \                     ??FindContactLOGQByAck_1:
   \   00000038   005095E5           LDR      R5,[R5, #+0]
   \                     ??FindContactLOGQByAck_0:
   \   0000003C   000055E3           CMP      R5,#+0
   \   00000040   08009515           LDRNE    R0,[R5, #+8]
   \   00000044   04005011           CMPNE    R0,R4
   \   00000048   FAFFFF1A           BNE      ??FindContactLOGQByAck_1
    868            }
    869            UnlockSched();
   \   0000004C   470100EF           SWI      +327
    870            return q;
   \   00000050   0500A0E1           MOV      R0,R5
   \   00000054   3080BDE8           POP      {R4,R5,PC}       ;; return
    871          }
    872          
    873          char ContactT9Key[32];
    874          

   \                                 In segment CODE, align 4, keep-with-next
    875          void UpdateCLheader(void)
    876          {
   \                     UpdateCLheader:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
    877            if (strlen(ContactT9Key))
   \   00000004   ........           LDR      R7,??DataTable25  ;; contactlist_menuhdr
   \   00000008   D840A0E3           MOV      R4,#+216
   \   0000000C   504E84E3           ORR      R4,R4,#0x500
   \   00000010   705044E2           SUB      R5,R4,#+112
   \   00000014   746FC4E3           BIC      R6,R4,#0x1D0
   \   00000018   070086E0           ADD      R0,R6,R7
   \   0000001C   1B0000EF           SWI      +27
   \   00000020   000050E3           CMP      R0,#+0
   \   00000024   0800000A           BEQ      ??UpdateCLheader_0
    878            {
    879              strcpy(clm_hdr_text,key_clm_hdr_text);
   \   00000028   200044E2           SUB      R0,R4,#+32
   \   0000002C   071080E0           ADD      R1,R0,R7
   \   00000030   070085E0           ADD      R0,R5,R7
   \   00000034   1A0000EF           SWI      +26
    880              strcat(clm_hdr_text,ContactT9Key);
   \   00000038   071086E0           ADD      R1,R6,R7
   \   0000003C   070085E0           ADD      R0,R5,R7
   \   00000040   170000EF           SWI      +23
    881              strcpy(clmenu_sk_r,key_clmenu_sk_r);
   \   00000044   300084E2           ADD      R0,R4,#+48
   \   00000048   040000EA           B        ??UpdateCLheader_1
    882            }
    883            else
    884            {
    885          //    clm_hdr_text[0]=FIRST_UCS2_BITMAP+CurrentXStatus;
    886              strcpy(&clm_hdr_text[0],def_clm_hdr_text);
   \                     ??UpdateCLheader_0:
   \   0000004C   4000C4E3           BIC      R0,R4,#0x40
   \   00000050   071080E0           ADD      R1,R0,R7
   \   00000054   070085E0           ADD      R0,R5,R7
   \   00000058   1A0000EF           SWI      +26
    887              strcpy(clmenu_sk_r,def_clmenu_sk_r);
   \   0000005C   100084E2           ADD      R0,R4,#+16
   \                     ??UpdateCLheader_1:
   \   00000060   071080E0           ADD      R1,R0,R7
   \   00000064   070084E0           ADD      R0,R4,R7
   \   00000068   1A0000EF           SWI      +26
    888            }
    889          }
   \   0000006C   F080BDE8           POP      {R4-R7,PC}       ;; return
    890          

   \                                 In segment CODE, align 4, keep-with-next
    891          void ClearContactT9Key(void)
    892          {
    893            zeromem(ContactT9Key,sizeof(ContactT9Key));
   \                     ClearContactT9Key:
   \   00000000   0C009FE5           LDR      R0,??ClearContactT9Key_0  ;; contactlist_menuhdr + 1032
   \   00000004   00402DE9           PUSH     {LR}
   \   00000008   2010A0E3           MOV      R1,#+32
   \   0000000C   1D0100EF           SWI      +285
    894          }
   \   00000010   0080BDE8           POP      {PC}             ;; return
   \                     ??ClearContactT9Key_0:
   \   00000014   ........           DC32     contactlist_menuhdr + 1032
    895          

   \                                 In segment CODE, align 4, keep-with-next
    896          void AddContactT9Key(int chr)
    897          {
   \                     AddContactT9Key:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
    898            int l=strlen(ContactT9Key);
   \   00000004   ........           LDR      R5,??DataTable25  ;; contactlist_menuhdr
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0800A0E3           MOV      R0,#+8
   \   00000010   400E80E3           ORR      R0,R0,#0x400
   \   00000014   050080E0           ADD      R0,R0,R5
   \   00000018   1B0000EF           SWI      +27
    899            if (l<(sizeof(ContactT9Key)-1))
   \   0000001C   1F0050E3           CMP      R0,#+31
    900            {
    901              ContactT9Key[l]=chr;
   \   00000020   05008030           ADDCC    R0,R0,R5
   \   00000024   0844C035           STRBCC   R4,[R0, #+1032]
    902            }
    903          }
   \   00000028   3080BDE8           POP      {R4,R5,PC}       ;; return
    904          

   \                                 In segment CODE, align 4, keep-with-next
    905          void BackSpaceContactT9(void)
    906          {
   \                     BackSpaceContactT9:
   \   00000000   10402DE9           PUSH     {R4,LR}
    907            int l=strlen(ContactT9Key);
   \   00000004   ........           LDR      R4,??DataTable25  ;; contactlist_menuhdr
   \   00000008   0800A0E3           MOV      R0,#+8
   \   0000000C   400E80E3           ORR      R0,R0,#0x400
   \   00000010   040080E0           ADD      R0,R0,R4
   \   00000014   1B0000EF           SWI      +27
    908            if (l)
   \   00000018   000050E3           CMP      R0,#+0
    909            {
    910              l--;
    911              ContactT9Key[l]=0;
   \   0000001C   04008010           ADDNE    R0,R0,R4
   \   00000020   0010A013           MOVNE    R1,#+0
   \   00000024   0714C015           STRBNE   R1,[R0, #+1031]
    912            }
    913          }
   \   00000028   1080BDE8           POP      {R4,PC}          ;; return
    914          

   \                                 In segment CODE, align 4, keep-with-next
    915          void create_contactlist_menu(void)
    916          {
   \                     create_contactlist_menu:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
    917            int i;
    918            i=CountContacts();
    919            prev_clmenu_itemcount=i;
   \   00000004   74509FE5           LDR      R5,??create_contactlist_menu_0  ;; contactlist_menuhdr
   \   00000008   ........           _BLF     CountContacts,??CountContacts??rA
   \   0000000C   0040A0E1           MOV      R4,R0
   \   00000010   AC4285E5           STR      R4,[R5, #+684]
    920            
    921            
    922            //strcpy(def_clm_hdr_text, (char*)lgpData[LGP_ClTitle]);
    923            //strcpy(key_clm_hdr_text, (char*)lgpData[LGP_ClT9Inp]);
    924            
    925            //strcpy(def_clmenu_sk_r,(char*) lgpData[LGP_Close]);
    926            //strcpy(key_clmenu_sk_r,(char*) lgpData[LGP_Clear]);
    927            
    928            UpdateCLheader();
   \   00000014   ........           BL       UpdateCLheader
    929            patch_header(&contactlist_menuhdr);
   \   00000018   0000A0E3           MOV      R0,#+0
   \   0000001C   B000C5E1           STRH     R0,[R5, #+0]
   \   00000020   1800A0E3           MOV      R0,#+24
   \   00000024   B200C5E1           STRH     R0,[R5, #+2]
   \   00000028   888100EF           SWI      +33160
   \   0000002C   010040E2           SUB      R0,R0,#+1
   \   00000030   B400C5E1           STRH     R0,[R5, #+4]
   \   00000034   8A8100EF           SWI      +33162
    930            
    931            clmenu_sk[0].lgp_id=(int)lgpData[LGP_Options];
    932            menu_sk[0].lgp_id=(int)lgpData[LGP_Select];
    933            menu_sk[1].lgp_id=(int)lgpData[LGP_Close];
    934            
    935          
    936          #ifdef USE_MLMENU
    937            contactlist_menu_id=CreateMultiLinesMenu(0,0,&contactlist_menu,&contactlist_menuhdr,0,i);
   \   00000038   44209FE5           LDR      R2,??create_contactlist_menu_0+0x4  ;; contactlist_menu
   \   0000003C   170080E2           ADD      R0,R0,#+23
   \   00000040   B600C5E1           STRH     R0,[R5, #+6]
   \   00000044   ........           LDR      R0,??DataTable26  ;; lgpData
   \   00000048   0530A0E1           MOV      R3,R5
   \   0000004C   1C1090E5           LDR      R1,[R0, #+28]
   \   00000050   001285E5           STR      R1,[R5, #+512]
   \   00000054   301090E5           LDR      R1,[R0, #+48]
   \   00000058   200090E5           LDR      R0,[R0, #+32]
   \   0000005C   D01185E5           STR      R1,[R5, #+464]
   \   00000060   D80185E5           STR      R0,[R5, #+472]
   \   00000064   10002DE9           PUSH     {R4}
   \   00000068   0000A0E3           MOV      R0,#+0
   \   0000006C   01002DE9           PUSH     {R0}
   \   00000070   0010A0E3           MOV      R1,#+0
   \   00000074   170200EF           SWI      +535
   \   00000078   A40285E5           STR      R0,[R5, #+676]
    938          #else
    939            contactlist_menu_id=CreateMenu(0,0,&contactlist_menu,&contactlist_menuhdr,0,i,0,0);
    940          #endif
    941            
    942          }
   \   0000007C   3380BDE8           POP      {R0,R1,R4,R5,PC}  ;; return
   \                     ??create_contactlist_menu_0:
   \   00000080   ........           DC32     contactlist_menuhdr
   \   00000084   ........           DC32     contactlist_menu
    943          

   \                                 In segment CODE, align 4, keep-with-next
    944          void contactlist_menu_ghook(void *data, int cmd)
    945          {
   \                     contactlist_menu_ghook:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0140A0E1           MOV      R4,R1
    946            PNGTOP_DESC *pltop=PNG_TOP();
   \   00000008   B98100EF           SWI      +33209
    947            if (cmd==9)
   \   0000000C   0010A0E3           MOV      R1,#+0
   \   00000010   090054E3           CMP      R4,#+9
    948            {
    949              pltop->dyn_pltop=NULL;
   \   00000014   08108005           STREQ    R1,[R0, #+8]
   \   00000018   1080BD08           POPEQ    {R4,PC}
    950            }
    951            if (cmd==0x0A)
   \   0000001C   0A0054E3           CMP      R4,#+10
   \   00000020   1080BD18           POPNE    {R4,PC}
    952            {
    953              silenthide=0;
   \   00000024   14209FE5           LDR      R2,??contactlist_menu_ghook_0  ;; contactlist_menuhdr + 568
   \   00000028   001082E5           STR      R1,[R2, #+0]
    954              pltop->dyn_pltop=XStatusesImgList;
   \   0000002C   10109FE5           LDR      R1,??contactlist_menu_ghook_0+0x4  ;; XStatusesImgList
   \   00000030   001091E5           LDR      R1,[R1, #+0]
   \   00000034   081080E5           STR      R1,[R0, #+8]
    955              DisableIDLETMR();
   \   00000038   7F0100EF           SWI      +383
    956            }
    957          }
   \   0000003C   1080BDE8           POP      {R4,PC}          ;; return
   \                     ??contactlist_menu_ghook_0:
   \   00000040   ........           DC32     contactlist_menuhdr + 568
   \   00000044   ........           DC32     XStatusesImgList
    958          

   \                                 In segment CODE, align 4, keep-with-next
    959          void RecountMenu(CLIST *req, int needfocus)
    960          {
   \                     RecountMenu:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
    961            int i;
    962            int j;
    963            void *data;
    964            UpdateCLheader();
    965            if (!contactlist_menu_id) return; //Нечего считать
   \   00000004   ........           LDR      R6,??DataTable41  ;; contactlist_menuhdr
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   ........           BL       UpdateCLheader
   \   00000014   A40296E5           LDR      R0,[R6, #+676]
   \   00000018   000050E3           CMP      R0,#+0
   \   0000001C   F080BD08           POPEQ    {R4-R7,PC}
    966            data=FindGUIbyId(contactlist_menu_id,NULL);
   \   00000020   A40296E5           LDR      R0,[R6, #+676]
   \   00000024   0010A0E3           MOV      R1,#+0
   \   00000028   090200EF           SWI      +521
   \   0000002C   0070A0E1           MOV      R7,R0
    967            if (req==NULL)
   \   00000030   000054E3           CMP      R4,#+0
   \   00000034   0200000A           BEQ      ??RecountMenu_0
    968            {
    969              j=0;
    970            }
    971            else
    972            {
    973              j=FindContactByContact(req);
   \   00000038   0400A0E1           MOV      R0,R4
   \   0000003C   ........           _BLF     FindContactByContact,??FindContactByContact??rA
   \   00000040   0040A0E1           MOV      R4,R0
    974            }
    975            i=CountContacts();
   \                     ??RecountMenu_0:
   \   00000044   ........           _BLF     CountContacts,??CountContacts??rA
    976            if (j>=i) j=i-1;
    977            if (j<0) j=0;
    978            if (i!=prev_clmenu_itemcount)
   \   00000048   AC1296E5           LDR      R1,[R6, #+684]
   \   0000004C   000054E1           CMP      R4,R0
   \   00000050   014040A2           SUBGE    R4,R0,#+1
   \   00000054   000054E3           CMP      R4,#+0
   \   00000058   0040A043           MOVMI    R4,#+0
   \   0000005C   010050E1           CMP      R0,R1
   \   00000060   0300000A           BEQ      ??RecountMenu_1
    979            {
    980              prev_clmenu_itemcount=i;
   \   00000064   AC0286E5           STR      R0,[R6, #+684]
    981              Menu_SetItemCountDyn(data,i);
   \   00000068   0010A0E1           MOV      R1,R0
   \   0000006C   0700A0E1           MOV      R0,R7
   \   00000070   E60100EF           SWI      +486
    982            }
    983            if(needfocus) SetCursorToMenuItem(data,j);
   \                     ??RecountMenu_1:
   \   00000074   000055E3           CMP      R5,#+0
   \   00000078   0200000A           BEQ      ??RecountMenu_2
   \   0000007C   0410A0E1           MOV      R1,R4
   \   00000080   0700A0E1           MOV      R0,R7
   \   00000084   C40100EF           SWI      +452
    984            if (IsGuiOnTop(contactlist_menu_id)) RefreshGUI();
   \                     ??RecountMenu_2:
   \   00000088   A40296E5           LDR      R0,[R6, #+676]
   \   0000008C   350100EF           SWI      +309
   \   00000090   000050E3           CMP      R0,#+0
   \   00000094   F080BD08           POPEQ    {R4-R7,PC}
   \   00000098   960100EF           SWI      +406
   \   0000009C   F080BDE8           POP      {R4-R7,PC}       ;; return
    985          }
    986          

   \                                 In segment CODE, align 4, keep-with-next
    987          int contactlist_menu_onkey(void *data, GUI_MSG *msg)
    988          {
   \                     contactlist_menu_onkey:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000004   0140A0E1           MOV      R4,R1
    989            CLIST *t;
    990            int i;
    991            i=GetCurMenuItem(data);
   \   00000008   8F0100EF           SWI      +399
    992            t=FindContactByN(i);
   \   0000000C   ........           _BLF     FindContactByN,??FindContactByN??rA
   \   00000010   0080A0E1           MOV      R8,R0
    993            if (msg->keys==0x18)
   \   00000014   F200D4E1           LDRSH    R0,[R4, #+2]
   \   00000018   180050E3           CMP      R0,#+24
   \   0000001C   0100001A           BNE      ??contactlist_menu_onkey_0
    994            {
    995              ShowMainMenu();
   \   00000020   ........           _BLF     ShowMainMenu,??ShowMainMenu??rA
    996              return(-1);
   \   00000024   280000EA           B        ??contactlist_menu_onkey_1
    997            }
    998            if (msg->keys==0x3D)
   \                     ??contactlist_menu_onkey_0:
   \   00000028   ........           LDR      R5,??DataTable41  ;; contactlist_menuhdr
   \   0000002C   FF90A0E3           MOV      R9,#+255
   \   00000030   FF9C89E3           ORR      R9,R9,#0xFF00
   \   00000034   0860A0E3           MOV      R6,#+8
   \   00000038   406E86E3           ORR      R6,R6,#0x400
   \   0000003C   3D0050E3           CMP      R0,#+61
   \   00000040   2300001A           BNE      ??contactlist_menu_onkey_2
    999            {
   1000              if (t)
   \   00000044   000058E3           CMP      R8,#+0
   \   00000048   2B00000A           BEQ      ??contactlist_menu_onkey_3
   1001              {
   1002                if (t->isgroup)
   \   0000004C   080098E5           LDR      R0,[R8, #+8]
   \   00000050   000050E3           CMP      R0,#+0
   \   00000054   0500000A           BEQ      ??contactlist_menu_onkey_4
   1003                {
   1004          	t->state^=0xFFFF;
   \   00000058   B409D8E1           LDRH     R0,[R8, #+148]
   1005          	RecountMenu(t, 1);
   \   0000005C   0110A0E3           MOV      R1,#+1
   \   00000060   000029E0           EOR      R0,R9,R0
   \   00000064   B409C8E1           STRH     R0,[R8, #+148]
   \   00000068   0800A0E1           MOV      R0,R8
   \   0000006C   210000EA           B        ??contactlist_menu_onkey_5
   1006          	return(-1);
   1007                }
   1008                if (strlen(ContactT9Key))
   \                     ??contactlist_menu_onkey_4:
   \   00000070   050086E0           ADD      R0,R6,R5
   \   00000074   1B0000EF           SWI      +27
   \   00000078   000050E3           CMP      R0,#+0
   \   0000007C   0500000A           BEQ      ??contactlist_menu_onkey_6
   1009                {
   1010          	ClearContactT9Key();
   \   00000080   2010A0E3           MOV      R1,#+32
   \   00000084   050086E0           ADD      R0,R6,R5
   \   00000088   1D0100EF           SWI      +285
   1011          	RecountMenu(NULL, 1);
   \   0000008C   0110A0E3           MOV      R1,#+1
   \   00000090   0000A0E3           MOV      R0,#+0
   \   00000094   ........           BL       RecountMenu
   1012                }
   1013                if(!t->isactive && HISTORY_BUFFER) GetHistory(t, 64<<HISTORY_BUFFER);
   \                     ??contactlist_menu_onkey_6:
   \   00000098   B40098E5           LDR      R0,[R8, #+180]
   \   0000009C   000050E3           CMP      R0,#+0
   \   000000A0   0700001A           BNE      ??contactlist_menu_onkey_7
   \   000000A4   ........           LDR      R0,??DataTable29  ;; HISTORY_BUFFER
   \   000000A8   000090E5           LDR      R0,[R0, #+0]
   \   000000AC   000050E3           CMP      R0,#+0
   \   000000B0   0300000A           BEQ      ??contactlist_menu_onkey_7
   \   000000B4   4010A0E3           MOV      R1,#+64
   \   000000B8   1110A0E1           LSL      R1,R1,R0
   \   000000BC   0800A0E1           MOV      R0,R8
   \   000000C0   ........           _BLF     GetHistory,??GetHistory??rA
   1014                CreateEditChat(t);
   \                     ??contactlist_menu_onkey_7:
   \   000000C4   0800A0E1           MOV      R0,R8
   \   000000C8   ........           BL       CreateEditChat
   1015              }
   1016              return(-1);
   \                     ??contactlist_menu_onkey_1:
   \   000000CC   0000E0E3           MVN      R0,#+0
   \   000000D0   F08FBDE8           POP      {R4-R11,PC}
   1017            }
   1018            if (msg->keys==1)
   \                     ??contactlist_menu_onkey_2:
   \   000000D4   010050E3           CMP      R0,#+1
   \   000000D8   0900001A           BNE      ??contactlist_menu_onkey_8
   1019            {
   1020              if (strlen(ContactT9Key))
   \   000000DC   050086E0           ADD      R0,R6,R5
   \   000000E0   1B0000EF           SWI      +27
   \   000000E4   000050E3           CMP      R0,#+0
   \   000000E8   0500000A           BEQ      ??contactlist_menu_onkey_8
   1021              {
   1022                BackSpaceContactT9();
   \   000000EC   ........           BL       BackSpaceContactT9
   1023                RecountMenu(NULL, 1);
   \   000000F0   0110A0E3           MOV      R1,#+1
   \   000000F4   0000A0E3           MOV      R0,#+0
   \                     ??contactlist_menu_onkey_5:
   \   000000F8   ........           BL       RecountMenu
   1024                return(-1);
   \                     ??contactlist_menu_onkey_3:
   \   000000FC   0000E0E3           MVN      R0,#+0
   \   00000100   F08FBDE8           POP      {R4-R11,PC}
   1025              }
   1026            }
   1027            if (msg->gbsmsg->msg==KEY_DOWN)
   \                     ??contactlist_menu_onkey_8:
   \   00000104   041094E5           LDR      R1,[R4, #+4]
   \   00000108   0070A0E3           MOV      R7,#+0
   \   0000010C   040091E5           LDR      R0,[R1, #+4]
   \   00000110   0140A0E3           MOV      R4,#+1
   \   00000114   9320A0E3           MOV      R2,#+147
   \   00000118   402F82E3           ORR      R2,R2,#0x100
   \   0000011C   020050E1           CMP      R0,R2
   \   00000120   3D00001A           BNE      ??contactlist_menu_onkey_9
   1028            {
   1029              int key=msg->gbsmsg->submess;
   \   00000124   080091E5           LDR      R0,[R1, #+8]
   1030              if (((key>='0')&&(key<='9'))||(key=='#')||(key=='*'))
   \   00000128   300050E3           CMP      R0,#+48
   \   0000012C   100000BA           BLT      ??contactlist_menu_onkey_10
   \   00000130   3A0050E3           CMP      R0,#+58
   \   00000134   110000BA           BLT      ??contactlist_menu_onkey_11
   1031              {
   1032                AddContactT9Key(key);
   1033                RecountMenu(NULL, 1);
   1034                return(-1);
   1035              }
   1036              if (key==GREEN_BUTTON)
   1037              {
   1038                Is_Active_Up=!Is_Active_Up;
   1039                SUBPROC((void*)WriteDefSettings);
   1040                RecountMenu(NULL, 1);
   1041                return(-1);
   1042              }
   1043              if (key==RIGHT_BUTTON)
   \   00000138   082098E5           LDR      R2,[R8, #+8]
   \   0000013C   3E0050E3           CMP      R0,#+62
   \   00000140   2100001A           BNE      ??contactlist_menu_onkey_12
   1044              {
   1045                //Послать запрос текста XStatus
   1046                if (t)
   \   00000144   000058E3           CMP      R8,#+0
   \   00000148   3300000A           BEQ      ??contactlist_menu_onkey_9
   1047                {
   1048          	if (!t->isgroup)
   \   0000014C   000052E3           CMP      R2,#+0
   \   00000150   3100001A           BNE      ??contactlist_menu_onkey_9
   1049          	{
   1050          	  FreeXText(t);
   \   00000154   0800A0E1           MOV      R0,R8
   \   00000158   ........           _BLF     FreeXText,??FreeXText??rA
   1051                    t->req_xtext=0;
   \   0000015C   C07088E5           STR      R7,[R8, #+192]
   1052                    RequestXText(t->uin);
   \   00000160   0C0098E5           LDR      R0,[R8, #+12]
   \   00000164   ........           BL       RequestXText
   1053          	  RefreshGUI();
   \   00000168   960100EF           SWI      +406
   1054          	  return(-1);
   \   0000016C   000064E2           RSB      R0,R4,#+0
   \   00000170   F08FBDE8           POP      {R4-R11,PC}
   1055          	}
   1056                }
   1057              }
   \                     ??contactlist_menu_onkey_10:
   \   00000174   230050E3           CMP      R0,#+35
   \   00000178   2A005013           CMPNE    R0,#+42
   \   0000017C   0500001A           BNE      ??contactlist_menu_onkey_13
   \                     ??contactlist_menu_onkey_11:
   \   00000180   ........           BL       AddContactT9Key
   \   00000184   0110A0E3           MOV      R1,#+1
   \   00000188   0700A0E1           MOV      R0,R7
   \   0000018C   ........           BL       RecountMenu
   \   00000190   000064E2           RSB      R0,R4,#+0
   \   00000194   F08FBDE8           POP      {R4-R11,PC}
   \                     ??contactlist_menu_onkey_13:
   \   00000198   0B0050E3           CMP      R0,#+11
   \   0000019C   1E00001A           BNE      ??contactlist_menu_onkey_9
   \   000001A0   5C0295E5           LDR      R0,[R5, #+604]
   \   000001A4   000050E3           CMP      R0,#+0
   \   000001A8   48019FE5           LDR      R0,??contactlist_menu_onkey_14  ;; WriteDefSettings
   \   000001AC   0040A013           MOVNE    R4,#+0
   \   000001B0   5C4285E5           STR      R4,[R5, #+604]
   \   000001B4   710100EF           SWI      +369
   \   000001B8   0110A0E3           MOV      R1,#+1
   \   000001BC   0000A0E3           MOV      R0,#+0
   \   000001C0   ........           BL       RecountMenu
   \   000001C4   0700E0E1           MVN      R0,R7
   \   000001C8   F08FBDE8           POP      {R4-R11,PC}
   1058              if (key==LEFT_BUTTON)
   \                     ??contactlist_menu_onkey_12:
   \   000001CC   3D0050E3           CMP      R0,#+61
   \   000001D0   1100001A           BNE      ??contactlist_menu_onkey_9
   1059              {
   1060                if (t && Is_Show_Groups) {//есть контакт и показываем группы?
   \   000001D4   000058E3           CMP      R8,#+0
   \   000001D8   4C029515           LDRNE    R0,[R5, #+588]
   \   000001DC   00005013           CMPNE    R0,#+0
   \   000001E0   C5FFFF0A           BEQ      ??contactlist_menu_onkey_3
   1061                 if (!t->isgroup)
   \   000001E4   000052E3           CMP      R2,#+0
   \   000001E8   0300001A           BNE      ??contactlist_menu_onkey_15
   1062                  t=FindGroupByID(t->group);
   \   000001EC   100098E5           LDR      R0,[R8, #+16]
   \   000001F0   ........           _BLF     FindGroupByID,??FindGroupByID??rA
   \   000001F4   0080B0E1           MOVS     R8,R0
   1063                 if (t && !t->state) {//группа нашлась и она открыта?
   \   000001F8   BFFFFF0A           BEQ      ??contactlist_menu_onkey_3
   \                     ??contactlist_menu_onkey_15:
   \   000001FC   B409D8E1           LDRH     R0,[R8, #+148]
   \   00000200   000050E3           CMP      R0,#+0
   \   00000204   BCFFFF1A           BNE      ??contactlist_menu_onkey_3
   1064                  t->state^=0xFFFF;
   \   00000208   B499C8E1           STRH     R9,[R8, #+148]
   1065                  RecountMenu(t, 1);
   \   0000020C   0110A0E3           MOV      R1,#+1
   \   00000210   0800A0E1           MOV      R0,R8
   \   00000214   ........           BL       RecountMenu
   \   00000218   ABFFFFEA           B        ??contactlist_menu_onkey_1
   1066                 }
   1067                }
   1068                return -1;
   1069              }
   1070            }
   1071            if (msg->gbsmsg->msg==LONG_PRESS)
   \                     ??contactlist_menu_onkey_9:
   \   0000021C   040091E5           LDR      R0,[R1, #+4]
   \   00000220   652F84E3           ORR      R2,R4,#0x194
   \   00000224   020050E1           CMP      R0,R2
   \   00000228   3000001A           BNE      ??contactlist_menu_onkey_16
   1072            {
   1073              if (msg->gbsmsg->submess=='#')
   \   0000022C   080091E5           LDR      R0,[R1, #+8]
   \   00000230   ........           LDR      R11,??DataTable32  ;; Canvas
   \   00000234   0980A0E3           MOV      R8,#+9
   \   00000238   428C88E3           ORR      R8,R8,#0x4200
   \   0000023C   B090A0E3           MOV      R9,#+176
   \   00000240   DE9C89E3           ORR      R9,R9,#0xDE00
   \   00000244   79AFA0E3           MOV      R10,#+484
   \   00000248   230050E3           CMP      R0,#+35
   \   0000024C   1400001A           BNE      ??contactlist_menu_onkey_17
   1074              {
   1075                ClearContactT9Key();
   \   00000250   2010A0E3           MOV      R1,#+32
   \   00000254   050086E0           ADD      R0,R6,R5
   \   00000258   1D0100EF           SWI      +285
   1076                RecountMenu(NULL, 1);
   \   0000025C   0110A0E3           MOV      R1,#+1
   \   00000260   0700A0E1           MOV      R0,R7
   \   00000264   ........           BL       RecountMenu
   1077                gipc.name_to=ipc_xtask_name;
   \   00000268   5A0F8BE2           ADD      R0,R11,#+360
   \   0000026C   05008AE7           STR      R0,[R10, +R5]
   1078                gipc.name_from=ipc_my_name;
   \   00000270   520F8BE2           ADD      R0,R11,#+328
   \   00000274   E80185E5           STR      R0,[R5, #+488]
   1079                gipc.data=0;
   \   00000278   EC7185E5           STR      R7,[R5, #+492]
   1080                GBS_SendMessage(MMI_CEPID,MSG_IPC,IPC_XTASK_IDLE,&gipc);
   \   0000027C   05308AE0           ADD      R3,R10,R5
   \   00000280   0420A0E1           MOV      R2,R4
   \   00000284   0910A0E1           MOV      R1,R9
   \   00000288   0800A0E1           MOV      R0,R8
   \   0000028C   000100EF           SWI      +256
   1081                if (IsUnlocked())
   \   00000290   430000EF           SWI      +67
   \   00000294   000050E3           CMP      R0,#+0
   \   00000298   97FFFF0A           BEQ      ??contactlist_menu_onkey_3
   1082                {
   1083                  KbdLock();
   \   0000029C   A90000EF           SWI      +169
   \   000002A0   89FFFFEA           B        ??contactlist_menu_onkey_1
   1084                }
   1085                return(-1);
   1086              }
   1087              if (msg->gbsmsg->submess=='*'){
   \                     ??contactlist_menu_onkey_17:
   \   000002A4   2A0050E3           CMP      R0,#+42
   \   000002A8   1000001A           BNE      ??contactlist_menu_onkey_16
   1088                ClearContactT9Key();
   \   000002AC   2010A0E3           MOV      R1,#+32
   \   000002B0   050086E0           ADD      R0,R6,R5
   \   000002B4   1D0100EF           SWI      +285
   1089                RecountMenu(NULL, 1);
   \   000002B8   0110A0E3           MOV      R1,#+1
   \   000002BC   0700A0E1           MOV      R0,R7
   \   000002C0   ........           BL       RecountMenu
   1090                silenthide=1;
   \   000002C4   384285E5           STR      R4,[R5, #+568]
   1091                gipc.name_to=ipc_xtask_name;
   \   000002C8   5A0F8BE2           ADD      R0,R11,#+360
   \   000002CC   05008AE7           STR      R0,[R10, +R5]
   1092                gipc.name_from=ipc_my_name;
   \   000002D0   520F8BE2           ADD      R0,R11,#+328
   \   000002D4   E80185E5           STR      R0,[R5, #+488]
   1093                gipc.data=0;
   \   000002D8   EC7185E5           STR      R7,[R5, #+492]
   1094                GBS_SendMessage(MMI_CEPID,MSG_IPC,IPC_XTASK_IDLE,&gipc);
   \   000002DC   05308AE0           ADD      R3,R10,R5
   \   000002E0   0420A0E1           MOV      R2,R4
   \   000002E4   0910A0E1           MOV      R1,R9
   \   000002E8   0800A0E1           MOV      R0,R8
   \   000002EC   000100EF           SWI      +256
   1095              }
   1096            }
   1097            return(0);
   \                     ??contactlist_menu_onkey_16:
   \   000002F0   0000A0E3           MOV      R0,#+0
   \   000002F4   F08FBDE8           POP      {R4-R11,PC}      ;; return
   \                     ??contactlist_menu_onkey_14:
   \   000002F8   ........           DC32     WriteDefSettings
   1098          }
   1099          

   \                                 In segment CODE, align 4, keep-with-next
   1100          void GetOnTotalContact(int group_id,int *_onlinetotal)
   1101          {
   1102            CLIST *t;
   1103            t=(CLIST *)&cltop;
   \                     GetOnTotalContact:
   \   00000000   ........           LDR      R2,??DataTable31  ;; contactlist_menuhdr + 668
   \   00000004   30002DE9           PUSH     {R4,R5}
   1104            int online=0,total=0;
   \   00000008   0030A0E3           MOV      R3,#+0
   \   0000000C   00C0A0E3           MOV      R12,#+0
   \   00000010   FF50A0E3           MOV      R5,#+255
   \   00000014   FF5C85E3           ORR      R5,R5,#0xFF00
   \   00000018   080000EA           B        ??GetOnTotalContact_0
   1105            while((t=t->next))
   1106            {
   1107              if(t->group==group_id && !t->isgroup)
   \                     ??GetOnTotalContact_1:
   \   0000001C   104092E5           LDR      R4,[R2, #+16]
   \   00000020   000054E1           CMP      R4,R0
   \   00000024   08409205           LDREQ    R4,[R2, #+8]
   \   00000028   00005403           CMPEQ    R4,#+0
   \   0000002C   0300001A           BNE      ??GetOnTotalContact_0
   1108              {
   1109                total++;
   1110                if (t->state!=0xFFFF) online++;
   \   00000030   B449D2E1           LDRH     R4,[R2, #+148]
   \   00000034   01C08CE2           ADD      R12,R12,#+1
   \   00000038   050054E1           CMP      R4,R5
   \   0000003C   01308312           ADDNE    R3,R3,#+1
   1111              }
   1112            }
   \                     ??GetOnTotalContact_0:
   \   00000040   002092E5           LDR      R2,[R2, #+0]
   \   00000044   000052E3           CMP      R2,#+0
   \   00000048   F3FFFF1A           BNE      ??GetOnTotalContact_1
   1113            _onlinetotal[0]=online;
   \   0000004C   003081E5           STR      R3,[R1, #+0]
   1114            _onlinetotal[1]=total;
   \   00000050   04C081E5           STR      R12,[R1, #+4]
   1115          }
   \   00000054   3000BDE8           POP      {R4,R5}
   \   00000058   1EFF2FE1           BX       LR               ;; return
   1116          
   1117          

   \                                 In segment CODE, align 4, keep-with-next
   1118          void contactlist_menu_iconhndl(void *data, int curitem, void *unk)
   1119          {
   \                     contactlist_menu_iconhndl:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000004   9CDF4DE2           SUB      SP,SP,#+624
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
   1120            CLIST *t;
   1121          #ifdef USE_MLMENU
   1122            void *item=AllocMLMenuItem(data);
   \   00000010   190200EF           SWI      +537
   \   00000014   0060A0E1           MOV      R6,R0
   1123          #else
   1124            void *item=AllocMenuItem(data);
   1125          #endif
   1126            int icon;
   1127          
   1128            WSHDR *ws2;
   1129          #ifdef USE_MLMENU
   1130            WSHDR *ws4;
   1131          #endif
   1132            WSHDR ws1loc, *ws1;
   1133            unsigned short num[128];
   1134            ws1=CreateLocalWS(&ws1loc,num,128);
   \   00000018   8020A0E3           MOV      R2,#+128
   \   0000001C   08108DE2           ADD      R1,SP,#+8
   \   00000020   920F8DE2           ADD      R0,SP,#+584
   \   00000024   270100EF           SWI      +295
   \   00000028   0070A0E1           MOV      R7,R0
   1135          #ifdef USE_MLMENU
   1136            WSHDR ws3loc, *ws3;
   1137            unsigned short num3[128];
   1138            ws3=CreateLocalWS(&ws3loc,num3,128);
   \   0000002C   8020A0E3           MOV      R2,#+128
   \   00000030   421F8DE2           ADD      R1,SP,#+264
   \   00000034   970F8DE2           ADD      R0,SP,#+604
   \   00000038   270100EF           SWI      +295
   \   0000003C   0080A0E1           MOV      R8,R0
   1139            char s[64];
   1140          #endif
   1141            t=FindContactByN(curitem);
   \   00000040   0500A0E1           MOV      R0,R5
   \   00000044   ........           _BLF     FindContactByN,??FindContactByN??rA
   \   00000048   0090B0E1           MOVS     R9,R0
   1142            if (t)
   \   0000004C   5900000A           BEQ      ??contactlist_menu_iconhndl_0
   1143            {
   1144              icon=GetIconIndex(t);
   1145              if (icon!=IS_GROUP)
   \   00000050   ........           LDR      R11,??DataTable32  ;; Canvas
   \   00000054   ........           BL       GetIconIndex
   \   00000058   00A0A0E1           MOV      R10,R0
   \   0000005C   0F005AE3           CMP      R10,#+15
   \   00000060   4300000A           BEQ      ??contactlist_menu_iconhndl_1
   1146              {
   1147                wsprintf(ws1,percent_t,t->name);
   \   00000064   142089E2           ADD      R2,R9,#+20
   \   00000068   08108BE2           ADD      R1,R11,#+8
   \   0000006C   0700A0E1           MOV      R0,R7
   \   00000070   240100EF           SWI      +292
   1148                if (t->isactive)
   \   00000074   B40099E5           LDR      R0,[R9, #+180]
   \   00000078   000050E3           CMP      R0,#+0
   \   0000007C   0800000A           BEQ      ??contactlist_menu_iconhndl_2
   1149                {
   1150                  wsInsertChar(ws1,0x0002,1);
   \   00000080   0120A0E3           MOV      R2,#+1
   \   00000084   0210A0E3           MOV      R1,#+2
   \   00000088   0700A0E1           MOV      R0,R7
   \   0000008C   1D0000EF           SWI      +29
   1151                  wsInsertChar(ws1,0xE008,1);
   \   00000090   0120A0E3           MOV      R2,#+1
   \   00000094   0810A0E3           MOV      R1,#+8
   \   00000098   E01C81E3           ORR      R1,R1,#0xE000
   \   0000009C   0700A0E1           MOV      R0,R7
   \   000000A0   1D0000EF           SWI      +29
   1152                }
   1153          #ifdef USE_MLMENU
   1154                if (t->xtext && t->xtext[0]!=0)
   \                     ??contactlist_menu_iconhndl_2:
   \   000000A4   BC0099E5           LDR      R0,[R9, #+188]
   \   000000A8   000050E3           CMP      R0,#+0
   \   000000AC   0000D015           LDRBNE   R0,[R0, #+0]
   \   000000B0   00005013           CMPNE    R0,#+0
   \   000000B4   1000000A           BEQ      ??contactlist_menu_iconhndl_3
   1155                {
   1156          	int i;
   1157          	zeromem(s,64);
   \   000000B8   4010A0E3           MOV      R1,#+64
   \   000000BC   820F8DE2           ADD      R0,SP,#+520
   \   000000C0   1D0100EF           SWI      +285
   1158          	i=t->xtext[0];
   \   000000C4   BC0099E5           LDR      R0,[R9, #+188]
   \   000000C8   0020D0E5           LDRB     R2,[R0, #+0]
   1159          	if (i>63) i=63;
   1160          	strncpy(s,t->xtext+1,i);
   \   000000CC   011080E2           ADD      R1,R0,#+1
   \   000000D0   820F8DE2           ADD      R0,SP,#+520
   \   000000D4   400052E3           CMP      R2,#+64
   \   000000D8   3F20A0A3           MOVGE    R2,#+63
   \   000000DC   160100EF           SWI      +278
   1161          	wsprintf(ws3,"%c%t",0xE012,s);
   \   000000E0   823F8DE2           ADD      R3,SP,#+520
   \   000000E4   1220A0E3           MOV      R2,#+18
   \   000000E8   E02C82E3           ORR      R2,R2,#0xE000
   \   000000EC   501F8BE2           ADD      R1,R11,#+320
   \   000000F0   0800A0E1           MOV      R0,R8
   \   000000F4   240100EF           SWI      +292
   \   000000F8   030000EA           B        ??contactlist_menu_iconhndl_4
   1162                }
   1163                else
   1164          	wsprintf(ws3,percent_d,t->uin);
   \                     ??contactlist_menu_iconhndl_3:
   \   000000FC   0C2099E5           LDR      R2,[R9, #+12]
   \   00000100   0B108BE2           ADD      R1,R11,#+11
   \   00000104   0800A0E1           MOV      R0,R8
   \   00000108   240100EF           SWI      +292
   1165                if (t->xstate[0]){
   \                     ??contactlist_menu_iconhndl_4:
   \   0000010C   9600D9E5           LDRB     R0,[R9, #+150]
   \   00000110   000050E3           CMP      R0,#+0
   \   00000114   2B00000A           BEQ      ??contactlist_menu_iconhndl_5
   1166          	int a=0;
   \   00000118   00B0A0E3           MOV      R11,#+0
   1167                  while(a<4){
   1168                    if (t->xstate[a] && (t->xstate[a]<total_xstatuses)){
   \                     ??contactlist_menu_iconhndl_6:
   \   0000011C   09008BE0           ADD      R0,R11,R9
   \   00000120   9600D0E5           LDRB     R0,[R0, #+150]
   \   00000124   000050E3           CMP      R0,#+0
   \   00000128   2600000A           BEQ      ??contactlist_menu_iconhndl_5
   \   0000012C   ........           LDR      R1,??DataTable33  ;; total_xstatuses
   \   00000130   09008BE0           ADD      R0,R11,R9
   \   00000134   9600D0E5           LDRB     R0,[R0, #+150]
   \   00000138   001091E5           LDR      R1,[R1, #+0]
   \   0000013C   010050E1           CMP      R0,R1
   \   00000140   200000AA           BGE      ??contactlist_menu_iconhndl_5
   1169                      wsInsertChar(ws3,FIRST_UCS2_BITMAP+t->xstate[a],1);
   \   00000144   09008BE0           ADD      R0,R11,R9
   \   00000148   9600D0E5           LDRB     R0,[R0, #+150]
   \   0000014C   0120A0E3           MOV      R2,#+1
   \   00000150   2A10A0E3           MOV      R1,#+42
   \   00000154   E11C81E3           ORR      R1,R1,#0xE100
   \   00000158   001081E0           ADD      R1,R1,R0
   \   0000015C   0800A0E1           MOV      R0,R8
   \   00000160   1D0000EF           SWI      +29
   1170                    }else{
   1171                      break;
   1172                    }
   1173                    a++;
   \   00000164   01B08BE2           ADD      R11,R11,#+1
   1174                  }
   \   00000168   04005BE3           CMP      R11,#+4
   \   0000016C   150000AA           BGE      ??contactlist_menu_iconhndl_5
   \   00000170   E9FFFFEA           B        ??contactlist_menu_iconhndl_6
   1175                }
   1176          #endif
   1177              }
   1178              else
   1179              {
   1180                int onlinetotal[2];
   1181                GetOnTotalContact(t->group,onlinetotal);
   \                     ??contactlist_menu_iconhndl_1:
   \   00000174   100099E5           LDR      R0,[R9, #+16]
   \   00000178   0D10A0E1           MOV      R1,SP
   \   0000017C   ........           BL       GetOnTotalContact
   1182          #ifdef USE_MLMENU
   1183                wsprintf(ws1,percent_t,t->name);
   \   00000180   142089E2           ADD      R2,R9,#+20
   \   00000184   08108BE2           ADD      R1,R11,#+8
   \   00000188   0700A0E1           MOV      R0,R7
   \   0000018C   240100EF           SWI      +292
   1184                wsprintf(ws3,"(%d/%d)",onlinetotal[0],onlinetotal[1]);
   \   00000190   04309DE5           LDR      R3,[SP, #+4]
   \   00000194   00209DE5           LDR      R2,[SP, #+0]
   \   00000198   20108BE2           ADD      R1,R11,#+32
   \   0000019C   0800A0E1           MOV      R0,R8
   \   000001A0   240100EF           SWI      +292
   1185          #else
   1186                wsprintf(ws1,"%t%c%c(%d/%d)",t->name,0xE01D,0xE012,onlinetotal[0],onlinetotal[1]);
   1187          #endif
   1188                if (t->state) icon++; //Модификация иконки группы
   \   000001A4   B409D9E1           LDRH     R0,[R9, #+148]
   \   000001A8   000050E3           CMP      R0,#+0
   \   000001AC   0500000A           BEQ      ??contactlist_menu_iconhndl_5
   \   000001B0   01A08AE2           ADD      R10,R10,#+1
   \   000001B4   030000EA           B        ??contactlist_menu_iconhndl_5
   1189              }
   1190            }
   1191            else
   1192            {
   1193              wsprintf(ws1, lgpData[LGP_ClError]);
   \                     ??contactlist_menu_iconhndl_0:
   \   000001B8   78009FE5           LDR      R0,??contactlist_menu_iconhndl_7  ;; lgpData + 12
   \   000001BC   001090E5           LDR      R1,[R0, #+0]
   \   000001C0   0700A0E1           MOV      R0,R7
   \   000001C4   240100EF           SWI      +292
   1194            }
   1195            ws2=AllocMenuWS(data,ws1->wsbody[0]);
   \                     ??contactlist_menu_iconhndl_5:
   \   000001C8   000097E5           LDR      R0,[R7, #+0]
   \   000001CC   B010D0E1           LDRH     R1,[R0, #+0]
   \   000001D0   0400A0E1           MOV      R0,R4
   \   000001D4   980100EF           SWI      +408
   \   000001D8   0090A0E1           MOV      R9,R0
   1196            wstrcpy(ws2,ws1);
   \   000001DC   0710A0E1           MOV      R1,R7
   \   000001E0   1F0100EF           SWI      +287
   1197          
   1198            SetMenuItemIconArray(data, item, S_ICONS+icon);
   \   000001E4   ........           LDR      R0,??DataTable41  ;; contactlist_menuhdr
   \   000001E8   0610A0E1           MOV      R1,R6
   \   000001EC   0A0180E0           ADD      R0,R0,R10, LSL #+2
   \   000001F0   442F80E2           ADD      R2,R0,#+272
   \   000001F4   0400A0E1           MOV      R0,R4
   \   000001F8   990100EF           SWI      +409
   1199          #ifdef USE_MLMENU
   1200            ws4=AllocMenuWS(data,ws3->wsbody[0]);
   \   000001FC   000098E5           LDR      R0,[R8, #+0]
   \   00000200   B010D0E1           LDRH     R1,[R0, #+0]
   \   00000204   0400A0E1           MOV      R0,R4
   \   00000208   980100EF           SWI      +408
   \   0000020C   0070A0E1           MOV      R7,R0
   1201            wstrcpy(ws4,ws3);
   \   00000210   0810A0E1           MOV      R1,R8
   \   00000214   1F0100EF           SWI      +287
   1202            SetMLMenuItemText(data, item, ws2, ws4, curitem);
   \   00000218   20002DE9           PUSH     {R5}
   \   0000021C   0730A0E1           MOV      R3,R7
   \   00000220   0920A0E1           MOV      R2,R9
   \   00000224   0610A0E1           MOV      R1,R6
   \   00000228   0400A0E1           MOV      R0,R4
   \   0000022C   180200EF           SWI      +536
   1203          #else
   1204            SetMenuItemText(data, item, ws2, curitem);
   1205          #endif
   1206          }
   \   00000230   9DDF8DE2           ADD      SP,SP,#+628
   \   00000234   F08FBDE8           POP      {R4-R11,PC}      ;; return
   \                     ??contactlist_menu_iconhndl_7:
   \   00000238   ........           DC32     lgpData + 12
   1207          
   1208          //===============================================================================================
   1209          int DNR_ID=0;
   1210          int DNR_TRIES=3;
   1211          
   1212          extern const char NATICQ_HOST[];
   1213          extern const unsigned int NATICQ_PORT;
   1214          extern const unsigned int RECONNECT_TIME;
   1215          char hostname[128];
   1216          int host_counter = 0;
   1217          
   1218          //---------------------------------------------------------------------------

   \                                 In segment CODE, align 4, keep-with-next
   1219          const char *GetHost(int cnt, const char *str, char *buf)
   1220          {
   1221            const char *tmp = str, *begin, *end;
   \                     GetHost:
   \   00000000   0130A0E1           MOV      R3,R1
   1222            if(cnt)
   \   00000004   000050E3           CMP      R0,#+0
   \   00000008   0100001A           BNE      ??GetHost_0
   \   0000000C   180000EA           B        ??GetHost_1
   1223            {
   1224              for(;cnt;cnt--)
   1225              {
   1226                for(;*str!=';' && *str!=' ' && *str!='\x0D' && *str!='\x0A' && *str; str++);
   \                     ??GetHost_2:
   \   00000010   011081E2           ADD      R1,R1,#+1
   \                     ??GetHost_0:
   \   00000014   00C0D1E5           LDRB     R12,[R1, #+0]
   \   00000018   3B005CE3           CMP      R12,#+59
   \   0000001C   20005C13           CMPNE    R12,#+32
   \   00000020   0D005C13           CMPNE    R12,#+13
   \   00000024   0A005C13           CMPNE    R12,#+10
   \   00000028   00005C13           CMPNE    R12,#+0
   \   0000002C   F7FFFF1A           BNE      ??GetHost_2
   1227                if(!*str) str = tmp;
   \   00000030   00005CE3           CMP      R12,#+0
   \   00000034   0200001A           BNE      ??GetHost_3
   \   00000038   0310A0E1           MOV      R1,R3
   \   0000003C   000000EA           B        ??GetHost_3
   1228                for(;(*str==';' || *str==' ' || *str=='\x0D' || *str=='\x0A') && *str; str++);
   \                     ??GetHost_4:
   \   00000040   011081E2           ADD      R1,R1,#+1
   \                     ??GetHost_3:
   \   00000044   00C0D1E5           LDRB     R12,[R1, #+0]
   \   00000048   3B005CE3           CMP      R12,#+59
   \   0000004C   20005C13           CMPNE    R12,#+32
   \   00000050   0D005C13           CMPNE    R12,#+13
   \   00000054   0A005C13           CMPNE    R12,#+10
   \   00000058   0100001A           BNE      ??GetHost_5
   \   0000005C   00005CE3           CMP      R12,#+0
   \   00000060   F6FFFF1A           BNE      ??GetHost_4
   1229                if(!*str) str = tmp;
   \                     ??GetHost_5:
   \   00000064   00005CE3           CMP      R12,#+0
   \   00000068   0310A001           MOVEQ    R1,R3
   1230              }
   \   0000006C   010050E2           SUBS     R0,R0,#+1
   \   00000070   E7FFFF1A           BNE      ??GetHost_0
   1231            }
   1232            tmp = buf;
   \                     ??GetHost_1:
   \   00000074   0200A0E1           MOV      R0,R2
   1233            begin = str;
   \   00000078   0130A0E1           MOV      R3,R1
   \   0000007C   000000EA           B        ??GetHost_6
   1234            for(;*str!=';' && *str!=':' && *str!=' ' && *str!='\x0D' && *str!='\x0A' && *str; str++);
   \                     ??GetHost_7:
   \   00000080   011081E2           ADD      R1,R1,#+1
   \                     ??GetHost_6:
   \   00000084   00C0D1E5           LDRB     R12,[R1, #+0]
   \   00000088   3B005CE3           CMP      R12,#+59
   \   0000008C   3A005C13           CMPNE    R12,#+58
   \   00000090   20005C13           CMPNE    R12,#+32
   \   00000094   0D005C13           CMPNE    R12,#+13
   \   00000098   0A005C13           CMPNE    R12,#+10
   \   0000009C   00005C13           CMPNE    R12,#+0
   \   000000A0   F6FFFF1A           BNE      ??GetHost_7
   1235            end = str;
   1236            for(;begin<end; *buf = *begin, begin++, buf++);
   \                     ??GetHost_8:
   \   000000A4   010053E1           CMP      R3,R1
   \   000000A8   ........           LDRBCC   R12,[R3], #+1
   \   000000AC   ........           STRBCC   R12,[R2], #+1
   \   000000B0   FBFFFF3A           BCC      ??GetHost_8
   1237            *buf = 0;
   \   000000B4   0010A0E3           MOV      R1,#+0
   \   000000B8   0010C2E5           STRB     R1,[R2, #+0]
   1238            return tmp;
   \   000000BC   1EFF2FE1           BX       LR               ;; return
   1239          }
   1240          //---------------------------------------------------------------------------

   \                                 In segment CODE, align 4, keep-with-next
   1241          int atoi(char *attr)
   1242          {
   \                     atoi:
   \   00000000   10002DE9           PUSH     {R4}
   1243            int ret=0;
   \   00000004   0010A0E3           MOV      R1,#+0
   1244            int neg=1;
   \   00000008   0120A0E3           MOV      R2,#+1
   1245            for (int k=0; ; k++)
   \   0000000C   0030A0E3           MOV      R3,#+0
   \   00000010   060000EA           B        ??atoi_0
   1246            {
   1247              if ( attr[k]>0x2F && attr[k]<0x3A) {ret=ret*10+attr[k]-0x30;} else { if ( attr[k]=='-') {neg=-1;} else {return(ret*neg);}}
   \                     ??atoi_1:
   \   00000014   04C0A0E1           MOV      R12,R4
   \   00000018   3A005CE3           CMP      R12,#+58
   \   0000001C   0600002A           BCS      ??atoi_2
   \   00000020   0A40A0E3           MOV      R4,#+10
   \   00000024   94C121E0           MLA      R1,R4,R1,R12
   \   00000028   301041E2           SUB      R1,R1,#+48
   \                     ??atoi_3:
   \   0000002C   013083E2           ADD      R3,R3,#+1
   \                     ??atoi_0:
   \   00000030   0040D3E7           LDRB     R4,[R3, +R0]
   \   00000034   300054E3           CMP      R4,#+48
   \   00000038   F5FFFF2A           BCS      ??atoi_1
   \                     ??atoi_2:
   \   0000003C   2D0054E3           CMP      R4,#+45
   \   00000040   0020E003           MVNEQ    R2,#+0
   \   00000044   F8FFFF0A           BEQ      ??atoi_3
   \   00000048   1000BDE8           POP      {R4}
   \   0000004C   920100E0           MUL      R0,R2,R1
   \   00000050   1EFF2FE1           BX       LR               ;; return
   1248            }
   1249          }
   1250          //---------------------------------------------------------------------------

   \                                 In segment CODE, align 4, keep-with-next
   1251          int GetPort(int cnt, const char *str)
   1252          {
   \                     GetPort:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   08D04DE2           SUB      SP,SP,#+8
   1253            const char *tmp = str;
   \   00000008   01C0A0E1           MOV      R12,R1
   1254            char numbuf[6], numcnt = 0;
   \   0000000C   0020A0E3           MOV      R2,#+0
   \   00000010   0030A0E3           MOV      R3,#+0
   1255            if(cnt)
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   0100001A           BNE      ??GetPort_0
   \   0000001C   180000EA           B        ??GetPort_1
   1256            {
   1257              for(;cnt;cnt--)
   1258              {
   1259                for(;*str!=';' && *str!=' ' && *str!='\x0D' && *str!='\x0A' && *str; str++);
   \                     ??GetPort_2:
   \   00000020   011081E2           ADD      R1,R1,#+1
   \                     ??GetPort_0:
   \   00000024   0040D1E5           LDRB     R4,[R1, #+0]
   \   00000028   3B0054E3           CMP      R4,#+59
   \   0000002C   20005413           CMPNE    R4,#+32
   \   00000030   0D005413           CMPNE    R4,#+13
   \   00000034   0A005413           CMPNE    R4,#+10
   \   00000038   00005413           CMPNE    R4,#+0
   \   0000003C   F7FFFF1A           BNE      ??GetPort_2
   1260                if(!*str) str = tmp;
   \   00000040   000054E3           CMP      R4,#+0
   \   00000044   0200001A           BNE      ??GetPort_3
   \   00000048   0C10A0E1           MOV      R1,R12
   \   0000004C   000000EA           B        ??GetPort_3
   1261                for(;(*str==';' || *str==' ' || *str=='\x0D' || *str=='\x0A') && *str; str++);
   \                     ??GetPort_4:
   \   00000050   011081E2           ADD      R1,R1,#+1
   \                     ??GetPort_3:
   \   00000054   0040D1E5           LDRB     R4,[R1, #+0]
   \   00000058   3B0054E3           CMP      R4,#+59
   \   0000005C   20005413           CMPNE    R4,#+32
   \   00000060   0D005413           CMPNE    R4,#+13
   \   00000064   0A005413           CMPNE    R4,#+10
   \   00000068   0100001A           BNE      ??GetPort_5
   \   0000006C   000054E3           CMP      R4,#+0
   \   00000070   F6FFFF1A           BNE      ??GetPort_4
   1262                if(!*str) str = tmp;
   \                     ??GetPort_5:
   \   00000074   000054E3           CMP      R4,#+0
   \   00000078   0C10A001           MOVEQ    R1,R12
   1263              }
   \   0000007C   010050E2           SUBS     R0,R0,#+1
   \   00000080   E7FFFF1A           BNE      ??GetPort_0
   1264            }
   1265            for(;*str!=';' && *str!=':' && *str!=' ' && *str!='\x0D' && *str!='\x0A' && *str; str++);
   \                     ??GetPort_1:
   \   00000084   0000D1E5           LDRB     R0,[R1, #+0]
   \   00000088   3B0050E3           CMP      R0,#+59
   \   0000008C   3A005013           CMPNE    R0,#+58
   \   00000090   20005013           CMPNE    R0,#+32
   \   00000094   0D005013           CMPNE    R0,#+13
   \   00000098   0A005013           CMPNE    R0,#+10
   \   0000009C   00005013           CMPNE    R0,#+0
   \   000000A0   01108112           ADDNE    R1,R1,#+1
   \   000000A4   F6FFFF1A           BNE      ??GetPort_1
   1266            if(*str!=':') return NATICQ_PORT;
   \   000000A8   ........           LDRB     R0,[R1], #+1
   \   000000AC   3A0050E3           CMP      R0,#+58
   \   000000B0   58009F15           LDRNE    R0,??GetPort_6   ;; NATICQ_PORT
   \   000000B4   00009015           LDRNE    R0,[R0, #+0]
   \   000000B8   1680BD18           POPNE    {R1,R2,R4,PC}
   1267            str++;
   1268            numbuf[5] = 0;
   \   000000BC   0520CDE5           STRB     R2,[SP, #+5]
   \   000000C0   030000EA           B        ??GetPort_7
   1269            for(;*str!=';' && *str!=' ' && *str!='\x0D' && *str!='\x0A' && *str && numcnt<5; numbuf[numcnt] = *str, str++, numcnt++);
   \                     ??GetPort_8:
   \   000000C4   ........           LDRB     R4,[R1], #+1
   \   000000C8   013083E2           ADD      R3,R3,#+1
   \   000000CC   FF3003E2           AND      R3,R3,#0xFF
   \   000000D0   0040C0E5           STRB     R4,[R0, #+0]
   \                     ??GetPort_7:
   \   000000D4   0D40A0E1           MOV      R4,SP
   \   000000D8   040083E0           ADD      R0,R3,R4
   \   000000DC   0040D1E5           LDRB     R4,[R1, #+0]
   \   000000E0   3B0054E3           CMP      R4,#+59
   \   000000E4   20005413           CMPNE    R4,#+32
   \   000000E8   0D005413           CMPNE    R4,#+13
   \   000000EC   0A005413           CMPNE    R4,#+10
   \   000000F0   00005413           CMPNE    R4,#+0
   \   000000F4   0100000A           BEQ      ??GetPort_9
   \   000000F8   050053E3           CMP      R3,#+5
   \   000000FC   F0FFFF3A           BCC      ??GetPort_8
   1270            numbuf[numcnt] = 0;
   \                     ??GetPort_9:
   \   00000100   0020C0E5           STRB     R2,[R0, #+0]
   1271            return atoi(numbuf);
   \   00000104   0D00A0E1           MOV      R0,SP
   \   00000108   ........           BL       atoi
   \   0000010C   1680BDE8           POP      {R1,R2,R4,PC}    ;; return
   \                     ??GetPort_6:
   \   00000110   ........           DC32     NATICQ_PORT
   1272          
   1273          }
   1274          //---------------------------------------------------------------------------

   \                                 In segment CODE, align 4, keep-with-next
   1275          int GetHostsCount(const char *str)
   1276          {
   1277            char cnt = 1;
   \                     GetHostsCount:
   \   00000000   0110A0E3           MOV      R1,#+1
   \   00000004   000000EA           B        ??GetHostsCount_0
   1278            for(;cnt;cnt++)
   1279            {
   1280              for(;*str!=';' && *str!=' ' && *str!='\x0D' && *str!='\x0A' && *str; str++);
   \                     ??GetHostsCount_1:
   \   00000008   010080E2           ADD      R0,R0,#+1
   \                     ??GetHostsCount_0:
   \   0000000C   0020D0E5           LDRB     R2,[R0, #+0]
   \   00000010   3B0052E3           CMP      R2,#+59
   \   00000014   20005213           CMPNE    R2,#+32
   \   00000018   0D005213           CMPNE    R2,#+13
   \   0000001C   0A005213           CMPNE    R2,#+10
   \   00000020   00005213           CMPNE    R2,#+0
   \   00000024   F7FFFF1A           BNE      ??GetHostsCount_1
   1281              if(!*str) return cnt;
   \   00000028   000052E3           CMP      R2,#+0
   \   0000002C   0200001A           BNE      ??GetHostsCount_2
   \                     ??GetHostsCount_3:
   \   00000030   0100A0E1           MOV      R0,R1
   \   00000034   1EFF2FE1           BX       LR
   1282              for(;(*str==';' || *str==' ' || *str=='\x0D' || *str=='\x0A') && *str; str++);
   \                     ??GetHostsCount_4:
   \   00000038   010080E2           ADD      R0,R0,#+1
   \                     ??GetHostsCount_2:
   \   0000003C   0020D0E5           LDRB     R2,[R0, #+0]
   \   00000040   3B0052E3           CMP      R2,#+59
   \   00000044   20005213           CMPNE    R2,#+32
   \   00000048   0D005213           CMPNE    R2,#+13
   \   0000004C   0A005213           CMPNE    R2,#+10
   \   00000050   0100001A           BNE      ??GetHostsCount_5
   \   00000054   000052E3           CMP      R2,#+0
   \   00000058   F6FFFF1A           BNE      ??GetHostsCount_4
   1283              if(!*str) return cnt;
   \                     ??GetHostsCount_5:
   \   0000005C   000052E3           CMP      R2,#+0
   \   00000060   F2FFFF0A           BEQ      ??GetHostsCount_3
   1284            }
   \   00000064   011081E2           ADD      R1,R1,#+1
   \   00000068   FF1011E2           ANDS     R1,R1,#0xFF
   \   0000006C   E6FFFF1A           BNE      ??GetHostsCount_0
   1285            return 0;
   \   00000070   0000A0E3           MOV      R0,#+0
   \   00000074   1EFF2FE1           BX       LR               ;; return
   1286          
   1287          }
   1288          //---------------------------------------------------------------------------
   1289          

   \                                 In segment CODE, align 4, keep-with-next
   1290          void create_connect(void)
   1291          {
   \                     create_connect:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   1292            char hostbuf[128];
   1293            int hostport;
   1294            int ***p_res=NULL;
   1295            void do_reconnect(void);
   1296            SOCK_ADDR sa;
   1297            //Устанавливаем соединение
   1298            connect_state = 0;
   \   00000004   ........           LDR      R5,??DataTable41  ;; contactlist_menuhdr
   \   00000008   9CD04DE2           SUB      SP,SP,#+156
   1299            int err;
   1300            unsigned int ip;
   1301            GBS_DelTimer(&reconnect_tmr);
   1302            if (!IsGPRSEnabled())
   \   0000000C   C8B29FE5           LDR      R11,??create_connect_0  ;; `?<Constant "%s:%d\\n(IP: %d.%d.%d.%d)">`
   \   00000010   0040A0E3           MOV      R4,#+0
   \   00000014   00408DE5           STR      R4,[SP, #+0]
   \   00000018   704285E5           STR      R4,[R5, #+624]
   \   0000001C   4800A0E3           MOV      R0,#+72
   \   00000020   500E80E3           ORR      R0,R0,#0x500
   \   00000024   050080E0           ADD      R0,R0,R5
   \   00000028   8C0100EF           SWI      +396
   \   0000002C   28A0A0E3           MOV      R10,#+40
   \   00000030   40AE8AE3           ORR      R10,R10,#0x400
   \   00000034   A70000EF           SWI      +167
   \   00000038   000050E3           CMP      R0,#+0
   \   0000003C   0400001A           BNE      ??create_connect_1
   1303            {
   1304              is_gprs_online=0;
   \   00000040   904285E5           STR      R4,[R5, #+656]
   1305              strcpy(logmsg,LG_GRWAITFORGPRS);
   \   00000044   64108BE2           ADD      R1,R11,#+100
   \   00000048   05008AE0           ADD      R0,R10,R5
   \   0000004C   1A0000EF           SWI      +26
   1306              SMART_REDRAW();
   \   00000050   740000EA           B        ??create_connect_2
   1307              return;
   1308            }
   1309            DNR_ID=0;
   1310            *socklasterr()=0;
   1311            
   1312            if(connect_state<2){
   \                     ??create_connect_1:
   \   00000054   84629FE5           LDR      R6,??create_connect_0+0x4  ;; NATICQ_HOST
   \   00000058   B44285E5           STR      R4,[R5, #+692]
   \   0000005C   7C8100EF           SWI      +33148
   \   00000060   004080E5           STR      R4,[R0, #+0]
   \   00000064   700295E5           LDR      R0,[R5, #+624]
   \   00000068   020050E3           CMP      R0,#+2
   \   0000006C   090000AA           BGE      ??create_connect_3
   1313              TTime t;
   1314              GetDateTime(0,&t);
   \   00000070   14108DE2           ADD      R1,SP,#+20
   \   00000074   0000A0E3           MOV      R0,#+0
   \   00000078   B40000EF           SWI      +180
   1315              host_counter = t.sec%(GetHostsCount(NATICQ_HOST)+1);
   \   0000007C   0600A0E1           MOV      R0,R6
   \   00000080   ........           BL       GetHostsCount
   \   00000084   0010A0E1           MOV      R1,R0
   \   00000088   1600DDE5           LDRB     R0,[SP, #+22]
   \   0000008C   011081E2           ADD      R1,R1,#+1
   \   00000090   ........           _BLF     ??div32_a,??rA??div32_a
   \   00000094   BC0285E5           STR      R0,[R5, #+700]
   1316            }
   1317          
   1318            GetHost(host_counter, NATICQ_HOST, hostbuf);
   \                     ??create_connect_3:
   \   00000098   BC0295E5           LDR      R0,[R5, #+700]
   \   0000009C   1C208DE2           ADD      R2,SP,#+28
   1319            hostport = GetPort(host_counter, NATICQ_HOST);
   1320            //host_counter++;
   1321          
   1322            sprintf(hostname, "%s:%d", hostbuf, hostport);
   1323          
   1324            SMART_REDRAW();
   1325          
   1326            ip=str2ip(hostbuf);
   1327            if (ip!=0xFFFFFFFF)
   \   000000A0   ........           LDR      R7,??DataTable36  ;; lgpData
   \   000000A4   ........           LDR      R9,??DataTable37  ;; do_reconnect
   \   000000A8   0610A0E1           MOV      R1,R6
   \   000000AC   ........           BL       GetHost
   \   000000B0   BC0295E5           LDR      R0,[R5, #+700]
   \   000000B4   0610A0E1           MOV      R1,R6
   \   000000B8   ........           BL       GetPort
   \   000000BC   0060A0E1           MOV      R6,R0
   \   000000C0   0630A0E1           MOV      R3,R6
   \   000000C4   1C208DE2           ADD      R2,SP,#+28
   \   000000C8   5C108BE2           ADD      R1,R11,#+92
   \   000000CC   800F8AE3           ORR      R0,R10,#0x200
   \   000000D0   050080E0           ADD      R0,R0,R5
   \   000000D4   160000EF           SWI      +22
   \   000000D8   ........           BL       SMART_REDRAW
   \   000000DC   1C008DE2           ADD      R0,SP,#+28
   \   000000E0   B70100EF           SWI      +439
   \   000000E4   0480E0E1           MVN      R8,R4
   \   000000E8   080050E1           CMP      R0,R8
   \   000000EC   0500000A           BEQ      ??create_connect_4
   1328            {
   1329              sa.ip=ip;
   \   000000F0   08008DE5           STR      R0,[SP, #+8]
   1330              strcpy(logmsg,"\nConnect by IP!");
   \   000000F4   4C108BE2           ADD      R1,R11,#+76
   \   000000F8   05008AE0           ADD      R0,R10,R5
   \   000000FC   1A0000EF           SWI      +26
   1331              SMART_REDRAW();
   \   00000100   ........           BL       SMART_REDRAW
   1332              goto L_CONNECT;
   \   00000104   1F0000EA           B        ??create_connect_5
   1333            }
   1334            strcpy(logmsg,LG_GRSENDDNR);
   \                     ??create_connect_4:
   \   00000108   40108BE2           ADD      R1,R11,#+64
   \   0000010C   05008AE0           ADD      R0,R10,R5
   \   00000110   1A0000EF           SWI      +26
   1335            SMART_REDRAW();
   \   00000114   ........           BL       SMART_REDRAW
   1336            err=async_gethostbyname(hostbuf,&p_res,&DNR_ID); //03461351 3<70<19<81
   \   00000118   AD2F85E2           ADD      R2,R5,#+692
   \   0000011C   0D10A0E1           MOV      R1,SP
   \   00000120   1C008DE2           ADD      R0,SP,#+28
   \   00000124   B60100EF           SWI      +438
   \   00000128   0030B0E1           MOVS     R3,R0
   1337            if (err)
   \   0000012C   0500000A           BEQ      ??create_connect_6
   1338            {
   1339              if ((err==0xC9)||(err==0xD6))
   \   00000130   C90053E3           CMP      R3,#+201
   \   00000134   D6005313           CMPNE    R3,#+214
   \   00000138   3D00001A           BNE      ??create_connect_7
   1340              {
   1341                if (DNR_ID)
   \   0000013C   B40295E5           LDR      R0,[R5, #+692]
   \   00000140   000050E3           CMP      R0,#+0
   \   00000144   6200001A           BNE      ??create_connect_8
   1342                {
   1343                  //host_counter--;
   1344          	return; //Ждем готовности DNR
   1345                }
   1346              }
   1347              else
   1348              {
   1349                snprintf(logmsg,255,LG_GRDNRERROR,err);
   1350                SMART_REDRAW();
   1351                GBS_StartTimerProc(&reconnect_tmr,TMR_SECOND*RECONNECT_TIME,do_reconnect);
   1352                return;
   1353              }
   1354            }
   1355            if (p_res)
   \                     ??create_connect_6:
   \   00000148   00009DE5           LDR      R0,[SP, #+0]
   \   0000014C   000050E3           CMP      R0,#+0
   \   00000150   5700000A           BEQ      ??create_connect_9
   1356            {
   1357              if (p_res[3])
   \   00000154   0C0090E5           LDR      R0,[R0, #+12]
   \   00000158   000050E3           CMP      R0,#+0
   \   0000015C   5C00000A           BEQ      ??create_connect_8
   1358              {
   1359                strcpy(logmsg,LG_GRDNROK);
   \   00000160   18108BE2           ADD      R1,R11,#+24
   \   00000164   05008AE0           ADD      R0,R10,R5
   \   00000168   1A0000EF           SWI      +26
   1360                SMART_REDRAW();
   \   0000016C   ........           BL       SMART_REDRAW
   1361                DNR_TRIES=0;
   \   00000170   B84285E5           STR      R4,[R5, #+696]
   1362                sa.ip=p_res[3][0][0];
   \   00000174   00109DE5           LDR      R1,[SP, #+0]
   \   00000178   0C1091E5           LDR      R1,[R1, #+12]
   \   0000017C   001091E5           LDR      R1,[R1, #+0]
   \   00000180   001091E5           LDR      R1,[R1, #+0]
   \   00000184   08108DE5           STR      R1,[SP, #+8]
   1363              L_CONNECT:
   1364                sprintf(hostname, "%s:%d\n(IP: %d.%d.%d.%d)", hostbuf, hostport,
   1365                        sa.ip&0xFF, (sa.ip>>8)&0xFF, (sa.ip>>16)&0xFF, (sa.ip>>24)&0xFF);
   \                     ??create_connect_5:
   \   00000188   08009DE5           LDR      R0,[SP, #+8]
   \   0000018C   0630A0E1           MOV      R3,R6
   \   00000190   201CA0E1           LSR      R1,R0,#+24
   \   00000194   02002DE9           PUSH     {R1}
   \   00000198   FF10A0E3           MOV      R1,#+255
   \   0000019C   201801E0           AND      R1,R1,R0, LSR #+16
   \   000001A0   02002DE9           PUSH     {R1}
   \   000001A4   FF10A0E3           MOV      R1,#+255
   \   000001A8   201401E0           AND      R1,R1,R0, LSR #+8
   \   000001AC   02002DE9           PUSH     {R1}
   \   000001B0   FF0000E2           AND      R0,R0,#0xFF
   \   000001B4   01002DE9           PUSH     {R0}
   \   000001B8   2C208DE2           ADD      R2,SP,#+44
   \   000001BC   0B10A0E1           MOV      R1,R11
   \   000001C0   800F8AE3           ORR      R0,R10,#0x200
   \   000001C4   050080E0           ADD      R0,R0,R5
   \   000001C8   160000EF           SWI      +22
   1366          
   1367                sock=socket(1,1,0);
   \   000001CC   0020A0E3           MOV      R2,#+0
   \   000001D0   0110A0E3           MOV      R1,#+1
   \   000001D4   0100A0E1           MOV      R0,R1
   \   000001D8   730100EF           SWI      +371
   \   000001DC   740285E5           STR      R0,[R5, #+628]
   1368                if (sock!=-1)
   \   000001E0   080050E1           CMP      R0,R8
   \   000001E4   10D08DE2           ADD      SP,SP,#+16
   \   000001E8   2800000A           BEQ      ??create_connect_10
   1369                {
   1370          	sa.family=1;
   \   000001EC   01A0A0E3           MOV      R10,#+1
   \   000001F0   B4A0CDE1           STRH     R10,[SP, #+4]
   1371          	sa.port=htons(hostport);
   \   000001F4   0608A0E1           MOV      R0,R6, LSL #+16
   \   000001F8   2008A0E1           MOV      R0,R0, LSR #+16
   \   000001FC   7A0100EF           SWI      +378
   \   00000200   B600CDE1           STRH     R0,[SP, #+6]
   1372          	//    sa.ip=htonl(IP_ADDR(82,207,89,182));
   1373          	if (connect(sock,&sa,sizeof(sa))!=-1)
   \   00000204   740295E5           LDR      R0,[R5, #+628]
   \   00000208   1020A0E3           MOV      R2,#+16
   \   0000020C   04108DE2           ADD      R1,SP,#+4
   \   00000210   740100EF           SWI      +372
   \   00000214   080050E1           CMP      R0,R8
   \   00000218   1300000A           BEQ      ??create_connect_11
   1374          	{
   1375          	  connect_state=1;
   \   0000021C   70A285E5           STR      R10,[R5, #+624]
   1376          	  TOTALRECEIVED=0;
   \   00000220   784285E5           STR      R4,[R5, #+632]
   1377          	  TOTALSENDED=0;
   \   00000224   7C4285E5           STR      R4,[R5, #+636]
   1378          	  SMART_REDRAW();
   \                     ??create_connect_2:
   \   00000228   ........           BL       SMART_REDRAW
   \                     ??create_connect_12:
   \   0000022C   9CD08DE2           ADD      SP,SP,#+156
   \   00000230   F08FBDE8           POP      {R4-R11,PC}
   1379          	}
   \                     ??create_connect_7:
   \   00000234   30208BE2           ADD      R2,R11,#+48
   \   00000238   FF10A0E3           MOV      R1,#+255
   \   0000023C   05008AE0           ADD      R0,R10,R5
   \   00000240   1B0100EF           SWI      +283
   \   00000244   ........           BL       SMART_REDRAW
   \                     ??create_connect_13:
   \   00000248   ........           LDR      R0,??DataTable38  ;; RECONNECT_TIME
   \   0000024C   0920A0E1           MOV      R2,R9
   \   00000250   000090E5           LDR      R0,[R0, #+0]
   \   00000254   D830A0E3           MOV      R3,#+216
   \   00000258   930001E0           MUL      R1,R3,R0
   \   0000025C   470E83E2           ADD      R0,R3,#+1136
   \   00000260   050080E0           ADD      R0,R0,R5
   \   00000264   4D0000EF           SWI      +77
   \   00000268   EFFFFFEA           B        ??create_connect_12
   1380          	else
   1381          	{
   1382          	  closesocket(sock);
   \                     ??create_connect_11:
   \   0000026C   740295E5           LDR      R0,[R5, #+628]
   \   00000270   760100EF           SWI      +374
   1383          	  sock=-1;
   \   00000274   748285E5           STR      R8,[R5, #+628]
   1384          	  LockSched();
   \   00000278   460100EF           SWI      +326
   1385          	  ShowMSG(1,(int)lgpData[LGP_MsgCantConn]);
   \   0000027C   201197E5           LDR      R1,[R7, #+288]
   \   00000280   0100A0E3           MOV      R0,#+1
   \   00000284   480100EF           SWI      +328
   1386          	  UnlockSched();
   \   00000288   470100EF           SWI      +327
   1387          	  GBS_StartTimerProc(&reconnect_tmr,TMR_SECOND*RECONNECT_TIME,do_reconnect);
   \   0000028C   EDFFFFEA           B        ??create_connect_13
   1388          	}
   1389                }
   1390                else
   1391                {
   1392          	LockSched();
   \                     ??create_connect_10:
   \   00000290   460100EF           SWI      +326
   1393          	ShowMSG(1,(int)lgpData[LGP_MsgCantCrSc]);
   \   00000294   241197E5           LDR      R1,[R7, #+292]
   \   00000298   0100A0E3           MOV      R0,#+1
   \   0000029C   480100EF           SWI      +328
   1394          	UnlockSched();
   \   000002A0   470100EF           SWI      +327
   1395          	//Не осилили создания сокета, закрываем GPRS-сессию
   1396          	GPRS_OnOff(0,1);
   \   000002A4   0110A0E3           MOV      R1,#+1
   \   000002A8   0000A0E3           MOV      R0,#+0
   \   000002AC   8E0100EF           SWI      +398
   \   000002B0   DDFFFFEA           B        ??create_connect_12
   1397                }
   1398              }
   1399            }
   1400            else
   1401            {
   1402              DNR_TRIES--;
   \                     ??create_connect_9:
   \   000002B4   B80295E5           LDR      R0,[R5, #+696]
   \   000002B8   010040E2           SUB      R0,R0,#+1
   \   000002BC   B80285E5           STR      R0,[R5, #+696]
   1403              LockSched();
   \   000002C0   460100EF           SWI      +326
   1404              ShowMSG(1,(int)lgpData[LGP_MsgHostNFnd]);
   \   000002C4   281197E5           LDR      R1,[R7, #+296]
   \   000002C8   0100A0E3           MOV      R0,#+1
   \   000002CC   480100EF           SWI      +328
   1405              UnlockSched();
   \   000002D0   470100EF           SWI      +327
   \                     ??create_connect_8:
   \   000002D4   9CD08DE2           ADD      SP,SP,#+156      ;; stack cleaning
   \   000002D8   F08FBDE8           POP      {R4-R11,PC}      ;; return
   \                     ??create_connect_0:
   \   000002DC   ........           DC32     `?<Constant "%s:%d\\n(IP: %d.%d.%d.%d)">`
   \   000002E0   ........           DC32     NATICQ_HOST
   1406            }
   1407          }
   1408          
   1409          #ifdef SEND_TIMER
   1410          GBSTMR send_tmr;
   1411          #endif
   1412          

   \                                 In segment CODE, align 4, keep-with-next
   1413          void ClearSendQ(void)
   1414          {
   \                     ClearSendQ:
   \   00000000   10402DE9           PUSH     {R4,LR}
   1415            mfree((void *)sendq_p);
   \   00000004   ........           LDR      R4,??DataTable41  ;; contactlist_menuhdr
   \   00000008   8C0294E5           LDR      R0,[R4, #+652]
   \   0000000C   150000EF           SWI      +21
   1416            sendq_p=NULL;
   \   00000010   0000A0E3           MOV      R0,#+0
   \   00000014   8C0284E5           STR      R0,[R4, #+652]
   1417            sendq_l=NULL;
   \   00000018   880284E5           STR      R0,[R4, #+648]
   1418          #ifdef SEND_TIMER
   1419            GBS_DelTimer(&send_tmr);
   1420          #endif
   1421          }
   \   0000001C   1080BDE8           POP      {R4,PC}          ;; return
   1422          

   \                                 In segment CODE, align 4, keep-with-next
   1423          void end_socket(void)
   1424          {
   \                     end_socket:
   \   00000000   10402DE9           PUSH     {R4,LR}
   1425            if (sock>=0)
   \   00000004   ........           LDR      R4,??DataTable41  ;; contactlist_menuhdr
   \   00000008   740294E5           LDR      R0,[R4, #+628]
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   1080BD48           POPMI    {R4,PC}
   1426            {
   1427              shutdown(sock,2);
   \   00000014   0210A0E3           MOV      R1,#+2
   \   00000018   770100EF           SWI      +375
   1428              closesocket(sock);
   \   0000001C   740294E5           LDR      R0,[R4, #+628]
   \   00000020   760100EF           SWI      +374
   1429            }
   1430          #ifdef SEND_TIMER
   1431            GBS_DelTimer(&send_tmr);
   1432          #endif
   1433          }
   \   00000024   1080BDE8           POP      {R4,PC}          ;; return
   1434          
   1435          #ifdef SEND_TIMER
   1436          static void resend(void)
   1437          {
   1438            void SendAnswer(int dummy, TPKT *p);
   1439            SUBPROC((void*)SendAnswer,0,0);
   1440          }
   1441          #endif
   1442          

   \                                 In segment CODE, align 4, keep-with-next
   1443          void SendAnswer(int dummy, TPKT *p)
   1444          {
   \                     SendAnswer:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   1445            int i;
   1446            int j;
   1447            if (connect_state<2)
   \   00000004   ........           LDR      R4,??DataTable41  ;; contactlist_menuhdr
   \   00000008   0160A0E1           MOV      R6,R1
   \   0000000C   700294E5           LDR      R0,[R4, #+624]
   \   00000010   020050E3           CMP      R0,#+2
   \   00000014   020000AA           BGE      ??SendAnswer_0
   1448            {
   1449              mfree(p);
   \   00000018   0600A0E1           MOV      R0,R6
   \   0000001C   150000EF           SWI      +21
   1450              return;
   \   00000020   F083BDE8           POP      {R4-R9,PC}
   1451            }
   1452            if (p)
   \                     ??SendAnswer_0:
   \   00000024   000056E3           CMP      R6,#+0
   \   00000028   2600000A           BEQ      ??SendAnswer_1
   1453            {
   1454              j=sizeof(PKT)+p->pkt.data_len; //Размер пакета
   \   0000002C   B600D6E1           LDRH     R0,[R6, #+6]
   \   00000030   085080E2           ADD      R5,R0,#+8
   1455              TOTALSENDED+=j;
   \   00000034   7C0294E5           LDR      R0,[R4, #+636]
   \   00000038   000085E0           ADD      R0,R5,R0
   \   0000003C   7C0284E5           STR      R0,[R4, #+636]
   1456              ALLTOTALSENDED+=j;			//by BoBa 10.07
   \   00000040   840294E5           LDR      R0,[R4, #+644]
   \   00000044   000085E0           ADD      R0,R5,R0
   \   00000048   840284E5           STR      R0,[R4, #+644]
   1457              //Проверяем, не надо ли добавить в очередь
   1458              if (sendq_p)
   \   0000004C   8C0294E5           LDR      R0,[R4, #+652]
   \   00000050   000050E3           CMP      R0,#+0
   \   00000054   0F00000A           BEQ      ??SendAnswer_2
   1459              {
   1460                //Есть очередь, добавляем в нее
   1461                sendq_p=realloc((void *)sendq_p,sendq_l+j);
   \   00000058   881294E5           LDR      R1,[R4, #+648]
   \   0000005C   011085E0           ADD      R1,R5,R1
   \   00000060   BA0000EF           SWI      +186
   \   00000064   8C0284E5           STR      R0,[R4, #+652]
   1462                memcpy((char *)sendq_p+sendq_l,p,j);
   \   00000068   880294E5           LDR      R0,[R4, #+648]
   \   0000006C   8C3294E5           LDR      R3,[R4, #+652]
   \   00000070   0520A0E1           MOV      R2,R5
   \   00000074   0610A0E1           MOV      R1,R6
   \   00000078   030080E0           ADD      R0,R0,R3
   \   0000007C   1E0100EF           SWI      +286
   1463                mfree(p);
   \   00000080   0600A0E1           MOV      R0,R6
   \   00000084   150000EF           SWI      +21
   1464                sendq_l+=j;
   \   00000088   880294E5           LDR      R0,[R4, #+648]
   \   0000008C   000085E0           ADD      R0,R5,R0
   \   00000090   880284E5           STR      R0,[R4, #+648]
   1465                return;
   \   00000094   F083BDE8           POP      {R4-R9,PC}
   1466              }
   1467              sendq_p=p;
   \                     ??SendAnswer_2:
   \   00000098   8C6284E5           STR      R6,[R4, #+652]
   1468              sendq_l=j;
   \   0000009C   885284E5           STR      R5,[R4, #+648]
   \   000000A0   080000EA           B        ??SendAnswer_1
   1469            }
   1470            //Отправляем уже существующее в очереди
   1471            while((i=sendq_l)!=0)
   1472            {
   1473              if (i>0x400) i=0x400;
   1474              j=send(sock,(void *)sendq_p,i,0);
   1475              snprintf(logmsg,255,"send res %d",j);
   1476              SMART_REDRAW();
   1477              if (j<0)
   1478              {
   1479                j=*socklasterr();
   1480                if ((j==0xC9)||(j==0xD6))
   1481                {
   1482          	//Передали что хотели
   1483          	strcpy(logmsg,"Send delayed...");
   1484          	return; //Видимо, надо ждать сообщения ENIP_BUFFER_FREE
   1485                }
   1486                else
   1487                {
   1488          	//Ошибка
   1489          	LockSched();
   1490          	ShowMSG(1,(int)"Send error!");
   1491          	UnlockSched();
   1492          	end_socket();
   1493          	return;
   1494                }
   1495              }
   1496              memcpy((void *)sendq_p,(char *)sendq_p+j,sendq_l-=j); //Удалили переданное
   \                     ??SendAnswer_3:
   \   000000A4   880294E5           LDR      R0,[R4, #+648]
   \   000000A8   052040E0           SUB      R2,R0,R5
   \   000000AC   882284E5           STR      R2,[R4, #+648]
   \   000000B0   8C0294E5           LDR      R0,[R4, #+652]
   \   000000B4   001085E0           ADD      R1,R5,R0
   \   000000B8   1E0100EF           SWI      +286
   1497              if (j<i)
   \   000000BC   060055E1           CMP      R5,R6
   \   000000C0   F083BDB8           POPLT    {R4-R9,PC}
   1498              {
   1499                //Передали меньше чем заказывали
   1500          #ifdef SEND_TIMER
   1501                GBS_StartTimerProc(&send_tmr,216*5,resend);
   1502          #endif
   1503                return; //Ждем сообщения ENIP_BUFFER_FREE1
   1504              }
   1505              tenseconds_to_ping=0; //Чего-то послали, можно начинать отсчет времени до пинга заново
   \   000000C4   B07284E5           STR      R7,[R4, #+688]
   \                     ??SendAnswer_1:
   \   000000C8   886294E5           LDR      R6,[R4, #+648]
   \   000000CC   8C1294E5           LDR      R1,[R4, #+652]
   \   000000D0   0070A0E3           MOV      R7,#+0
   \   000000D4   000056E3           CMP      R6,#+0
   \   000000D8   2300000A           BEQ      ??SendAnswer_4
   \   000000DC   98909FE5           LDR      R9,??SendAnswer_5  ;; `?<Constant "Send error!">`
   \   000000E0   0100A0E3           MOV      R0,#+1
   \   000000E4   400E80E3           ORR      R0,R0,#0x400
   \   000000E8   000056E1           CMP      R6,R0
   \   000000EC   740294E5           LDR      R0,[R4, #+628]
   \   000000F0   406EA0A3           MOVGE    R6,#+1024
   \   000000F4   0030A0E3           MOV      R3,#+0
   \   000000F8   0620A0E1           MOV      R2,R6
   \   000000FC   790100EF           SWI      +377
   \   00000100   0050A0E1           MOV      R5,R0
   \   00000104   2880A0E3           MOV      R8,#+40
   \   00000108   408E88E3           ORR      R8,R8,#0x400
   \   0000010C   0530A0E1           MOV      R3,R5
   \   00000110   1C2089E2           ADD      R2,R9,#+28
   \   00000114   FF10A0E3           MOV      R1,#+255
   \   00000118   040088E0           ADD      R0,R8,R4
   \   0000011C   1B0100EF           SWI      +283
   \   00000120   ........           BL       SMART_REDRAW
   \   00000124   000055E3           CMP      R5,#+0
   \   00000128   DDFFFF5A           BPL      ??SendAnswer_3
   \   0000012C   7C8100EF           SWI      +33148
   \   00000130   005090E5           LDR      R5,[R0, #+0]
   \   00000134   C90055E3           CMP      R5,#+201
   \   00000138   D6005513           CMPNE    R5,#+214
   \   0000013C   0300001A           BNE      ??SendAnswer_6
   \   00000140   0C1089E2           ADD      R1,R9,#+12
   \   00000144   040088E0           ADD      R0,R8,R4
   \   00000148   1A0000EF           SWI      +26
   \   0000014C   F083BDE8           POP      {R4-R9,PC}
   \                     ??SendAnswer_6:
   \   00000150   460100EF           SWI      +326
   \   00000154   0910A0E1           MOV      R1,R9
   \   00000158   0100A0E3           MOV      R0,#+1
   \   0000015C   480100EF           SWI      +328
   \   00000160   470100EF           SWI      +327
   \   00000164   ........           BL       end_socket
   \   00000168   F083BDE8           POP      {R4-R9,PC}
   1506            }
   1507            mfree((void *)sendq_p);
   \                     ??SendAnswer_4:
   \   0000016C   0100A0E1           MOV      R0,R1
   \   00000170   150000EF           SWI      +21
   1508            sendq_p=NULL;
   \   00000174   8C7284E5           STR      R7,[R4, #+652]
   1509          }
   \   00000178   F083BDE8           POP      {R4-R9,PC}       ;; return
   \                     ??SendAnswer_5:
   \   0000017C   ........           DC32     `?<Constant "Send error!">`
   1510          

   \                                 In segment CODE, align 4, keep-with-next
   1511          void do_ping(void)
   1512          {
   \                     do_ping:
   \   00000000   00402DE9           PUSH     {LR}
   1513            TPKT *pingp=malloc(sizeof(PKT));
   \   00000004   0800A0E3           MOV      R0,#+8
   \   00000008   140000EF           SWI      +20
   1514            pingp->pkt.uin=UIN;
   \   0000000C   ........           LDR      R1,??DataTable42  ;; UIN
   \   00000010   001091E5           LDR      R1,[R1, #+0]
   \   00000014   001080E5           STR      R1,[R0, #+0]
   1515            pingp->pkt.type=0;
   \   00000018   0010A0E3           MOV      R1,#+0
   \   0000001C   B410C0E1           STRH     R1,[R0, #+4]
   1516            pingp->pkt.data_len=0;
   \   00000020   B610C0E1           STRH     R1,[R0, #+6]
   1517            SendAnswer(0,pingp);
   \   00000024   0010A0E1           MOV      R1,R0
   \   00000028   0000A0E3           MOV      R0,#+0
   \   0000002C   0040BDE8           POP      {LR}             ;; Pop
   \   00000030   ........           B        SendAnswer       ;; tailcall
   1518          }
   1519          

   \                                 In segment CODE, align 4, keep-with-next
   1520          void SendMSGACK(int i)
   1521          {
   \                     SendMSGACK:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   1522            TPKT *ackp=malloc(sizeof(PKT));
   \   00000008   0800A0E3           MOV      R0,#+8
   \   0000000C   140000EF           SWI      +20
   1523            ackp->pkt.uin=i;
   \   00000010   004080E5           STR      R4,[R0, #+0]
   1524            ackp->pkt.type=T_MSGACK;
   \   00000014   1710A0E3           MOV      R1,#+23
   \   00000018   B410C0E1           STRH     R1,[R0, #+4]
   1525            ackp->pkt.data_len=0;
   \   0000001C   0010A0E3           MOV      R1,#+0
   \   00000020   B610C0E1           STRH     R1,[R0, #+6]
   1526            SendAnswer(0,ackp);
   \   00000024   0010A0E1           MOV      R1,R0
   \   00000028   0000A0E3           MOV      R0,#+0
   \   0000002C   1040BDE8           POP      {R4,LR}          ;; Pop
   \   00000030   ........           B        SendAnswer       ;; tailcall
   1527          }
   1528          

   \                                 In segment CODE, align 4, keep-with-next
   1529          void RequestXText(unsigned int uin)
   1530          {
   \                     RequestXText:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   1531            TPKT *p=malloc(sizeof(PKT));
   \   00000008   0800A0E3           MOV      R0,#+8
   \   0000000C   140000EF           SWI      +20
   1532            p->pkt.uin=uin;
   \   00000010   004080E5           STR      R4,[R0, #+0]
   1533            p->pkt.type=T_XTEXT_REQ;
   \   00000014   1810A0E3           MOV      R1,#+24
   \   00000018   B410C0E1           STRH     R1,[R0, #+4]
   1534            p->pkt.data_len=0;
   \   0000001C   0010A0E3           MOV      R1,#+0
   \   00000020   B610C0E1           STRH     R1,[R0, #+6]
   1535            SUBPROC((void *)SendAnswer,0,p);
   \   00000024   0020A0E1           MOV      R2,R0
   \   00000028   ........           LDR      R0,??DataTable74  ;; SendAnswer
   \   0000002C   710100EF           SWI      +369
   1536          }
   \   00000030   1080BDE8           POP      {R4,PC}          ;; return
   1537          

   \                                 In segment CODE, align 4, keep-with-next
   1538          void get_answer(void)
   1539          {
   \                     get_answer:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   1540            void *p;
   1541            int i=RXstate;
   \   00000004   ........           LDR      R5,??DataTable75  ;; contactlist_menuhdr
   \   00000008   14D04DE2           SUB      SP,SP,#+20
   \   0000000C   70DD4DE2           SUB      SP,SP,#+7168
   1542            int j;
   1543            int n;
   1544            char rb[7168];
   1545            char *rp=rb;
   1546            if (connect_state<2) return;
   \   00000010   700295E5           LDR      R0,[R5, #+624]
   \   00000014   6C9295E5           LDR      R9,[R5, #+620]
   \   00000018   14108DE2           ADD      R1,SP,#+20
   \   0000001C   00108DE5           STR      R1,[SP, #+0]
   \   00000020   020050E3           CMP      R0,#+2
   \   00000024   290100BA           BLT      ??get_answer_1
   \   00000028   0A0079E3           CMN      R9,#+10
   \   0000002C   2701000A           BEQ      ??get_answer_1
   1547            if (i==EOP) return;
   1548            j=recv(sock,rb,sizeof(rb),0);
   \   00000030   740295E5           LDR      R0,[R5, #+628]
   \   00000034   A8649FE5           LDR      R6,??get_answer_2+0x8  ;; RXbuf
   \   00000038   A8749FE5           LDR      R7,??get_answer_2+0xC  ;; `?<Constant "Ping %d-%d seconds!">`
   \   0000003C   0030A0E3           MOV      R3,#+0
   \   00000040   702DA0E3           MOV      R2,#+7168
   \   00000044   780100EF           SWI      +376
   \   00000048   0080A0E1           MOV      R8,R0
   \   0000004C   AEA0A0E3           MOV      R10,#+174
   \   00000050   DEAC8AE3           ORR      R10,R10,#0xDE00
   \   00000054   100000EA           B        ??get_answer_3
   1549            while(j>0)
   1550            {
   1551              if (i<0)
   1552              {
   1553                //Принимаем заголовок
   1554                n=-i; //Требуемое количество байт
   1555                if (j<n) n=j; //полученное<требуемое?
   1556                memcpy(RXbuf.data+i,rp,n); //Копируем
   1557                i+=n;
   1558                j-=n;
   1559                rp+=n;
   1560              }
   1561              if (i>=0)
   1562              {
   1563                //Принимаем тельце ;)
   1564                n=RXbuf.pkt.data_len; //Всего в тельце
   1565                if (n>16383)
   1566                {
   1567          	//Слишком много
   1568          	strcpy(logmsg,LG_GRBADPACKET);
   1569          	end_socket();
   1570          	RXstate=EOP;
   1571          	return;
   1572                }
   1573                n-=i; //Количество требуемых байт (общая длинна тельца-текущая позиция)
   1574                if (n>0)
   1575                {
   1576          	if (j<n) n=j; //полученное<требуемое?
   1577          	memcpy(RXbuf.data+i,rp,n);
   1578          	i+=n;
   1579          	j-=n;
   1580          	rp+=n;
   1581                }
   1582                if (RXbuf.pkt.data_len==i)
   1583                {
   1584          	//Пакет полностью получен
   1585          	TOTALRECEIVED+=(i+8);
   1586          	ALLTOTALRECEIVED+=(i+8);			//by BoBa 10.07
   1587          	//Пакет удачно принят, можно разбирать...
   1588          	RXbuf.data[i]=0; //Конец строки
   1589                  aa(&RXbuf);
   1590                  switch(RXbuf.pkt.type)
   1591          	{
   1592                  case T_LOGIN:
   1593          	  //Удачно залогинились
   1594          	  //Посылаем в MMI
   1595          	  n=i+sizeof(PKT)+1;
   1596          	  p=malloc(n);
   1597          	  memcpy(p,&RXbuf,n);
   1598          	  GBS_SendMessage(MMI_CEPID,MSG_HELPER_TRANSLATOR,0,p,sock);
   1599          	  Play(sndStartup);
   1600          	  //        GBS_StartTimerProc(&tmr_ping,120*TMR_SECOND,call_ping);
   1601          	  snprintf(logmsg,255,LG_GRLOGINMSG,RXbuf.data);
   1602          	  connect_state=3;
   1603                    //host_counter--; //Если уж законнектились, будем сидеть на этом сервере
   1604          	  SMART_REDRAW();
   1605          	  break;
   1606          	case T_XTEXT_ACK:
   1607          	case T_GROUPID:
   1608          	case T_GROUPFOLLOW:
   1609          	case T_CLENTRY:
   1610                  case T_CONTACTREMOVED: 
   1611          	  //Посылаем в MMI
   1612          	  n=i+sizeof(PKT)+1;
   1613          	  p=malloc(n);
   1614          	  memcpy(p,&RXbuf,n);
   1615          	  GBS_SendMessage(MMI_CEPID,MSG_HELPER_TRANSLATOR,0,p,sock);
   1616          	  //snprintf(logmsg,255,"CL: %s",RXbuf.data);
   1617          	  break;
   1618          	case T_STATUSCHANGE:
   1619          	  n=i+sizeof(PKT);
   1620          	  p=malloc(n);
   1621          	  memcpy(p,&RXbuf,n);
   1622          	  snprintf(logmsg,255,LG_GRSTATUSCHNG,RXbuf.pkt.uin,*((unsigned short *)(RXbuf.data)));
   1623          	  GBS_SendMessage(MMI_CEPID,MSG_HELPER_TRANSLATOR,0,p,sock);
   1624          	  break;
   1625          	case T_ERROR:
   1626                    if(strstr(RXbuf.data, "Error code 1") || strstr(RXbuf.data, "110"))
   1627                    {
   1628                      snprintf(logmsg,255,LG_GRERROR,LG_GRDBLCONNECT);
   1629                      disautorecconect = 1;
   1630                    }
   1631                    else
   1632                    {
   1633                      snprintf(logmsg,255,LG_GRERROR,RXbuf.data);
   1634                      ShowMSG(1,(int)logmsg);
   1635                    }
   1636          
   1637          	  SMART_REDRAW();
   1638          	  break;
   1639          	case T_RECVMSG:
   1640          	  n=i+sizeof(PKT)+1;
   1641          	  p=malloc(n);
   1642          	  memcpy(p,&RXbuf,n);
   1643          	  {
   1644          	    char *s=p;
   1645          	    s+=sizeof(PKT);
   1646          	    int c;
   1647          	    while((c=*s))
   1648          	    {
   1649          	      if (c<3) *s=' ';
   1650          	      s++;
   1651          	    }
   1652          	  }
   1653          	  snprintf(logmsg,255,LG_GRRECVMSG,RXbuf.pkt.uin,RXbuf.data);
   1654          	  SendMSGACK(TOTALRECEIVED);
   1655          	  GBS_SendMessage(MMI_CEPID,MSG_HELPER_TRANSLATOR,0,p,sock);
   1656          	  SMART_REDRAW();
   1657          	  Play(sndMsg);
   1658          //          UpdateCSMname();
   1659          	  break;
   1660          	case T_SSLRESP:
   1661          	  LockSched();
   1662          	  ShowMSG(1,(int)RXbuf.data);
   1663          	  UnlockSched();
   1664          	  break;
   1665          	case T_SRV_ACK:
   1666          	  if (FindContactLOGQByAck(&RXbuf)) Play(sndMsgSent);
   1667          	case T_CLIENT_ACK:
   1668          	  p=malloc(sizeof(PKT)+2);
   1669          	  memcpy(p,&RXbuf,sizeof(PKT)+2);
   1670          	  GBS_SendMessage(MMI_CEPID,MSG_HELPER_TRANSLATOR,0,p,sock);
   1671          	  break;
   1672          	case T_ECHORET:
   1673          	  {
   1674          	    TDate d;
   1675          	    TTime t;
   1676          	    TTime *pt=(TTime *)(RXbuf.data);
   1677          	    int s1;
   1678          	    int s2;
   1679          	    GetDateTime(&d,&t);
   1680          	    s1=t.hour*3600+t.min*60+t.sec;
   1681          	    s2=pt->hour*3600+pt->min*60+pt->sec;
   1682          	    s1-=s2;
   1683          	    if (s1<0) s1+=86400;
   1684          	    snprintf(logmsg,255,"Ping %d-%d seconds!",s1,s1+1);
   1685          	    LockSched();
   1686          	    ShowMSG(1,(int)logmsg);
   1687          	    UnlockSched();
   1688          	  }
   1689          	  break;
   1690                  case T_LASTPRIVACY:
   1691                    n=i+sizeof(PKT);
   1692                    p=malloc(n);
   \                     ??get_answer_4:
   \   00000058   0400A0E1           MOV      R0,R4
   \                     ??get_answer_5:
   \   0000005C   140000EF           SWI      +20
   \   00000060   00B0A0E1           MOV      R11,R0
   1693                    memcpy(p,&RXbuf,n);
   \   00000064   0420A0E1           MOV      R2,R4
   \                     ??get_answer_6:
   \   00000068   0610A0E1           MOV      R1,R6
   \   0000006C   1E0100EF           SWI      +286
   1694          	  GBS_SendMessage(MMI_CEPID,MSG_HELPER_TRANSLATOR,0,p,sock);
   \   00000070   740295E5           LDR      R0,[R5, #+628]
   \   00000074   0B30A0E1           MOV      R3,R11
   \   00000078   01002DE9           PUSH     {R0}
   \   0000007C   0020A0E3           MOV      R2,#+0
   \   00000080   0A10A0E1           MOV      R1,R10
   \   00000084   0900A0E1           MOV      R0,R9
   \   00000088   000100EF           SWI      +256
   \                     ??get_answer_7:
   \   0000008C   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   1695          	  break;
   1696          	}
   1697                  ad(&RXbuf);
   \                     ??get_answer_8:
   \   00000090   0600A0E1           MOV      R0,R6
   \   00000094   ........           _BLF     ad,??ad??rA
   1698          	i=-(int)sizeof(PKT); //А может еще есть данные
   \   00000098   0790E0E3           MVN      R9,#+7
   \                     ??get_answer_3:
   \   0000009C   010058E3           CMP      R8,#+1
   \   000000A0   090100BA           BLT      ??get_answer_9
   \   000000A4   000059E3           CMP      R9,#+0
   \   000000A8   0C00005A           BPL      ??get_answer_10
   \   000000AC   00109DE5           LDR      R1,[SP, #+0]
   \   000000B0   004069E2           RSB      R4,R9,#+0
   \   000000B4   040058E1           CMP      R8,R4
   \   000000B8   0840A0B1           MOVLT    R4,R8
   \   000000BC   0420A0E1           MOV      R2,R4
   \   000000C0   060089E0           ADD      R0,R9,R6
   \   000000C4   080080E2           ADD      R0,R0,#+8
   \   000000C8   1E0100EF           SWI      +286
   \   000000CC   00109DE5           LDR      R1,[SP, #+0]
   \   000000D0   099084E0           ADD      R9,R4,R9
   \   000000D4   048048E0           SUB      R8,R8,R4
   \   000000D8   011084E0           ADD      R1,R4,R1
   \   000000DC   00108DE5           STR      R1,[SP, #+0]
   \                     ??get_answer_10:
   \   000000E0   000059E3           CMP      R9,#+0
   \   000000E4   ECFFFF4A           BMI      ??get_answer_3
   \   000000E8   B640D6E1           LDRH     R4,[R6, #+6]
   \   000000EC   400C54E3           CMP      R4,#+16384
   \   000000F0   0A0000BA           BLT      ??get_answer_11
   \   000000F4   641087E2           ADD      R1,R7,#+100
   \   000000F8   2800A0E3           MOV      R0,#+40
   \   000000FC   400E80E3           ORR      R0,R0,#0x400
   \   00000100   050080E0           ADD      R0,R0,R5
   \   00000104   1A0000EF           SWI      +26
   \   00000108   ........           BL       end_socket
   \   0000010C   0900E0E3           MVN      R0,#+9
   \   00000110   6C0285E5           STR      R0,[R5, #+620]
   \   00000114   14D08DE2           ADD      SP,SP,#+20
   \   00000118   70DD8DE2           ADD      SP,SP,#+7168
   \   0000011C   F08FBDE8           POP      {R4-R11,PC}
   \                     ??get_answer_11:
   \   00000120   094044E0           SUB      R4,R4,R9
   \   00000124   010054E3           CMP      R4,#+1
   \   00000128   0B0000BA           BLT      ??get_answer_12
   \   0000012C   00109DE5           LDR      R1,[SP, #+0]
   \   00000130   040058E1           CMP      R8,R4
   \   00000134   0840A0B1           MOVLT    R4,R8
   \   00000138   0420A0E1           MOV      R2,R4
   \   0000013C   060089E0           ADD      R0,R9,R6
   \   00000140   080080E2           ADD      R0,R0,#+8
   \   00000144   1E0100EF           SWI      +286
   \   00000148   00109DE5           LDR      R1,[SP, #+0]
   \   0000014C   099084E0           ADD      R9,R4,R9
   \   00000150   048048E0           SUB      R8,R8,R4
   \   00000154   011084E0           ADD      R1,R4,R1
   \   00000158   00108DE5           STR      R1,[SP, #+0]
   \                     ??get_answer_12:
   \   0000015C   B600D6E1           LDRH     R0,[R6, #+6]
   \   00000160   090050E1           CMP      R0,R9
   \   00000164   CCFFFF1A           BNE      ??get_answer_3
   \   00000168   780295E5           LDR      R0,[R5, #+632]
   \   0000016C   084089E2           ADD      R4,R9,#+8
   \   00000170   000084E0           ADD      R0,R4,R0
   \   00000174   780285E5           STR      R0,[R5, #+632]
   \   00000178   800295E5           LDR      R0,[R5, #+640]
   \   0000017C   0010A0E3           MOV      R1,#+0
   \   00000180   000084E0           ADD      R0,R4,R0
   \   00000184   800285E5           STR      R0,[R5, #+640]
   \   00000188   060089E0           ADD      R0,R9,R6
   \   0000018C   0810C0E5           STRB     R1,[R0, #+8]
   \   00000190   0600A0E1           MOV      R0,R6
   \   00000194   ........           _BLF     aa,??aa??rA
   \   00000198   B410D6E1           LDRH     R1,[R6, #+4]
   \   0000019C   2800A0E3           MOV      R0,#+40
   \   000001A0   400E80E3           ORR      R0,R0,#0x400
   \   000001A4   05B080E0           ADD      R11,R0,R5
   \   000001A8   090089E2           ADD      R0,R9,#+9
   \   000001AC   0990A0E3           MOV      R9,#+9
   \   000001B0   429C89E3           ORR      R9,R9,#0x4200
   \   000001B4   031041E2           SUB      R1,R1,#+3
   \   000001B8   1F0051E3           CMP      R1,#+31
   \   000001BC   B3FFFF8A           BHI      ??get_answer_8
   \   000001C0   022F8FE2           ADR      R2,??get_answer_0
   \   000001C4   8110A0E1           MOV      R1,R1, LSL #+1
   \   000001C8   F12092E1           LDRSH    R2,[R2, R1]
   \   000001CC   02F18FE0           ADD      PC,PC,R2, LSL #+2
   \                     ??get_answer_0:
   \   000001D0   63000F00AFFF       DC16     +99,+15,+65455,+67
   \              4300        
   \   000001D8   2900AFFF2B00       DC16     +41,+65455,+43,+65455
   \              AFFF        
   \   000001E0   AFFFAFFF8800       DC16     +65455,+65455,+136,+65455
   \              AFFF        
   \   000001E8   AFFF8E009400       DC16     +65455,+142,+148,+65455
   \              AFFF        
   \   000001F0   990029002900       DC16     +153,+41,+41,+65455
   \              AFFF        
   \   000001F8   AFFFAFFF2900       DC16     +65455,+65455,+41,+65455
   \              AFFF        
   \   00000200   AFFFAFFFAFFF       DC16     +65455,+65455,+65455,+65455
   \              AFFF        
   \   00000208   A1FFAFFFAFFF       DC16     +65441,+65455,+65455,+41
   \              2900        
   \                     ??get_answer_13:
   \   00000210   0040A0E1           MOV      R4,R0
   \   00000214   140000EF           SWI      +20
   \   00000218   00B0A0E1           MOV      R11,R0
   \   0000021C   0420A0E1           MOV      R2,R4
   \   00000220   0610A0E1           MOV      R1,R6
   \   00000224   1E0100EF           SWI      +286
   \   00000228   740295E5           LDR      R0,[R5, #+628]
   \   0000022C   0B30A0E1           MOV      R3,R11
   \   00000230   01002DE9           PUSH     {R0}
   \   00000234   0020A0E3           MOV      R2,#+0
   \   00000238   0A10A0E1           MOV      R1,R10
   \   0000023C   0900A0E1           MOV      R0,R9
   \   00000240   000100EF           SWI      +256
   \   00000244   A0029FE5           LDR      R0,??get_answer_2+0x10  ;; sndStartup
   \   00000248   ........           BL       Play
   \   0000024C   083086E2           ADD      R3,R6,#+8
   \   00000250   A12F8FE2           ADR      R2,??get_answer_2  ;; "%s"
   \   00000254   FF10A0E3           MOV      R1,#+255
   \   00000258   2800A0E3           MOV      R0,#+40
   \   0000025C   400E80E3           ORR      R0,R0,#0x400
   \   00000260   050080E0           ADD      R0,R0,R5
   \   00000264   1B0100EF           SWI      +283
   \   00000268   0300A0E3           MOV      R0,#+3
   \   0000026C   700285E5           STR      R0,[R5, #+624]
   \   00000270   ........           BL       SMART_REDRAW
   \   00000274   84FFFFEA           B        ??get_answer_7
   \                     ??get_answer_14:
   \   00000278   0040A0E1           MOV      R4,R0
   \   0000027C   76FFFFEA           B        ??get_answer_5
   \                     ??get_answer_15:
   \   00000280   0400A0E1           MOV      R0,R4
   \   00000284   140000EF           SWI      +20
   \   00000288   00B0A0E1           MOV      R11,R0
   \   0000028C   0420A0E1           MOV      R2,R4
   \   00000290   0610A0E1           MOV      R1,R6
   \   00000294   1E0100EF           SWI      +286
   \   00000298   B800D6E1           LDRH     R0,[R6, #+8]
   \   0000029C   582087E2           ADD      R2,R7,#+88
   \   000002A0   FF10A0E3           MOV      R1,#+255
   \   000002A4   01002DE9           PUSH     {R0}
   \   000002A8   003096E5           LDR      R3,[R6, #+0]
   \   000002AC   2800A0E3           MOV      R0,#+40
   \   000002B0   400E80E3           ORR      R0,R0,#0x400
   \   000002B4   050080E0           ADD      R0,R0,R5
   \   000002B8   1B0100EF           SWI      +283
   \   000002BC   740295E5           LDR      R0,[R5, #+628]
   \   000002C0   0B30A0E1           MOV      R3,R11
   \   000002C4   01002DE9           PUSH     {R0}
   \   000002C8   0020A0E3           MOV      R2,#+0
   \   000002CC   0A10A0E1           MOV      R1,R10
   \   000002D0   0900A0E1           MOV      R0,R9
   \   000002D4   000100EF           SWI      +256
   \                     ??get_answer_16:
   \   000002D8   08D08DE2           ADD      SP,SP,#+8        ;; stack cleaning
   \   000002DC   6BFFFFEA           B        ??get_answer_8
   \                     ??get_answer_17:
   \   000002E0   201087E2           ADD      R1,R7,#+32
   \   000002E4   080086E2           ADD      R0,R6,#+8
   \   000002E8   180100EF           SWI      +280
   \   000002EC   000050E3           CMP      R0,#+0
   \   000002F0   0400001A           BNE      ??get_answer_18
   \   000002F4   791F8FE2           ADR      R1,??get_answer_2+0x4  ;; "110"
   \   000002F8   080086E2           ADD      R0,R6,#+8
   \   000002FC   180100EF           SWI      +280
   \   00000300   000050E3           CMP      R0,#+0
   \   00000304   0900000A           BEQ      ??get_answer_19
   \                     ??get_answer_18:
   \   00000308   303087E2           ADD      R3,R7,#+48
   \   0000030C   502087E2           ADD      R2,R7,#+80
   \   00000310   FF10A0E3           MOV      R1,#+255
   \   00000314   2800A0E3           MOV      R0,#+40
   \   00000318   400E80E3           ORR      R0,R0,#0x400
   \   0000031C   050080E0           ADD      R0,R0,R5
   \   00000320   1B0100EF           SWI      +283
   \   00000324   0100A0E3           MOV      R0,#+1
   \   00000328   3C0285E5           STR      R0,[R5, #+572]
   \   0000032C   090000EA           B        ??get_answer_20
   \                     ??get_answer_19:
   \   00000330   083086E2           ADD      R3,R6,#+8
   \   00000334   502087E2           ADD      R2,R7,#+80
   \   00000338   FF10A0E3           MOV      R1,#+255
   \   0000033C   2800A0E3           MOV      R0,#+40
   \   00000340   400E80E3           ORR      R0,R0,#0x400
   \   00000344   050080E0           ADD      R0,R0,R5
   \   00000348   1B0100EF           SWI      +283
   \   0000034C   0B10A0E1           MOV      R1,R11
   \   00000350   0100A0E3           MOV      R0,#+1
   \   00000354   480100EF           SWI      +328
   \                     ??get_answer_20:
   \   00000358   ........           BL       SMART_REDRAW
   \   0000035C   4BFFFFEA           B        ??get_answer_8
   \                     ??get_answer_21:
   \   00000360   0040A0E1           MOV      R4,R0
   \   00000364   140000EF           SWI      +20
   \   00000368   00B0A0E1           MOV      R11,R0
   \   0000036C   0420A0E1           MOV      R2,R4
   \   00000370   0610A0E1           MOV      R1,R6
   \   00000374   1E0100EF           SWI      +286
   \   00000378   08008BE2           ADD      R0,R11,#+8
   \   0000037C   030000EA           B        ??get_answer_22
   \                     ??get_answer_23:
   \   00000380   030051E3           CMP      R1,#+3
   \   00000384   2010A0B3           MOVLT    R1,#+32
   \   00000388   0010C0B5           STRBLT   R1,[R0, #+0]
   \   0000038C   010080E2           ADD      R0,R0,#+1
   \                     ??get_answer_22:
   \   00000390   0010D0E5           LDRB     R1,[R0, #+0]
   \   00000394   000051E3           CMP      R1,#+0
   \   00000398   F8FFFF1A           BNE      ??get_answer_23
   \   0000039C   080086E2           ADD      R0,R6,#+8
   \   000003A0   01002DE9           PUSH     {R0}
   \   000003A4   003096E5           LDR      R3,[R6, #+0]
   \   000003A8   142087E2           ADD      R2,R7,#+20
   \   000003AC   FF10A0E3           MOV      R1,#+255
   \   000003B0   2800A0E3           MOV      R0,#+40
   \   000003B4   400E80E3           ORR      R0,R0,#0x400
   \   000003B8   050080E0           ADD      R0,R0,R5
   \   000003BC   1B0100EF           SWI      +283
   \   000003C0   780295E5           LDR      R0,[R5, #+632]
   \   000003C4   ........           BL       SendMSGACK
   \   000003C8   740295E5           LDR      R0,[R5, #+628]
   \   000003CC   0B30A0E1           MOV      R3,R11
   \   000003D0   01002DE9           PUSH     {R0}
   \   000003D4   0020A0E3           MOV      R2,#+0
   \   000003D8   0A10A0E1           MOV      R1,R10
   \   000003DC   0900A0E1           MOV      R0,R9
   \   000003E0   000100EF           SWI      +256
   \   000003E4   ........           BL       SMART_REDRAW
   \   000003E8   00019FE5           LDR      R0,??get_answer_2+0x14  ;; sndMsg
   \   000003EC   ........           BL       Play
   \   000003F0   B8FFFFEA           B        ??get_answer_16
   \                     ??get_answer_24:
   \   000003F4   460100EF           SWI      +326
   \   000003F8   081086E2           ADD      R1,R6,#+8
   \   000003FC   0100A0E3           MOV      R0,#+1
   \   00000400   480100EF           SWI      +328
   \   00000404   470100EF           SWI      +327
   \   00000408   20FFFFEA           B        ??get_answer_8
   \                     ??get_answer_25:
   \   0000040C   0600A0E1           MOV      R0,R6
   \   00000410   ........           BL       FindContactLOGQByAck
   \   00000414   000050E3           CMP      R0,#+0
   \   00000418   0100000A           BEQ      ??get_answer_26
   \   0000041C   D0009FE5           LDR      R0,??get_answer_2+0x18  ;; sndMsgSent
   \   00000420   ........           BL       Play
   \                     ??get_answer_26:
   \   00000424   0A00A0E3           MOV      R0,#+10
   \   00000428   140000EF           SWI      +20
   \   0000042C   00B0A0E1           MOV      R11,R0
   \   00000430   0A20A0E3           MOV      R2,#+10
   \   00000434   0BFFFFEA           B        ??get_answer_6
   \                     ??get_answer_27:
   \   00000438   04108DE2           ADD      R1,SP,#+4
   \   0000043C   0C008DE2           ADD      R0,SP,#+12
   \   00000440   B40000EF           SWI      +180
   \   00000444   0400DDE5           LDRB     R0,[SP, #+4]
   \   00000448   0520DDE5           LDRB     R2,[SP, #+5]
   \   0000044C   E11EA0E3           MOV      R1,#+3600
   \   00000450   3C30A0E3           MOV      R3,#+60
   \   00000454   930202E0           MUL      R2,R3,R2
   \   00000458   912020E0           MLA      R0,R1,R0,R2
   \   0000045C   0610DDE5           LDRB     R1,[SP, #+6]
   \   00000460   E12EA0E3           MOV      R2,#+3600
   \   00000464   000081E0           ADD      R0,R1,R0
   \   00000468   0810D6E5           LDRB     R1,[R6, #+8]
   \   0000046C   920101E0           MUL      R1,R2,R1
   \   00000470   0720A0E1           MOV      R2,R7
   \   00000474   010040E0           SUB      R0,R0,R1
   \   00000478   0910D6E5           LDRB     R1,[R6, #+9]
   \   0000047C   930101E0           MUL      R1,R3,R1
   \   00000480   010040E0           SUB      R0,R0,R1
   \   00000484   0A10D6E5           LDRB     R1,[R6, #+10]
   \   00000488   013050E0           SUBS     R3,R0,R1
   \   0000048C   500BA043           MOVMI    R0,#+81920
   \   00000490   460D8043           ORRMI    R0,R0,#0x1180
   \   00000494   03308040           ADDMI    R3,R0,R3
   \   00000498   010083E2           ADD      R0,R3,#+1
   \   0000049C   01002DE9           PUSH     {R0}
   \   000004A0   FF10A0E3           MOV      R1,#+255
   \   000004A4   2800A0E3           MOV      R0,#+40
   \   000004A8   400E80E3           ORR      R0,R0,#0x400
   \   000004AC   050080E0           ADD      R0,R0,R5
   \   000004B0   1B0100EF           SWI      +283
   \   000004B4   460100EF           SWI      +326
   \   000004B8   0B10A0E1           MOV      R1,R11
   \   000004BC   0100A0E3           MOV      R0,#+1
   \   000004C0   480100EF           SWI      +328
   \   000004C4   470100EF           SWI      +327
   \   000004C8   EFFEFFEA           B        ??get_answer_7
   1699                }
   1700              }
   1701            }
   1702            RXstate=i;
   \                     ??get_answer_9:
   \   000004CC   6C9285E5           STR      R9,[R5, #+620]
   1703            //  GBS_StartTimerProc(&tmr_dorecv,3000,dorecv);
   1704            //  SMART_REDRAW();
   1705          }
   \                     ??get_answer_1:
   \   000004D0   14D08DE2           ADD      SP,SP,#+20
   \   000004D4   70DD8DE2           ADD      SP,SP,#+7168
   \   000004D8   F08FBDE8           POP      {R4-R11,PC}      ;; return
   \                     ??get_answer_2:
   \   000004DC   25730000           DC8      "%s",+0
   \   000004E0   31313000           DC8      "110"
   \   000004E4   ........           DC32     RXbuf
   \   000004E8   ........           DC32     `?<Constant "Ping %d-%d seconds!">`
   \   000004EC   ........           DC32     sndStartup
   \   000004F0   ........           DC32     sndMsg
   \   000004F4   ........           DC32     sndMsgSent
   1706          

   \                                 In segment CODE, align 4, keep-with-next
   1707          void AddStringToLog(CLIST *t, int code, char *s, const char *name, unsigned int IDforACK)
   1708          {
   \                     AddStringToLog:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   \   00000004   90D04DE2           SUB      SP,SP,#+144
   \   00000008   AC809DE5           LDR      R8,[SP, #+172]
   \   0000000C   0040A0E1           MOV      R4,R0
   \   00000010   0150A0E1           MOV      R5,R1
   \   00000014   0270A0E1           MOV      R7,R2
   \   00000018   0360A0E1           MOV      R6,R3
   1709            char hs[128], *lastX;
   1710            TTime tt;
   1711            TDate d;
   1712            GetDateTime(&d,&tt);
   \   0000001C   0D10A0E1           MOV      R1,SP
   \   00000020   08008DE2           ADD      R0,SP,#+8
   \   00000024   B40000EF           SWI      +180
   1713            int i;
   1714          
   1715            if (code==3 && NOT_LOG_SAME_XTXT)
   \   00000028   030055E3           CMP      R5,#+3
   \   0000002C   1600001A           BNE      ??AddStringToLog_0
   \   00000030   5C029FE5           LDR      R0,??AddStringToLog_1  ;; NOT_LOG_SAME_XTXT
   \   00000034   000090E5           LDR      R0,[R0, #+0]
   \   00000038   000050E3           CMP      R0,#+0
   \   0000003C   1200000A           BEQ      ??AddStringToLog_0
   1716            {
   1717              if(!t->isactive && HISTORY_BUFFER) GetHistory(t, 64<<HISTORY_BUFFER);
   \   00000040   B40094E5           LDR      R0,[R4, #+180]
   \   00000044   000050E3           CMP      R0,#+0
   \   00000048   0700001A           BNE      ??AddStringToLog_2
   \   0000004C   ........           LDR      R0,??DataTable45  ;; HISTORY_BUFFER
   \   00000050   000090E5           LDR      R0,[R0, #+0]
   \   00000054   000050E3           CMP      R0,#+0
   \   00000058   0300000A           BEQ      ??AddStringToLog_2
   \   0000005C   4010A0E3           MOV      R1,#+64
   \   00000060   1110A0E1           LSL      R1,R1,R0
   \   00000064   0400A0E1           MOV      R0,R4
   \   00000068   ........           _BLF     GetHistory,??GetHistory??rA
   1718              lastX = GetLastXTextLOGQ(t);
   \                     ??AddStringToLog_2:
   \   0000006C   0400A0E1           MOV      R0,R4
   \   00000070   ........           BL       GetLastXTextLOGQ
   1719              if(lastX)
   \   00000074   000050E3           CMP      R0,#+0
   \   00000078   0300000A           BEQ      ??AddStringToLog_0
   1720                if(strcmp(lastX, s) == 0) return;
   \   0000007C   0710A0E1           MOV      R1,R7
   \   00000080   190000EF           SWI      +25
   \   00000084   000050E3           CMP      R0,#+0
   \   00000088   7F00000A           BEQ      ??AddStringToLog_3
   1721            }
   1722          
   1723            snprintf(hs,127,"%02d:%02d %02d-%02d %s:\r\n",tt.hour,tt.min,d.day,d.month,name);
   \                     ??AddStringToLog_0:
   \   0000008C   04929FE5           LDR      R9,??AddStringToLog_1+0x4  ;; `?<Constant "%02d:%02d %02d-%02d %s:">`
   \   00000090   0600A0E1           MOV      R0,R6
   \   00000094   01002DE9           PUSH     {R0}
   \   00000098   1000DDE5           LDRB     R0,[SP, #+16]
   \   0000009C   182089E2           ADD      R2,R9,#+24
   \   000000A0   7F10A0E3           MOV      R1,#+127
   \   000000A4   01002DE9           PUSH     {R0}
   \   000000A8   1500DDE5           LDRB     R0,[SP, #+21]
   \   000000AC   01002DE9           PUSH     {R0}
   \   000000B0   0D00DDE5           LDRB     R0,[SP, #+13]
   \   000000B4   01002DE9           PUSH     {R0}
   \   000000B8   1030DDE5           LDRB     R3,[SP, #+16]
   \   000000BC   20008DE2           ADD      R0,SP,#+32
   \   000000C0   1B0100EF           SWI      +283
   1724            if(code != 3 || LOG_XTXT) //Нужно сохранять иксстатус
   \   000000C4   030055E3           CMP      R5,#+3
   \   000000C8   10D08DE2           ADD      SP,SP,#+16
   \   000000CC   0300001A           BNE      ??AddStringToLog_4
   \   000000D0   C4019FE5           LDR      R0,??AddStringToLog_1+0x8  ;; LOG_XTXT
   \   000000D4   000090E5           LDR      R0,[R0, #+0]
   \   000000D8   000050E3           CMP      R0,#+0
   \   000000DC   0400000A           BEQ      ??AddStringToLog_5
   1725              Add2History(t, hs, s, code); // Запись хистори
   \                     ??AddStringToLog_4:
   \   000000E0   0530A0E1           MOV      R3,R5
   \   000000E4   0720A0E1           MOV      R2,R7
   \   000000E8   10108DE2           ADD      R1,SP,#+16
   \   000000EC   0400A0E1           MOV      R0,R4
   \   000000F0   ........           _BLF     Add2History,??Add2History??rA
   1726            LOGQ *p=NewLOGQ(s);
   \                     ??AddStringToLog_5:
   \   000000F4   0700A0E1           MOV      R0,R7
   \   000000F8   ........           BL       NewLOGQ
   \   000000FC   0070A0E1           MOV      R7,R0
   1727            snprintf(p->hdr,79,"%02d:%02d %02d-%02d %s:",tt.hour,tt.min,d.day,d.month,name);
   \   00000100   40002DE9           PUSH     {R6}
   \   00000104   1000DDE5           LDRB     R0,[SP, #+16]
   \   00000108   0920A0E1           MOV      R2,R9
   \   0000010C   4F10A0E3           MOV      R1,#+79
   \   00000110   01002DE9           PUSH     {R0}
   \   00000114   1500DDE5           LDRB     R0,[SP, #+21]
   \   00000118   01002DE9           PUSH     {R0}
   \   0000011C   0D00DDE5           LDRB     R0,[SP, #+13]
   \   00000120   01002DE9           PUSH     {R0}
   \   00000124   1030DDE5           LDRB     R3,[SP, #+16]
   \   00000128   100087E2           ADD      R0,R7,#+16
   \   0000012C   1B0100EF           SWI      +283
   1728          //  snprintf(p->hdr,79,"%s:",name);
   1729            p->type=code;
   \   00000130   0C5087E5           STR      R5,[R7, #+12]
   1730            p->ID=IDforACK;  //0-32767
   \   00000134   088087E5           STR      R8,[R7, #+8]
   1731            i=AddLOGQ(&t->log,p);
   \   00000138   0710A0E1           MOV      R1,R7
   \   0000013C   A80084E2           ADD      R0,R4,#+168
   \   00000140   ........           BL       AddLOGQ
   \   00000144   0060A0E1           MOV      R6,R0
   \   00000148   150056E3           CMP      R6,#+21
   \   0000014C   10D08DE2           ADD      SP,SP,#+16
   \   00000150   090000BA           BLT      ??AddStringToLog_6
   1732            while(i>MAXLOGMSG)
   1733            {
   1734              if (t->log==t->last_log) t->last_log=t->last_log->next;
   \                     ??AddStringToLog_7:
   \   00000154   B00094E5           LDR      R0,[R4, #+176]
   \   00000158   A81094E5           LDR      R1,[R4, #+168]
   1735              RemoveLOGQ(&t->log,t->log);
   1736              i--;
   \   0000015C   016046E2           SUB      R6,R6,#+1
   \   00000160   000051E1           CMP      R1,R0
   \   00000164   00009005           LDREQ    R0,[R0, #+0]
   \   00000168   B0008405           STREQ    R0,[R4, #+176]
   \   0000016C   A80084E2           ADD      R0,R4,#+168
   \   00000170   ........           BL       RemoveLOGQ
   1737            }
   \   00000174   150056E3           CMP      R6,#+21
   \   00000178   F5FFFFAA           BGE      ??AddStringToLog_7
   1738            t->msg_count=i;
   \                     ??AddStringToLog_6:
   \   0000017C   B86084E5           STR      R6,[R4, #+184]
   1739            
   1740            int allsize = 0;
   1741            p = t->log;
   \   00000180   A87094E5           LDR      R7,[R4, #+168]
   \   00000184   0060A0E3           MOV      R6,#+0
   \   00000188   000097E5           LDR      R0,[R7, #+0]
   \   0000018C   000050E3           CMP      R0,#+0
   \   00000190   1900000A           BEQ      ??AddStringToLog_8
   1742            while(p->next) {allsize+=strlen(p->text);p=p->next;}
   \                     ??AddStringToLog_9:
   \   00000194   600087E2           ADD      R0,R7,#+96
   \   00000198   1B0000EF           SWI      +27
   \   0000019C   007097E5           LDR      R7,[R7, #+0]
   \   000001A0   066080E0           ADD      R6,R0,R6
   \   000001A4   000097E5           LDR      R0,[R7, #+0]
   \   000001A8   000050E3           CMP      R0,#+0
   \   000001AC   F8FFFF1A           BNE      ??AddStringToLog_9
   1743          
   1744            while(allsize > MAXCHATSIZE)
   \                     ??AddStringToLog_10:
   \   000001B0   0100A0E3           MOV      R0,#+1
   \   000001B4   700D80E3           ORR      R0,R0,#0x1C00
   \   000001B8   000056E1           CMP      R6,R0
   \   000001BC   0E0000BA           BLT      ??AddStringToLog_8
   1745            {
   1746              if (t->log==t->last_log) t->last_log=t->last_log->next;
   \   000001C0   B00094E5           LDR      R0,[R4, #+176]
   \   000001C4   A81094E5           LDR      R1,[R4, #+168]
   \   000001C8   000051E1           CMP      R1,R0
   \   000001CC   00009005           LDREQ    R0,[R0, #+0]
   \   000001D0   B0008405           STREQ    R0,[R4, #+176]
   1747              allsize -= strlen(t->log->text);
   \   000001D4   600081E2           ADD      R0,R1,#+96
   \   000001D8   1B0000EF           SWI      +27
   1748              RemoveLOGQ(&t->log,t->log);
   \   000001DC   A81094E5           LDR      R1,[R4, #+168]
   \   000001E0   006046E0           SUB      R6,R6,R0
   \   000001E4   A80084E2           ADD      R0,R4,#+168
   \   000001E8   ........           BL       RemoveLOGQ
   1749              t->msg_count--;
   \   000001EC   B80094E5           LDR      R0,[R4, #+184]
   \   000001F0   010040E2           SUB      R0,R0,#+1
   \   000001F4   B80084E5           STR      R0,[R4, #+184]
   \   000001F8   ECFFFFEA           B        ??AddStringToLog_10
   1750            }
   1751            
   1752            if (!t->last_log) t->last_log=p;
   \                     ??AddStringToLog_8:
   \   000001FC   B00094E5           LDR      R0,[R4, #+176]
   1753            if (code==3)
   \   00000200   ........           LDR      R6,??DataTable75  ;; contactlist_menuhdr
   \   00000204   000050E3           CMP      R0,#+0
   \   00000208   B0708405           STREQ    R7,[R4, #+176]
   \   0000020C   030055E3           CMP      R5,#+3
   \   00000210   0D00001A           BNE      ??AddStringToLog_11
   1754            {
   1755              if (edchat_id)
   \   00000214   A80296E5           LDR      R0,[R6, #+680]
   \   00000218   000050E3           CMP      R0,#+0
   \   0000021C   1800000A           BEQ      ??AddStringToLog_12
   1756              {
   1757                void *data=FindGUIbyId(edchat_id,NULL);
   \   00000220   A80296E5           LDR      R0,[R6, #+680]
   \   00000224   0010A0E3           MOV      R1,#+0
   \   00000228   090200EF           SWI      +521
   1758                if (data)
   \   0000022C   000050E3           CMP      R0,#+0
   \   00000230   1300000A           BEQ      ??AddStringToLog_12
   1759                {
   1760          	EDCHAT_STRUCT *ed_struct;
   1761          	ed_struct=EDIT_GetUserPointer(data);
   \   00000234   DF0100EF           SWI      +479
   1762          	if (ed_struct)
   \   00000238   000050E3           CMP      R0,#+0
   \   0000023C   1000000A           BEQ      ??AddStringToLog_12
   1763          	{
   1764          	  if (ed_struct->ed_contact==t)
   \   00000240   000090E5           LDR      R0,[R0, #+0]
   \   00000244   040050E1           CMP      R0,R4
   \   00000248   0D00001A           BNE      ??AddStringToLog_12
   1765          	  {
   1766          	    goto L_INC;
   1767          	  }
   1768          	}
   1769                }
   1770              }
   1771              goto L_NOINC;
   1772            }
   1773          L_INC:
   1774            // При приходе нового сообщения
   1775            if (!t->isunread) 
   \                     ??AddStringToLog_11:
   \   0000024C   9C0094E5           LDR      R0,[R4, #+156]
   \   00000250   000050E3           CMP      R0,#+0
   1776            {
   1777              // Повышаем счетчик юзеров, от которых пришли новые сообщения
   1778              total_unread++;
   \   00000254   94029605           LDREQ    R0,[R6, #+660]
   \   00000258   01008002           ADDEQ    R0,R0,#+1
   \   0000025C   94028605           STREQ    R0,[R6, #+660]
   1779            }
   1780            // Повышаем счетчик непрочитанных сообщений по данному контакту
   1781            t->unreaded++;
   \   00000260   C80094E5           LDR      R0,[R4, #+200]
   \   00000264   010080E2           ADD      R0,R0,#+1
   \   00000268   C80084E5           STR      R0,[R4, #+200]
   1782            // Повышаем общий счетчик непрочитанных сообщений
   1783            messages_unread++;
   \   0000026C   980296E5           LDR      R0,[R6, #+664]
   \   00000270   010080E2           ADD      R0,R0,#+1
   \   00000274   980286E5           STR      R0,[R6, #+664]
   1784            t->isunread=1;
   \   00000278   0100A0E3           MOV      R0,#+1
   \   0000027C   9C0084E5           STR      R0,[R4, #+156]
   1785            UpdateCSMname();
   \   00000280   ........           BL       UpdateCSMname
   1786          L_NOINC:
   1787            ChangeContactPos(t);
   \                     ??AddStringToLog_12:
   \   00000284   0400A0E1           MOV      R0,R4
   \   00000288   ........           _BLF     ChangeContactPos,??ChangeContactPos??rA
   1788          }
   \                     ??AddStringToLog_3:
   \   0000028C   90D08DE2           ADD      SP,SP,#+144      ;; stack cleaning
   \   00000290   F083BDE8           POP      {R4-R9,PC}       ;; return
   \                     ??AddStringToLog_1:
   \   00000294   ........           DC32     NOT_LOG_SAME_XTXT
   \   00000298   ........           DC32     `?<Constant "%02d:%02d %02d-%02d %s:">`
   \   0000029C   ........           DC32     LOG_XTXT
   1789          
   1790          void ParseAnswer(WSHDR *ws, const char *s);
   1791          
   1792          int time_to_stop_t9;
   1793          

   \                                 In segment CODE, align 4, keep-with-next
   1794          void ParseXStatusText(WSHDR *ws, const char *s, int color)
   1795          {
   \                     ParseXStatusText:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0260A0E1           MOV      R6,R2
   1796            int c;
   1797            int flag=0;
   \   00000010   0070A0E3           MOV      R7,#+0
   1798            CutWSTR(ws,0);
   \   00000014   0010A0E3           MOV      R1,#+0
   \   00000018   260100EF           SWI      +294
   1799            if (strlen(s)==1) return;
   \   0000001C   0500A0E1           MOV      R0,R5
   \   00000020   1B0000EF           SWI      +27
   \   00000024   010050E3           CMP      R0,#+1
   \   00000028   F080BD08           POPEQ    {R4-R7,PC}
   1800            wsAppendChar(ws,0xE008);
   \   0000002C   0810A0E3           MOV      R1,#+8
   \   00000030   E01C81E3           ORR      R1,R1,#0xE000
   \   00000034   0400A0E1           MOV      R0,R4
   \   00000038   1C0000EF           SWI      +28
   1801            wsAppendChar(ws,color);
   \   0000003C   0610A0E1           MOV      R1,R6
   \   00000040   0400A0E1           MOV      R0,R4
   \   00000044   1C0000EF           SWI      +28
   1802            wsAppendChar(ws,0xE013);
   \   00000048   1310A0E3           MOV      R1,#+19
   \   0000004C   E01C81E3           ORR      R1,R1,#0xE000
   \   00000050   0A0000EA           B        ??ParseXStatusText_0
   1803            while((c=*s++))
   1804            {
   1805              if (c==13)
   \                     ??ParseXStatusText_1:
   \   00000054   0D0050E3           CMP      R0,#+13
   1806              {
   1807                if (!flag)
   \   00000058   00005703           CMPEQ    R7,#+0
   \   0000005C   0500001A           BNE      ??ParseXStatusText_2
   1808                {
   1809                  flag=1;
   \   00000060   0170A0E3           MOV      R7,#+1
   1810                  wsAppendChar(ws,0xE012);
   \   00000064   1210A0E3           MOV      R1,#+18
   \   00000068   E01C81E3           ORR      R1,R1,#0xE000
   \   0000006C   0400A0E1           MOV      R0,R4
   \   00000070   1C0000EF           SWI      +28
   1811                  c=' ';
   \   00000074   2000A0E3           MOV      R0,#+32
   1812                }
   1813              }
   1814              wsAppendChar(ws,char8to16(c));
   \                     ??ParseXStatusText_2:
   \   00000078   ........           _BLF     char8to16,??char8to16??rA
   \   0000007C   0010A0E1           MOV      R1,R0
   \                     ??ParseXStatusText_0:
   \   00000080   0400A0E1           MOV      R0,R4
   \   00000084   1C0000EF           SWI      +28
   1815            }
   \   00000088   ........           LDRB     R0,[R5], #+1
   \   0000008C   000050E3           CMP      R0,#+0
   \   00000090   EFFFFF1A           BNE      ??ParseXStatusText_1
   \   00000094   F080BDE8           POP      {R4-R7,PC}       ;; return
   1816          }
   1817          //Добавление итемов в чат при получении нового сообщения

   \                                 In segment CODE, align 4, keep-with-next
   1818          void AddMsgToChat(void *data)
   1819          {
   \                     AddMsgToChat:
   \   00000000   F14F2DE9           PUSH     {R0,R4-R11,LR}
   \   00000004   40D04DE2           SUB      SP,SP,#+64
   1820            LOGQ *p;
   1821            EDITCONTROL ec;
   1822            EDITC_OPTIONS ec_options;
   1823            EDCHAT_STRUCT *ed_struct;
   1824            int j;
   1825            int color, font, type;
   1826            int zc;
   1827            if (!data) return;
   \   00000008   000050E3           CMP      R0,#+0
   \   0000000C   CE00000A           BEQ      ??AddMsgToChat_0
   1828            ed_struct=EDIT_GetUserPointer(data);
   \   00000010   DF0100EF           SWI      +479
   \   00000014   0060B0E1           MOVS     R6,R0
   1829            if (!ed_struct) return;
   \   00000018   CB00000A           BEQ      ??AddMsgToChat_0
   1830            if (!ed_struct->ed_contact->isunread) return;
   \   0000001C   000096E5           LDR      R0,[R6, #+0]
   \   00000020   9C1090E5           LDR      R1,[R0, #+156]
   \   00000024   000051E3           CMP      R1,#+0
   \   00000028   C700000A           BEQ      ??AddMsgToChat_0
   1831          
   1832            p=ed_struct->ed_contact->last_log;
   \   0000002C   B07090E5           LDR      R7,[R0, #+176]
   1833            if (p)
   \   00000030   ........           LDR      R8,??DataTable75  ;; contactlist_menuhdr
   \   00000034   000057E3           CMP      R7,#+0
   \   00000038   A800000A           BEQ      ??AddMsgToChat_1
   1834            {
   1835              while(p)
   1836              {
   1837                font = ED_H_FONT_SIZE;
   1838                if ((zc=p->acked&3))
   \                     ??AddMsgToChat_2:
   \   0000003C   ........           LDR      R2,??DataTable48  ;; ED_X_FONT_SIZE
   \   00000040   ........           LDR      R0,??DataTable70  ;; ED_H_FONT_SIZE
   \   00000044   002092E5           LDR      R2,[R2, #+0]
   \   00000048   ........           LDR      R1,??DataTable50  ;; X_COLOR
   \   0000004C   00A090E5           LDR      R10,[R0, #+0]
   \   00000050   040097E5           LDR      R0,[R7, #+4]
   \   00000054   00208DE5           STR      R2,[SP, #+0]
   \   00000058   004091E5           LDR      R4,[R1, #+0]
   \   0000005C   ........           LDR      R1,??DataTable51  ;; O_ED_X_FONT_SIZE
   \   00000060   030010E2           ANDS     R0,R0,#0x3
   \   00000064   009091E5           LDR      R9,[R1, #+0]
   \   00000068   ........           LDR      R1,??DataTable52  ;; O_X_COLOR
   \   0000006C   005091E5           LDR      R5,[R1, #+0]
   \   00000070   ........           LDR      R1,??DataTable67  ;; I_COLOR
   \   00000074   00B091E5           LDR      R11,[R1, #+0]
   \   00000078   0300000A           BEQ      ??AddMsgToChat_3
   1839                {
   1840          	if (zc==1)
   \   0000007C   010050E3           CMP      R0,#+1
   \   00000080   1E00001A           BNE      ??AddMsgToChat_4
   1841          	  color=ACK_COLOR; //Зеленый
   \   00000084   ........           LDR      R0,??DataTable63  ;; ACK_COLOR
   \   00000088   1B0000EA           B        ??AddMsgToChat_5
   1842          	else
   1843          	  color=I_COLOR;
   1844                }
   1845                else
   1846                {
   1847          	if (p->ID==0xFFFFFFFF)
   \                     ??AddMsgToChat_3:
   \   0000008C   080097E5           LDR      R0,[R7, #+8]
   \   00000090   010070E3           CMN      R0,#+1
   \   00000094   1700001A           BNE      ??AddMsgToChat_6
   1848                  {
   1849                    type = p->type&0x0F;
   \   00000098   0C0097E5           LDR      R0,[R7, #+12]
   \   0000009C   0F1000E2           AND      R1,R0,#0xF
   1850                    if(p->type&0x10)
   \   000000A0   100010E3           TST      R0,#0x10
   \   000000A4   0B00000A           BEQ      ??AddMsgToChat_7
   1851                    {
   1852                      color = (type==1)?O_I_COLOR:((type==3)?O_X_COLOR:O_TO_COLOR);
   \   000000A8   010051E3           CMP      R1,#+1
   \   000000AC   ........           LDREQ    R0,??DataTable65  ;; O_I_COLOR
   \   000000B0   0400000A           BEQ      ??AddMsgToChat_8
   \   000000B4   030051E3           CMP      R1,#+3
   \   000000B8   05B0A001           MOVEQ    R11,R5
   \   000000BC   09A0A001           MOVEQ    R10,R9
   \   000000C0   0E00000A           BEQ      ??AddMsgToChat_4
   \   000000C4   ........           LDR      R0,??DataTable64  ;; O_TO_COLOR
   \                     ??AddMsgToChat_8:
   \   000000C8   00B090E5           LDR      R11,[R0, #+0]
   \   000000CC   ........           LDR      R0,??DataTable69  ;; O_ED_H_FONT_SIZE
   \   000000D0   00A090E5           LDR      R10,[R0, #+0]
   \   000000D4   090000EA           B        ??AddMsgToChat_4
   1853                      font = (type==3)?O_ED_X_FONT_SIZE:O_ED_H_FONT_SIZE;
   1854                    }
   1855                    else
   1856                    {
   1857                      color = (type==1)?I_COLOR:((type==3)?X_COLOR:TO_COLOR);
   \                     ??AddMsgToChat_7:
   \   000000D8   010051E3           CMP      R1,#+1
   \   000000DC   0700000A           BEQ      ??AddMsgToChat_4
   \   000000E0   030051E3           CMP      R1,#+3
   \   000000E4   04B0A001           MOVEQ    R11,R4
   \   000000E8   02A0A001           MOVEQ    R10,R2
   \   000000EC   0300000A           BEQ      ??AddMsgToChat_4
   \   000000F0   ........           LDR      R0,??DataTable66  ;; TO_COLOR
   \   000000F4   000000EA           B        ??AddMsgToChat_5
   1858                      font = (type==3)?ED_X_FONT_SIZE:ED_H_FONT_SIZE;
   1859                    }
   1860                  }
   1861                  else
   1862          	  color=UNACK_COLOR; //Серый
   \                     ??AddMsgToChat_6:
   \   000000F8   ........           LDR      R0,??DataTable68  ;; UNACK_COLOR
   \                     ??AddMsgToChat_5:
   \   000000FC   00B090E5           LDR      R11,[R0, #+0]
   1863                }
   1864                PrepareEditControl(&ec);
   \                     ??AddMsgToChat_4:
   \   00000100   14008DE2           ADD      R0,SP,#+20
   \   00000104   640100EF           SWI      +356
   1865                if ((p->type&0x0F)!=3)
   \   00000108   0C0097E5           LDR      R0,[R7, #+12]
   \   0000010C   0F0000E2           AND      R0,R0,#0xF
   \   00000110   030050E3           CMP      R0,#+3
   \   00000114   0800000A           BEQ      ??AddMsgToChat_9
   1866                {
   1867                  ascii2ws(ews,p->hdr);
   \   00000118   340298E5           LDR      R0,[R8, #+564]
   \   0000011C   101087E2           ADD      R1,R7,#+16
   \   00000120   ........           _BLF     ascii2ws,??ascii2ws??rA
   1868                  ConstructEditControl(&ec,ECT_HEADER,ECF_APPEND_EOL,ews,ews->wsbody[0]);
   \   00000124   343298E5           LDR      R3,[R8, #+564]
   \   00000128   4020A0E3           MOV      R2,#+64
   \   0000012C   000093E5           LDR      R0,[R3, #+0]
   \   00000130   B000D0E1           LDRH     R0,[R0, #+0]
   \   00000134   01002DE9           PUSH     {R0}
   \   00000138   030000EA           B        ??AddMsgToChat_10
   1869                }
   1870                else
   1871                  ConstructEditControl(&ec,ECT_HEADER,ECF_DELSTR,ews,0);
   \                     ??AddMsgToChat_9:
   \   0000013C   0000A0E3           MOV      R0,#+0
   \   00000140   01002DE9           PUSH     {R0}
   \   00000144   343298E5           LDR      R3,[R8, #+564]
   \   00000148   2020A0E3           MOV      R2,#+32
   \                     ??AddMsgToChat_10:
   \   0000014C   0110A0E3           MOV      R1,#+1
   \   00000150   18008DE2           ADD      R0,SP,#+24
   \   00000154   650100EF           SWI      +357
   \   00000158   04D08DE2           ADD      SP,SP,#+4
   1872                PrepareEditCOptions(&ec_options);
   \   0000015C   04008DE2           ADD      R0,SP,#+4
   \   00000160   C80100EF           SWI      +456
   1873                SetPenColorToEditCOptions(&ec_options,color);
   \   00000164   0B10A0E1           MOV      R1,R11
   \   00000168   04008DE2           ADD      R0,SP,#+4
   \   0000016C   CC0100EF           SWI      +460
   1874                SetFontToEditCOptions(&ec_options,font);
   \   00000170   0A10A0E1           MOV      R1,R10
   \   00000174   04008DE2           ADD      R0,SP,#+4
   \   00000178   CA0100EF           SWI      +458
   1875                CopyOptionsToEditControl(&ec,&ec_options);
   \   0000017C   04108DE2           ADD      R1,SP,#+4
   \   00000180   14008DE2           ADD      R0,SP,#+20
   \   00000184   CE0100EF           SWI      +462
   1876                //AddEditControlToEditQend(eq,&ec,ma);
   1877                EDIT_InsertEditControl(data,ed_struct->ed_answer-1,&ec);
   \   00000188   080096E5           LDR      R0,[R6, #+8]
   \   0000018C   14208DE2           ADD      R2,SP,#+20
   \   00000190   011040E2           SUB      R1,R0,#+1
   \   00000194   40009DE5           LDR      R0,[SP, #+64]
   \   00000198   D20100EF           SWI      +466
   1878                ed_struct->ed_answer++;
   \   0000019C   080096E5           LDR      R0,[R6, #+8]
   \   000001A0   010080E2           ADD      R0,R0,#+1
   \   000001A4   080086E5           STR      R0,[R6, #+8]
   1879                if ((p->type&0x0F)!=3)
   \   000001A8   0C0097E5           LDR      R0,[R7, #+12]
   \   000001AC   0F1000E2           AND      R1,R0,#0xF
   \   000001B0   030051E3           CMP      R1,#+3
   \   000001B4   0300000A           BEQ      ??AddMsgToChat_11
   1880                {
   1881                  ParseAnswer(ews,p->text);
   \   000001B8   340298E5           LDR      R0,[R8, #+564]
   \   000001BC   601087E2           ADD      R1,R7,#+96
   \   000001C0   ........           BL       ParseAnswer
   \   000001C4   050000EA           B        ??AddMsgToChat_12
   1882                }
   1883                else
   1884                {
   1885                  ParseXStatusText(ews, p->text, (p->type&0x10)?O_X_COLOR:X_COLOR);
   \                     ??AddMsgToChat_11:
   \   000001C8   100010E3           TST      R0,#0x10
   \   000001CC   340298E5           LDR      R0,[R8, #+564]
   \   000001D0   0520A011           MOVNE    R2,R5
   \   000001D4   0420A001           MOVEQ    R2,R4
   \   000001D8   601087E2           ADD      R1,R7,#+96
   \   000001DC   ........           BL       ParseXStatusText
   1886                }
   1887                PrepareEditControl(&ec);
   \                     ??AddMsgToChat_12:
   \   000001E0   14008DE2           ADD      R0,SP,#+20
   \   000001E4   640100EF           SWI      +356
   1888                ConstructEditControl(&ec,
   1889                                     ECT_NORMAL_TEXT,
   1890                                     ews->wsbody[0] ? ECF_APPEND_EOL|ECF_DISABLE_T9 : ECF_DELSTR,
   1891                                     ews,ews->wsbody[0]);
   \   000001E8   343298E5           LDR      R3,[R8, #+564]
   \   000001EC   000093E5           LDR      R0,[R3, #+0]
   \   000001F0   B010D0E1           LDRH     R1,[R0, #+0]
   \   000001F4   000051E3           CMP      R1,#+0
   \   000001F8   0100A0E1           MOV      R0,R1
   \   000001FC   01002DE9           PUSH     {R0}
   \   00000200   812DA013           MOVNE    R2,#+8256
   \   00000204   2020A003           MOVEQ    R2,#+32
   \   00000208   0310A0E3           MOV      R1,#+3
   \   0000020C   18008DE2           ADD      R0,SP,#+24
   \   00000210   650100EF           SWI      +357
   1892                PrepareEditCOptions(&ec_options);
   \   00000214   08008DE2           ADD      R0,SP,#+8
   \   00000218   C80100EF           SWI      +456
   1893          //#ifdef M75
   1894                if ((p->type&0x0F)!=3)
   \   0000021C   0C0097E5           LDR      R0,[R7, #+12]
   \   00000220   04D08DE2           ADD      SP,SP,#+4
   \   00000224   0F1000E2           AND      R1,R0,#0xF
   \   00000228   030051E3           CMP      R1,#+3
   \   0000022C   0400000A           BEQ      ??AddMsgToChat_13
   1895                {
   1896                  SetFontToEditCOptions(&ec_options,(p->type&0x10)?O_ED_FONT_SIZE:ED_FONT_SIZE);
   \   00000230   100010E3           TST      R0,#0x10
   \   00000234   ........           LDRNE    R0,??DataTable60  ;; O_ED_FONT_SIZE
   \   00000238   ........           LDREQ    R0,??DataTable61  ;; ED_FONT_SIZE
   \   0000023C   001090E5           LDR      R1,[R0, #+0]
   \   00000240   080000EA           B        ??AddMsgToChat_14
   1897                }
   1898                else
   1899                {
   1900                  SetPenColorToEditCOptions(&ec_options,(p->type&0x10)?O_X_COLOR:X_COLOR);
   \                     ??AddMsgToChat_13:
   \   00000244   100010E3           TST      R0,#0x10
   \   00000248   0510A011           MOVNE    R1,R5
   \   0000024C   0410A001           MOVEQ    R1,R4
   \   00000250   04008DE2           ADD      R0,SP,#+4
   \   00000254   CC0100EF           SWI      +460
   1901                  SetFontToEditCOptions(&ec_options,(p->type&0x10)?O_ED_X_FONT_SIZE:ED_X_FONT_SIZE);
   \   00000258   0C0097E5           LDR      R0,[R7, #+12]
   \   0000025C   100010E3           TST      R0,#0x10
   \   00000260   00109D05           LDREQ    R1,[SP, #+0]
   \   00000264   0910A011           MOVNE    R1,R9
   \                     ??AddMsgToChat_14:
   \   00000268   04008DE2           ADD      R0,SP,#+4
   \   0000026C   CA0100EF           SWI      +458
   1902                }
   1903          //#else
   1904          //      SetFontToEditCOptions(&ec_options,(p->type&0x10)?O_ED_FONT_SIZE:ED_FONT_SIZE);
   1905          //#endif
   1906                CopyOptionsToEditControl(&ec,&ec_options);
   \   00000270   04108DE2           ADD      R1,SP,#+4
   \   00000274   14008DE2           ADD      R0,SP,#+20
   \   00000278   CE0100EF           SWI      +462
   1907                EDIT_InsertEditControl(data,ed_struct->ed_answer-1,&ec);
   \   0000027C   080096E5           LDR      R0,[R6, #+8]
   \   00000280   14208DE2           ADD      R2,SP,#+20
   \   00000284   011040E2           SUB      R1,R0,#+1
   \   00000288   40009DE5           LDR      R0,[SP, #+64]
   \   0000028C   D20100EF           SWI      +466
   1908                ed_struct->ed_answer++;
   \   00000290   080096E5           LDR      R0,[R6, #+8]
   \   00000294   010080E2           ADD      R0,R0,#+1
   \   00000298   080086E5           STR      R0,[R6, #+8]
   1909                p=p->next;
   \   0000029C   007097E5           LDR      R7,[R7, #+0]
   1910              }
   \   000002A0   000057E3           CMP      R7,#+0
   \   000002A4   64FFFF1A           BNE      ??AddMsgToChat_2
   1911              j=((ed_struct->ed_contact->msg_count+1)*2); //Ожидаемый ed_answer
   \   000002A8   001096E5           LDR      R1,[R6, #+0]
   \   000002AC   B81091E5           LDR      R1,[R1, #+184]
   \   000002B0   011081E2           ADD      R1,R1,#+1
   \   000002B4   8140A0E1           LSL      R4,R1,#+1
   \   000002B8   000054E1           CMP      R4,R0
   \   000002BC   070000AA           BGE      ??AddMsgToChat_1
   1912              while(j<ed_struct->ed_answer)
   1913              {
   1914                EDIT_RemoveEditControl(ed_struct->ed_chatgui,1);
   \                     ??AddMsgToChat_15:
   \   000002C0   040096E5           LDR      R0,[R6, #+4]
   \   000002C4   0110A0E3           MOV      R1,#+1
   \   000002C8   D10100EF           SWI      +465
   1915                ed_struct->ed_answer--;
   \   000002CC   080096E5           LDR      R0,[R6, #+8]
   \   000002D0   010040E2           SUB      R0,R0,#+1
   \   000002D4   080086E5           STR      R0,[R6, #+8]
   1916              }
   \   000002D8   000054E1           CMP      R4,R0
   \   000002DC   F7FFFFBA           BLT      ??AddMsgToChat_15
   1917            }
   1918            ed_struct->ed_contact->last_log=NULL;
   \                     ??AddMsgToChat_1:
   \   000002E0   000096E5           LDR      R0,[R6, #+0]
   \   000002E4   0040A0E3           MOV      R4,#+0
   \   000002E8   B04080E5           STR      R4,[R0, #+176]
   1919            if (IsGuiOnTop(edchat_id)) // Если открыт активный чат
   \   000002EC   A80298E5           LDR      R0,[R8, #+680]
   \   000002F0   350100EF           SWI      +309
   \   000002F4   000050E3           CMP      R0,#+0
   \   000002F8   0A00000A           BEQ      ??AddMsgToChat_16
   1920            {
   1921              // Понижаем счетчик контактов с непрочитанными
   1922              total_unread--;
   \   000002FC   940298E5           LDR      R0,[R8, #+660]
   1923              // Понижаем счетчик непрочитанных
   1924              messages_unread =     messages_unread - ed_struct->ed_contact->unreaded;
   \   00000300   981298E5           LDR      R1,[R8, #+664]
   \   00000304   010040E2           SUB      R0,R0,#+1
   \   00000308   940288E5           STR      R0,[R8, #+660]
   \   0000030C   000096E5           LDR      R0,[R6, #+0]
   \   00000310   C82090E5           LDR      R2,[R0, #+200]
   \   00000314   021041E0           SUB      R1,R1,R2
   \   00000318   981288E5           STR      R1,[R8, #+664]
   1925              // Обнуляем счетчик непрочитанных по данному контакту
   1926              ed_struct->ed_contact->unreaded = 0;
   \   0000031C   C84080E5           STR      R4,[R0, #+200]
   1927              ed_struct->ed_contact->isunread=0;
   \   00000320   9C4080E5           STR      R4,[R0, #+156]
   \   00000324   050000EA           B        ??AddMsgToChat_17
   1928            }
   1929            else
   1930            {
   1931              // Пришло сообщение при свернутом чате
   1932              ed_struct->requested_decrement_total_unread++;
   \                     ??AddMsgToChat_16:
   \   00000328   0C0096E5           LDR      R0,[R6, #+12]
   1933              ed_struct->ed_contact->isunread=1;
   \   0000032C   0110A0E3           MOV      R1,#+1
   \   00000330   010080E2           ADD      R0,R0,#+1
   \   00000334   0C0086E5           STR      R0,[R6, #+12]
   \   00000338   000096E5           LDR      R0,[R6, #+0]
   \   0000033C   9C1080E5           STR      R1,[R0, #+156]
   1934            }
   1935            UpdateCSMname();
   \                     ??AddMsgToChat_17:
   \   00000340   ........           BL       UpdateCSMname
   1936            ChangeContactPos(ed_struct->ed_contact);
   \   00000344   000096E5           LDR      R0,[R6, #+0]
   \   00000348   ........           _BLF     ChangeContactPos,??ChangeContactPos??rA
   1937            //  EDIT_SetFocus(data,ed_struct->ed_answer);
   1938          }
   \                     ??AddMsgToChat_0:
   \   0000034C   44D08DE2           ADD      SP,SP,#+68       ;; stack cleaning
   \   00000350   F08FBDE8           POP      {R4-R11,PC}      ;; return
   1939          
   1940          //Рисуем подтверждения непосредственно

   \                                 In segment CODE, align 4, keep-with-next
   1941          void DrawAck(void *data)
   1942          {
   \                     DrawAck:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   3CD04DE2           SUB      SP,SP,#+60
   \   00000008   0040B0E1           MOVS     R4,R0
   1943            LOGQ *p;
   1944            EDITCONTROL ec;
   1945            EDITC_OPTIONS ec_options;
   1946            EDCHAT_STRUCT *ed_struct;
   1947            int j;
   1948            int color;
   1949            int dorefresh=0;
   \   0000000C   0060A0E3           MOV      R6,#+0
   1950            if (!data) return;
   \   00000010   4C00000A           BEQ      ??DrawAck_0
   1951            ed_struct=EDIT_GetUserPointer(data);
   \   00000014   DF0100EF           SWI      +479
   1952            if (!ed_struct) return;
   \   00000018   000050E3           CMP      R0,#+0
   \   0000001C   4900000A           BEQ      ??DrawAck_0
   1953            p=ed_struct->ed_contact->log;
   \   00000020   001090E5           LDR      R1,[R0, #+0]
   1954            j=ed_struct->ed_answer;
   1955            j-=(ed_struct->ed_contact->msg_count*2)+1; //Номер собственно хедера верхнего итема
   \   00000024   080090E5           LDR      R0,[R0, #+8]
   \   00000028   A85091E5           LDR      R5,[R1, #+168]
   \   0000002C   B81091E5           LDR      R1,[R1, #+184]
   \   00000030   000055E3           CMP      R5,#+0
   \   00000034   810040E0           SUB      R0,R0,R1, LSL #+1
   \   00000038   017040E2           SUB      R7,R0,#+1
   \   0000003C   3A00000A           BEQ      ??DrawAck_1
   1956            while(p)
   1957            {
   1958              if (j>=1) //Пока возможно лишнее
   \                     ??DrawAck_2:
   \   00000040   010057E3           CMP      R7,#+1
   \   00000044   340000BA           BLT      ??DrawAck_3
   1959              {
   1960                if (!(p->acked&4))
   \   00000048   040095E5           LDR      R0,[R5, #+4]
   \   0000004C   040010E3           TST      R0,#0x4
   \   00000050   3100001A           BNE      ??DrawAck_3
   1961                {
   1962          	ExtractEditControl(data,j,&ec);
   \   00000054   10208DE2           ADD      R2,SP,#+16
   \   00000058   0710A0E1           MOV      R1,R7
   \   0000005C   0400A0E1           MOV      R0,R4
   \   00000060   690100EF           SWI      +361
   1963          	PrepareEditCOptions(&ec_options);
   \   00000064   0D00A0E1           MOV      R0,SP
   \   00000068   C80100EF           SWI      +456
   1964          	if (p->acked)
   \   0000006C   040095E5           LDR      R0,[R5, #+4]
   \   00000070   000050E3           CMP      R0,#+0
   \   00000074   0300000A           BEQ      ??DrawAck_4
   1965          	{
   1966          	  if (p->acked==1)
   \   00000078   010050E3           CMP      R0,#+1
   \   0000007C   ........           LDRNE    R0,??DataTable67  ;; I_COLOR
   1967          	    color=ACK_COLOR; //Зеленый
   \   00000080   ........           LDREQ    R0,??DataTable63  ;; ACK_COLOR
   \   00000084   0F0000EA           B        ??DrawAck_5
   1968          	  else
   1969          	    color=I_COLOR;
   1970          	}
   1971          	else
   1972          	{
   1973          	  if (p->ID==0xFFFFFFFF)
   \                     ??DrawAck_4:
   \   00000088   080095E5           LDR      R0,[R5, #+8]
   \   0000008C   010070E3           CMN      R0,#+1
   \   00000090   0B00001A           BNE      ??DrawAck_6
   1974          	    color=(p->type&0x10)?(((p->type&0x0F)==1)?O_I_COLOR:O_TO_COLOR):(((p->type&0x0F)==1)?I_COLOR:TO_COLOR);
   \   00000094   0C0095E5           LDR      R0,[R5, #+12]
   \   00000098   100010E3           TST      R0,#0x10
   \   0000009C   0F0000E2           AND      R0,R0,#0xF
   \   000000A0   0300000A           BEQ      ??DrawAck_7
   \   000000A4   010050E3           CMP      R0,#+1
   \   000000A8   ........           LDRNE    R0,??DataTable64  ;; O_TO_COLOR
   \   000000AC   ........           LDREQ    R0,??DataTable65  ;; O_I_COLOR
   \   000000B0   040000EA           B        ??DrawAck_5
   \                     ??DrawAck_7:
   \   000000B4   010050E3           CMP      R0,#+1
   \   000000B8   ........           LDRNE    R0,??DataTable66  ;; TO_COLOR
   \   000000BC   ........           LDREQ    R0,??DataTable67  ;; I_COLOR
   \   000000C0   000000EA           B        ??DrawAck_5
   1975          	  else
   1976          	    color=UNACK_COLOR; //Серый
   \                     ??DrawAck_6:
   \   000000C4   ........           LDR      R0,??DataTable68  ;; UNACK_COLOR
   1977          	}
   1978          	SetPenColorToEditCOptions(&ec_options,color/*p->type==1?I_COLOR:TO_COLOR*/);
   1979          	SetFontToEditCOptions(&ec_options,(p->type&0x10)?O_ED_H_FONT_SIZE:ED_H_FONT_SIZE);
   1980          	CopyOptionsToEditControl(&ec,&ec_options);
   1981          	StoreEditControl(data,j,&ec);
   1982          	p->acked|=4; //Обработали
   1983          	dorefresh=1;
   \                     ??DrawAck_5:
   \   000000C8   0160A0E3           MOV      R6,#+1
   \   000000CC   001090E5           LDR      R1,[R0, #+0]
   \   000000D0   0D00A0E1           MOV      R0,SP
   \   000000D4   CC0100EF           SWI      +460
   \   000000D8   0C0095E5           LDR      R0,[R5, #+12]
   \   000000DC   100010E3           TST      R0,#0x10
   \   000000E0   ........           LDRNE    R0,??DataTable69  ;; O_ED_H_FONT_SIZE
   \   000000E4   ........           LDREQ    R0,??DataTable70  ;; ED_H_FONT_SIZE
   \   000000E8   001090E5           LDR      R1,[R0, #+0]
   \   000000EC   0D00A0E1           MOV      R0,SP
   \   000000F0   CA0100EF           SWI      +458
   \   000000F4   0D10A0E1           MOV      R1,SP
   \   000000F8   10008DE2           ADD      R0,SP,#+16
   \   000000FC   CE0100EF           SWI      +462
   \   00000100   10208DE2           ADD      R2,SP,#+16
   \   00000104   0710A0E1           MOV      R1,R7
   \   00000108   0400A0E1           MOV      R0,R4
   \   0000010C   6A0100EF           SWI      +362
   \   00000110   040095E5           LDR      R0,[R5, #+4]
   \   00000114   040080E3           ORR      R0,R0,#0x4
   \   00000118   040085E5           STR      R0,[R5, #+4]
   1984                }
   1985              }
   1986              j+=2;
   1987              p=p->next;
   \                     ??DrawAck_3:
   \   0000011C   005095E5           LDR      R5,[R5, #+0]
   \   00000120   027087E2           ADD      R7,R7,#+2
   1988            }
   \   00000124   000055E3           CMP      R5,#+0
   \   00000128   C4FFFF1A           BNE      ??DrawAck_2
   1989            if (IsGuiOnTop(edchat_id)&&dorefresh) RefreshGUI();
   \                     ??DrawAck_1:
   \   0000012C   1C009FE5           LDR      R0,??DrawAck_8   ;; contactlist_menuhdr + 680
   \   00000130   000090E5           LDR      R0,[R0, #+0]
   \   00000134   350100EF           SWI      +309
   \   00000138   000050E3           CMP      R0,#+0
   \   0000013C   00005613           CMPNE    R6,#+0
   \   00000140   0000000A           BEQ      ??DrawAck_0
   \   00000144   960100EF           SWI      +406
   \                     ??DrawAck_0:
   \   00000148   3CD08DE2           ADD      SP,SP,#+60       ;; stack cleaning
   \   0000014C   F080BDE8           POP      {R4-R7,PC}       ;; return
   \                     ??DrawAck_8:
   \   00000150   ........           DC32     contactlist_menuhdr + 680
   1990          }
   1991          

   \                                 In segment CODE, align 4, keep-with-next
   1992          void ask_my_info(void)
   1993          {
   1994            /*  TPKT *p;
   1995            CLIST *t;
   1996            p=malloc(sizeof(PKT));
   1997            p->pkt.uin=UIN;
   1998            p->pkt.type=T_REQINFOSHORT;
   1999            p->pkt.data_len=0;
   2000            //  AddStringToLog(t,0x01,"Request info...",I_str);
   2001            SUBPROC((void *)SendAnswer,0,p);*/
   2002          }
   \                     ask_my_info:
   \   00000000   1EFF2FE1           BX       LR               ;; return
   2003          

   \                                 In segment CODE, align 4, keep-with-next
   2004          void set_my_status(void)
   2005          {
   \                     set_my_status:
   \   00000000   00402DE9           PUSH     {LR}
   2006            TPKT *p;
   2007            p=malloc(sizeof(PKT)+1);
   \   00000004   0900A0E3           MOV      R0,#+9
   \   00000008   140000EF           SWI      +20
   2008            p->pkt.uin=0;               // Никому; поле нужно проигнорировать на сервере
   \   0000000C   0010A0E3           MOV      R1,#+0
   \   00000010   001080E5           STR      R1,[R0, #+0]
   2009            p->pkt.type=T_MY_STATUS_CH; // Тип пакета: изменение статуса
   \   00000014   0F10A0E3           MOV      R1,#+15
   \   00000018   B410C0E1           STRH     R1,[R0, #+4]
   2010            p->pkt.data_len=1;          // Длина пакета: 1 байт
   \   0000001C   0110A0E3           MOV      R1,#+1
   \   00000020   B610C0E1           STRH     R1,[R0, #+6]
   2011            p->data[0]=CurrentStatus;
   \   00000024   ........           LDR      R1,??DataTable71  ;; contactlist_menuhdr + 592
   2012            SUBPROC((void *)SendAnswer,0,p);
   \   00000028   0020A0E1           MOV      R2,R0
   \   0000002C   001091E5           LDR      R1,[R1, #+0]
   \   00000030   0810C0E5           STRB     R1,[R0, #+8]
   \   00000034   ........           LDR      R0,??DataTable74  ;; SendAnswer
   \   00000038   0010A0E3           MOV      R1,#+0
   \   0000003C   710100EF           SWI      +369
   2013          }
   \   00000040   0080BDE8           POP      {PC}             ;; return
   2014          

   \                                 In segment CODE, align 4, keep-with-next
   2015          void set_my_xstatus(void)
   2016          {
   \                     set_my_xstatus:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   2017            TPKT *p;
   2018            char *s1;
   2019            char *s2;
   2020            int l1;
   2021            int l2;
   2022            p=malloc(sizeof(PKT)+1);
   2023            p->pkt.uin=0;               // Никому; поле нужно проигнорировать на сервере
   2024            p->pkt.type=T_MY_XSTATUS_CH; // Тип пакета: изменение статуса
   2025            p->pkt.data_len=1;          // Длина пакета: 1 байт
   2026            p->data[0]=CurrentXStatus;
   \   00000004   ........           LDR      R8,??DataTable75  ;; contactlist_menuhdr
   2027            SUBPROC((void *)SendAnswer,0,p);
   \   00000008   ........           LDR      R6,??DataTable74  ;; SendAnswer
   \   0000000C   0CD04DE2           SUB      SP,SP,#+12
   \   00000010   0900A0E3           MOV      R0,#+9
   \   00000014   140000EF           SWI      +20
   \   00000018   0040A0E1           MOV      R4,R0
   \   0000001C   0050A0E3           MOV      R5,#+0
   \   00000020   005084E5           STR      R5,[R4, #+0]
   \   00000024   1600A0E3           MOV      R0,#+22
   \   00000028   B400C4E1           STRH     R0,[R4, #+4]
   \   0000002C   0100A0E3           MOV      R0,#+1
   \   00000030   B600C4E1           STRH     R0,[R4, #+6]
   \   00000034   540298E5           LDR      R0,[R8, #+596]
   \   00000038   0420A0E1           MOV      R2,R4
   \   0000003C   0800C4E5           STRB     R0,[R4, #+8]
   \   00000040   0010A0E3           MOV      R1,#+0
   \   00000044   0600A0E1           MOV      R0,R6
   \   00000048   710100EF           SWI      +369
   2028            s1=GetXStatusStr(CurrentXStatus*3+1,&l1);
   \   0000004C   540298E5           LDR      R0,[R8, #+596]
   \   00000050   0D10A0E1           MOV      R1,SP
   \   00000054   800080E0           ADD      R0,R0,R0, LSL #+1
   \   00000058   010080E2           ADD      R0,R0,#+1
   \   0000005C   ........           _BLF     GetXStatusStr,??GetXStatusStr??rA
   \   00000060   0070A0E1           MOV      R7,R0
   2029            s2=GetXStatusStr(CurrentXStatus*3+2,&l2);
   \   00000064   540298E5           LDR      R0,[R8, #+596]
   \   00000068   04108DE2           ADD      R1,SP,#+4
   \   0000006C   800080E0           ADD      R0,R0,R0, LSL #+1
   \   00000070   020080E2           ADD      R0,R0,#+2
   \   00000074   ........           _BLF     GetXStatusStr,??GetXStatusStr??rA
   \   00000078   0080A0E1           MOV      R8,R0
   2030            if ((!s1)||(!s2)) return;
   \   0000007C   000057E3           CMP      R7,#+0
   \   00000080   00005813           CMPNE    R8,#+0
   \   00000084   F781BD08           POPEQ    {R0-R2,R4-R8,PC}
   2031            p=malloc(sizeof(PKT)+l1+l2+1);
   \   00000088   00009DE5           LDR      R0,[SP, #+0]
   \   0000008C   04109DE5           LDR      R1,[SP, #+4]
   \   00000090   000081E0           ADD      R0,R1,R0
   \   00000094   090080E2           ADD      R0,R0,#+9
   \   00000098   140000EF           SWI      +20
   \   0000009C   0040A0E1           MOV      R4,R0
   2032            p->pkt.uin=0;
   \   000000A0   005084E5           STR      R5,[R4, #+0]
   2033            p->pkt.type=T_XTEXT_SET;
   \   000000A4   1A00A0E3           MOV      R0,#+26
   \   000000A8   B400C4E1           STRH     R0,[R4, #+4]
   2034            p->pkt.data_len=l1+l2+1;
   \   000000AC   00009DE5           LDR      R0,[SP, #+0]
   \   000000B0   04109DE5           LDR      R1,[SP, #+4]
   \   000000B4   000081E0           ADD      R0,R1,R0
   \   000000B8   010080E2           ADD      R0,R0,#+1
   \   000000BC   B600C4E1           STRH     R0,[R4, #+6]
   2035            strncpy(p->data+0,s1,l1);
   \   000000C0   00209DE5           LDR      R2,[SP, #+0]
   \   000000C4   0710A0E1           MOV      R1,R7
   \   000000C8   080084E2           ADD      R0,R4,#+8
   \   000000CC   160100EF           SWI      +278
   2036            p->data[l1]=0;
   \   000000D0   00009DE5           LDR      R0,[SP, #+0]
   2037            strncpy(p->data+l1+1,s2,l2);
   \   000000D4   0810A0E1           MOV      R1,R8
   \   000000D8   040080E0           ADD      R0,R0,R4
   \   000000DC   0850C0E5           STRB     R5,[R0, #+8]
   \   000000E0   00009DE5           LDR      R0,[SP, #+0]
   \   000000E4   04209DE5           LDR      R2,[SP, #+4]
   \   000000E8   040080E0           ADD      R0,R0,R4
   \   000000EC   090080E2           ADD      R0,R0,#+9
   \   000000F0   160100EF           SWI      +278
   2038            SUBPROC((void *)SendAnswer,0,p);
   \   000000F4   0420A0E1           MOV      R2,R4
   \   000000F8   0010A0E3           MOV      R1,#+0
   \   000000FC   0600A0E1           MOV      R0,R6
   \   00000100   710100EF           SWI      +369
   2039          }
   \   00000104   F781BDE8           POP      {R0-R2,R4-R8,PC}  ;; return
   2040          

   \                                 In segment CODE, align 4, keep-with-next
   2041          void to_develop(void)
   2042          {
   2043            if (silenthide) return;
   \                     to_develop:
   \   00000000   ........           LDR      R0,??DataTable75  ;; contactlist_menuhdr
   \   00000004   00402DE9           PUSH     {LR}
   \   00000008   381290E5           LDR      R1,[R0, #+568]
   \   0000000C   000051E3           CMP      R1,#+0
   \   00000010   0080BD18           POPNE    {PC}
   2044            gipc.name_to=ipc_xtask_name;
   \   00000014   ........           LDR      R2,??DataTable87  ;; Canvas
   \   00000018   791FA0E3           MOV      R1,#+484
   \   0000001C   5A3F82E2           ADD      R3,R2,#+360
   2045            gipc.name_from=ipc_my_name;
   \   00000020   522F82E2           ADD      R2,R2,#+328
   \   00000024   E82180E5           STR      R2,[R0, #+488]
   2046            gipc.data=(void *)maincsm_id;
   \   00000028   242290E5           LDR      R2,[R0, #+548]
   \   0000002C   003081E7           STR      R3,[R1, +R0]
   \   00000030   EC2180E5           STR      R2,[R0, #+492]
   2047            GBS_SendMessage(MMI_CEPID,MSG_IPC,IPC_XTASK_SHOW_CSM,&gipc);
   \   00000034   003081E0           ADD      R3,R1,R0
   \   00000038   0220A0E3           MOV      R2,#+2
   \   0000003C   B010A0E3           MOV      R1,#+176
   \   00000040   DE1C81E3           ORR      R1,R1,#0xDE00
   \   00000044   0900A0E3           MOV      R0,#+9
   \   00000048   420C80E3           ORR      R0,R0,#0x4200
   \   0000004C   000100EF           SWI      +256
   2048          }
   \   00000050   0080BDE8           POP      {PC}             ;; return
   2049          

   \                                 In segment CODE, align 4, keep-with-next
   2050          void ReqAddMsgToChat(CLIST *t)
   2051          {
   \                     ReqAddMsgToChat:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   2052            if (edchat_id)
   \   00000004   ........           LDR      R5,??DataTable93  ;; contactlist_menuhdr
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   A80295E5           LDR      R0,[R5, #+680]
   \   00000010   000050E3           CMP      R0,#+0
   \   00000014   7080BD08           POPEQ    {R4-R6,PC}
   2053            {
   2054              void *data=FindGUIbyId(edchat_id,NULL);
   \   00000018   A80295E5           LDR      R0,[R5, #+680]
   \   0000001C   0010A0E3           MOV      R1,#+0
   \   00000020   090200EF           SWI      +521
   \   00000024   0060A0E1           MOV      R6,R0
   2055              {
   2056                EDCHAT_STRUCT *ed_struct;
   2057                ed_struct=EDIT_GetUserPointer(data);
   \   00000028   DF0100EF           SWI      +479
   2058                if (ed_struct)
   \   0000002C   000050E3           CMP      R0,#+0
   \   00000030   7080BD08           POPEQ    {R4-R6,PC}
   2059                {
   2060                  if (ed_struct->ed_contact==t)
   \   00000034   000090E5           LDR      R0,[R0, #+0]
   \   00000038   040050E1           CMP      R0,R4
   \   0000003C   7080BD18           POPNE    {R4-R6,PC}
   2061                  {
   2062                    if (EDIT_IsBusy(data))
   \   00000040   0600A0E1           MOV      R0,R6
   \   00000044   1C0200EF           SWI      +540
   \   00000048   000050E3           CMP      R0,#+0
   \   0000004C   0400000A           BEQ      ??ReqAddMsgToChat_0
   2063                    {
   2064                      t->req_add=1;
   \   00000050   0100A0E3           MOV      R0,#+1
   \   00000054   A00084E5           STR      R0,[R4, #+160]
   2065                      time_to_stop_t9=3;
   \   00000058   0300A0E3           MOV      R0,#+3
   \   0000005C   C00285E5           STR      R0,[R5, #+704]
   \   00000060   7080BDE8           POP      {R4-R6,PC}
   2066                    }
   2067                    else
   2068                    {
   2069                      AddMsgToChat(data);
   \                     ??ReqAddMsgToChat_0:
   \   00000064   0600A0E1           MOV      R0,R6
   \   00000068   ........           BL       AddMsgToChat
   2070                      DirectRedrawGUI_ID(edchat_id);
   \   0000006C   A80295E5           LDR      R0,[R5, #+680]
   \   00000070   400100EF           SWI      +320
   2071          	  }
   2072          	}
   2073                }
   2074              }
   2075            }
   2076          }
   \   00000074   7080BDE8           POP      {R4-R6,PC}       ;; return
   2077          

   \                                 In segment CODE, align 4, keep-with-next
   2078          void ProcessPacket(TPKT *p)
   2079          {
   \                     ProcessPacket:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000004   40DF4DE2           SUB      SP,SP,#+256
   2080            extern const int VIBR_TYPE, VIBR_ON_CONNECT;
   2081            CLIST *t,*t2;
   2082            LOGQ *q;
   2083            char s[256];
   2084            switch(p->pkt.type)
   \   00000008   ........           LDR      R8,??DataTable87  ;; Canvas
   \   0000000C   ........           LDR      R5,??DataTable93  ;; contactlist_menuhdr
   \   00000010   0040A0E1           MOV      R4,R0
   \   00000014   B410D4E1           LDRH     R1,[R4, #+4]
   \   00000018   000094E5           LDR      R0,[R4, #+0]
   \   0000001C   01A0A0E3           MOV      R10,#+1
   \   00000020   0070A0E3           MOV      R7,#+0
   \   00000024   031041E2           SUB      R1,R1,#+3
   \   00000028   1F0051E3           CMP      R1,#+31
   \   0000002C   DF01008A           BHI      ??ProcessPacket_1
   \   00000030   022F8FE2           ADR      R2,??ProcessPacket_0
   \   00000034   8110A0E1           MOV      R1,R1, LSL #+1
   \   00000038   B12092E1           LDRH     R2,[R2, R1]
   \   0000003C   02F18FE0           ADD      PC,PC,R2, LSL #+2
   \                     ??ProcessPacket_0:
   \   00000040   CB000F00DB01       DC16     +203,+15,+475,+475
   \              DB01        
   \   00000048   1200DB016900       DC16     +18,+475,+105,+475
   \              DB01        
   \   00000050   DB01DB01DB01       DC16     +475,+475,+475,+475
   \              DB01        
   \   00000058   DB013A013A01       DC16     +475,+314,+314,+475
   \              DB01        
   \   00000060   DB013C004A00       DC16     +475,+60,+74,+475
   \              DB01        
   \   00000068   DB01DB016B01       DC16     +475,+475,+363,+475
   \              DB01        
   \   00000070   DB01DB01DB01       DC16     +475,+475,+475,+475
   \              DB01        
   \   00000078   D901DB01DB01       DC16     +473,+475,+475,+76
   \              4C00        
   2085            {
   2086            case T_LOGIN:
   2087              set_my_status();
   \                     ??ProcessPacket_2:
   \   00000080   ........           BL       set_my_status
   2088              set_my_xstatus();
   \   00000084   ........           BL       set_my_xstatus
   \   00000088   C80100EA           B        ??ProcessPacket_1
   2089              break;
   2090            case T_CLENTRY:
   2091              if (p->pkt.uin)
   \                     ??ProcessPacket_3:
   \   0000008C   000050E3           CMP      R0,#+0
   \   00000090   1800000A           BEQ      ??ProcessPacket_4
   2092              {
   2093                if ((t=FindContactByUin(p->pkt.uin)))
   \   00000094   ........           _BLF     FindContactByUin,??FindContactByUin??rA
   \   00000098   0060B0E1           MOVS     R6,R0
   \   0000009C   0E00000A           BEQ      ??ProcessPacket_5
   2094                {
   2095          	//        t->state=0xFFFF;
   2096                  if (!t->local) strncpy(t->name,p->data,63);
   \   000000A0   C40096E5           LDR      R0,[R6, #+196]
   \   000000A4   000050E3           CMP      R0,#+0
   \   000000A8   0300001A           BNE      ??ProcessPacket_6
   \   000000AC   3F20A0E3           MOV      R2,#+63
   \   000000B0   081084E2           ADD      R1,R4,#+8
   \   000000B4   140086E2           ADD      R0,R6,#+20
   \   000000B8   160100EF           SWI      +278
   2097          	t->group=GROUP_CACHE;
   \                     ??ProcessPacket_6:
   \   000000BC   A00295E5           LDR      R0,[R5, #+672]
   \   000000C0   100086E5           STR      R0,[R6, #+16]
   2098          	ChangeContactPos(t);
   \                     ??ProcessPacket_7:
   \   000000C4   0600A0E1           MOV      R0,R6
   \   000000C8   ........           _BLF     ChangeContactPos,??ChangeContactPos??rA
   2099          	RecountMenu(t, 1);
   \   000000CC   0110A0E3           MOV      R1,#+1
   \   000000D0   0600A0E1           MOV      R0,R6
   \                     ??ProcessPacket_8:
   \   000000D4   ........           BL       RecountMenu
   \   000000D8   B40100EA           B        ??ProcessPacket_1
   2100                }
   2101                else
   2102                {
   2103                  RecountMenu(AddContact(p->pkt.uin,p->data, GROUP_CACHE, 0),1);
   \                     ??ProcessPacket_5:
   \   000000DC   A02295E5           LDR      R2,[R5, #+672]
   \   000000E0   000094E5           LDR      R0,[R4, #+0]
   \   000000E4   0030A0E3           MOV      R3,#+0
   \   000000E8   081084E2           ADD      R1,R4,#+8
   \   000000EC   ........           _BLF     AddContact,??AddContact??rA
   \   000000F0   0A10A0E1           MOV      R1,R10
   \   000000F4   F6FFFFEA           B        ??ProcessPacket_8
   2104                }
   2105              }
   2106              else
   2107              {
   2108                if(VIBR_ON_CONNECT)
   \                     ??ProcessPacket_4:
   \   000000F8   ........           LDR      R0,??DataTable80  ;; VIBR_ON_CONNECT
   \   000000FC   000090E5           LDR      R0,[R0, #+0]
   \   00000100   000050E3           CMP      R0,#+0
   \   00000104   0100000A           BEQ      ??ProcessPacket_9
   2109                {
   2110                  vibra_count=1;
   \   00000108   60A285E5           STR      R10,[R5, #+608]
   2111                  start_vibra();
   \   0000010C   ........           BL       start_vibra
   2112                }
   2113                GROUP_CACHE=0;
   \                     ??ProcessPacket_9:
   \   00000110   A07285E5           STR      R7,[R5, #+672]
   2114                ask_my_info();
   2115                if (contactlist_menu_id)
   \   00000114   A40295E5           LDR      R0,[R5, #+676]
   \   00000118   000050E3           CMP      R0,#+0
   \   0000011C   0200000A           BEQ      ??ProcessPacket_10
   2116                {
   2117          	RecountMenu(NULL, 1);
   \   00000120   0110A0E3           MOV      R1,#+1
   \   00000124   0700A0E1           MOV      R0,R7
   \                     ??ProcessPacket_11:
   \   00000128   E9FFFFEA           B        ??ProcessPacket_8
   2118                }
   2119                else
   2120                  create_contactlist_menu();
   \                     ??ProcessPacket_10:
   \   0000012C   ........           BL       create_contactlist_menu
   \   00000130   9E0100EA           B        ??ProcessPacket_1
   2121              }
   2122              break;
   2123            case T_GROUPID:
   2124              if (t=FindGroupByID(GROUP_CACHE=p->pkt.uin))
   \                     ??ProcessPacket_12:
   \   00000134   A00285E5           STR      R0,[R5, #+672]
   \   00000138   ........           _BLF     FindGroupByID,??FindGroupByID??rA
   \   0000013C   0060B0E1           MOVS     R6,R0
   \   00000140   0400000A           BEQ      ??ProcessPacket_13
   2125              {
   2126                strncpy(t->name,p->data,63);
   \   00000144   3F20A0E3           MOV      R2,#+63
   \   00000148   081084E2           ADD      R1,R4,#+8
   \   0000014C   140086E2           ADD      R0,R6,#+20
   \   00000150   160100EF           SWI      +278
   2127                ChangeContactPos(t);
   \   00000154   DAFFFFEA           B        ??ProcessPacket_7
   2128                RecountMenu(t, 1);
   2129              }
   2130              else
   2131              {
   2132                RecountMenu(AddGroup(p->pkt.uin,p->data), 1);
   \                     ??ProcessPacket_13:
   \   00000158   000094E5           LDR      R0,[R4, #+0]
   \   0000015C   081084E2           ADD      R1,R4,#+8
   \   00000160   ........           _BLF     AddGroup,??AddGroup??rA
   \   00000164   0110A0E3           MOV      R1,#+1
   \   00000168   D9FFFFEA           B        ??ProcessPacket_8
   2133              }
   2134              break;
   2135            case T_GROUPFOLLOW:
   2136              GROUP_CACHE=p->pkt.uin;
   \                     ??ProcessPacket_14:
   \   0000016C   A00285E5           STR      R0,[R5, #+672]
   \   00000170   8E0100EA           B        ??ProcessPacket_1
   2137              break;
   2138            case T_CONTACTREMOVED:
   2139              t=FindContactByUin(p->pkt.uin);
   \                     ??ProcessPacket_15:
   \   00000174   ........           _BLF     FindContactByUin,??FindContactByUin??rA
   \   00000178   0060B0E1           MOVS     R6,R0
   2140              if(!t) break;
   \   0000017C   8B01000A           BEQ      ??ProcessPacket_1
   2141              if (edchat_id)
   \   00000180   A80295E5           LDR      R0,[R5, #+680]
   \   00000184   000050E3           CMP      R0,#+0
   \   00000188   0E00000A           BEQ      ??ProcessPacket_16
   2142              {
   2143                void *data=FindGUIbyId(edchat_id,NULL);
   \   0000018C   A80295E5           LDR      R0,[R5, #+680]
   \   00000190   0010A0E3           MOV      R1,#+0
   \   00000194   090200EF           SWI      +521
   2144                if (data)
   \   00000198   000050E3           CMP      R0,#+0
   \   0000019C   0900000A           BEQ      ??ProcessPacket_16
   2145                {
   2146                  EDCHAT_STRUCT *ed_struct=EDIT_GetUserPointer(data);
   \   000001A0   DF0100EF           SWI      +479
   2147                  if (ed_struct)
   \   000001A4   000050E3           CMP      R0,#+0
   \   000001A8   0600000A           BEQ      ??ProcessPacket_16
   2148                  {
   2149                    if (ed_struct->ed_contact==t)
   \   000001AC   000090E5           LDR      R0,[R0, #+0]
   \   000001B0   060050E1           CMP      R0,R6
   \   000001B4   0300001A           BNE      ??ProcessPacket_16
   2150                    {
   2151                      GeneralFunc_flag1(edchat_id,1);
   \   000001B8   A80295E5           LDR      R0,[R5, #+680]
   \   000001BC   0110A0E3           MOV      R1,#+1
   \   000001C0   3D0100EF           SWI      +317
   2152                      edchat_id=0;
   \   000001C4   A87285E5           STR      R7,[R5, #+680]
   2153                    }
   2154                  }
   2155                };
   2156              };
   2157              t2=t->prev;
   \                     ??ProcessPacket_16:
   \   000001C8   045096E5           LDR      R5,[R6, #+4]
   2158              DeleteContact(t);
   \   000001CC   0600A0E1           MOV      R0,R6
   \   000001D0   ........           _BLF     DeleteContact,??DeleteContact??rA
   2159              if(t2) RecountMenu(t2,1); 
   \   000001D4   000055E3           CMP      R5,#+0
   \   000001D8   7401000A           BEQ      ??ProcessPacket_1
   \   000001DC   0110A0E3           MOV      R1,#+1
   \   000001E0   0500A0E1           MOV      R0,R5
   \   000001E4   BAFFFFEA           B        ??ProcessPacket_8
   2160              break;
   2161            case T_STATUSCHANGE:
   2162              t=FindContactByUin(p->pkt.uin);
   \                     ??ProcessPacket_17:
   \   000001E8   ........           _BLF     FindContactByUin,??FindContactByUin??rA
   \   000001EC   0060B0E1           MOVS     R6,R0
   2163              if (t)
   \   000001F0   4F00000A           BEQ      ??ProcessPacket_18
   2164              {
   2165                int i=t->state;
   2166                CLIST *oldt=NULL;
   \   000001F4   B600D4E1           LDRH     R0,[R4, #+6]
   \   000001F8   B489D6E1           LDRH     R8,[R6, #+148]
   \   000001FC   0090A0E3           MOV      R9,#+0
   \   00000200   02B040E2           SUB      R11,R0,#+2
   \   00000204   04005BE3           CMP      R11,#+4
   \   00000208   04B0A023           MOVCS    R11,#+4
   2167                int m=(p->pkt.data_len-2<sizeof(t->xstate)) ? p->pkt.data_len-2 : sizeof(t->xstate);
   2168                if (memcmp(t->xstate,&p->data[2],m))  // Если картинка икс статуса сменилась
   \   0000020C   0B20A0E1           MOV      R2,R11
   \   00000210   0A1084E2           ADD      R1,R4,#+10
   \   00000214   960086E2           ADD      R0,R6,#+150
   \   00000218   1C0100EF           SWI      +284
   \   0000021C   000050E3           CMP      R0,#+0
   \   00000220   2300000A           BEQ      ??ProcessPacket_19
   2169                {
   2170                  zeromem(t->xstate,sizeof(t->xstate));
   \   00000224   0410A0E3           MOV      R1,#+4
   \   00000228   960086E2           ADD      R0,R6,#+150
   \   0000022C   1D0100EF           SWI      +285
   2171                  memcpy(t->xstate,&p->data[2],m);
   \   00000230   0B20A0E1           MOV      R2,R11
   \   00000234   0A1084E2           ADD      R1,R4,#+10
   \   00000238   960086E2           ADD      R0,R6,#+150
   \   0000023C   1E0100EF           SWI      +286
   2172                  FreeXText(t);
   \   00000240   0600A0E1           MOV      R0,R6
   \   00000244   ........           _BLF     FreeXText,??FreeXText??rA
   2173                  if (t->xstate[0] && ENA_AUTO_XTXT)   // Если установлен икс статус и можно запрашивать по смене икс статуса :)
   \   00000248   9600D6E5           LDRB     R0,[R6, #+150]
   \   0000024C   000050E3           CMP      R0,#+0
   \   00000250   1600000A           BEQ      ??ProcessPacket_20
   \   00000254   68059FE5           LDR      R0,??ProcessPacket_21+0x4  ;; ENA_AUTO_XTXT
   \   00000258   000090E5           LDR      R0,[R0, #+0]
   \   0000025C   000050E3           CMP      R0,#+0
   \   00000260   1200000A           BEQ      ??ProcessPacket_20
   2174                  {
   2175                    t->req_xtext=1;
   \   00000264   C0A086E5           STR      R10,[R6, #+192]
   2176                    if (edchat_id)   // Если открыт чат
   \   00000268   A80295E5           LDR      R0,[R5, #+680]
   \   0000026C   000050E3           CMP      R0,#+0
   \   00000270   0F00000A           BEQ      ??ProcessPacket_19
   2177                    {
   2178                      void *data=FindGUIbyId(edchat_id,NULL);
   \   00000274   A80295E5           LDR      R0,[R5, #+680]
   \   00000278   0010A0E3           MOV      R1,#+0
   \   0000027C   090200EF           SWI      +521
   2179                      if (data)
   \   00000280   000050E3           CMP      R0,#+0
   \   00000284   0A00000A           BEQ      ??ProcessPacket_19
   2180                      {
   2181                        EDCHAT_STRUCT *ed_struct=EDIT_GetUserPointer(data);
   \   00000288   DF0100EF           SWI      +479
   2182                        if (ed_struct)
   \   0000028C   000050E3           CMP      R0,#+0
   \   00000290   0700000A           BEQ      ??ProcessPacket_19
   2183                        {
   2184                          if (ed_struct->ed_contact==t)   // Если наш чат то запрашиваем текст статуса
   \   00000294   000090E5           LDR      R0,[R0, #+0]
   \   00000298   060050E1           CMP      R0,R6
   \   0000029C   0400001A           BNE      ??ProcessPacket_19
   2185                          {
   2186                            t->req_xtext=0;
   \   000002A0   C07086E5           STR      R7,[R6, #+192]
   2187                            RequestXText(t->uin);
   \   000002A4   0C0096E5           LDR      R0,[R6, #+12]
   \   000002A8   ........           BL       RequestXText
   \   000002AC   000000EA           B        ??ProcessPacket_19
   2188                          }
   2189                        }
   2190          	    }
   2191          	  }
   2192          	}
   2193                  else  // Если икс статус не установлен то на всякий случай снимаем флаг получения текста
   2194                  {
   2195                    t->req_xtext=0;
   \                     ??ProcessPacket_20:
   \   000002B0   C07086E5           STR      R7,[R6, #+192]
   2196                  }
   2197                }
   2198                if (contactlist_menu_id)
   \                     ??ProcessPacket_19:
   \   000002B4   A40295E5           LDR      R0,[R5, #+676]
   \   000002B8   000050E3           CMP      R0,#+0
   \   000002BC   0500000A           BEQ      ??ProcessPacket_22
   2199                {
   2200          	oldt=FindContactByN(GetCurMenuItem(FindGUIbyId(contactlist_menu_id,NULL)));
   \   000002C0   A40295E5           LDR      R0,[R5, #+676]
   \   000002C4   0010A0E3           MOV      R1,#+0
   \   000002C8   090200EF           SWI      +521
   \   000002CC   8F0100EF           SWI      +399
   \   000002D0   ........           _BLF     FindContactByN,??FindContactByN??rA
   \   000002D4   0090A0E1           MOV      R9,R0
   2201                }
   2202                t->state=*((unsigned short *)(p->data));
   \                     ??ProcessPacket_22:
   \   000002D8   B800D4E1           LDRH     R0,[R4, #+8]
   \   000002DC   B409C6E1           STRH     R0,[R6, #+148]
   2203                LogStatusChange(t);
   \   000002E0   0600A0E1           MOV      R0,R6
   \   000002E4   ........           _BLF     LogStatusChange,??LogStatusChange??rA
   2204                ChangeContactPos(t);
   \   000002E8   0600A0E1           MOV      R0,R6
   \   000002EC   ........           _BLF     ChangeContactPos,??ChangeContactPos??rA
   2205                RecountMenu(oldt, 1);
   \   000002F0   0110A0E3           MOV      R1,#+1
   \   000002F4   0900A0E1           MOV      R0,R9
   \   000002F8   ........           BL       RecountMenu
   2206                if ((t->state!=0xFFFF)&&(i==0xFFFF))//Звук
   \   000002FC   B409D6E1           LDRH     R0,[R6, #+148]
   \   00000300   FF10A0E3           MOV      R1,#+255
   \   00000304   FF1C81E3           ORR      R1,R1,#0xFF00
   \   00000308   010050E1           CMP      R0,R1
   \   0000030C   0200000A           BEQ      ??ProcessPacket_23
   \   00000310   010058E1           CMP      R8,R1
   2207                {
   2208          	Play(sndGlobal);
   \   00000314   AC049F05           LDREQ    R0,??ProcessPacket_21+0x8  ;; sndGlobal
   \   00000318   0400000A           BEQ      ??ProcessPacket_24
   2209                }
   2210                if ((i!=0xFFFF)&&(t->state==0xFFFF))//Звук
   \                     ??ProcessPacket_23:
   \   0000031C   010058E1           CMP      R8,R1
   \   00000320   0300000A           BEQ      ??ProcessPacket_18
   \   00000324   010050E1           CMP      R0,R1
   \   00000328   0100001A           BNE      ??ProcessPacket_18
   2211                {
   2212          	Play(sndSrvMsg);
   \   0000032C   98049FE5           LDR      R0,??ProcessPacket_21+0xC  ;; sndSrvMsg
   \                     ??ProcessPacket_24:
   \   00000330   ........           BL       Play
   2213                }
   2214              }
   2215              if (edchat_id)
   \                     ??ProcessPacket_18:
   \   00000334   A80295E5           LDR      R0,[R5, #+680]
   \   00000338   000050E3           CMP      R0,#+0
   \   0000033C   1B01000A           BEQ      ??ProcessPacket_1
   2216              {
   2217                void *data=FindGUIbyId(edchat_id,NULL);
   \   00000340   A80295E5           LDR      R0,[R5, #+680]
   \   00000344   0010A0E3           MOV      R1,#+0
   \   00000348   090200EF           SWI      +521
   2218                {
   2219          	EDCHAT_STRUCT *ed_struct;
   2220          	ed_struct=EDIT_GetUserPointer(data);
   \   0000034C   DF0100EF           SWI      +479
   2221          	if (ed_struct)
   \   00000350   000050E3           CMP      R0,#+0
   \   00000354   1501000A           BEQ      ??ProcessPacket_1
   2222          	{
   2223          	  if (ed_struct->ed_contact==t)
   \   00000358   000090E5           LDR      R0,[R0, #+0]
   \   0000035C   060050E1           CMP      R0,R6
   \   00000360   1201001A           BNE      ??ProcessPacket_1
   2224          	  {
   2225          	    DirectRedrawGUI_ID(edchat_id);
   \   00000364   A80295E5           LDR      R0,[R5, #+680]
   \   00000368   400100EF           SWI      +320
   \   0000036C   0F0100EA           B        ??ProcessPacket_1
   2226          	  }
   2227          	}
   2228                }
   2229              }
   2230              break;
   2231            case T_RECVMSG:
   2232              
   2233              t=FindContactByUin(p->pkt.uin);
   \                     ??ProcessPacket_25:
   \   00000370   ........           _BLF     FindContactByUin,??FindContactByUin??rA
   \   00000374   0060B0E1           MOVS     R6,R0
   2234              if (!t)
   \   00000378   0900001A           BNE      ??ProcessPacket_26
   2235              {
   2236                sprintf(s,percent_d,p->pkt.uin);
   \   0000037C   002094E5           LDR      R2,[R4, #+0]
   \   00000380   0B1088E2           ADD      R1,R8,#+11
   \   00000384   0D00A0E1           MOV      R0,SP
   \   00000388   160000EF           SWI      +22
   2237                t=AddContact(p->pkt.uin,s,GROUP_CACHE,0);
   \   0000038C   A02295E5           LDR      R2,[R5, #+672]
   \   00000390   000094E5           LDR      R0,[R4, #+0]
   \   00000394   0030A0E3           MOV      R3,#+0
   \   00000398   0D10A0E1           MOV      R1,SP
   \   0000039C   ........           _BLF     AddContact,??AddContact??rA
   \   000003A0   0060A0E1           MOV      R6,R0
   2238              }
   2239              if(!t->isactive && HISTORY_BUFFER) GetHistory(t, 64<<HISTORY_BUFFER);
   \                     ??ProcessPacket_26:
   \   000003A4   B40096E5           LDR      R0,[R6, #+180]
   \   000003A8   000050E3           CMP      R0,#+0
   \   000003AC   0700001A           BNE      ??ProcessPacket_27
   \   000003B0   ........           LDR      R0,??DataTable81  ;; HISTORY_BUFFER
   \   000003B4   000090E5           LDR      R0,[R0, #+0]
   \   000003B8   000050E3           CMP      R0,#+0
   \   000003BC   0300000A           BEQ      ??ProcessPacket_27
   \   000003C0   4010A0E3           MOV      R1,#+64
   \   000003C4   1110A0E1           LSL      R1,R1,R0
   \   000003C8   0600A0E1           MOV      R0,R6
   \   000003CC   ........           _BLF     GetHistory,??GetHistory??rA
   2240              t->isactive=ACTIVE_TIME;
   \                     ??ProcessPacket_27:
   \   000003D0   B400A0E3           MOV      R0,#+180
   \   000003D4   B40086E5           STR      R0,[R6, #+180]
   2241          
   2242              //    ChangeContactPos(t);
   2243              if(VIBR_TYPE)
   \   000003D8   ........           LDR      R0,??DataTable82  ;; VIBR_TYPE
   \   000003DC   000090E5           LDR      R0,[R0, #+0]
   \   000003E0   000050E3           CMP      R0,#+0
   2244                vibra_count=2;
   \   000003E4   0200A013           MOVNE    R0,#+2
   \   000003E8   60028515           STRNE    R0,[R5, #+608]
   2245              else
   2246                vibra_count=1;
   \   000003EC   60A28505           STREQ    R10,[R5, #+608]
   2247              start_vibra();
   \   000003F0   ........           BL       start_vibra
   2248              IlluminationOn(ILL_DISP_RECV,ILL_KEYS_RECV,ILL_RECV_TMR,ILL_RECV_FADE); //Illumination by BoBa 19.04.2007
   \   000003F4   D4039FE5           LDR      R0,??ProcessPacket_21+0x10  ;; ILL_RECV_FADE
   \   000003F8   003090E5           LDR      R3,[R0, #+0]
   \   000003FC   D0039FE5           LDR      R0,??ProcessPacket_21+0x14  ;; ILL_RECV_TMR
   \   00000400   002090E5           LDR      R2,[R0, #+0]
   \   00000404   CC039FE5           LDR      R0,??ProcessPacket_21+0x18  ;; ILL_KEYS_RECV
   \   00000408   001090E5           LDR      R1,[R0, #+0]
   \   0000040C   C8039FE5           LDR      R0,??ProcessPacket_21+0x1C  ;; ILL_DISP_RECV
   \   00000410   000090E5           LDR      R0,[R0, #+0]
   \   00000414   ........           BL       IlluminationOn
   2249              if (t->name[0]=='#')
   \   00000418   1400D6E5           LDRB     R0,[R6, #+20]
   \   0000041C   230050E3           CMP      R0,#+35
   \   00000420   1100001A           BNE      ??ProcessPacket_28
   2250              {
   2251                //Если это конференция, патчим имя
   2252                char *s=strchr(p->data,'>');
   \   00000424   3E10A0E3           MOV      R1,#+62
   \   00000428   080084E2           ADD      R0,R4,#+8
   \   0000042C   180000EF           SWI      +24
   2253                //Если нашли символ > и после него пробел и ник короче 16 символов
   2254                if (s)
   \   00000430   000050E3           CMP      R0,#+0
   \   00000434   0C00000A           BEQ      ??ProcessPacket_28
   2255                {
   2256          	if ((s[1]==' ')&&((s-p->data)<40))
   \   00000438   0110D0E5           LDRB     R1,[R0, #+1]
   \   0000043C   200051E3           CMP      R1,#+32
   \   00000440   0900001A           BNE      ??ProcessPacket_28
   \   00000444   081084E2           ADD      R1,R4,#+8
   \   00000448   011040E0           SUB      R1,R0,R1
   \   0000044C   280051E3           CMP      R1,#+40
   \   00000450   050000AA           BGE      ??ProcessPacket_28
   2257          	{
   2258          	  *s=0; //Режем строку
   \   00000454   0070C0E5           STRB     R7,[R0, #+0]
   2259          	  AddStringToLog(t,0x02,s+2,p->data,0xFFFFFFFF); //Добавляем имя из текста сообщения
   \   00000458   0710E0E1           MVN      R1,R7
   \   0000045C   02002DE9           PUSH     {R1}
   \   00000460   083084E2           ADD      R3,R4,#+8
   \   00000464   022080E2           ADD      R2,R0,#+2
   \   00000468   030000EA           B        ??ProcessPacket_29
   2260          	  goto L1;
   2261          	}
   2262                }
   2263              }
   2264              AddStringToLog(t,0x02,p->data,t->name,0xFFFFFFFF);
   \                     ??ProcessPacket_28:
   \   0000046C   0700E0E1           MVN      R0,R7
   \   00000470   01002DE9           PUSH     {R0}
   \   00000474   143086E2           ADD      R3,R6,#+20
   \   00000478   082084E2           ADD      R2,R4,#+8
   \                     ??ProcessPacket_29:
   \   0000047C   0210A0E3           MOV      R1,#+2
   \   00000480   0600A0E1           MOV      R0,R6
   \   00000484   ........           BL       AddStringToLog
   \   00000488   04D08DE2           ADD      SP,SP,#+4
   2265              L1:
   2266              //Разворачиваем группу, в которой пришло сообщение
   2267              {
   2268                CLIST *g=FindGroupByID(t->group);
   \   0000048C   100096E5           LDR      R0,[R6, #+16]
   \   00000490   ........           _BLF     FindGroupByID,??FindGroupByID??rA
   2269                if (g)
   \   00000494   000050E3           CMP      R0,#+0
   2270                {
   2271          	if (g->state)
   \   00000498   B419D011           LDRHNE   R1,[R0, #+148]
   \   0000049C   00005113           CMPNE    R1,#+0
   2272          	{
   2273          	  g->state=0;
   \   000004A0   B479C011           STRHNE   R7,[R0, #+148]
   2274          	}
   2275                }
   2276              }
   2277              ReqAddMsgToChat(t);
   \   000004A4   0600A0E1           MOV      R0,R6
   \   000004A8   ........           BL       ReqAddMsgToChat
   2278              RecountMenu(t, 1);
   \   000004AC   0110A0E3           MOV      R1,#+1
   \   000004B0   0600A0E1           MOV      R0,R6
   \   000004B4   ........           BL       RecountMenu
   2279              extern const int DEVELOP_IF;
   2280              switch (DEVELOP_IF)
   \   000004B8   20039FE5           LDR      R0,??ProcessPacket_21+0x20  ;; DEVELOP_IF
   \   000004BC   000090E5           LDR      R0,[R0, #+0]
   \   000004C0   000050E3           CMP      R0,#+0
   \   000004C4   0200000A           BEQ      ??ProcessPacket_30
   \   000004C8   010050E2           SUBS     R0,R0,#+1
   \   000004CC   0C00000A           BEQ      ??ProcessPacket_31
   \   000004D0   B60000EA           B        ??ProcessPacket_1
   2281              {
   2282              case 0:
   2283                if ((((CSM_RAM *)(CSM_root()->csm_q->csm.last))->id!=maincsm_id) && !InAway()) to_develop();
   \                     ??ProcessPacket_30:
   \   000004D4   068100EF           SWI      +33030
   \   000004D8   080090E5           LDR      R0,[R0, #+8]
   \   000004DC   241295E5           LDR      R1,[R5, #+548]
   \   000004E0   0C0090E5           LDR      R0,[R0, #+12]
   \   000004E4   0C0090E5           LDR      R0,[R0, #+12]
   \   000004E8   010050E1           CMP      R0,R1
   \                     ??ProcessPacket_32:
   \   000004EC   AF00000A           BEQ      ??ProcessPacket_1
   \   000004F0   ........           BL       InAway
   \   000004F4   000050E3           CMP      R0,#+0
   \   000004F8   AC00001A           BNE      ??ProcessPacket_1
   \   000004FC   ........           BL       to_develop
   \   00000500   AA0000EA           B        ??ProcessPacket_1
   2284                break;
   2285              case 1:
   2286                if ((((CSM_RAM *)(CSM_root()->csm_q->csm.last))->id!=maincsm_id)&&(IsUnlocked())&&!InAway()) to_develop();
   \                     ??ProcessPacket_31:
   \   00000504   068100EF           SWI      +33030
   \   00000508   080090E5           LDR      R0,[R0, #+8]
   \   0000050C   241295E5           LDR      R1,[R5, #+548]
   \   00000510   0C0090E5           LDR      R0,[R0, #+12]
   \   00000514   0C0090E5           LDR      R0,[R0, #+12]
   \   00000518   010050E1           CMP      R0,R1
   \   0000051C   A300000A           BEQ      ??ProcessPacket_1
   \   00000520   430000EF           SWI      +67
   \   00000524   000050E3           CMP      R0,#+0
   \   00000528   EFFFFFEA           B        ??ProcessPacket_32
   2287                break;
   2288              case 2:
   2289                break;
   2290              }
   2291              break;
   2292            case T_SRV_ACK:
   2293            case T_CLIENT_ACK:
   2294              q=FindContactLOGQByAck(p);
   \                     ??ProcessPacket_33:
   \   0000052C   0400A0E1           MOV      R0,R4
   \   00000530   ........           BL       FindContactLOGQByAck
   2295          /*    if ((
   2296          	IsGuiOnTop(contactlist_menu_id)||
   2297          	  IsGuiOnTop(edchat_id)
   2298          	    )&&(q))
   2299              {
   2300                DrawRoundedFrame(ScreenW()-8,YDISP,ScreenW()-1,YDISP+7,0,0,0,
   2301          		       GetPaletteAdrByColorIndex(0),
   2302          		       GetPaletteAdrByColorIndex(p->pkt.type==T_SRV_ACK?3:4));
   2303              }*/
   2304              if (q)
   \   00000534   000050E3           CMP      R0,#+0
   \   00000538   9C00000A           BEQ      ??ProcessPacket_1
   2305              {
   2306                q->acked=p->pkt.type==T_SRV_ACK?1:2;
   \   0000053C   B410D4E1           LDRH     R1,[R4, #+4]
   \   00000540   100051E3           CMP      R1,#+16
   \   00000544   0110A003           MOVEQ    R1,#+1
   \   00000548   0210A013           MOVNE    R1,#+2
   \   0000054C   041080E5           STR      R1,[R0, #+4]
   2307                t=FindContactByUin(p->pkt.uin);
   \   00000550   000094E5           LDR      R0,[R4, #+0]
   \   00000554   ........           _BLF     FindContactByUin,??FindContactByUin??rA
   \   00000558   0060A0E1           MOV      R6,R0
   2308                if (edchat_id)
   \   0000055C   A80295E5           LDR      R0,[R5, #+680]
   \   00000560   000050E3           CMP      R0,#+0
   \   00000564   9100000A           BEQ      ??ProcessPacket_1
   2309                {
   2310          	void *data=FindGUIbyId(edchat_id,NULL);
   \   00000568   A80295E5           LDR      R0,[R5, #+680]
   \   0000056C   0010A0E3           MOV      R1,#+0
   \   00000570   090200EF           SWI      +521
   \   00000574   0070B0E1           MOVS     R7,R0
   2311          	if (data)
   \   00000578   8C00000A           BEQ      ??ProcessPacket_1
   2312          	{
   2313          	  EDCHAT_STRUCT *ed_struct;
   2314          	  ed_struct=EDIT_GetUserPointer(data);
   \   0000057C   DF0100EF           SWI      +479
   2315          	  if (ed_struct)
   \   00000580   000050E3           CMP      R0,#+0
   \   00000584   8900000A           BEQ      ??ProcessPacket_1
   2316          	  {
   2317          	    if (ed_struct->ed_contact==t)
   \   00000588   000090E5           LDR      R0,[R0, #+0]
   \   0000058C   060050E1           CMP      R0,R6
   \   00000590   8600001A           BNE      ??ProcessPacket_1
   2318          	    {
   2319          	      if (EDIT_IsBusy(data))
   \   00000594   0700A0E1           MOV      R0,R7
   \   00000598   1C0200EF           SWI      +540
   \   0000059C   000050E3           CMP      R0,#+0
   \   000005A0   0300000A           BEQ      ??ProcessPacket_34
   2320          	      {
   2321          		t->req_drawack=1;
   \   000005A4   A4A086E5           STR      R10,[R6, #+164]
   2322          		time_to_stop_t9=3;
   \   000005A8   0300A0E3           MOV      R0,#+3
   \   000005AC   C00285E5           STR      R0,[R5, #+704]
   \   000005B0   7E0000EA           B        ??ProcessPacket_1
   2323          	      }
   2324          	      else {
   2325          		DrawAck(data);
   \                     ??ProcessPacket_34:
   \   000005B4   0700A0E1           MOV      R0,R7
   \   000005B8   ........           BL       DrawAck
   2326                          if (p->pkt.type==T_SRV_ACK)
   \   000005BC   B400D4E1           LDRH     R0,[R4, #+4]
   \   000005C0   100050E3           CMP      R0,#+16
   \   000005C4   7900001A           BNE      ??ProcessPacket_1
   2327                            IlluminationOn(ILL_DISP_SEND,ILL_KEYS_SEND,ILL_SEND_TMR,ILL_RECV_FADE); //Illumination by BoBa 19.04.2007
   \   000005C8   00029FE5           LDR      R0,??ProcessPacket_21+0x10  ;; ILL_RECV_FADE
   \   000005CC   003090E5           LDR      R3,[R0, #+0]
   \   000005D0   0C029FE5           LDR      R0,??ProcessPacket_21+0x24  ;; ILL_SEND_TMR
   \   000005D4   002090E5           LDR      R2,[R0, #+0]
   \   000005D8   08029FE5           LDR      R0,??ProcessPacket_21+0x28  ;; ILL_KEYS_SEND
   \   000005DC   001090E5           LDR      R1,[R0, #+0]
   \   000005E0   04029FE5           LDR      R0,??ProcessPacket_21+0x2C  ;; ILL_DISP_SEND
   \   000005E4   000090E5           LDR      R0,[R0, #+0]
   \   000005E8   ........           BL       IlluminationOn
   \   000005EC   6F0000EA           B        ??ProcessPacket_1
   2328                        }
   2329          	    }
   2330          	  }
   2331          	}
   2332                }
   2333              }
   2334          //    }
   2335          //    if (p->pkt.type==T_CLIENT_ACK) slientsend=false;
   2336              break;
   2337            case T_XTEXT_ACK:
   2338              t=FindContactByUin(p->pkt.uin);
   \                     ??ProcessPacket_35:
   \   000005F0   ........           _BLF     FindContactByUin,??FindContactByUin??rA
   \   000005F4   0060B0E1           MOVS     R6,R0
   2339              if (t)
   \   000005F8   6C00000A           BEQ      ??ProcessPacket_1
   2340              {
   2341                int i;
   2342                int j;
   2343                FreeXText(t);
   \   000005FC   ........           _BLF     FreeXText,??FreeXText??rA
   2344                i=p->pkt.data_len;
   \   00000600   B670D4E1           LDRH     R7,[R4, #+6]
   2345                memcpy(t->xtext=malloc(i),p->data,i);
   \   00000604   0700A0E1           MOV      R0,R7
   \   00000608   140000EF           SWI      +20
   \   0000060C   BC0086E5           STR      R0,[R6, #+188]
   \   00000610   0720A0E1           MOV      R2,R7
   \   00000614   081084E2           ADD      R1,R4,#+8
   \   00000618   1E0100EF           SWI      +286
   2346                zeromem(s,256);
   \   0000061C   401FA0E3           MOV      R1,#+256
   \   00000620   0D00A0E1           MOV      R0,SP
   \   00000624   1D0100EF           SWI      +285
   2347                strcpy(s,t->name);
   \   00000628   141086E2           ADD      R1,R6,#+20
   \   0000062C   0D00A0E1           MOV      R0,SP
   \   00000630   1A0000EF           SWI      +26
   2348                strcat(s,":\n");
   \   00000634   611F8FE2           ADR      R1,??ProcessPacket_21  ;; ":\n"
   \   00000638   0D00A0E1           MOV      R0,SP
   \   0000063C   170000EF           SWI      +23
   2349                i=strlen(s);
   \   00000640   0D00A0E1           MOV      R0,SP
   \   00000644   1B0000EF           SWI      +27
   2350                j=p->data[0];
   \   00000648   0870D4E5           LDRB     R7,[R4, #+8]
   \   0000064C   0090A0E1           MOV      R9,R0
   2351                if (j>(255-i)) j=255-i;
   \   00000650   FF0069E2           RSB      R0,R9,#+255
   \   00000654   070050E1           CMP      R0,R7
   \   00000658   0070A0B1           MOVLT    R7,R0
   2352                strncpy(s+i,p->data+1,j);
   \   0000065C   0720A0E1           MOV      R2,R7
   \   00000660   091084E2           ADD      R1,R4,#+9
   \   00000664   0D00A0E1           MOV      R0,SP
   \   00000668   000089E0           ADD      R0,R9,R0
   \   0000066C   160100EF           SWI      +278
   2353                i+=j;
   \   00000670   090087E0           ADD      R0,R7,R9
   2354                if (i<255)
   \   00000674   FF0050E3           CMP      R0,#+255
   \   00000678   100000AA           BGE      ??ProcessPacket_36
   2355                {
   2356          	s[i]='\n';
   \   0000067C   0D10A0E1           MOV      R1,SP
   \   00000680   0A20A0E3           MOV      R2,#+10
   \   00000684   0120C0E7           STRB     R2,[R0, +R1]
   2357          	i++;
   \   00000688   0810D4E5           LDRB     R1,[R4, #+8]
   \   0000068C   B620D4E1           LDRH     R2,[R4, #+6]
   \   00000690   010080E2           ADD      R0,R0,#+1
   2358          	j=p->pkt.data_len-p->data[0]-1;
   2359          	if (j>(255-i)) j=255-i;
   2360          	strncpy(s+i,p->data+p->data[0]+1,j);
   \   00000694   0D30A0E1           MOV      R3,SP
   \   00000698   012042E0           SUB      R2,R2,R1
   \   0000069C   017042E2           SUB      R7,R2,#+1
   \   000006A0   FF2060E2           RSB      R2,R0,#+255
   \   000006A4   070052E1           CMP      R2,R7
   \   000006A8   0270A0B1           MOVLT    R7,R2
   \   000006AC   0720A0E1           MOV      R2,R7
   \   000006B0   041081E0           ADD      R1,R1,R4
   \   000006B4   091081E2           ADD      R1,R1,#+9
   \   000006B8   030080E0           ADD      R0,R0,R3
   \   000006BC   160100EF           SWI      +278
   2361                }
   2362          //      if (IsGuiOnTop(contactlist_menu_id)) RefreshGUI();
   2363                if (!edchat_id &&           // Только если редактор не наверху
   2364                    strlen(p->data))       // и x-status не пустой
   \                     ??ProcessPacket_36:
   \   000006C0   A80295E5           LDR      R0,[R5, #+680]
   \   000006C4   000050E3           CMP      R0,#+0
   \   000006C8   0600001A           BNE      ??ProcessPacket_37
   \   000006CC   080084E2           ADD      R0,R4,#+8
   \   000006D0   1B0000EF           SWI      +27
   \   000006D4   000050E3           CMP      R0,#+0
   \   000006D8   0200000A           BEQ      ??ProcessPacket_37
   2365                    ShowMSG(0,(int)s);
   \   000006DC   0D10A0E1           MOV      R1,SP
   \   000006E0   0000A0E3           MOV      R0,#+0
   \   000006E4   480100EF           SWI      +328
   2366          
   2367                zeromem(s,256);
   \                     ??ProcessPacket_37:
   \   000006E8   401FA0E3           MOV      R1,#+256
   \   000006EC   0D00A0E1           MOV      R0,SP
   \   000006F0   1D0100EF           SWI      +285
   2368                i=0;
   2369                j=p->data[0];
   \   000006F4   0850D4E5           LDRB     R5,[R4, #+8]
   2370                if (j>(255-i)) j=255-i;
   2371                strncpy(s,p->data+1,j);
   \   000006F8   091084E2           ADD      R1,R4,#+9
   \   000006FC   0D00A0E1           MOV      R0,SP
   \   00000700   400F55E3           CMP      R5,#+256
   \   00000704   FF50A0A3           MOVGE    R5,#+255
   \   00000708   0520A0E1           MOV      R2,R5
   \   0000070C   160100EF           SWI      +278
   2372                i+=j;
   2373                if (i<255)
   \   00000710   FF0055E3           CMP      R5,#+255
   \   00000714   100000AA           BGE      ??ProcessPacket_38
   2374                {
   2375          	s[i++]=13;
   \   00000718   0D10A0E1           MOV      R1,SP
   \   0000071C   0D20A0E3           MOV      R2,#+13
   \   00000720   0120C5E7           STRB     R2,[R5, +R1]
   \   00000724   0810D4E5           LDRB     R1,[R4, #+8]
   \   00000728   B620D4E1           LDRH     R2,[R4, #+6]
   \   0000072C   010085E2           ADD      R0,R5,#+1
   2376          	j=p->pkt.data_len-p->data[0]-1;
   2377          	if (j>(255-i)) j=255-i;
   2378          	strncpy(s+i,p->data+p->data[0]+1,j);
   \   00000730   0D30A0E1           MOV      R3,SP
   \   00000734   012042E0           SUB      R2,R2,R1
   \   00000738   015042E2           SUB      R5,R2,#+1
   \   0000073C   FF2060E2           RSB      R2,R0,#+255
   \   00000740   050052E1           CMP      R2,R5
   \   00000744   0250A0B1           MOVLT    R5,R2
   \   00000748   0520A0E1           MOV      R2,R5
   \   0000074C   041081E0           ADD      R1,R1,R4
   \   00000750   091081E2           ADD      R1,R1,#+9
   \   00000754   030080E0           ADD      R0,R0,R3
   \   00000758   160100EF           SWI      +278
   2379                }
   2380                AddStringToLog(t,0x03,s,x_status_change,0xFFFFFFFF);
   \                     ??ProcessPacket_38:
   \   0000075C   00006AE2           RSB      R0,R10,#+0
   \   00000760   01002DE9           PUSH     {R0}
   \   00000764   5C3F88E2           ADD      R3,R8,#+368
   \   00000768   04208DE2           ADD      R2,SP,#+4
   \   0000076C   0310A0E3           MOV      R1,#+3
   \   00000770   0600A0E1           MOV      R0,R6
   \   00000774   ........           BL       AddStringToLog
   2381                ReqAddMsgToChat(t);
   \   00000778   0600A0E1           MOV      R0,R6
   \   0000077C   ........           BL       ReqAddMsgToChat
   2382                if (strlen(p->data))       // Если x-status не пустой
   \   00000780   080084E2           ADD      R0,R4,#+8
   \   00000784   1B0000EF           SWI      +27
   \   00000788   000050E3           CMP      R0,#+0
   \   0000078C   04D08DE2           ADD      SP,SP,#+4
   2383                  RecountMenu(t, 1);
   \   00000790   0110A013           MOVNE    R1,#+1
   \   00000794   0600A011           MOVNE    R0,R6
   \   00000798   4DFEFF1A           BNE      ??ProcessPacket_8
   2384                else
   2385                  RecountMenu(NULL, 0);
   \   0000079C   0010A0E3           MOV      R1,#+0
   \   000007A0   0000A0E3           MOV      R0,#+0
   \   000007A4   4AFEFFEA           B        ??ProcessPacket_8
   2386              }
   2387              break;
   2388            case T_LASTPRIVACY:
   2389              CurrentPrivateStatus=p->data[0];
   \                     ??ProcessPacket_39:
   \   000007A8   0800D4E5           LDRB     R0,[R4, #+8]
   \   000007AC   580285E5           STR      R0,[R5, #+600]
   2390              break;
   2391            }
   2392            mfree(p);
   \                     ??ProcessPacket_1:
   \   000007B0   0400A0E1           MOV      R0,R4
   \   000007B4   150000EF           SWI      +21
   2393          }
   \   000007B8   40DF8DE2           ADD      SP,SP,#+256
   \   000007BC   F08FBDE8           POP      {R4-R11,PC}      ;; return
   \                     ??ProcessPacket_21:
   \   000007C0   3A0A0000           DC8      ":\n",+0
   \   000007C4   ........           DC32     ENA_AUTO_XTXT
   \   000007C8   ........           DC32     sndGlobal
   \   000007CC   ........           DC32     sndSrvMsg
   \   000007D0   ........           DC32     ILL_RECV_FADE
   \   000007D4   ........           DC32     ILL_RECV_TMR
   \   000007D8   ........           DC32     ILL_KEYS_RECV
   \   000007DC   ........           DC32     ILL_DISP_RECV
   \   000007E0   ........           DC32     DEVELOP_IF
   \   000007E4   ........           DC32     ILL_SEND_TMR
   \   000007E8   ........           DC32     ILL_KEYS_SEND
   \   000007EC   ........           DC32     ILL_DISP_SEND
   2394          
   2395          IPC_REQ tmr_gipc;

   \                                 In segment CODE, align 4, keep-with-next
   2396          void process_active_timer(void)
   2397          {
   \                     process_active_timer:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   2398            if (connect_state>2)
   \   00000004   ........           LDR      R5,??DataTable93  ;; contactlist_menuhdr
   \   00000008   0040A0E3           MOV      R4,#+0
   \   0000000C   700295E5           LDR      R0,[R5, #+624]
   \   00000010   030050E3           CMP      R0,#+3
   \   00000014   070000BA           BLT      ??process_active_timer_0
   2399            {
   2400              if (++tenseconds_to_ping>12)
   \   00000018   B00295E5           LDR      R0,[R5, #+688]
   \   0000001C   010080E2           ADD      R0,R0,#+1
   \   00000020   B00285E5           STR      R0,[R5, #+688]
   \   00000024   0D0050E3           CMP      R0,#+13
   \   00000028   020000BA           BLT      ??process_active_timer_0
   2401              {
   2402                tenseconds_to_ping=0;
   2403                SUBPROC((void *)do_ping);
   \   0000002C   58009FE5           LDR      R0,??process_active_timer_1  ;; do_ping
   \   00000030   B04285E5           STR      R4,[R5, #+688]
   \   00000034   710100EF           SWI      +369
   2404              }
   2405            }
   2406            tmr_gipc.name_to=ipc_my_name;
   \                     ??process_active_timer_0:
   \   00000038   ........           LDR      R2,??DataTable87  ;; Canvas
   \   0000003C   7C0FA0E3           MOV      R0,#+496
   \   00000040   521FA0E3           MOV      R1,#+328
   \   00000044   023081E0           ADD      R3,R1,R2
   \   00000048   053080E7           STR      R3,[R0, +R5]
   2407            tmr_gipc.name_from=ipc_my_name;
   \   0000004C   021081E0           ADD      R1,R1,R2
   \   00000050   F41185E5           STR      R1,[R5, #+500]
   2408            tmr_gipc.data=NULL;
   \   00000054   F84185E5           STR      R4,[R5, #+504]
   2409            GBS_SendMessage(MMI_CEPID,MSG_IPC,IPC_TENSECONDS,&tmr_gipc);
   \   00000058   053080E0           ADD      R3,R0,R5
   \   0000005C   0420A0E3           MOV      R2,#+4
   \   00000060   B010A0E3           MOV      R1,#+176
   \   00000064   DE1C81E3           ORR      R1,R1,#0xDE00
   \   00000068   0900A0E3           MOV      R0,#+9
   \   0000006C   420C80E3           ORR      R0,R0,#0x4200
   \   00000070   000100EF           SWI      +256
   2410            GBS_StartTimerProc(&tmr_active,TMR_SECOND*10,process_active_timer);
   \   00000074   ........           LDR      R2,??DataTable94  ;; process_active_timer
   \   00000078   871EA0E3           MOV      R1,#+2160
   \   0000007C   C60F41E2           SUB      R0,R1,#+792
   \   00000080   050080E0           ADD      R0,R0,R5
   \   00000084   4D0000EF           SWI      +77
   2411          }
   \   00000088   3080BDE8           POP      {R4,R5,PC}       ;; return
   \                     ??process_active_timer_1:
   \   0000008C   ........           DC32     do_ping
   2412          
   2413          //===============================================================================================
   2414          
   2415          

   \                                 In segment CODE, align 4, keep-with-next
   2416          void onRedraw(MAIN_GUI *data)
   2417          {
   \                     onRedraw:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000004   0CD04DE2           SUB      SP,SP,#+12
   \   00000008   0040A0E1           MOV      R4,R0
   2418            int scr_w=ScreenW();
   \   0000000C   888100EF           SWI      +33160
   \   00000010   00B0A0E1           MOV      R11,R0
   2419            int scr_h=ScreenH();
   \   00000014   898100EF           SWI      +33161
   2420            int pos_status;
   2421            int pm = pictures_max, pl = pictures_loaded;
   \   00000018   2C139FE5           LDR      R1,??onRedraw_0  ;; pictures_max
   \   0000001C   0060A0E1           MOV      R6,R0
   \   00000020   001091E5           LDR      R1,[R1, #+0]
   \   00000024   00108DE5           STR      R1,[SP, #+0]
   \   00000028   20139FE5           LDR      R1,??onRedraw_0+0x4  ;; pictures_loaded
   \   0000002C   001091E5           LDR      R1,[R1, #+0]
   \   00000030   04108DE5           STR      R1,[SP, #+4]
   2422          /*  DrawRoundedFrame(0,YDISP,scr_w-1,scr_h-1,0,0,0,
   2423          		   GetPaletteAdrByColorIndex(0),
   2424          		   GetPaletteAdrByColorIndex(20));*/
   2425            if (data->gui.state==2)
   \   00000034   0C00D4E5           LDRB     R0,[R4, #+12]
   \   00000038   020050E3           CMP      R0,#+2
   \   0000003C   F78FBD18           POPNE    {R0-R2,R4-R11,PC}
   2426            {
   2427            DrawRectangle(0,YDISP,scr_w-1,scr_h-1,0,
   2428          		   GetPaletteAdrByColorIndex(1),
   2429          		   GetPaletteAdrByColorIndex(1));
   2430            DrawImg(0,0,S_ICONS[ICON_LOGO]);
   \   00000040   ........           LDR      R9,??DataTable93  ;; contactlist_menuhdr
   \   00000044   0100A0E3           MOV      R0,#+1
   \   00000048   2E0100EF           SWI      +302
   \   0000004C   0050A0E1           MOV      R5,R0
   \   00000050   0100A0E3           MOV      R0,#+1
   \   00000054   2E0100EF           SWI      +302
   \   00000058   20002DE9           PUSH     {R5}
   2431            unsigned long RX=ALLTOTALRECEIVED; unsigned long TX=ALLTOTALSENDED;
   2432            wsprintf(data->ws1,LG_GRSTATESTRING,connect_state,RXstate,RX,TX,sendq_l,hostname,logmsg);
   \   0000005C   ........           LDR      R5,??DataTable87  ;; Canvas
   \   00000060   01002DE9           PUSH     {R0}
   \   00000064   013046E2           SUB      R3,R6,#+1
   \   00000068   01204BE2           SUB      R2,R11,#+1
   \   0000006C   1810A0E3           MOV      R1,#+24
   \   00000070   0000A0E3           MOV      R0,#+0
   \   00000074   01002DE9           PUSH     {R0}
   2433          
   2434            if(pm != pl)
   \   00000078   046046E2           SUB      R6,R6,#+4
   \   0000007C   B40100EF           SWI      +436
   \   00000080   602199E5           LDR      R2,[R9, #+352]
   \   00000084   0010A0E3           MOV      R1,#+0
   \   00000088   0000A0E3           MOV      R0,#+0
   \   0000008C   230000EF           SWI      +35
   \   00000090   800299E5           LDR      R0,[R9, #+640]
   \   00000094   841299E5           LDR      R1,[R9, #+644]
   \   00000098   2820A0E3           MOV      R2,#+40
   \   0000009C   402E82E3           ORR      R2,R2,#0x400
   \   000000A0   092082E0           ADD      R2,R2,R9
   \   000000A4   04002DE9           PUSH     {R2}
   \   000000A8   2820A0E3           MOV      R2,#+40
   \   000000AC   602E82E3           ORR      R2,R2,#0x600
   \   000000B0   092082E0           ADD      R2,R2,R9
   \   000000B4   04002DE9           PUSH     {R2}
   \   000000B8   882299E5           LDR      R2,[R9, #+648]
   \   000000BC   04002DE9           PUSH     {R2}
   \   000000C0   02002DE9           PUSH     {R1}
   \   000000C4   01002DE9           PUSH     {R0}
   \   000000C8   6C3299E5           LDR      R3,[R9, #+620]
   \   000000CC   702299E5           LDR      R2,[R9, #+624]
   \   000000D0   340094E5           LDR      R0,[R4, #+52]
   \   000000D4   421F85E2           ADD      R1,R5,#+264
   \   000000D8   240100EF           SWI      +292
   \   000000DC   20009DE5           LDR      R0,[SP, #+32]
   \   000000E0   24109DE5           LDR      R1,[SP, #+36]
   \   000000E4   20D08DE2           ADD      SP,SP,#+32
   \   000000E8   010050E1           CMP      R0,R1
   \   000000EC   3500000A           BEQ      ??onRedraw_1
   2435            {
   2436               DrawRectangle(0,scr_h-4-2*GetFontYSIZE(FONT_SMALL_BOLD),scr_w-1,scr_h-4-GetFontYSIZE(FONT_MEDIUM_BOLD)-2,0,
   2437                               GetPaletteAdrByColorIndex(0),
   2438                               GetPaletteAdrByColorIndex(0));
   \   000000F0   0000A0E3           MOV      R0,#+0
   \   000000F4   2E0100EF           SWI      +302
   \   000000F8   0070A0E1           MOV      R7,R0
   \   000000FC   0000A0E3           MOV      R0,#+0
   \   00000100   2E0100EF           SWI      +302
   \   00000104   0080A0E1           MOV      R8,R0
   \   00000108   0500A0E3           MOV      R0,#+5
   \   0000010C   C50100EF           SWI      +453
   \   00000110   00A0A0E1           MOV      R10,R0
   \   00000114   0900A0E3           MOV      R0,#+9
   \   00000118   C50100EF           SWI      +453
   \   0000011C   80002DE9           PUSH     {R7}
   \   00000120   00012DE9           PUSH     {R8}
   \   00000124   0010A0E3           MOV      R1,#+0
   \   00000128   02002DE9           PUSH     {R1}
   \   0000012C   01204BE2           SUB      R2,R11,#+1
   \   00000130   0A1046E0           SUB      R1,R6,R10
   \   00000134   023041E2           SUB      R3,R1,#+2
   \   00000138   801046E0           SUB      R1,R6,R0, LSL #+1
   \   0000013C   0000A0E3           MOV      R0,#+0
   \   00000140   B40100EF           SWI      +436
   2439              pos_status = ((scr_w-1) * pl) / pm;
   2440              DrawRectangle(1,scr_h-4-2*GetFontYSIZE(FONT_SMALL_BOLD)+1,pos_status,scr_h-4-GetFontYSIZE(FONT_MEDIUM_BOLD)-3,0,
   2441                               GetPaletteAdrByColorIndex(14),
   2442                               GetPaletteAdrByColorIndex(14));  
   \   00000144   0E00A0E3           MOV      R0,#+14
   \   00000148   2E0100EF           SWI      +302
   \   0000014C   0070A0E1           MOV      R7,R0
   \   00000150   0E00A0E3           MOV      R0,#+14
   \   00000154   2E0100EF           SWI      +302
   \   00000158   0080A0E1           MOV      R8,R0
   \   0000015C   0500A0E3           MOV      R0,#+5
   \   00000160   C50100EF           SWI      +453
   \   00000164   14008DE5           STR      R0,[SP, #+20]
   \   00000168   0900A0E3           MOV      R0,#+9
   \   0000016C   C50100EF           SWI      +453
   \   00000170   00A0A0E1           MOV      R10,R0
   \   00000174   80002DE9           PUSH     {R7}
   \   00000178   00012DE9           PUSH     {R8}
   \   0000017C   0000A0E3           MOV      R0,#+0
   \   00000180   01002DE9           PUSH     {R0}
   \   00000184   1C109DE5           LDR      R1,[SP, #+28]
   \   00000188   20009DE5           LDR      R0,[SP, #+32]
   \   0000018C   000046E0           SUB      R0,R6,R0
   \   00000190   033040E2           SUB      R3,R0,#+3
   \   00000194   01004BE2           SUB      R0,R11,#+1
   \   00000198   910000E0           MUL      R0,R1,R0
   \   0000019C   18109DE5           LDR      R1,[SP, #+24]
   \   000001A0   ........           _BLF     ??div32_a,??rA??div32_a
   \   000001A4   0120A0E1           MOV      R2,R1
   \   000001A8   8A0046E0           SUB      R0,R6,R10, LSL #+1
   \   000001AC   011080E2           ADD      R1,R0,#+1
   \   000001B0   0100A0E3           MOV      R0,#+1
   \   000001B4   B40100EF           SWI      +436
   2443              wstrcatprintf(data->ws1,"\nLoading images...");
   \   000001B8   340094E5           LDR      R0,[R4, #+52]
   \   000001BC   F41085E2           ADD      R1,R5,#+244
   \   000001C0   160200EF           SWI      +534
   \   000001C4   18D08DE2           ADD      SP,SP,#+24
   2444            }
   2445              if (total_smiles)
   \                     ??onRedraw_1:
   \   000001C8   84019FE5           LDR      R0,??onRedraw_0+0x8  ;; total_smiles
   \   000001CC   001090E5           LDR      R1,[R0, #+0]
   \   000001D0   000051E3           CMP      R1,#+0
   \   000001D4   0300000A           BEQ      ??onRedraw_2
   2446            {
   2447              wstrcatprintf(data->ws1,"\nLoaded %d smiles",total_smiles);
   \   000001D8   002090E5           LDR      R2,[R0, #+0]
   \   000001DC   340094E5           LDR      R0,[R4, #+52]
   \   000001E0   E01085E2           ADD      R1,R5,#+224
   \   000001E4   160200EF           SWI      +534
   2448            }
   2449            if (xstatuses_load)
   \                     ??onRedraw_2:
   \   000001E8   68019FE5           LDR      R0,??onRedraw_0+0xC  ;; xstatuses_load
   \   000001EC   000090E5           LDR      R0,[R0, #+0]
   \   000001F0   000050E3           CMP      R0,#+0
   \   000001F4   0400000A           BEQ      ??onRedraw_3
   2450            {
   2451              wstrcatprintf(data->ws1,"\nLoaded %d xstatus",total_xstatuses);
   \   000001F8   ........           LDR      R0,??DataTable88  ;; total_xstatuses
   \   000001FC   CC1085E2           ADD      R1,R5,#+204
   \   00000200   002090E5           LDR      R2,[R0, #+0]
   \   00000204   340094E5           LDR      R0,[R4, #+52]
   \   00000208   160200EF           SWI      +534
   2452            }
   2453            DrawString(data->ws1,3,3+YDISP,scr_w-4,scr_h-4-GetFontYSIZE(FONT_MEDIUM_BOLD),
   2454          	     FONT_SMALL,0,GetPaletteAdrByColorIndex(0),GetPaletteAdrByColorIndex(23));
   \                     ??onRedraw_3:
   \   0000020C   1700A0E3           MOV      R0,#+23
   \   00000210   2E0100EF           SWI      +302
   \   00000214   0080A0E1           MOV      R8,R0
   \   00000218   0000A0E3           MOV      R0,#+0
   \   0000021C   2E0100EF           SWI      +302
   \   00000220   00A0A0E1           MOV      R10,R0
   \   00000224   0500A0E3           MOV      R0,#+5
   \   00000228   C50100EF           SWI      +453
   \   0000022C   00012DE9           PUSH     {R8}
   \   00000230   00042DE9           PUSH     {R10}
   2455            wsprintf(data->ws2,percent_t,cltop? lgpData[LGP_GrsKeyClist] :empty_string);
   \   00000234   ........           LDR      R8,??DataTable113  ;; lgpData
   \   00000238   0010A0E3           MOV      R1,#+0
   \   0000023C   02002DE9           PUSH     {R1}
   \   00000240   000046E0           SUB      R0,R6,R0
   \   00000244   04704BE2           SUB      R7,R11,#+4
   \   00000248   0730A0E1           MOV      R3,R7
   \   0000024C   0810A0E3           MOV      R1,#+8
   \   00000250   02002DE9           PUSH     {R1}
   \   00000254   01002DE9           PUSH     {R0}
   \   00000258   340094E5           LDR      R0,[R4, #+52]
   \   0000025C   1B20A0E3           MOV      R2,#+27
   \   00000260   0310A0E3           MOV      R1,#+3
   \   00000264   4C0100EF           SWI      +332
   \   00000268   9C0299E5           LDR      R0,[R9, #+668]
   \   0000026C   14D08DE2           ADD      SP,SP,#+20
   \   00000270   000050E3           CMP      R0,#+0
   \   00000274   380094E5           LDR      R0,[R4, #+56]
   \   00000278   48219815           LDRNE    R2,[R8, #+328]
   \   0000027C   081085E2           ADD      R1,R5,#+8
   \   00000280   2C229905           LDREQ    R2,[R9, #+556]
   2456            DrawString(data->ws2,(scr_w >> 1),scr_h-4-GetFontYSIZE(FONT_MEDIUM_BOLD),
   2457          	     scr_w-4,scr_h-4,FONT_MEDIUM_BOLD,TEXT_ALIGNRIGHT,GetPaletteAdrByColorIndex(0),GetPaletteAdrByColorIndex(23));
   \   00000284   CBB0A0E1           ASR      R11,R11,#+1
   \   00000288   240100EF           SWI      +292
   \   0000028C   1700A0E3           MOV      R0,#+23
   \   00000290   2E0100EF           SWI      +302
   \   00000294   0090A0E1           MOV      R9,R0
   \   00000298   0000A0E3           MOV      R0,#+0
   \   0000029C   2E0100EF           SWI      +302
   \   000002A0   00A0A0E1           MOV      R10,R0
   \   000002A4   0500A0E3           MOV      R0,#+5
   \   000002A8   C50100EF           SWI      +453
   \   000002AC   00022DE9           PUSH     {R9}
   \   000002B0   00042DE9           PUSH     {R10}
   \   000002B4   0410A0E3           MOV      R1,#+4
   \   000002B8   02002DE9           PUSH     {R1}
   \   000002BC   0730A0E1           MOV      R3,R7
   \   000002C0   002046E0           SUB      R2,R6,R0
   \   000002C4   0510A0E3           MOV      R1,#+5
   \   000002C8   02002DE9           PUSH     {R1}
   \   000002CC   0610A0E1           MOV      R1,R6
   \   000002D0   02002DE9           PUSH     {R1}
   \   000002D4   380094E5           LDR      R0,[R4, #+56]
   \   000002D8   0B10A0E1           MOV      R1,R11
   \   000002DC   4C0100EF           SWI      +332
   2458            wsprintf(data->ws2,percent_t, lgpData[LGP_GrsKeyExit] );
   \   000002E0   380094E5           LDR      R0,[R4, #+56]
   \   000002E4   442198E5           LDR      R2,[R8, #+324]
   \   000002E8   081085E2           ADD      R1,R5,#+8
   \   000002EC   240100EF           SWI      +292
   2459            DrawString(data->ws2,3,scr_h-4-GetFontYSIZE(FONT_MEDIUM_BOLD),
   2460          	     scr_w>>1,scr_h-4,FONT_MEDIUM_BOLD,TEXT_ALIGNLEFT,GetPaletteAdrByColorIndex(0),GetPaletteAdrByColorIndex(23));
   \   000002F0   1700A0E3           MOV      R0,#+23
   \   000002F4   2E0100EF           SWI      +302
   \   000002F8   0050A0E1           MOV      R5,R0
   \   000002FC   0000A0E3           MOV      R0,#+0
   \   00000300   2E0100EF           SWI      +302
   \   00000304   0070A0E1           MOV      R7,R0
   \   00000308   0500A0E3           MOV      R0,#+5
   \   0000030C   C50100EF           SWI      +453
   \   00000310   20002DE9           PUSH     {R5}
   \   00000314   80002DE9           PUSH     {R7}
   \   00000318   0110A0E3           MOV      R1,#+1
   \   0000031C   02002DE9           PUSH     {R1}
   \   00000320   0B30A0E1           MOV      R3,R11
   \   00000324   002046E0           SUB      R2,R6,R0
   \   00000328   0510A0E3           MOV      R1,#+5
   \   0000032C   02002DE9           PUSH     {R1}
   \   00000330   0610A0E1           MOV      R1,R6
   \   00000334   02002DE9           PUSH     {R1}
   \   00000338   380094E5           LDR      R0,[R4, #+56]
   \   0000033C   0310A0E3           MOV      R1,#+3
   \   00000340   4C0100EF           SWI      +332
   \   00000344   28D08DE2           ADD      SP,SP,#+40
   2461          }
   2462          }
   \   00000348   F78FBDE8           POP      {R0-R2,R4-R11,PC}  ;; return
   \                     ??onRedraw_0:
   \   0000034C   ........           DC32     pictures_max
   \   00000350   ........           DC32     pictures_loaded
   \   00000354   ........           DC32     total_smiles
   \   00000358   ........           DC32     xstatuses_load
   2463          

   \                                 In segment CODE, align 4, keep-with-next
   2464          void onCreate(MAIN_GUI *data,void *(*malloc_adr)(int))
   2465          {
   \                     onCreate:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   2466            data->ws1=AllocWS(256);
   \   00000008   400FA0E3           MOV      R0,#+256
   \   0000000C   250100EF           SWI      +293
   \   00000010   340084E5           STR      R0,[R4, #+52]
   2467            data->ws2=AllocWS(256);
   \   00000014   400FA0E3           MOV      R0,#+256
   \   00000018   250100EF           SWI      +293
   \   0000001C   380084E5           STR      R0,[R4, #+56]
   2468            data->gui.state=1;
   \   00000020   0100A0E3           MOV      R0,#+1
   \   00000024   0C00C4E5           STRB     R0,[R4, #+12]
   2469          }
   \   00000028   1080BDE8           POP      {R4,PC}          ;; return
   2470          

   \                                 In segment CODE, align 4, keep-with-next
   2471          void onClose(MAIN_GUI *data,void (*mfree_adr)(void *))
   2472          {
   \                     onClose:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   2473            FreeWS(data->ws1);
   \   00000008   340094E5           LDR      R0,[R4, #+52]
   \   0000000C   290100EF           SWI      +297
   2474            FreeWS(data->ws2);
   \   00000010   380094E5           LDR      R0,[R4, #+56]
   \   00000014   290100EF           SWI      +297
   2475            data->gui.state=0;
   \   00000018   0000A0E3           MOV      R0,#+0
   \   0000001C   0C00C4E5           STRB     R0,[R4, #+12]
   2476          }
   \   00000020   1080BDE8           POP      {R4,PC}          ;; return
   2477          

   \                                 In segment CODE, align 4, keep-with-next
   2478          void onFocus(MAIN_GUI *data,void *(*malloc_adr)(int),void (*mfree_adr)(void *))
   2479          {
   \                     onFocus:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   2480          #ifdef ELKA
   2481            DisableIconBar(1);
   \   00000008   0100A0E3           MOV      R0,#+1
   \   0000000C   3B0200EF           SWI      +571
   2482          #endif
   2483            DisableIDLETMR();
   \   00000010   7F0100EF           SWI      +383
   2484            data->gui.state=2;
   \   00000014   0200A0E3           MOV      R0,#+2
   \   00000018   0C00C4E5           STRB     R0,[R4, #+12]
   2485            DirectRedrawGUI();
   \   0000001C   3F0100EF           SWI      +319
   2486          }
   \   00000020   1080BDE8           POP      {R4,PC}          ;; return
   2487          

   \                                 In segment CODE, align 4, keep-with-next
   2488          void onUnfocus(MAIN_GUI *data,void (*mfree_adr)(void *))
   2489          {
   \                     onUnfocus:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   2490          #ifdef ELKA
   2491            DisableIconBar(0);
   \   00000008   0000A0E3           MOV      R0,#+0
   \   0000000C   3B0200EF           SWI      +571
   2492          #endif
   2493            if (data->gui.state!=2)
   \   00000010   0C00D4E5           LDRB     R0,[R4, #+12]
   \   00000014   020050E3           CMP      R0,#+2
   2494              return;
   2495            data->gui.state=1;
   \   00000018   0100A003           MOVEQ    R0,#+1
   \   0000001C   0C00C405           STRBEQ   R0,[R4, #+12]
   2496          }
   \   00000020   1080BDE8           POP      {R4,PC}          ;; return
   2497          

   \                                 In segment CODE, align 4, keep-with-next
   2498          int onKey(MAIN_GUI *data,GUI_MSG *msg)
   2499          {
   \                     onKey:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0140A0E1           MOV      R4,R1
   2500            DirectRedrawGUI();
   \   0000000C   3F0100EF           SWI      +319
   2501            if (msg->gbsmsg->msg==KEY_DOWN)
   \   00000010   040094E5           LDR      R0,[R4, #+4]
   \   00000014   9320A0E3           MOV      R2,#+147
   \   00000018   041090E5           LDR      R1,[R0, #+4]
   \   0000001C   402F82E3           ORR      R2,R2,#0x100
   \   00000020   020051E1           CMP      R1,R2
   \   00000024   2C00001A           BNE      ??onKey_0
   2502            {
   2503              switch(msg->gbsmsg->submess)
   \   00000028   080090E5           LDR      R0,[R0, #+8]
   \   0000002C   ........           LDR      R4,??DataTable112  ;; create_connect
   \   00000030   ........           LDR      R7,??DataTable93  ;; contactlist_menuhdr
   \   00000034   0350A0E3           MOV      R5,#+3
   \   00000038   4860A0E3           MOV      R6,#+72
   \   0000003C   506E86E3           ORR      R6,R6,#0x500
   \   00000040   0010A0E3           MOV      R1,#+0
   \   00000044   010050E2           SUBS     R0,R0,#+1
   \   00000048   0600000A           BEQ      ??onKey_1
   \   0000004C   030050E2           SUBS     R0,R0,#+3
   \   00000050   0600000A           BEQ      ??onKey_2
   \   00000054   070050E2           SUBS     R0,R0,#+7
   \   00000058   0A00000A           BEQ      ??onKey_3
   \   0000005C   250050E2           SUBS     R0,R0,#+37
   \   00000060   1200000A           BEQ      ??onKey_4
   \   00000064   050000EA           B        ??onKey_5
   2504              {
   2505              case LEFT_SOFT:
   2506                return(1); //Происходит вызов GeneralFunc для тек. GUI -> закрытие GUI
   \                     ??onKey_1:
   \   00000068   0100A0E3           MOV      R0,#+1
   \   0000006C   F280BDE8           POP      {R1,R4-R7,PC}
   2507              case RIGHT_SOFT:
   2508                //      if (cltop) remake_clmenu();
   2509                if (cltop) create_contactlist_menu();
   \                     ??onKey_2:
   \   00000070   9C0297E5           LDR      R0,[R7, #+668]
   \   00000074   000050E3           CMP      R0,#+0
   \   00000078   F280BD08           POPEQ    {R1,R4-R7,PC}
   \   0000007C   ........           BL       create_contactlist_menu
   \                     ??onKey_5:
   \   00000080   0000A0E3           MOV      R0,#+0
   \   00000084   F280BDE8           POP      {R1,R4-R7,PC}
   2510                break;
   2511              case GREEN_BUTTON:
   2512                disautorecconect=0;
   \                     ??onKey_3:
   \   00000088   3C1287E5           STR      R1,[R7, #+572]
   2513                if ((connect_state==0)&&(sock==-1))
   \   0000008C   700297E5           LDR      R0,[R7, #+624]
   \   00000090   000050E3           CMP      R0,#+0
   \   00000094   74029705           LDREQ    R0,[R7, #+628]
   \   00000098   01007003           CMNEQ    R0,#+1
   \   0000009C   0E00001A           BNE      ??onKey_0
   2514                {
   2515                  GBS_DelTimer(&reconnect_tmr);
   \   000000A0   070086E0           ADD      R0,R6,R7
   \   000000A4   8C0100EF           SWI      +396
   2516          	DNR_TRIES=3;
   \   000000A8   B85287E5           STR      R5,[R7, #+696]
   2517                  SUBPROC((void *)create_connect);
   \   000000AC   080000EA           B        ??onKey_6
   2518                }
   2519                break;
   2520              case '0':
   2521                disautorecconect=0;
   2522                SUBPROC((void*)end_socket);
   \                     ??onKey_4:
   \   000000B0   ........           LDR      R0,??DataTable116  ;; end_socket
   \   000000B4   3C1287E5           STR      R1,[R7, #+572]
   \   000000B8   710100EF           SWI      +369
   2523                GBS_DelTimer(&reconnect_tmr);
   \   000000BC   070086E0           ADD      R0,R6,R7
   \   000000C0   8C0100EF           SWI      +396
   2524                DNR_TRIES=3;
   2525                host_counter++;
   \   000000C4   BC0297E5           LDR      R0,[R7, #+700]
   \   000000C8   B85287E5           STR      R5,[R7, #+696]
   \   000000CC   010080E2           ADD      R0,R0,#+1
   \   000000D0   BC0287E5           STR      R0,[R7, #+700]
   2526                SUBPROC((void *)create_connect);
   \                     ??onKey_6:
   \   000000D4   0400A0E1           MOV      R0,R4
   \   000000D8   710100EF           SWI      +369
   2527                break;
   2528              }
   2529            }
   2530            return(0);
   \                     ??onKey_0:
   \   000000DC   0000A0E3           MOV      R0,#+0
   \   000000E0   F280BDE8           POP      {R1,R4-R7,PC}    ;; return
   2531          }
   2532          

   \                                 In segment CODE, align 4, keep-with-next
   2533          int method8(void){return(0);}
   \                     method8:
   \   00000000   0000A0E3           MOV      R0,#+0
   \   00000004   1EFF2FE1           BX       LR               ;; return
   2534          

   \                                 In segment CODE, align 4, keep-with-next
   2535          int method9(void){return(0);}
   \                     method9:
   \   00000000   0000A0E3           MOV      R0,#+0
   \   00000004   1EFF2FE1           BX       LR               ;; return

   \                                 In segment DATA_C, align 4, align-sorted
   2536          
   2537          const void * const gui_methods[11]={
   2538            (void *)onRedraw,
   2539            (void *)onCreate,
   2540            (void *)onClose,
   2541            (void *)onFocus,
   2542            (void *)onUnfocus,
   2543            (void *)onKey,
   2544            0,
   2545            (void *)kill_data, //Destroy
   2546            (void *)method8,
   2547            (void *)method9,
   2548            0
   2549          };
   2550          
   2551          const RECT Canvas={0,0,0,0};
   \                     Canvas:
   \   00000000   000000000000       DC16 0, 0, 0, 0
   \              0000        
   \                     percent_t:
   \   00000008   257400             DC8 "%t"
   \                     percent_d:
   \   0000000B   256400             DC8 "%d"
   \   0000000E   0000               DC8 0, 0
   \   00000010   54727920746F       DC8 "Try to login..."
   \              206C6F67696E
   \              2E2E2E00    
   \   00000020   2825642F2564       DC8 "(%d/%d)"
   \              2900        
   \   00000028   446973636F6E       DC8 "Disconnected, %d bytes not sended!"
   \              6E6563746564
   \              2C2025642062
   \              79746573206E
   \              6F742073656E
   \              6465642100  
   \   0000004B   00                 DC8 0
   \   0000004C   25730ACEF8E8       DC8 "%s\012\316\370\350\341\352\340, \357\345\360\345\357\356\344\352\353\376\367\345\355\350\345 \367\345\360\345\347 %d \361\345\352\363\355\344..."
   \              E1EAE02C20EF
   \              E5F0E5EFEEE4
   \              EAEBFEF7E5ED
   \              E8E520F7E5F0
   \              E5E720256420
   \              F1E5EAF3EDE4
   \              2E2E2E00    
   \   0000007A   0000               DC8 0, 0
   \   0000007C   4750525320F1       DC8 47H, 50H, 52H, 53H, 20H, 0F1H, 0E5H, 0F1H
   \              E5F1        
   \   00000084   F1E8FF20E7E0       DC8 0F1H, 0E8H, 0FFH, 20H, 0E7H, 0E0H, 0EFH, 0F3H
   \              EFF3        
   \   0000008C   F9E5EDE02C20       DC8 0F9H, 0E5H, 0EDH, 0E0H, 2CH, 20H, 0EFH, 0EEH
   \              EFEE        
   \   00000094   E4EAEBFEF7E5       DC8 0E4H, 0EAH, 0EBH, 0FEH, 0F7H, 0E5H, 0EDH, 0E8H
   \              EDE8        
   \   0000009C   E520F7E5F0E5       DC8 0E5H, 20H, 0F7H, 0E5H, 0F0H, 0E5H, 0E7H, 20H
   \              E720        
   \   000000A4   256420F1E5EA       DC8 25H, 64H, 20H, 0F1H, 0E5H, 0EAH, 0F3H, 0EDH
   \              F3ED        
   \   000000AC   E42E2E2E00         DC8 0E4H, 2EH, 2EH, 2EH, 0
   \   000000B1   000000             DC8 0, 0, 0
   \   000000B4   4E6174494351       DC8 "NatICQ config reloaded!"
   \              20636F6E6669
   \              672072656C6F
   \              616465642100
   \   000000CC   0A4C6F616465       DC8 "\012Loaded %d xstatus"
   \              642025642078
   \              737461747573
   \              00          
   \   000000DF   00                 DC8 0
   \   000000E0   0A4C6F616465       DC8 "\012Loaded %d smiles"
   \              642025642073
   \              6D696C657300
   \   000000F2   0000               DC8 0, 0
   \   000000F4   0A4C6F616469       DC8 "\012Loading images..."
   \              6E6720696D61
   \              6765732E2E2E
   \              00          
   \   00000107   00                 DC8 0
   \   00000108   53746174653A       DC8 53H, 74H, 61H, 74H, 65H, 3AH, 20H, 25H
   \              2025        
   \   00000110   642C20525873       DC8 64H, 2CH, 20H, 52H, 58H, 73H, 74H, 61H
   \              7461        
   \   00000118   74653A202564       DC8 74H, 65H, 3AH, 20H, 25H, 64H, 0AH, 52H
   \              0A52        
   \   00000120   783A2564622C       DC8 78H, 3AH, 25H, 64H, 62H, 2CH, 20H, 54H
   \              2054        
   \   00000128   783A2564620A       DC8 78H, 3AH, 25H, 64H, 62H, 0AH, 51H, 75H
   \              5175        
   \   00000130   6575653A2025       DC8 65H, 75H, 65H, 3AH, 20H, 25H, 64H, 62H
   \              6462        
   \   00000138   0A25730A2574       DC8 0AH, 25H, 73H, 0AH, 25H, 74H, 0
   \              00          
   \   0000013F   00                 DC8 0
   \   00000140   2563257400         DC8 "%c%t"
   \   00000145   000000             DC8 0, 0, 0
   \                     ipc_my_name:
   \   00000148   4E6174494351       DC8 "NatICQ"
   \              00          
   \   0000014F   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000015F   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000      
   \                     ipc_xtask_name:
   \   00000168   585461736B00       DC8 "XTask"
   \   0000016E   0000               DC8 0, 0
   \                     x_status_change:
   \   00000170   582D53746174       DC8 "X-Status change"
   \              757320636861
   \              6E676500    
   \                     gui_methods:
   \   00000180   ............       DC32 onRedraw, onCreate, onClose, onFocus, onUnfocus, onKey, 0H
   \              ............
   \              ............
   \              ............
   \              00000000    
   \   0000019C   ............       DC32 kill_data, method8, method9, 0H
   \              ............
   \              00000000    

   \                                 In segment DATA_C, align 4, align-sorted
   \                     S_OFFLINE:
   \   00000000   4F66666C696E       DC8 "Offline"
   \              6500        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     S_INVISIBLE:
   \   00000000   496E76697369       DC8 "Invisible"
   \              626C6500    
   \   0000000A   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     S_AWAY:
   \   00000000   4177617900         DC8 "Away"
   \   00000005   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     S_NA:
   \   00000000   4E2F4100           DC8 "N/A"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     S_OCCUPIED:
   \   00000000   4F6363757069       DC8 "Occupied"
   \              656400      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     S_DND:
   \   00000000   444E4400           DC8 "DND"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     S_ONLINE:
   \   00000000   4F6E6C696E65       DC8 "Online"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     S_FFC:
   \   00000000   46464300           DC8 "FFC"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\\\">_3`:
   \   00000000   5C00               DC8 "\\"
   \   00000002   0000               DC8 0, 0
   \   00000004   ............       DC32 `?<Constant "offline.png">`, `?<Constant "invisible.png">`
   \              ....        
   \   0000000C   ............       DC32 `?<Constant "away.png">`, `?<Constant "na.png">`
   \              ....        
   \   00000014   ............       DC32 `?<Constant "occupied.png">`, `?<Constant "dnd.png">`
   \              ....        
   \   0000001C   ............       DC32 `?<Constant "depression.png">`, `?<Constant "evil.png">`
   \              ....        
   \   00000024   ............       DC32 `?<Constant "home.png">`, `?<Constant "lunch.png">`
   \              ....        
   \   0000002C   ............       DC32 `?<Constant "work.png">`, `?<Constant "online.png">`
   \              ....        
   \   00000034   ............       DC32 `?<Constant "ffc.png">`, `?<Constant "message.png">`
   \              ....        
   \   0000003C   ............       DC32 `?<Constant "unknown.png">`, `?<Constant "groupon.png">`
   \              ....        
   \   00000044   ............       DC32 `?<Constant "groupoff.png">`, `?<Constant "null.png">`
   \              ....        
   \   0000004C   ............       DC32 `?<Constant "addcont.png">`, `?<Constant "head.png">`
   \              ....        
   \   00000054   ............       DC32 `?<Constant "logo.png">`, `?<Constant "ping.png">`
   \              ....        
   \   0000005C   ............       DC32 `?<Constant "settings.png">`, `?<Constant "vis1.png">`
   \              ....        
   \   00000064   ............       DC32 `?<Constant "vis2.png">`, `?<Constant "vis3.png">`
   \              ....        
   \   0000006C   ............       DC32 `?<Constant "vis4.png">`, `?<Constant "vis5.png">`
   \              ....        

   \                                 In segment DATA_C, align 1, align-sorted
   \                     empty_str:
   \   00000000   00                 DC8 ""

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\\\">`:
   \   00000000   5C00               DC8 "\\"
   \                     I_str:
   \   00000002   4900               DC8 "I"
   \   00000004   2573746D7025       DC8 "%stmp%u.url"
   \              752E75726C00
   \   00000010   526571756573       DC8 "Request info..."
   \              7420696E666F
   \              2E2E2E00    

   \                                 In segment DATA_C, align 4, align-sorted
   \                     def_setting:
   \   00000000   25736465665F       DC8 "%sdef_settings_%d"
   \              73657474696E
   \              67735F256400
   \   00000012   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     menusoftkeys:
   \   00000000   000000000100       DC32 0, 1, 2
   \              000002000000

   \                                 In segment DATA_C, align 4, align-sorted
   \                     menu_skt:
   \   00000000   ........0000       DC32 menu_sk, 0
   \              0000        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     clmenu_skt:
   \   00000000   ........0000       DC32 clmenu_sk, 0
   \              0000        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     contactlist_menu:
   \   00000000   08000000....       DC32 8, contactlist_menu_onkey, contactlist_menu_ghook, 0H
   \              ............
   \              00000000    
   \   00000010   ............       DC32 menusoftkeys, clmenu_skt, 17, contactlist_menu_iconhndl, 0H, 0H, 0
   \              ....11000000
   \              ........0000
   \              000000000000
   \              00000000    
   \   0000002C   01000000           DC32 1
   2552          

   \                                 In segment CODE, align 4, keep-with-next
   2553          void maincsm_oncreate(CSM_RAM *data)
   2554          {
   \                     maincsm_oncreate:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0050A0E1           MOV      R5,R0
   2555            MAIN_GUI *main_gui=malloc(sizeof(MAIN_GUI));
   \   00000008   4000A0E3           MOV      R0,#+64
   2556            MAIN_CSM*csm=(MAIN_CSM*)data;
   2557            zeromem(main_gui,sizeof(MAIN_GUI));
   2558            patch_rect((RECT*)&Canvas,0,0,ScreenW()-1,ScreenH()-1);
   \   0000000C   0070A0E3           MOV      R7,#+0
   \   00000010   140000EF           SWI      +20
   \   00000014   0060A0E1           MOV      R6,R0
   \   00000018   4010A0E3           MOV      R1,#+64
   \   0000001C   1D0100EF           SWI      +285
   \   00000020   898100EF           SWI      +33161
   \   00000024   0040A0E1           MOV      R4,R0
   \   00000028   888100EF           SWI      +33160
   \   0000002C   011044E2           SUB      R1,R4,#+1
   \   00000030   C0409FE5           LDR      R4,??maincsm_oncreate_0  ;; Canvas
   \   00000034   010040E2           SUB      R0,R0,#+1
   \   00000038   007084E5           STR      R7,[R4, #+0]
   \   0000003C   B400C4E1           STRH     R0,[R4, #+4]
   \   00000040   B610C4E1           STRH     R1,[R4, #+6]
   2559            main_gui->gui.canvas=(void *)(&Canvas);
   \   00000044   004086E5           STR      R4,[R6, #+0]
   2560          //  main_gui->gui.flag30=2;
   2561            main_gui->gui.methods=(void *)gui_methods;
   \   00000048   600F84E2           ADD      R0,R4,#+384
   \   0000004C   040086E5           STR      R0,[R6, #+4]
   2562            main_gui->gui.item_ll.data_mfree=(void (*)(void *))mfree_adr();
   \   00000050   158000EF           SWI      +32789
   \   00000054   200086E5           STR      R0,[R6, #+32]
   2563            csm->csm.state=0;
   \   00000058   107085E5           STR      R7,[R5, #+16]
   2564            csm->csm.unk1=0;
   \   0000005C   147085E5           STR      R7,[R5, #+20]
   2565            maingui_id=csm->gui_id=CreateGUI(main_gui);
   \   00000060   0600A0E1           MOV      R0,R6
   \   00000064   370100EF           SWI      +311
   \   00000068   280085E5           STR      R0,[R5, #+40]
   \   0000006C   ........           LDR      R5,??DataTable93  ;; contactlist_menuhdr
   \   00000070   280285E5           STR      R0,[R5, #+552]
   2566            ews=AllocWS(16384);
   \   00000074   400CA0E3           MOV      R0,#+16384
   \   00000078   250100EF           SWI      +293
   2567            //  MutexCreate(&contactlist_mtx);
   2568            DNR_TRIES=3;
   2569            GBS_StartTimerProc(&tmr_active,TMR_SECOND*10,process_active_timer);
   \   0000007C   ........           LDR      R2,??DataTable94  ;; process_active_timer
   \   00000080   340285E5           STR      R0,[R5, #+564]
   \   00000084   0300A0E3           MOV      R0,#+3
   \   00000088   B80285E5           STR      R0,[R5, #+696]
   \   0000008C   871EA0E3           MOV      R1,#+2160
   \   00000090   C60F41E2           SUB      R0,R1,#+792
   \   00000094   050080E0           ADD      R0,R0,R5
   \   00000098   4D0000EF           SWI      +77
   2570            sprintf((char *)ipc_my_name+6,percent_d,UIN);
   \   0000009C   ........           LDR      R0,??DataTable127  ;; UIN
   \   000000A0   0B1084E2           ADD      R1,R4,#+11
   \   000000A4   002090E5           LDR      R2,[R0, #+0]
   \   000000A8   4E00A0E3           MOV      R0,#+78
   \   000000AC   400F80E3           ORR      R0,R0,#0x100
   \   000000B0   040080E0           ADD      R0,R0,R4
   \   000000B4   160000EF           SWI      +22
   2571            gipc.name_to=ipc_my_name;
   \   000000B8   790FA0E3           MOV      R0,#+484
   \   000000BC   521FA0E3           MOV      R1,#+328
   \   000000C0   042081E0           ADD      R2,R1,R4
   \   000000C4   052080E7           STR      R2,[R0, +R5]
   2572            gipc.name_from=ipc_my_name;
   \   000000C8   041081E0           ADD      R1,R1,R4
   \   000000CC   E81185E5           STR      R1,[R5, #+488]
   2573            gipc.data=(void *)-1;
   \   000000D0   0710E0E1           MVN      R1,R7
   \   000000D4   EC1185E5           STR      R1,[R5, #+492]
   2574            GBS_SendMessage(MMI_CEPID,MSG_IPC,IPC_CHECK_DOUBLERUN,&gipc);
   \   000000D8   053080E0           ADD      R3,R0,R5
   \   000000DC   0120A0E3           MOV      R2,#+1
   \   000000E0   B010A0E3           MOV      R1,#+176
   \   000000E4   DE1C81E3           ORR      R1,R1,#0xDE00
   \   000000E8   0900A0E3           MOV      R0,#+9
   \   000000EC   420C80E3           ORR      R0,R0,#0x4200
   \   000000F0   000100EF           SWI      +256
   2575          }
   \   000000F4   F080BDE8           POP      {R4-R7,PC}       ;; return
   \                     ??maincsm_oncreate_0:
   \   000000F8   ........           DC32     Canvas
   2576          

   \                                 In segment CODE, align 4, keep-with-next
   2577          void maincsm_onclose(CSM_RAM *csm)
   2578          {
   \                     maincsm_onclose:
   \   00000000   10402DE9           PUSH     {R4,LR}
   2579            WriteDefSettings();
   2580            //  SaveConfigData(successed_config_filename);
   2581          /*
   2582            #pragma segment="CONFIG_C"
   2583            unsigned int ul;
   2584            int f;
   2585            extern const CFG_HDR cfghdr0; //first var in CONFIG
   2586            void *cfg=(void*)&cfghdr0;
   2587            unsigned int len=(int)__segment_end("CONFIG_C")-(int)__segment_begin("CONFIG_C");
   2588          
   2589            if ((f=fopen("4:\\ZBin\\etc\\NATICQ.bcfg",A_ReadWrite+A_Create+A_Truncate,P_READ+P_WRITE,&ul))==-1){
   2590             f=fopen("0:\\ZBin\\etc\\NATICQ.bcfg",A_ReadWrite+A_Create+A_Truncate,P_READ+P_WRITE,&ul);
   2591            }
   2592            fwrite(f,cfg,len,&ul);
   2593            fclose(f,&ul);
   2594          */
   2595          
   2596            //  GBS_DelTimer(&tmr_dorecv);
   2597            GBS_DelTimer(&tmr_active);
   \   00000004   ........           LDR      R4,??DataTable126  ;; contactlist_menuhdr
   \   00000008   ........           BL       WriteDefSettings
   \   0000000C   5800A0E3           MOV      R0,#+88
   \   00000010   500E80E3           ORR      R0,R0,#0x500
   \   00000014   040080E0           ADD      R0,R0,R4
   \   00000018   8C0100EF           SWI      +396
   2598            GBS_DelTimer(&tmr_vibra);
   \   0000001C   3800A0E3           MOV      R0,#+56
   \   00000020   500E80E3           ORR      R0,R0,#0x500
   \   00000024   040080E0           ADD      R0,R0,R4
   \   00000028   8C0100EF           SWI      +396
   2599            GBS_DelTimer(&reconnect_tmr);
   \   0000002C   4800A0E3           MOV      R0,#+72
   \   00000030   500E80E3           ORR      R0,R0,#0x500
   \   00000034   040080E0           ADD      R0,R0,R4
   \   00000038   8C0100EF           SWI      +396
   2600            GBS_DelTimer(&tmr_illumination);
   \   0000003C   2800A0E3           MOV      R0,#+40
   \   00000040   500E80E3           ORR      R0,R0,#0x500
   \   00000044   040080E0           ADD      R0,R0,R4
   \   00000048   8C0100EF           SWI      +396
   2601            SetVibration(0);
   \   0000004C   0000A0E3           MOV      R0,#+0
   \   00000050   7C0000EF           SWI      +124
   2602            FreeTemplates();
   \   00000054   ........           BL       FreeTemplates
   2603            FreeCLIST();
   \   00000058   ........           _BLF     FreeCLIST,??FreeCLIST??rA
   2604            free_ICONS();
   \   0000005C   ........           BL       free_ICONS
   2605            //  FreeSmiles();
   2606            FreeWS(ews);
   \   00000060   340294E5           LDR      R0,[R4, #+564]
   \   00000064   290100EF           SWI      +297
   2607            FreeXStatusText();
   \   00000068   ........           _BLF     FreeXStatusText,??FreeXStatusText??rA
   2608            lgpFreeLangPack();
   \   0000006C   ........           _BLF     lgpFreeLangPack,??lgpFreeLangPack??rA
   2609            //  MutexDestroy(&contactlist_mtx);
   2610            SUBPROC((void *)FreeSmiles);
   \   00000070   24009FE5           LDR      R0,??maincsm_onclose_0  ;; FreeSmiles
   \   00000074   710100EF           SWI      +369
   2611            SUBPROC((void *)FreeXStatusesImg);
   \   00000078   20009FE5           LDR      R0,??maincsm_onclose_0+0x4  ;; FreeXStatusesImg
   \   0000007C   710100EF           SWI      +369
   2612            SUBPROC((void *)end_socket);
   \   00000080   ........           LDR      R0,??DataTable116  ;; end_socket
   \   00000084   710100EF           SWI      +369
   2613            SUBPROC((void *)ClearSendQ);
   \   00000088   ........           LDR      R0,??DataTable117  ;; ClearSendQ
   \   0000008C   710100EF           SWI      +369
   2614            SUBPROC((void *)ElfKiller);
   \   00000090   ........           LDR      R0,??DataTable128  ;; ElfKiller
   \   00000094   710100EF           SWI      +369
   2615          }
   \   00000098   1080BDE8           POP      {R4,PC}          ;; return
   \                     ??maincsm_onclose_0:
   \   0000009C   ........           DC32     FreeSmiles
   \   000000A0   ........           DC32     FreeXStatusesImg
   2616          

   \                                 In segment CODE, align 4, keep-with-next
   2617          void do_reconnect(void)
   2618          {
   2619            if (is_gprs_online)
   \                     do_reconnect:
   \   00000000   ........           LDR      R0,??DataTable126  ;; contactlist_menuhdr
   \   00000004   00402DE9           PUSH     {LR}
   \   00000008   901290E5           LDR      R1,[R0, #+656]
   \   0000000C   000051E3           CMP      R1,#+0
   \   00000010   0080BD08           POPEQ    {PC}
   2620            {
   2621              DNR_TRIES=3;
   \   00000014   0310A0E3           MOV      R1,#+3
   \   00000018   B81280E5           STR      R1,[R0, #+696]
   2622              SUBPROC((void*)create_connect);
   \   0000001C   ........           LDR      R0,??DataTable112  ;; create_connect
   \   00000020   710100EF           SWI      +369
   2623            }
   2624          }
   \   00000024   0080BDE8           POP      {PC}             ;; return
   2625          

   \                                 In segment CODE, align 4, keep-with-next
   2626          void CheckDoubleRun(void)
   2627          {
   \                     CheckDoubleRun:
   \   00000000   10402DE9           PUSH     {R4,LR}
   2628            int csm_id;
   2629            if ((csm_id=(int)(gipc.data))!=-1)
   \   00000004   ........           LDR      R4,??DataTable126  ;; contactlist_menuhdr
   \   00000008   7B0FA0E3           MOV      R0,#+492
   \   0000000C   041090E7           LDR      R1,[R0, +R4]
   \   00000010   010071E3           CMN      R1,#+1
   \   00000014   1200000A           BEQ      ??CheckDoubleRun_0
   2630            {
   2631              gipc.name_to=ipc_xtask_name;
   \   00000018   ........           LDR      R3,??DataTable105  ;; Canvas
   \   0000001C   792FA0E3           MOV      R2,#+484
   \   00000020   5ACF83E2           ADD      R12,R3,#+360
   \   00000024   04C082E7           STR      R12,[R2, +R4]
   2632              gipc.name_from=ipc_my_name;
   \   00000028   523F83E2           ADD      R3,R3,#+328
   \   0000002C   E83184E5           STR      R3,[R4, #+488]
   2633              gipc.data=(void *)csm_id;
   \   00000030   041080E7           STR      R1,[R0, +R4]
   2634              GBS_SendMessage(MMI_CEPID,MSG_IPC,IPC_XTASK_SHOW_CSM,&gipc);
   \   00000034   043082E0           ADD      R3,R2,R4
   \   00000038   0220A0E3           MOV      R2,#+2
   \   0000003C   B010A0E3           MOV      R1,#+176
   \   00000040   DE1C81E3           ORR      R1,R1,#0xDE00
   \   00000044   0900A0E3           MOV      R0,#+9
   \   00000048   420C80E3           ORR      R0,R0,#0x4200
   \   0000004C   000100EF           SWI      +256
   2635              LockSched();
   \   00000050   460100EF           SWI      +326
   2636              CloseCSM(maincsm_id);
   \   00000054   240294E5           LDR      R0,[R4, #+548]
   \   00000058   FC0100EF           SWI      +508
   2637              //ShowMSG(1,(int)LG_ALREADY_STARTED);
   2638              UnlockSched();
   \   0000005C   470100EF           SWI      +327
   \   00000060   1080BDE8           POP      {R4,PC}
   2639            }
   2640            else
   2641            {
   2642              SUBPROC((void *)InitXStatusesImg);
   \                     ??CheckDoubleRun_0:
   \   00000064   10009FE5           LDR      R0,??CheckDoubleRun_1  ;; InitXStatusesImg
   \   00000068   710100EF           SWI      +369
   2643              SUBPROC((void *)InitSmiles);
   \   0000006C   0C009FE5           LDR      R0,??CheckDoubleRun_1+0x4  ;; InitSmiles
   \   00000070   710100EF           SWI      +369
   2644              create_connect();
   \   00000074   ........           BL       create_connect
   2645            }
   2646          }
   \   00000078   1080BDE8           POP      {R4,PC}          ;; return
   \                     ??CheckDoubleRun_1:
   \   0000007C   ........           DC32     InitXStatusesImg
   \   00000080   ........           DC32     InitSmiles
   2647          

   \                                 In segment CODE, align 4, keep-with-next
   2648          int maincsm_onmessage(CSM_RAM *data,GBS_MSG *msg)
   2649          {
   \                     maincsm_onmessage:
   \   00000000   F14F2DE9           PUSH     {R0,R4-R11,LR}
   \   00000004   14D04DE2           SUB      SP,SP,#+20
   \   00000008   ........           LDR      R4,??DataTable126  ;; contactlist_menuhdr
   \   0000000C   ........           LDR      R7,??DataTable105  ;; Canvas
   \   00000010   0180A0E1           MOV      R8,R1
   \   00000014   040098E5           LDR      R0,[R8, #+4]
   \   00000018   0050A0E3           MOV      R5,#+0
   \   0000001C   526FA0E3           MOV      R6,#+328
   \   00000020   B010A0E3           MOV      R1,#+176
   \   00000024   DE1C81E3           ORR      R1,R1,#0xDE00
   \   00000028   010050E1           CMP      R0,R1
   \   0000002C   1700001A           BNE      ??maincsm_onmessage_2
   2650            extern const int VIBR_ON_CONNECT;
   2651          
   2652            //  char ss[100];
   2653            MAIN_CSM *csm=(MAIN_CSM*)data;
   2654            {
   2655              //IPC
   2656              if (msg->msg==MSG_IPC)
   2657              {
   2658                IPC_REQ *ipc;
   2659                if ((ipc=(IPC_REQ*)msg->data0))
   \   00000030   0C9098E5           LDR      R9,[R8, #+12]
   \   00000034   000059E3           CMP      R9,#+0
   \   00000038   1400000A           BEQ      ??maincsm_onmessage_2
   2660                {
   2661          	if (strcmp_nocase(ipc->name_to,ipc_my_name)==0)
   \   0000003C   000099E5           LDR      R0,[R9, #+0]
   \   00000040   071086E0           ADD      R1,R6,R7
   \   00000044   ........           _BLF     strcmp_nocase,??strcmp_nocase??rA
   \   00000048   000050E3           CMP      R0,#+0
   \   0000004C   0F00001A           BNE      ??maincsm_onmessage_2
   2662          	{
   2663          	  switch (msg->submess)
   \   00000050   081098E5           LDR      R1,[R8, #+8]
   \   00000054   040099E5           LDR      R0,[R9, #+4]
   \   00000058   08A099E5           LDR      R10,[R9, #+8]
   \   0000005C   011041E2           SUB      R1,R1,#+1
   \   00000060   060051E3           CMP      R1,#+6
   \   00000064   0900008A           BHI      ??maincsm_onmessage_2
   \   00000068   012F8FE2           ADR      R2,??maincsm_onmessage_0
   \   0000006C   0120D2E7           LDRB     R2,[R2, R1]
   \   00000070   02F18FE0           ADD      PC,PC,R2, LSL #+2
   \                     ??maincsm_onmessage_0:
   \   00000074   011F262B           DC8      +1,+31,+38,+43
   \   00000078   53066C00           DC8      +83,+6,+108,+0
   2664          	  {
   2665          	  case IPC_CHECK_DOUBLERUN:
   2666          	    //Если приняли свое собственное сообщение, значит запускаем чекер
   2667          	    if (ipc->name_from==ipc_my_name) SUBPROC((void *)CheckDoubleRun);
   \                     ??maincsm_onmessage_3:
   \   0000007C   071086E0           ADD      R1,R6,R7
   \   00000080   010050E1           CMP      R0,R1
   \   00000084   1700001A           BNE      ??maincsm_onmessage_4
   \   00000088   D4069FE5           LDR      R0,??maincsm_onmessage_5  ;; CheckDoubleRun
   \   0000008C   710100EF           SWI      +369
   2668                      else ipc->data=(void *)maincsm_id;
   2669          	    break;
   2670          	  case IPC_SMILE_PROCESSED:
   2671          	    //Только собственные смайлы ;)
   2672          	    if (ipc->name_from==ipc_my_name) SUBPROC((void *)ProcessNextSmile);
   2673          	    SMART_REDRAW();
   2674          	    break;
   2675          	  case IPC_XSTATUSIMG_PROCESSED:
   2676          	    //Только собственные иксстатусы ;)
   2677          	    if (ipc->name_from==ipc_my_name) SUBPROC((void *)ProcessNextXStatImg);
   2678          	    SMART_REDRAW();
   2679          	    break;
   2680          	  case IPC_TENSECONDS:
   2681          	    //Только свое сообщение
   2682          	    if (ipc->name_from==ipc_my_name)
   2683          	    {
   2684          	      CLIST *t=(CLIST *)cltop;
   2685          	      int f=0;
   2686          	      while(t)
   2687          	      {
   2688          		if (t->isactive)
   2689          		{
   2690          		  if (!(--(t->isactive))) f=1; //Если дошли до 0 хотя бы один раз - надо перерисовать меню
   2691          		}
   2692          		t=(CLIST *)(t->next);
   2693          	      }
   2694          	      if (f)
   2695          	      {
   2696          		CLIST *oldt=NULL;
   2697          		if (contactlist_menu_id)
   2698          		{
   2699          		  oldt=FindContactByN(GetCurMenuItem(FindGUIbyId(contactlist_menu_id,NULL)));
   2700          		}
   2701          		RecountMenu(oldt, 1);
   2702          	      }
   2703          	      if (time_to_stop_t9)
   2704          	      {
   2705          		if (!(--time_to_stop_t9))
   2706          		{
   2707          		  if (IsGuiOnTop(edchat_id)) RefreshGUI();
   2708          		}
   2709          	      }
   2710          	    }
   2711          	    break;
   2712               	  case IPC_SENDMSG:                                   //IPC_SENDMSG by BoBa 26.06.07
   2713          	    {
   2714          	      int l=strlen(((IPCMsg *)(ipc->data))->msg);
   2715          	      TPKT *msg=malloc(sizeof(PKT)+l);
   2716          	      msg->pkt.uin=((IPCMsg *)(ipc->data))->uin;
   2717          	      msg->pkt.type=T_SENDMSG;
   2718          	      msg->pkt.data_len=l;
   2719          	      memcpy(msg->data,((IPCMsg *)(ipc->data))->msg,l);
   2720          	      //slientsend=1;
   2721          	      SENDMSGCOUNT++; //Номер сообщения
   2722          	      SUBPROC((void *)SendAnswer,0,msg);
   2723          	    }
   2724                      break;
   2725          	  case IPC_FREEMSG:
   2726          	    ;
   2727          	    IPCMsg_RECVMSG *fmp=((IPCMsg_RECVMSG *)(ipc->data));
   2728          	    if (ipc->name_to!=ipc_my_name) break;
   2729          	    if (!fmp->drop_msg)
   2730          	    {
   2731          	      //Добавляем сообщение в чат
   2732          	      int l=strlen(fmp->msg);
   2733          	      TPKT *msg=malloc(sizeof(PKT)+l+1);
   2734          	      msg->pkt.uin=fmp->uin;
   2735          	      msg->pkt.type=T_RECVMSG;
   2736          	      msg->pkt.data_len=l;
   2737          	      memcpy(msg->data,fmp->msg,l+1);
   2738          	      ae(msg);
   2739          	    }
   2740          	    mfree(fmp->msg); //Освобождаем сам текст сообщения
   2741          	    mfree(fmp->ipc); //Освобождаем родительский IPC_REQ
   2742          	    mfree(fmp); //Освобождаем собственно IPCMsg_RECVMSG
   2743          	    mfree(ipc); //Освободили текущий IPC_REQ
   2744          	    return 0; //вышли нах
   2745          	  }
   2746          	}
   2747                }
   2748              }
   2749          //    UpdateCSMname();
   2750              //Нарисуем иконочку моего статуса
   2751          #define idlegui_id (((int *)icsm)[DISPLACE_OF_IDLEGUI_ID/4])
   2752          #ifdef NEWSGOLD
   2753              if(ICON_ON == 1 || ICON_ON == 3)
   \                     ??maincsm_onmessage_2:
   \   00000090   ........           LDR      R0,??DataTable120  ;; ICON_ON
   \   00000094   000090E5           LDR      R0,[R0, #+0]
   \   00000098   010050E3           CMP      R0,#+1
   \   0000009C   03005013           CMPNE    R0,#+3
   \   000000A0   A700001A           BNE      ??maincsm_onmessage_6
   2754              {
   2755          #endif
   2756              CSM_RAM *icsm=FindCSMbyID(CSM_root()->idle_id);
   \   000000A4   068100EF           SWI      +33030
   \   000000A8   040090E5           LDR      R0,[R0, #+4]
   \   000000AC   080100EF           SWI      +264
   2757              if (IsGuiOnTop(idlegui_id)/*&&IsUnlocked()*/) //Если IdleGui на самом верху
   \   000000B0   2C0090E5           LDR      R0,[R0, #+44]
   \   000000B4   350100EF           SWI      +309
   \   000000B8   000050E3           CMP      R0,#+0
   \   000000BC   A000000A           BEQ      ??maincsm_onmessage_6
   2758              {
   2759                GUI *igui=GetTopGUI();
   2760                if (igui) //И он существует
   \   000000C0   4D0100EF           SWI      +333
   \   000000C4   000050E3           CMP      R0,#+0
   \   000000C8   9D00000A           BEQ      ??maincsm_onmessage_6
   2761                {
   2762          	void *canvasdata=BuildCanvas();
   \   000000CC   F18000EF           SWI      +33009
   \   000000D0   0090A0E1           MOV      R9,R0
   2763          	int icn;
   2764          	if (messages_unread > 0)
   \   000000D4   980294E5           LDR      R0,[R4, #+664]
   \   000000D8   010050E3           CMP      R0,#+1
   \   000000DC   740000BA           BLT      ??maincsm_onmessage_7
   2765          	  icn=IS_MSG;
   \   000000E0   0D00A0E3           MOV      R0,#+13
   \   000000E4   780000EA           B        ??maincsm_onmessage_8
   \                     ??maincsm_onmessage_4:
   \   000000E8   240294E5           LDR      R0,[R4, #+548]
   \   000000EC   080089E5           STR      R0,[R9, #+8]
   \   000000F0   E6FFFFEA           B        ??maincsm_onmessage_2
   \                     ??maincsm_onmessage_9:
   \   000000F4   071086E0           ADD      R1,R6,R7
   \   000000F8   010050E1           CMP      R0,R1
   \   000000FC   0100001A           BNE      ??maincsm_onmessage_10
   \   00000100   60069FE5           LDR      R0,??maincsm_onmessage_5+0x4  ;; ProcessNextSmile
   \                     ??maincsm_onmessage_11:
   \   00000104   710100EF           SWI      +369
   \                     ??maincsm_onmessage_10:
   \   00000108   ........           BL       SMART_REDRAW
   \   0000010C   DFFFFFEA           B        ??maincsm_onmessage_2
   \                     ??maincsm_onmessage_12:
   \   00000110   071086E0           ADD      R1,R6,R7
   \   00000114   010050E1           CMP      R0,R1
   \   00000118   FAFFFF1A           BNE      ??maincsm_onmessage_10
   \   0000011C   48069FE5           LDR      R0,??maincsm_onmessage_5+0x8  ;; ProcessNextXStatImg
   \   00000120   F7FFFFEA           B        ??maincsm_onmessage_11
   \                     ??maincsm_onmessage_13:
   \   00000124   071086E0           ADD      R1,R6,R7
   \   00000128   010050E1           CMP      R0,R1
   \   0000012C   D7FFFF1A           BNE      ??maincsm_onmessage_2
   \   00000130   9C0294E5           LDR      R0,[R4, #+668]
   \   00000134   0010A0E3           MOV      R1,#+0
   \   00000138   000050E3           CMP      R0,#+0
   \   0000013C   1400000A           BEQ      ??maincsm_onmessage_14
   \                     ??maincsm_onmessage_15:
   \   00000140   B42090E5           LDR      R2,[R0, #+180]
   \   00000144   000052E3           CMP      R2,#+0
   \   00000148   0200000A           BEQ      ??maincsm_onmessage_16
   \   0000014C   012052E2           SUBS     R2,R2,#+1
   \   00000150   B42080E5           STR      R2,[R0, #+180]
   \   00000154   0110A003           MOVEQ    R1,#+1
   \                     ??maincsm_onmessage_16:
   \   00000158   000090E5           LDR      R0,[R0, #+0]
   \   0000015C   000050E3           CMP      R0,#+0
   \   00000160   F6FFFF1A           BNE      ??maincsm_onmessage_15
   \   00000164   000051E3           CMP      R1,#+0
   \   00000168   0900000A           BEQ      ??maincsm_onmessage_14
   \   0000016C   A41294E5           LDR      R1,[R4, #+676]
   \   00000170   000051E3           CMP      R1,#+0
   \   00000174   0400000A           BEQ      ??maincsm_onmessage_17
   \   00000178   A40294E5           LDR      R0,[R4, #+676]
   \   0000017C   0010A0E3           MOV      R1,#+0
   \   00000180   090200EF           SWI      +521
   \   00000184   8F0100EF           SWI      +399
   \   00000188   ........           _BLF     FindContactByN,??FindContactByN??rA
   \                     ??maincsm_onmessage_17:
   \   0000018C   0110A0E3           MOV      R1,#+1
   \   00000190   ........           BL       RecountMenu
   \                     ??maincsm_onmessage_14:
   \   00000194   C00294E5           LDR      R0,[R4, #+704]
   \   00000198   000050E3           CMP      R0,#+0
   \   0000019C   BBFFFF0A           BEQ      ??maincsm_onmessage_2
   \   000001A0   010050E2           SUBS     R0,R0,#+1
   \   000001A4   C00284E5           STR      R0,[R4, #+704]
   \   000001A8   B8FFFF1A           BNE      ??maincsm_onmessage_2
   \   000001AC   A80294E5           LDR      R0,[R4, #+680]
   \   000001B0   350100EF           SWI      +309
   \   000001B4   000050E3           CMP      R0,#+0
   \   000001B8   B4FFFF0A           BEQ      ??maincsm_onmessage_2
   \   000001BC   960100EF           SWI      +406
   \   000001C0   B2FFFFEA           B        ??maincsm_onmessage_2
   \                     ??maincsm_onmessage_18:
   \   000001C4   04009AE5           LDR      R0,[R10, #+4]
   \   000001C8   1B0000EF           SWI      +27
   \   000001CC   00A0A0E1           MOV      R10,R0
   \   000001D0   08008AE2           ADD      R0,R10,#+8
   \   000001D4   140000EF           SWI      +20
   \   000001D8   00B0A0E1           MOV      R11,R0
   \   000001DC   080099E5           LDR      R0,[R9, #+8]
   \   000001E0   0A20A0E1           MOV      R2,R10
   \   000001E4   000090E5           LDR      R0,[R0, #+0]
   \   000001E8   00008BE5           STR      R0,[R11, #+0]
   \   000001EC   0200A0E3           MOV      R0,#+2
   \   000001F0   B400CBE1           STRH     R0,[R11, #+4]
   \   000001F4   B6A0CBE1           STRH     R10,[R11, #+6]
   \   000001F8   080099E5           LDR      R0,[R9, #+8]
   \   000001FC   041090E5           LDR      R1,[R0, #+4]
   \   00000200   08008BE2           ADD      R0,R11,#+8
   \   00000204   1E0100EF           SWI      +286
   \   00000208   300294E5           LDR      R0,[R4, #+560]
   \   0000020C   0B20A0E1           MOV      R2,R11
   \   00000210   010080E2           ADD      R0,R0,#+1
   \   00000214   300284E5           STR      R0,[R4, #+560]
   \   00000218   ........           LDR      R0,??DataTable115  ;; SendAnswer
   \   0000021C   0010A0E3           MOV      R1,#+0
   \   00000220   710100EF           SWI      +369
   \   00000224   99FFFFEA           B        ??maincsm_onmessage_2
   \                     ??maincsm_onmessage_19:
   \   00000228   000099E5           LDR      R0,[R9, #+0]
   \   0000022C   071086E0           ADD      R1,R6,R7
   \   00000230   010050E1           CMP      R0,R1
   \   00000234   95FFFF1A           BNE      ??maincsm_onmessage_2
   \   00000238   08009AE5           LDR      R0,[R10, #+8]
   \   0000023C   000050E3           CMP      R0,#+0
   \   00000240   1000001A           BNE      ??maincsm_onmessage_20
   \   00000244   04009AE5           LDR      R0,[R10, #+4]
   \   00000248   1B0000EF           SWI      +27
   \   0000024C   0040A0E1           MOV      R4,R0
   \   00000250   090084E2           ADD      R0,R4,#+9
   \   00000254   140000EF           SWI      +20
   \   00000258   0050A0E1           MOV      R5,R0
   \   0000025C   00009AE5           LDR      R0,[R10, #+0]
   \   00000260   012084E2           ADD      R2,R4,#+1
   \   00000264   000085E5           STR      R0,[R5, #+0]
   \   00000268   0300A0E3           MOV      R0,#+3
   \   0000026C   B400C5E1           STRH     R0,[R5, #+4]
   \   00000270   B640C5E1           STRH     R4,[R5, #+6]
   \   00000274   04109AE5           LDR      R1,[R10, #+4]
   \   00000278   080085E2           ADD      R0,R5,#+8
   \   0000027C   1E0100EF           SWI      +286
   \   00000280   0500A0E1           MOV      R0,R5
   \   00000284   ........           _BLF     ae,??ae??rA
   \                     ??maincsm_onmessage_20:
   \   00000288   04009AE5           LDR      R0,[R10, #+4]
   \   0000028C   150000EF           SWI      +21
   \   00000290   0C009AE5           LDR      R0,[R10, #+12]
   \   00000294   150000EF           SWI      +21
   \   00000298   0A00A0E1           MOV      R0,R10
   \   0000029C   150000EF           SWI      +21
   \   000002A0   0900A0E1           MOV      R0,R9
   \   000002A4   150000EF           SWI      +21
   \   000002A8   0000A0E3           MOV      R0,#+0
   \   000002AC   18D08DE2           ADD      SP,SP,#+24
   \   000002B0   F08FBDE8           POP      {R4-R11,PC}      ;; return
   2766          	else
   2767          	{
   2768          	  switch(connect_state)
   \                     ??maincsm_onmessage_7:
   \   000002B4   700294E5           LDR      R0,[R4, #+624]
   \   000002B8   000050E3           CMP      R0,#+0
   \   000002BC   0200000A           BEQ      ??maincsm_onmessage_8
   \   000002C0   030050E2           SUBS     R0,R0,#+3
   2769          	  {
   2770          	  case 0:
   2771          	    icn=IS_OFFLINE; break;
   2772          	  case 3:
   2773          	    icn=CurrentStatus; //IS_ONLINE;
   \   000002C4   50029405           LDREQ    R0,[R4, #+592]
   2774          	    break;
   2775          	  default:
   2776          	    icn=IS_UNKNOWN; break;
   \   000002C8   0E00A013           MOVNE    R0,#+14
   2777          	  }
   2778          	}
   2779          	//Тут трохи поменял
   2780          	// by Rainmaker: Рисуем канву только для иконки и выводим в своих координатах
   2781          	DrawCanvas(canvasdata,IDLEICON_X,IDLEICON_Y,IDLEICON_X+GetImgWidth((int)S_ICONS[icn])-1,
   2782          		   IDLEICON_Y+GetImgHeight((int)S_ICONS[icn])-1,1);
   \                     ??maincsm_onmessage_8:
   \   000002CC   000184E0           ADD      R0,R4,R0, LSL #+2
   \   000002D0   00008DE5           STR      R0,[SP, #+0]
   \   000002D4   100190E5           LDR      R0,[R0, #+272]
   \   000002D8   210000EF           SWI      +33
   \   000002DC   10008DE5           STR      R0,[SP, #+16]
   \   000002E0   00009DE5           LDR      R0,[SP, #+0]
   \   000002E4   100190E5           LDR      R0,[R0, #+272]
   \   000002E8   220000EF           SWI      +34
   \   000002EC   7C149FE5           LDR      R1,??maincsm_onmessage_5+0xC  ;; IDLEICON_X
   \   000002F0   00A091E5           LDR      R10,[R1, #+0]
   \   000002F4   78149FE5           LDR      R1,??maincsm_onmessage_5+0x10  ;; IDLEICON_Y
   \   000002F8   0A0080E0           ADD      R0,R0,R10
   \   000002FC   00B091E5           LDR      R11,[R1, #+0]
   \   00000300   0110A0E3           MOV      R1,#+1
   \   00000304   02002DE9           PUSH     {R1}
   \   00000308   14109DE5           LDR      R1,[SP, #+20]
   \   0000030C   013040E2           SUB      R3,R0,#+1
   \   00000310   0B20A0E1           MOV      R2,R11
   \   00000314   0B1081E0           ADD      R1,R1,R11
   \   00000318   011041E2           SUB      R1,R1,#+1
   \   0000031C   02002DE9           PUSH     {R1}
   \   00000320   0900A0E1           MOV      R0,R9
   \   00000324   0A10A0E1           MOV      R1,R10
   \   00000328   250000EF           SWI      +37
   2783          	DrawImg(IDLEICON_X,IDLEICON_Y,S_ICONS[icn]);
   \   0000032C   08009DE5           LDR      R0,[SP, #+8]
   \   00000330   0B10A0E1           MOV      R1,R11
   \   00000334   102190E5           LDR      R2,[R0, #+272]
   \   00000338   0A00A0E1           MOV      R0,R10
   \   0000033C   230000EF           SWI      +35
   \   00000340   08D08DE2           ADD      SP,SP,#+8
   2784                }
   2785              }
   2786          #ifdef NEWSGOLD
   2787              }
   2788          #endif
   2789          
   2790            }
   2791            if (msg->msg==MSG_RECONFIGURE_REQ)
   \                     ??maincsm_onmessage_6:
   \   00000344   040098E5           LDR      R0,[R8, #+4]
   \   00000348   AF10A0E3           MOV      R1,#+175
   \   0000034C   DE1C81E3           ORR      R1,R1,#0xDE00
   \   00000350   010050E1           CMP      R0,R1
   \   00000354   1100001A           BNE      ??maincsm_onmessage_21
   2792            {
   2793              if (strcmp_nocase(successed_config_filename,(char *)msg->data0)==0)
   \   00000358   ........           LDR      R9,??DataTable125  ;; successed_config_filename
   \   0000035C   0C1098E5           LDR      R1,[R8, #+12]
   \   00000360   000099E5           LDR      R0,[R9, #+0]
   \   00000364   ........           _BLF     strcmp_nocase,??strcmp_nocase??rA
   \   00000368   000050E3           CMP      R0,#+0
   \   0000036C   0B00001A           BNE      ??maincsm_onmessage_21
   2794              {
   2795                ShowMSG(1,(int)"NatICQ config reloaded!");
   \   00000370   B41087E2           ADD      R1,R7,#+180
   \   00000374   0100A0E3           MOV      R0,#+1
   \   00000378   480100EF           SWI      +328
   2796                InitConfig(successed_config_filename);
   \   0000037C   000099E5           LDR      R0,[R9, #+0]
   \   00000380   ........           _BLF     InitConfig,??InitConfig??rA
   2797                free_ICONS();
   \   00000384   ........           BL       free_ICONS
   2798                setup_ICONS();
   \   00000388   ........           BL       setup_ICONS
   2799                ResortCL();
   \   0000038C   ........           _BLF     ResortCL,??ResortCL??rA
   2800                RecountMenu(NULL, 1);
   \   00000390   0110A0E3           MOV      R1,#+1
   \   00000394   0000A0E3           MOV      R0,#+0
   \   00000398   ........           BL       RecountMenu
   2801                UpdateCSMname();
   \   0000039C   ........           BL       UpdateCSMname
   2802                //      InitSmiles();
   2803              }
   2804            }
   2805            if (msg->msg==MSG_GUI_DESTROYED)
   \                     ??maincsm_onmessage_21:
   \   000003A0   040098E5           LDR      R0,[R8, #+4]
   \   000003A4   0E10A0E3           MOV      R1,#+14
   \   000003A8   641C81E3           ORR      R1,R1,#0x6400
   \   000003AC   010050E1           CMP      R0,R1
   \   000003B0   0E00001A           BNE      ??maincsm_onmessage_22
   2806            {
   2807              if ((int)msg->data0==csm->gui_id)
   \   000003B4   14109DE5           LDR      R1,[SP, #+20]
   \   000003B8   0C0098E5           LDR      R0,[R8, #+12]
   \   000003BC   281091E5           LDR      R1,[R1, #+40]
   \   000003C0   010050E1           CMP      R0,R1
   2808              {
   2809                csm->csm.state=-3;
   \   000003C4   14009D05           LDREQ    R0,[SP, #+20]
   \   000003C8   0210E003           MVNEQ    R1,#+2
   \   000003CC   10108005           STREQ    R1,[R0, #+16]
   2810              }
   2811              if ((int)msg->data0==contactlist_menu_id)
   \   000003D0   0C0098E5           LDR      R0,[R8, #+12]
   \   000003D4   A41294E5           LDR      R1,[R4, #+676]
   \   000003D8   010050E1           CMP      R0,R1
   2812              {
   2813                contactlist_menu_id=0;
   \   000003DC   A4528405           STREQ    R5,[R4, #+676]
   2814                prev_clmenu_itemcount=0;
   \   000003E0   AC528405           STREQ    R5,[R4, #+684]
   2815              }
   2816              if ((int)msg->data0==edchat_id)
   \   000003E4   A81294E5           LDR      R1,[R4, #+680]
   \   000003E8   010050E1           CMP      R0,R1
   2817              {
   2818                edchat_id=0;
   \   000003EC   A8528405           STREQ    R5,[R4, #+680]
   2819              }
   2820            }
   2821            if (msg->msg==MSG_HELPER_TRANSLATOR)
   \                     ??maincsm_onmessage_22:
   \   000003F0   040098E5           LDR      R0,[R8, #+4]
   \   000003F4   AE10A0E3           MOV      R1,#+174
   \   000003F8   DE1C81E3           ORR      R1,R1,#0xDE00
   \   000003FC   010050E1           CMP      R0,R1
   \   00000400   2100001A           BNE      ??maincsm_onmessage_23
   2822            {
   2823              switch((int)msg->data0)
   \   00000404   0C0098E5           LDR      R0,[R8, #+12]
   \   00000408   ........           LDR      R2,??DataTable109  ;; VIBR_ON_CONNECT
   \   0000040C   101098E5           LDR      R1,[R8, #+16]
   \   00000410   008092E5           LDR      R8,[R2, #+0]
   \   00000414   ........           LDR      R10,??DataTable110  ;; do_reconnect
   \   00000418   409E86E3           ORR      R9,R6,#0x400
   \   0000041C   B8BF86E2           ADD      R11,R6,#+736
   \   00000420   802050E2           SUBS     R2,R0,#+128
   \   00000424   0600000A           BEQ      ??maincsm_onmessage_24
   \   00000428   022052E2           SUBS     R2,R2,#+2
   \   0000042C   0200000A           BEQ      ??maincsm_onmessage_25
   \   00000430   122052E2           SUBS     R2,R2,#+18
   \   00000434   1700000A           BEQ      ??maincsm_onmessage_26
   \   00000438   1F0000EA           B        ??maincsm_onmessage_27
   2824              {
   2825              case LMAN_DISCONNECT_IND:
   2826                is_gprs_online=0;
   \                     ??maincsm_onmessage_25:
   \   0000043C   905284E5           STR      R5,[R4, #+656]
   2827                return(1);
   \   00000440   110000EA           B        ??maincsm_onmessage_23
   2828              case LMAN_CONNECT_CNF:
   2829                if(VIBR_ON_CONNECT){
   \                     ??maincsm_onmessage_24:
   \   00000444   0150A0E3           MOV      R5,#+1
   \   00000448   000058E3           CMP      R8,#+0
   \   0000044C   0100000A           BEQ      ??maincsm_onmessage_28
   2830                  vibra_count=1;
   \   00000450   605284E5           STR      R5,[R4, #+608]
   2831                  start_vibra();
   \   00000454   ........           BL       start_vibra
   2832                }
   2833                is_gprs_online=1;
   2834                //strcpy(logmsg,LG_GRGPRSUP);
   2835                snprintf(logmsg, 255, LG_GRGPRSUP, RECONNECT_TIME);
   \                     ??maincsm_onmessage_28:
   \   00000458   ........           LDR      R0,??DataTable118  ;; RECONNECT_TIME
   \   0000045C   905284E5           STR      R5,[R4, #+656]
   \   00000460   005090E5           LDR      R5,[R0, #+0]
   \   00000464   7C2087E2           ADD      R2,R7,#+124
   \   00000468   0530A0E1           MOV      R3,R5
   \   0000046C   FF10A0E3           MOV      R1,#+255
   \   00000470   04008BE0           ADD      R0,R11,R4
   \   00000474   1B0100EF           SWI      +283
   2836                GBS_StartTimerProc(&reconnect_tmr,TMR_SECOND*RECONNECT_TIME,do_reconnect);
   \   00000478   0A20A0E1           MOV      R2,R10
   \   0000047C   D800A0E3           MOV      R0,#+216
   \   00000480   900501E0           MUL      R1,R0,R5
   \   00000484   040089E0           ADD      R0,R9,R4
   \   00000488   4D0000EF           SWI      +77
   2837                return(1);
   \                     ??maincsm_onmessage_23:
   \   0000048C   0100A0E3           MOV      R0,#+1
   \                     ??maincsm_onmessage_29:
   \   00000490   18D08DE2           ADD      SP,SP,#+24
   \   00000494   F08FBDE8           POP      {R4-R11,PC}
   2838              case ENIP_DNR_HOST_BY_NAME:
   2839                if ((int)msg->data1==DNR_ID)
   \                     ??maincsm_onmessage_26:
   \   00000498   B40294E5           LDR      R0,[R4, #+692]
   \   0000049C   000051E1           CMP      R1,R0
   \   000004A0   F9FFFF1A           BNE      ??maincsm_onmessage_23
   2840                {
   2841          	if (DNR_TRIES) SUBPROC((void *)create_connect);
   \   000004A4   B80294E5           LDR      R0,[R4, #+696]
   \   000004A8   000050E3           CMP      R0,#+0
   \   000004AC   F6FFFF0A           BEQ      ??maincsm_onmessage_23
   \   000004B0   ........           LDR      R0,??DataTable112  ;; create_connect
   \                     ??maincsm_onmessage_30:
   \   000004B4   710100EF           SWI      +369
   2842                }
   2843                return(1);
   \                     ??maincsm_onmessage_31:
   \   000004B8   F3FFFFEA           B        ??maincsm_onmessage_23
   2844              }
   2845              if ((int)msg->data1==sock)
   \                     ??maincsm_onmessage_27:
   \   000004BC   742294E5           LDR      R2,[R4, #+628]
   \   000004C0   020051E1           CMP      R1,R2
   \   000004C4   F0FFFF1A           BNE      ??maincsm_onmessage_23
   2846              {
   2847                //Если наш сокет
   2848                if ((((unsigned int)msg->data0)>>28)==0xA)
   \   000004C8   201EA0E1           LSR      R1,R0,#+28
   \   000004CC   0A0051E3           CMP      R1,#+10
   \   000004D0   3500001A           BNE      ??maincsm_onmessage_32
   2849                {
   2850          	TPKT *p=(TPKT *)msg->data0;
   \   000004D4   0040A0E1           MOV      R4,R0
   2851          	//Принят пакет
   2852          	if (p->pkt.type==T_RECVMSG)
   \   000004D8   B400D4E1           LDRH     R0,[R4, #+4]
   \   000004DC   030050E3           CMP      R0,#+3
   \   000004E0   2D00001A           BNE      ??maincsm_onmessage_33
   2853          	{
   2854          	  //Просунем через IPC
   2855          
   2856          	  int l=p->pkt.data_len+1; //С завершающим \0
   \   000004E4   B600D4E1           LDRH     R0,[R4, #+6]
   \   000004E8   01B080E2           ADD      R11,R0,#+1
   2857          	  IPC_REQ *ripc=malloc(sizeof(IPC_REQ));
   \   000004EC   0C00A0E3           MOV      R0,#+12
   \   000004F0   140000EF           SWI      +20
   \   000004F4   0080A0E1           MOV      R8,R0
   2858          	  IPC_REQ *fipc=malloc(sizeof(IPC_REQ));
   \   000004F8   0C00A0E3           MOV      R0,#+12
   \   000004FC   140000EF           SWI      +20
   \   00000500   0090A0E1           MOV      R9,R0
   2859          	  IPCMsg_RECVMSG *msg=malloc(sizeof(IPCMsg_RECVMSG));
   \   00000504   1000A0E3           MOV      R0,#+16
   \   00000508   140000EF           SWI      +20
   \   0000050C   00A0A0E1           MOV      R10,R0
   2860          	  memcpy(msg->msg=malloc(l),p->data,l);
   \   00000510   0B00A0E1           MOV      R0,R11
   \   00000514   140000EF           SWI      +20
   \   00000518   04008AE5           STR      R0,[R10, #+4]
   \   0000051C   0B20A0E1           MOV      R2,R11
   \   00000520   081084E2           ADD      R1,R4,#+8
   \   00000524   1E0100EF           SWI      +286
   2861          	  msg->uin=p->pkt.uin;
   \   00000528   000094E5           LDR      R0,[R4, #+0]
   2862          	  msg->drop_msg=0;
   2863          	  msg->ipc=ripc;
   2864          	  ripc->data=msg;
   2865          	  fipc->data=msg;
   2866          	  ripc->name_from=ipc_my_name;
   2867          	  ripc->name_to=ipc_my_name;
   2868          	  fipc->name_from=ipc_my_name;
   2869          	  fipc->name_to=ipc_my_name;
   2870          	  GBS_SendMessage(MMI_CEPID,MSG_IPC,IPC_RECVMSG,ripc);
   \   0000052C   0830A0E1           MOV      R3,R8
   \   00000530   00008AE5           STR      R0,[R10, #+0]
   \   00000534   08508AE5           STR      R5,[R10, #+8]
   \   00000538   0C808AE5           STR      R8,[R10, #+12]
   \   0000053C   08A088E5           STR      R10,[R8, #+8]
   \   00000540   08A089E5           STR      R10,[R9, #+8]
   \   00000544   070086E0           ADD      R0,R6,R7
   \   00000548   040088E5           STR      R0,[R8, #+4]
   \   0000054C   000088E5           STR      R0,[R8, #+0]
   \   00000550   040089E5           STR      R0,[R9, #+4]
   \   00000554   000089E5           STR      R0,[R9, #+0]
   \   00000558   0950A0E3           MOV      R5,#+9
   \   0000055C   425C85E3           ORR      R5,R5,#0x4200
   \   00000560   0620A0E3           MOV      R2,#+6
   \   00000564   B010A0E3           MOV      R1,#+176
   \   00000568   DE1C81E3           ORR      R1,R1,#0xDE00
   \   0000056C   0500A0E1           MOV      R0,R5
   \   00000570   000100EF           SWI      +256
   2871          	  GBS_SendMessage(MMI_CEPID,MSG_IPC,IPC_FREEMSG,fipc);
   \   00000574   0930A0E1           MOV      R3,R9
   \   00000578   0720A0E3           MOV      R2,#+7
   \   0000057C   B010A0E3           MOV      R1,#+176
   \   00000580   DE1C81E3           ORR      R1,R1,#0xDE00
   \   00000584   0500A0E1           MOV      R0,R5
   \   00000588   000100EF           SWI      +256
   2872          	  mfree(p);
   \   0000058C   0400A0E1           MOV      R0,R4
   \   00000590   150000EF           SWI      +21
   \   00000594   0000A0E3           MOV      R0,#+0
   \   00000598   BCFFFFEA           B        ??maincsm_onmessage_29
   2873          	}
   2874          	else
   2875          	{
   2876          	  //Непосредственная обработка
   2877          	  ae(p);
   \                     ??maincsm_onmessage_33:
   \   0000059C   0400A0E1           MOV      R0,R4
   \   000005A0   ........           _BLF     ae,??ae??rA
   2878          	}
   2879          	return(0);
   \   000005A4   0000A0E3           MOV      R0,#+0
   \   000005A8   B8FFFFEA           B        ??maincsm_onmessage_29
   2880                }
   2881                switch((int)msg->data0)
   \                     ??maincsm_onmessage_32:
   \   000005AC   701294E5           LDR      R1,[R4, #+624]
   \   000005B0   ........           LDR      R6,??DataTable113  ;; lgpData
   \   000005B4   8A0040E2           SUB      R0,R0,#+138
   \   000005B8   050050E3           CMP      R0,#+5
   \   000005BC   B2FFFF8A           BHI      ??maincsm_onmessage_23
   \   000005C0   012F8FE2           ADR      R2,??maincsm_onmessage_1
   \   000005C4   D02092E1           LDRSB    R2,[R2, R0]
   \   000005C8   02F18FE0           ADD      PC,PC,R2, LSL #+2
   \                     ??maincsm_onmessage_1:
   \   000005CC   33332E01           DC8      +51,+51,+46,+1
   \   000005D0   3C380000           DC8      +60,+56,+0,+0
   2882                {
   2883                case ENIP_SOCK_CONNECTED:
   2884          	if (connect_state==1)
   \                     ??maincsm_onmessage_34:
   \   000005D4   010051E3           CMP      R1,#+1
   \   000005D8   2600001A           BNE      ??maincsm_onmessage_35
   2885          	{
   2886          	  if(VIBR_ON_CONNECT){
   \   000005DC   000058E3           CMP      R8,#+0
   \   000005E0   0200000A           BEQ      ??maincsm_onmessage_36
   2887                      vibra_count=2;
   \   000005E4   0200A0E3           MOV      R0,#+2
   \   000005E8   600284E5           STR      R0,[R4, #+608]
   2888              	    start_vibra();
   \   000005EC   ........           BL       start_vibra
   2889                    }
   2890          	  //Соединение установленно, посылаем пакет login
   2891          	  strcpy(logmsg, LG_GRTRYLOGIN);
   \                     ??maincsm_onmessage_36:
   \   000005F0   101087E2           ADD      R1,R7,#+16
   \   000005F4   04008BE0           ADD      R0,R11,R4
   \   000005F8   1A0000EF           SWI      +26
   2892          	  {
   2893          	    SUBPROC((void *)ab,0,0);
   \   000005FC   74019FE5           LDR      R0,??maincsm_onmessage_5+0x14  ;; ab
   \   00000600   0020A0E3           MOV      R2,#+0
   \   00000604   0210A0E1           MOV      R1,R2
   \   00000608   710100EF           SWI      +369
   2894          	  }
   2895          	  GROUP_CACHE=0;
   \   0000060C   A05284E5           STR      R5,[R4, #+672]
   2896          	  SENDMSGCOUNT=0; //Начинаем отсчет
   \   00000610   305284E5           STR      R5,[R4, #+560]
   2897          	  if (!FindGroupByID(0)) AddGroup(0,lgpData[LGP_GroupNotInList]);
   \   00000614   0500A0E1           MOV      R0,R5
   \   00000618   ........           _BLF     FindGroupByID,??FindGroupByID??rA
   \   0000061C   000050E3           CMP      R0,#+0
   \   00000620   0100001A           BNE      ??maincsm_onmessage_37
   \   00000624   141096E5           LDR      R1,[R6, #+20]
   \   00000628   ........           _BLF     AddGroup,??AddGroup??rA
   2898                    extern const int b_loopback;
   2899                    if (b_loopback ==1)
   \                     ??maincsm_onmessage_37:
   \   0000062C   48019FE5           LDR      R0,??maincsm_onmessage_5+0x18  ;; b_loopback
   \   00000630   000090E5           LDR      R0,[R0, #+0]
   \   00000634   010050E3           CMP      R0,#+1
   \   00000638   0A00001A           BNE      ??maincsm_onmessage_38
   2900                    {
   2901                      if (!FindContactByUin(UIN)) AddContact(UIN, lgpData[LGP_ClLoopback], 0,1);
   \   0000063C   ........           LDR      R0,??DataTable127  ;; UIN
   \   00000640   004090E5           LDR      R4,[R0, #+0]
   \   00000644   0400A0E1           MOV      R0,R4
   \   00000648   ........           _BLF     FindContactByUin,??FindContactByUin??rA
   \   0000064C   000050E3           CMP      R0,#+0
   \   00000650   0400001A           BNE      ??maincsm_onmessage_38
   \   00000654   101096E5           LDR      R1,[R6, #+16]
   \   00000658   0130A0E3           MOV      R3,#+1
   \   0000065C   0020A0E3           MOV      R2,#+0
   \   00000660   0400A0E1           MOV      R0,R4
   \   00000664   ........           _BLF     AddContact,??AddContact??rA
   2902                    }
   2903          	  SUBPROC((void *)LoadLocalCL);
   \                     ??maincsm_onmessage_38:
   \   00000668   10019FE5           LDR      R0,??maincsm_onmessage_5+0x1C  ;; LoadLocalCL
   \   0000066C   710100EF           SWI      +369
   2904          	  SMART_REDRAW();
   \   00000670   ........           BL       SMART_REDRAW
   \   00000674   84FFFFEA           B        ??maincsm_onmessage_23
   2905          	}
   2906          	else
   2907          	{
   2908          	  ShowMSG(1,(int)lgpData[LGP_MsgIllegmsgcon]);
   \                     ??maincsm_onmessage_35:
   \   00000678   181196E5           LDR      R1,[R6, #+280]
   \                     ??maincsm_onmessage_39:
   \   0000067C   0100A0E3           MOV      R0,#+1
   \   00000680   480100EF           SWI      +328
   \   00000684   80FFFFEA           B        ??maincsm_onmessage_23
   2909          	}
   2910          	break;
   2911                case ENIP_SOCK_DATA_READ:
   2912          	if (connect_state>=2)
   \                     ??maincsm_onmessage_40:
   \   00000688   020051E3           CMP      R1,#+2
   2913          	{
   2914          	  //Если посылали send
   2915          	  SUBPROC((void *)get_answer);
   \   0000068C   F0009FA5           LDRGE    R0,??maincsm_onmessage_5+0x20  ;; get_answer
   \   00000690   87FFFFAA           BGE      ??maincsm_onmessage_30
   2916          	  //SMART_REDRAW();
   2917          	}
   2918          	else
   2919          	{
   2920          	  ShowMSG(1,(int)lgpData[LGP_MsgIllegmsgrea]);
   \   00000694   1C1196E5           LDR      R1,[R6, #+284]
   \   00000698   F7FFFFEA           B        ??maincsm_onmessage_39
   2921          	}
   2922          	break;
   2923                case ENIP_BUFFER_FREE:
   2924                case ENIP_BUFFER_FREE1:
   2925          	SUBPROC((void *)SendAnswer,0,0);
   \                     ??maincsm_onmessage_41:
   \   0000069C   ........           LDR      R0,??DataTable115  ;; SendAnswer
   \   000006A0   0020A0E3           MOV      R2,#+0
   \   000006A4   0210A0E1           MOV      R1,R2
   \   000006A8   710100EF           SWI      +369
   \   000006AC   76FFFFEA           B        ??maincsm_onmessage_23
   2926          	break;
   2927                case ENIP_SOCK_REMOTE_CLOSED:
   2928          	//Закрыт со стороны сервера
   2929          	if (connect_state)
   \                     ??maincsm_onmessage_42:
   \   000006B0   000051E3           CMP      R1,#+0
   \   000006B4   74FFFF0A           BEQ      ??maincsm_onmessage_23
   2930          	  SUBPROC((void *)end_socket);
   \   000006B8   ........           LDR      R0,??DataTable116  ;; end_socket
   \   000006BC   7CFFFFEA           B        ??maincsm_onmessage_30
   2931          	break;
   2932                case ENIP_SOCK_CLOSED:
   2933          	//strcpy(logmsg, "No connection");
   2934          	//Dump not received
   2935          /*	if (RXstate>(-(int)sizeof(PKT)))
   2936          	{
   2937          	  unsigned int err;
   2938          	  int f=fopen("4:\\NATICQ.dump",A_ReadWrite+A_Create+A_Truncate+A_BIN,P_READ+P_WRITE,&err);
   2939          	  if (f!=-1)
   2940          	  {
   2941          	    fwrite(f,&RXbuf,RXstate+sizeof(PKT),&err);
   2942          	    fclose(f,&err);
   2943          	  }
   2944          	}*/
   2945          	FillAllOffline();
   \                     ??maincsm_onmessage_43:
   \   000006C0   ........           _BLF     FillAllOffline,??FillAllOffline??rA
   2946          	RecountMenu(NULL, 1);
   \   000006C4   0110A0E3           MOV      R1,#+1
   \   000006C8   0000A0E3           MOV      R0,#+0
   \   000006CC   ........           BL       RecountMenu
   2947          	connect_state=0;
   \   000006D0   705284E5           STR      R5,[R4, #+624]
   2948          	sock=-1;
   \   000006D4   0500E0E1           MVN      R0,R5
   \   000006D8   740284E5           STR      R0,[R4, #+628]
   2949                  if(VIBR_ON_CONNECT){
   \   000006DC   000058E3           CMP      R8,#+0
   \   000006E0   0200000A           BEQ      ??maincsm_onmessage_44
   2950                    vibra_count=4;
   \   000006E4   0400A0E3           MOV      R0,#+4
   \   000006E8   600284E5           STR      R0,[R4, #+608]
   2951          	  start_vibra();
   \   000006EC   ........           BL       start_vibra
   2952                  }
   2953          	if (sendq_p)
   \                     ??maincsm_onmessage_44:
   \   000006F0   8C0294E5           LDR      R0,[R4, #+652]
   \   000006F4   000050E3           CMP      R0,#+0
   \   000006F8   0400000A           BEQ      ??maincsm_onmessage_45
   2954          	{
   2955          	  snprintf(logmsg,255,"Disconnected, %d bytes not sended!",sendq_l);
   \   000006FC   883294E5           LDR      R3,[R4, #+648]
   \   00000700   282087E2           ADD      R2,R7,#+40
   \   00000704   FF10A0E3           MOV      R1,#+255
   \   00000708   04008BE0           ADD      R0,R11,R4
   \   0000070C   1B0100EF           SWI      +283
   2956          	}
   2957          	SMART_REDRAW();
   \                     ??maincsm_onmessage_45:
   \   00000710   ........           BL       SMART_REDRAW
   2958          	SUBPROC((void *)ClearSendQ);
   \   00000714   ........           LDR      R0,??DataTable117  ;; ClearSendQ
   \   00000718   710100EF           SWI      +369
   2959          	if (!disautorecconect)
   \   0000071C   3C0294E5           LDR      R0,[R4, #+572]
   \   00000720   000050E3           CMP      R0,#+0
   \   00000724   58FFFF1A           BNE      ??maincsm_onmessage_23
   2960                  {
   2961                    GBS_StartTimerProc(&reconnect_tmr,TMR_SECOND*RECONNECT_TIME,do_reconnect);
   \   00000728   ........           LDR      R0,??DataTable118  ;; RECONNECT_TIME
   \   0000072C   0A20A0E1           MOV      R2,R10
   \   00000730   005090E5           LDR      R5,[R0, #+0]
   \   00000734   D800A0E3           MOV      R0,#+216
   \   00000738   900501E0           MUL      R1,R0,R5
   \   0000073C   040089E0           ADD      R0,R9,R4
   \   00000740   4D0000EF           SWI      +77
   2962                    snprintf(logmsg,255,LG_GRRECONNECT,logmsg, RECONNECT_TIME);
   \   00000744   20002DE9           PUSH     {R5}
   \   00000748   04308BE0           ADD      R3,R11,R4
   \   0000074C   4C2087E2           ADD      R2,R7,#+76
   \   00000750   FF10A0E3           MOV      R1,#+255
   \   00000754   04008BE0           ADD      R0,R11,R4
   \   00000758   1B0100EF           SWI      +283
   \   0000075C   04D08DE2           ADD      SP,SP,#+4
   \   00000760   49FFFFEA           B        ??maincsm_onmessage_23
   \                     ??maincsm_onmessage_5:
   \   00000764   ........           DC32     CheckDoubleRun
   \   00000768   ........           DC32     ProcessNextSmile
   \   0000076C   ........           DC32     ProcessNextXStatImg
   \   00000770   ........           DC32     IDLEICON_X
   \   00000774   ........           DC32     IDLEICON_Y
   \   00000778   ........           DC32     ab
   \   0000077C   ........           DC32     b_loopback
   \   00000780   ........           DC32     LoadLocalCL
   \   00000784   ........           DC32     get_answer
   2963                  }
   2964          	break;
   2965                }
   2966              }
   2967            }
   2968            return(1);
   2969          }
   2970          

   \                                 In segment DATA_C, align 4, align-sorted
   2971          const int minus11=-11;
   \                     minus11:
   \   00000000   F5FFFFFF           DC32 -11
   2972          

   \                                 In segment DATA_Z, align 4, align-sorted
   2973          unsigned short maincsm_name_body[140];
   \                     maincsm_name_body:
   \   00000000                      DS8 280
   2974          
   2975          #ifdef NEWSGOLD
   2976          typedef struct
   2977          {
   2978            char check_name[8];
   2979            int addr;
   2980          }ICONBAR_H;
   2981          

   \                                 In segment CODE, align 4, keep-with-next
   2982          static void addIconBar(short* num)
   2983          {
   \                     addIconBar:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   2984            if(ICON_ON > 1)
   \   00000004   ........           LDR      R5,??DataTable126  ;; contactlist_menuhdr
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   ........           LDR      R0,??DataTable120  ;; ICON_ON
   \   00000010   000090E5           LDR      R0,[R0, #+0]
   \   00000014   020050E3           CMP      R0,#+2
   \   00000018   0E00003A           BCC      ??addIconBar_0
   2985            {
   2986              int icn;
   2987              if (messages_unread >0)
   \   0000001C   980295E5           LDR      R0,[R5, #+664]
   \   00000020   010050E3           CMP      R0,#+1
   2988              icn=IS_MSG;
   \   00000024   0D00A0A3           MOVGE    R0,#+13
   \   00000028   050000AA           BGE      ??addIconBar_1
   2989              else
   2990              {
   2991                switch(connect_state)
   \   0000002C   700295E5           LDR      R0,[R5, #+624]
   \   00000030   000050E3           CMP      R0,#+0
   \   00000034   0200000A           BEQ      ??addIconBar_1
   \   00000038   030050E2           SUBS     R0,R0,#+3
   2992                {
   2993                  case 0:
   2994                  icn=IS_OFFLINE; break;
   2995                  case 3:
   2996                  icn=CurrentStatus; //IS_ONLINE;
   \   0000003C   50029505           LDREQ    R0,[R5, #+592]
   2997                  break;
   2998                  default:
   2999                  icn=IS_UNKNOWN; break;
   \   00000040   0E00A013           MOVNE    R0,#+14
   3000                }
   3001              }
   3002              AddIconToIconBar(ST_FIRST+icn,num);
   \                     ??addIconBar_1:
   \   00000044   38209FE5           LDR      R2,??addIconBar_2  ;; ST_FIRST
   \   00000048   0410A0E1           MOV      R1,R4
   \   0000004C   002092E5           LDR      R2,[R2, #+0]
   \   00000050   020080E0           ADD      R0,R0,R2
   \   00000054   270000EF           SWI      +39
   3003            }
   3004            if(XST_IC) AddIconToIconBar(X_FIRST+CurrentXStatus,num);
   \                     ??addIconBar_0:
   \   00000058   28009FE5           LDR      R0,??addIconBar_2+0x4  ;; XST_IC
   \   0000005C   000090E5           LDR      R0,[R0, #+0]
   \   00000060   000050E3           CMP      R0,#+0
   \   00000064   3080BD08           POPEQ    {R4,R5,PC}
   \   00000068   1C009FE5           LDR      R0,??addIconBar_2+0x8  ;; X_FIRST
   \   0000006C   542295E5           LDR      R2,[R5, #+596]
   \   00000070   000090E5           LDR      R0,[R0, #+0]
   \   00000074   0410A0E1           MOV      R1,R4
   \   00000078   000082E0           ADD      R0,R2,R0
   \   0000007C   270000EF           SWI      +39
   3005          }
   \   00000080   3080BDE8           POP      {R4,R5,PC}       ;; return
   \                     ??addIconBar_2:
   \   00000084   ........           DC32     ST_FIRST
   \   00000088   ........           DC32     XST_IC
   \   0000008C   ........           DC32     X_FIRST
   3006          #endif
   3007          
   3008          
   3009          struct
   3010          {
   3011            CSM_DESC maincsm;
   3012            WSHDR maincsm_name;
   3013          #ifdef NEWSGOLD
   3014            ICONBAR_H iconbar_handler;
   3015          #endif
   3016          
   3017          }MAINCSM =
   3018          {
   3019            {
   3020              maincsm_onmessage,
   3021              maincsm_oncreate,
   3022          #ifdef NEWSGOLD
   3023          0,
   3024          0,
   3025          0,
   3026          0,
   3027          #endif
   3028          maincsm_onclose,
   3029          sizeof(MAIN_CSM),
   3030          1,
   3031          &minus11
   3032            },
   3033            {
   3034              maincsm_name_body,
   3035              NAMECSM_MAGIC1,
   3036              NAMECSM_MAGIC2,
   3037              0x0,
   3038              139
   3039          #ifdef NEWSGOLD
   3040            },
   3041            {
   3042              "IconBar"
   3043            }
   3044          #else
   3045            }
   3046          #endif
   3047          };
   3048          

   \                                 In segment CODE, align 4, keep-with-next
   3049          void UpdateCSMname()
   3050          {
   \                     UpdateCSMname:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   3051            // tridog, 09.05.09
   3052            // Поскольку у нас теперь может быть запущено несколько наташ сразу, старый
   3053            // вариант имени CSM состоящий из UIN'a не очень удобен.
   3054            extern const int b__task_unread_icon;
   3055            extern const int b__task_unread_count;
   3056            extern const int task_show;
   3057            // Формируем заголовок
   3058            WSHDR *task_name=AllocWS(512);
   3059            // Иконка при непрочитанных
   3060            if(b__task_unread_icon)
   \   00000004   4C519FE5           LDR      R5,??UpdateCSMname_0+0x4  ;; `?<Constant "%w %d">`
   \   00000008   ........           LDR      R6,??DataTable126  ;; contactlist_menuhdr
   \   0000000C   800FA0E3           MOV      R0,#+512
   \   00000010   250100EF           SWI      +293
   \   00000014   0040A0E1           MOV      R4,R0
   \   00000018   3C019FE5           LDR      R0,??UpdateCSMname_0+0x8  ;; b__task_unread_icon
   \   0000001C   007090E5           LDR      R7,[R0, #+0]
   \   00000020   000057E3           CMP      R7,#+0
   \   00000024   0800000A           BEQ      ??UpdateCSMname_1
   3061            {
   3062              if(messages_unread > 0)
   \   00000028   980296E5           LDR      R0,[R6, #+664]
   \   0000002C   010050E3           CMP      R0,#+1
   \   00000030   050000BA           BLT      ??UpdateCSMname_1
   3063              {
   3064          #ifdef NEWSGOLD
   3065                wsprintf(task_name, "%w%c ", task_name, 0xE16D); 
   \   00000034   6D30A0E3           MOV      R3,#+109
   \   00000038   E13C83E3           ORR      R3,R3,#0xE100
   \   0000003C   0420A0E1           MOV      R2,R4
   \   00000040   1C1085E2           ADD      R1,R5,#+28
   \   00000044   0400A0E1           MOV      R0,R4
   \   00000048   240100EF           SWI      +292
   3066          #else
   3067                wsprintf(task_name, "%w%c ", task_name, 0xE17A);
   3068          #endif
   3069              }
   3070            }
   3071            // Количество непрочитанных
   3072            if(b__task_unread_count)
   \                     ??UpdateCSMname_1:
   \   0000004C   0C019FE5           LDR      R0,??UpdateCSMname_0+0xC  ;; b__task_unread_count
   \   00000050   000090E5           LDR      R0,[R0, #+0]
   \   00000054   000050E3           CMP      R0,#+0
   \   00000058   0600000A           BEQ      ??UpdateCSMname_2
   3073            {
   3074              if (messages_unread > 0)
   \   0000005C   983296E5           LDR      R3,[R6, #+664]
   \   00000060   010053E3           CMP      R3,#+1
   \   00000064   030000BA           BLT      ??UpdateCSMname_2
   3075              {
   3076                wsprintf(task_name, "%w[%d] ", task_name, messages_unread);
   \   00000068   0420A0E1           MOV      R2,R4
   \   0000006C   141085E2           ADD      R1,R5,#+20
   \   00000070   0400A0E1           MOV      R0,R4
   \   00000074   240100EF           SWI      +292
   3077              }
   3078            }
   3079            // NatICQ
   3080            if ((!messages_unread) | (!b__task_unread_icon))
   \                     ??UpdateCSMname_2:
   \   00000078   980296E5           LDR      R0,[R6, #+664]
   \   0000007C   000050E3           CMP      R0,#+0
   \   00000080   00005713           CMPNE    R7,#+0
   \   00000084   0300001A           BNE      ??UpdateCSMname_3
   3081            {
   3082              wsprintf(task_name, "%wNatICQ:", task_name);
   \   00000088   0420A0E1           MOV      R2,R4
   \   0000008C   081085E2           ADD      R1,R5,#+8
   \   00000090   0400A0E1           MOV      R0,R4
   \   00000094   240100EF           SWI      +292
   3083            }
   3084            // UIN
   3085            if(task_show == 0)
   \                     ??UpdateCSMname_3:
   \   00000098   C4009FE5           LDR      R0,??UpdateCSMname_0+0x10  ;; task_show
   \   0000009C   000090E5           LDR      R0,[R0, #+0]
   \   000000A0   000050E3           CMP      R0,#+0
   \   000000A4   0600001A           BNE      ??UpdateCSMname_4
   3086            {
   3087              wsprintf(task_name, "%w %d", task_name, UIN);
   \   000000A8   ........           LDR      R0,??DataTable127  ;; UIN
   \   000000AC   0420A0E1           MOV      R2,R4
   \   000000B0   003090E5           LDR      R3,[R0, #+0]
   \   000000B4   0510A0E1           MOV      R1,R5
   \   000000B8   0400A0E1           MOV      R0,R4
   \   000000BC   240100EF           SWI      +292
   \   000000C0   1C0000EA           B        ??UpdateCSMname_5
   3088            }
   3089            // Profile name
   3090            else
   3091            {
   3092              char *s_profile_name = malloc(strlen(successed_config_filename) * 2);
   \                     ??UpdateCSMname_4:
   \   000000C4   ........           LDR      R7,??DataTable125  ;; successed_config_filename
   \   000000C8   000097E5           LDR      R0,[R7, #+0]
   \   000000CC   1B0000EF           SWI      +27
   \   000000D0   8000A0E1           LSL      R0,R0,#+1
   \   000000D4   140000EF           SWI      +20
   3093              strcpy(s_profile_name, successed_config_filename);
   \   000000D8   001097E5           LDR      R1,[R7, #+0]
   \   000000DC   0080A0E1           MOV      R8,R0
   \   000000E0   1A0000EF           SWI      +26
   3094              char *p = strrchr(s_profile_name, '\\') + 1;
   \   000000E4   5C10A0E3           MOV      R1,#+92
   \   000000E8   0800A0E1           MOV      R0,R8
   \   000000EC   170100EF           SWI      +279
   \   000000F0   017080E2           ADD      R7,R0,#+1
   3095              del_ext(p);
   \   000000F4   0700A0E1           MOV      R0,R7
   \   000000F8   ........           _BLF     del_ext,??del_ext??rA
   3096              WSHDR *profile_name=AllocWS(256);
   \   000000FC   400FA0E3           MOV      R0,#+256
   \   00000100   250100EF           SWI      +293
   \   00000104   0090A0E1           MOV      R9,R0
   3097              str_2ws(profile_name,p,128);
   \   00000108   8020A0E3           MOV      R2,#+128
   \   0000010C   0710A0E1           MOV      R1,R7
   \   00000110   6C0100EF           SWI      +364
   3098              wsprintf(task_name, "%w %w", task_name, profile_name);
   \   00000114   0930A0E1           MOV      R3,R9
   \   00000118   0420A0E1           MOV      R2,R4
   \   0000011C   241085E2           ADD      R1,R5,#+36
   \   00000120   0400A0E1           MOV      R0,R4
   \   00000124   240100EF           SWI      +292
   3099              FreeWS(profile_name);
   \   00000128   0900A0E1           MOV      R0,R9
   \   0000012C   290100EF           SWI      +297
   3100              mfree(s_profile_name);
   \   00000130   0800A0E1           MOV      R0,R8
   \   00000134   150000EF           SWI      +21
   3101            }
   3102            // Теперь пишем его в имя CSM
   3103            wsprintf((WSHDR *)(&MAINCSM.maincsm_name),"%w",task_name);
   \                     ??UpdateCSMname_5:
   \   00000138   0420A0E1           MOV      R2,R4
   \   0000013C   041F8FE2           ADR      R1,??UpdateCSMname_0  ;; "%w"
   \   00000140   6B0F86E2           ADD      R0,R6,#+428
   \   00000144   240100EF           SWI      +292
   3104            FreeWS(task_name);
   \   00000148   0400A0E1           MOV      R0,R4
   \   0000014C   290100EF           SWI      +297
   3105          }
   \   00000150   F083BDE8           POP      {R4-R9,PC}       ;; return
   \                     ??UpdateCSMname_0:
   \   00000154   25770000           DC8      "%w",+0
   \   00000158   ........           DC32     `?<Constant "%w %d">`
   \   0000015C   ........           DC32     b__task_unread_icon
   \   00000160   ........           DC32     b__task_unread_count
   \   00000164   ........           DC32     task_show
   3106          
   3107          #ifdef NEWSGOLD

   \                                 In segment CODE, align 4, keep-with-next
   3108          void SetIconBarHandler()
   3109          {
   3110            MAINCSM.iconbar_handler.addr=(int)addIconBar;
   \                     SetIconBarHandler:
   \   00000000   08009FE5           LDR      R0,??SetIconBarHandler_0  ;; contactlist_menuhdr + 456
   \   00000004   ........           LDR      R1,??DataTable129  ;; addIconBar
   \   00000008   001080E5           STR      R1,[R0, #+0]
   3111          }
   \   0000000C   1EFF2FE1           BX       LR               ;; return
   \                     ??SetIconBarHandler_0:
   \   00000010   ........           DC32     contactlist_menuhdr + 456
   3112          #endif
   3113          

   \                                 In segment CODE, align 4, keep-with-next
   3114          void OpenConfig()
   3115          {
   \                     OpenConfig:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   3116            // tridog, 05.05.2009
   3117            // Теперь будем запускать конфиг любого расширения на редактирование
   3118            // не читая Extension.cfg
   3119            WSHDR *ws;
   3120            ws = AllocWS(256);
   \   00000004   400FA0E3           MOV      R0,#+256
   \   00000008   250100EF           SWI      +293
   \   0000000C   0040A0E1           MOV      R4,R0
   3121            WSHDR *xws;
   3122            xws=AllocWS(256);
   \   00000010   400FA0E3           MOV      R0,#+256
   \   00000014   250100EF           SWI      +293
   3123            int id;
   3124            str_2ws(xws,"bcfg",255);
   \   00000018   54109FE5           LDR      R1,??OpenConfig_0  ;; `?<Constant "bcfg">`
   \   0000001C   0050A0E1           MOV      R5,R0
   \   00000020   FF20A0E3           MOV      R2,#+255
   \   00000024   6C0100EF           SWI      +364
   3125            str_2ws(ws, successed_config_filename, 255);
   \   00000028   ........           LDR      R0,??DataTable125  ;; successed_config_filename
   \   0000002C   FF20A0E3           MOV      R2,#+255
   \   00000030   001090E5           LDR      R1,[R0, #+0]
   \   00000034   0400A0E1           MOV      R0,R4
   \   00000038   6C0100EF           SWI      +364
   3126            id=GetExtUid_ws(xws);
   \   0000003C   0500A0E1           MOV      R0,R5
   \   00000040   D00100EF           SWI      +464
   3127            TREGEXPLEXT *pr=get_regextpnt_by_uid(id);
   \   00000044   CF0100EF           SWI      +463
   \   00000048   0030A0E1           MOV      R3,R0
   3128            typedef unsigned int (*func)(WSHDR *p1, WSHDR *p2, int p3);
   3129            func myproc = (func)(pr->proc);
   3130            myproc(ws, xws, 0);
   \   0000004C   203093E5           LDR      R3,[R3, #+32]
   \   00000050   0020A0E3           MOV      R2,#+0
   \   00000054   0510A0E1           MOV      R1,R5
   \   00000058   0400A0E1           MOV      R0,R4
   \   0000005C   33FF2FE1           BLX      R3
   3131            FreeWS(ws);
   \   00000060   0400A0E1           MOV      R0,R4
   \   00000064   290100EF           SWI      +297
   3132            FreeWS(xws);
   \   00000068   0500A0E1           MOV      R0,R5
   \   0000006C   290100EF           SWI      +297
   3133            //
   3134          }
   \   00000070   3080BDE8           POP      {R4,R5,PC}       ;; return
   \                     ??OpenConfig_0:
   \   00000074   ........           DC32     `?<Constant "bcfg">`
   3135          

   \                                 In segment CODE, align 4, keep-with-next
   3136          int main(char *filename, const char *config_name)
   3137          {
   \                     main:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   3138            // filename - путь к эльфу
   3139            // config_name - путь к конфигу
   3140            MAIN_CSM main_csm;
   3141            char *s;
   3142            int len;
   3143          
   3144            // tridog, 18 april 2009
   3145            // Делаем многопрофильность
   3146            InitConfig(config_name);
   3147            //
   3148           
   3149            s=strrchr(filename,'\\');
   3150            len=(s-filename)+1;
   3151            strncpy(elf_path,filename,len);
   \   00000004   ........           LDR      R6,??DataTable126  ;; contactlist_menuhdr
   \   00000008   2CD04DE2           SUB      SP,SP,#+44
   \   0000000C   0040A0E1           MOV      R4,R0
   \   00000010   0100A0E1           MOV      R0,R1
   \   00000014   ........           _BLF     InitConfig,??InitConfig??rA
   \   00000018   5C10A0E3           MOV      R1,#+92
   \   0000001C   0400A0E1           MOV      R0,R4
   \   00000020   170100EF           SWI      +279
   \   00000024   040040E0           SUB      R0,R0,R4
   \   00000028   015080E2           ADD      R5,R0,#+1
   \   0000002C   0520A0E1           MOV      R2,R5
   \   00000030   0410A0E1           MOV      R1,R4
   \   00000034   C20F86E2           ADD      R0,R6,#+776
   \   00000038   160100EF           SWI      +278
   3152            elf_path[len]=0;
   \   0000003C   060085E0           ADD      R0,R5,R6
   \   00000040   0010A0E3           MOV      R1,#+0
   \   00000044   0813C0E5           STRB     R1,[R0, #+776]
   3153            
   3154            lgpLoadLangpack();
   \   00000048   ........           _BLF     lgpLoadLangpack,??lgpLoadLangpack??rA
   3155            
   3156            if (!UIN)
   \   0000004C   ........           LDR      R0,??DataTable127  ;; UIN
   \   00000050   000090E5           LDR      R0,[R0, #+0]
   \   00000054   000050E3           CMP      R0,#+0
   \   00000058   0C00001A           BNE      ??main_0
   3157            {
   3158              LockSched();
   \   0000005C   460100EF           SWI      +326
   3159              ShowMSG(1,(int)lgpData[LGP_MsgNoUinPass]);
   \   00000060   68009FE5           LDR      R0,??main_1      ;; lgpData + 316
   \   00000064   001090E5           LDR      R1,[R0, #+0]
   \   00000068   0100A0E3           MOV      R0,#+1
   \   0000006C   480100EF           SWI      +328
   3160              OpenConfig();
   \   00000070   ........           BL       OpenConfig
   3161              UnlockSched();
   \   00000074   470100EF           SWI      +327
   3162              lgpFreeLangPack();
   \   00000078   ........           _BLF     lgpFreeLangPack,??lgpFreeLangPack??rA
   3163              SUBPROC((void *)ElfKiller);
   \   0000007C   ........           LDR      R0,??DataTable128  ;; ElfKiller
   \   00000080   710100EF           SWI      +369
   3164              return 0;
   \   00000084   0000A0E3           MOV      R0,#+0
   \   00000088   2CD08DE2           ADD      SP,SP,#+44
   \   0000008C   7080BDE8           POP      {R4-R6,PC}
   3165            }
   3166           
   3167            ReadDefSettings();
   \                     ??main_0:
   \   00000090   ........           BL       ReadDefSettings
   3168            setup_ICONS();
   \   00000094   ........           BL       setup_ICONS
   3169            LoadXStatusText();
   \   00000098   ........           _BLF     LoadXStatusText,??LoadXStatusText??rA
   3170            UpdateCSMname();
   \   0000009C   ........           BL       UpdateCSMname
   3171          #ifdef NEWSGOLD
   3172            SetIconBarHandler();
   \   000000A0   ........           LDR      R0,??DataTable129  ;; addIconBar
   \   000000A4   C80186E5           STR      R0,[R6, #+456]
   3173          #endif
   3174            LockSched();
   \   000000A8   460100EF           SWI      +326
   3175            maincsm_id=CreateCSM(&MAINCSM.maincsm,&main_csm,0);
   \   000000AC   0020A0E3           MOV      R2,#+0
   \   000000B0   0D10A0E1           MOV      R1,SP
   \   000000B4   610F86E2           ADD      R0,R6,#+388
   \   000000B8   070100EF           SWI      +263
   \   000000BC   240286E5           STR      R0,[R6, #+548]
   3176            UnlockSched();
   \   000000C0   470100EF           SWI      +327
   3177            return 0;
   \   000000C4   0000A0E3           MOV      R0,#+0
   \   000000C8   2CD08DE2           ADD      SP,SP,#+44
   \   000000CC   7080BDE8           POP      {R4-R6,PC}       ;; return
   \                     ??main_1:
   \   000000D0   ........           DC32     lgpData + 316
   3178          }
   3179          
   3180          //===========================================================
   3181          // Edit chat
   3182          //===========================================================

   \                                 In segment CODE, align 4, keep-with-next
   3183          void edchat_locret(void){}
   \                     edchat_locret:
   \   00000000   1EFF2FE1           BX       LR               ;; return
   3184          

   \                                 In segment CODE, align 4, keep-with-next
   3185          char *ExtractAnswer(WSHDR *ws)
   3186          {
   \                     ExtractAnswer:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   3187            S_SMILES *t;
   3188            int c;
   3189            int len=0;
   3190            int scur;
   3191            char *msg=NULL;
   3192            unsigned short *wsbody=ws->wsbody;
   \   00000004   005090E5           LDR      R5,[R0, #+0]
   \   00000008   0040A0E3           MOV      R4,#+0
   3193            int wslen=wsbody[0];
   \   0000000C   B060D5E1           LDRH     R6,[R5, #+0]
   \   00000010   0070A0E3           MOV      R7,#+0
   3194            if (wslen)
   \   00000014   000056E3           CMP      R6,#+0
   \   00000018   3C00000A           BEQ      ??ExtractAnswer_0
   3195            {
   3196              for (int i=0; i<wslen; i++) // Посчитаем общую длину будущей строки
   \   0000001C   010056E3           CMP      R6,#+1
   \   00000020   070000AA           BGE      ??ExtractAnswer_1
   3197              {
   3198                c=wsbody[i+1];
   3199                if (c>=0xE100)
   3200                {
   3201                  t=FindSmileByUni(c);
   3202                  if (t)
   3203                  {
   3204                    if (t->lines)
   3205                    {
   3206                      len+=strlen(t->lines->text);
   3207                    }
   3208                  }
   3209                  else  len++;
   3210                }
   3211                else  len++;
   3212              }
   3213          
   3214              msg=malloc(len+1);
   \                     ??ExtractAnswer_2:
   \   00000024   010084E2           ADD      R0,R4,#+1
   \   00000028   140000EF           SWI      +20
   \   0000002C   0070A0E1           MOV      R7,R0
   3215              scur=0;
   \   00000030   0090A0E3           MOV      R9,#+0
   3216              for (int wcur=0; wcur<wslen && scur<len; wcur++)
   \   00000034   00A0A0E3           MOV      R10,#+0
   \   00000038   180000EA           B        ??ExtractAnswer_3
   \                     ??ExtractAnswer_4:
   \   0000003C   014084E2           ADD      R4,R4,#+1
   \                     ??ExtractAnswer_5:
   \   00000040   017087E2           ADD      R7,R7,#+1
   \                     ??ExtractAnswer_1:
   \   00000044   060057E1           CMP      R7,R6
   \   00000048   F5FFFFAA           BGE      ??ExtractAnswer_2
   \   0000004C   870085E0           ADD      R0,R5,R7, LSL #+1
   \   00000050   B280D0E1           LDRH     R8,[R0, #+2]
   \   00000054   E10C58E3           CMP      R8,#+57600
   \   00000058   F7FFFFBA           BLT      ??ExtractAnswer_4
   \   0000005C   0800A0E1           MOV      R0,R8
   \   00000060   ........           _BLF     FindSmileByUni,??FindSmileByUni??rA
   \   00000064   000050E3           CMP      R0,#+0
   \   00000068   F3FFFF0A           BEQ      ??ExtractAnswer_4
   \   0000006C   080090E5           LDR      R0,[R0, #+8]
   \   00000070   000050E3           CMP      R0,#+0
   \   00000074   F1FFFF0A           BEQ      ??ExtractAnswer_5
   \   00000078   0C0080E2           ADD      R0,R0,#+12
   \   0000007C   1B0000EF           SWI      +27
   \   00000080   044080E0           ADD      R4,R0,R4
   \   00000084   EDFFFFEA           B        ??ExtractAnswer_5
   3217              {
   3218                c=wsbody[wcur+1];
   3219                if (c==10) c=13;
   \                     ??ExtractAnswer_6:
   \   00000088   0D80A0E3           MOV      R8,#+13
   3220                if (c>=0xE100)
   3221                {
   3222                  t=FindSmileByUni(c);
   3223                  if (t)
   3224                  {
   3225                    int w;
   3226                    char *s;
   3227                    if (t->lines)
   3228                    {
   3229                      s=t->lines->text;
   3230                      while ((w=*s++) && scur<len)
   3231                      {
   3232                        msg[scur]=w;
   3233                        scur++;
   3234                      }
   3235                    }
   3236                  }
   3237                  else
   3238                  {
   3239                    msg[scur]=char16to8(c);
   3240                    scur++;
   3241                  }
   3242                }
   3243                else
   3244                {
   3245                  msg[scur]=char16to8(c);
   \                     ??ExtractAnswer_7:
   \   0000008C   0800A0E1           MOV      R0,R8
   \   00000090   ........           _BLF     char16to8,??char16to8??rA
   \   00000094   0700C9E7           STRB     R0,[R9, +R7]
   3246                  scur++;
   \   00000098   0B90A0E1           MOV      R9,R11
   3247                }
   \                     ??ExtractAnswer_8:
   \   0000009C   01A08AE2           ADD      R10,R10,#+1
   \                     ??ExtractAnswer_3:
   \   000000A0   06005AE1           CMP      R10,R6
   \   000000A4   040059B1           CMPLT    R9,R4
   \   000000A8   160000AA           BGE      ??ExtractAnswer_9
   \   000000AC   8A0085E0           ADD      R0,R5,R10, LSL #+1
   \   000000B0   B280D0E1           LDRH     R8,[R0, #+2]
   \   000000B4   01B089E2           ADD      R11,R9,#+1
   \   000000B8   0A0058E3           CMP      R8,#+10
   \   000000BC   F1FFFF0A           BEQ      ??ExtractAnswer_6
   \   000000C0   E10C58E3           CMP      R8,#+57600
   \   000000C4   F0FFFFBA           BLT      ??ExtractAnswer_7
   \   000000C8   0800A0E1           MOV      R0,R8
   \   000000CC   ........           _BLF     FindSmileByUni,??FindSmileByUni??rA
   \   000000D0   000050E3           CMP      R0,#+0
   \   000000D4   ECFFFF0A           BEQ      ??ExtractAnswer_7
   \   000000D8   080090E5           LDR      R0,[R0, #+8]
   \   000000DC   000050E3           CMP      R0,#+0
   \   000000E0   EDFFFF0A           BEQ      ??ExtractAnswer_8
   \   000000E4   0C0080E2           ADD      R0,R0,#+12
   \                     ??ExtractAnswer_10:
   \   000000E8   ........           LDRB     R1,[R0], #+1
   \   000000EC   000051E3           CMP      R1,#+0
   \   000000F0   E9FFFF0A           BEQ      ??ExtractAnswer_8
   \   000000F4   040059E1           CMP      R9,R4
   \   000000F8   E7FFFFAA           BGE      ??ExtractAnswer_8
   \   000000FC   0710C9E7           STRB     R1,[R9, +R7]
   \   00000100   019089E2           ADD      R9,R9,#+1
   \   00000104   F7FFFFEA           B        ??ExtractAnswer_10
   3248              }
   3249              msg[scur]=0;
   \                     ??ExtractAnswer_9:
   \   00000108   0000A0E3           MOV      R0,#+0
   \   0000010C   0700C9E7           STRB     R0,[R9, +R7]
   3250            }
   3251            return msg;
   \                     ??ExtractAnswer_0:
   \   00000110   0700A0E1           MOV      R0,R7
   \   00000114   F08FBDE8           POP      {R4-R11,PC}      ;; return
   3252          }
   3253          

   \                                 In segment CODE, align 4, keep-with-next
   3254          CLIST *FindNextActiveContact(CLIST *t)
   3255          {
   3256            while(t=(CLIST *)(t->next))
   \                     FindNextActiveContact:
   \                     ??FindNextActiveContact_0:
   \   00000000   000090E5           LDR      R0,[R0, #+0]
   \   00000004   000050E3           CMP      R0,#+0
   \   00000008   0300000A           BEQ      ??FindNextActiveContact_1
   3257            {
   3258              if (t->isactive) return t;
   \   0000000C   B41090E5           LDR      R1,[R0, #+180]
   \   00000010   000051E3           CMP      R1,#+0
   \   00000014   F9FFFF0A           BEQ      ??FindNextActiveContact_0
   \   00000018   1EFF2FE1           BX       LR
   3259            }
   3260            t=(CLIST *)(&cltop);
   \                     ??FindNextActiveContact_1:
   \   0000001C   ........           LDR      R0,??DataTable131  ;; contactlist_menuhdr + 668
   \   00000020   020000EA           B        ??FindNextActiveContact_2
   3261            while(t=(CLIST *)(t->next))
   3262            {
   3263              if (t->isactive) return t;
   \                     ??FindNextActiveContact_3:
   \   00000024   B41090E5           LDR      R1,[R0, #+180]
   \   00000028   000051E3           CMP      R1,#+0
   \   0000002C   1EFF2F11           BXNE     LR
   3264            }
   \                     ??FindNextActiveContact_2:
   \   00000030   000090E5           LDR      R0,[R0, #+0]
   \   00000034   000050E3           CMP      R0,#+0
   \   00000038   F9FFFF1A           BNE      ??FindNextActiveContact_3
   3265            return NULL;
   \   0000003C   1EFF2FE1           BX       LR               ;; return
   3266          }
   3267          

   \                                 In segment CODE, align 4, keep-with-next
   3268          CLIST *FindPrevActiveContact(CLIST *t)
   3269          {
   3270            CLIST *cl;
   3271            CLIST *cl_active=NULL;
   3272            cl=(CLIST *)(&cltop);
   \                     FindPrevActiveContact:
   \   00000000   ........           LDR      R2,??DataTable131  ;; contactlist_menuhdr + 668
   \   00000004   0010A0E3           MOV      R1,#+0
   \   00000008   020000EA           B        ??FindPrevActiveContact_0
   3273          
   3274          
   3275            while(cl=cl->next)
   3276            {
   3277              if (cl==t)
   3278              {
   3279                if (cl_active==NULL) break;
   3280                else return (cl_active);
   3281              }
   3282              else
   3283              {
   3284                if (cl->isactive) cl_active=cl;
   \                     ??FindPrevActiveContact_1:
   \   0000000C   B43092E5           LDR      R3,[R2, #+180]
   \   00000010   000053E3           CMP      R3,#+0
   \   00000014   0210A011           MOVNE    R1,R2
   3285              }
   \                     ??FindPrevActiveContact_0:
   \   00000018   002092E5           LDR      R2,[R2, #+0]
   \   0000001C   000052E3           CMP      R2,#+0
   \   00000020   0500000A           BEQ      ??FindPrevActiveContact_2
   \   00000024   000052E1           CMP      R2,R0
   \   00000028   F7FFFF1A           BNE      ??FindPrevActiveContact_1
   \   0000002C   000051E3           CMP      R1,#+0
   \   00000030   0100000A           BEQ      ??FindPrevActiveContact_2
   \                     ??FindPrevActiveContact_3:
   \   00000034   0100A0E1           MOV      R0,R1
   \   00000038   1EFF2FE1           BX       LR               ;; return
   3286            }
   3287            while(t)
   \                     ??FindPrevActiveContact_2:
   \   0000003C   000050E3           CMP      R0,#+0
   \   00000040   FBFFFF0A           BEQ      ??FindPrevActiveContact_3
   3288            {
   3289              if (t->isactive) cl_active=t;
   \   00000044   B42090E5           LDR      R2,[R0, #+180]
   \   00000048   000052E3           CMP      R2,#+0
   \   0000004C   0010A011           MOVNE    R1,R0
   3290              t=t->next;
   \   00000050   000090E5           LDR      R0,[R0, #+0]
   \   00000054   F8FFFFEA           B        ??FindPrevActiveContact_2
   3291            }
   3292            return cl_active;
   3293          }
   3294          
   3295          

   \                                 In segment CODE, align 4, keep-with-next
   3296          void ed_options_handler(USR_MENU_ITEM *item)
   3297          {
   \                     ed_options_handler:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   3298            EDCHAT_STRUCT *ed_struct=item->user_pointer;
   3299            CLIST *t;
   3300            int i=item->cur_item;
   3301            if (item->type==0)
   \   00000004   ........           LDR      R5,??DataTable141  ;; contactlist_menuhdr
   \   00000008   2CD04DE2           SUB      SP,SP,#+44
   \   0000000C   0070A0E1           MOV      R7,R0
   \   00000010   0000D7E5           LDRB     R0,[R7, #+0]
   \   00000014   044097E5           LDR      R4,[R7, #+4]
   \   00000018   B860D7E1           LDRH     R6,[R7, #+8]
   \   0000001C   000050E3           CMP      R0,#+0
   \   00000020   1100001A           BNE      ??ed_options_handler_0
   3302            {
   3303              switch(i)
   \   00000024   0C0097E5           LDR      R0,[R7, #+12]
   \   00000028   ........           LDR      R1,??DataTable142  ;; lgpData
   \   0000002C   0620B0E1           MOVS     R2,R6
   \   00000030   0200000A           BEQ      ??ed_options_handler_1
   \   00000034   012056E2           SUBS     R2,R6,#+1
   \   00000038   0200000A           BEQ      ??ed_options_handler_2
   \   0000003C   030000EA           B        ??ed_options_handler_3
   3304              {
   3305              case 0:
   3306                ascii2ws(item->ws,lgpData[LGP_MnuEdNextAct]);
   \                     ??ed_options_handler_1:
   \   00000040   B01091E5           LDR      R1,[R1, #+176]
   \   00000044   070000EA           B        ??ed_options_handler_4
   3307                break;
   3308              case 1:
   3309                ascii2ws(item->ws,lgpData[LGP_MnuEdPrevAct]);
   \                     ??ed_options_handler_2:
   \   00000048   B41091E5           LDR      R1,[R1, #+180]
   \   0000004C   050000EA           B        ??ed_options_handler_4
   3310                break;
   3311              default:
   3312                i-=2;
   3313                if (i<ed_struct->loaded_templates) ascii2ws(item->ws,templates_lines[i]);
   \                     ??ed_options_handler_3:
   \   00000050   101094E5           LDR      R1,[R4, #+16]
   \   00000054   026046E2           SUB      R6,R6,#+2
   \   00000058   010056E1           CMP      R6,R1
   \   0000005C   550000AA           BGE      ??ed_options_handler_5
   \   00000060   681295E5           LDR      R1,[R5, #+616]
   \   00000064   061191E7           LDR      R1,[R1, +R6, LSL #+2]
   \                     ??ed_options_handler_4:
   \   00000068   ........           _BLF     ascii2ws,??ascii2ws??rA
   3314                break;
   3315              }
   3316            }
   3317            if (item->type==1)
   \                     ??ed_options_handler_0:
   \   0000006C   0000D7E5           LDRB     R0,[R7, #+0]
   \   00000070   010050E3           CMP      R0,#+1
   \   00000074   4F00001A           BNE      ??ed_options_handler_5
   3318            {
   3319              switch(i)
   \   00000078   007094E5           LDR      R7,[R4, #+0]
   \   0000007C   0600B0E1           MOVS     R0,R6
   \   00000080   0200000A           BEQ      ??ed_options_handler_6
   \   00000084   010056E2           SUBS     R0,R6,#+1
   \   00000088   0C00000A           BEQ      ??ed_options_handler_7
   \   0000008C   0E0000EA           B        ??ed_options_handler_8
   3320              {
   3321              case 0:
   3322                t=FindNextActiveContact(ed_struct->ed_contact);
   \                     ??ed_options_handler_6:
   \   00000090   0700A0E1           MOV      R0,R7
   \   00000094   ........           BL       FindNextActiveContact
   \                     ??ed_options_handler_9:
   \   00000098   0040B0E1           MOVS     R4,R0
   3323                if (t && t!=ed_struct->ed_contact)
   \   0000009C   07005411           CMPNE    R4,R7
   \   000000A0   4400000A           BEQ      ??ed_options_handler_5
   3324                {
   3325                  GeneralFunc_flag1(edchat_id,1);
   \   000000A4   A80295E5           LDR      R0,[R5, #+680]
   \   000000A8   0110A0E3           MOV      R1,#+1
   \   000000AC   3D0100EF           SWI      +317
   3326                  CreateEditChat(t);
   \   000000B0   0400A0E1           MOV      R0,R4
   \   000000B4   ........           BL       CreateEditChat
   \   000000B8   2CD08DE2           ADD      SP,SP,#+44
   \   000000BC   F080BDE8           POP      {R4-R7,PC}
   3327                }
   3328                break;
   3329              case 1:
   3330                t=FindPrevActiveContact(ed_struct->ed_contact);
   \                     ??ed_options_handler_7:
   \   000000C0   0700A0E1           MOV      R0,R7
   \   000000C4   ........           BL       FindPrevActiveContact
   \   000000C8   F2FFFFEA           B        ??ed_options_handler_9
   3331                if (t && t!=ed_struct->ed_contact)
   3332                {
   3333                  GeneralFunc_flag1(edchat_id,1);
   3334                  CreateEditChat(t);
   3335                }
   3336                break;
   3337              default:
   3338                i-=2;
   3339                if (i<ed_struct->loaded_templates)
   \                     ??ed_options_handler_8:
   \   000000CC   100094E5           LDR      R0,[R4, #+16]
   \   000000D0   026046E2           SUB      R6,R6,#+2
   \   000000D4   000056E1           CMP      R6,R0
   \   000000D8   360000AA           BGE      ??ed_options_handler_5
   3340                {
   3341          	EDITCONTROL ec;
   3342          	WSHDR *ed_ws;
   3343          	int c;
   3344          	char *p=templates_lines[i];
   \   000000DC   680295E5           LDR      R0,[R5, #+616]
   3345          	ExtractEditControl(ed_struct->ed_chatgui,ed_struct->ed_answer,&ec);
   \   000000E0   081094E5           LDR      R1,[R4, #+8]
   \   000000E4   065190E7           LDR      R5,[R0, +R6, LSL #+2]
   \   000000E8   040094E5           LDR      R0,[R4, #+4]
   \   000000EC   0D20A0E1           MOV      R2,SP
   \   000000F0   690100EF           SWI      +361
   3346          	ed_ws=AllocWS(ec.pWS->wsbody[0]+strlen(p));
   \   000000F4   0500A0E1           MOV      R0,R5
   \   000000F8   1B0000EF           SWI      +27
   \   000000FC   28109DE5           LDR      R1,[SP, #+40]
   \   00000100   001091E5           LDR      R1,[R1, #+0]
   \   00000104   B010D1E1           LDRH     R1,[R1, #+0]
   \   00000108   010080E0           ADD      R0,R0,R1
   \   0000010C   250100EF           SWI      +293
   3347          	wstrcpy(ed_ws,ec.pWS);
   \   00000110   28109DE5           LDR      R1,[SP, #+40]
   \   00000114   0060A0E1           MOV      R6,R0
   \   00000118   1F0100EF           SWI      +287
   3348                  if (EDIT_GetFocus(ed_struct->ed_chatgui)==ed_struct->ed_answer)
   \   0000011C   040094E5           LDR      R0,[R4, #+4]
   \   00000120   820100EF           SWI      +386
   \   00000124   081094E5           LDR      R1,[R4, #+8]
   \   00000128   010050E1           CMP      R0,R1
   \   0000012C   1800001A           BNE      ??ed_options_handler_10
   3349                  {
   3350                    int pos=EDIT_GetCursorPos(ed_struct->ed_chatgui);
   \   00000130   040094E5           LDR      R0,[R4, #+4]
   \   00000134   D30100EF           SWI      +467
   \   00000138   0070A0E1           MOV      R7,R0
   \   0000013C   050000EA           B        ??ed_options_handler_11
   3351                    while(c=*p++)
   3352                    {
   3353                      wsInsertChar(ed_ws,char8to16(c),pos++);
   \                     ??ed_options_handler_12:
   \   00000140   ........           _BLF     char8to16,??char8to16??rA
   \   00000144   0010A0E1           MOV      R1,R0
   \   00000148   0720A0E1           MOV      R2,R7
   \   0000014C   0600A0E1           MOV      R0,R6
   \   00000150   1D0000EF           SWI      +29
   \   00000154   017087E2           ADD      R7,R7,#+1
   3354                    }
   \                     ??ed_options_handler_11:
   \   00000158   ........           LDRB     R0,[R5], #+1
   \   0000015C   000050E3           CMP      R0,#+0
   \   00000160   F6FFFF1A           BNE      ??ed_options_handler_12
   3355                    EDIT_SetTextToEditControl(ed_struct->ed_chatgui,ed_struct->ed_answer,ed_ws);
   \   00000164   081094E5           LDR      R1,[R4, #+8]
   \   00000168   040094E5           LDR      R0,[R4, #+4]
   \   0000016C   0620A0E1           MOV      R2,R6
   \   00000170   DE0100EF           SWI      +478
   3356                    EDIT_SetCursorPos(ed_struct->ed_chatgui,pos);
   \   00000174   040094E5           LDR      R0,[R4, #+4]
   \   00000178   0710A0E1           MOV      R1,R7
   \   0000017C   D40100EF           SWI      +468
   \   00000180   0A0000EA           B        ??ed_options_handler_13
   3357                  }
   3358                  else
   3359                  {
   3360                    while(c=*p++)
   3361                    {
   3362                      wsAppendChar(ed_ws,char8to16(c));
   \                     ??ed_options_handler_14:
   \   00000184   ........           _BLF     char8to16,??char8to16??rA
   \   00000188   0010A0E1           MOV      R1,R0
   \   0000018C   0600A0E1           MOV      R0,R6
   \   00000190   1C0000EF           SWI      +28
   3363                    }
   \                     ??ed_options_handler_10:
   \   00000194   ........           LDRB     R0,[R5], #+1
   \   00000198   000050E3           CMP      R0,#+0
   \   0000019C   F8FFFF1A           BNE      ??ed_options_handler_14
   3364                    EDIT_SetTextToEditControl(ed_struct->ed_chatgui,ed_struct->ed_answer,ed_ws);
   \   000001A0   081094E5           LDR      R1,[R4, #+8]
   \   000001A4   040094E5           LDR      R0,[R4, #+4]
   \   000001A8   0620A0E1           MOV      R2,R6
   \   000001AC   DE0100EF           SWI      +478
   3365                  }
   3366          	FreeWS(ed_ws);
   \                     ??ed_options_handler_13:
   \   000001B0   0600A0E1           MOV      R0,R6
   \   000001B4   290100EF           SWI      +297
   3367                }
   3368                break;
   3369              }
   3370            }
   3371          }
   \                     ??ed_options_handler_5:
   \   000001B8   2CD08DE2           ADD      SP,SP,#+44       ;; stack cleaning
   \   000001BC   F080BDE8           POP      {R4-R7,PC}       ;; return
   3372          

   \                                 In segment CODE, align 4, keep-with-next
   3373          unsigned short * wstrstr(unsigned short *ws, char *str, int *wslen, int len)
   3374          {
   \                     wstrstr:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   \   00000004   0070A0E1           MOV      R7,R0
   \   00000008   0140A0E1           MOV      R4,R1
   \   0000000C   0250A0E1           MOV      R5,R2
   \   00000010   0360A0E1           MOV      R6,R3
   \   00000014   030000EA           B        ??wstrstr_0
   3375            char *s;
   3376            unsigned short *w;
   3377            int l;
   3378           
   3379            while(*wslen >= len)
   3380            {
   3381              s = str;
   3382              w = ws;
   3383              l = len;
   3384              for(; (char16to8(*w) == *s) && l; w++, s++, l--);     
   3385              if(!l) return ws;
   3386              ws++;
   3387              (*wslen)--;
   \                     ??wstrstr_1:
   \   00000018   000095E5           LDR      R0,[R5, #+0]
   \   0000001C   027087E2           ADD      R7,R7,#+2
   \   00000020   010040E2           SUB      R0,R0,#+1
   \   00000024   000085E5           STR      R0,[R5, #+0]
   \                     ??wstrstr_0:
   \   00000028   000095E5           LDR      R0,[R5, #+0]
   \   0000002C   060050E1           CMP      R0,R6
   \   00000030   0F0000BA           BLT      ??wstrstr_2
   \   00000034   0480A0E1           MOV      R8,R4
   \   00000038   0790A0E1           MOV      R9,R7
   \   0000003C   06A0A0E1           MOV      R10,R6
   \   00000040   000000EA           B        ??wstrstr_3
   \                     ??wstrstr_4:
   \   00000044   01A04AE2           SUB      R10,R10,#+1
   \                     ??wstrstr_3:
   \   00000048   ........           LDRH     R0,[R9], #+2
   \   0000004C   ........           _BLF     char16to8,??char16to8??rA
   \   00000050   ........           LDRB     R1,[R8], #+1
   \   00000054   010050E1           CMP      R0,R1
   \   00000058   0100001A           BNE      ??wstrstr_5
   \   0000005C   00005AE3           CMP      R10,#+0
   \   00000060   F7FFFF1A           BNE      ??wstrstr_4
   \                     ??wstrstr_5:
   \   00000064   00005AE3           CMP      R10,#+0
   \   00000068   EAFFFF1A           BNE      ??wstrstr_1
   \   0000006C   0700A0E1           MOV      R0,R7
   \   00000070   F087BDE8           POP      {R4-R10,PC}
   3388            }
   3389            return 0;
   \                     ??wstrstr_2:
   \   00000074   0000A0E3           MOV      R0,#+0
   \   00000078   F087BDE8           POP      {R4-R10,PC}      ;; return
   3390            
   3391          }
   3392          

   \                                 In segment CODE, align 4, keep-with-next
   3393          int IsUrl(WSHDR *ws, int pos, char *link)
   3394          {
   \                     IsUrl:
   \   00000000   F14F2DE9           PUSH     {R0,R4-R11,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0150A0E1           MOV      R5,R1
   3395            const char *valid = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789$-_.+!*'(),%;:@&=/?#абвгдеёжзийклмнопрстуфхцчшщъыьэюяАБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ~";
   3396          
   3397            int len = wstrlen(ws);
   3398            unsigned short *str = ws->wsbody+1, *tmp, *begin;
   3399            tmp = str;
   3400            
   3401            begin = str = wstrstr(str, "http://", &len, 7);
   \   0000000C   ........           LDR      R7,??DataTable135  ;; `?<Constant "abcdefghijklmnopqrstu...">`
   \   00000010   0260A0E1           MOV      R6,R2
   \   00000014   230100EF           SWI      +291
   \   00000018   00008DE5           STR      R0,[SP, #+0]
   \   0000001C   04009DE5           LDR      R0,[SP, #+4]
   \   00000020   0730A0E3           MOV      R3,#+7
   \   00000024   000090E5           LDR      R0,[R0, #+0]
   \   00000028   0D20A0E1           MOV      R2,SP
   \   0000002C   028080E2           ADD      R8,R0,#+2
   \   00000030   981087E2           ADD      R1,R7,#+152
   \   00000034   0800A0E1           MOV      R0,R8
   \   00000038   ........           BL       wstrstr
   \   0000003C   00B0A0E1           MOV      R11,R0
   \   00000040   0040A0E1           MOV      R4,R0
   \   00000044   A890A0E1           LSR      R9,R8,#+1
   \   00000048   02A045E2           SUB      R10,R5,#+2
   \   0000004C   060000EA           B        ??IsUrl_0
   3402          
   3403            while(str && (begin-tmp <= pos))
   3404            {
   3405              while(len && strchr(valid, char16to8(*str))) {str++; len--;}
   3406              if(str-tmp >= pos-2)
   3407              {
   3408                for(;begin < str; begin++, link++)
   3409                  *link = char16to8(*begin);
   3410                link[str-begin] = 0;
   3411                return 1;
   3412              }
   3413              begin = str = wstrstr(str, "http://", &len, 7);
   \                     ??IsUrl_1:
   \   00000050   0730A0E3           MOV      R3,#+7
   \   00000054   0D20A0E1           MOV      R2,SP
   \   00000058   981087E2           ADD      R1,R7,#+152
   \   0000005C   0B00A0E1           MOV      R0,R11
   \   00000060   ........           BL       wstrstr
   \   00000064   00B0A0E1           MOV      R11,R0
   \   00000068   0040A0E1           MOV      R4,R0
   \                     ??IsUrl_0:
   \   0000006C   00005BE3           CMP      R11,#+0
   \   00000070   0200000A           BEQ      ??IsUrl_2
   \   00000074   A40069E0           RSB      R0,R9,R4, LSR #+1
   \   00000078   000055E1           CMP      R5,R0
   \   0000007C   0B0000AA           BGE      ??IsUrl_3
   3414            }
   3415          
   3416            len = wstrlen(ws);
   \                     ??IsUrl_2:
   \   00000080   04009DE5           LDR      R0,[SP, #+4]
   \   00000084   230100EF           SWI      +291
   \   00000088   00008DE5           STR      R0,[SP, #+0]
   3417            begin = str = wstrstr(tmp, "www.", &len, 4);
   \   0000008C   0430A0E3           MOV      R3,#+4
   \   00000090   0D20A0E1           MOV      R2,SP
   \   00000094   A01087E2           ADD      R1,R7,#+160
   \   00000098   0800A0E1           MOV      R0,R8
   \   0000009C   200000EA           B        ??IsUrl_4
   \                     ??IsUrl_5:
   \   000000A0   00109DE5           LDR      R1,[SP, #+0]
   \   000000A4   02B08BE2           ADD      R11,R11,#+2
   \   000000A8   011041E2           SUB      R1,R1,#+1
   \   000000AC   00108DE5           STR      R1,[SP, #+0]
   \                     ??IsUrl_3:
   \   000000B0   00009DE5           LDR      R0,[SP, #+0]
   \   000000B4   000050E3           CMP      R0,#+0
   \   000000B8   0600000A           BEQ      ??IsUrl_6
   \   000000BC   B000DBE1           LDRH     R0,[R11, #+0]
   \   000000C0   ........           _BLF     char16to8,??char16to8??rA
   \   000000C4   0010A0E1           MOV      R1,R0
   \   000000C8   0700A0E1           MOV      R0,R7
   \   000000CC   180000EF           SWI      +24
   \   000000D0   000050E3           CMP      R0,#+0
   \   000000D4   F1FFFF1A           BNE      ??IsUrl_5
   \                     ??IsUrl_6:
   \   000000D8   AB0069E0           RSB      R0,R9,R11, LSR #+1
   \   000000DC   0A0050E1           CMP      R0,R10
   \   000000E0   DAFFFFBA           BLT      ??IsUrl_1
   \                     ??IsUrl_7:
   \   000000E4   0B0054E1           CMP      R4,R11
   \   000000E8   0300002A           BCS      ??IsUrl_8
   \   000000EC   ........           LDRH     R0,[R4], #+2
   \   000000F0   ........           _BLF     char16to8,??char16to8??rA
   \   000000F4   ........           STRB     R0,[R6], #+1
   \   000000F8   F9FFFFEA           B        ??IsUrl_7
   \                     ??IsUrl_8:
   \   000000FC   AB00A0E1           LSR      R0,R11,#+1
   \   00000100   A40040E0           SUB      R0,R0,R4, LSR #+1
   \   00000104   0010A0E3           MOV      R1,#+0
   \   00000108   0610C0E7           STRB     R1,[R0, +R6]
   \   0000010C   0100A0E3           MOV      R0,#+1
   \   00000110   F68FBDE8           POP      {R1,R2,R4-R11,PC}
   3418            while(str && (begin-tmp <= pos))
   3419            {
   3420              while(len && strchr(valid, char16to8(*str))) {str++; len--;}
   3421              if(str-tmp >= pos-2)
   3422              {
   3423                for(;begin < str; begin++, link++)
   3424                  *link = char16to8(*begin);
   3425                link[str-begin] = 0;
   3426                return 1;
   3427              }
   3428              begin = str = wstrstr(str, "www.", &len, 4);
   \                     ??IsUrl_9:
   \   00000114   0430A0E3           MOV      R3,#+4
   \   00000118   0D20A0E1           MOV      R2,SP
   \   0000011C   A01087E2           ADD      R1,R7,#+160
   \   00000120   0B00A0E1           MOV      R0,R11
   \                     ??IsUrl_4:
   \   00000124   ........           BL       wstrstr
   \   00000128   00B0A0E1           MOV      R11,R0
   \   0000012C   0040A0E1           MOV      R4,R0
   \   00000130   00005BE3           CMP      R11,#+0
   \   00000134   0200000A           BEQ      ??IsUrl_10
   \   00000138   A40069E0           RSB      R0,R9,R4, LSR #+1
   \   0000013C   000055E1           CMP      R5,R0
   \   00000140   050000AA           BGE      ??IsUrl_11
   3429            }
   3430            return 0;
   \                     ??IsUrl_10:
   \   00000144   0000A0E3           MOV      R0,#+0
   \   00000148   F68FBDE8           POP      {R1,R2,R4-R11,PC}  ;; return
   \                     ??IsUrl_12:
   \   0000014C   00109DE5           LDR      R1,[SP, #+0]
   \   00000150   02B08BE2           ADD      R11,R11,#+2
   \   00000154   011041E2           SUB      R1,R1,#+1
   \   00000158   00108DE5           STR      R1,[SP, #+0]
   \                     ??IsUrl_11:
   \   0000015C   00009DE5           LDR      R0,[SP, #+0]
   \   00000160   000050E3           CMP      R0,#+0
   \   00000164   0600000A           BEQ      ??IsUrl_13
   \   00000168   B000DBE1           LDRH     R0,[R11, #+0]
   \   0000016C   ........           _BLF     char16to8,??char16to8??rA
   \   00000170   0010A0E1           MOV      R1,R0
   \   00000174   0700A0E1           MOV      R0,R7
   \   00000178   180000EF           SWI      +24
   \   0000017C   000050E3           CMP      R0,#+0
   \   00000180   F1FFFF1A           BNE      ??IsUrl_12
   \                     ??IsUrl_13:
   \   00000184   AB0069E0           RSB      R0,R9,R11, LSR #+1
   \   00000188   0A0050E1           CMP      R0,R10
   \   0000018C   E0FFFFBA           BLT      ??IsUrl_9
   \                     ??IsUrl_14:
   \   00000190   0B0054E1           CMP      R4,R11
   \   00000194   D8FFFF2A           BCS      ??IsUrl_8
   \   00000198   ........           LDRH     R0,[R4], #+2
   \   0000019C   ........           _BLF     char16to8,??char16to8??rA
   \   000001A0   ........           STRB     R0,[R6], #+1
   \   000001A4   F9FFFFEA           B        ??IsUrl_14
   3431          }
   3432          
   3433          #define UTF16_DIS_UNDERLINE (0xE002)
   3434          #define UTF16_ENA_UNDERLINE (0xE001)
   3435          

   \                                 In segment CODE, align 4, keep-with-next
   3436          void ParseAnswer(WSHDR *ws, const char *s)
   3437          {
   \                     ParseAnswer:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   3438            const char *valid = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789$-_.+!*'(),%;:@&=/?абвгдеёжзийклмнопрстуфхцчшщъыьэюяАБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ";
   3439            S_SMILES *t;
   3440            S_SMILES *t_root=(S_SMILES *)s_top;
   \   00000008   10029FE5           LDR      R0,??ParseAnswer_0  ;; s_top
   \   0000000C   04D04DE2           SUB      SP,SP,#+4
   \   00000010   006090E5           LDR      R6,[R0, #+0]
   \   00000014   0150A0E1           MOV      R5,R1
   3441            STXT_SMILES *st;
   3442            unsigned int wchar;
   3443            unsigned int ulb=s[0]+(s[1]<<8)+(s[2]<<16)+(s[3]<<24);
   \   00000018   0000D5E5           LDRB     R0,[R5, #+0]
   \   0000001C   0110D5E5           LDRB     R1,[R5, #+1]
   \   00000020   010480E0           ADD      R0,R0,R1, LSL #+8
   \   00000024   0210D5E5           LDRB     R1,[R5, #+2]
   \   00000028   010880E0           ADD      R0,R0,R1, LSL #+16
   \   0000002C   0310D5E5           LDRB     R1,[R5, #+3]
   \   00000030   018C80E0           ADD      R8,R0,R1, LSL #+24
   3444            CutWSTR(ws,0);
   \   00000034   0010A0E3           MOV      R1,#+0
   \   00000038   0400A0E1           MOV      R0,R4
   \   0000003C   260100EF           SWI      +294
   \   00000040   160000EA           B        ??ParseAnswer_1
   3445            int i;
   3446            while(wchar=*s)
   3447            {
   3448              if(s==strstr(s, "http://") || s == strstr(s, "www."))
   3449              {
   3450                wsAppendChar(ws,UTF16_ENA_UNDERLINE);
   3451                while(*s && strchr(valid, *s))
   3452                {
   3453                  wchar=char8to16(*s);
   \                     ??ParseAnswer_2:
   \   00000044   ........           LDRB     R0,[R5], #+1
   \   00000048   ........           _BLF     char8to16,??char8to16??rA
   3454                  wsAppendChar(ws,wchar);
   \   0000004C   0010A0E1           MOV      R1,R0
   \                     ??ParseAnswer_3:
   \   00000050   0400A0E1           MOV      R0,R4
   \   00000054   1C0000EF           SWI      +28
   3455                  s++;       
   3456                }
   \   00000058   0010D5E5           LDRB     R1,[R5, #+0]
   \   0000005C   000051E3           CMP      R1,#+0
   \   00000060   0300000A           BEQ      ??ParseAnswer_4
   \   00000064   A80089E2           ADD      R0,R9,#+168
   \   00000068   180000EF           SWI      +24
   \   0000006C   000050E3           CMP      R0,#+0
   \   00000070   F3FFFF1A           BNE      ??ParseAnswer_2
   3457                wsAppendChar(ws,UTF16_DIS_UNDERLINE);
   \                     ??ParseAnswer_4:
   \   00000074   0210A0E3           MOV      R1,#+2
   \   00000078   E01C81E3           ORR      R1,R1,#0xE000
   \   0000007C   0400A0E1           MOV      R0,R4
   \   00000080   1C0000EF           SWI      +28
   3458                ulb=s[0]+(s[1]<<8)+(s[2]<<16)+(s[3]<<24);
   \   00000084   0000D5E5           LDRB     R0,[R5, #+0]
   \   00000088   0110D5E5           LDRB     R1,[R5, #+1]
   \   0000008C   010480E0           ADD      R0,R0,R1, LSL #+8
   \   00000090   0210D5E5           LDRB     R1,[R5, #+2]
   \   00000094   010880E0           ADD      R0,R0,R1, LSL #+16
   \   00000098   0310D5E5           LDRB     R1,[R5, #+3]
   \   0000009C   018C80E0           ADD      R8,R0,R1, LSL #+24
   3459                continue;
   \                     ??ParseAnswer_1:
   \   000000A0   0070D5E5           LDRB     R7,[R5, #+0]
   \   000000A4   000057E3           CMP      R7,#+0
   \   000000A8   4F00000A           BEQ      ??ParseAnswer_5
   \   000000AC   ........           LDR      R9,??DataTable135  ;; `?<Constant "abcdefghijklmnopqrstu...">`
   \   000000B0   0500A0E1           MOV      R0,R5
   \   000000B4   981089E2           ADD      R1,R9,#+152
   \   000000B8   180100EF           SWI      +280
   \   000000BC   000055E1           CMP      R5,R0
   \   000000C0   0400000A           BEQ      ??ParseAnswer_6
   \   000000C4   A01089E2           ADD      R1,R9,#+160
   \   000000C8   0500A0E1           MOV      R0,R5
   \   000000CC   180100EF           SWI      +280
   \   000000D0   000055E1           CMP      R5,R0
   \   000000D4   0200001A           BNE      ??ParseAnswer_7
   \                     ??ParseAnswer_6:
   \   000000D8   0110A0E3           MOV      R1,#+1
   \   000000DC   E01C81E3           ORR      R1,R1,#0xE000
   \   000000E0   DAFFFFEA           B        ??ParseAnswer_3
   3460              }
   3461              
   3462              t=t_root;
   \                     ??ParseAnswer_7:
   \   000000E4   0690A0E1           MOV      R9,R6
   \   000000E8   230000EA           B        ??ParseAnswer_8
   3463              while(t)
   3464              {
   3465                st=t->lines;
   3466                while(st)
   3467                {
   3468          	if ((ulb&st->mask)==st->key)
   \                     ??ParseAnswer_9:
   \   000000EC   0B00DAE5           LDRB     R0,[R10, #+11]
   \   000000F0   0A10DAE5           LDRB     R1,[R10, #+10]
   \   000000F4   0620DAE5           LDRB     R2,[R10, #+6]
   \   000000F8   000481E1           ORR      R0,R1,R0, LSL #+8
   \   000000FC   0910DAE5           LDRB     R1,[R10, #+9]
   \   00000100   000481E1           ORR      R0,R1,R0, LSL #+8
   \   00000104   0810DAE5           LDRB     R1,[R10, #+8]
   \   00000108   000481E1           ORR      R0,R1,R0, LSL #+8
   \   0000010C   0710DAE5           LDRB     R1,[R10, #+7]
   \   00000110   080000E0           AND      R0,R0,R8
   \   00000114   011482E1           ORR      R1,R2,R1, LSL #+8
   \   00000118   0520DAE5           LDRB     R2,[R10, #+5]
   \   0000011C   011482E1           ORR      R1,R2,R1, LSL #+8
   \   00000120   0420DAE5           LDRB     R2,[R10, #+4]
   \   00000124   011482E1           ORR      R1,R2,R1, LSL #+8
   \   00000128   010050E1           CMP      R0,R1
   \   0000012C   0700001A           BNE      ??ParseAnswer_10
   3469          	{
   3470          	  if (!strncmp(s,st->text,strlen(st->text))) goto L1;
   \   00000130   0C008AE2           ADD      R0,R10,#+12
   \   00000134   1B0000EF           SWI      +27
   \   00000138   0020A0E1           MOV      R2,R0
   \   0000013C   0C108AE2           ADD      R1,R10,#+12
   \   00000140   0500A0E1           MOV      R0,R5
   \   00000144   150100EF           SWI      +277
   \   00000148   000050E3           CMP      R0,#+0
   \   0000014C   1500000A           BEQ      ??ParseAnswer_11
   3471          	}
   3472          	st=st->next;
   \                     ??ParseAnswer_10:
   \   00000150   0000A0E3           MOV      R0,#+0
   \                     ??ParseAnswer_12:
   \   00000154   0A20D0E7           LDRB     R2,[R0, +R10]
   \   00000158   0D10A0E1           MOV      R1,SP
   \   0000015C   0120C0E7           STRB     R2,[R0, +R1]
   \   00000160   010080E2           ADD      R0,R0,#+1
   \   00000164   040050E3           CMP      R0,#+4
   \   00000168   F9FFFFBA           BLT      ??ParseAnswer_12
   \   0000016C   00A09DE5           LDR      R10,[SP, #+0]
   3473                }
   \                     ??ParseAnswer_13:
   \   00000170   00005AE3           CMP      R10,#+0
   \   00000174   DCFFFF1A           BNE      ??ParseAnswer_9
   3474                t=t->next;
   \   00000178   009099E5           LDR      R9,[R9, #+0]
   \                     ??ParseAnswer_8:
   \   0000017C   000059E3           CMP      R9,#+0
   \   00000180   08A09915           LDRNE    R10,[R9, #+8]
   \   00000184   F9FFFF1A           BNE      ??ParseAnswer_13
   3475              }
   3476            L1:
   3477              if (t)
   3478              {
   3479                wchar=t->uni_smile;
   3480                s+=strlen(st->text);
   3481                ulb=s[0]+(s[1]<<8)+(s[2]<<16)+(s[3]<<24);
   3482              }
   3483              else
   3484              {
   3485                wchar=char8to16(wchar);
   \   00000188   0700A0E1           MOV      R0,R7
   \   0000018C   ........           _BLF     char8to16,??char8to16??rA
   \   00000190   0070A0E1           MOV      R7,R0
   3486                s++;
   3487                ulb>>=8;
   3488                ulb+=s[3]<<24;
   \   00000194   015085E2           ADD      R5,R5,#+1
   \   00000198   0300D5E5           LDRB     R0,[R5, #+3]
   \   0000019C   000CA0E1           LSL      R0,R0,#+24
   \   000001A0   288480E0           ADD      R8,R0,R8, LSR #+8
   \   000001A4   0A0000EA           B        ??ParseAnswer_14
   3489              }
   \                     ??ParseAnswer_11:
   \   000001A8   047099E5           LDR      R7,[R9, #+4]
   \   000001AC   0C008AE2           ADD      R0,R10,#+12
   \   000001B0   1B0000EF           SWI      +27
   \   000001B4   055080E0           ADD      R5,R0,R5
   \   000001B8   0000D5E5           LDRB     R0,[R5, #+0]
   \   000001BC   0110D5E5           LDRB     R1,[R5, #+1]
   \   000001C0   010480E0           ADD      R0,R0,R1, LSL #+8
   \   000001C4   0210D5E5           LDRB     R1,[R5, #+2]
   \   000001C8   010880E0           ADD      R0,R0,R1, LSL #+16
   \   000001CC   0310D5E5           LDRB     R1,[R5, #+3]
   \   000001D0   018C80E0           ADD      R8,R0,R1, LSL #+24
   3490              if (wchar!=10) wsAppendChar(ws,wchar);
   \                     ??ParseAnswer_14:
   \   000001D4   0A0057E3           CMP      R7,#+10
   \   000001D8   B0FFFF0A           BEQ      ??ParseAnswer_1
   \   000001DC   0710A0E1           MOV      R1,R7
   \   000001E0   0400A0E1           MOV      R0,R4
   \   000001E4   1C0000EF           SWI      +28
   \   000001E8   ACFFFFEA           B        ??ParseAnswer_1
   3491            }
   3492            i=ws->wsbody[0];
   \                     ??ParseAnswer_5:
   \   000001EC   000094E5           LDR      R0,[R4, #+0]
   \   000001F0   B010D0E1           LDRH     R1,[R0, #+0]
   \   000001F4   000000EA           B        ??ParseAnswer_15
   3493            while(i>1)
   3494            {
   3495              if (ws->wsbody[i--]!=13) break;
   3496              ws->wsbody[0]=i;
   \                     ??ParseAnswer_16:
   \   000001F8   B010C0E1           STRH     R1,[R0, #+0]
   \                     ??ParseAnswer_15:
   \   000001FC   020051E3           CMP      R1,#+2
   \   00000200   F187BDB8           POPLT    {R0,R4-R10,PC}
   \   00000204   0120A0E1           MOV      R2,R1
   \   00000208   011042E2           SUB      R1,R2,#+1
   \   0000020C   822080E0           ADD      R2,R0,R2, LSL #+1
   \   00000210   B020D2E1           LDRH     R2,[R2, #+0]
   \   00000214   0D0052E3           CMP      R2,#+13
   \   00000218   F6FFFF0A           BEQ      ??ParseAnswer_16
   3497            }
   3498          }
   \   0000021C   F187BDE8           POP      {R0,R4-R10,PC}   ;; return
   \                     ??ParseAnswer_0:
   \   00000220   ........           DC32     s_top
   3499          

   \                                 In segment CODE, align 4, keep-with-next
   3500          void SaveAnswer(CLIST *cl, WSHDR *ws)
   3501          {
   \                     SaveAnswer:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0100A0E1           MOV      R0,R1
   3502            char *p=ExtractAnswer(ws);
   \   0000000C   ........           BL       ExtractAnswer
   \   00000010   0050A0E1           MOV      R5,R0
   3503            mfree(cl->answer);
   \   00000014   AC0094E5           LDR      R0,[R4, #+172]
   \   00000018   150000EF           SWI      +21
   3504            cl->answer=p;
   \   0000001C   AC5084E5           STR      R5,[R4, #+172]
   3505          }
   \   00000020   3080BDE8           POP      {R4,R5,PC}       ;; return
   3506          
   3507          

   \                                 In segment CODE, align 4, keep-with-next
   3508          int GetTempName(void)
   3509          {
   \                     GetTempName:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   10D04DE2           SUB      SP,SP,#+16
   3510            static const int DMonth[]={0,31,59,90,120,151,181,212,243,273,304,334,365};
   3511            unsigned long iday;
   3512            TTime tt;
   3513            TDate dd;
   3514            GetDateTime(&dd,&tt);
   \   00000008   08108DE2           ADD      R1,SP,#+8
   \   0000000C   0D00A0E1           MOV      R0,SP
   \   00000010   B40000EF           SWI      +180
   3515            dd.year=dd.year%100;
   \   00000014   00109DE5           LDR      R1,[SP, #+0]
   \   00000018   84209FE5           LDR      R2,??GetTempName_0  ;; 0x51eb851f
   \   0000001C   92318CE0           UMULL    R3,R12,R2,R1
   \   00000020   6430A0E3           MOV      R3,#+100
   \   00000024   ACC2A0E1           LSR      R12,R12,#+5
   \   00000028   930C0CE0           MUL      R12,R3,R12
   3516            iday=365*dd.year+DMonth[dd.month-1]+(dd.day - 1);
   3517            iday=iday+(dd.year>>2);
   \   0000002C   6D20A0E3           MOV      R2,#+109
   \   00000030   0CC041E0           SUB      R12,R1,R12
   \   00000034   00C08DE5           STR      R12,[SP, #+0]
   \   00000038   0400DDE5           LDRB     R0,[SP, #+4]
   \   0000003C   0C10A0E1           MOV      R1,R12
   \   00000040   60C09FE5           LDR      R12,??GetTempName_0+0x4  ;; ??DMonth
   \   00000044   402F82E3           ORR      R2,R2,#0x100
   \   00000048   00318CE0           ADD      R3,R12,R0, LSL #+2
   \   0000004C   043013E5           LDR      R3,[R3, #-4]
   3518            if (dd.month>2||(dd.year&3)>0)
   \   00000050   030050E3           CMP      R0,#+3
   \   00000054   923121E0           MLA      R1,R2,R1,R3
   \   00000058   0520DDE5           LDRB     R2,[SP, #+5]
   \   0000005C   012042E2           SUB      R2,R2,#+1
   \   00000060   011082E0           ADD      R1,R2,R1
   \   00000064   00209DE5           LDR      R2,[SP, #+0]
   \   00000068   221181E0           ADD      R1,R1,R2, LSR #+2
   \   0000006C   0100002A           BCS      ??GetTempName_1
   \   00000070   030012E3           TST      R2,#0x3
   \   00000074   0000000A           BEQ      ??GetTempName_2
   3519              iday++;
   \                     ??GetTempName_1:
   \   00000078   011081E2           ADD      R1,R1,#+1
   3520            iday=(tt.sec+60*(tt.min+60*(tt.hour+24* iday)));
   3521            return iday;
   \                     ??GetTempName_2:
   \   0000007C   0830DDE5           LDRB     R3,[SP, #+8]
   \   00000080   0920DDE5           LDRB     R2,[SP, #+9]
   \   00000084   0A00DDE5           LDRB     R0,[SP, #+10]
   \   00000088   18C0A0E3           MOV      R12,#+24
   \   0000008C   9C3121E0           MLA      R1,R12,R1,R3
   \   00000090   3C30A0E3           MOV      R3,#+60
   \   00000094   932121E0           MLA      R1,R3,R1,R2
   \   00000098   10D08DE2           ADD      SP,SP,#+16
   \   0000009C   930120E0           MLA      R0,R3,R1,R0
   \   000000A0   0080BDE8           POP      {PC}             ;; return
   \                     ??GetTempName_0:
   \   000000A4   1F85EB51           DC32     0x51eb851f
   \   000000A8   ........           DC32     ??DMonth
   3522          }

   \                                 In segment DATA_C, align 4, align-sorted
   \                     ??DMonth:
   \   00000000   000000001F00       DC32 0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334, 365
   \              00003B000000
   \              5A0000007800
   \              000097000000
   \              B5000000D400
   \              0000F3000000
   \              110100003001
   \              00004E010000
   \              6D010000    
   3523          
   3524          

   \                                 In segment CODE, align 4, keep-with-next
   3525          int edchat_onkey(GUI *data, GUI_MSG *msg)
   3526          {
   \                     edchat_onkey:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   3527            //-1 - do redraw
   3528            GBS_DelTimer(&tmr_illumination);
   \   00000004   ........           LDR      R6,??DataTable141  ;; contactlist_menuhdr
   \   00000008   6DDF4DE2           SUB      SP,SP,#+436
   \   0000000C   0040A0E1           MOV      R4,R0
   \   00000010   0170A0E1           MOV      R7,R1
   \   00000014   2800A0E3           MOV      R0,#+40
   \   00000018   500E80E3           ORR      R0,R0,#0x500
   \   0000001C   060080E0           ADD      R0,R0,R6
   \   00000020   8C0100EF           SWI      +396
   3529            CLIST *t;
   3530            TPKT *p;
   3531            EDITCONTROL ec;
   3532            int len, f;
   3533            unsigned err;
   3534            char *s;
   3535            int l=msg->gbsmsg->submess;
   \   00000024   040097E5           LDR      R0,[R7, #+4]
   \   00000028   089090E5           LDR      R9,[R0, #+8]
   3536            EDCHAT_STRUCT *ed_struct=EDIT_GetUserPointer(data);
   \   0000002C   0400A0E1           MOV      R0,R4
   \   00000030   DF0100EF           SWI      +479
   \   00000034   0050A0E1           MOV      R5,R0
   3537          //  WSHDR *ews;
   3538            char fn[256];
   3539          
   3540            if (msg->keys==0xFFF)
   \   00000038   F200D7E1           LDRSH    R0,[R7, #+2]
   \   0000003C   FF10A0E3           MOV      R1,#+255
   \   00000040   F01E81E3           ORR      R1,R1,#0xF00
   \   00000044   010050E1           CMP      R0,R1
   \   00000048   0200001A           BNE      ??edchat_onkey_0
   3541            {
   3542              void ec_menu(EDCHAT_STRUCT *);
   3543              ec_menu(ed_struct);
   \   0000004C   0500A0E1           MOV      R0,R5
   \   00000050   ........           BL       ec_menu
   3544              return(-1);
   \                     ??edchat_onkey_1:
   \   00000054   E20000EA           B        ??edchat_onkey_2
   3545            }
   3546            if (msg->keys==0xFF0)  return (1);
   \                     ??edchat_onkey_0:
   \   00000058   FF0E50E3           CMP      R0,#+4080
   \   0000005C   0100001A           BNE      ??edchat_onkey_3
   \   00000060   0100A0E3           MOV      R0,#+1
   \   00000064   DF0000EA           B        ??edchat_onkey_4
   3547            if (msg->gbsmsg->msg==LONG_PRESS)
   \                     ??edchat_onkey_3:
   \   00000068   040097E5           LDR      R0,[R7, #+4]
   \   0000006C   9510A0E3           MOV      R1,#+149
   \   00000070   040090E5           LDR      R0,[R0, #+4]
   \   00000074   401F81E3           ORR      R1,R1,#0x100
   \   00000078   010050E1           CMP      R0,R1
   3548            {
   3549              if (l==RIGHT_BUTTON)
   \   0000007C   3E005903           CMPEQ    R9,#+62
   \   00000080   1800001A           BNE      ??edchat_onkey_5
   3550              {
   3551                if (EDIT_GetFocus(data)==ed_struct->ed_answer)
   \   00000084   0400A0E1           MOV      R0,R4
   \   00000088   820100EF           SWI      +386
   \   0000008C   081095E5           LDR      R1,[R5, #+8]
   \   00000090   010050E1           CMP      R0,R1
   \   00000094   1300001A           BNE      ??edchat_onkey_5
   3552                {
   3553          	ExtractEditControl(data,ed_struct->ed_answer,&ec);
   \   00000098   08208DE2           ADD      R2,SP,#+8
   \   0000009C   0400A0E1           MOV      R0,R4
   \   000000A0   690100EF           SWI      +361
   3554          	if (ec.pWS->wsbody[0]==(EDIT_GetCursorPos(data)-1))
   \   000000A4   0400A0E1           MOV      R0,R4
   \   000000A8   D30100EF           SWI      +467
   \   000000AC   30109DE5           LDR      R1,[SP, #+48]
   \   000000B0   010040E2           SUB      R0,R0,#+1
   \   000000B4   001091E5           LDR      R1,[R1, #+0]
   \   000000B8   B010D1E1           LDRH     R1,[R1, #+0]
   \   000000BC   000051E1           CMP      R1,R0
   \   000000C0   0800001A           BNE      ??edchat_onkey_5
   3555          	{
   3556          	  t=FindNextActiveContact(ed_struct->ed_contact);
   \   000000C4   00A095E5           LDR      R10,[R5, #+0]
   \   000000C8   0A00A0E1           MOV      R0,R10
   \   000000CC   ........           BL       FindNextActiveContact
   \   000000D0   0080B0E1           MOVS     R8,R0
   3557          	  if (t && t!=ed_struct->ed_contact)
   \   000000D4   0A005011           CMPNE    R0,R10
   \   000000D8   0200000A           BEQ      ??edchat_onkey_5
   3558          	  {
   3559          	    CreateEditChat(t);
   \   000000DC   ........           BL       CreateEditChat
   3560          	    return(1);
   \   000000E0   0100A0E3           MOV      R0,#+1
   \   000000E4   BF0000EA           B        ??edchat_onkey_4
   3561          	  }
   3562          	}
   3563                }
   3564              }
   3565            }
   3566            if (msg->gbsmsg->msg==KEY_DOWN)
   \                     ??edchat_onkey_5:
   \   000000E8   040097E5           LDR      R0,[R7, #+4]
   \   000000EC   9310A0E3           MOV      R1,#+147
   \   000000F0   040090E5           LDR      R0,[R0, #+4]
   \   000000F4   401F81E3           ORR      R1,R1,#0x100
   \   000000F8   010050E1           CMP      R0,R1
   \   000000FC   0A00001A           BNE      ??edchat_onkey_6
   3567            {
   3568              if ((l>='0')&&(l<='9'))
   \   00000100   300059E3           CMP      R9,#+48
   \   00000104   0B0000BA           BLT      ??edchat_onkey_7
   \   00000108   3A0059E3           CMP      R9,#+58
   \   0000010C   060000AA           BGE      ??edchat_onkey_6
   3569              {
   3570                if (EDIT_GetFocus(data)!=ed_struct->ed_answer)
   \   00000110   0400A0E1           MOV      R0,R4
   \   00000114   820100EF           SWI      +386
   \   00000118   081095E5           LDR      R1,[R5, #+8]
   \   0000011C   010050E1           CMP      R0,R1
   \   00000120   0100000A           BEQ      ??edchat_onkey_6
   3571          	EDIT_SetFocus(data,ed_struct->ed_answer);
   \   00000124   0400A0E1           MOV      R0,R4
   \   00000128   9B0100EF           SWI      +411
   3572              }
   3573              if (l==GREEN_BUTTON)
   3574              {
   3575                if (connect_state==3)
   3576                {
   3577          	if ((t=ed_struct->ed_contact))
   3578          	{
   3579                    ExtractEditControl(data,ed_struct->ed_answer,&ec);
   3580                    SaveAnswer(t,ec.pWS);
   3581          	  if ((s=t->answer))
   3582          	  {
   3583          	    if ((len=strlen(s)))
   3584          	    {
   3585          	      t->isactive=ACTIVE_TIME;
   3586          	      p=malloc(sizeof(PKT)+len+1);
   3587          	      p->pkt.uin=t->uin;
   3588          	      p->pkt.type=T_SENDMSG;
   3589          	      p->pkt.data_len=len;
   3590          	      strcpy(p->data,s);
   3591          	      AddStringToLog(t,0x01,p->data,I_str,(++SENDMSGCOUNT)&0x7FFF); //Номер сообщения
   3592          	      SUBPROC((void *)SendAnswer,0,p);
   3593          	      mfree(t->answer);
   3594          	      t->answer=NULL;
   3595          	      //        request_remake_edchat=1;
   3596          	      EDIT_SetFocus(data,ed_struct->ed_answer);
   3597          	      CutWSTR(ews,0);
   3598          	      EDIT_SetTextToFocused(data,ews);
   3599          	      AddMsgToChat(data);
   3600          	      RecountMenu(t, 1);
   3601          	      return(-1);
   3602          	    }
   3603          	  }
   3604          	}
   3605                }
   3606              }
   3607              if (l==ENTER_BUTTON)
   3608              {
   3609          
   3610                if (!EDIT_IsMarkModeActive(data))  // Только если не выделение
   3611                {
   3612                  int pos, len;
   3613                  char *link;
   3614                  ExtractEditControl(ed_struct->ed_chatgui,EDIT_GetFocus(ed_struct->ed_chatgui),&ec);
   3615                  wstrcpy(ews,ec.pWS);
   3616                  pos = EDIT_GetCursorPos(data);
   3617                  len = wstrlen(ews);
   3618                  
   3619                  link = malloc(len+1);
   3620                          
   3621                  if(IsUrl(ews, pos, link))
   3622                  {
   3623                    char templates_path[128];
   3624                    zeromem(templates_path,128);
   3625                    strcpy(templates_path,TEMPLATES_PATH);
   3626                    const char _slash[]="\\";
   3627                    if (templates_path[strlen(templates_path)-1]!='\\') strcat(templates_path,_slash);
   3628          
   3629                    snprintf(fn, 255, "%stmp%u.url", templates_path, GetTempName);
   3630                    if ((f=fopen(fn,A_WriteOnly+A_BIN+A_Create+A_Truncate,P_WRITE,&err))!=-1)
   3631                    {
   3632                      fwrite(f,link,strlen(link),&err);
   3633                      fclose(f,&err);
   3634                      str_2ws(ews,fn,256);
   3635                      ExecuteFile(ews,0,0);            
   3636                      unlink(fn, &err);
   3637                    }          
   3638                    
   3639          //          LockSched();
   3640          //          ShowMSG(1,(int)link);
   3641          //          UnlockSched();
   3642                    mfree(link);
   3643                    return (-1);
   3644                  }
   3645                  else
   3646                  {
   3647                    int i=ed_struct->loaded_templates=LoadTemplates(ed_struct->ed_contact);
   3648                    EDIT_OpenOptionMenuWithUserItems(data,ed_options_handler,ed_struct,i+2);
   3649                    mfree(link);
   3650                    return (-1);
   3651                  }          
   3652                    
   3653                }
   3654          
   3655              }
   3656              if (l==VOL_UP_BUTTON)
   3657              {
   3658                int pos;
   3659          
   3660                if ((pos=EDIT_GetFocus(data)-2)>=2)
   3661                {
   3662                  EDIT_SetFocus(data, pos);
   3663                  EDIT_SetCursorPos(data, 1);
   3664                }
   3665                return (-1);
   3666              }
   3667              if (l==VOL_DOWN_BUTTON)
   3668              {
   3669                int pos;
   3670          
   3671                if ((pos=EDIT_GetFocus(data)+2)<=ed_struct->ed_answer)
   3672                {
   3673                  EDIT_SetFocus(data, pos);
   3674                  EDIT_SetCursorPos(data, 1);
   3675                }
   3676                return (-1);
   3677              }
   3678            }
   3679            return(0); //Do standart keys
   \                     ??edchat_onkey_6:
   \   0000012C   0000A0E3           MOV      R0,#+0
   \   00000130   6DDF8DE2           ADD      SP,SP,#+436
   \   00000134   F08FBDE8           POP      {R4-R11,PC}      ;; return
   \                     ??edchat_onkey_7:
   \   00000138   ........           LDR      R7,??DataTable160  ;; `?<Constant "\\\\">`
   \   0000013C   0B0059E3           CMP      R9,#+11
   \   00000140   4400001A           BNE      ??edchat_onkey_8
   \   00000144   700296E5           LDR      R0,[R6, #+624]
   \   00000148   030050E3           CMP      R0,#+3
   \   0000014C   F6FFFF1A           BNE      ??edchat_onkey_6
   \   00000150   008095E5           LDR      R8,[R5, #+0]
   \   00000154   000058E3           CMP      R8,#+0
   \   00000158   F3FFFF0A           BEQ      ??edchat_onkey_6
   \   0000015C   081095E5           LDR      R1,[R5, #+8]
   \   00000160   08208DE2           ADD      R2,SP,#+8
   \   00000164   0400A0E1           MOV      R0,R4
   \   00000168   690100EF           SWI      +361
   \   0000016C   30109DE5           LDR      R1,[SP, #+48]
   \   00000170   0800A0E1           MOV      R0,R8
   \   00000174   ........           BL       SaveAnswer
   \   00000178   ACA098E5           LDR      R10,[R8, #+172]
   \   0000017C   00005AE3           CMP      R10,#+0
   \   00000180   E9FFFF0A           BEQ      ??edchat_onkey_6
   \   00000184   0A00A0E1           MOV      R0,R10
   \   00000188   1B0000EF           SWI      +27
   \   0000018C   00B0B0E1           MOVS     R11,R0
   \   00000190   E5FFFF0A           BEQ      ??edchat_onkey_6
   \   00000194   B400A0E3           MOV      R0,#+180
   \   00000198   B40088E5           STR      R0,[R8, #+180]
   \   0000019C   09008BE2           ADD      R0,R11,#+9
   \   000001A0   140000EF           SWI      +20
   \   000001A4   0090A0E1           MOV      R9,R0
   \   000001A8   0C0098E5           LDR      R0,[R8, #+12]
   \   000001AC   0A10A0E1           MOV      R1,R10
   \   000001B0   000089E5           STR      R0,[R9, #+0]
   \   000001B4   0200A0E3           MOV      R0,#+2
   \   000001B8   B400C9E1           STRH     R0,[R9, #+4]
   \   000001BC   B6B0C9E1           STRH     R11,[R9, #+6]
   \   000001C0   080089E2           ADD      R0,R9,#+8
   \   000001C4   1A0000EF           SWI      +26
   \   000001C8   300296E5           LDR      R0,[R6, #+560]
   \   000001CC   023087E2           ADD      R3,R7,#+2
   \   000001D0   010080E2           ADD      R0,R0,#+1
   \   000001D4   300286E5           STR      R0,[R6, #+560]
   \   000001D8   8008A0E1           LSL      R0,R0,#+17
   \   000001DC   A008A0E1           LSR      R0,R0,#+17
   \   000001E0   01002DE9           PUSH     {R0}
   \   000001E4   082089E2           ADD      R2,R9,#+8
   \   000001E8   0110A0E3           MOV      R1,#+1
   \   000001EC   0800A0E1           MOV      R0,R8
   \   000001F0   ........           BL       AddStringToLog
   \   000001F4   ........           LDR      R0,??DataTable174  ;; SendAnswer
   \   000001F8   0920A0E1           MOV      R2,R9
   \   000001FC   0010A0E3           MOV      R1,#+0
   \   00000200   710100EF           SWI      +369
   \   00000204   AC0098E5           LDR      R0,[R8, #+172]
   \   00000208   150000EF           SWI      +21
   \   0000020C   0000A0E3           MOV      R0,#+0
   \   00000210   AC0088E5           STR      R0,[R8, #+172]
   \   00000214   081095E5           LDR      R1,[R5, #+8]
   \   00000218   0400A0E1           MOV      R0,R4
   \   0000021C   9B0100EF           SWI      +411
   \   00000220   340296E5           LDR      R0,[R6, #+564]
   \   00000224   0010A0E3           MOV      R1,#+0
   \   00000228   260100EF           SWI      +294
   \   0000022C   341296E5           LDR      R1,[R6, #+564]
   \   00000230   0400A0E1           MOV      R0,R4
   \   00000234   810100EF           SWI      +385
   \   00000238   0400A0E1           MOV      R0,R4
   \   0000023C   ........           BL       AddMsgToChat
   \   00000240   0110A0E3           MOV      R1,#+1
   \   00000244   0800A0E1           MOV      R0,R8
   \   00000248   ........           BL       RecountMenu
   \   0000024C   0000E0E3           MVN      R0,#+0
   \   00000250   04D08DE2           ADD      SP,SP,#+4
   \   00000254   630000EA           B        ??edchat_onkey_4
   \                     ??edchat_onkey_8:
   \   00000258   1A0059E3           CMP      R9,#+26
   \   0000025C   6300001A           BNE      ??edchat_onkey_9
   \   00000260   0400A0E1           MOV      R0,R4
   \   00000264   D80100EF           SWI      +472
   \   00000268   000050E3           CMP      R0,#+0
   \   0000026C   AEFFFF1A           BNE      ??edchat_onkey_6
   \   00000270   040095E5           LDR      R0,[R5, #+4]
   \   00000274   820100EF           SWI      +386
   \   00000278   08208DE2           ADD      R2,SP,#+8
   \   0000027C   0010A0E1           MOV      R1,R0
   \   00000280   040095E5           LDR      R0,[R5, #+4]
   \   00000284   690100EF           SWI      +361
   \   00000288   340296E5           LDR      R0,[R6, #+564]
   \   0000028C   30109DE5           LDR      R1,[SP, #+48]
   \   00000290   1F0100EF           SWI      +287
   \   00000294   0400A0E1           MOV      R0,R4
   \   00000298   D30100EF           SWI      +467
   \   0000029C   0090A0E1           MOV      R9,R0
   \   000002A0   340296E5           LDR      R0,[R6, #+564]
   \   000002A4   230100EF           SWI      +291
   \   000002A8   010080E2           ADD      R0,R0,#+1
   \   000002AC   140000EF           SWI      +20
   \   000002B0   0080A0E1           MOV      R8,R0
   \   000002B4   340296E5           LDR      R0,[R6, #+564]
   \   000002B8   0820A0E1           MOV      R2,R8
   \   000002BC   0910A0E1           MOV      R1,R9
   \   000002C0   ........           BL       IsUrl
   \   000002C4   000050E3           CMP      R0,#+0
   \   000002C8   3B00000A           BEQ      ??edchat_onkey_10
   \   000002CC   8010A0E3           MOV      R1,#+128
   \   000002D0   4D0F8DE2           ADD      R0,SP,#+308
   \   000002D4   1D0100EF           SWI      +285
   \   000002D8   ........           LDR      R1,??DataTable139  ;; TEMPLATES_PATH
   \   000002DC   4D0F8DE2           ADD      R0,SP,#+308
   \   000002E0   1A0000EF           SWI      +26
   \   000002E4   0010D7E5           LDRB     R1,[R7, #0]
   \   000002E8   04008DE2           ADD      R0,SP,#+4
   \   000002EC   0010C0E5           STRB     R1,[R0, #+0]
   \   000002F0   0110D7E5           LDRB     R1,[R7, #+1]
   \   000002F4   0110C0E5           STRB     R1,[R0, #+1]
   \   000002F8   4D0F8DE2           ADD      R0,SP,#+308
   \   000002FC   1B0000EF           SWI      +27
   \   00000300   4D1F8DE2           ADD      R1,SP,#+308
   \   00000304   010080E0           ADD      R0,R0,R1
   \   00000308   010050E5           LDRB     R0,[R0, #-1]
   \   0000030C   5C0050E3           CMP      R0,#+92
   \   00000310   0200000A           BEQ      ??edchat_onkey_11
   \   00000314   04108DE2           ADD      R1,SP,#+4
   \   00000318   4D0F8DE2           ADD      R0,SP,#+308
   \   0000031C   170000EF           SWI      +23
   \                     ??edchat_onkey_11:
   \   00000320   1C019FE5           LDR      R0,??edchat_onkey_12  ;; GetTempName
   \   00000324   042087E2           ADD      R2,R7,#+4
   \   00000328   01002DE9           PUSH     {R0}
   \   0000032C   4E3F8DE2           ADD      R3,SP,#+312
   \   00000330   FF10A0E3           MOV      R1,#+255
   \   00000334   38008DE2           ADD      R0,SP,#+56
   \   00000338   1B0100EF           SWI      +283
   \   0000033C   04308DE2           ADD      R3,SP,#+4
   \   00000340   402FA0E3           MOV      R2,#+256
   \   00000344   0110A0E3           MOV      R1,#+1
   \   00000348   831C81E3           ORR      R1,R1,#0x8300
   \   0000034C   38008DE2           ADD      R0,SP,#+56
   \   00000350   0A0000EF           SWI      +10
   \   00000354   0040A0E1           MOV      R4,R0
   \   00000358   010074E3           CMN      R4,#+1
   \   0000035C   04D08DE2           ADD      SP,SP,#+4
   \   00000360   1D00000A           BEQ      ??edchat_onkey_13
   \   00000364   0800A0E1           MOV      R0,R8
   \   00000368   1B0000EF           SWI      +27
   \   0000036C   0020A0E1           MOV      R2,R0
   \   00000370   0D30A0E1           MOV      R3,SP
   \   00000374   0810A0E1           MOV      R1,R8
   \   00000378   0400A0E1           MOV      R0,R4
   \   0000037C   0C0000EF           SWI      +12
   \   00000380   0D10A0E1           MOV      R1,SP
   \   00000384   0400A0E1           MOV      R0,R4
   \   00000388   0D0000EF           SWI      +13
   \   0000038C   340296E5           LDR      R0,[R6, #+564]
   \   00000390   402FA0E3           MOV      R2,#+256
   \   00000394   34108DE2           ADD      R1,SP,#+52
   \   00000398   6C0100EF           SWI      +364
   \   0000039C   340296E5           LDR      R0,[R6, #+564]
   \   000003A0   0020A0E3           MOV      R2,#+0
   \   000003A4   0010A0E3           MOV      R1,#+0
   \   000003A8   940000EF           SWI      +148
   \   000003AC   0D10A0E1           MOV      R1,SP
   \   000003B0   34008DE2           ADD      R0,SP,#+52
   \   000003B4   6B0100EF           SWI      +363
   \                     ??edchat_onkey_14:
   \   000003B8   070000EA           B        ??edchat_onkey_13
   \                     ??edchat_onkey_10:
   \   000003BC   000095E5           LDR      R0,[R5, #+0]
   \   000003C0   ........           BL       LoadTemplates
   \   000003C4   7C109FE5           LDR      R1,??edchat_onkey_12+0x4  ;; ed_options_handler
   \   000003C8   100085E5           STR      R0,[R5, #+16]
   \   000003CC   023080E2           ADD      R3,R0,#+2
   \   000003D0   0520A0E1           MOV      R2,R5
   \   000003D4   0400A0E1           MOV      R0,R4
   \   000003D8   E50100EF           SWI      +485
   \                     ??edchat_onkey_13:
   \   000003DC   0800A0E1           MOV      R0,R8
   \   000003E0   150000EF           SWI      +21
   \                     ??edchat_onkey_2:
   \   000003E4   0000E0E3           MVN      R0,#+0
   \                     ??edchat_onkey_4:
   \   000003E8   6DDF8DE2           ADD      SP,SP,#+436
   \   000003EC   F08FBDE8           POP      {R4-R11,PC}
   \                     ??edchat_onkey_9:
   \   000003F0   0D0059E3           CMP      R9,#+13
   \   000003F4   0A00001A           BNE      ??edchat_onkey_15
   \   000003F8   0400A0E1           MOV      R0,R4
   \   000003FC   820100EF           SWI      +386
   \   00000400   021040E2           SUB      R1,R0,#+2
   \   00000404   020051E3           CMP      R1,#+2
   \                     ??edchat_onkey_16:
   \   00000408   F5FFFFBA           BLT      ??edchat_onkey_2
   \   0000040C   0400A0E1           MOV      R0,R4
   \   00000410   9B0100EF           SWI      +411
   \   00000414   0110A0E3           MOV      R1,#+1
   \   00000418   0400A0E1           MOV      R0,R4
   \   0000041C   D40100EF           SWI      +468
   \   00000420   EFFFFFEA           B        ??edchat_onkey_2
   \                     ??edchat_onkey_15:
   \   00000424   0E0059E3           CMP      R9,#+14
   \   00000428   3FFFFF1A           BNE      ??edchat_onkey_6
   \   0000042C   0400A0E1           MOV      R0,R4
   \   00000430   820100EF           SWI      +386
   \   00000434   021080E2           ADD      R1,R0,#+2
   \   00000438   080095E5           LDR      R0,[R5, #+8]
   \   0000043C   010050E1           CMP      R0,R1
   \   00000440   F0FFFFEA           B        ??edchat_onkey_16
   \                     ??edchat_onkey_12:
   \   00000444   ........           DC32     GetTempName
   \   00000448   ........           DC32     ed_options_handler
   3680            //1: close
   3681          }
   3682          
   3683          static const HEADER_DESC edchat_hdr={0,0,NULL,NULL,NULL,0,LGP_NULL};
   3684          
   3685          void (*old_ed_redraw)(void *data);

   \                                 In segment CODE, align 4, keep-with-next
   3686          void my_ed_redraw(void *data)
   3687          {
   \                     my_ed_redraw:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   3688            void *edchat_gui;
   3689            EDCHAT_STRUCT *ed_struct;
   3690            if (old_ed_redraw) old_ed_redraw(data);
   \   00000004   ........           LDR      R4,??DataTable141  ;; contactlist_menuhdr
   \   00000008   C41294E5           LDR      R1,[R4, #+708]
   \   0000000C   000051E3           CMP      R1,#+0
   \   00000010   0100000A           BEQ      ??my_ed_redraw_0
   \   00000014   31FF2FE1           BLX      R1
   3691            edchat_gui=FindGUIbyId(edchat_id,NULL);
   \   00000018   0010A0E3           MOV      R1,#+0
   \                     ??my_ed_redraw_0:
   \   0000001C   A80294E5           LDR      R0,[R4, #+680]
   \   00000020   090200EF           SWI      +521
   3692            if (edchat_gui)
   \   00000024   000050E3           CMP      R0,#+0
   \   00000028   3080BD08           POPEQ    {R4,R5,PC}
   3693            {
   3694              ed_struct=EDIT_GetUserPointer(edchat_gui);
   \   0000002C   DF0100EF           SWI      +479
   3695              if (ed_struct)
   \   00000030   000050E3           CMP      R0,#+0
   \   00000034   3080BD08           POPEQ    {R4,R5,PC}
   3696              {
   3697                int icon, width;
   3698          #ifndef	NEWSGOLD
   3699                icon=*(S_ICONS+GetIconIndex(ed_struct->ed_contact));
   3700                ((HEADER_DESC *)&edchat_hdr)->rc.x2=ScreenW()-1-(width=GetImgWidth(icon));
   3701                DrawImg(ScreenW()-1-width,1,icon);
   3702          #else
   3703                icon=*(S_ICONS+GetIconIndex(ed_struct->ed_contact));
   \   00000038   000090E5           LDR      R0,[R0, #+0]
   \   0000003C   ........           BL       GetIconIndex
   \   00000040   000184E0           ADD      R0,R4,R0, LSL #+2
   \   00000044   104190E5           LDR      R4,[R0, #+272]
   3704                width=GetImgWidth(icon);
   \   00000048   0400A0E1           MOV      R0,R4
   \   0000004C   220000EF           SWI      +34
   \   00000050   0050A0E1           MOV      R5,R0
   3705                DrawImg(2,((HeaderH()-width)>>1)+YDISP,icon);
   \   00000054   8A8100EF           SWI      +33162
   \   00000058   0420A0E1           MOV      R2,R4
   \   0000005C   050040E0           SUB      R0,R0,R5
   \   00000060   1810A0E3           MOV      R1,#+24
   \   00000064   C01081E0           ADD      R1,R1,R0, ASR #+1
   \   00000068   0200A0E3           MOV      R0,#+2
   \   0000006C   230000EF           SWI      +35
   3706          /*      DrawRoundedFrame(ScreenW()-8,YDISP,ScreenW()-1,YDISP+7,0,0,0,
   3707          		       GetPaletteAdrByColorIndex(0),
   3708          		       GetPaletteAdrByColorIndex(EDIT_IsBusy(edchat_gui)?3:4));*/
   3709          #endif
   3710              }
   3711            }
   3712          }
   \   00000070   3080BDE8           POP      {R4,R5,PC}       ;; return
   3713          

   \                                 In segment CODE, align 4, keep-with-next
   3714          void edchat_ghook(GUI *data, int cmd)
   3715          {
   \                     edchat_ghook:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   3716          
   3717            static SOFTKEY_DESC sk={0x0FFF,0x0000,NULL};
   3718            sk.lgp_id=(int)lgpData[LGP_Menu];
   \   00000004   ........           LDR      R4,??DataTable141  ;; contactlist_menuhdr
   \   00000008   0050A0E1           MOV      R5,R0
   \   0000000C   ........           LDR      R0,??DataTable142  ;; lgpData
   \   00000010   2CD04DE2           SUB      SP,SP,#+44
   \   00000014   0180A0E1           MOV      R8,R1
   \   00000018   181090E5           LDR      R1,[R0, #+24]
   3719            static SOFTKEY_DESC sk_cancel={0x0FF0,0x0000,NULL};
   3720            sk_cancel.lgp_id=(int)lgpData[LGP_Close];
   \   0000001C   200090E5           LDR      R0,[R0, #+32]
   \   00000020   181284E5           STR      R1,[R4, #+536]
   \   00000024   200284E5           STR      R0,[R4, #+544]
   3721            //  static SOFTKEY_DESC sk={0x0018,0x0000,(int)"Menu"};
   3722            int j;
   3723            EDITCONTROL ec;
   3724            EDCHAT_STRUCT *ed_struct=EDIT_GetUserPointer(data);
   \   00000028   0500A0E1           MOV      R0,R5
   \   0000002C   DF0100EF           SWI      +479
   \   00000030   0070A0E1           MOV      R7,R0
   3725            PNGTOP_DESC *pltop=PNG_TOP();
   \   00000034   B98100EF           SWI      +33209
   \   00000038   0090A0E1           MOV      R9,R0
   3726            if (cmd==9)
   \   0000003C   0060A0E3           MOV      R6,#+0
   \   00000040   090058E3           CMP      R8,#+9
   \   00000044   0500001A           BNE      ??edchat_ghook_0
   3727            {
   3728              GBS_DelTimer(&tmr_illumination);          //by BoBa 25.06.07
   \   00000048   2800A0E3           MOV      R0,#+40
   \   0000004C   500E80E3           ORR      R0,R0,#0x500
   \   00000050   040080E0           ADD      R0,R0,R4
   \   00000054   8C0100EF           SWI      +396
   3729              pltop->dyn_pltop=NULL;
   \   00000058   086089E5           STR      R6,[R9, #+8]
   \   0000005C   170000EA           B        ??edchat_ghook_1
   3730            }
   3731            if (cmd==2)
   \                     ??edchat_ghook_0:
   \   00000060   081097E5           LDR      R1,[R7, #+8]
   \   00000064   020058E3           CMP      R8,#+2
   \   00000068   1600001A           BNE      ??edchat_ghook_2
   3732            {
   3733              ed_struct->ed_chatgui=data;
   \   0000006C   045087E5           STR      R5,[R7, #+4]
   3734          //    edgui_data=data;
   3735              EDIT_SetFocus(data,ed_struct->ed_answer);
   \   00000070   0500A0E1           MOV      R0,R5
   \   00000074   9B0100EF           SWI      +411
   3736          
   3737              static void *methods[16];
   3738              void **m=GetDataOfItemByID(data,2);
   \   00000078   0210A0E3           MOV      R1,#+2
   \   0000007C   0500A0E1           MOV      R0,R5
   \   00000080   4F0100EF           SWI      +335
   \   00000084   0050B0E1           MOVS     R5,R0
   3739              if (m)
   3740              {
   3741                if (m[1])
   \   00000088   04009515           LDRNE    R0,[R5, #+4]
   \   0000008C   00005013           CMPNE    R0,#+0
   \   00000090   6A00000A           BEQ      ??edchat_ghook_3
   3742                {
   3743                  memcpy(methods,m[1],sizeof(methods));
   \   00000094   B26FA0E3           MOV      R6,#+712
   \   00000098   4020A0E3           MOV      R2,#+64
   \   0000009C   0010A0E1           MOV      R1,R0
   \   000000A0   040086E0           ADD      R0,R6,R4
   \   000000A4   1E0100EF           SWI      +286
   3744                  old_ed_redraw=(void (*)(void *))(methods[0]);
   \   000000A8   040096E7           LDR      R0,[R6, +R4]
   \   000000AC   C40284E5           STR      R0,[R4, #+708]
   3745                  methods[0]=(void *)my_ed_redraw;
   \   000000B0   90019FE5           LDR      R0,??edchat_ghook_4  ;; my_ed_redraw
   \   000000B4   040086E7           STR      R0,[R6, +R4]
   3746                  m[1]=methods;
   \   000000B8   040086E0           ADD      R0,R6,R4
   \   000000BC   040085E5           STR      R0,[R5, #+4]
   \                     ??edchat_ghook_1:
   \   000000C0   2CD08DE2           ADD      SP,SP,#+44
   \   000000C4   F083BDE8           POP      {R4-R9,PC}
   3747                }
   3748              }
   3749            }
   3750            if (cmd==3)
   \                     ??edchat_ghook_2:
   \   000000C8   030058E3           CMP      R8,#+3
   \   000000CC   0E00001A           BNE      ??edchat_ghook_5
   3751            {
   3752          //    if (edgui_data==data) edgui_data=NULL;
   3753              if (ed_struct->ed_contact)
   \   000000D0   000097E5           LDR      R0,[R7, #+0]
   \   000000D4   000050E3           CMP      R0,#+0
   \   000000D8   0500000A           BEQ      ??edchat_ghook_6
   3754              {
   3755                ExtractEditControl(data,ed_struct->ed_answer,&ec);
   \   000000DC   0D20A0E1           MOV      R2,SP
   \   000000E0   0500A0E1           MOV      R0,R5
   \   000000E4   690100EF           SWI      +361
   3756                SaveAnswer(ed_struct->ed_contact,ec.pWS);
   \   000000E8   28109DE5           LDR      R1,[SP, #+40]
   \   000000EC   000097E5           LDR      R0,[R7, #+0]
   \   000000F0   ........           BL       SaveAnswer
   3757              }
   3758              RecountMenu(ed_struct->ed_contact, 1);
   \                     ??edchat_ghook_6:
   \   000000F4   000097E5           LDR      R0,[R7, #+0]
   \   000000F8   0110A0E3           MOV      R1,#+1
   \   000000FC   ........           BL       RecountMenu
   3759              mfree(ed_struct);
   \   00000100   0700A0E1           MOV      R0,R7
   \   00000104   150000EF           SWI      +21
   \   00000108   ECFFFFEA           B        ??edchat_ghook_1
   3760            }
   3761            if (cmd==0x0A)
   \                     ??edchat_ghook_5:
   \   0000010C   0A0058E3           CMP      R8,#+10
   \   00000110   1100001A           BNE      ??edchat_ghook_7
   3762            {
   3763              pltop->dyn_pltop=SmilesImgList;
   \   00000114   30019FE5           LDR      R0,??edchat_ghook_4+0x4  ;; SmilesImgList
   \   00000118   000090E5           LDR      R0,[R0, #+0]
   \   0000011C   080089E5           STR      R0,[R9, #+8]
   3764              DisableIDLETMR();
   \   00000120   7F0100EF           SWI      +383
   3765              total_unread = total_unread - ed_struct->requested_decrement_total_unread;
   \   00000124   940294E5           LDR      R0,[R4, #+660]
   \   00000128   0C1097E5           LDR      R1,[R7, #+12]
   \   0000012C   010040E0           SUB      R0,R0,R1
   3766              // Понижаем счетчик непрочитанных
   3767              messages_unread =     messages_unread - ed_struct->ed_contact->unreaded;
   \   00000130   981294E5           LDR      R1,[R4, #+664]
   \   00000134   940284E5           STR      R0,[R4, #+660]
   \   00000138   000097E5           LDR      R0,[R7, #+0]
   \   0000013C   C82090E5           LDR      R2,[R0, #+200]
   \   00000140   021041E0           SUB      R1,R1,R2
   \   00000144   981284E5           STR      R1,[R4, #+664]
   3768              // Обнуляем счетчик непрочитанных по данному контакту
   3769              ed_struct->ed_contact->unreaded = 0;
   \   00000148   C86080E5           STR      R6,[R0, #+200]
   3770              ed_struct->ed_contact->isunread=0;
   \   0000014C   9C6080E5           STR      R6,[R0, #+156]
   3771              ed_struct->requested_decrement_total_unread=0;
   \   00000150   0C6087E5           STR      R6,[R7, #+12]
   3772              UpdateCSMname();
   \   00000154   ........           BL       UpdateCSMname
   \   00000158   D8FFFFEA           B        ??edchat_ghook_1
   3773          /*    if (request_close_edchat)
   3774              {
   3775                request_close_edchat=0;
   3776                GeneralFunc_flag1(edchat_id,1);
   3777                return;
   3778              }*/
   3779            }
   3780            if (cmd==7)
   \                     ??edchat_ghook_7:
   \   0000015C   070058E3           CMP      R8,#+7
   \   00000160   2700001A           BNE      ??edchat_ghook_8
   3781            {
   3782              SetSoftKey(data,&sk,SET_SOFT_KEY_N);
   \   00000164   0020A0E3           MOV      R2,#+0
   \   00000168   851F84E2           ADD      R1,R4,#+532
   \   0000016C   0500A0E1           MOV      R0,R5
   \   00000170   680100EF           SWI      +360
   3783              ExtractEditControl(data,ed_struct->ed_answer,&ec);
   \   00000174   081097E5           LDR      R1,[R7, #+8]
   \   00000178   0D20A0E1           MOV      R2,SP
   \   0000017C   0500A0E1           MOV      R0,R5
   \   00000180   690100EF           SWI      +361
   3784              if (ec.pWS->wsbody[0]==0)
   \   00000184   28009DE5           LDR      R0,[SP, #+40]
   \   00000188   000090E5           LDR      R0,[R0, #+0]
   \   0000018C   B000D0E1           LDRH     R0,[R0, #+0]
   \   00000190   000050E3           CMP      R0,#+0
   \   00000194   0300001A           BNE      ??edchat_ghook_9
   3785                SetSoftKey(data,&sk_cancel,SET_SOFT_KEY_N==0?1:0);
   \   00000198   0120A0E3           MOV      R2,#+1
   \   0000019C   871F84E2           ADD      R1,R4,#+540
   \   000001A0   0500A0E1           MOV      R0,R5
   \   000001A4   680100EF           SWI      +360
   3786              if (!EDIT_IsBusy(data))
   \                     ??edchat_ghook_9:
   \   000001A8   0500A0E1           MOV      R0,R5
   \   000001AC   1C0200EF           SWI      +540
   \   000001B0   000050E3           CMP      R0,#+0
   \   000001B4   2100001A           BNE      ??edchat_ghook_3
   3787              {
   3788                time_to_stop_t9=0;
   \   000001B8   C06284E5           STR      R6,[R4, #+704]
   3789                if (ed_struct->ed_contact->req_add)
   \   000001BC   000097E5           LDR      R0,[R7, #+0]
   \   000001C0   A01090E5           LDR      R1,[R0, #+160]
   \   000001C4   000051E3           CMP      R1,#+0
   \   000001C8   0500000A           BEQ      ??edchat_ghook_10
   3790                {
   3791          	ed_struct->ed_contact->req_add=0;
   \   000001CC   A06080E5           STR      R6,[R0, #+160]
   3792          	AddMsgToChat(data);
   \   000001D0   0500A0E1           MOV      R0,R5
   \   000001D4   ........           BL       AddMsgToChat
   3793          	RecountMenu(ed_struct->ed_contact, 1);
   \   000001D8   000097E5           LDR      R0,[R7, #+0]
   \   000001DC   0110A0E3           MOV      R1,#+1
   \   000001E0   ........           BL       RecountMenu
   3794                }
   3795                if (ed_struct->ed_contact->req_drawack)
   \                     ??edchat_ghook_10:
   \   000001E4   000097E5           LDR      R0,[R7, #+0]
   \   000001E8   A41090E5           LDR      R1,[R0, #+164]
   \   000001EC   000051E3           CMP      R1,#+0
   \   000001F0   1200000A           BEQ      ??edchat_ghook_3
   3796                {
   3797          	ed_struct->ed_contact->req_drawack=0;
   \   000001F4   A46080E5           STR      R6,[R0, #+164]
   3798          	DrawAck(data);
   \   000001F8   0500A0E1           MOV      R0,R5
   \   000001FC   ........           BL       DrawAck
   \   00000200   AEFFFFEA           B        ??edchat_ghook_1
   3799                }
   3800              }
   3801            }
   3802            if (cmd==0x0C)
   \                     ??edchat_ghook_8:
   \   00000204   0C0058E3           CMP      R8,#+12
   \   00000208   0C00001A           BNE      ??edchat_ghook_3
   3803            {
   3804              j=EDIT_GetFocus(data);
   \   0000020C   0500A0E1           MOV      R0,R5
   \   00000210   820100EF           SWI      +386
   \   00000214   0040A0E1           MOV      R4,R0
   3805              if ((EDIT_GetUnFocus(data)<j)&&(j!=ed_struct->ed_answer))
   \   00000218   0500A0E1           MOV      R0,R5
   \   0000021C   830100EF           SWI      +387
   \   00000220   040050E1           CMP      R0,R4
   \   00000224   050000AA           BGE      ??edchat_ghook_3
   \   00000228   080097E5           LDR      R0,[R7, #+8]
   \   0000022C   000054E1           CMP      R4,R0
   \   00000230   0200000A           BEQ      ??edchat_ghook_3
   3806                EDIT_SetCursorPos(data,1);
   \   00000234   0110A0E3           MOV      R1,#+1
   \   00000238   0500A0E1           MOV      R0,R5
   \   0000023C   D40100EF           SWI      +468
   3807            }
   3808          }
   \                     ??edchat_ghook_3:
   \   00000240   2CD08DE2           ADD      SP,SP,#+44       ;; stack cleaning
   \   00000244   F083BDE8           POP      {R4-R9,PC}       ;; return
   \                     ??edchat_ghook_4:
   \   00000248   ........           DC32     my_ed_redraw
   \   0000024C   ........           DC32     SmilesImgList

   \                                 In segment DATA_C, align 4, align-sorted
   3809          
   3810          
   3811          
   3812          static const INPUTDIA_DESC edchat_desc =
   \                     edchat_desc:
   \   00000000   01000000....       DC32 1, edchat_onkey, edchat_ghook, edchat_locret, 0, menu_skt
   \              ............
   \              ........0000
   \              0000........
   \   00000018   000000000000       DC16 0, 0, 0, 0
   \              0000        
   \   00000020   080000006400       DC32 8, 100, 101, 0, 0, 1073741824
   \              000065000000
   \              000000000000
   \              000000000040
   \   00000038   000000000000       DC16 0, 0, 0, 0
   \              0000        
   \   00000040   000000000000       DC32 0H, 0, 2147483647
   \              0000FFFFFF7F
   \   0000004C   2D2D2D2D2D2D       DC8 "-------"
   \              2D00        
   3813          {
   3814            1,
   3815            edchat_onkey,
   3816            edchat_ghook,
   3817            (void *)edchat_locret,
   3818            0,
   3819            &menu_skt,
   3820            {0,NULL,NULL,NULL},
   3821            FONT_SMALL,
   3822            100,
   3823            101,
   3824            0,
   3825            //  0x00000001 - Выровнять по правому краю
   3826            //  0x00000002 - Выровнять по центру
   3827            //  0x00000004 - Инверсия знакомест
   3828            //  0x00000008 - UnderLine
   3829            //  0x00000020 - Не переносить слова
   3830            //  0x00000200 - bold
   3831            0,
   3832            //  0x00000002 - ReadOnly
   3833            //  0x00000004 - Не двигается курсор
   3834            //  0x40000000 - Поменять местами софт-кнопки
   3835            0x40000000
   3836          };
   3837          

   \                                 In segment CODE, align 4, keep-with-next
   3838          void CreateEditChat(CLIST *t)
   3839          {
   \                     CreateEditChat:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   3840            extern const int FIRST_LETTER;
   3841            void *ma=malloc_adr();
   3842            void *eq;
   3843            EDITCONTROL ec;
   3844            EDITC_OPTIONS ec_options;
   3845            int color, font, type;
   3846            int zc;
   3847          
   3848            LOGQ *lp;
   3849            int edchat_toitem;
   3850          //  edcontact=t;
   3851          
   3852            *((int *)(&edchat_hdr.lgp_id))=(int)t->name;
   \   00000004   98649FE5           LDR      R6,??CreateEditChat_0  ;; edchat_desc
   3853          //  *((int **)(&edchat_hdr.icon))=(int *)S_ICONS+GetIconIndex(t);
   3854            *((int **)(&edchat_hdr.icon))=(int *)S_ICONS+IS_NULLICON;
   \   00000008   ........           LDR      R7,??DataTable176  ;; contactlist_menuhdr
   \   0000000C   4CD04DE2           SUB      SP,SP,#+76
   \   00000010   0040A0E1           MOV      R4,R0
   \   00000014   148000EF           SWI      +32788
   \   00000018   0050A0E1           MOV      R5,R0
   \   0000001C   140084E2           ADD      R0,R4,#+20
   \   00000020   440086E5           STR      R0,[R6, #+68]
   \   00000024   550F87E2           ADD      R0,R7,#+340
   \   00000028   400086E5           STR      R0,[R6, #+64]
   3855          
   3856            eq=AllocEQueue(ma,mfree_adr());
   \   0000002C   158000EF           SWI      +32789
   \   00000030   0010A0E1           MOV      R1,R0
   \   00000034   0500A0E1           MOV      R0,R5
   \   00000038   630100EF           SWI      +355
   3857          
   3858          
   3859            lp=t->log;
   \   0000003C   A89094E5           LDR      R9,[R4, #+168]
   \   00000040   0080A0E1           MOV      R8,R0
   \   00000044   000059E3           CMP      R9,#+0
   \   00000048   9500000A           BEQ      ??CreateEditChat_1
   3860          
   3861            while(lp)
   3862            {
   3863              font = ED_H_FONT_SIZE;
   3864              if ((zc=lp->acked&3))
   \                     ??CreateEditChat_2:
   \   0000004C   ........           LDR      R2,??DataTable144  ;; ED_X_FONT_SIZE
   \   00000050   ........           LDR      R0,??DataTable145  ;; ED_H_FONT_SIZE
   \   00000054   002092E5           LDR      R2,[R2, #+0]
   \   00000058   00A090E5           LDR      R10,[R0, #+0]
   \   0000005C   040099E5           LDR      R0,[R9, #+4]
   \   00000060   ........           LDR      R1,??DataTable146  ;; I_COLOR
   \   00000064   1C208DE5           STR      R2,[SP, #+28]
   \   00000068   ........           LDR      R2,??DataTable147  ;; X_COLOR
   \   0000006C   030010E2           ANDS     R0,R0,#0x3
   \   00000070   002092E5           LDR      R2,[R2, #+0]
   \   00000074   14208DE5           STR      R2,[SP, #+20]
   \   00000078   ........           LDR      R2,??DataTable148  ;; O_ED_X_FONT_SIZE
   \   0000007C   002092E5           LDR      R2,[R2, #+0]
   \   00000080   18208DE5           STR      R2,[SP, #+24]
   \   00000084   ........           LDR      R2,??DataTable149  ;; O_X_COLOR
   \   00000088   002092E5           LDR      R2,[R2, #+0]
   \   0000008C   10208DE5           STR      R2,[SP, #+16]
   \   00000090   00B091E5           LDR      R11,[R1, #+0]
   \   00000094   0300000A           BEQ      ??CreateEditChat_3
   3865              {
   3866                if (zc==1)
   \   00000098   010050E3           CMP      R0,#+1
   \   0000009C   1E00001A           BNE      ??CreateEditChat_4
   3867          	color=ACK_COLOR; //Зеленый
   \   000000A0   ........           LDR      R0,??DataTable150  ;; ACK_COLOR
   \   000000A4   1B0000EA           B        ??CreateEditChat_5
   3868                else
   3869          	color=I_COLOR;
   3870              }
   3871              else
   3872              {
   3873                if (lp->ID==0xFFFFFFFF)
   \                     ??CreateEditChat_3:
   \   000000A8   080099E5           LDR      R0,[R9, #+8]
   \   000000AC   010070E3           CMN      R0,#+1
   \   000000B0   1700001A           BNE      ??CreateEditChat_6
   3874                {
   3875                  type = lp->type&0x0F;
   \   000000B4   0C0099E5           LDR      R0,[R9, #+12]
   \   000000B8   0F1000E2           AND      R1,R0,#0xF
   3876                  if(lp->type&0x10)
   \   000000BC   100010E3           TST      R0,#0x10
   \   000000C0   0B00000A           BEQ      ??CreateEditChat_7
   3877                  {
   3878                    color = (type==1)?O_I_COLOR:((type==3)?O_X_COLOR:O_TO_COLOR);
   \   000000C4   010051E3           CMP      R1,#+1
   \   000000C8   ........           LDREQ    R0,??DataTable151  ;; O_I_COLOR
   \   000000CC   0400000A           BEQ      ??CreateEditChat_8
   \   000000D0   030051E3           CMP      R1,#+3
   \   000000D4   18A09D05           LDREQ    R10,[SP, #+24]
   \   000000D8   02B0A001           MOVEQ    R11,R2
   \   000000DC   0E00000A           BEQ      ??CreateEditChat_4
   \   000000E0   ........           LDR      R0,??DataTable152  ;; O_TO_COLOR
   \                     ??CreateEditChat_8:
   \   000000E4   00B090E5           LDR      R11,[R0, #+0]
   \   000000E8   ........           LDR      R0,??DataTable153  ;; O_ED_H_FONT_SIZE
   \   000000EC   00A090E5           LDR      R10,[R0, #+0]
   \   000000F0   090000EA           B        ??CreateEditChat_4
   3879                    font = (type==3)?O_ED_X_FONT_SIZE:O_ED_H_FONT_SIZE;
   3880                  }
   3881                  else
   3882                  {
   3883                    color = (type==1)?I_COLOR:((type==3)?X_COLOR:TO_COLOR);
   \                     ??CreateEditChat_7:
   \   000000F4   010051E3           CMP      R1,#+1
   \   000000F8   0700000A           BEQ      ??CreateEditChat_4
   \   000000FC   030051E3           CMP      R1,#+3
   \   00000100   14B09D05           LDREQ    R11,[SP, #+20]
   \   00000104   1CA09D05           LDREQ    R10,[SP, #+28]
   \   00000108   0300000A           BEQ      ??CreateEditChat_4
   \   0000010C   ........           LDR      R0,??DataTable154  ;; TO_COLOR
   \   00000110   000000EA           B        ??CreateEditChat_5
   3884                    font = (type==3)?ED_X_FONT_SIZE:ED_H_FONT_SIZE;
   3885                  }
   3886                }
   3887                else
   3888          	color=UNACK_COLOR; //Серый
   \                     ??CreateEditChat_6:
   \   00000114   ........           LDR      R0,??DataTable155  ;; UNACK_COLOR
   \                     ??CreateEditChat_5:
   \   00000118   00B090E5           LDR      R11,[R0, #+0]
   3889              }
   3890              PrepareEditControl(&ec);
   \                     ??CreateEditChat_4:
   \   0000011C   20008DE2           ADD      R0,SP,#+32
   \   00000120   640100EF           SWI      +356
   3891              if ((lp->type&0x0F)!=3)
   \   00000124   0C0099E5           LDR      R0,[R9, #+12]
   \   00000128   0F0000E2           AND      R0,R0,#0xF
   \   0000012C   030050E3           CMP      R0,#+3
   \   00000130   0800000A           BEQ      ??CreateEditChat_9
   3892              {
   3893                ascii2ws(ews,lp->hdr);
   \   00000134   340297E5           LDR      R0,[R7, #+564]
   \   00000138   101089E2           ADD      R1,R9,#+16
   \   0000013C   ........           _BLF     ascii2ws,??ascii2ws??rA
   3894                ConstructEditControl(&ec,ECT_HEADER,ECF_APPEND_EOL,ews,ews->wsbody[0]);
   \   00000140   343297E5           LDR      R3,[R7, #+564]
   \   00000144   4020A0E3           MOV      R2,#+64
   \   00000148   000093E5           LDR      R0,[R3, #+0]
   \   0000014C   B000D0E1           LDRH     R0,[R0, #+0]
   \   00000150   01002DE9           PUSH     {R0}
   \   00000154   030000EA           B        ??CreateEditChat_10
   3895              }
   3896              else
   3897                ConstructEditControl(&ec,ECT_HEADER,ECF_DELSTR,ews,0);
   \                     ??CreateEditChat_9:
   \   00000158   0000A0E3           MOV      R0,#+0
   \   0000015C   01002DE9           PUSH     {R0}
   \   00000160   343297E5           LDR      R3,[R7, #+564]
   \   00000164   2020A0E3           MOV      R2,#+32
   \                     ??CreateEditChat_10:
   \   00000168   0110A0E3           MOV      R1,#+1
   \   0000016C   24008DE2           ADD      R0,SP,#+36
   \   00000170   650100EF           SWI      +357
   \   00000174   04D08DE2           ADD      SP,SP,#+4
   3898              PrepareEditCOptions(&ec_options);
   \   00000178   0D00A0E1           MOV      R0,SP
   \   0000017C   C80100EF           SWI      +456
   3899              SetPenColorToEditCOptions(&ec_options,color);
   \   00000180   0B10A0E1           MOV      R1,R11
   \   00000184   0D00A0E1           MOV      R0,SP
   \   00000188   CC0100EF           SWI      +460
   3900              SetFontToEditCOptions(&ec_options,font);
   \   0000018C   0A10A0E1           MOV      R1,R10
   \   00000190   0D00A0E1           MOV      R0,SP
   \   00000194   CA0100EF           SWI      +458
   3901              CopyOptionsToEditControl(&ec,&ec_options);
   \   00000198   0D10A0E1           MOV      R1,SP
   \   0000019C   20008DE2           ADD      R0,SP,#+32
   \   000001A0   CE0100EF           SWI      +462
   3902              AddEditControlToEditQend(eq,&ec,ma);
   \   000001A4   0520A0E1           MOV      R2,R5
   \   000001A8   20108DE2           ADD      R1,SP,#+32
   \   000001AC   0800A0E1           MOV      R0,R8
   \   000001B0   660100EF           SWI      +358
   3903              if ((lp->type&0x0F)!=3)
   \   000001B4   0C0099E5           LDR      R0,[R9, #+12]
   \   000001B8   0F1000E2           AND      R1,R0,#0xF
   \   000001BC   030051E3           CMP      R1,#+3
   \   000001C0   0300000A           BEQ      ??CreateEditChat_11
   3904              {
   3905                ParseAnswer(ews,lp->text);
   \   000001C4   340297E5           LDR      R0,[R7, #+564]
   \   000001C8   601089E2           ADD      R1,R9,#+96
   \   000001CC   ........           BL       ParseAnswer
   \   000001D0   050000EA           B        ??CreateEditChat_12
   3906              }
   3907              else
   3908              {
   3909                ParseXStatusText(ews,lp->text,(lp->type&0x10)?O_X_COLOR:X_COLOR);
   \                     ??CreateEditChat_11:
   \   000001D4   100010E3           TST      R0,#0x10
   \   000001D8   10209D15           LDRNE    R2,[SP, #+16]
   \   000001DC   340297E5           LDR      R0,[R7, #+564]
   \   000001E0   14209D05           LDREQ    R2,[SP, #+20]
   \   000001E4   601089E2           ADD      R1,R9,#+96
   \   000001E8   ........           BL       ParseXStatusText
   3910              }
   3911              PrepareEditControl(&ec);
   \                     ??CreateEditChat_12:
   \   000001EC   20008DE2           ADD      R0,SP,#+32
   \   000001F0   640100EF           SWI      +356
   3912              ConstructEditControl(&ec,
   3913                                   ECT_NORMAL_TEXT,
   3914                                   ews->wsbody[0] ? ECF_APPEND_EOL|ECF_DISABLE_T9 : ECF_DELSTR,
   3915                                   ews,ews->wsbody[0]);
   \   000001F4   343297E5           LDR      R3,[R7, #+564]
   \   000001F8   000093E5           LDR      R0,[R3, #+0]
   \   000001FC   B010D0E1           LDRH     R1,[R0, #+0]
   \   00000200   000051E3           CMP      R1,#+0
   \   00000204   0100A0E1           MOV      R0,R1
   \   00000208   01002DE9           PUSH     {R0}
   \   0000020C   812DA013           MOVNE    R2,#+8256
   \   00000210   2020A003           MOVEQ    R2,#+32
   \   00000214   0310A0E3           MOV      R1,#+3
   \   00000218   24008DE2           ADD      R0,SP,#+36
   \   0000021C   650100EF           SWI      +357
   3916              PrepareEditCOptions(&ec_options);
   \   00000220   04008DE2           ADD      R0,SP,#+4
   \   00000224   C80100EF           SWI      +456
   3917          //#ifdef M75
   3918              if ((lp->type&0x0F)!=3)
   \   00000228   0C0099E5           LDR      R0,[R9, #+12]
   \   0000022C   04D08DE2           ADD      SP,SP,#+4
   \   00000230   0F1000E2           AND      R1,R0,#0xF
   \   00000234   030051E3           CMP      R1,#+3
   \   00000238   0400000A           BEQ      ??CreateEditChat_13
   3919              {
   3920                SetFontToEditCOptions(&ec_options,(lp->type&0x10)?O_ED_FONT_SIZE:ED_FONT_SIZE);
   \   0000023C   100010E3           TST      R0,#0x10
   \   00000240   ........           LDRNE    R0,??DataTable156  ;; O_ED_FONT_SIZE
   \   00000244   ........           LDREQ    R0,??DataTable158  ;; ED_FONT_SIZE
   \   00000248   001090E5           LDR      R1,[R0, #+0]
   \   0000024C   080000EA           B        ??CreateEditChat_14
   3921              }
   3922              else
   3923              {
   3924                SetPenColorToEditCOptions(&ec_options,(lp->type&0x10)?O_X_COLOR:X_COLOR);
   \                     ??CreateEditChat_13:
   \   00000250   100010E3           TST      R0,#0x10
   \   00000254   10109D15           LDRNE    R1,[SP, #+16]
   \   00000258   0D00A0E1           MOV      R0,SP
   \   0000025C   14109D05           LDREQ    R1,[SP, #+20]
   \   00000260   CC0100EF           SWI      +460
   3925                SetFontToEditCOptions(&ec_options,(lp->type&0x10)?O_ED_X_FONT_SIZE:ED_X_FONT_SIZE);
   \   00000264   0C0099E5           LDR      R0,[R9, #+12]
   \   00000268   100010E3           TST      R0,#0x10
   \   0000026C   18109D15           LDRNE    R1,[SP, #+24]
   \   00000270   1C109D05           LDREQ    R1,[SP, #+28]
   \                     ??CreateEditChat_14:
   \   00000274   0D00A0E1           MOV      R0,SP
   \   00000278   CA0100EF           SWI      +458
   3926              }
   3927          //#else
   3928          //    SetFontToEditCOptions(&ec_options,(lp->type&0x10)?O_ED_FONT_SIZE:ED_FONT_SIZE);
   3929          //#endif
   3930              CopyOptionsToEditControl(&ec,&ec_options);
   \   0000027C   0D10A0E1           MOV      R1,SP
   \   00000280   20008DE2           ADD      R0,SP,#+32
   \   00000284   CE0100EF           SWI      +462
   3931              AddEditControlToEditQend(eq,&ec,ma);
   \   00000288   0520A0E1           MOV      R2,R5
   \   0000028C   20108DE2           ADD      R1,SP,#+32
   \   00000290   0800A0E1           MOV      R0,R8
   \   00000294   660100EF           SWI      +358
   3932              lp=lp->next;
   \   00000298   009099E5           LDR      R9,[R9, #+0]
   3933            }
   \   0000029C   000059E3           CMP      R9,#+0
   \   000002A0   69FFFF1A           BNE      ??CreateEditChat_2
   3934            if (t->isunread) 
   \                     ??CreateEditChat_1:
   \   000002A4   9C0094E5           LDR      R0,[R4, #+156]
   \   000002A8   000050E3           CMP      R0,#+0
   \   000002AC   0300000A           BEQ      ??CreateEditChat_15
   3935            {
   3936              total_unread = total_unread - t->unreaded;
   \   000002B0   940297E5           LDR      R0,[R7, #+660]
   \   000002B4   C81094E5           LDR      R1,[R4, #+200]
   \   000002B8   010040E0           SUB      R0,R0,R1
   \   000002BC   940287E5           STR      R0,[R7, #+660]
   3937            }
   3938            messages_unread = messages_unread - t->unreaded;
   \                     ??CreateEditChat_15:
   \   000002C0   980297E5           LDR      R0,[R7, #+664]
   \   000002C4   C81094E5           LDR      R1,[R4, #+200]
   3939            t->unreaded = 0;
   \   000002C8   0090A0E3           MOV      R9,#+0
   \   000002CC   010040E0           SUB      R0,R0,R1
   \   000002D0   980287E5           STR      R0,[R7, #+664]
   \   000002D4   C89084E5           STR      R9,[R4, #+200]
   3940            t->isunread=0;
   \   000002D8   9C9084E5           STR      R9,[R4, #+156]
   3941            UpdateCSMname();
   \   000002DC   ........           BL       UpdateCSMname
   3942            ChangeContactPos(t);
   \   000002E0   0400A0E1           MOV      R0,R4
   \   000002E4   ........           _BLF     ChangeContactPos,??ChangeContactPos??rA
   3943            wsprintf(ews, "-------");
   \   000002E8   340297E5           LDR      R0,[R7, #+564]
   \   000002EC   4C1086E2           ADD      R1,R6,#+76
   \   000002F0   240100EF           SWI      +292
   3944            PrepareEditControl(&ec);
   \   000002F4   20008DE2           ADD      R0,SP,#+32
   \   000002F8   640100EF           SWI      +356
   3945            ConstructEditControl(&ec,ECT_HEADER,ECF_APPEND_EOL,ews,ews->wsbody[0]);
   \   000002FC   343297E5           LDR      R3,[R7, #+564]
   \   00000300   4020A0E3           MOV      R2,#+64
   \   00000304   000093E5           LDR      R0,[R3, #+0]
   \   00000308   0110A0E3           MOV      R1,#+1
   \   0000030C   B000D0E1           LDRH     R0,[R0, #+0]
   \   00000310   01002DE9           PUSH     {R0}
   \   00000314   24008DE2           ADD      R0,SP,#+36
   \   00000318   650100EF           SWI      +357
   3946            PrepareEditCOptions(&ec_options);
   \   0000031C   04008DE2           ADD      R0,SP,#+4
   \   00000320   C80100EF           SWI      +456
   3947            SetFontToEditCOptions(&ec_options,ED_FONT_SIZE);
   \   00000324   ........           LDR      R0,??DataTable158  ;; ED_FONT_SIZE
   \   00000328   00A090E5           LDR      R10,[R0, #+0]
   \   0000032C   04008DE2           ADD      R0,SP,#+4
   \   00000330   0A10A0E1           MOV      R1,R10
   \   00000334   CA0100EF           SWI      +458
   3948            CopyOptionsToEditControl(&ec,&ec_options);
   \   00000338   04108DE2           ADD      R1,SP,#+4
   \   0000033C   24008DE2           ADD      R0,SP,#+36
   \   00000340   CE0100EF           SWI      +462
   3949            AddEditControlToEditQend(eq,&ec,ma);
   \   00000344   0520A0E1           MOV      R2,R5
   \   00000348   24108DE2           ADD      R1,SP,#+36
   \   0000034C   0800A0E1           MOV      R0,R8
   \   00000350   660100EF           SWI      +358
   3950          
   3951            if (t->answer) ParseAnswer(ews,t->answer);
   \   00000354   AC1094E5           LDR      R1,[R4, #+172]
   \   00000358   04D08DE2           ADD      SP,SP,#+4
   \   0000035C   000051E3           CMP      R1,#+0
   \   00000360   0200000A           BEQ      ??CreateEditChat_16
   \   00000364   340297E5           LDR      R0,[R7, #+564]
   \   00000368   ........           BL       ParseAnswer
   \   0000036C   020000EA           B        ??CreateEditChat_17
   3952            else  CutWSTR(ews,0);
   \                     ??CreateEditChat_16:
   \   00000370   340297E5           LDR      R0,[R7, #+564]
   \   00000374   0010A0E3           MOV      R1,#+0
   \   00000378   260100EF           SWI      +294
   3953            PrepareEditControl(&ec);
   \                     ??CreateEditChat_17:
   \   0000037C   20008DE2           ADD      R0,SP,#+32
   \   00000380   640100EF           SWI      +356
   3954            ConstructEditControl(&ec,3,(FIRST_LETTER)?ECF_DEFAULT_BIG_LETTER:0,ews,7168);
   \   00000384   1C019FE5           LDR      R0,??CreateEditChat_0+0x4  ;; FIRST_LETTER
   \   00000388   0310A0E3           MOV      R1,#+3
   \   0000038C   000090E5           LDR      R0,[R0, #+0]
   \   00000390   000050E3           CMP      R0,#+0
   \   00000394   700DA0E3           MOV      R0,#+7168
   \   00000398   01002DE9           PUSH     {R0}
   \   0000039C   343297E5           LDR      R3,[R7, #+564]
   \   000003A0   402DA013           MOVNE    R2,#+4096
   \   000003A4   0020A003           MOVEQ    R2,#+0
   \   000003A8   24008DE2           ADD      R0,SP,#+36
   \   000003AC   650100EF           SWI      +357
   3955          
   3956            PrepareEditCOptions(&ec_options);
   \   000003B0   04008DE2           ADD      R0,SP,#+4
   \   000003B4   C80100EF           SWI      +456
   3957            SetFontToEditCOptions(&ec_options,ED_FONT_SIZE);
   \   000003B8   0A10A0E1           MOV      R1,R10
   \   000003BC   04008DE2           ADD      R0,SP,#+4
   \   000003C0   CA0100EF           SWI      +458
   3958            CopyOptionsToEditControl(&ec,&ec_options);
   \   000003C4   04108DE2           ADD      R1,SP,#+4
   \   000003C8   24008DE2           ADD      R0,SP,#+36
   \   000003CC   CE0100EF           SWI      +462
   3959            edchat_toitem=AddEditControlToEditQend(eq,&ec,ma);
   \   000003D0   0520A0E1           MOV      R2,R5
   \   000003D4   24108DE2           ADD      R1,SP,#+36
   \   000003D8   0800A0E1           MOV      R0,R8
   \   000003DC   660100EF           SWI      +358
   \   000003E0   00A0A0E1           MOV      R10,R0
   3960          
   3961            if (t->req_xtext)
   \   000003E4   C00094E5           LDR      R0,[R4, #+192]
   \   000003E8   04D08DE2           ADD      SP,SP,#+4
   \   000003EC   000050E3           CMP      R0,#+0
   \   000003F0   0400000A           BEQ      ??CreateEditChat_18
   3962            {
   3963              FreeXText(t);
   \   000003F4   0400A0E1           MOV      R0,R4
   \   000003F8   ........           _BLF     FreeXText,??FreeXText??rA
   3964              t->req_xtext=0;
   \   000003FC   C09084E5           STR      R9,[R4, #+192]
   3965              RequestXText(t->uin);
   \   00000400   0C0094E5           LDR      R0,[R4, #+12]
   \   00000404   ........           BL       RequestXText
   3966            }
   3967          
   3968            EDCHAT_STRUCT *ed_struct=malloc(sizeof(EDCHAT_STRUCT));
   \                     ??CreateEditChat_18:
   \   00000408   1400A0E3           MOV      R0,#+20
   \   0000040C   140000EF           SWI      +20
   \   00000410   0050A0E1           MOV      R5,R0
   3969            ed_struct->ed_contact=t;
   \   00000414   004085E5           STR      R4,[R5, #+0]
   3970            ed_struct->ed_answer=edchat_toitem;
   \   00000418   08A085E5           STR      R10,[R5, #+8]
   3971            ed_struct->requested_decrement_total_unread=0;
   \   0000041C   0C9085E5           STR      R9,[R5, #+12]
   3972            
   3973            t->req_add=0;
   \   00000420   A09084E5           STR      R9,[R4, #+160]
   3974            t->last_log=NULL;
   \   00000424   B09084E5           STR      R9,[R4, #+176]
   3975          
   3976            //  int scr_w=ScreenW();
   3977            //  int scr_h=ScreenH();
   3978            //  int head_h=HeaderH();
   3979          
   3980            patch_header(&edchat_hdr);
   \   00000428   B893C6E1           STRH     R9,[R6, #+56]
   \   0000042C   1800A0E3           MOV      R0,#+24
   \   00000430   BA03C6E1           STRH     R0,[R6, #+58]
   \   00000434   888100EF           SWI      +33160
   \   00000438   010040E2           SUB      R0,R0,#+1
   \   0000043C   BC03C6E1           STRH     R0,[R6, #+60]
   \   00000440   8A8100EF           SWI      +33162
   \   00000444   170080E2           ADD      R0,R0,#+23
   \   00000448   BE03C6E1           STRH     R0,[R6, #+62]
   3981            patch_input(&edchat_desc);
   \   0000044C   B891C6E1           STRH     R9,[R6, #+24]
   \   00000450   8A8100EF           SWI      +33162
   \   00000454   190080E2           ADD      R0,R0,#+25
   \   00000458   BA01C6E1           STRH     R0,[R6, #+26]
   \   0000045C   888100EF           SWI      +33160
   \   00000460   010040E2           SUB      R0,R0,#+1
   \   00000464   BC01C6E1           STRH     R0,[R6, #+28]
   \   00000468   898100EF           SWI      +33161
   \   0000046C   0040A0E1           MOV      R4,R0
   \   00000470   8B8100EF           SWI      +33163
   \   00000474   000044E0           SUB      R0,R4,R0
   \   00000478   010040E2           SUB      R0,R0,#+1
   \   0000047C   BE01C6E1           STRH     R0,[R6, #+30]
   3982            //  edchat_desc.font=ED_FONT_SIZE;
   3983            
   3984            
   3985            edchat_id=CreateInputTextDialog(&edchat_desc,&edchat_hdr,eq,1,ed_struct);
   \   00000480   20002DE9           PUSH     {R5}
   \   00000484   0130A0E3           MOV      R3,#+1
   \   00000488   0820A0E1           MOV      R2,R8
   \   0000048C   381086E2           ADD      R1,R6,#+56
   \   00000490   0600A0E1           MOV      R0,R6
   \   00000494   670100EF           SWI      +359
   \   00000498   A80287E5           STR      R0,[R7, #+680]
   3986          }
   \   0000049C   50D08DE2           ADD      SP,SP,#+80
   \   000004A0   F08FBDE8           POP      {R4-R11,PC}      ;; return
   \                     ??CreateEditChat_0:
   \   000004A4   ........           DC32     edchat_desc
   \   000004A8   ........           DC32     FIRST_LETTER
   3987          
   3988          //-----------------------------------------------------------------------------
   3989          #define EC_MNU_MAX 9
   3990          

   \                                 In segment CODE, align 4, keep-with-next
   3991          void Quote(GUI *data)
   3992          {
   \                     Quote:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   84D04DE2           SUB      SP,SP,#+132
   3993            int q_n;
   3994            EDITCONTROL ec, ec_hdr;
   3995            EDITCONTROL ec_ed;
   3996            WSHDR *ed_ws;
   3997            WSHDR *ws;
   3998          
   3999            EDCHAT_STRUCT *ed_struct;
   4000            ed_struct=MenuGetUserPointer(data);
   \   00000008   E00100EF           SWI      +480
   \   0000000C   0040A0E1           MOV      R4,R0
   4001          
   4002            q_n=EDIT_GetFocus(ed_struct->ed_chatgui);
   \   00000010   040094E5           LDR      R0,[R4, #+4]
   \   00000014   820100EF           SWI      +386
   \   00000018   0050A0E1           MOV      R5,R0
   4003            ExtractEditControl(ed_struct->ed_chatgui,q_n,&ec);
   \   0000001C   040094E5           LDR      R0,[R4, #+4]
   \   00000020   2C208DE2           ADD      R2,SP,#+44
   \   00000024   0510A0E1           MOV      R1,R5
   \   00000028   690100EF           SWI      +361
   4004            ExtractEditControl(ed_struct->ed_chatgui,q_n-1,&ec_hdr);
   \   0000002C   040094E5           LDR      R0,[R4, #+4]
   \   00000030   58208DE2           ADD      R2,SP,#+88
   \   00000034   011045E2           SUB      R1,R5,#+1
   \   00000038   690100EF           SWI      +361
   4005            ExtractEditControl(ed_struct->ed_chatgui,ed_struct->ed_answer,&ec_ed);
   \   0000003C   081094E5           LDR      R1,[R4, #+8]
   \   00000040   040094E5           LDR      R0,[R4, #+4]
   \   00000044   0D20A0E1           MOV      R2,SP
   \   00000048   690100EF           SWI      +361
   4006          
   4007            ed_ws=AllocWS((ec_ed.maxlen<<1) + 1);
   \   0000004C   F801DDE1           LDRSH    R0,[SP, #+24]
   \   00000050   0110A0E3           MOV      R1,#+1
   \   00000054   800081E0           ADD      R0,R1,R0, LSL #+1
   \   00000058   250100EF           SWI      +293
   \   0000005C   0050A0E1           MOV      R5,R0
   4008            if(wstrlen(ec_hdr.pWS))
   \   00000060   80009DE5           LDR      R0,[SP, #+128]
   \   00000064   230100EF           SWI      +291
   \   00000068   000050E3           CMP      R0,#+0
   \   0000006C   0600000A           BEQ      ??Quote_0
   4009            {
   4010              wstrcpy(ed_ws,ec_hdr.pWS);
   \   00000070   80109DE5           LDR      R1,[SP, #+128]
   \   00000074   0500A0E1           MOV      R0,R5
   \   00000078   1F0100EF           SWI      +287
   4011              wsAppendChar(ed_ws,'\r');
   \   0000007C   0D10A0E3           MOV      R1,#+13
   \   00000080   0500A0E1           MOV      R0,R5
   \   00000084   1C0000EF           SWI      +28
   \   00000088   020000EA           B        ??Quote_1
   4012            }
   4013            else
   4014              CutWSTR(ed_ws,0);
   \                     ??Quote_0:
   \   0000008C   0010A0E3           MOV      R1,#+0
   \   00000090   0500A0E1           MOV      R0,R5
   \   00000094   260100EF           SWI      +294
   4015            if (EDIT_IsMarkModeActive(ed_struct->ed_chatgui))
   \                     ??Quote_1:
   \   00000098   040094E5           LDR      R0,[R4, #+4]
   \   0000009C   D80100EF           SWI      +472
   \   000000A0   000050E3           CMP      R0,#+0
   \   000000A4   0300000A           BEQ      ??Quote_2
   4016            {
   4017              EDIT_GetMarkedText(ed_struct->ed_chatgui,ed_ws);
   \   000000A8   040094E5           LDR      R0,[R4, #+4]
   \   000000AC   0510A0E1           MOV      R1,R5
   \   000000B0   D90100EF           SWI      +473
   \   000000B4   020000EA           B        ??Quote_3
   4018            }
   4019            else
   4020            {
   4021              wstrcat(ed_ws,ec.pWS);
   \                     ??Quote_2:
   \   000000B8   54109DE5           LDR      R1,[SP, #+84]
   \   000000BC   0500A0E1           MOV      R0,R5
   \   000000C0   210100EF           SWI      +289
   4022            }
   4023            int ed_pos=0;
   \                     ??Quote_3:
   \   000000C4   0000A0E3           MOV      R0,#+0
   \   000000C8   FF60A0E3           MOV      R6,#+255
   \   000000CC   FF6C86E3           ORR      R6,R6,#0xFF00
   4024            do
   4025            {
   4026              ed_pos++;
   \                     ??Quote_4:
   \   000000D0   017080E2           ADD      R7,R0,#+1
   4027              wsInsertChar(ed_ws,'>',ed_pos++);
   \   000000D4   0720A0E1           MOV      R2,R7
   \   000000D8   3E10A0E3           MOV      R1,#+62
   \   000000DC   0500A0E1           MOV      R0,R5
   \   000000E0   1D0000EF           SWI      +29
   \   000000E4   017087E2           ADD      R7,R7,#+1
   4028              wsInsertChar(ed_ws,' ',ed_pos);
   \   000000E8   0720A0E1           MOV      R2,R7
   \   000000EC   2010A0E3           MOV      R1,#+32
   \   000000F0   0500A0E1           MOV      R0,R5
   \   000000F4   1D0000EF           SWI      +29
   4029            }
   4030            while((ed_pos=wstrchr(ed_ws,ed_pos,'\r'))!=0xFFFF);
   \   000000F8   0D20A0E3           MOV      R2,#+13
   \   000000FC   0710A0E1           MOV      R1,R7
   \   00000100   0500A0E1           MOV      R0,R5
   \   00000104   DC0100EF           SWI      +476
   \   00000108   060050E1           CMP      R0,R6
   \   0000010C   EFFFFF1A           BNE      ??Quote_4
   4031            wsAppendChar(ed_ws,'\n');
   \   00000110   0A10A0E3           MOV      R1,#+10
   \   00000114   0500A0E1           MOV      R0,R5
   \   00000118   1C0000EF           SWI      +28
   4032            wsAppendChar(ed_ws,'\r');
   \   0000011C   0D10A0E3           MOV      R1,#+13
   \   00000120   0500A0E1           MOV      R0,R5
   \   00000124   1C0000EF           SWI      +28
   4033            ws=AllocWS(ec_ed.pWS->wsbody[0]+ed_ws->wsbody[0]);
   \   00000128   28009DE5           LDR      R0,[SP, #+40]
   \   0000012C   001095E5           LDR      R1,[R5, #+0]
   \   00000130   000090E5           LDR      R0,[R0, #+0]
   \   00000134   B010D1E1           LDRH     R1,[R1, #+0]
   \   00000138   B000D0E1           LDRH     R0,[R0, #+0]
   \   0000013C   000081E0           ADD      R0,R1,R0
   \   00000140   250100EF           SWI      +293
   4034            wstrcpy(ws,ec_ed.pWS);
   \   00000144   28109DE5           LDR      R1,[SP, #+40]
   \   00000148   0060A0E1           MOV      R6,R0
   \   0000014C   1F0100EF           SWI      +287
   4035            wstrcat(ws,ed_ws);
   \   00000150   0510A0E1           MOV      R1,R5
   \   00000154   0600A0E1           MOV      R0,R6
   \   00000158   210100EF           SWI      +289
   4036            FreeWS(ed_ws);
   \   0000015C   0500A0E1           MOV      R0,R5
   \   00000160   290100EF           SWI      +297
   4037            CutWSTR(ws,ec_ed.maxlen);
   \   00000164   F811DDE1           LDRSH    R1,[SP, #+24]
   \   00000168   0600A0E1           MOV      R0,R6
   \   0000016C   260100EF           SWI      +294
   4038            EDIT_SetFocus(ed_struct->ed_chatgui,ed_struct->ed_answer);
   \   00000170   081094E5           LDR      R1,[R4, #+8]
   \   00000174   040094E5           LDR      R0,[R4, #+4]
   \   00000178   9B0100EF           SWI      +411
   4039            EDIT_SetTextToFocused(ed_struct->ed_chatgui,ws);
   \   0000017C   040094E5           LDR      R0,[R4, #+4]
   \   00000180   0610A0E1           MOV      R1,R6
   \   00000184   810100EF           SWI      +385
   4040            FreeWS(ws);
   \   00000188   0600A0E1           MOV      R0,R6
   \   0000018C   290100EF           SWI      +297
   4041            GeneralFuncF1(1);
   \   00000190   0100A0E3           MOV      R0,#+1
   \   00000194   3B0100EF           SWI      +315
   4042          }
   \   00000198   84D08DE2           ADD      SP,SP,#+132
   \   0000019C   F080BDE8           POP      {R4-R7,PC}       ;; return
   4043          

   \                                 In segment CODE, align 4, keep-with-next
   4044          void GetShortInfo(GUI *data)
   4045          {
   \                     GetShortInfo:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   4046            EDCHAT_STRUCT *ed_struct;
   4047            ed_struct=MenuGetUserPointer(data);
   \   00000004   E00100EF           SWI      +480
   \   00000008   0040A0E1           MOV      R4,R0
   4048          
   4049            TPKT *p;
   4050            CLIST *t;
   4051            if ((t=ed_struct->ed_contact)&&(connect_state==3))
   \   0000000C   005094E5           LDR      R5,[R4, #+0]
   \   00000010   000055E3           CMP      R5,#+0
   \   00000014   1E00000A           BEQ      ??GetShortInfo_0
   \   00000018   ........           LDR      R0,??DataTable171  ;; contactlist_menuhdr + 624
   \   0000001C   000090E5           LDR      R0,[R0, #+0]
   \   00000020   030050E3           CMP      R0,#+3
   \   00000024   1A00001A           BNE      ??GetShortInfo_0
   4052            {
   4053              p=malloc(sizeof(PKT));
   \   00000028   0800A0E3           MOV      R0,#+8
   \   0000002C   140000EF           SWI      +20
   \   00000030   0060A0E1           MOV      R6,R0
   4054              p->pkt.uin=t->uin;
   \   00000034   0C0095E5           LDR      R0,[R5, #+12]
   4055              p->pkt.type=T_REQINFOSHORT;
   4056              p->pkt.data_len=0;
   4057              AddStringToLog(t, 0x01, "Request info...", I_str,0xFFFFFFFF);
   \   00000038   0010E0E3           MVN      R1,#+0
   \   0000003C   000086E5           STR      R0,[R6, #+0]
   \   00000040   0B00A0E3           MOV      R0,#+11
   \   00000044   B400C6E1           STRH     R0,[R6, #+4]
   \   00000048   0000A0E3           MOV      R0,#+0
   \   0000004C   B600C6E1           STRH     R0,[R6, #+6]
   \   00000050   ........           LDR      R0,??DataTable160  ;; `?<Constant "\\\\">`
   \   00000054   02002DE9           PUSH     {R1}
   \   00000058   023080E2           ADD      R3,R0,#+2
   \   0000005C   102080E2           ADD      R2,R0,#+16
   \   00000060   0500A0E1           MOV      R0,R5
   \   00000064   0110A0E3           MOV      R1,#+1
   \   00000068   ........           BL       AddStringToLog
   4058              AddMsgToChat(ed_struct->ed_chatgui);
   \   0000006C   040094E5           LDR      R0,[R4, #+4]
   \   00000070   ........           BL       AddMsgToChat
   4059              RecountMenu(t, 1);
   \   00000074   0110A0E3           MOV      R1,#+1
   \   00000078   0500A0E1           MOV      R0,R5
   \   0000007C   ........           BL       RecountMenu
   4060              SUBPROC((void *)SendAnswer,0,p);
   \   00000080   ........           LDR      R0,??DataTable174  ;; SendAnswer
   \   00000084   0620A0E1           MOV      R2,R6
   \   00000088   0010A0E3           MOV      R1,#+0
   \   0000008C   710100EF           SWI      +369
   \   00000090   04D08DE2           ADD      SP,SP,#+4
   4061            }
   4062            GeneralFuncF1(1);
   \                     ??GetShortInfo_0:
   \   00000094   0100A0E3           MOV      R0,#+1
   \   00000098   3B0100EF           SWI      +315
   4063          }
   \   0000009C   7080BDE8           POP      {R4-R6,PC}       ;; return
   4064          
   4065          void AskNickAndAddContact(EDCHAT_STRUCT *);

   \                                 In segment CODE, align 4, keep-with-next
   4066          void AddCurContact(GUI *data)
   4067          {
   \                     AddCurContact:
   \   00000000   00402DE9           PUSH     {LR}
   4068            EDCHAT_STRUCT *ed_struct;
   4069            ed_struct=MenuGetUserPointer(data);
   \   00000004   E00100EF           SWI      +480
   4070          
   4071            if ((ed_struct->ed_contact)&&(connect_state==3)) AskNickAndAddContact(ed_struct);
   \   00000008   000090E5           LDR      R0,[R0, #+0]
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   0400000A           BEQ      ??AddCurContact_0
   \   00000014   ........           LDR      R1,??DataTable171  ;; contactlist_menuhdr + 624
   \   00000018   001091E5           LDR      R1,[R1, #+0]
   \   0000001C   030051E3           CMP      R1,#+3
   \   00000020   0000001A           BNE      ??AddCurContact_0
   \   00000024   ........           _BLF     CreateAddContactGrpDialog,??CreateAddContactGrpDialog??rA
   4072            GeneralFuncF1(1);
   \                     ??AddCurContact_0:
   \   00000028   0100A0E3           MOV      R0,#+1
   \   0000002C   3B0100EF           SWI      +315
   4073          }
   \   00000030   0080BDE8           POP      {PC}             ;; return
   4074          

   \                                 In segment CODE, align 4, keep-with-next
   4075          void ActionOnCurContact(GUI *data,int msg) 
   4076          {
   \                     ActionOnCurContact:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0140A0E1           MOV      R4,R1
   4077            EDCHAT_STRUCT *ed_struct;
   4078            ed_struct=MenuGetUserPointer(data);
   \   00000008   E00100EF           SWI      +480
   4079            CLIST *t;
   4080            if ((t=ed_struct->ed_contact)&&(connect_state==3))
   \   0000000C   005090E5           LDR      R5,[R0, #+0]
   \   00000010   000055E3           CMP      R5,#+0
   \   00000014   1200000A           BEQ      ??ActionOnCurContact_0
   \   00000018   ........           LDR      R0,??DataTable171  ;; contactlist_menuhdr + 624
   \   0000001C   000090E5           LDR      R0,[R0, #+0]
   \   00000020   030050E3           CMP      R0,#+3
   \   00000024   0E00001A           BNE      ??ActionOnCurContact_0
   4081                {
   4082                TPKT *p;
   4083                p=malloc(sizeof(PKT));
   \   00000028   0800A0E3           MOV      R0,#+8
   \   0000002C   140000EF           SWI      +20
   \   00000030   0060A0E1           MOV      R6,R0
   4084                p->pkt.uin=t->uin;
   \   00000034   0C0095E5           LDR      R0,[R5, #+12]
   4085                p->pkt.type=msg;
   4086                p->pkt.data_len=0;
   4087                //AddStringToLog(t, 0x01, logtext, I_str,0xFFFFFFFF);
   4088                RecountMenu(t, 1);
   \   00000038   0110A0E3           MOV      R1,#+1
   \   0000003C   000086E5           STR      R0,[R6, #+0]
   \   00000040   B440C6E1           STRH     R4,[R6, #+4]
   \   00000044   0000A0E3           MOV      R0,#+0
   \   00000048   B600C6E1           STRH     R0,[R6, #+6]
   \   0000004C   0500A0E1           MOV      R0,R5
   \   00000050   ........           BL       RecountMenu
   4089                SUBPROC((void *)SendAnswer,0,p);
   \   00000054   ........           LDR      R0,??DataTable174  ;; SendAnswer
   \   00000058   0620A0E1           MOV      R2,R6
   \   0000005C   0010A0E3           MOV      R1,#+0
   \   00000060   710100EF           SWI      +369
   4090                };
   4091            GeneralFuncF1(1);
   \                     ??ActionOnCurContact_0:
   \   00000064   0100A0E3           MOV      R0,#+1
   \   00000068   3B0100EF           SWI      +315
   4092          }
   \   0000006C   7080BDE8           POP      {R4-R6,PC}       ;; return
   4093          

   \                                 In segment CODE, align 4, keep-with-next
   4094          void DeleteContactFromList(int res)
   4095          {
   \                     DeleteContactFromList:
   \   00000000   00402DE9           PUSH     {LR}
   4096            if (!res)
   \   00000004   000050E3           CMP      R0,#+0
   \   00000008   0080BD18           POPNE    {PC}
   4097            {
   4098              ActionOnCurContact(deleting_contact,T_REMOVECONTACT);
   \   0000000C   ........           LDR      R0,??DataTable166  ;; deleting_contact
   \   00000010   2110A0E3           MOV      R1,#+33
   \   00000014   000090E5           LDR      R0,[R0, #+0]
   \   00000018   ........           BL       ActionOnCurContact
   4099            }
   4100          }
   \   0000001C   0080BDE8           POP      {PC}             ;; return
   4101          

   \                                 In segment CODE, align 4, keep-with-next
   4102          void RemoveCurContact(GUI *data) //by captain_SISka 21.12.2008
   4103          {
   4104            deleting_contact = data;
   \                     RemoveCurContact:
   \   00000000   ........           LDR      R1,??DataTable166  ;; deleting_contact
   4105            MsgBoxYesNo(1, (int)lgpData[LGP_MnuRemContQuestions], DeleteContactFromList);
   \   00000004   18209FE5           LDR      R2,??RemoveCurContact_0  ;; DeleteContactFromList
   \   00000008   00402DE9           PUSH     {LR}
   \   0000000C   000081E5           STR      R0,[R1, #+0]
   \   00000010   10009FE5           LDR      R0,??RemoveCurContact_0+0x4  ;; lgpData + 144
   \   00000014   001090E5           LDR      R1,[R0, #+0]
   \   00000018   0100A0E3           MOV      R0,#+1
   \   0000001C   4F0000EF           SWI      +79
   4106          }
   \   00000020   0080BDE8           POP      {PC}             ;; return
   \                     ??RemoveCurContact_0:
   \   00000024   ........           DC32     DeleteContactFromList
   \   00000028   ........           DC32     lgpData + 144
   4107          
   4108          /*void IgnoreCurContact(GUI *data) //by captain_SISka 21.12.2008
   4109          {
   4110           ActionOnCurContact(data,T_ADDIGNORE);
   4111          }*/
   4112          
   4113          

   \                                 In segment CODE, align 4, keep-with-next
   4114          void SendAuthReq(GUI *data)
   4115          {
   \                     SendAuthReq:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   4116            EDCHAT_STRUCT *ed_struct;
   4117            ed_struct=MenuGetUserPointer(data);
   \   00000004   E00100EF           SWI      +480
   \   00000008   0040A0E1           MOV      R4,R0
   4118          
   4119            TPKT *p;
   4120            CLIST *t;
   4121            int l;
   4122            //const char s[]=LG_AUTHREQ;
   4123            //char s[]=empty_string;
   4124            //strcpy(s,(char*)lgpData[LGP_AuthReq]);
   4125            
   4126            if ((t=ed_struct->ed_contact)&&(connect_state==3))
   \   0000000C   005094E5           LDR      R5,[R4, #+0]
   \   00000010   000055E3           CMP      R5,#+0
   \   00000014   2300000A           BEQ      ??SendAuthReq_0
   \   00000018   ........           LDR      R0,??DataTable171  ;; contactlist_menuhdr + 624
   \   0000001C   000090E5           LDR      R0,[R0, #+0]
   \   00000020   030050E3           CMP      R0,#+3
   \   00000024   1F00001A           BNE      ??SendAuthReq_0
   4127            {
   4128              p=malloc(sizeof(PKT)+(l=strlen((char*)lgpData[LGP_AuthReq]))+1);
   \   00000028   ........           LDR      R6,??DataTable177  ;; lgpData
   \   0000002C   540096E5           LDR      R0,[R6, #+84]
   \   00000030   1B0000EF           SWI      +27
   \   00000034   0070A0E1           MOV      R7,R0
   \   00000038   090087E2           ADD      R0,R7,#+9
   \   0000003C   140000EF           SWI      +20
   \   00000040   0080A0E1           MOV      R8,R0
   4129              p->pkt.uin=t->uin;
   \   00000044   0C0095E5           LDR      R0,[R5, #+12]
   \   00000048   000088E5           STR      R0,[R8, #+0]
   4130              p->pkt.type=T_AUTHREQ;
   \   0000004C   0A00A0E3           MOV      R0,#+10
   \   00000050   B400C8E1           STRH     R0,[R8, #+4]
   4131              p->pkt.data_len=l;
   \   00000054   B670C8E1           STRH     R7,[R8, #+6]
   4132              strcpy(p->data,(char*)lgpData[LGP_AuthReq]);
   \   00000058   541096E5           LDR      R1,[R6, #+84]
   \   0000005C   080088E2           ADD      R0,R8,#+8
   \   00000060   1A0000EF           SWI      +26
   4133              AddStringToLog(t,0x01,p->data,I_str,0xFFFFFFFF);
   \   00000064   ........           LDR      R3,??DataTable173  ;; `?<Constant "\\\\">` + 2
   \   00000068   0000E0E3           MVN      R0,#+0
   \   0000006C   01002DE9           PUSH     {R0}
   \   00000070   082088E2           ADD      R2,R8,#+8
   \   00000074   0110A0E3           MOV      R1,#+1
   \   00000078   0500A0E1           MOV      R0,R5
   \   0000007C   ........           BL       AddStringToLog
   4134              AddMsgToChat(ed_struct->ed_chatgui);
   \   00000080   040094E5           LDR      R0,[R4, #+4]
   \   00000084   ........           BL       AddMsgToChat
   4135              RecountMenu(t, 1);
   \   00000088   0110A0E3           MOV      R1,#+1
   \   0000008C   0500A0E1           MOV      R0,R5
   \   00000090   ........           BL       RecountMenu
   4136              SUBPROC((void *)SendAnswer,0,p);
   \   00000094   ........           LDR      R0,??DataTable174  ;; SendAnswer
   \   00000098   0820A0E1           MOV      R2,R8
   \   0000009C   0010A0E3           MOV      R1,#+0
   \   000000A0   710100EF           SWI      +369
   \   000000A4   04D08DE2           ADD      SP,SP,#+4
   4137            }
   4138            GeneralFuncF1(1);
   \                     ??SendAuthReq_0:
   \   000000A8   0100A0E3           MOV      R0,#+1
   \   000000AC   3B0100EF           SWI      +315
   4139          }
   \   000000B0   F081BDE8           POP      {R4-R8,PC}       ;; return
   4140          

   \                                 In segment CODE, align 4, keep-with-next
   4141          void SendAuthGrant(GUI *data)
   4142          {
   \                     SendAuthGrant:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   4143            EDCHAT_STRUCT *ed_struct;
   4144            ed_struct=MenuGetUserPointer(data);
   \   00000004   E00100EF           SWI      +480
   \   00000008   0040A0E1           MOV      R4,R0
   4145          
   4146            TPKT *p;
   4147            CLIST *t;
   4148            int l;
   4149            //const char s[]=LG_AUTHGRANT;
   4150            //char s[]=empty_string;
   4151            //strcpy(s,(char*)lgpData[LGP_AuthGrant]);
   4152            
   4153            if ((t=ed_struct->ed_contact)&&(connect_state==3))
   \   0000000C   005094E5           LDR      R5,[R4, #+0]
   \   00000010   000055E3           CMP      R5,#+0
   \   00000014   2300000A           BEQ      ??SendAuthGrant_0
   \   00000018   ........           LDR      R0,??DataTable171  ;; contactlist_menuhdr + 624
   \   0000001C   000090E5           LDR      R0,[R0, #+0]
   \   00000020   030050E3           CMP      R0,#+3
   \   00000024   1F00001A           BNE      ??SendAuthGrant_0
   4154            {
   4155              p=malloc(sizeof(PKT)+(l=strlen((char*)lgpData[LGP_AuthGrant]))+1);
   \   00000028   ........           LDR      R6,??DataTable177  ;; lgpData
   \   0000002C   580096E5           LDR      R0,[R6, #+88]
   \   00000030   1B0000EF           SWI      +27
   \   00000034   0070A0E1           MOV      R7,R0
   \   00000038   090087E2           ADD      R0,R7,#+9
   \   0000003C   140000EF           SWI      +20
   \   00000040   0080A0E1           MOV      R8,R0
   4156              p->pkt.uin=t->uin;
   \   00000044   0C0095E5           LDR      R0,[R5, #+12]
   \   00000048   000088E5           STR      R0,[R8, #+0]
   4157              p->pkt.type=T_AUTHGRANT;
   \   0000004C   0E00A0E3           MOV      R0,#+14
   \   00000050   B400C8E1           STRH     R0,[R8, #+4]
   4158              p->pkt.data_len=l;
   \   00000054   B670C8E1           STRH     R7,[R8, #+6]
   4159              strcpy(p->data,(char*)lgpData[LGP_AuthGrant]);
   \   00000058   581096E5           LDR      R1,[R6, #+88]
   \   0000005C   080088E2           ADD      R0,R8,#+8
   \   00000060   1A0000EF           SWI      +26
   4160              AddStringToLog(t,0x01,p->data,I_str,0xFFFFFFFF);
   \   00000064   ........           LDR      R3,??DataTable173  ;; `?<Constant "\\\\">` + 2
   \   00000068   0000E0E3           MVN      R0,#+0
   \   0000006C   01002DE9           PUSH     {R0}
   \   00000070   082088E2           ADD      R2,R8,#+8
   \   00000074   0110A0E3           MOV      R1,#+1
   \   00000078   0500A0E1           MOV      R0,R5
   \   0000007C   ........           BL       AddStringToLog
   4161              AddMsgToChat(ed_struct->ed_chatgui);
   \   00000080   040094E5           LDR      R0,[R4, #+4]
   \   00000084   ........           BL       AddMsgToChat
   4162              RecountMenu(t, 1);
   \   00000088   0110A0E3           MOV      R1,#+1
   \   0000008C   0500A0E1           MOV      R0,R5
   \   00000090   ........           BL       RecountMenu
   4163              SUBPROC((void *)SendAnswer,0,p);
   \   00000094   ........           LDR      R0,??DataTable174  ;; SendAnswer
   \   00000098   0820A0E1           MOV      R2,R8
   \   0000009C   0010A0E3           MOV      R1,#+0
   \   000000A0   710100EF           SWI      +369
   \   000000A4   04D08DE2           ADD      SP,SP,#+4
   4164            }
   4165            GeneralFuncF1(1);
   \                     ??SendAuthGrant_0:
   \   000000A8   0100A0E3           MOV      R0,#+1
   \   000000AC   3B0100EF           SWI      +315
   4166          }
   \   000000B0   F081BDE8           POP      {R4-R8,PC}       ;; return
   4167          

   \                                 In segment CODE, align 4, keep-with-next
   4168          void OpenLogfile(GUI *data)
   4169          {
   \                     OpenLogfile:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   4170            EDCHAT_STRUCT *ed_struct;
   4171            ed_struct=MenuGetUserPointer(data);
   4172          
   4173            extern const char HIST_PATH[64];
   4174            extern const int HISTORY_TYPE;
   4175            const char _slash[]="\\";
   \   00000004   E4409FE5           LDR      R4,??OpenLogfile_0  ;; `?<Constant "\\\\">_1`
   \   00000008   84D04DE2           SUB      SP,SP,#+132
   \   0000000C   E00100EF           SWI      +480
   \   00000010   0010D4E5           LDRB     R1,[R4, #0]
   \   00000014   0050A0E1           MOV      R5,R0
   \   00000018   0D00A0E1           MOV      R0,SP
   \   0000001C   0010C0E5           STRB     R1,[R0, #+0]
   \   00000020   0110D4E5           LDRB     R1,[R4, #+1]
   \   00000024   0110C0E5           STRB     R1,[R0, #+1]
   4176            CLIST *t;
   4177            char hist_path[128];
   4178            zeromem(hist_path,128);
   \   00000028   8010A0E3           MOV      R1,#+128
   \   0000002C   04008DE2           ADD      R0,SP,#+4
   \   00000030   1D0100EF           SWI      +285
   4179            strcpy(hist_path,HIST_PATH);
   \   00000034   B8109FE5           LDR      R1,??OpenLogfile_0+0x4  ;; HIST_PATH
   \   00000038   04008DE2           ADD      R0,SP,#+4
   \   0000003C   1A0000EF           SWI      +26
   4180            if (hist_path[strlen(hist_path)-1]!='\\') strcat(hist_path,_slash);
   \   00000040   04008DE2           ADD      R0,SP,#+4
   \   00000044   1B0000EF           SWI      +27
   \   00000048   04108DE2           ADD      R1,SP,#+4
   \   0000004C   010080E0           ADD      R0,R0,R1
   \   00000050   010050E5           LDRB     R0,[R0, #-1]
   \   00000054   5C0050E3           CMP      R0,#+92
   \   00000058   0200000A           BEQ      ??OpenLogfile_1
   \   0000005C   0D10A0E1           MOV      R1,SP
   \   00000060   04008DE2           ADD      R0,SP,#+4
   \   00000064   170000EF           SWI      +23
   4181            
   4182            WSHDR *ws=AllocWS(256);
   \                     ??OpenLogfile_1:
   \   00000068   400FA0E3           MOV      R0,#+256
   \   0000006C   250100EF           SWI      +293
   \   00000070   0060A0E1           MOV      R6,R0
   4183            if ((t=ed_struct->ed_contact))
   \   00000074   000095E5           LDR      R0,[R5, #+0]
   \   00000078   000050E3           CMP      R0,#+0
   \   0000007C   1500000A           BEQ      ??OpenLogfile_2
   4184            {
   4185              if (HISTORY_TYPE)
   \   00000080   0C3090E5           LDR      R3,[R0, #+12]
   \   00000084   6C009FE5           LDR      R0,??OpenLogfile_0+0x8  ;; HISTORY_TYPE
   \   00000088   000090E5           LDR      R0,[R0, #+0]
   \   0000008C   000050E3           CMP      R0,#+0
   \   00000090   0800000A           BEQ      ??OpenLogfile_3
   4186                wsprintf(ws,"%s%u\\%u.txt",hist_path,UIN,t->uin);
   \   00000094   ........           LDR      R0,??DataTable175  ;; UIN
   \   00000098   08002DE9           PUSH     {R3}
   \   0000009C   08208DE2           ADD      R2,SP,#+8
   \   000000A0   003090E5           LDR      R3,[R0, #+0]
   \   000000A4   041084E2           ADD      R1,R4,#+4
   \   000000A8   0600A0E1           MOV      R0,R6
   \   000000AC   240100EF           SWI      +292
   \   000000B0   04D08DE2           ADD      SP,SP,#+4
   \   000000B4   030000EA           B        ??OpenLogfile_4
   4187              else
   4188                wsprintf(ws,"%s%u.txt",hist_path,t->uin);
   \                     ??OpenLogfile_3:
   \   000000B8   04208DE2           ADD      R2,SP,#+4
   \   000000BC   101084E2           ADD      R1,R4,#+16
   \   000000C0   0600A0E1           MOV      R0,R6
   \   000000C4   240100EF           SWI      +292
   4189              ExecuteFile(ws,NULL,NULL);
   \                     ??OpenLogfile_4:
   \   000000C8   0020A0E3           MOV      R2,#+0
   \   000000CC   0010A0E3           MOV      R1,#+0
   \   000000D0   0600A0E1           MOV      R0,R6
   \   000000D4   940000EF           SWI      +148
   4190            }
   4191            FreeWS(ws);
   \                     ??OpenLogfile_2:
   \   000000D8   0600A0E1           MOV      R0,R6
   \   000000DC   290100EF           SWI      +297
   4192            GeneralFuncF1(1);
   \   000000E0   0100A0E3           MOV      R0,#+1
   \   000000E4   3B0100EF           SWI      +315
   4193          }
   \   000000E8   84D08DE2           ADD      SP,SP,#+132
   \   000000EC   7080BDE8           POP      {R4-R6,PC}       ;; return
   \                     ??OpenLogfile_0:
   \   000000F0   ........           DC32     `?<Constant "\\\\">_1`
   \   000000F4   ........           DC32     HIST_PATH
   \   000000F8   ........           DC32     HISTORY_TYPE
   4194          

   \                                 In segment CODE, align 4, keep-with-next
   4195          void ClearLog(GUI *data/*,void *dummy*/)
   4196          {
   \                     ClearLog:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   2CD04DE2           SUB      SP,SP,#+44
   4197            EDITCONTROL ec;
   4198            EDCHAT_STRUCT *ed_struct;
   4199            WSHDR *ws;
   4200            CLIST *t;
   4201          
   4202            ed_struct=MenuGetUserPointer(data);
   \   00000008   E00100EF           SWI      +480
   \   0000000C   0040A0E1           MOV      R4,R0
   4203          
   4204            ExtractEditControl(ed_struct->ed_chatgui,ed_struct->ed_answer,&ec);
   \   00000010   081094E5           LDR      R1,[R4, #+8]
   \   00000014   040094E5           LDR      R0,[R4, #+4]
   \   00000018   0D20A0E1           MOV      R2,SP
   \   0000001C   690100EF           SWI      +361
   4205            if(wstrlen(ec.pWS)>0)
   \   00000020   28009DE5           LDR      R0,[SP, #+40]
   \   00000024   230100EF           SWI      +291
   \   00000028   010050E3           CMP      R0,#+1
   \   0000002C   0D0000BA           BLT      ??ClearLog_0
   4206            {
   4207              ws=AllocWS(1);
   \   00000030   0100A0E3           MOV      R0,#+1
   \   00000034   250100EF           SWI      +293
   \   00000038   0050A0E1           MOV      R5,R0
   4208              CutWSTR(ws,0);
   \   0000003C   0010A0E3           MOV      R1,#+0
   \   00000040   260100EF           SWI      +294
   4209          
   4210              EDIT_SetFocus(ed_struct->ed_chatgui,ed_struct->ed_answer);
   \   00000044   081094E5           LDR      R1,[R4, #+8]
   \   00000048   040094E5           LDR      R0,[R4, #+4]
   \   0000004C   9B0100EF           SWI      +411
   4211              EDIT_SetTextToFocused(ed_struct->ed_chatgui,ws);
   \   00000050   040094E5           LDR      R0,[R4, #+4]
   \   00000054   0510A0E1           MOV      R1,R5
   \   00000058   810100EF           SWI      +385
   4212          
   4213              FreeWS(ws);
   \   0000005C   0500A0E1           MOV      R0,R5
   \   00000060   290100EF           SWI      +297
   4214              GeneralFuncF1(1);
   \   00000064   1D0000EA           B        ??ClearLog_1
   4215            }
   4216            else
   4217            {
   4218          
   4219              if ((t=ed_struct->ed_contact))
   \                     ??ClearLog_0:
   \   00000068   005094E5           LDR      R5,[R4, #+0]
   \   0000006C   000055E3           CMP      R5,#+0
   \   00000070   1C00000A           BEQ      ??ClearLog_2
   4220              {
   4221                if (t->log)
   \   00000074   A80095E5           LDR      R0,[R5, #+168]
   \   00000078   0060A0E3           MOV      R6,#+0
   \   0000007C   000050E3           CMP      R0,#+0
   \   00000080   1200000A           BEQ      ??ClearLog_3
   4222                {
   4223                  FreeLOGQ(&t->log);
   \   00000084   A80085E2           ADD      R0,R5,#+168
   \   00000088   ........           BL       FreeLOGQ
   4224                  t->msg_count=0;
   \   0000008C   B86085E5           STR      R6,[R5, #+184]
   4225                  if (ed_struct->ed_answer>=2&&ed_struct->ed_chatgui)
   \   00000090   080094E5           LDR      R0,[R4, #+8]
   \   00000094   020050E3           CMP      R0,#+2
   \   00000098   0C0000BA           BLT      ??ClearLog_3
   \   0000009C   040094E5           LDR      R0,[R4, #+4]
   \   000000A0   000050E3           CMP      R0,#+0
   \   000000A4   0900000A           BEQ      ??ClearLog_3
   \   000000A8   050000EA           B        ??ClearLog_4
   4226                  {
   4227                    while(ed_struct->ed_answer!=2)
   4228                    {
   4229                      EDIT_RemoveEditControl(ed_struct->ed_chatgui,1);
   \                     ??ClearLog_5:
   \   000000AC   040094E5           LDR      R0,[R4, #+4]
   \   000000B0   0110A0E3           MOV      R1,#+1
   \   000000B4   D10100EF           SWI      +465
   4230                      ed_struct->ed_answer--;
   \   000000B8   080094E5           LDR      R0,[R4, #+8]
   \   000000BC   010040E2           SUB      R0,R0,#+1
   \   000000C0   080084E5           STR      R0,[R4, #+8]
   4231                    }
   \                     ??ClearLog_4:
   \   000000C4   080094E5           LDR      R0,[R4, #+8]
   \   000000C8   020050E3           CMP      R0,#+2
   \   000000CC   F6FFFF1A           BNE      ??ClearLog_5
   4232                  }
   4233                }
   4234                t->isactive=0;		//by BoBa  18.06.07
   \                     ??ClearLog_3:
   \   000000D0   B46085E5           STR      R6,[R5, #+180]
   4235                RecountMenu(t, 1);
   \   000000D4   0110A0E3           MOV      R1,#+1
   \   000000D8   0500A0E1           MOV      R0,R5
   \   000000DC   ........           BL       RecountMenu
   4236                GeneralFuncF1(1);
   \                     ??ClearLog_1:
   \   000000E0   0100A0E3           MOV      R0,#+1
   \   000000E4   3B0100EF           SWI      +315
   4237              }
   4238            }
   4239          }
   \                     ??ClearLog_2:
   \   000000E8   2CD08DE2           ADD      SP,SP,#+44       ;; stack cleaning
   \   000000EC   7080BDE8           POP      {R4-R6,PC}       ;; return
   4240          

   \                                 In segment CODE, align 4, keep-with-next
   4241          void ecmenu_ghook(void *data, int cmd)
   4242          {
   \                     ecmenu_ghook:
   \   00000000   00402DE9           PUSH     {LR}
   4243            if (cmd==0x0A)
   \   00000004   0A0051E3           CMP      R1,#+10
   \   00000008   0080BD18           POPNE    {PC}
   4244            {
   4245              DisableIDLETMR();
   \   0000000C   7F0100EF           SWI      +383
   4246            }
   4247          }
   \   00000010   0080BDE8           POP      {PC}             ;; return
   4248          
   4249          static MENUITEM_DESC ecmenu_ITEMS[EC_MNU_MAX]=
   4250          {
   4251            {NULL,NULL,LGP_NULL,0,NULL,MENU_FLAG3,MENU_FLAG2},
   4252            {NULL,NULL,LGP_NULL,0,NULL,MENU_FLAG3,MENU_FLAG2},
   4253            {NULL,NULL,LGP_NULL,0,NULL,MENU_FLAG3,MENU_FLAG2},
   4254            {NULL,NULL,LGP_NULL,0,NULL,MENU_FLAG3,MENU_FLAG2},
   4255            {NULL,NULL,LGP_NULL,0,NULL,MENU_FLAG3,MENU_FLAG2},
   4256            {NULL,NULL,LGP_NULL,0,NULL,MENU_FLAG3,MENU_FLAG2},
   4257            {NULL,NULL,LGP_NULL,0,NULL,MENU_FLAG3,MENU_FLAG2},
   4258            {NULL,NULL,LGP_NULL,0,NULL,MENU_FLAG3,MENU_FLAG2},
   4259            {NULL,NULL,LGP_NULL,0,NULL,MENU_FLAG3,MENU_FLAG2}
   4260          };
   4261          
   4262          extern void AddSmile(GUI *data);

   \                                 In segment DATA_C, align 4, align-sorted
   4263          static const MENUPROCS_DESC ecmenu_HNDLS[EC_MNU_MAX]=
   \                     ecmenu_HNDLS:
   \   00000000   ............       DC32 Quote, AddSmile, GetShortInfo, AddCurContact, SendAuthReq
   \              ............
   \              ............
   \              ....        
   \   00000014   ............       DC32 SendAuthGrant, OpenLogfile, RemoveCurContact, ClearLog
   \              ............
   \              ........    

   \                                 In segment DATA_I, align 4, align-sorted
   \                     contactlist_menuhdr:
   \   00000000                      DS8 20
   \   00000014                      REQUIRE `?<Initializer for contactlist_menuhdr>`
   \                     ecmenu_ITEMS:
   \   00000014                      DS8 252
   \   00000110                      REQUIRE `?<Initializer for ecmenu_ITEMS>`
   \                     S_ICONS:
   \   00000110                      DS8 116
   \   00000184                      REQUIRE `?<Initializer for S_ICONS>`
   \                     MAINCSM:
   \   00000184                      DS8 72
   \   000001CC                      REQUIRE `?<Initializer for MAINCSM>`
   \                     menu_sk:
   \   000001CC                      DS8 24
   \   000001E4                      REQUIRE `?<Initializer for menu_sk>`
   \                     gipc:
   \   000001E4                      DS8 12
   \   000001F0                      REQUIRE `?<Initializer for gipc>`
   \                     tmr_gipc:
   \   000001F0                      DS8 12
   \   000001FC                      REQUIRE `?<Initializer for tmr_gipc>`
   \                     clmenu_sk:
   \   000001FC                      DS8 24
   \   00000214                      REQUIRE `?<Initializer for clmenu_sk>`
   \   00000214                      DS8 8
   \   0000021C                      REQUIRE `?<Initializer for sk>`
   \   0000021C                      DS8 8
   \   00000224                      REQUIRE `?<Initializer for sk_cancel>`
   \                     maincsm_id:
   \   00000224                      DS8 4
   \   00000228                      REQUIRE `?<Initializer for maincsm_id>`
   \                     maingui_id:
   \   00000228                      DS8 4
   \   0000022C                      REQUIRE `?<Initializer for maingui_id>`
   \                     empty_string:
   \   0000022C                      DS8 4
   \   00000230                      REQUIRE `?<Initializer for empty_string>`
   \                     SENDMSGCOUNT:
   \   00000230                      DS8 4
   \   00000234                      REQUIRE `?<Initializer for SENDMSGCOUNT>`
   \                     ews:
   \   00000234                      DS8 4
   \   00000238                      REQUIRE `?<Initializer for ews>`
   \                     silenthide:
   \   00000238                      DS8 4
   \   0000023C                      REQUIRE `?<Initializer for silenthide>`
   \                     disautorecconect:
   \   0000023C                      DS8 4
   \   00000240                      REQUIRE `?<Initializer for disautorecconect>`
   \                     Is_Vibra_Enabled:
   \   00000240                      DS8 4
   \   00000244                      REQUIRE `?<Initializer for Is_Vibra_Enabled>`
   \                     Is_Sounds_Enabled:
   \   00000244                      DS8 4
   \   00000248                      REQUIRE `?<Initializer for Is_Sounds_Enabled>`
   \                     Is_Show_Offline:
   \   00000248                      DS8 4
   \   0000024C                      REQUIRE `?<Initializer for Is_Show_Offline>`
   \                     Is_Show_Groups:
   \   0000024C                      DS8 4
   \   00000250                      REQUIRE `?<Initializer for Is_Show_Groups>`
   \                     CurrentStatus:
   \   00000250                      DS8 4
   \   00000254                      REQUIRE `?<Initializer for CurrentStatus>`
   \                     CurrentXStatus:
   \   00000254                      DS8 4
   \   00000258                      REQUIRE `?<Initializer for CurrentXStatus>`
   \                     CurrentPrivateStatus:
   \   00000258                      DS8 4
   \   0000025C                      REQUIRE `?<Initializer for CurrentPrivateStatus>`
   \                     Is_Active_Up:
   \   0000025C                      DS8 4
   \   00000260                      REQUIRE `?<Initializer for Is_Active_Up>`
   \                     vibra_count:
   \   00000260                      DS8 4
   \   00000264                      REQUIRE `?<Initializer for vibra_count>`
   \                     templates_chars:
   \   00000264                      DS8 4
   \   00000268                      REQUIRE `?<Initializer for templates_chars>`
   \                     templates_lines:
   \   00000268                      DS8 4
   \   0000026C                      REQUIRE `?<Initializer for templates_lines>`
   \                     RXstate:
   \   0000026C                      DS8 4
   \   00000270                      REQUIRE `?<Initializer for RXstate>`
   \                     connect_state:
   \   00000270                      DS8 4
   \   00000274                      REQUIRE `?<Initializer for connect_state>`
   \                     sock:
   \   00000274                      DS8 4
   \   00000278                      REQUIRE `?<Initializer for sock>`
   \                     TOTALRECEIVED:
   \   00000278                      DS8 4
   \   0000027C                      REQUIRE `?<Initializer for TOTALRECEIVED>`
   \                     TOTALSENDED:
   \   0000027C                      DS8 4
   \   00000280                      REQUIRE `?<Initializer for TOTALSENDED>`
   \                     ALLTOTALRECEIVED:
   \   00000280                      DS8 4
   \   00000284                      REQUIRE `?<Initializer for ALLTOTALRECEIVED>`
   \                     ALLTOTALSENDED:
   \   00000284                      DS8 4
   \   00000288                      REQUIRE `?<Initializer for ALLTOTALSENDED>`
   \                     sendq_l:
   \   00000288                      DS8 4
   \   0000028C                      REQUIRE `?<Initializer for sendq_l>`
   \                     sendq_p:
   \   0000028C                      DS8 4
   \   00000290                      REQUIRE `?<Initializer for sendq_p>`
   \                     is_gprs_online:
   \   00000290                      DS8 4
   \   00000294                      REQUIRE `?<Initializer for is_gprs_online>`
   \                     total_unread:
   \   00000294                      DS8 4
   \   00000298                      REQUIRE `?<Initializer for total_unread>`
   \                     messages_unread:
   \   00000298                      DS8 4
   \   0000029C                      REQUIRE `?<Initializer for messages_unread>`
   \                     cltop:
   \   0000029C                      DS8 4
   \   000002A0                      REQUIRE `?<Initializer for cltop>`
   \                     GROUP_CACHE:
   \   000002A0                      DS8 4
   \   000002A4                      REQUIRE `?<Initializer for GROUP_CACHE>`
   \                     contactlist_menu_id:
   \   000002A4                      DS8 4
   \   000002A8                      REQUIRE `?<Initializer for contactlist_menu_id>`
   \                     edchat_id:
   \   000002A8                      DS8 4
   \   000002AC                      REQUIRE `?<Initializer for edchat_id>`
   \   000002AC                      DS8 4
   \   000002B0                      REQUIRE `?<Initializer for prev_clmenu_itemcount>`
   \                     tenseconds_to_ping:
   \   000002B0                      DS8 4
   \   000002B4                      REQUIRE `?<Initializer for tenseconds_to_ping>`
   \                     DNR_ID:
   \   000002B4                      DS8 4
   \   000002B8                      REQUIRE `?<Initializer for DNR_ID>`
   \                     DNR_TRIES:
   \   000002B8                      DS8 4
   \   000002BC                      REQUIRE `?<Initializer for DNR_TRIES>`
   \                     host_counter:
   \   000002BC                      DS8 4
   \   000002C0                      REQUIRE `?<Initializer for host_counter>`
   \                     time_to_stop_t9:
   \   000002C0                      DS8 4
   \   000002C4                      REQUIRE `?<Initializer for time_to_stop_t9>`
   \                     old_ed_redraw:
   \   000002C4                      DS8 4
   \   000002C8                      REQUIRE `?<Initializer for old_ed_redraw>`
   \   000002C8                      DS8 64
   \   00000308                      REQUIRE `?<Initializer for methods>`
   \                     elf_path:
   \   00000308                      DS8 256
   \   00000408                      REQUIRE `?<Initializer for elf_path>`
   \                     ContactT9Key:
   \   00000408                      DS8 32
   \   00000428                      REQUIRE `?<Initializer for ContactT9Key>`
   \                     logmsg:
   \   00000428                      DS8 256
   \   00000528                      REQUIRE `?<Initializer for logmsg>`
   \                     tmr_illumination:
   \   00000528                      DS8 16
   \   00000538                      REQUIRE `?<Initializer for tmr_illumination>`
   \                     tmr_vibra:
   \   00000538                      DS8 16
   \   00000548                      REQUIRE `?<Initializer for tmr_vibra>`
   \                     reconnect_tmr:
   \   00000548                      DS8 16
   \   00000558                      REQUIRE `?<Initializer for reconnect_tmr>`
   \                     tmr_active:
   \   00000558                      DS8 16
   \   00000568                      REQUIRE `?<Initializer for tmr_active>`
   \                     clm_hdr_text:
   \   00000568                      DS8 48
   \   00000598                      REQUIRE `?<Initializer for clm_hdr_text>`
   \   00000598                      DS8 32
   \   000005B8                      REQUIRE `?<Initializer for def_clm_hdr_text>`
   \   000005B8                      DS8 32
   \   000005D8                      REQUIRE `?<Initializer for key_clm_hdr_text>`
   \                     clmenu_sk_r:
   \   000005D8                      DS8 16
   \   000005E8                      REQUIRE `?<Initializer for clmenu_sk_r>`
   \   000005E8                      DS8 32
   \   00000608                      REQUIRE `?<Initializer for def_clmenu_sk_r>`
   \   00000608                      DS8 32
   \   00000628                      REQUIRE `?<Initializer for key_clmenu_sk_r>`
   \                     hostname:
   \   00000628                      DS8 128
   \   000006A8                      REQUIRE `?<Initializer for hostname>`
   4264          {
   4265            Quote,
   4266            AddSmile,
   4267            GetShortInfo,
   4268            AddCurContact,
   4269            SendAuthReq,
   4270            SendAuthGrant,
   4271            OpenLogfile,
   4272            RemoveCurContact,
   4273            ClearLog
   4274          };
   4275          
   4276          char ecm_contactname[64];
   \                     ecm_contactname:
   \   000006A8                      DS8 64
   \   000006E8                      REQUIRE `?<Initializer for ecm_contactname>`

   \                                 In segment DATA_I, align 4, align-sorted
   \                     ss:
   \   00000000                      DS8 4
   \   00000004                      REQUIRE `?<Initializer for ss>`

   \                                 In segment DATA_I, align 4, align-sorted
   \                     sd:
   \   00000000                      DS8 4
   \   00000004                      REQUIRE `?<Initializer for sd>`

   \                                 In segment DATA_I, align 4, align-sorted
   \                     sw:
   \   00000000                      DS8 4
   \   00000004                      REQUIRE `?<Initializer for sw>`

   \                                 In segment DATA_I, align 4, align-sorted
   \                     s:
   \   00000000                      DS8 4
   \   00000004                      REQUIRE `?<Initializer for s>`
   4277          

   \                                 In segment DATA_C, align 4, align-sorted
   4278          static const HEADER_DESC ecmenu_HDR={0,0,NULL,NULL,NULL,(int)ecm_contactname,LGP_NULL};
   \                     ecmenu_HDR:
   \   00000000   000000000000       DC16 0, 0, 0, 0
   \              0000        
   \   00000008   00000000....       DC32 0H, ecm_contactname, 2147483647
   \              ....FFFFFF7F
   \   00000014   080000000000       DC32 8, 0H, ecmenu_ghook, 0H, menusoftkeys, menu_skt, 0, 0H
   \              0000........
   \              00000000....
   \              ............
   \              000000000000
   \              0000        
   \   00000034   ............       DC32 ecmenu_ITEMS, ecmenu_HNDLS, 9
   \              ....09000000
   4279          
   4280          static const MENU_DESC ecmenu_STRUCT=
   4281          {
   4282            8,NULL,ecmenu_ghook,NULL,
   4283            menusoftkeys,
   4284            &menu_skt,
   4285            0,
   4286            NULL,
   4287            ecmenu_ITEMS,
   4288            ecmenu_HNDLS,
   4289            EC_MNU_MAX
   4290          };
   4291          

   \                                 In segment CODE, align 4, keep-with-next
   4292          void ec_menu(EDCHAT_STRUCT *ed_struct)
   4293          {
   \                     ec_menu:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   28D04DE2           SUB      SP,SP,#+40
   \   00000008   0040A0E1           MOV      R4,R0
   4294            CLIST *t;
   4295            int to_remove[EC_MNU_MAX+1];
   4296            int remove=0;
   4297            if ((t=ed_struct->ed_contact))
   \   0000000C   000094E5           LDR      R0,[R4, #+0]
   \   00000010   000050E3           CMP      R0,#+0
   \   00000014   5800000A           BEQ      ??ec_menu_0
   4298            {
   4299              if (t->name)
   \   00000018   ........           LDR      R5,??DataTable176  ;; contactlist_menuhdr
   \   0000001C   A830A0E3           MOV      R3,#+168
   \   00000020   603E83E3           ORR      R3,R3,#0x600
   \   00000024   141090E2           ADDS     R1,R0,#+20
   \   00000028   0300000A           BEQ      ??ec_menu_1
   4300              {
   4301                strncpy(ecm_contactname,t->name,63);
   \   0000002C   3F20A0E3           MOV      R2,#+63
   \   00000030   050083E0           ADD      R0,R3,R5
   \   00000034   160100EF           SWI      +278
   \   00000038   030000EA           B        ??ec_menu_2
   4302              }
   4303              else
   4304              {
   4305                sprintf(ecm_contactname,"%u",t->uin);
   \                     ??ec_menu_1:
   \   0000003C   0C2090E5           LDR      R2,[R0, #+12]
   \   00000040   4F1F8FE2           ADR      R1,??ec_menu_3   ;; "%u"
   \   00000044   050083E0           ADD      R0,R3,R5
   \   00000048   160000EF           SWI      +22
   4306              }
   4307              if (EDIT_GetFocus(ed_struct->ed_chatgui)==ed_struct->ed_answer)
   \                     ??ec_menu_2:
   \   0000004C   040094E5           LDR      R0,[R4, #+4]
   \   00000050   0160A0E3           MOV      R6,#+1
   \   00000054   820100EF           SWI      +386
   \   00000058   082094E5           LDR      R2,[R4, #+8]
   \   0000005C   0010A0E3           MOV      R1,#+0
   \   00000060   020050E1           CMP      R0,R2
   4308              {
   4309                to_remove[++remove]=0;
   \   00000064   04108D05           STREQ    R1,[SP, #+4]
   4310              }
   4311              else
   4312              {
   4313                to_remove[++remove]=1;
   \   00000068   0120A013           MOVNE    R2,#+1
   \   0000006C   04208D15           STRNE    R2,[SP, #+4]
   4314              }
   4315          
   4316              if (ed_struct->ed_answer<=2) to_remove[++remove]=8;
   \   00000070   080094E5           LDR      R0,[R4, #+8]
   \   00000074   030050E3           CMP      R0,#+3
   \   00000078   0820A0B3           MOVLT    R2,#+8
   \   0000007C   08208DB5           STRLT    R2,[SP, #+8]
   4317              if (!ed_struct->ed_contact || connect_state!=3)
   \   00000080   000094E5           LDR      R0,[R4, #+0]
   \   00000084   0260A0B3           MOVLT    R6,#+2
   \   00000088   000050E3           CMP      R0,#+0
   \   0000008C   0200000A           BEQ      ??ec_menu_4
   \   00000090   700295E5           LDR      R0,[R5, #+624]
   \   00000094   030050E3           CMP      R0,#+3
   \   00000098   0D00000A           BEQ      ??ec_menu_5
   4318              {
   4319                to_remove[++remove]=2;
   \                     ??ec_menu_4:
   \   0000009C   010086E2           ADD      R0,R6,#+1
   \   000000A0   0D20A0E1           MOV      R2,SP
   \   000000A4   0230A0E3           MOV      R3,#+2
   \   000000A8   003182E7           STR      R3,[R2, +R0, LSL #+2]
   4320                to_remove[++remove]=3;
   \   000000AC   010080E2           ADD      R0,R0,#+1
   \   000000B0   0330A0E3           MOV      R3,#+3
   \   000000B4   003182E7           STR      R3,[R2, +R0, LSL #+2]
   4321                to_remove[++remove]=4;
   \   000000B8   010080E2           ADD      R0,R0,#+1
   \   000000BC   0430A0E3           MOV      R3,#+4
   \   000000C0   003182E7           STR      R3,[R2, +R0, LSL #+2]
   4322                to_remove[++remove]=5;
   \   000000C4   016080E2           ADD      R6,R0,#+1
   \   000000C8   0D00A0E1           MOV      R0,SP
   \   000000CC   0520A0E3           MOV      R2,#+5
   \   000000D0   062180E7           STR      R2,[R0, +R6, LSL #+2]
   4323              }
   4324          
   4325              patch_header(&ecmenu_HDR);
   \                     ??ec_menu_5:
   \   000000D4   AC709FE5           LDR      R7,??ec_menu_3+0x4  ;; ecmenu_HDR
   \   000000D8   1800A0E3           MOV      R0,#+24
   \   000000DC   B010C7E1           STRH     R1,[R7, #+0]
   \   000000E0   B200C7E1           STRH     R0,[R7, #+2]
   \   000000E4   888100EF           SWI      +33160
   \   000000E8   010040E2           SUB      R0,R0,#+1
   \   000000EC   B400C7E1           STRH     R0,[R7, #+4]
   \   000000F0   8A8100EF           SWI      +33162
   \   000000F4   170080E2           ADD      R0,R0,#+23
   \   000000F8   B600C7E1           STRH     R0,[R7, #+6]
   4326              to_remove[0]=remove;
   4327              
   4328              //Инициализация ленгпака
   4329              ecmenu_ITEMS[0].lgp_id_small=(int)lgpData[LGP_MnuQuote]; 
   \   000000FC   ........           LDR      R0,??DataTable177  ;; lgpData
   \   00000100   00608DE5           STR      R6,[SP, #+0]
   \   00000104   881090E5           LDR      R1,[R0, #+136]
   4330              ecmenu_ITEMS[1].lgp_id_small=(int)lgpData[LGP_MnuAddSml];
   4331              ecmenu_ITEMS[2].lgp_id_small=(int)lgpData[LGP_MnuShInfo]; 
   4332              ecmenu_ITEMS[3].lgp_id_small=(int)lgpData[LGP_MnuAddRen];
   4333              ecmenu_ITEMS[4].lgp_id_small=(int)lgpData[LGP_MnuSAuthReq]; 
   4334              ecmenu_ITEMS[5].lgp_id_small=(int)lgpData[LGP_MnuSAuthGrt]; 
   4335              ecmenu_ITEMS[6].lgp_id_small=(int)lgpData[LGP_MnuOpenLog]; 
   4336              ecmenu_ITEMS[7].lgp_id_small=(int)lgpData[LGP_MnuRemCont]; 
   4337              ecmenu_ITEMS[8].lgp_id_small=(int)lgpData[LGP_MnuClearCht]; 
   4338            
   4339              CreateMenu(0,0,&ecmenu_STRUCT,&ecmenu_HDR,0,EC_MNU_MAX,ed_struct,to_remove);
   \   00000108   0730A0E1           MOV      R3,R7
   \   0000010C   181085E5           STR      R1,[R5, #+24]
   \   00000110   941090E5           LDR      R1,[R0, #+148]
   \   00000114   142087E2           ADD      R2,R7,#+20
   \   00000118   341085E5           STR      R1,[R5, #+52]
   \   0000011C   981090E5           LDR      R1,[R0, #+152]
   \   00000120   501085E5           STR      R1,[R5, #+80]
   \   00000124   9C1090E5           LDR      R1,[R0, #+156]
   \   00000128   6C1085E5           STR      R1,[R5, #+108]
   \   0000012C   A01090E5           LDR      R1,[R0, #+160]
   \   00000130   881085E5           STR      R1,[R5, #+136]
   \   00000134   A41090E5           LDR      R1,[R0, #+164]
   \   00000138   A41085E5           STR      R1,[R5, #+164]
   \   0000013C   A81090E5           LDR      R1,[R0, #+168]
   \   00000140   C01085E5           STR      R1,[R5, #+192]
   \   00000144   8C1090E5           LDR      R1,[R0, #+140]
   \   00000148   AC0090E5           LDR      R0,[R0, #+172]
   \   0000014C   DC1085E5           STR      R1,[R5, #+220]
   \   00000150   F80085E5           STR      R0,[R5, #+248]
   \   00000154   0D00A0E1           MOV      R0,SP
   \   00000158   01002DE9           PUSH     {R0}
   \   0000015C   10002DE9           PUSH     {R4}
   \   00000160   0010A0E3           MOV      R1,#+0
   \   00000164   0900A0E3           MOV      R0,#+9
   \   00000168   01002DE9           PUSH     {R0}
   \   0000016C   0000A0E3           MOV      R0,#+0
   \   00000170   01002DE9           PUSH     {R0}
   \   00000174   520100EF           SWI      +338
   \   00000178   10D08DE2           ADD      SP,SP,#+16
   4340            }
   4341          }
   \                     ??ec_menu_0:
   \   0000017C   28D08DE2           ADD      SP,SP,#+40       ;; stack cleaning
   \   00000180   F080BDE8           POP      {R4-R7,PC}       ;; return
   \                     ??ec_menu_3:
   \   00000184   25750000           DC8      "%u",+0
   \   00000188   ........           DC32     ecmenu_HDR
   4342          
   4343          

   \                                 In segment CODE, align 4, keep-with-next
   4344          void AskNickAndAddContact(EDCHAT_STRUCT *ed_struct)
   4345          {
   4346            CreateAddContactGrpDialog(ed_struct->ed_contact);
   \                     AskNickAndAddContact:
   \   00000000   000090E5           LDR      R0,[R0, #+0]
   \   00000004   ........           _BF      CreateAddContactGrpDialog,??CreateAddContactGrpDialog??rA  ;; tailcall
   4347          }
   4348          

   \                                 In segment CODE, align 4, keep-with-next
   4349          void AddSmile(GUI *data)
   4350          {
   \                     AddSmile:
   \   00000000   00402DE9           PUSH     {LR}
   4351            EDCHAT_STRUCT *ed_struct=MenuGetUserPointer(data);
   \   00000004   E00100EF           SWI      +480
   4352            CreateSmileSelectGUI(ed_struct);
   \   00000008   ........           _BLF     CreateSmileSelectGUI,??CreateSmileSelectGUI??rA
   4353            GeneralFuncF1(1);
   \   0000000C   0100A0E3           MOV      R0,#+1
   \   00000010   3B0100EF           SWI      +315
   4354          }
   \   00000014   0080BDE8           POP      {PC}             ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   ........           DC32     contactlist_menuhdr + 592

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable7:
   \   00000000   ........           DC32     UIN

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable8:
   \   00000000   ........           DC32     def_setting

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable13:
   \   00000000   ........           DC32     VIBR_TYPE

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable19:
   \   00000000   ........           DC32     TEMPLATES_PATH

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable25:
   \   00000000   ........           DC32     contactlist_menuhdr

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable26:
   \   00000000   ........           DC32     lgpData

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable29:
   \   00000000   ........           DC32     HISTORY_BUFFER

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable31:
   \   00000000   ........           DC32     contactlist_menuhdr + 668

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable32:
   \   00000000   ........           DC32     Canvas

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable33:
   \   00000000   ........           DC32     total_xstatuses

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable36:
   \   00000000   ........           DC32     lgpData

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable37:
   \   00000000   ........           DC32     do_reconnect

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable38:
   \   00000000   ........           DC32     RECONNECT_TIME

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable41:
   \   00000000   ........           DC32     contactlist_menuhdr

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable42:
   \   00000000   ........           DC32     UIN

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable45:
   \   00000000   ........           DC32     HISTORY_BUFFER

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable48:
   \   00000000   ........           DC32     ED_X_FONT_SIZE

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable50:
   \   00000000   ........           DC32     X_COLOR

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable51:
   \   00000000   ........           DC32     O_ED_X_FONT_SIZE

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable52:
   \   00000000   ........           DC32     O_X_COLOR

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable60:
   \   00000000   ........           DC32     O_ED_FONT_SIZE

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable61:
   \   00000000   ........           DC32     ED_FONT_SIZE

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable63:
   \   00000000   ........           DC32     ACK_COLOR

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable64:
   \   00000000   ........           DC32     O_TO_COLOR

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable65:
   \   00000000   ........           DC32     O_I_COLOR

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable66:
   \   00000000   ........           DC32     TO_COLOR

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable67:
   \   00000000   ........           DC32     I_COLOR

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable68:
   \   00000000   ........           DC32     UNACK_COLOR

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable69:
   \   00000000   ........           DC32     O_ED_H_FONT_SIZE

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable70:
   \   00000000   ........           DC32     ED_H_FONT_SIZE

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable71:
   \   00000000   ........           DC32     contactlist_menuhdr + 592

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable74:
   \   00000000   ........           DC32     SendAnswer

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable75:
   \   00000000   ........           DC32     contactlist_menuhdr

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable80:
   \   00000000   ........           DC32     VIBR_ON_CONNECT

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable81:
   \   00000000   ........           DC32     HISTORY_BUFFER

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable82:
   \   00000000   ........           DC32     VIBR_TYPE

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable87:
   \   00000000   ........           DC32     Canvas

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable88:
   \   00000000   ........           DC32     total_xstatuses

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable93:
   \   00000000   ........           DC32     contactlist_menuhdr

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable94:
   \   00000000   ........           DC32     process_active_timer

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable105:
   \   00000000   ........           DC32     Canvas

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable109:
   \   00000000   ........           DC32     VIBR_ON_CONNECT

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable110:
   \   00000000   ........           DC32     do_reconnect

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable112:
   \   00000000   ........           DC32     create_connect

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable113:
   \   00000000   ........           DC32     lgpData

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable115:
   \   00000000   ........           DC32     SendAnswer

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable116:
   \   00000000   ........           DC32     end_socket

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable117:
   \   00000000   ........           DC32     ClearSendQ

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable118:
   \   00000000   ........           DC32     RECONNECT_TIME

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable120:
   \   00000000   ........           DC32     ICON_ON

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable125:
   \   00000000   ........           DC32     successed_config_filename

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable126:
   \   00000000   ........           DC32     contactlist_menuhdr

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable127:
   \   00000000   ........           DC32     UIN

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable128:
   \   00000000   ........           DC32     ElfKiller

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable129:
   \   00000000   ........           DC32     addIconBar

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable131:
   \   00000000   ........           DC32     contactlist_menuhdr + 668

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable135:
   \   00000000   ........           DC32     `?<Constant "abcdefghijklmnopqrstu...">`

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable139:
   \   00000000   ........           DC32     TEMPLATES_PATH

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable141:
   \   00000000   ........           DC32     contactlist_menuhdr

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable142:
   \   00000000   ........           DC32     lgpData

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable144:
   \   00000000   ........           DC32     ED_X_FONT_SIZE

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable145:
   \   00000000   ........           DC32     ED_H_FONT_SIZE

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable146:
   \   00000000   ........           DC32     I_COLOR

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable147:
   \   00000000   ........           DC32     X_COLOR

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable148:
   \   00000000   ........           DC32     O_ED_X_FONT_SIZE

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable149:
   \   00000000   ........           DC32     O_X_COLOR

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable150:
   \   00000000   ........           DC32     ACK_COLOR

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable151:
   \   00000000   ........           DC32     O_I_COLOR

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable152:
   \   00000000   ........           DC32     O_TO_COLOR

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable153:
   \   00000000   ........           DC32     O_ED_H_FONT_SIZE

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable154:
   \   00000000   ........           DC32     TO_COLOR

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable155:
   \   00000000   ........           DC32     UNACK_COLOR

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable156:
   \   00000000   ........           DC32     O_ED_FONT_SIZE

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable158:
   \   00000000   ........           DC32     ED_FONT_SIZE

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable160:
   \   00000000   ........           DC32     `?<Constant "\\\\">`

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable166:
   \   00000000   ........           DC32     deleting_contact

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable171:
   \   00000000   ........           DC32     contactlist_menuhdr + 624

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable173:
   \   00000000   ........           DC32     `?<Constant "\\\\">` + 2

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable174:
   \   00000000   ........           DC32     SendAnswer

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable175:
   \   00000000   ........           DC32     UIN

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable176:
   \   00000000   ........           DC32     contactlist_menuhdr

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable177:
   \   00000000   ........           DC32     lgpData

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for contactlist_menuhdr>`:
   \   00000000   000000000000       DC16 0, 0, 0, 0
   \              0000        
   \   00000008   ............       DC32 S_ICONS + 4CH, clm_hdr_text, 2147483647
   \              ....FFFFFF7F
   \                     `?<Initializer for ecmenu_ITEMS>`:
   \   00000014   000000000000       DC32 0H, 0, 2147483647, 0, 0H, 3, 1442, 0H, 0, 2147483647, 0, 0H, 3
   \              0000FFFFFF7F
   \              000000000000
   \              000003000000
   \              A20500000000
   \              000000000000
   \              FFFFFF7F0000
   \              000000000000
   \              03000000    
   \   00000048   A20500000000       DC32 1442, 0H, 0, 2147483647, 0, 0H, 3, 1442, 0H, 0, 2147483647, 0, 0H
   \              000000000000
   \              FFFFFF7F0000
   \              000000000000
   \              03000000A205
   \              000000000000
   \              00000000FFFF
   \              FF7F00000000
   \              00000000    
   \   0000007C   03000000A205       DC32 3, 1442, 0H, 0, 2147483647, 0, 0H, 3, 1442, 0H, 0, 2147483647, 0
   \              000000000000
   \              00000000FFFF
   \              FF7F00000000
   \              000000000300
   \              0000A2050000
   \              000000000000
   \              0000FFFFFF7F
   \              00000000    
   \   000000B0   000000000300       DC32 0H, 3, 1442, 0H, 0, 2147483647, 0, 0H, 3, 1442, 0H, 0, 2147483647
   \              0000A2050000
   \              000000000000
   \              0000FFFFFF7F
   \              000000000000
   \              000003000000
   \              A20500000000
   \              000000000000
   \              FFFFFF7F    
   \   000000E4   000000000000       DC32 0, 0H, 3, 1442, 0H, 0, 2147483647, 0, 0H, 3, 1442
   \              000003000000
   \              A20500000000
   \              000000000000
   \              FFFFFF7F0000
   \              000000000000
   \              03000000A205
   \              0000        
   \                     `?<Initializer for S_ICONS>`:
   \   00000110   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000120   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000130   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000140   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000150   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000160   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000170   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000        
   \                     `?<Initializer for MAINCSM>`:
   \   00000184   ............       DC32 maincsm_onmessage, maincsm_oncreate, 0, 0, 0, 0, maincsm_onclose
   \              ....00000000
   \              000000000000
   \              000000000000
   \              ........    
   \   000001A0   2C0000000100       DC32 44, 1, minus11, maincsm_name_body, 55AACCCCH, 3333AA55H, 0
   \              0000........
   \              ........CCCC
   \              AA5555AA3333
   \              00000000    
   \   000001BC   8B00               DC16 139
   \   000001BE   0000               DC8 0, 0
   \   000001C0   49636F6E4261       DC8 "IconBar"
   \              7200        
   \   000001C8   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for menu_sk>`:
   \   000001CC   18000000           DC16 24, 0
   \   000001D0   00000000           DC32 0
   \   000001D4   01000000           DC16 1, 0
   \   000001D8   00000000           DC32 0
   \   000001DC   3D000000           DC16 61, 0
   \   000001E0   FBC0FF7F           DC32 2147467515
   \                     `?<Initializer for gipc>`:
   \   000001E4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \                     `?<Initializer for tmr_gipc>`:
   \   000001F0   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \                     `?<Initializer for clmenu_sk>`:
   \   000001FC   18000000           DC16 24, 0
   \   00000200   00000000           DC32 0
   \   00000204   01000000           DC16 1, 0
   \   00000208   ........           DC32 clmenu_sk_r
   \   0000020C   3D000000           DC16 61, 0
   \   00000210   FBC0FF7F           DC32 2147467515
   \                     `?<Initializer for sk>`:
   \   00000214   FF0F0000           DC16 4095, 0
   \   00000218   00000000           DC32 0
   \                     `?<Initializer for sk_cancel>`:
   \   0000021C   F00F0000           DC16 4080, 0
   \   00000220   00000000           DC32 0
   \                     `?<Initializer for maincsm_id>`:
   \   00000224   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for maingui_id>`:
   \   00000228   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for empty_string>`:
   \   0000022C   ........           DC32 `?<Constant "">`
   \                     `?<Initializer for SENDMSGCOUNT>`:
   \   00000230   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for ews>`:
   \   00000234   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for silenthide>`:
   \   00000238   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for disautorecconect>`:
   \   0000023C   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for Is_Vibra_Enabled>`:
   \   00000240   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for Is_Sounds_Enabled>`:
   \   00000244   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for Is_Show_Offline>`:
   \   00000248   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for Is_Show_Groups>`:
   \   0000024C   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for CurrentStatus>`:
   \   00000250   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for CurrentXStatus>`:
   \   00000254   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for CurrentPrivateStatus>`:
   \   00000258   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for Is_Active_Up>`:
   \   0000025C   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for vibra_count>`:
   \   00000260   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for templates_chars>`:
   \   00000264   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for templates_lines>`:
   \   00000268   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for RXstate>`:
   \   0000026C   F6FFFFFF           DC32 -10
   \                     `?<Initializer for connect_state>`:
   \   00000270   00000000           DC32 0
   \                     `?<Initializer for sock>`:
   \   00000274   FFFFFFFF           DC32 -1
   \                     `?<Initializer for TOTALRECEIVED>`:
   \   00000278   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for TOTALSENDED>`:
   \   0000027C   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for ALLTOTALRECEIVED>`:
   \   00000280   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for ALLTOTALSENDED>`:
   \   00000284   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for sendq_l>`:
   \   00000288   00000000           DC32 0
   \                     `?<Initializer for sendq_p>`:
   \   0000028C   00000000           DC32 0H
   \                     `?<Initializer for is_gprs_online>`:
   \   00000290   01000000           DC32 1
   \                     `?<Initializer for total_unread>`:
   \   00000294   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for messages_unread>`:
   \   00000298   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for cltop>`:
   \   0000029C   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for GROUP_CACHE>`:
   \   000002A0   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for contactlist_menu_id>`:
   \   000002A4   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for edchat_id>`:
   \   000002A8   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for prev_clmenu_itemcount>`:
   \   000002AC   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for tenseconds_to_ping>`:
   \   000002B0   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for DNR_ID>`:
   \   000002B4   00000000           DC32 0
   \                     `?<Initializer for DNR_TRIES>`:
   \   000002B8   03000000           DC32 3
   \                     `?<Initializer for host_counter>`:
   \   000002BC   00000000           DC32 0
   \                     `?<Initializer for time_to_stop_t9>`:
   \   000002C0   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for old_ed_redraw>`:
   \   000002C4   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for methods>`:
   \   000002C8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000002D8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000002E8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000002F8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \                     `?<Initializer for elf_path>`:
   \   00000308   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000318   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000328   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000338   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000348   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000358   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000368   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000378   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000388   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000398   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000003A8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000003B8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000003C8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000003D8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000003E8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000003F8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \                     `?<Initializer for ContactT9Key>`:
   \   00000408   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000418   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \                     `?<Initializer for logmsg>`:
   \   00000428   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000438   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000448   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000458   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000468   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000478   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000488   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000498   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000004A8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000004B8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000004C8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000004D8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000004E8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000004F8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000508   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000518   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \                     `?<Initializer for tmr_illumination>`:
   \   00000528   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \                     `?<Initializer for tmr_vibra>`:
   \   00000538   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \                     `?<Initializer for reconnect_tmr>`:
   \   00000548   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \                     `?<Initializer for tmr_active>`:
   \   00000558   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \                     `?<Initializer for clm_hdr_text>`:
   \   00000568   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000578   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000588   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \                     `?<Initializer for def_clm_hdr_text>`:
   \   00000598   00                 DC8 ""
   \   00000599   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000005A9   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000      
   \                     `?<Initializer for key_clm_hdr_text>`:
   \   000005B8   00                 DC8 ""
   \   000005B9   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000005C9   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000      
   \                     `?<Initializer for clmenu_sk_r>`:
   \   000005D8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \                     `?<Initializer for def_clmenu_sk_r>`:
   \   000005E8   00                 DC8 ""
   \   000005E9   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000005F9   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000      
   \                     `?<Initializer for key_clmenu_sk_r>`:
   \   00000608   00                 DC8 ""
   \   00000609   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000619   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000      
   \                     `?<Initializer for hostname>`:
   \   00000628   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000638   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000648   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000658   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000668   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000678   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000688   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000698   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \                     `?<Initializer for ecm_contactname>`:
   \   000006A8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000006B8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000006C8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000006D8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for ss>`:
   \   00000000   ........           DC32 `?<Constant "%s%s">`

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for sd>`:
   \   00000000   ........           DC32 `?<Constant "%s%d">`

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for sw>`:
   \   00000000   ........           DC32 `?<Constant "%s%w">`

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for s>`:
   \   00000000   ........           DC32 `?<Constant "%s">`

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "invisible.png">`:
   \   00000000   696E76697369       DC8 "invisible.png"
   \              626C652E706E
   \              6700        
   \   0000000E   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "offline.png">`:
   \   00000000   6F66666C696E       DC8 "offline.png"
   \              652E706E6700

   \                                 In segment DATA_C, align 1, align-sorted
   \                     `?<Constant "">`:
   \   00000000   00                 DC8 ""

   \                                 In segment DATA_C, align 1, align-sorted
   \                     `?<Constant "%s">`:
   \   00000000   257300             DC8 "%s"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "%s%w">`:
   \   00000000   2573257700         DC8 "%s%w"
   \   00000005   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "%s%d">`:
   \   00000000   2573256400         DC8 "%s%d"
   \   00000005   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "%s%s">`:
   \   00000000   2573257300         DC8 "%s%s"
   \   00000005   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   257700             DC8 "%w"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "bcfg">`:
   \   00000000   6263666700         DC8 "bcfg"
   \   00000005   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "abcdefghijklmnopqrstu...">`:
   \   00000000   616263646566       DC8 61H, 62H, 63H, 64H, 65H, 66H, 67H, 68H
   \              6768        
   \   00000008   696A6B6C6D6E       DC8 69H, 6AH, 6BH, 6CH, 6DH, 6EH, 6FH, 70H
   \              6F70        
   \   00000010   717273747576       DC8 71H, 72H, 73H, 74H, 75H, 76H, 77H, 78H
   \              7778        
   \   00000018   797A41424344       DC8 79H, 7AH, 41H, 42H, 43H, 44H, 45H, 46H
   \              4546        
   \   00000020   4748494A4B4C       DC8 47H, 48H, 49H, 4AH, 4BH, 4CH, 4DH, 4EH
   \              4D4E        
   \   00000028   4F5051525354       DC8 4FH, 50H, 51H, 52H, 53H, 54H, 55H, 56H
   \              5556        
   \   00000030   5758595A3031       DC8 57H, 58H, 59H, 5AH, 30H, 31H, 32H, 33H
   \              3233        
   \   00000038   343536373839       DC8 34H, 35H, 36H, 37H, 38H, 39H, 24H, 2DH
   \              242D        
   \   00000040   5F2E2B212A27       DC8 5FH, 2EH, 2BH, 21H, 2AH, 27H, 28H, 29H
   \              2829        
   \   00000048   2C253B3A4026       DC8 2CH, 25H, 3BH, 3AH, 40H, 26H, 3DH, 2FH
   \              3D2F        
   \   00000050   3F23E0E1E2E3       DC8 3FH, 23H, 0E0H, 0E1H, 0E2H, 0E3H, 0E4H, 0E5H
   \              E4E5        
   \   00000058   B8E6E7E8E9EA       DC8 0B8H, 0E6H, 0E7H, 0E8H, 0E9H, 0EAH, 0EBH, 0ECH
   \              EBEC        
   \   00000060   EDEEEFF0F1F2       DC8 0EDH, 0EEH, 0EFH, 0F0H, 0F1H, 0F2H, 0F3H, 0F4H
   \              F3F4        
   \   00000068   F5F6F7F8F9FA       DC8 0F5H, 0F6H, 0F7H, 0F8H, 0F9H, 0FAH, 0FBH, 0FCH
   \              FBFC        
   \   00000070   FDFEFFC0C1C2       DC8 0FDH, 0FEH, 0FFH, 0C0H, 0C1H, 0C2H, 0C3H, 0C4H
   \              C3C4        
   \   00000078   C5A8C6C7C8C9       DC8 0C5H, 0A8H, 0C6H, 0C7H, 0C8H, 0C9H, 0CAH, 0CBH
   \              CACB        
   \   00000080   CCCDCECFD0D1       DC8 0CCH, 0CDH, 0CEH, 0CFH, 0D0H, 0D1H, 0D2H, 0D3H
   \              D2D3        
   \   00000088   D4D5D6D7D8D9       DC8 0D4H, 0D5H, 0D6H, 0D7H, 0D8H, 0D9H, 0DAH, 0DBH
   \              DADB        
   \   00000090   DCDDDEDF7E00       DC8 0DCH, 0DDH, 0DEH, 0DFH, 7EH, 0
   \   00000096   0000               DC8 0, 0
   \   00000098   687474703A2F       DC8 "http://"
   \              2F00        
   \   000000A0   7777772E00         DC8 "www."
   \   000000A5   000000             DC8 0, 0, 0
   \   000000A8   616263646566       DC8 61H, 62H, 63H, 64H, 65H, 66H, 67H, 68H
   \              6768        
   \   000000B0   696A6B6C6D6E       DC8 69H, 6AH, 6BH, 6CH, 6DH, 6EH, 6FH, 70H
   \              6F70        
   \   000000B8   717273747576       DC8 71H, 72H, 73H, 74H, 75H, 76H, 77H, 78H
   \              7778        
   \   000000C0   797A41424344       DC8 79H, 7AH, 41H, 42H, 43H, 44H, 45H, 46H
   \              4546        
   \   000000C8   4748494A4B4C       DC8 47H, 48H, 49H, 4AH, 4BH, 4CH, 4DH, 4EH
   \              4D4E        
   \   000000D0   4F5051525354       DC8 4FH, 50H, 51H, 52H, 53H, 54H, 55H, 56H
   \              5556        
   \   000000D8   5758595A3031       DC8 57H, 58H, 59H, 5AH, 30H, 31H, 32H, 33H
   \              3233        
   \   000000E0   343536373839       DC8 34H, 35H, 36H, 37H, 38H, 39H, 24H, 2DH
   \              242D        
   \   000000E8   5F2E2B212A27       DC8 5FH, 2EH, 2BH, 21H, 2AH, 27H, 28H, 29H
   \              2829        
   \   000000F0   2C253B3A4026       DC8 2CH, 25H, 3BH, 3AH, 40H, 26H, 3DH, 2FH
   \              3D2F        
   \   000000F8   3FE0E1E2E3E4       DC8 3FH, 0E0H, 0E1H, 0E2H, 0E3H, 0E4H, 0E5H, 0B8H
   \              E5B8        
   \   00000100   E6E7E8E9EAEB       DC8 0E6H, 0E7H, 0E8H, 0E9H, 0EAH, 0EBH, 0ECH, 0EDH
   \              ECED        
   \   00000108   EEEFF0F1F2F3       DC8 0EEH, 0EFH, 0F0H, 0F1H, 0F2H, 0F3H, 0F4H, 0F5H
   \              F4F5        
   \   00000110   F6F7F8F9FAFB       DC8 0F6H, 0F7H, 0F8H, 0F9H, 0FAH, 0FBH, 0FCH, 0FDH
   \              FCFD        
   \   00000118   FEFFC0C1C2C3       DC8 0FEH, 0FFH, 0C0H, 0C1H, 0C2H, 0C3H, 0C4H, 0C5H
   \              C4C5        
   \   00000120   A8C6C7C8C9CA       DC8 0A8H, 0C6H, 0C7H, 0C8H, 0C9H, 0CAH, 0CBH, 0CCH
   \              CBCC        
   \   00000128   CDCECFD0D1D2       DC8 0CDH, 0CEH, 0CFH, 0D0H, 0D1H, 0D2H, 0D3H, 0D4H
   \              D3D4        
   \   00000130   D5D6D7D8D9DA       DC8 0D5H, 0D6H, 0D7H, 0D8H, 0D9H, 0DAH, 0DBH, 0DCH
   \              DBDC        
   \   00000138   DDDEDF00           DC8 0DDH, 0DEH, 0DFH, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\\\">_1`:
   \   00000000   5C00               DC8 "\\"
   \   00000002   0000               DC8 0, 0
   \   00000004   257325755C25       DC8 "%s%u\\%u.txt"
   \              752E74787400
   \   00000010   257325752E74       DC8 "%s%u.txt"
   \              787400      
   \   00000019   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "%w %d">`:
   \   00000000   257720256400       DC8 "%w %d"
   \   00000006   0000               DC8 0, 0
   \   00000008   25774E617449       DC8 "%wNatICQ:"
   \              43513A00    
   \   00000012   0000               DC8 0, 0
   \   00000014   25775B25645D       DC8 "%w[%d] "
   \              2000        
   \   0000001C   257725632000       DC8 "%w%c "
   \   00000022   0000               DC8 0, 0
   \   00000024   257720257700       DC8 "%w %w"
   \   0000002A   0000               DC8 0, 0

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   257500             DC8 "%u"

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   3A0A00             DC8 ":\012"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "%02d:%02d %02d-%02d %s:">`:
   \   00000000   253032643A25       DC8 "%02d:%02d %02d-%02d %s:"
   \              303264202530
   \              32642D253032
   \              642025733A00
   \   00000018   253032643A25       DC8 "%02d:%02d %02d-%02d %s:\015\012"
   \              303264202530
   \              32642D253032
   \              642025733A0D
   \              0A00        
   \   00000032   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Ping %d-%d seconds!">`:
   \   00000000   50696E672025       DC8 "Ping %d-%d seconds!"
   \              642D25642073
   \              65636F6E6473
   \              2100        
   \   00000014   4D534725643A       DC8 "MSG%d: %s"
   \              20257300    
   \   0000001E   0000               DC8 0, 0
   \   00000020   4572726F7220       DC8 "Error code 1"
   \              636F64652031
   \              00          
   \   0000002D   000000             DC8 0, 0, 0
   \   00000030   CDEEECE5F0EE       DC8 "\315\356\354\345\360\356\354 \347\340\370\353\350 \361 \344\360\363\343\356\343\356 \352\353\350\345\355\362\340"
   \              EC20E7E0F8EB
   \              E820F120E4F0
   \              F3E3EEE3EE20
   \              EAEBE8E5EDF2
   \              E000        
   \   00000050   4552523A2025       DC8 "ERR: %s"
   \              7300        
   \   00000058   534325643A20       DC8 "SC%d: %04X"
   \              2530345800  
   \   00000063   00                 DC8 0
   \   00000064   426164207061       DC8 "Bad packet"
   \              636B657400  
   \   0000006F   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \   00000000   31313000           DC8 "110"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Send error!">`:
   \   00000000   53656E642065       DC8 "Send error!"
   \              72726F722100
   \   0000000C   53656E642064       DC8 "Send delayed..."
   \              656C61796564
   \              2E2E2E00    
   \   0000001C   73656E642072       DC8 "send res %d"
   \              657320256400

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "%s:%d\\n(IP: %d.%d.%d.%d)">`:
   \   00000000   25733A25640A       DC8 "%s:%d\012(IP: %d.%d.%d.%d)"
   \              2849503A2025
   \              642E25642E25
   \              642E25642900
   \   00000018   444E52204F6B       DC8 "DNR Ok, connecting..."
   \              2C20636F6E6E
   \              656374696E67
   \              2E2E2E00    
   \   0000002E   0000               DC8 0, 0
   \   00000030   444E52204552       DC8 "DNR ERROR %d!"
   \              524F52202564
   \              2100        
   \   0000003E   0000               DC8 0, 0
   \   00000040   53656E642044       DC8 "Send DNR..."
   \              4E522E2E2E00
   \   0000004C   0A436F6E6E65       DC8 "\012Connect by IP!"
   \              637420627920
   \              49502100    
   \   0000005C   25733A256400       DC8 "%s:%d"
   \   00000062   0000               DC8 0, 0
   \   00000064   57616974696E       DC8 "Waiting for GPRS up..."
   \              6720666F7220
   \              475052532075
   \              702E2E2E00  
   \   0000007B   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\\\">_2`:
   \   00000000   5C00               DC8 "\\"
   \   00000002   0000               DC8 0, 0
   \   00000004   6164642000         DC8 "add "
   \   00000009   000000             DC8 0, 0, 0
   \   0000000C   302E74787400       DC8 "0.txt"
   \   00000012   0000               DC8 0, 0
   \   00000014   25642E747874       DC8 "%d.txt"
   \              00          
   \   0000001B   00                 DC8 0

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   7C2000             DC8 "| "

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "vis5.png">`:
   \   00000000   766973352E70       DC8 "vis5.png"
   \              6E6700      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "vis4.png">`:
   \   00000000   766973342E70       DC8 "vis4.png"
   \              6E6700      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "vis3.png">`:
   \   00000000   766973332E70       DC8 "vis3.png"
   \              6E6700      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "vis2.png">`:
   \   00000000   766973322E70       DC8 "vis2.png"
   \              6E6700      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "vis1.png">`:
   \   00000000   766973312E70       DC8 "vis1.png"
   \              6E6700      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "settings.png">`:
   \   00000000   73657474696E       DC8 "settings.png"
   \              67732E706E67
   \              00          
   \   0000000D   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "ping.png">`:
   \   00000000   70696E672E70       DC8 "ping.png"
   \              6E6700      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "logo.png">`:
   \   00000000   6C6F676F2E70       DC8 "logo.png"
   \              6E6700      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "head.png">`:
   \   00000000   686561642E70       DC8 "head.png"
   \              6E6700      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "groupon.png">`:
   \   00000000   67726F75706F       DC8 "groupon.png"
   \              6E2E706E6700

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "addcont.png">`:
   \   00000000   616464636F6E       DC8 "addcont.png"
   \              742E706E6700

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "null.png">`:
   \   00000000   6E756C6C2E70       DC8 "null.png"
   \              6E6700      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "groupoff.png">`:
   \   00000000   67726F75706F       DC8 "groupoff.png"
   \              66662E706E67
   \              00          
   \   0000000D   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "unknown.png">`:
   \   00000000   756E6B6E6F77       DC8 "unknown.png"
   \              6E2E706E6700

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "message.png">`:
   \   00000000   6D6573736167       DC8 "message.png"
   \              652E706E6700

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "ffc.png">`:
   \   00000000   6666632E706E       DC8 "ffc.png"
   \              6700        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "online.png">`:
   \   00000000   6F6E6C696E65       DC8 "online.png"
   \              2E706E6700  
   \   0000000B   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "work.png">`:
   \   00000000   776F726B2E70       DC8 "work.png"
   \              6E6700      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "lunch.png">`:
   \   00000000   6C756E63682E       DC8 "lunch.png"
   \              706E6700    
   \   0000000A   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "home.png">`:
   \   00000000   686F6D652E70       DC8 "home.png"
   \              6E6700      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "evil.png">`:
   \   00000000   6576696C2E70       DC8 "evil.png"
   \              6E6700      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "depression.png">`:
   \   00000000   646570726573       DC8 "depression.png"
   \              73696F6E2E70
   \              6E6700      
   \   0000000F   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "dnd.png">`:
   \   00000000   646E642E706E       DC8 "dnd.png"
   \              6700        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "occupied.png">`:
   \   00000000   6F6363757069       DC8 "occupied.png"
   \              65642E706E67
   \              00          
   \   0000000D   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "na.png">`:
   \   00000000   6E612E706E67       DC8 "na.png"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "away.png">`:
   \   00000000   617761792E70       DC8 "away.png"
   \              6E6700      
   \   00000009   000000             DC8 0, 0, 0

   Maximum stack usage in bytes:

     Function                  CSTACK
     --------                  ------
     ActionOnCurContact           16
     AddContactT9Key              12
     AddCurContact                 4
     AddLOGQ                       0
     AddMsgToChat                108
     AddSmile                      4
     AddStringToLog              188
     AskNickAndAddContact          4
     BackSpaceContactT9            8
     ChangeSound                   4
     ChangeVibra                   4
     CheckDoubleRun                8
     ClearContactT9Key             4
     ClearLog                     60
     ClearSendQ                    8
     CreateEditChat              116
     DeleteContactFromList         4
     DrawAck                      80
     ElfKiller                     4
     ExtractAnswer                36
     FindContactLOGQByAck         12
     FindNextActiveContact         0
     FindPrevActiveContact         0
     FreeLOGQ                      8
     FreeTemplates                 8
     GetHost                       0
     GetHostsCount                 0
     GetIconIndex                  0
     GetLastXTextLOGQ              0
     GetOnTotalContact             8
     GetPort                      16
     GetShortInfo                 20
     GetTempName                  20
     IlluminationOff               8
     IlluminationOn               28
     InAway                        0
     IsUrl                        44
     LastLOGQ                      0
     LoadTemplates               348
     NewLOGQ                      12
     OpenConfig                   12
     OpenLogfile                 152
     ParseAnswer                  36
     ParseXStatusText             20
     Play                        236
     ProcessPacket               296
     Quote                       152
     ReadDefSettings             152
     RecountMenu                  20
     RemoveCurContact              4
     RemoveLOGQ                    4
     ReqAddMsgToChat              16
     RequestXText                  8
     SMART_REDRAW                  8
     SaveAnswer                   12
     SendAnswer                   28
     SendAuthGrant                28
     SendAuthReq                  28
     SendMSGACK                    8
     SetIconBarHandler             0
     UpdateCLheader               20
     UpdateCSMname                28
     WriteDefSettings            152
     addIconBar                   12
     ask_my_info                   0
     atoi                          4
     contactlist_menu_ghook        8
     contactlist_menu_iconhndl   664
     contactlist_menu_onkey       36
     create_connect              208
     create_contactlist_menu      20
     do_ping                       4
     do_reconnect                  4
     ec_menu                      76
     ecmenu_ghook                  4
     ed_options_handler           64
     edchat_ghook                 72
     edchat_locret                 0
     edchat_onkey                476
     end_socket                    8
     free_ICONS                   16
     get_answer                 7232
     lgpUpdateClHdr               12
     main                         60
     maincsm_onclose               8
     maincsm_oncreate             20
     maincsm_onmessage            68
     method8                       0
     method9                       0
     my_ed_redraw                 12
     onClose                       8
     onCreate                      8
     onFocus                       8
     onKey                        24
     onRedraw                     88
     onUnfocus                     8
     process_active_timer         12
     set_my_status                 4
     set_my_xstatus               36
     setup_ICONS                 148
     start_vibra                   8
     stop_vibra                    4
     to_develop                    4
     wstrstr                      32


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     deleting_contact                   4
     SMART_REDRAW                      48
     setup_ICONS                      172
     free_ICONS                        48
     IlluminationOff                   60
     IlluminationOn                   124
     InAway                            60
     ReadDefSettings                  240
     WriteDefSettings                 236
     Play                             316
     start_vibra                      128
     stop_vibra                        88
     ChangeVibra                       56
     ChangeSound                       56
     FreeTemplates                     56
     LoadTemplates                   1236
     RXbuf                          16392
     TXbuf                          16392
     ElfKiller                         28
     lgpUpdateClHdr                    96
     NewLOGQ                           52
     LastLOGQ                          36
     FreeLOGQ                          48
     RemoveLOGQ                        52
     AddLOGQ                           44
     GetLastXTextLOGQ                  72
     GetIconIndex                     228
     FindContactLOGQByAck              88
     UpdateCLheader                   112
     ClearContactT9Key                 24
     AddContactT9Key                   44
     BackSpaceContactT9                44
     create_contactlist_menu          136
     contactlist_menu_ghook            72
     RecountMenu                      160
     contactlist_menu_onkey           764
     GetOnTotalContact                 92
     contactlist_menu_iconhndl        572
     GetHost                          192
     atoi                              84
     GetPort                          276
     GetHostsCount                    120
     create_connect                   740
     ClearSendQ                        32
     end_socket                        40
     SendAnswer                       384
     do_ping                           52
     SendMSGACK                        52
     RequestXText                      52
     get_answer                      1272
     AddStringToLog                   672
     ParseXStatusText                 152
     AddMsgToChat                     852
     DrawAck                          340
     ask_my_info                        4
     set_my_status                     68
     set_my_xstatus                   264
     to_develop                        84
     ReqAddMsgToChat                  120
     ProcessPacket                   2032
     process_active_timer             144
     onRedraw                         860
     onCreate                          44
     onClose                           36
     onFocus                           36
     onUnfocus                         36
     onKey                            228
     method8                            8
     method9                            8
     Canvas                           428
     S_OFFLINE                          8
     S_INVISIBLE                       12
     S_AWAY                             8
     S_NA                               4
     S_OCCUPIED                        12
     S_DND                              4
     S_ONLINE                           8
     S_FFC                              4
     ?<Constant "\\">_3               116
     empty_str                          1
     ?<Constant "\\">                  32
     def_setting                       20
     menusoftkeys                      12
     menu_skt                           8
     clmenu_skt                         8
     contactlist_menu                  48
     maincsm_oncreate                 252
     maincsm_onclose                  164
     do_reconnect                      40
     CheckDoubleRun                   132
     maincsm_onmessage               1928
     minus11                            4
     maincsm_name_body                280
     addIconBar                       144
     UpdateCSMname                    360
     SetIconBarHandler                 20
     OpenConfig                       120
     main                             212
     edchat_locret                      4
     ExtractAnswer                    280
     ??FindNextActiveContact_0         64
     FindPrevActiveContact             88
     ed_options_handler               448
     wstrstr                          124
     IsUrl                            424
     ParseAnswer                      548
     SaveAnswer                        36
     GetTempName                      172
     DMonth                            52
     edchat_onkey                    1100
     my_ed_redraw                     116
     edchat_ghook                     592
     edchat_desc                       84
     CreateEditChat                  1196
     Quote                            416
     GetShortInfo                     160
     AddCurContact                     52
     ActionOnCurContact               112
     DeleteContactFromList             32
     RemoveCurContact                  44
     SendAuthReq                      180
     SendAuthGrant                    180
     OpenLogfile                      252
     ClearLog                         240
     ecmenu_ghook                      20
     ecmenu_HNDLS                      36
     contactlist_menuhdr             1768
     ss                                 4
     sd                                 4
     sw                                 4
     s                                  4
     ecmenu_HDR                        64
     ec_menu                          396
     AskNickAndAddContact               8
     AddSmile                          24
     ??DataTable3                       4
     ??DataTable7                       4
     ??DataTable8                       4
     ??DataTable13                      4
     ??DataTable19                      4
     ??DataTable25                      4
     ??DataTable26                      4
     ??DataTable29                      4
     ??DataTable31                      4
     ??DataTable32                      4
     ??DataTable33                      4
     ??DataTable36                      4
     ??DataTable37                      4
     ??DataTable38                      4
     ??DataTable41                      4
     ??DataTable42                      4
     ??DataTable45                      4
     ??DataTable48                      4
     ??DataTable50                      4
     ??DataTable51                      4
     ??DataTable52                      4
     ??DataTable60                      4
     ??DataTable61                      4
     ??DataTable63                      4
     ??DataTable64                      4
     ??DataTable65                      4
     ??DataTable66                      4
     ??DataTable67                      4
     ??DataTable68                      4
     ??DataTable69                      4
     ??DataTable70                      4
     ??DataTable71                      4
     ??DataTable74                      4
     ??DataTable75                      4
     ??DataTable80                      4
     ??DataTable81                      4
     ??DataTable82                      4
     ??DataTable87                      4
     ??DataTable88                      4
     ??DataTable93                      4
     ??DataTable94                      4
     ??DataTable105                     4
     ??DataTable109                     4
     ??DataTable110                     4
     ??DataTable112                     4
     ??DataTable113                     4
     ??DataTable115                     4
     ??DataTable116                     4
     ??DataTable117                     4
     ??DataTable118                     4
     ??DataTable120                     4
     ??DataTable125                     4
     ??DataTable126                     4
     ??DataTable127                     4
     ??DataTable128                     4
     ??DataTable129                     4
     ??DataTable131                     4
     ??DataTable135                     4
     ??DataTable139                     4
     ??DataTable141                     4
     ??DataTable142                     4
     ??DataTable144                     4
     ??DataTable145                     4
     ??DataTable146                     4
     ??DataTable147                     4
     ??DataTable148                     4
     ??DataTable149                     4
     ??DataTable150                     4
     ??DataTable151                     4
     ??DataTable152                     4
     ??DataTable153                     4
     ??DataTable154                     4
     ??DataTable155                     4
     ??DataTable156                     4
     ??DataTable158                     4
     ??DataTable160                     4
     ??DataTable166                     4
     ??DataTable171                     4
     ??DataTable173                     4
     ??DataTable174                     4
     ??DataTable175                     4
     ??DataTable176                     4
     ??DataTable177                     4
     ?<Initializer for contactlist_menuhdr>
                                     1768
     ?<Initializer for ss>              4
     ?<Initializer for sd>              4
     ?<Initializer for sw>              4
     ?<Initializer for s>               4
     ?<Constant "invisible.png">       16
     ?<Constant "offline.png">         12
     ?<Constant "">                     1
     ?<Constant "%s">                   3
     ?<Constant "%s%w">                 8
     ?<Constant "%s%d">                 8
     ?<Constant "%s%s">                 8
     ?<Constant "%w">                   3
     ?<Constant "bcfg">                 8
     ?<Constant "abcdefghijklmnopqrstu...">
                                      316
     ?<Constant "\\">_1                28
     ?<Constant "%w %d">               44
     ?<Constant "%u">                   3
     ?<Constant ":\n">                  3
     ?<Constant "%02d:%02d %02d-%02d %s:">
                                       52
     ?<Constant "Ping %d-%d seconds!">
                                      112
     ?<Constant "110">                  4
     ?<Constant "Send error!">         40
     ?<Constant "%s:%d\n(IP: %d.%d.%d.%d)">
                                      124
     ?<Constant "\\">_2                28
     ?<Constant "| ">                   3
     ?<Constant "vis5.png">            12
     ?<Constant "vis4.png">            12
     ?<Constant "vis3.png">            12
     ?<Constant "vis2.png">            12
     ?<Constant "vis1.png">            12
     ?<Constant "settings.png">        16
     ?<Constant "ping.png">            12
     ?<Constant "logo.png">            12
     ?<Constant "head.png">            12
     ?<Constant "groupon.png">         12
     ?<Constant "addcont.png">         12
     ?<Constant "null.png">            12
     ?<Constant "groupoff.png">        16
     ?<Constant "unknown.png">         12
     ?<Constant "message.png">         12
     ?<Constant "ffc.png">              8
     ?<Constant "online.png">          12
     ?<Constant "work.png">            12
     ?<Constant "lunch.png">           12
     ?<Constant "home.png">            12
     ?<Constant "evil.png">            12
     ?<Constant "depression.png">      16
     ?<Constant "dnd.png">              8
     ?<Constant "occupied.png">        16
     ?<Constant "na.png">               8
     ?<Constant "away.png">            12
      Others                          884

 
 26 844 bytes in segment CODE
  2 113 bytes in segment DATA_C
  1 784 bytes in segment DATA_I
  1 784 bytes in segment DATA_ID
 33 068 bytes in segment DATA_Z
     24 bytes in segment INITTAB
 
 25 984 bytes of CODE  memory (+ 884 bytes shared)
  3 897 bytes of CONST memory
 34 852 bytes of DATA  memory

Errors: none
Warnings: none
