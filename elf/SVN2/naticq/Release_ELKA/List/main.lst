##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION    25/Mar/2011  13:14:52 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  D:\pasha\elf\SVN2\naticq\main.c                      #
#    Command line    =  D:\pasha\elf\SVN2\naticq\main.c -D NEWSGOLD -D ELKA  #
#                       --preprocess D:\pasha\elf\SVN2\naticq\Release_ELKA\L #
#                       ist\ -lC D:\pasha\elf\SVN2\naticq\Release_ELKA\List\ #
#                        -o D:\pasha\elf\SVN2\naticq\Release_ELKA\Obj\ -s9   #
#                       --no_unroll --cpu_mode arm --endian little --cpu     #
#                       ARM926EJ-S --stack_align 4 --interwork               #
#                       --separate_cluster_for_initialized_variables -e      #
#                       --fpu None --dlib_config "D:\pasha\Embedded          #
#                       Workbench 4.0 Evaluation2\ARM\LIB\dl5tpainl8n.h" -I  #
#                       "D:\pasha\Embedded Workbench 4.0                     #
#                       Evaluation2\ARM\INC\" --inline_threshold=2           #
#    List file       =  D:\pasha\elf\SVN2\naticq\Release_ELKA\List\main.lst  #
#    Object file     =  D:\pasha\elf\SVN2\naticq\Release_ELKA\Obj\main.r79   #
#                                                                            #
#                                                                            #
##############################################################################

D:\pasha\elf\SVN2\naticq\main.c
      1          #include "../inc/swilib.h"
      2          #include "../inc/cfg_items.h"
      3          #include "../inc/pnglist.h"
      4          #include "../inc/xtask_ipc.h"
      5          #include "../inc/naticq_ipc.h"
      6          #include "NatICQ.h"
      7          #include "history.h"
      8          #include "conf_loader.h"
      9          #include "mainmenu.h"
     10          #include "main.h"
     11          #include "language.h"
     12          #include "smiles.h"
     13          #include "naticq_ipc.h"
     14          #include <stdbool.h>
     15          #include "status_change.h"
     16          #include "strings.h"
     17          #include "manage_cl.h"
     18          #include "cl_work.h"
     19          #include "select_smile.h"
     20          #include "revision.h"
     21          #include "lang.h"
     22          #include "auth.h"
     23          
     24          #ifndef NEWSGOLD
     25          #define SEND_TIMER
     26          #endif
     27          

   \                                 In segment DATA_Z, align 4, align-sorted
     28          GUI *deleting_contact;
   \                     deleting_contact:
   \   00000000                      DS8 4
     29          
     30          extern volatile int total_smiles;
     31          extern volatile int total_xstatuses;
     32          extern volatile int total_xstatuses2;
     33          extern int total_clientid;
     34          extern volatile int xstatuses_load;
     35          extern volatile int pictures_max;
     36          extern volatile int pictures_loaded;
     37          extern char *successed_config_filename;
     38          
     39          extern int mrand(void);
     40          extern void msrand(unsigned seed);
     41          
     42          extern int AutoStatusRemainedCounter;
     43          extern const int AUTOSTATUS_IDLE_STATUS;
     44          extern const int AUTOSTATUS_HEADSET_STATUS;
     45          
     46          #define USE_MLMENU
     47          
     48          #define TMR_SECOND 216
     49          
     50          #define UTF16_ALIGN_RIGHT (0xE01D)
     51          
     52          //IPC
     53          const char ipc_my_name[32]=IPC_NATICQ_NAME;
     54          const char ipc_xtask_name[]=IPC_XTASK_NAME;
     55          IPC_REQ gipc;
     56          
     57          char elf_path[256];
     58          int maincsm_id;
     59          int maingui_id;
     60          
     61          // tridog, 30.04.2009
     62          // Ибо IAR :'(

   \                                 In segment DATA_I, align 4, align-sorted
     63          char *ss = "%s%s";
   \                     ss:
   \   00000000                      DS8 4
   \   00000004                      REQUIRE `?<Initializer for ss>`

   \                                 In segment DATA_I, align 4, align-sorted
     64          char *sd = "%s%d";
   \                     sd:
   \   00000000                      DS8 4
   \   00000004                      REQUIRE `?<Initializer for sd>`

   \                                 In segment DATA_I, align 4, align-sorted
     65          char *sw = "%s%w";
   \                     sw:
   \   00000000                      DS8 4
   \   00000004                      REQUIRE `?<Initializer for sw>`

   \                                 In segment DATA_I, align 4, align-sorted
     66          char *s = "%s";
   \                     s:
   \   00000000                      DS8 4
   \   00000004                      REQUIRE `?<Initializer for s>`
     67          char *empty_string = "";
     68          

   \                                 In segment CODE, align 4, keep-with-next
     69          void SMART_REDRAW(void)
     70          {
   \                     SMART_REDRAW:
   \   00000000   10402DE9           PUSH     {R4,LR}
     71            int f;
     72            LockSched();
   \   00000004   460100EF           SWI      +326
     73            f=IsGuiOnTop(maingui_id);
   \   00000008   1C009FE5           LDR      R0,??SMART_REDRAW_0  ;; S_ICONS + 144
   \   0000000C   000090E5           LDR      R0,[R0, #+0]
   \   00000010   350100EF           SWI      +309
   \   00000014   0040A0E1           MOV      R4,R0
     74            UnlockSched();
   \   00000018   470100EF           SWI      +327
     75            if (f) REDRAW();
   \   0000001C   000054E3           CMP      R4,#+0
   \   00000020   1080BD08           POPEQ    {R4,PC}
   \   00000024   720100EF           SWI      +370
     76          }
   \   00000028   1080BDE8           POP      {R4,PC}          ;; return
   \                     ??SMART_REDRAW_0:
   \   0000002C   ........           DC32     S_ICONS + 144
     77          
     78          //По 10 секунд
     79          #define ACTIVE_TIME 180
     80          
     81          //Максимальное количество сообщений в логе
     82          #define MAXLOGMSG (20)
     83          #define MAXCHATSIZE 7168
     84          
     85          // Строковые описания статусов
     86          const char S_OFFLINE[]="Offline";
     87          const char S_INVISIBLE[]="Invisible";
     88          const char S_AWAY[]="Away";
     89          const char S_NA[]="N/A";
     90          const char S_OCCUPIED[]="Occupied";
     91          const char S_DND[]="DND";
     92          const char S_ONLINE[]="Online";
     93          const char S_FFC[]="FFC";
     94          
     95          volatile int SENDMSGCOUNT;
     96          
     97          int S_ICONS[TOTAL_ICONS+1];
     98          
     99          #define EOP -10
    100          int CurrentStatus;
    101          int CurrentXStatus;
    102          
    103          int AutoStatusEvent=0;
    104          
    105          WSHDR *ews;
    106          
    107          extern const unsigned int UIN;
    108          extern const char PASS[];
    109          
    110          static const char * const icons_names[TOTAL_ICONS]=
    111          {
    112            "offline.png",
    113            "invisible.png",
    114            "away.png",
    115            "na.png",
    116            "occupied.png",
    117            "dnd.png",
    118            "depression.png",
    119            "evil.png",
    120            "home.png",
    121            "lunch.png",
    122            "work.png",
    123            "online.png",
    124            "ffc.png",
    125            "message.png",
    126            "unknown.png",
    127            "groupon.png",
    128            "groupoff.png",
    129            "null.png",
    130            "addcont.png",
    131            "head.png",
    132            "logo.png",
    133            "ping.png",
    134            "settings.png",
    135            "vis1.png",
    136            "vis2.png",
    137            "vis3.png",
    138            "vis4.png",
    139            "vis5.png"
    140          };
    141          

   \                                 In segment CODE, align 4, keep-with-next
    142          void setup_ICONS(void)
    143          {
   \                     setup_ICONS:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
    144            extern const char ICON_PATH[];
    145            const char _slash[]="\\";
   \   00000004   94409FE5           LDR      R4,??setup_ICONS_0  ;; `?<Constant "\\\\">_3`
   \   00000008   84D04DE2           SUB      SP,SP,#+132
   \   0000000C   0010D4E5           LDRB     R1,[R4, #0]
   \   00000010   0D00A0E1           MOV      R0,SP
   \   00000014   0010C0E5           STRB     R1,[R0, #+0]
   \   00000018   0110D4E5           LDRB     R1,[R4, #+1]
   \   0000001C   0110C0E5           STRB     R1,[R0, #+1]
    146            char icon_path[128];
    147            zeromem(icon_path,128);
   \   00000020   8010A0E3           MOV      R1,#+128
   \   00000024   04008DE2           ADD      R0,SP,#+4
   \   00000028   1D0100EF           SWI      +285
    148            strcpy(icon_path,ICON_PATH);
   \   0000002C   70109FE5           LDR      R1,??setup_ICONS_0+0x4  ;; ICON_PATH
   \   00000030   04008DE2           ADD      R0,SP,#+4
   \   00000034   1A0000EF           SWI      +26
    149            if (icon_path[strlen(icon_path)-1]!='\\') strcat(icon_path,_slash);
   \   00000038   04008DE2           ADD      R0,SP,#+4
   \   0000003C   1B0000EF           SWI      +27
   \   00000040   04108DE2           ADD      R1,SP,#+4
   \   00000044   010080E0           ADD      R0,R0,R1
   \   00000048   010050E5           LDRB     R0,[R0, #-1]
   \   0000004C   5C0050E3           CMP      R0,#+92
   \   00000050   0200000A           BEQ      ??setup_ICONS_1
   \   00000054   0D10A0E1           MOV      R1,SP
   \   00000058   04008DE2           ADD      R0,SP,#+4
   \   0000005C   170000EF           SWI      +23
    150            int i=0;
   \                     ??setup_ICONS_1:
   \   00000060   ........           LDR      R6,??DataTable1  ;; S_ICONS
   \   00000064   0050A0E3           MOV      R5,#+0
    151            do
    152            {
    153              if (!S_ICONS[i]) S_ICONS[i]=(int)MakeGlobalString(icon_path,0,icons_names[i]);
   \                     ??setup_ICONS_2:
   \   00000068   050196E7           LDR      R0,[R6, +R5, LSL #+2]
   \   0000006C   000050E3           CMP      R0,#+0
   \   00000070   0500001A           BNE      ??setup_ICONS_3
   \   00000074   050184E0           ADD      R0,R4,R5, LSL #+2
   \   00000078   042090E5           LDR      R2,[R0, #+4]
   \   0000007C   0010A0E3           MOV      R1,#+0
   \   00000080   04008DE2           ADD      R0,SP,#+4
   \   00000084   ........           _BLF     MakeGlobalString,??MakeGlobalString??rA
   \   00000088   050186E7           STR      R0,[R6, +R5, LSL #+2]
    154              i++;
   \                     ??setup_ICONS_3:
   \   0000008C   015085E2           ADD      R5,R5,#+1
    155            }
    156            while(i<TOTAL_ICONS);
   \   00000090   1C0055E3           CMP      R5,#+28
   \   00000094   F3FFFF3A           BCC      ??setup_ICONS_2
    157            return;
   \   00000098   84D08DE2           ADD      SP,SP,#+132      ;; stack cleaning
   \   0000009C   7080BDE8           POP      {R4-R6,PC}       ;; return
   \                     ??setup_ICONS_0:
   \   000000A0   ........           DC32     `?<Constant "\\\\">_3`
   \   000000A4   ........           DC32     ICON_PATH
    158          }
    159          

   \                                 In segment CODE, align 4, keep-with-next
    160          void free_ICONS(void)
    161          {
   \                     free_ICONS:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
    162            int i=0;
   \   00000004   ........           LDR      R5,??DataTable1  ;; S_ICONS
   \   00000008   0040A0E3           MOV      R4,#+0
   \   0000000C   0060A0E3           MOV      R6,#+0
    163            do
    164            {
    165              mfree((void*)S_ICONS[i]);
   \                     ??free_ICONS_0:
   \   00000010   040195E7           LDR      R0,[R5, +R4, LSL #+2]
   \   00000014   150000EF           SWI      +21
    166              S_ICONS[i]=0;
   \   00000018   046185E7           STR      R6,[R5, +R4, LSL #+2]
    167              i++;
   \   0000001C   014084E2           ADD      R4,R4,#+1
    168            }
    169            while(i<TOTAL_ICONS);
   \   00000020   1C0054E3           CMP      R4,#+28
   \   00000024   F9FFFF3A           BCC      ??free_ICONS_0
    170            return;
   \   00000028   7080BDE8           POP      {R4-R6,PC}       ;; return
    171          }
    172          
    173          extern const unsigned int IDLEICON_X;
    174          extern const unsigned int IDLEICON_Y;
    175          
    176          #ifdef NEWSGOLD
    177          #pragma swi_number=0x27
    178          __swi __arm void AddIconToIconBar(int pic, short *num);
    179          
    180          extern const unsigned int ST_FIRST;
    181          extern const unsigned int X_FIRST;
    182          extern const unsigned int ICON_ON;
    183          extern const unsigned int XST_IC;
    184          #endif
    185          
    186          extern const unsigned int I_COLOR;
    187          extern const unsigned int TO_COLOR;
    188          extern const unsigned int X_COLOR;
    189          extern const unsigned int O_I_COLOR;
    190          extern const unsigned int O_TO_COLOR;
    191          extern const unsigned int O_X_COLOR;
    192          
    193          extern const unsigned int ED_FONT_SIZE;
    194          extern const unsigned int ED_H_FONT_SIZE;
    195          extern const unsigned int ED_X_FONT_SIZE;
    196          extern const unsigned int O_ED_FONT_SIZE;
    197          extern const unsigned int O_ED_H_FONT_SIZE;
    198          extern const unsigned int O_ED_X_FONT_SIZE;
    199          
    200          extern const unsigned int ACK_COLOR;
    201          extern const unsigned int UNACK_COLOR;
    202          
    203          extern const int ENA_AUTO_XTXT;
    204          extern const int NOT_LOG_SAME_XTXT;
    205          extern const int LOG_XTXT;
    206          
    207          extern const int HISTORY_BUFFER;
    208          
    209          const char percent_t[]="%t";
    210          const char percent_d[]="%d";
    211          const char empty_str[]="";
    212          const char I_str[]="I";
    213          const char x_status_change[]="X-Status change";
    214          
    215          char logmsg[256];
    216          
    217          //Illumination by BoBa 19.04.2007
    218          ///////////
    219          extern const unsigned int ILL_DISP_RECV;
    220          extern const unsigned int ILL_KEYS_RECV;
    221          extern const unsigned int ILL_DISP_SEND;
    222          extern const unsigned int ILL_KEYS_SEND;
    223          extern const unsigned int ILL_SEND_TMR;
    224          extern const unsigned int ILL_SEND_FADE;
    225          extern const unsigned int ILL_RECV_TMR;
    226          extern const unsigned int ILL_RECV_FADE;
    227          extern const unsigned int ILL_OFF_FADE;
    228          
    229          GBSTMR tmr_illumination;
    230          

   \                                 In segment CODE, align 4, keep-with-next
    231          void IlluminationOff(){
    232            SetIllumination(0,1,0,ILL_OFF_FADE);
   \                     IlluminationOff:
   \   00000000   30009FE5           LDR      R0,??IlluminationOff_0  ;; ILL_OFF_FADE
   \   00000004   10402DE9           PUSH     {R4,LR}
   \   00000008   004090E5           LDR      R4,[R0, #+0]
   \   0000000C   0020A0E3           MOV      R2,#+0
   \   00000010   0430A0E1           MOV      R3,R4
   \   00000014   0110A0E3           MOV      R1,#+1
   \   00000018   0000A0E3           MOV      R0,#+0
   \   0000001C   080000EF           SWI      +8
    233            SetIllumination(1,1,0,ILL_OFF_FADE);
   \   00000020   0430A0E1           MOV      R3,R4
   \   00000024   0020A0E3           MOV      R2,#+0
   \   00000028   0110A0E3           MOV      R1,#+1
   \   0000002C   0100A0E1           MOV      R0,R1
   \   00000030   080000EF           SWI      +8
    234          }
   \   00000034   1080BDE8           POP      {R4,PC}          ;; return
   \                     ??IlluminationOff_0:
   \   00000038   ........           DC32     ILL_OFF_FADE
    235          

   \                                 In segment CODE, align 4, keep-with-next
    236          void IlluminationOn(const int disp, const int key, const int tmr, const int fade){
   \                     IlluminationOn:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0260A0E1           MOV      R6,R2
   \   00000010   0370A0E1           MOV      R7,R3
    237            if(!tmr) return;
   \   00000014   000056E3           CMP      R6,#+0
   \   00000018   F083BD08           POPEQ    {R4-R9,PC}
    238            GBS_DelTimer(&tmr_illumination);
   \   0000001C   ........           LDR      R9,??DataTable27  ;; S_ICONS
   \   00000020   DA8FA0E3           MOV      R8,#+872
   \   00000024   090088E0           ADD      R0,R8,R9
   \   00000028   8C0100EF           SWI      +396
    239            SetIllumination(0,1,disp,fade);
   \   0000002C   0730A0E1           MOV      R3,R7
   \   00000030   0428A0E1           MOV      R2,R4, LSL #+16
   \   00000034   2228A0E1           MOV      R2,R2, LSR #+16
   \   00000038   0110A0E3           MOV      R1,#+1
   \   0000003C   0000A0E3           MOV      R0,#+0
   \   00000040   080000EF           SWI      +8
    240            SetIllumination(1,1,key,fade);
   \   00000044   0730A0E1           MOV      R3,R7
   \   00000048   0528A0E1           MOV      R2,R5, LSL #+16
   \   0000004C   2228A0E1           MOV      R2,R2, LSR #+16
   \   00000050   0110A0E3           MOV      R1,#+1
   \   00000054   0100A0E3           MOV      R0,#+1
   \   00000058   080000EF           SWI      +8
    241            GBS_StartTimerProc(&tmr_illumination,tmr*216,IlluminationOff);
   \   0000005C   10209FE5           LDR      R2,??IlluminationOn_0  ;; IlluminationOff
   \   00000060   D800A0E3           MOV      R0,#+216
   \   00000064   900601E0           MUL      R1,R0,R6
   \   00000068   090088E0           ADD      R0,R8,R9
   \   0000006C   4D0000EF           SWI      +77
    242          }
   \   00000070   F083BDE8           POP      {R4-R9,PC}       ;; return
   \                     ??IlluminationOn_0:
   \   00000074   ........           DC32     IlluminationOff
    243          
    244          volatile int silenthide;    //by BoBa 25.06.07
    245          volatile int disautorecconect;	//by BoBa 10.07
    246          ///////////
    247          int Is_Vibra_Enabled;
    248          int Is_Sounds_Enabled;
    249          int Is_Show_Offline;
    250          int Is_Show_Groups;
    251          int CurrentStatus;
    252          int CurrentXStatus;
    253          int CurrentPrivateStatus;
    254          int Is_Active_Up;
    255          
    256          //===================================================================

   \                                 In segment CODE, align 4, keep-with-next
    257          int InAway()
    258          {
   \                     InAway:
   \   00000000   ........           LDR      R0,??DataTable3  ;; S_ICONS + 180
   \   00000004   000090E5           LDR      R0,[R0, #+0]
   \   00000008   030050E3           CMP      R0,#+3
   \   0000000C   05005013           CMPNE    R0,#+5
   \   00000010   04005013           CMPNE    R0,#+4
   \   00000014   0500001A           BNE      ??InAway_0
   \   00000018   18009FE5           LDR      R0,??InAway_1    ;; STRONG_AWAY
   \   0000001C   000090E5           LDR      R0,[R0, #+0]
   \   00000020   000050E3           CMP      R0,#+0
   \   00000024   1EFF2F01           BXEQ     LR
    259            extern const int STRONG_AWAY;
    260            if((CurrentStatus == IS_NA ||
    261               CurrentStatus == IS_DND ||
    262               CurrentStatus == IS_OCCUPIED) &&
    263               STRONG_AWAY)
    264              return 1;
   \   00000028   0100A0E3           MOV      R0,#+1
   \   0000002C   1EFF2FE1           BX       LR
    265            return 0;
   \                     ??InAway_0:
   \   00000030   0000A0E3           MOV      R0,#+0
   \   00000034   1EFF2FE1           BX       LR               ;; return
   \                     ??InAway_1:
   \   00000038   ........           DC32     STRONG_AWAY
    266          }
    267          //===================================================================
    268          const char def_setting[]="%sdef_settings_%d";
    269          

   \                                 In segment CODE, align 4, keep-with-next
    270          void ReadDefSettings(void)
    271          {
    272            DEF_SETTINGS def_set;
    273            int f;
    274            unsigned int err;
    275            char str[128];
    276            snprintf(str,127,def_setting,elf_path,UIN);
   \                     ReadDefSettings:
   \   00000000   ........           LDR      R0,??DataTable7  ;; UIN
   \   00000004   ........           LDR      R2,??DataTable8  ;; def_setting
   \   00000008   30402DE9           PUSH     {R4,R5,LR}
   \   0000000C   ........           LDR      R4,??DataTable27  ;; S_ICONS
   \   00000010   88D04DE2           SUB      SP,SP,#+136
   \   00000014   000090E5           LDR      R0,[R0, #+0]
   \   00000018   523F84E2           ADD      R3,R4,#+328
   \   0000001C   01002DE9           PUSH     {R0}
   \   00000020   7F10A0E3           MOV      R1,#+127
   \   00000024   0C008DE2           ADD      R0,SP,#+12
   \   00000028   1B0100EF           SWI      +283
    277            if ((f=fopen(str,A_ReadOnly+A_BIN,P_READ,&err))!=-1)
   \   0000002C   08308DE2           ADD      R3,SP,#+8
   \   00000030   8020A0E3           MOV      R2,#+128
   \   00000034   801CA0E3           MOV      R1,#+32768
   \   00000038   0C008DE2           ADD      R0,SP,#+12
   \   0000003C   0A0000EF           SWI      +10
   \   00000040   0050A0E1           MOV      R5,R0
   \   00000044   010075E3           CMN      R5,#+1
   \   00000048   04D08DE2           ADD      SP,SP,#+4
   \   0000004C   1900000A           BEQ      ??ReadDefSettings_0
    278            {
    279              fread(f,&def_set,sizeof(DEF_SETTINGS),&err);
   \   00000050   04308DE2           ADD      R3,SP,#+4
   \   00000054   0420A0E3           MOV      R2,#+4
   \   00000058   0D10A0E1           MOV      R1,SP
   \   0000005C   0B0000EF           SWI      +11
    280              fclose(f,&err);
   \   00000060   04108DE2           ADD      R1,SP,#+4
   \   00000064   0500A0E1           MOV      R0,R5
   \   00000068   0D0000EF           SWI      +13
    281              Is_Vibra_Enabled=def_set.vibra_status;
   \   0000006C   0000DDE5           LDRB     R0,[SP, #+0]
   \   00000070   010000E2           AND      R0,R0,#0x1
   \   00000074   A40084E5           STR      R0,[R4, #+164]
    282              Is_Sounds_Enabled=def_set.sound_status;
   \   00000078   0000DDE5           LDRB     R0,[SP, #+0]
   \   0000007C   020000E2           AND      R0,R0,#0x2
   \   00000080   A000A0E1           LSR      R0,R0,#+1
   \   00000084   A80084E5           STR      R0,[R4, #+168]
    283              Is_Show_Offline=def_set.off_contacts;
   \   00000088   0000DDE5           LDRB     R0,[SP, #+0]
    284              Is_Show_Groups=def_set.show_groups;
   \   0000008C   0010DDE5           LDRB     R1,[SP, #+0]
    285              CurrentStatus=def_set.def_status+1;
   \   00000090   0120DDE5           LDRB     R2,[SP, #+1]
    286              CurrentXStatus=def_set.def_xstatus;
    287              Is_Active_Up=def_set.active_up;
   \   00000094   0350DDE5           LDRB     R5,[SP, #+3]
   \   00000098   0230DDE5           LDRB     R3,[SP, #+2]
   \   0000009C   040000E2           AND      R0,R0,#0x4
   \   000000A0   2001A0E1           LSR      R0,R0,#+2
   \   000000A4   081001E2           AND      R1,R1,#0x8
   \   000000A8   A111A0E1           LSR      R1,R1,#+3
   \   000000AC   012082E2           ADD      R2,R2,#+1
   \   000000B0   035005E2           AND      R5,R5,#0x3
   \   000000B4   060000EA           B        ??ReadDefSettings_1
    288            }
    289            else
    290            {
    291              Is_Vibra_Enabled=0;
   \                     ??ReadDefSettings_0:
   \   000000B8   0000A0E3           MOV      R0,#+0
   \   000000BC   A40084E5           STR      R0,[R4, #+164]
    292              Is_Sounds_Enabled=0;
   \   000000C0   A80084E5           STR      R0,[R4, #+168]
    293              Is_Show_Offline=0;
    294              Is_Show_Groups=1;
   \   000000C4   0110A0E3           MOV      R1,#+1
    295              CurrentStatus=IS_ONLINE;
   \   000000C8   0B20A0E3           MOV      R2,#+11
    296              CurrentXStatus=0;
   \   000000CC   0030A0E3           MOV      R3,#+0
    297              Is_Active_Up=1;
   \   000000D0   0150A0E1           MOV      R5,R1
   \                     ??ReadDefSettings_1:
   \   000000D4   C05084E5           STR      R5,[R4, #+192]
   \   000000D8   B83084E5           STR      R3,[R4, #+184]
   \   000000DC   B42084E5           STR      R2,[R4, #+180]
   \   000000E0   B01084E5           STR      R1,[R4, #+176]
   \   000000E4   AC0084E5           STR      R0,[R4, #+172]
    298            }
    299          }
   \   000000E8   88D08DE2           ADD      SP,SP,#+136
   \   000000EC   3080BDE8           POP      {R4,R5,PC}       ;; return
    300          

   \                                 In segment CODE, align 4, keep-with-next
    301          void WriteDefSettings(void)
    302          {
    303            DEF_SETTINGS def_set;
    304            int f;
    305            unsigned int err;
    306            char str[128];
    307            snprintf(str,127,def_setting,elf_path,UIN);
   \                     WriteDefSettings:
   \   00000000   ........           LDR      R0,??DataTable7  ;; UIN
   \   00000004   ........           LDR      R2,??DataTable8  ;; def_setting
   \   00000008   30402DE9           PUSH     {R4,R5,LR}
   \   0000000C   ........           LDR      R4,??DataTable27  ;; S_ICONS
   \   00000010   88D04DE2           SUB      SP,SP,#+136
   \   00000014   000090E5           LDR      R0,[R0, #+0]
   \   00000018   523F84E2           ADD      R3,R4,#+328
   \   0000001C   01002DE9           PUSH     {R0}
   \   00000020   7F10A0E3           MOV      R1,#+127
   \   00000024   0C008DE2           ADD      R0,SP,#+12
   \   00000028   1B0100EF           SWI      +283
    308            if ((f=fopen(str,A_WriteOnly+A_BIN+A_Create+A_Truncate,P_WRITE,&err))!=-1)
   \   0000002C   08308DE2           ADD      R3,SP,#+8
   \   00000030   402FA0E3           MOV      R2,#+256
   \   00000034   0110A0E3           MOV      R1,#+1
   \   00000038   831C81E3           ORR      R1,R1,#0x8300
   \   0000003C   0C008DE2           ADD      R0,SP,#+12
   \   00000040   0A0000EF           SWI      +10
   \   00000044   0050A0E1           MOV      R5,R0
   \   00000048   010075E3           CMN      R5,#+1
   \   0000004C   04D08DE2           ADD      SP,SP,#+4
   \   00000050   2300000A           BEQ      ??WriteDefSettings_0
    309            {
    310              def_set.vibra_status=Is_Vibra_Enabled;
    311              def_set.sound_status=Is_Sounds_Enabled;
    312              def_set.off_contacts=Is_Show_Offline;
    313              def_set.show_groups=Is_Show_Groups;
   \   00000054   0010DDE5           LDRB     R1,[SP, #+0]
   \   00000058   A42094E5           LDR      R2,[R4, #+164]
   \   0000005C   F01001E2           AND      R1,R1,#0xF0
   \   00000060   012002E2           AND      R2,R2,#0x1
   \   00000064   011082E1           ORR      R1,R2,R1
   \   00000068   A82094E5           LDR      R2,[R4, #+168]
   \   0000006C   0230A0E3           MOV      R3,#+2
   \   00000070   822003E0           AND      R2,R3,R2, LSL #+1
   \   00000074   011082E1           ORR      R1,R2,R1
   \   00000078   AC2094E5           LDR      R2,[R4, #+172]
   \   0000007C   0430A0E3           MOV      R3,#+4
   \   00000080   022103E0           AND      R2,R3,R2, LSL #+2
   \   00000084   011082E1           ORR      R1,R2,R1
   \   00000088   B02094E5           LDR      R2,[R4, #+176]
   \   0000008C   0830A0E3           MOV      R3,#+8
   \   00000090   822103E0           AND      R2,R3,R2, LSL #+3
   \   00000094   011082E1           ORR      R1,R2,R1
   \   00000098   0010CDE5           STRB     R1,[SP, #+0]
    314              def_set.def_status=CurrentStatus-1;
   \   0000009C   B41094E5           LDR      R1,[R4, #+180]
    315              def_set.def_xstatus=CurrentXStatus;
    316              def_set.active_up=Is_Active_Up;
    317              fwrite(f,&def_set,sizeof(DEF_SETTINGS),&err);
   \   000000A0   04308DE2           ADD      R3,SP,#+4
   \   000000A4   011041E2           SUB      R1,R1,#+1
   \   000000A8   0110CDE5           STRB     R1,[SP, #+1]
   \   000000AC   B81094E5           LDR      R1,[R4, #+184]
   \   000000B0   0210CDE5           STRB     R1,[SP, #+2]
   \   000000B4   0310DDE5           LDRB     R1,[SP, #+3]
   \   000000B8   C02094E5           LDR      R2,[R4, #+192]
   \   000000BC   FC1001E2           AND      R1,R1,#0xFC
   \   000000C0   032002E2           AND      R2,R2,#0x3
   \   000000C4   011082E1           ORR      R1,R2,R1
   \   000000C8   0310CDE5           STRB     R1,[SP, #+3]
   \   000000CC   0420A0E3           MOV      R2,#+4
   \   000000D0   0D10A0E1           MOV      R1,SP
   \   000000D4   0C0000EF           SWI      +12
    318              fclose(f,&err);
   \   000000D8   04108DE2           ADD      R1,SP,#+4
   \   000000DC   0500A0E1           MOV      R0,R5
   \   000000E0   0D0000EF           SWI      +13
    319            }
    320          }
   \                     ??WriteDefSettings_0:
   \   000000E4   88D08DE2           ADD      SP,SP,#+136      ;; stack cleaning
   \   000000E8   3080BDE8           POP      {R4,R5,PC}       ;; return
    321          //by KreN 27.09.2007
    322          //===================================================================
    323          extern S_SMILES *s_top;
    324          extern DYNPNGICONLIST *SmilesImgList;
    325          extern DYNPNGICONLIST *XStatusesImgList;
    326          
    327          //=============================Проигрывание звука=======================
    328          extern const char sndStartup[];
    329          extern const char sndSrvMsg[];
    330          extern const char sndGlobal[];
    331          extern const char sndMsg[];
    332          extern const char sndMsgSent[];
    333          extern const unsigned int sndVolume;
    334          

   \                                 In segment CODE, align 4, keep-with-next
    335          void Play(const char *fname)
    336          {
   \                     Play:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   D0D04DE2           SUB      SP,SP,#+208
   \   00000008   0060A0E1           MOV      R6,R0
    337            if ((!IsCalling())&&Is_Sounds_Enabled&&!InAway())
   \   0000000C   6E0000EF           SWI      +110
   \   00000010   000050E3           CMP      R0,#+0
   \   00000014   4400001A           BNE      ??Play_0
   \   00000018   14019FE5           LDR      R0,??Play_1      ;; S_ICONS + 168
   \   0000001C   000090E5           LDR      R0,[R0, #+0]
   \   00000020   000050E3           CMP      R0,#+0
   \   00000024   4000000A           BEQ      ??Play_0
   \   00000028   ........           BL       InAway
   \   0000002C   000050E3           CMP      R0,#+0
   \   00000030   3D00001A           BNE      ??Play_0
    338            {
    339              FSTATS fstats;
    340              unsigned int err;
    341              if (GetFileStats(fname,&fstats,&err)!=-1)
   \   00000034   0D20A0E1           MOV      R2,SP
   \   00000038   A8108DE2           ADD      R1,SP,#+168
   \   0000003C   0600A0E1           MOV      R0,R6
   \   00000040   840000EF           SWI      +132
   \   00000044   010070E3           CMN      R0,#+1
   \   00000048   3700000A           BEQ      ??Play_0
    342              {
    343                PLAYFILE_OPT _sfo1;
    344                WSHDR* sndPath=AllocWS(128);
   \   0000004C   8000A0E3           MOV      R0,#+128
   \   00000050   250100EF           SWI      +293
   \   00000054   0040A0E1           MOV      R4,R0
    345                WSHDR* sndFName=AllocWS(128);
   \   00000058   8000A0E3           MOV      R0,#+128
   \   0000005C   250100EF           SWI      +293
   \   00000060   0050A0E1           MOV      R5,R0
    346                char s[128];
    347                const char *p=strrchr(fname,'\\')+1;
   \   00000064   5C10A0E3           MOV      R1,#+92
   \   00000068   0600A0E1           MOV      R0,R6
   \   0000006C   170100EF           SWI      +279
   \   00000070   017080E2           ADD      R7,R0,#+1
    348                str_2ws(sndFName,p,128);
   \   00000074   8020A0E3           MOV      R2,#+128
   \   00000078   0710A0E1           MOV      R1,R7
   \   0000007C   0500A0E1           MOV      R0,R5
   \   00000080   6C0100EF           SWI      +364
    349                strncpy(s,fname,p-fname);
   \   00000084   067047E0           SUB      R7,R7,R6
   \   00000088   0720A0E1           MOV      R2,R7
   \   0000008C   0610A0E1           MOV      R1,R6
   \   00000090   28008DE2           ADD      R0,SP,#+40
   \   00000094   160100EF           SWI      +278
    350                s[p-fname]='\0';
   \   00000098   0060A0E3           MOV      R6,#+0
   \   0000009C   28008DE2           ADD      R0,SP,#+40
   \   000000A0   0060C7E7           STRB     R6,[R7, +R0]
    351                str_2ws(sndPath,s,128);
   \   000000A4   8020A0E3           MOV      R2,#+128
   \   000000A8   28108DE2           ADD      R1,SP,#+40
   \   000000AC   0400A0E1           MOV      R0,R4
   \   000000B0   6C0100EF           SWI      +364
    352          
    353                zeromem(&_sfo1,sizeof(PLAYFILE_OPT));
   \   000000B4   2410A0E3           MOV      R1,#+36
   \   000000B8   04008DE2           ADD      R0,SP,#+4
   \   000000BC   1D0100EF           SWI      +285
    354                _sfo1.repeat_num=1;
    355                _sfo1.time_between_play=0;
    356                _sfo1.play_first=0;
    357                _sfo1.volume=sndVolume;
   \   000000C0   70209FE5           LDR      R2,??Play_1+0x4  ;; sndVolume
   \   000000C4   0100A0E3           MOV      R0,#+1
   \   000000C8   B400CDE1           STRH     R0,[SP, #+4]
   \   000000CC   08608DE5           STR      R6,[SP, #+8]
   \   000000D0   0C608DE5           STR      R6,[SP, #+12]
   \   000000D4   002092E5           LDR      R2,[R2, #+0]
    358          #ifdef NEWSGOLD
    359                _sfo1.unk6=1;
    360                _sfo1.unk7=1;
    361                _sfo1.unk9=2;
   \   000000D8   0210A0E3           MOV      R1,#+2
   \   000000DC   10208DE5           STR      R2,[SP, #+16]
   \   000000E0   18008DE5           STR      R0,[SP, #+24]
   \   000000E4   1C008DE5           STR      R0,[SP, #+28]
   \   000000E8   24108DE5           STR      R1,[SP, #+36]
    362                PlayFile(0x10, sndPath, sndFName, GBS_GetCurCepid(), MSG_PLAYFILE_REPORT, &_sfo1);
   \   000000EC   450100EF           SWI      +325
   \   000000F0   04108DE2           ADD      R1,SP,#+4
   \   000000F4   02002DE9           PUSH     {R1}
   \   000000F8   0030A0E1           MOV      R3,R0
   \   000000FC   0520A0E1           MOV      R2,R5
   \   00000100   1000A0E3           MOV      R0,#+16
   \   00000104   BC10A0E3           MOV      R1,#+188
   \   00000108   701C81E3           ORR      R1,R1,#0x7000
   \   0000010C   02002DE9           PUSH     {R1}
   \   00000110   0410A0E1           MOV      R1,R4
   \   00000114   4A0000EF           SWI      +74
    363          #else
    364          #ifdef X75
    365                _sfo1.unk4=0x80000000;
    366                _sfo1.unk5=1;
    367                PlayFile(0xC, sndPath, sndFName, 0,GBS_GetCurCepid(), MSG_PLAYFILE_REPORT, &_sfo1);
    368          #else
    369                _sfo1.unk5=1;
    370                PlayFile(0xC, sndPath, sndFName, GBS_GetCurCepid(), MSG_PLAYFILE_REPORT, &_sfo1);
    371          #endif
    372          #endif
    373                FreeWS(sndPath);
   \   00000118   0400A0E1           MOV      R0,R4
   \   0000011C   290100EF           SWI      +297
    374                FreeWS(sndFName);
   \   00000120   0500A0E1           MOV      R0,R5
   \   00000124   290100EF           SWI      +297
   \   00000128   08D08DE2           ADD      SP,SP,#+8
    375              }
    376            }
    377          }
   \                     ??Play_0:
   \   0000012C   D0D08DE2           ADD      SP,SP,#+208      ;; stack cleaning
   \   00000130   F080BDE8           POP      {R4-R7,PC}       ;; return
   \                     ??Play_1:
   \   00000134   ........           DC32     S_ICONS + 168
   \   00000138   ........           DC32     sndVolume
    378          
    379          GBSTMR tmr_vibra;
    380          volatile int vibra_count;
    381          

   \                                 In segment CODE, align 4, keep-with-next
    382          void start_vibra(void)
    383          {
   \                     start_vibra:
   \   00000000   10402DE9           PUSH     {R4,LR}
    384            extern const int VIBR_TYPE;
    385            void stop_vibra(void);
    386            if((Is_Vibra_Enabled)&&(GetVibraStatus())&&(!IsCalling())&&!InAway())
   \   00000004   ........           LDR      R4,??DataTable27  ;; S_ICONS
   \   00000008   A40094E5           LDR      R0,[R4, #+164]
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   1080BD08           POPEQ    {R4,PC}
   \   00000014   400000EF           SWI      +64
   \   00000018   000050E3           CMP      R0,#+0
   \   0000001C   1080BD08           POPEQ    {R4,PC}
   \   00000020   6E0000EF           SWI      +110
   \   00000024   000050E3           CMP      R0,#+0
   \   00000028   1080BD18           POPNE    {R4,PC}
   \   0000002C   ........           BL       InAway
   \   00000030   000050E3           CMP      R0,#+0
   \   00000034   1080BD18           POPNE    {R4,PC}
    387            {
    388              extern const unsigned int vibraPower;
    389              SetVibration(vibraPower);
   \   00000038   34009FE5           LDR      R0,??start_vibra_0  ;; vibraPower
   \   0000003C   000090E5           LDR      R0,[R0, #+0]
   \   00000040   7C0000EF           SWI      +124
    390              if(VIBR_TYPE)
   \   00000044   ........           LDR      R1,??DataTable13  ;; VIBR_TYPE
   \   00000048   28209FE5           LDR      R2,??start_vibra_0+0x4  ;; stop_vibra
   \   0000004C   001091E5           LDR      R1,[R1, #+0]
   \   00000050   DE0FA0E3           MOV      R0,#+888
   \   00000054   000051E3           CMP      R1,#+0
   \   00000058   0100000A           BEQ      ??start_vibra_1
    391                GBS_StartTimerProc(&tmr_vibra,TMR_SECOND>>2,stop_vibra);
   \   0000005C   3610A0E3           MOV      R1,#+54
   \   00000060   000000EA           B        ??start_vibra_2
    392              else
    393                GBS_StartTimerProc(&tmr_vibra,TMR_SECOND>>1,stop_vibra);
   \                     ??start_vibra_1:
   \   00000064   6C10A0E3           MOV      R1,#+108
   \                     ??start_vibra_2:
   \   00000068   040080E0           ADD      R0,R0,R4
   \   0000006C   4D0000EF           SWI      +77
    394            }
    395          }
   \   00000070   1080BDE8           POP      {R4,PC}          ;; return
   \                     ??start_vibra_0:
   \   00000074   ........           DC32     vibraPower
   \   00000078   ........           DC32     stop_vibra
    396          

   \                                 In segment CODE, align 4, keep-with-next
    397          void stop_vibra(void)
    398          {
   \                     stop_vibra:
   \   00000000   00402DE9           PUSH     {LR}
    399            extern const int VIBR_TYPE;
    400            SetVibration(0);
   \   00000004   0000A0E3           MOV      R0,#+0
   \   00000008   7C0000EF           SWI      +124
    401            if (--vibra_count)
   \   0000000C   ........           LDR      R0,??DataTable27  ;; S_ICONS
   \   00000010   C41090E5           LDR      R1,[R0, #+196]
   \   00000014   011051E2           SUBS     R1,R1,#+1
   \   00000018   C41080E5           STR      R1,[R0, #+196]
   \   0000001C   0080BD08           POPEQ    {PC}
    402            {
    403              if(VIBR_TYPE)
   \   00000020   ........           LDR      R1,??DataTable13  ;; VIBR_TYPE
   \   00000024   24209FE5           LDR      R2,??stop_vibra_0  ;; start_vibra
   \   00000028   001091E5           LDR      R1,[R1, #+0]
   \   0000002C   DE3FA0E3           MOV      R3,#+888
   \   00000030   000051E3           CMP      R1,#+0
   \   00000034   0100000A           BEQ      ??stop_vibra_1
    404                GBS_StartTimerProc(&tmr_vibra,TMR_SECOND/40,start_vibra);
   \   00000038   0510A0E3           MOV      R1,#+5
   \   0000003C   000000EA           B        ??stop_vibra_2
    405              else
    406                GBS_StartTimerProc(&tmr_vibra,TMR_SECOND>>1,start_vibra);
   \                     ??stop_vibra_1:
   \   00000040   6C10A0E3           MOV      R1,#+108
   \                     ??stop_vibra_2:
   \   00000044   000083E0           ADD      R0,R3,R0
   \   00000048   4D0000EF           SWI      +77
    407            }
    408          }
   \   0000004C   0080BDE8           POP      {PC}             ;; return
   \                     ??stop_vibra_0:
   \   00000050   ........           DC32     start_vibra
    409          

   \                                 In segment CODE, align 4, keep-with-next
    410          void ChangeVibra(void)
    411          {
    412            if (!(Is_Vibra_Enabled=!(Is_Vibra_Enabled)))
   \                     ChangeVibra:
   \   00000000   ........           LDR      R0,??DataTable27  ;; S_ICONS
   \   00000004   00402DE9           PUSH     {LR}
   \   00000008   A41090E5           LDR      R1,[R0, #+164]
   \   0000000C   000051E3           CMP      R1,#+0
   \   00000010   0110A003           MOVEQ    R1,#+1
   \   00000014   0010A013           MOVNE    R1,#+0
   \   00000018   A41080E5           STR      R1,[R0, #+164]
   \   0000001C   ........           LDR      R0,??DataTable28  ;; lgpData
   \   00000020   000051E3           CMP      R1,#+0
    413              ShowMSG(1,(int)lgpData[LGP_MsgVibraDis]);
   \   00000024   2C119005           LDREQ    R1,[R0, #+300]
    414            else
    415              ShowMSG(1,(int)lgpData[LGP_MsgVibraEna]);
   \   00000028   30119015           LDRNE    R1,[R0, #+304]
   \   0000002C   0100A0E3           MOV      R0,#+1
   \   00000030   480100EF           SWI      +328
    416          }
   \   00000034   0080BDE8           POP      {PC}             ;; return
    417          

   \                                 In segment CODE, align 4, keep-with-next
    418          void ChangeSound(void)
    419          {
    420            if (!(Is_Sounds_Enabled=!(Is_Sounds_Enabled)))
   \                     ChangeSound:
   \   00000000   ........           LDR      R0,??DataTable27  ;; S_ICONS
   \   00000004   00402DE9           PUSH     {LR}
   \   00000008   A81090E5           LDR      R1,[R0, #+168]
   \   0000000C   000051E3           CMP      R1,#+0
   \   00000010   0110A003           MOVEQ    R1,#+1
   \   00000014   0010A013           MOVNE    R1,#+0
   \   00000018   A81080E5           STR      R1,[R0, #+168]
   \   0000001C   ........           LDR      R0,??DataTable28  ;; lgpData
   \   00000020   000051E3           CMP      R1,#+0
    421              ShowMSG(1,(int)lgpData[LGP_MsgSndDis]);
   \   00000024   34119005           LDREQ    R1,[R0, #+308]
    422            else
    423              ShowMSG(1,(int)lgpData[LGP_MsgSndEna]);
   \   00000028   38119015           LDRNE    R1,[R0, #+312]
   \   0000002C   0100A0E3           MOV      R0,#+1
   \   00000030   480100EF           SWI      +328
    424          }
   \   00000034   0080BDE8           POP      {PC}             ;; return
    425          
    426          int total_unread;
    427          int messages_unread;
    428          
    429          //===================================================================
    430          //Делаем SLI индикацию и счетчик сообщений в кл - Twitch
    431          
    432          extern const int cl_unreaded_cnt;
    433          
    434          #ifdef ELKA
    435          
    436          #pragma swi_number=0x0036
    437          __swi __arm void SLI_SetState(unsigned char state);
    438          
    439          extern const int SLI_State;
    440          
    441          /*
    442          0xA04B77D4; E71
    443          0xA04BDB9C; EL71
    444          
    445          0 - off
    446          1 - on
    447          2 - blink slow
    448          3 - blink fast
    449          */
    450          

   \                                 In segment CODE, align 4, keep-with-next
    451          void SetSLI (int state)
    452          {
   \                     SetSLI:
   \   00000000   00402DE9           PUSH     {LR}
    453          	SLI_SetState((unsigned char) state);
   \   00000004   FF0000E2           AND      R0,R0,#0xFF
   \   00000008   360000EF           SWI      +54
    454          }
   \   0000000C   0080BDE8           POP      {PC}             ;; return
    455          

   \                                 In segment CODE, align 4, keep-with-next
    456          void UpdateSLIState()
    457          {
    458            if(SLI_State != 0)
   \                     UpdateSLIState:
   \   00000000   30009FE5           LDR      R0,??UpdateSLIState_0  ;; SLI_State
   \   00000004   00402DE9           PUSH     {LR}
   \   00000008   000090E5           LDR      R0,[R0, #+0]
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   0080BD08           POPEQ    {PC}
    459            {
    460              if (messages_unread > 0)
   \   00000014   20109FE5           LDR      R1,??UpdateSLIState_0+0x4  ;; S_ICONS + 204
   \   00000018   001091E5           LDR      R1,[R1, #+0]
   \   0000001C   010051E3           CMP      R1,#+1
   \   00000020   010000BA           BLT      ??UpdateSLIState_1
    461                SetSLI (SLI_State);
   \   00000024   FF0000E2           AND      R0,R0,#0xFF
   \   00000028   000000EA           B        ??UpdateSLIState_2
    462              else
    463          	  SetSLI (0);
   \                     ??UpdateSLIState_1:
   \   0000002C   0000A0E3           MOV      R0,#+0
   \                     ??UpdateSLIState_2:
   \   00000030   360000EF           SWI      +54
    464            }
    465          }
   \   00000034   0080BDE8           POP      {PC}             ;; return
   \                     ??UpdateSLIState_0:
   \   00000038   ........           DC32     SLI_State
   \   0000003C   ........           DC32     S_ICONS + 204
    466          
    467          #endif
    468          //===================================================================
    469          
    470          //===================================================================
    471          //Templates
    472          char *templates_chars; //Собственно файл
    473          char **templates_lines; //Массив указателей на строки
    474          

   \                                 In segment CODE, align 4, keep-with-next
    475          void FreeTemplates(void)
    476          {
   \                     FreeTemplates:
   \   00000000   10402DE9           PUSH     {R4,LR}
    477            if (templates_lines) mfree(templates_lines);
   \   00000004   ........           LDR      R4,??DataTable27  ;; S_ICONS
   \   00000008   D40094E5           LDR      R0,[R4, #+212]
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   0000000A           BEQ      ??FreeTemplates_0
   \   00000014   150000EF           SWI      +21
    478            if (templates_chars) mfree(templates_chars);
   \                     ??FreeTemplates_0:
   \   00000018   D00094E5           LDR      R0,[R4, #+208]
   \   0000001C   000050E3           CMP      R0,#+0
   \   00000020   0100000A           BEQ      ??FreeTemplates_1
   \   00000024   150000EF           SWI      +21
    479            templates_lines=NULL;
   \   00000028   0000A0E3           MOV      R0,#+0
   \                     ??FreeTemplates_1:
   \   0000002C   D40084E5           STR      R0,[R4, #+212]
    480            templates_chars=NULL;
   \   00000030   D00084E5           STR      R0,[R4, #+208]
    481          }
   \   00000034   1080BDE8           POP      {R4,PC}          ;; return
    482          
    483          extern const char TEMPLATES_PATH[];
    484          

   \                                 In segment CODE, align 4, keep-with-next
    485          int LoadTemplates(CLIST *t)
    486          {
    487            FSTATS stat;
    488            char fn[256];
    489            int f;
    490            unsigned int ul;
    491            unsigned int uin;
    492            int i;
    493            int fsize;
    494            char *p, *pp, *j;
    495            int c, firstgps;
    496            LOGQ *curlog, *lastadd;
    497            int loglen=0;
   \                     LoadTemplates:
   \   00000000   DC149FE5           LDR      R1,??LoadTemplates_0+0x4  ;; `?<Constant "\\\\">_2`
   \   00000004   F14F2DE9           PUSH     {R0,R4-R11,LR}
   \   00000008   4DDF4DE2           SUB      SP,SP,#+308
   \   0000000C   0020D1E5           LDRB     R2,[R1, #0]
   \   00000010   08008DE2           ADD      R0,SP,#+8
   \   00000014   0050A0E3           MOV      R5,#+0
   \   00000018   0020C0E5           STRB     R2,[R0, #+0]
   \   0000001C   0120D1E5           LDRB     R2,[R1, #+1]
   \   00000020   0120C0E5           STRB     R2,[R0, #+1]
    498            const char _slash[]="\\";
    499            uin = t->uin;
   \   00000024   34019DE5           LDR      R0,[SP, #+308]
   \   00000028   0C4090E5           LDR      R4,[R0, #+12]
    500            FreeTemplates();
   \   0000002C   ........           BL       FreeTemplates
    501            strcpy(fn,TEMPLATES_PATH);
   \   00000030   ........           LDR      R1,??DataTable19  ;; TEMPLATES_PATH
   \   00000034   34008DE2           ADD      R0,SP,#+52
   \   00000038   1A0000EF           SWI      +26
    502            if (fn[strlen(fn)-1]!='\\') strcat(fn,_slash);
   \   0000003C   34008DE2           ADD      R0,SP,#+52
   \   00000040   1B0000EF           SWI      +27
   \   00000044   34108DE2           ADD      R1,SP,#+52
   \   00000048   010080E0           ADD      R0,R0,R1
   \   0000004C   010050E5           LDRB     R0,[R0, #-1]
   \   00000050   5C0050E3           CMP      R0,#+92
   \   00000054   0200000A           BEQ      ??LoadTemplates_1
   \   00000058   08108DE2           ADD      R1,SP,#+8
   \   0000005C   34008DE2           ADD      R0,SP,#+52
   \   00000060   170000EF           SWI      +23
    503            i=strlen(fn);
   \                     ??LoadTemplates_1:
   \   00000064   34008DE2           ADD      R0,SP,#+52
   \   00000068   1B0000EF           SWI      +27
    504            sprintf(fn+i,"%d.txt",uin);
   \   0000006C   74149FE5           LDR      R1,??LoadTemplates_0+0x8  ;; `?<Constant "\\\\">_2` + 20
   \   00000070   0080A0E1           MOV      R8,R0
   \   00000074   34008DE2           ADD      R0,SP,#+52
   \   00000078   006088E0           ADD      R6,R8,R0
   \   0000007C   0420A0E1           MOV      R2,R4
   \   00000080   0600A0E1           MOV      R0,R6
   \   00000084   160000EF           SWI      +22
    505            if (GetFileStats(fn,&stat,&ul)==-1) goto L1;
   \   00000088   0540E0E1           MVN      R4,R5
   \   0000008C   0D20A0E1           MOV      R2,SP
   \   00000090   0C108DE2           ADD      R1,SP,#+12
   \   00000094   34008DE2           ADD      R0,SP,#+52
   \   00000098   840000EF           SWI      +132
   \   0000009C   040050E1           CMP      R0,R4
   \   000000A0   0A00000A           BEQ      ??LoadTemplates_2
    506            if ((fsize=stat.size)<=0) goto L1;
   \   000000A4   10809DE5           LDR      R8,[SP, #+16]
   \   000000A8   010058E3           CMP      R8,#+1
   \   000000AC   070000BA           BLT      ??LoadTemplates_2
    507            if ((f=fopen(fn,A_ReadOnly+A_BIN,P_READ,&ul))==-1)
   \   000000B0   0D30A0E1           MOV      R3,SP
   \   000000B4   8020A0E3           MOV      R2,#+128
   \   000000B8   801CA0E3           MOV      R1,#+32768
   \   000000BC   34008DE2           ADD      R0,SP,#+52
   \   000000C0   0A0000EF           SWI      +10
   \   000000C4   0090A0E1           MOV      R9,R0
   \   000000C8   040050E1           CMP      R0,R4
   \   000000CC   1400001A           BNE      ??LoadTemplates_3
    508            {
    509            L1:
    510              strcpy(fn+i,"0.txt");
   \                     ??LoadTemplates_2:
   \   000000D0   14149FE5           LDR      R1,??LoadTemplates_0+0xC  ;; `?<Constant "\\\\">_2` + 12
   \   000000D4   0600A0E1           MOV      R0,R6
   \   000000D8   1A0000EF           SWI      +26
    511              if (GetFileStats(fn,&stat,&ul)==-1) return 0;
   \   000000DC   0D20A0E1           MOV      R2,SP
   \   000000E0   0C108DE2           ADD      R1,SP,#+12
   \   000000E4   34008DE2           ADD      R0,SP,#+52
   \   000000E8   840000EF           SWI      +132
   \   000000EC   040050E1           CMP      R0,R4
   \   000000F0   0200001A           BNE      ??LoadTemplates_4
   \                     ??LoadTemplates_5:
   \   000000F4   0000A0E3           MOV      R0,#+0
   \   000000F8   4EDF8DE2           ADD      SP,SP,#+312
   \   000000FC   F08FBDE8           POP      {R4-R11,PC}      ;; return
    512              if ((fsize=stat.size)<=0) return 0;
   \                     ??LoadTemplates_4:
   \   00000100   10809DE5           LDR      R8,[SP, #+16]
   \   00000104   010058E3           CMP      R8,#+1
   \   00000108   F9FFFFBA           BLT      ??LoadTemplates_5
    513              f=fopen(fn,A_ReadOnly+A_BIN,P_READ,&ul);
   \   0000010C   0D30A0E1           MOV      R3,SP
   \   00000110   8020A0E3           MOV      R2,#+128
   \   00000114   801CA0E3           MOV      R1,#+32768
   \   00000118   34008DE2           ADD      R0,SP,#+52
   \   0000011C   0A0000EF           SWI      +10
   \   00000120   0090A0E1           MOV      R9,R0
    514            }
    515            if (f==-1) return 0;
   \                     ??LoadTemplates_3:
   \   00000124   040059E1           CMP      R9,R4
   \   00000128   F1FFFF0A           BEQ      ??LoadTemplates_5
    516          
    517            if(t->name[0] == '#'||t->clientid==2)       //Это бот
   \   0000012C   34019DE5           LDR      R0,[SP, #+308]
   \   00000130   1400D0E5           LDRB     R0,[R0, #+20]
   \   00000134   230050E3           CMP      R0,#+35
   \   00000138   0300000A           BEQ      ??LoadTemplates_6
   \   0000013C   34019DE5           LDR      R0,[SP, #+308]
   \   00000140   9A00D0E5           LDRB     R0,[R0, #+154]
   \   00000144   020050E3           CMP      R0,#+2
   \   00000148   0D00001A           BNE      ??LoadTemplates_7
    518            {
    519              curlog = t->log;
   \                     ??LoadTemplates_6:
   \   0000014C   34019DE5           LDR      R0,[SP, #+308]
   \   00000150   A84090E5           LDR      R4,[R0, #+168]
   \   00000154   000054E3           CMP      R4,#+0
   \   00000158   0600000A           BEQ      ??LoadTemplates_8
    520              while(curlog)               //Посчитаем предельную длину
    521              {
    522                loglen += strlen(curlog->text)+1;
   \                     ??LoadTemplates_9:
   \   0000015C   600084E2           ADD      R0,R4,#+96
   \   00000160   1B0000EF           SWI      +27
    523                curlog = curlog->next;
   \   00000164   004094E5           LDR      R4,[R4, #+0]
   \   00000168   000085E0           ADD      R0,R5,R0
   \   0000016C   015080E2           ADD      R5,R0,#+1
    524              }
   \   00000170   000054E3           CMP      R4,#+0
   \   00000174   F8FFFF1A           BNE      ??LoadTemplates_9
    525              p=templates_chars=malloc(fsize+1+loglen); //размер буфера под шаблоны
   \                     ??LoadTemplates_8:
   \   00000178   080085E0           ADD      R0,R5,R8
   \   0000017C   010080E2           ADD      R0,R0,#+1
   \   00000180   000000EA           B        ??LoadTemplates_10
    526            }
    527            else
    528              p=templates_chars=malloc(fsize+1);
   \                     ??LoadTemplates_7:
   \   00000184   010088E2           ADD      R0,R8,#+1
   \                     ??LoadTemplates_10:
   \   00000188   ........           LDR      R6,??DataTable27  ;; S_ICONS
   \   0000018C   140000EF           SWI      +20
   \   00000190   0050A0E1           MOV      R5,R0
   \   00000194   D00086E5           STR      R0,[R6, #+208]
    529            p[fread(f,p,fsize,&ul)]=0;
   \   00000198   0070A0E3           MOV      R7,#+0
   \   0000019C   0D30A0E1           MOV      R3,SP
   \   000001A0   0820A0E1           MOV      R2,R8
   \   000001A4   0510A0E1           MOV      R1,R5
   \   000001A8   0900A0E1           MOV      R0,R9
   \   000001AC   0B0000EF           SWI      +11
   \   000001B0   0570C0E7           STRB     R7,[R0, +R5]
    530            fclose(f,&ul);
   \   000001B4   0D10A0E1           MOV      R1,SP
   \   000001B8   0900A0E1           MOV      R0,R9
   \   000001BC   0D0000EF           SWI      +13
    531            i=0;
   \   000001C0   0080A0E3           MOV      R8,#+0
    532            pp=p;
   \   000001C4   0540A0E1           MOV      R4,R5
   \   000001C8   020000EA           B        ??LoadTemplates_11
    533            for(;;)
    534            {
    535              c=*p;
    536              if (c<32)
    537              {
    538                if (pp&&(pp!=p))
    539                {
    540          	templates_lines=realloc(templates_lines,(i+1)*sizeof(char *));
    541          	templates_lines[i++]=pp;
    542                }
    543                pp=NULL;
    544                if (!c) break;
    545                *p=0;
    546              }
    547              else
    548              {
    549                if (pp==NULL) pp=p;
   \                     ??LoadTemplates_12:
   \   000001CC   000054E3           CMP      R4,#+0
   \   000001D0   0540A001           MOVEQ    R4,R5
    550              }
    551              p++;
   \                     ??LoadTemplates_13:
   \   000001D4   015085E2           ADD      R5,R5,#+1
   \                     ??LoadTemplates_11:
   \   000001D8   00A0D5E5           LDRB     R10,[R5, #+0]
   \   000001DC   20005AE3           CMP      R10,#+32
   \   000001E0   F9FFFFAA           BGE      ??LoadTemplates_12
   \   000001E4   000054E3           CMP      R4,#+0
   \   000001E8   05005411           CMPNE    R4,R5
   \   000001EC   0600000A           BEQ      ??LoadTemplates_14
   \   000001F0   D40096E5           LDR      R0,[R6, #+212]
   \   000001F4   019088E2           ADD      R9,R8,#+1
   \   000001F8   0911A0E1           LSL      R1,R9,#+2
   \   000001FC   BA0000EF           SWI      +186
   \   00000200   D40086E5           STR      R0,[R6, #+212]
   \   00000204   084180E7           STR      R4,[R0, +R8, LSL #+2]
   \   00000208   0980A0E1           MOV      R8,R9
   \                     ??LoadTemplates_14:
   \   0000020C   0040A0E3           MOV      R4,#+0
   \   00000210   00005AE3           CMP      R10,#+0
   \   00000214   0A00001A           BNE      ??LoadTemplates_15
    552            }
    553            if(t->name[0]!='#'&&t->clientid!=2)       //Это не бот
   \   00000218   34019DE5           LDR      R0,[SP, #+308]
   \   0000021C   1400D0E5           LDRB     R0,[R0, #+20]
   \   00000220   230050E3           CMP      R0,#+35
   \   00000224   0800001A           BNE      ??LoadTemplates_16
    554              return i;
    555          
    556            curlog = t->log;
   \                     ??LoadTemplates_17:
   \   00000228   34019DE5           LDR      R0,[SP, #+308]
   \   0000022C   A89090E5           LDR      R9,[R0, #+168]
    557            firstgps = i;
   \   00000230   04808DE5           STR      R8,[SP, #+4]
   \   00000234   000059E3           CMP      R9,#+0
   \   00000238   5400000A           BEQ      ??LoadTemplates_18
    558            while(curlog)
    559            {
    560              pp = curlog->text;
   \                     ??LoadTemplates_19:
   \   0000023C   604089E2           ADD      R4,R9,#+96
   \   00000240   1C0000EA           B        ??LoadTemplates_20
   \                     ??LoadTemplates_15:
   \   00000244   0070C5E5           STRB     R7,[R5, #+0]
   \   00000248   E1FFFFEA           B        ??LoadTemplates_13
   \                     ??LoadTemplates_16:
   \   0000024C   34019DE5           LDR      R0,[SP, #+308]
   \   00000250   9A00D0E5           LDRB     R0,[R0, #+154]
   \   00000254   020050E3           CMP      R0,#+2
   \   00000258   F2FFFF0A           BEQ      ??LoadTemplates_17
   \                     ??LoadTemplates_21:
   \   0000025C   0800A0E1           MOV      R0,R8
   \   00000260   4EDF8DE2           ADD      SP,SP,#+312
   \   00000264   F08FBDE8           POP      {R4-R11,PC}
    561              while(pp = strstr(pp, "| "))
    562              {
    563                pp+=2; j = pp;
    564                if(curlog->text[0] != 'g') for(j = pp; (*j >= '0' && *j <= '9') || *j == '*'; j++);
    565                for(; *j == ' '; j++);
    566                pp = j;
    567          
    568                for(; *j && *j != 13 && *j != '|' && *j != '{'; j++);
    569          
    570                if(j != pp)
    571                {
    572                  memcpy(p, pp, j-pp);
    573                  *(p+(j-pp)) = 0;
    574                  for(c = j-pp-1; *(p+c) == ' '; *(p+c)=0, c--);
    575                  for(c = firstgps; c < i; c++)
   \                     ??LoadTemplates_22:
   \   00000268   01A08AE2           ADD      R10,R10,#+1
   \                     ??LoadTemplates_23:
   \   0000026C   08005AE1           CMP      R10,R8
   \   00000270   080000AA           BGE      ??LoadTemplates_24
    576                    if(!strcmp(templates_lines[c], p)) {*templates_lines[c] = 0; break;}
   \   00000274   D40096E5           LDR      R0,[R6, #+212]
   \   00000278   0510A0E1           MOV      R1,R5
   \   0000027C   0A0190E7           LDR      R0,[R0, +R10, LSL #+2]
   \   00000280   190000EF           SWI      +25
   \   00000284   000050E3           CMP      R0,#+0
   \   00000288   F6FFFF1A           BNE      ??LoadTemplates_22
   \   0000028C   D40096E5           LDR      R0,[R6, #+212]
   \   00000290   0A0190E7           LDR      R0,[R0, +R10, LSL #+2]
   \   00000294   0070C0E5           STRB     R7,[R0, #+0]
    577                  templates_lines=(char **)realloc(templates_lines,(i+1)*sizeof(char *));
   \                     ??LoadTemplates_24:
   \   00000298   D40096E5           LDR      R0,[R6, #+212]
   \   0000029C   01A088E2           ADD      R10,R8,#+1
   \   000002A0   0A11A0E1           LSL      R1,R10,#+2
   \   000002A4   BA0000EF           SWI      +186
   \   000002A8   D40086E5           STR      R0,[R6, #+212]
    578                  templates_lines[i++]=p;
   \   000002AC   085180E7           STR      R5,[R0, +R8, LSL #+2]
   \   000002B0   0A80A0E1           MOV      R8,R10
    579                  p+=j-pp+1;
   \   000002B4   01508BE2           ADD      R5,R11,#+1
   \                     ??LoadTemplates_20:
   \   000002B8   881F8FE2           ADR      R1,??LoadTemplates_0  ;; "| "
   \   000002BC   0400A0E1           MOV      R0,R4
   \   000002C0   180100EF           SWI      +280
   \   000002C4   0040B0E1           MOVS     R4,R0
   \   000002C8   2D00000A           BEQ      ??LoadTemplates_25
   \   000002CC   02A080E2           ADD      R10,R0,#+2
   \   000002D0   6000D9E5           LDRB     R0,[R9, #+96]
   \   000002D4   670050E3           CMP      R0,#+103
   \   000002D8   0300001A           BNE      ??LoadTemplates_26
   \   000002DC   070000EA           B        ??LoadTemplates_27
   \                     ??LoadTemplates_28:
   \   000002E0   3A0050E3           CMP      R0,#+58
   \   000002E4   0500002A           BCS      ??LoadTemplates_27
   \                     ??LoadTemplates_29:
   \   000002E8   01A08AE2           ADD      R10,R10,#+1
   \                     ??LoadTemplates_26:
   \   000002EC   0000DAE5           LDRB     R0,[R10, #+0]
   \   000002F0   300050E3           CMP      R0,#+48
   \   000002F4   F9FFFF2A           BCS      ??LoadTemplates_28
   \   000002F8   2A0050E3           CMP      R0,#+42
   \   000002FC   F9FFFF0A           BEQ      ??LoadTemplates_29
   \                     ??LoadTemplates_27:
   \   00000300   0000DAE5           LDRB     R0,[R10, #+0]
   \   00000304   200050E3           CMP      R0,#+32
   \   00000308   01A08A02           ADDEQ    R10,R10,#+1
   \   0000030C   FBFFFF0A           BEQ      ??LoadTemplates_27
   \   00000310   0A40A0E1           MOV      R4,R10
   \   00000314   000000EA           B        ??LoadTemplates_30
   \                     ??LoadTemplates_31:
   \   00000318   01A08AE2           ADD      R10,R10,#+1
   \                     ??LoadTemplates_30:
   \   0000031C   0000DAE5           LDRB     R0,[R10, #+0]
   \   00000320   000050E3           CMP      R0,#+0
   \   00000324   0D005013           CMPNE    R0,#+13
   \   00000328   7C005013           CMPNE    R0,#+124
   \   0000032C   7B005013           CMPNE    R0,#+123
   \   00000330   F8FFFF1A           BNE      ??LoadTemplates_31
   \   00000334   04005AE1           CMP      R10,R4
   \   00000338   DEFFFF0A           BEQ      ??LoadTemplates_20
   \   0000033C   04A04AE0           SUB      R10,R10,R4
   \   00000340   0A20A0E1           MOV      R2,R10
   \   00000344   0410A0E1           MOV      R1,R4
   \   00000348   0500A0E1           MOV      R0,R5
   \   0000034C   1E0100EF           SWI      +286
   \   00000350   05B08AE0           ADD      R11,R10,R5
   \   00000354   0070CBE5           STRB     R7,[R11, #+0]
   \   00000358   01004AE2           SUB      R0,R10,#+1
   \   0000035C   0510D0E7           LDRB     R1,[R0, +R5]
   \   00000360   200051E3           CMP      R1,#+32
   \   00000364   0400001A           BNE      ??LoadTemplates_32
   \                     ??LoadTemplates_33:
   \   00000368   0570C0E7           STRB     R7,[R0, +R5]
   \   0000036C   010040E2           SUB      R0,R0,#+1
   \   00000370   0510D0E7           LDRB     R1,[R0, +R5]
   \   00000374   200051E3           CMP      R1,#+32
   \   00000378   FAFFFF0A           BEQ      ??LoadTemplates_33
   \                     ??LoadTemplates_32:
   \   0000037C   04A09DE5           LDR      R10,[SP, #+4]
   \   00000380   B9FFFFEA           B        ??LoadTemplates_23
    580                }
    581              }
    582              curlog = curlog->next;
   \                     ??LoadTemplates_25:
   \   00000384   009099E5           LDR      R9,[R9, #+0]
    583            }
   \   00000388   000059E3           CMP      R9,#+0
   \   0000038C   AAFFFF1A           BNE      ??LoadTemplates_19
    584            for(c = f = firstgps; c < i; c++)
   \                     ??LoadTemplates_18:
   \   00000390   04909DE5           LDR      R9,[SP, #+4]
   \   00000394   09A0A0E1           MOV      R10,R9
   \   00000398   08005AE1           CMP      R10,R8
   \   0000039C   0A0000AA           BGE      ??LoadTemplates_34
    585              if(*templates_lines[c])
   \                     ??LoadTemplates_35:
   \   000003A0   D40096E5           LDR      R0,[R6, #+212]
   \   000003A4   0A1180E0           ADD      R1,R0,R10, LSL #+2
   \   000003A8   002091E5           LDR      R2,[R1, #+0]
    586                templates_lines[f++] = templates_lines[c];
   \   000003AC   01A08AE2           ADD      R10,R10,#+1
   \   000003B0   0020D2E5           LDRB     R2,[R2, #+0]
   \   000003B4   000052E3           CMP      R2,#+0
   \   000003B8   00109115           LDRNE    R1,[R1, #+0]
   \   000003BC   09118017           STRNE    R1,[R0, +R9, LSL #+2]
   \   000003C0   01908912           ADDNE    R9,R9,#+1
   \   000003C4   08005AE1           CMP      R10,R8
   \   000003C8   F4FFFFBA           BLT      ??LoadTemplates_35
    587            i = f;
   \                     ??LoadTemplates_34:
   \   000003CC   0980A0E1           MOV      R8,R9
    588            if(i > 27)
   \   000003D0   1C0058E3           CMP      R8,#+28
   \   000003D4   0B0000BA           BLT      ??LoadTemplates_36
    589            {
    590              memcpy(&templates_lines[firstgps], &templates_lines[firstgps+(i-27)], (27-firstgps)*sizeof(char *));
   \   000003D8   04109DE5           LDR      R1,[SP, #+4]
   \   000003DC   D40096E5           LDR      R0,[R6, #+212]
   \   000003E0   04309DE5           LDR      R3,[SP, #+4]
   \   000003E4   1B1061E2           RSB      R1,R1,#+27
   \   000003E8   0121A0E1           LSL      R2,R1,#+2
   \   000003EC   04109DE5           LDR      R1,[SP, #+4]
   \   000003F0   011088E0           ADD      R1,R8,R1
   \   000003F4   011180E0           ADD      R1,R0,R1, LSL #+2
   \   000003F8   6C1041E2           SUB      R1,R1,#+108
   \   000003FC   030180E0           ADD      R0,R0,R3, LSL #+2
   \   00000400   1E0100EF           SWI      +286
    591              i = 27;
   \   00000404   1B80A0E3           MOV      R8,#+27
    592            }
    593          
    594            curlog = t->log;
   \                     ??LoadTemplates_36:
   \   00000408   34019DE5           LDR      R0,[SP, #+308]
   \   0000040C   A84090E5           LDR      R4,[R0, #+168]
    595            if(curlog)
   \   00000410   000054E3           CMP      R4,#+0
   \   00000414   90FFFF0A           BEQ      ??LoadTemplates_21
    596            {
    597              lastadd = 0;
   \   00000418   0090A0E3           MOV      R9,#+0
    598              if(strstr(curlog->text, "add ")) lastadd = curlog;
    599          
    600              while(curlog->next)
    601              {
    602                curlog = curlog->next;
    603                if(strstr(curlog->text, "add ")) lastadd = curlog;
   \                     ??LoadTemplates_37:
   \   0000041C   CC109FE5           LDR      R1,??LoadTemplates_0+0x10  ;; `?<Constant "\\\\">_2` + 4
   \   00000420   600084E2           ADD      R0,R4,#+96
   \   00000424   180100EF           SWI      +280
   \   00000428   000050E3           CMP      R0,#+0
   \   0000042C   0490A011           MOVNE    R9,R4
    604              }
   \   00000430   004094E5           LDR      R4,[R4, #+0]
   \   00000434   000054E3           CMP      R4,#+0
   \   00000438   F7FFFF1A           BNE      ??LoadTemplates_37
    605          
    606              if(lastadd)
   \   0000043C   000059E3           CMP      R9,#+0
   \   00000440   85FFFF0A           BEQ      ??LoadTemplates_21
    607              {
    608                pp = lastadd->text;
   \   00000444   604089E2           ADD      R4,R9,#+96
   \   00000448   1C0000EA           B        ??LoadTemplates_38
    609          
    610                while(pp = strstr(pp, "add "))
    611                {
    612                  for(j = pp = pp+4; *j >= '0' && *j <= '9'; j++);
   \                     ??LoadTemplates_39:
   \   0000044C   01A08AE2           ADD      R10,R10,#+1
   \                     ??LoadTemplates_40:
   \   00000450   0000DAE5           LDRB     R0,[R10, #+0]
   \   00000454   300050E3           CMP      R0,#+48
   \   00000458   0100003A           BCC      ??LoadTemplates_41
   \   0000045C   3A0050E3           CMP      R0,#+58
   \   00000460   F9FFFF3A           BCC      ??LoadTemplates_39
    613                  if(j != pp)
   \                     ??LoadTemplates_41:
   \   00000464   04005AE1           CMP      R10,R4
   \   00000468   1400000A           BEQ      ??LoadTemplates_38
    614                  {
    615                    memcpy(p, "add ", 4);
   \   0000046C   7C109FE5           LDR      R1,??LoadTemplates_0+0x10  ;; `?<Constant "\\\\">_2` + 4
   \   00000470   0420A0E3           MOV      R2,#+4
   \   00000474   0500A0E1           MOV      R0,R5
   \   00000478   1E0100EF           SWI      +286
    616                    memcpy(p+4, pp, j-pp);
   \   0000047C   04904AE0           SUB      R9,R10,R4
   \   00000480   0920A0E1           MOV      R2,R9
   \   00000484   0410A0E1           MOV      R1,R4
   \   00000488   040085E2           ADD      R0,R5,#+4
   \   0000048C   1E0100EF           SWI      +286
    617                    templates_lines=(char **)realloc(templates_lines,(i+1)*sizeof(char *));
   \   00000490   D40096E5           LDR      R0,[R6, #+212]
   \   00000494   01A088E2           ADD      R10,R8,#+1
   \   00000498   0A11A0E1           LSL      R1,R10,#+2
   \   0000049C   BA0000EF           SWI      +186
   \   000004A0   D40086E5           STR      R0,[R6, #+212]
    618                    templates_lines[i++]=p;
   \   000004A4   085180E7           STR      R5,[R0, +R8, LSL #+2]
   \   000004A8   0A80A0E1           MOV      R8,R10
    619                    p+=j-pp+4;
   \   000004AC   050089E0           ADD      R0,R9,R5
   \   000004B0   045080E2           ADD      R5,R0,#+4
    620                    *p=32;p++;
   \   000004B4   2000A0E3           MOV      R0,#+32
   \   000004B8   ........           STRB     R0,[R5], #+1
    621                    *p=0;p++;
   \   000004BC   ........           STRB     R7,[R5], #+1
    622                  }
   \                     ??LoadTemplates_38:
   \   000004C0   28109FE5           LDR      R1,??LoadTemplates_0+0x10  ;; `?<Constant "\\\\">_2` + 4
   \   000004C4   0400A0E1           MOV      R0,R4
   \   000004C8   180100EF           SWI      +280
   \   000004CC   0040B0E1           MOVS     R4,R0
   \   000004D0   61FFFF0A           BEQ      ??LoadTemplates_21
   \   000004D4   044080E2           ADD      R4,R0,#+4
   \   000004D8   04A0A0E1           MOV      R10,R4
   \   000004DC   DBFFFFEA           B        ??LoadTemplates_40
   \                     ??LoadTemplates_0:
   \   000004E0   7C200000           DC8      "| ",+0
   \   000004E4   ........           DC32     `?<Constant "\\\\">_2`
   \   000004E8   ........           DC32     `?<Constant "\\\\">_2` + 20
   \   000004EC   ........           DC32     `?<Constant "\\\\">_2` + 12
   \   000004F0   ........           DC32     `?<Constant "\\\\">_2` + 4
    623                }
    624              }
    625            }
    626            return i;
    627          }
    628          
    629          //===================================================================
    630          typedef struct
    631          {
    632            CSM_RAM csm;
    633            int gui_id;
    634          }MAIN_CSM;
    635          
    636          typedef struct
    637          {
    638            GUI gui;
    639            WSHDR *ws1;
    640            WSHDR *ws2;
    641            int i1;
    642          }MAIN_GUI;
    643          
    644          int RXstate=EOP; //-sizeof(RXpkt)..-1 - receive header, 0..RXpkt.data_len - receive data
    645          
    646          TPKT RXbuf;
    647          TPKT TXbuf;
    648          
    649          int connect_state=0;
    650          
    651          int sock=-1;
    652          
    653          volatile unsigned long TOTALRECEIVED;
    654          volatile unsigned long TOTALSENDED;
    655          volatile unsigned long ALLTOTALRECEIVED;	//by BoBa 10.07
    656          volatile unsigned long ALLTOTALSENDED;
    657          
    658          volatile int sendq_l=0; //Длинна очереди для send
    659          volatile void *sendq_p=NULL; //указатель очереди
    660          
    661          volatile int is_gprs_online=1;
    662          int gprsdown=0;
    663          
    664          GBSTMR reconnect_tmr;
    665          
    666          extern void kill_data(void *p,void (*func_p)(void *));
    667          

   \                                 In segment CODE, align 4, keep-with-next
    668          void ElfKiller(void)
    669          {
   \                     ElfKiller:
   \   00000000   00402DE9           PUSH     {LR}
    670            extern void *ELF_BEGIN;
    671            kill_data(&ELF_BEGIN,(void (*)(void *))mfree_adr());
   \   00000004   158000EF           SWI      +32789
   \   00000008   0010A0E1           MOV      R1,R0
   \   0000000C   04009FE5           LDR      R0,??ElfKiller_0  ;; ELF_BEGIN
   \   00000010   0040BDE8           POP      {LR}             ;; Pop
   \   00000014   ........           _BF      kill_data,??kill_data??rA  ;; tailcall
   \                     ??ElfKiller_0:
   \   00000018   ........           DC32     ELF_BEGIN
    672          }
    673          
    674          //===============================================================================================
    675          #pragma inline
    676          void patch_rect(RECT*rc,int x,int y, int x2, int y2)
    677          {
    678            rc->x=x;
    679            rc->y=y;
    680            rc->x2=x2;
    681            rc->y2=y2;
    682          }
    683          
    684          #pragma inline
    685          void patch_header(const HEADER_DESC* head)
    686          {
    687            ((HEADER_DESC*)head)->rc.x=0;
    688            ((HEADER_DESC*)head)->rc.y=YDISP;
    689            ((HEADER_DESC*)head)->rc.x2=ScreenW()-1;
    690            ((HEADER_DESC*)head)->rc.y2=HeaderH()+YDISP-1;
    691          }
    692          #pragma inline
    693          void patch_input(const INPUTDIA_DESC* inp)
    694          {
    695            ((INPUTDIA_DESC*)inp)->rc.x=0;
    696            ((INPUTDIA_DESC*)inp)->rc.y=HeaderH()+1+YDISP;
    697            ((INPUTDIA_DESC*)inp)->rc.x2=ScreenW()-1;
    698            ((INPUTDIA_DESC*)inp)->rc.y2=ScreenH()-SoftkeyH()-1;
    699          }
    700          //===============================================================================================
    701          
    702          volatile CLIST *cltop;
    703          
    704          volatile unsigned int GROUP_CACHE; //Текущая группа для добавления
    705          
    706          volatile int contactlist_menu_id;
    707          
    708          GBSTMR tmr_active;
    709          
    710          volatile int edchat_id;
    711          
    712          //Применяется для добавления сообщений
    713          //CLIST *edcontact;
    714          //void *edgui_data;
    715          
    716          static int prev_clmenu_itemcount;
    717          
    718          char clm_hdr_text[48];
    719          static char def_clm_hdr_text[32] = "";//LgpData[LGP_ClTitle];
    720          static char key_clm_hdr_text[32] = "";//LgpData[LGP_ClT9Inp];
    721          
    722          static HEADER_DESC contactlist_menuhdr = {0, 0, 0, 0, S_ICONS+ICON_HEAD, (int)clm_hdr_text, LGP_NULL};
    723          static const int menusoftkeys[] = {0,1,2};
    724          
    725          static SOFTKEY_DESC menu_sk[] =
    726          {
    727            {0x0018, 0x0000, NULL},
    728            {0x0001, 0x0000, NULL},
    729            {0x003D, 0x0000, (int)LGP_DOIT_PIC}
    730          };
    731          
    732          char clmenu_sk_r[16];
    733          
    734          static char def_clmenu_sk_r[32] = "";
    735          static char key_clmenu_sk_r[32] = "";
    736          
    737          

   \                                 In segment CODE, align 4, keep-with-next
    738          void lgpUpdateClHdr()
    739          {
   \                     lgpUpdateClHdr:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
    740            strcpy(def_clm_hdr_text, (char*) lgpData[LGP_ClTitle]);
   \   00000004   ........           LDR      R4,??DataTable23  ;; def_clm_hdr_text
   \   00000008   ........           LDR      R5,??DataTable28  ;; lgpData
   \   0000000C   0400A0E1           MOV      R0,R4
   \   00000010   041095E5           LDR      R1,[R5, #+4]
   \   00000014   1A0000EF           SWI      +26
    741            strcpy(key_clm_hdr_text, (char*) lgpData[LGP_ClT9Inp]);
   \   00000018   081095E5           LDR      R1,[R5, #+8]
   \   0000001C   200084E2           ADD      R0,R4,#+32
   \   00000020   1A0000EF           SWI      +26
    742            strcpy(def_clmenu_sk_r,  (char*) lgpData[LGP_Close]);
   \   00000024   201095E5           LDR      R1,[R5, #+32]
   \   00000028   400084E2           ADD      R0,R4,#+64
   \   0000002C   1A0000EF           SWI      +26
    743            strcpy(key_clmenu_sk_r,  (char*) lgpData[LGP_Clear]);
   \   00000030   241095E5           LDR      R1,[R5, #+36]
   \   00000034   600084E2           ADD      R0,R4,#+96
   \   00000038   1A0000EF           SWI      +26
    744          }
   \   0000003C   3080BDE8           POP      {R4,R5,PC}       ;; return
    745          static SOFTKEY_DESC clmenu_sk[]=
    746          {
    747            {0x0018, 0x0000, NULL},
    748            {0x0001, 0x0000, (int)clmenu_sk_r},
    749            {0x003D, 0x0000, (int)LGP_DOIT_PIC}
    750          };
    751          
    752          const SOFTKEYSTAB menu_skt =
    753          {
    754            menu_sk, 0
    755          };
    756          
    757          static const SOFTKEYSTAB clmenu_skt =
    758          {
    759            clmenu_sk, 0
    760          };
    761          
    762          void contactlist_menu_ghook(void *data, int cmd);
    763          int contactlist_menu_onkey(void *data, GUI_MSG *msg);
    764          void contactlist_menu_iconhndl(void *data, int curitem, void *unk);
    765          
    766          #ifdef USE_MLMENU
    767          static const ML_MENU_DESC contactlist_menu=
    768          {
    769            8,contactlist_menu_onkey,contactlist_menu_ghook,NULL,
    770            menusoftkeys,
    771            &clmenu_skt,
    772            0x11, //+0x400
    773            contactlist_menu_iconhndl,
    774            NULL,   //Items
    775            NULL,   //Procs
    776            0,   //n
    777            1 //Добавочных строк
    778          };
    779          #else
    780          static const MENU_DESC contactlist_menu=
    781          {
    782            8,contactlist_menu_onkey,contactlist_menu_ghook,NULL,
    783            menusoftkeys,
    784            &clmenu_skt,
    785            0x11, //+0x400
    786            contactlist_menu_iconhndl,
    787            NULL,   //Items
    788            NULL,   //Procs
    789            0   //n
    790          };
    791          #endif
    792          
    793          int tenseconds_to_ping;
    794          

   \                                 In segment CODE, align 4, keep-with-next
    795          LOGQ *NewLOGQ(const char *s)
    796          {
   \                     NewLOGQ:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    797            LOGQ *p=malloc(sizeof(LOGQ)+1+strlen(s));
   \   00000008   1B0000EF           SWI      +27
   \   0000000C   610080E2           ADD      R0,R0,#+97
   \   00000010   140000EF           SWI      +20
   \   00000014   0050A0E1           MOV      R5,R0
    798            zeromem(p,sizeof(LOGQ));
   \   00000018   6010A0E3           MOV      R1,#+96
   \   0000001C   1D0100EF           SWI      +285
    799            strcpy(p->text,s);
   \   00000020   0410A0E1           MOV      R1,R4
   \   00000024   600085E2           ADD      R0,R5,#+96
   \   00000028   1A0000EF           SWI      +26
    800            return p;
   \   0000002C   0500A0E1           MOV      R0,R5
   \   00000030   3080BDE8           POP      {R4,R5,PC}       ;; return
    801          }
    802          

   \                                 In segment CODE, align 4, keep-with-next
    803          LOGQ *LastLOGQ(LOGQ **pp)
    804          {
    805            LOGQ *q=*pp;
   \                     LastLOGQ:
   \   00000000   000090E5           LDR      R0,[R0, #+0]
    806            if (q)
   \   00000004   000050E3           CMP      R0,#+0
   \   00000008   1EFF2F01           BXEQ     LR
   \   0000000C   000000EA           B        ??LastLOGQ_0
    807            {
    808              while(q->next) q=q->next;
   \                     ??LastLOGQ_1:
   \   00000010   0100A0E1           MOV      R0,R1
   \                     ??LastLOGQ_0:
   \   00000014   001090E5           LDR      R1,[R0, #+0]
   \   00000018   000051E3           CMP      R1,#+0
   \   0000001C   FBFFFF1A           BNE      ??LastLOGQ_1
    809            }
    810            return(q);
   \   00000020   1EFF2FE1           BX       LR               ;; return
    811          }
    812          
    813          //Уничтожить лог

   \                                 In segment CODE, align 4, keep-with-next
    814          void FreeLOGQ(LOGQ **pp)
    815          {
   \                     FreeLOGQ:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0010A0E1           MOV      R1,R0
    816            LOGQ *p=*pp;
   \   00000008   000091E5           LDR      R0,[R1, #+0]
    817            *pp=NULL; //Сразу обрежем
   \   0000000C   0020A0E3           MOV      R2,#+0
   \   00000010   002081E5           STR      R2,[R1, #+0]
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   1080BD08           POPEQ    {R4,PC}
    818            while(p)
    819            {
    820              LOGQ *np=p->next;
   \                     ??FreeLOGQ_0:
   \   0000001C   004090E5           LDR      R4,[R0, #+0]
    821              mfree(p);
   \   00000020   150000EF           SWI      +21
    822              p=np;
   \   00000024   0400B0E1           MOVS     R0,R4
    823            }
   \   00000028   FBFFFF1A           BNE      ??FreeLOGQ_0
    824          }
   \   0000002C   1080BDE8           POP      {R4,PC}          ;; return
    825          
    826          //Удалить элемент из лога

   \                                 In segment CODE, align 4, keep-with-next
    827          void RemoveLOGQ(LOGQ **queue, LOGQ *p)
    828          {
   \                     RemoveLOGQ:
   \   00000000   00402DE9           PUSH     {LR}
    829            LOGQ *q=(LOGQ *)queue;
   \   00000004   000000EA           B        ??RemoveLOGQ_0
    830            LOGQ *qp;
    831            while(qp=q->next)
    832            {
    833              if (qp==p)
    834              {
    835                q->next=p->next;
    836                break;
    837              }
    838              q=qp;
   \                     ??RemoveLOGQ_1:
   \   00000008   0200A0E1           MOV      R0,R2
   \                     ??RemoveLOGQ_0:
   \   0000000C   002090E5           LDR      R2,[R0, #+0]
   \   00000010   000052E3           CMP      R2,#+0
   \   00000014   0300000A           BEQ      ??RemoveLOGQ_2
   \   00000018   010052E1           CMP      R2,R1
   \   0000001C   F9FFFF1A           BNE      ??RemoveLOGQ_1
   \   00000020   002091E5           LDR      R2,[R1, #+0]
   \   00000024   002080E5           STR      R2,[R0, #+0]
    839            }
    840            mfree(p); //Если элемент вообще не в логе
   \                     ??RemoveLOGQ_2:
   \   00000028   0100A0E1           MOV      R0,R1
   \   0000002C   150000EF           SWI      +21
    841          }
   \   00000030   0080BDE8           POP      {PC}             ;; return
    842          
    843          //Добавить элемент в лог

   \                                 In segment CODE, align 4, keep-with-next
    844          int AddLOGQ(LOGQ **queue, LOGQ *p)
    845          {
    846            LOGQ *q=(LOGQ *)queue;
    847            LOGQ *qp;
    848            int i=0;
   \                     AddLOGQ:
   \   00000000   0020A0E3           MOV      R2,#+0
   \   00000004   000000EA           B        ??AddLOGQ_0
    849            while(qp=q->next) {q=qp;i++;}
   \                     ??AddLOGQ_1:
   \   00000008   0300A0E1           MOV      R0,R3
   \                     ??AddLOGQ_0:
   \   0000000C   003090E5           LDR      R3,[R0, #+0]
   \   00000010   012082E2           ADD      R2,R2,#+1
   \   00000014   000053E3           CMP      R3,#+0
   \   00000018   FAFFFF1A           BNE      ??AddLOGQ_1
    850            p->next=NULL;
   \   0000001C   003081E5           STR      R3,[R1, #+0]
    851            q->next=p;
   \   00000020   001080E5           STR      R1,[R0, #+0]
    852            return(i+1); //Теперь всего в логе элементов
   \   00000024   0200A0E1           MOV      R0,R2
   \   00000028   1EFF2FE1           BX       LR               ;; return
    853          }
    854          
    855          //Получаем последний полученный X-статус

   \                                 In segment CODE, align 4, keep-with-next
    856          char *GetLastXTextLOGQ(CLIST *t)
    857          {
    858            LOGQ *p = t->log;
   \                     GetLastXTextLOGQ:
   \   00000000   A81090E5           LDR      R1,[R0, #+168]
    859            char *s = 0;
   \   00000004   0000A0E3           MOV      R0,#+0
    860            if(!p) return 0;
   \   00000008   000051E3           CMP      R1,#+0
   \   0000000C   0500001A           BNE      ??GetLastXTextLOGQ_0
   \   00000010   1EFF2FE1           BX       LR
    861            while(p->next)
    862            {
    863              if((p->type&0x0F)==3)
   \                     ??GetLastXTextLOGQ_1:
   \   00000014   0C3091E5           LDR      R3,[R1, #+12]
   \   00000018   0F3003E2           AND      R3,R3,#0xF
   \   0000001C   030053E3           CMP      R3,#+3
    864                s = p->text;
   \   00000020   60008102           ADDEQ    R0,R1,#+96
    865              p = p->next;
   \   00000024   0210A0E1           MOV      R1,R2
    866            }
   \                     ??GetLastXTextLOGQ_0:
   \   00000028   002091E5           LDR      R2,[R1, #+0]
   \   0000002C   000052E3           CMP      R2,#+0
   \   00000030   F7FFFF1A           BNE      ??GetLastXTextLOGQ_1
    867            if((p->type&0x0F)==3)
   \   00000034   0C2091E5           LDR      R2,[R1, #+12]
   \   00000038   0F2002E2           AND      R2,R2,#0xF
   \   0000003C   030052E3           CMP      R2,#+3
    868              s = p->text;
   \   00000040   60008102           ADDEQ    R0,R1,#+96
    869            return s;
   \   00000044   1EFF2FE1           BX       LR               ;; return
    870          }
    871          

   \                                 In segment CODE, align 4, keep-with-next
    872          int GetIconIndex(CLIST *t)
    873          {
    874            unsigned short s;
    875            if (t)
   \                     GetIconIndex:
   \   00000000   000050E3           CMP      R0,#+0
   \   00000004   3400000A           BEQ      ??GetIconIndex_0
    876            {
    877              s=t->state;
    878              if (t->isgroup) return(IS_GROUP);
   \   00000008   082090E5           LDR      R2,[R0, #+8]
   \   0000000C   B419D0E1           LDRH     R1,[R0, #+148]
   \   00000010   000052E3           CMP      R2,#+0
   \   00000014   0F00A013           MOVNE    R0,#+15
   \   00000018   1EFF2F11           BXNE     LR
    879              if (t->isunread)
   \   0000001C   9C0090E5           LDR      R0,[R0, #+156]
   \   00000020   000050E3           CMP      R0,#+0
    880                return(IS_MSG);
   \   00000024   0D00A013           MOVNE    R0,#+13
   \   00000028   1EFF2F11           BXNE     LR
    881              else
    882              {
    883                if (s==0xFFFF) return(IS_OFFLINE);
   \   0000002C   FF20A0E3           MOV      R2,#+255
   \   00000030   FF2C82E3           ORR      R2,R2,#0xFF00
   \   00000034   020051E1           CMP      R1,R2
   \   00000038   1EFF2F01           BXEQ     LR
    884                if ((s&0xF000)==0x2000) return (IS_LUNCH);
   \   0000003C   F02C01E2           AND      R2,R1,#0xF000
   \   00000040   800D52E3           CMP      R2,#+8192
   \   00000044   0900A003           MOVEQ    R0,#+9
   \   00000048   1EFF2F01           BXEQ     LR
    885                if ((s&0xF000)==0x3000) return (IS_EVIL);
   \   0000004C   C00D52E3           CMP      R2,#+12288
   \   00000050   0700A003           MOVEQ    R0,#+7
   \   00000054   1EFF2F01           BXEQ     LR
    886                if ((s&0xF000)==0x4000) return (IS_DEPRESSION);
   \   00000058   400C52E3           CMP      R2,#+16384
   \   0000005C   0600A003           MOVEQ    R0,#+6
   \   00000060   1EFF2F01           BXEQ     LR
    887                if ((s&0xF000)==0x5000) return (IS_HOME);
   \   00000064   500C52E3           CMP      R2,#+20480
   \   00000068   0800A003           MOVEQ    R0,#+8
   \   0000006C   1EFF2F01           BXEQ     LR
    888                if ((s&0xF000)==0x6000) return (IS_WORK);
   \   00000070   F00C01E2           AND      R0,R1,#0xF000
   \   00000074   600C50E3           CMP      R0,#+24576
   \   00000078   0A00A003           MOVEQ    R0,#+10
   \   0000007C   1EFF2F01           BXEQ     LR
    889                if (s & 0x0020) return(IS_FFC);
   \   00000080   200011E3           TST      R1,#0x20
   \   00000084   0100000A           BEQ      ??GetIconIndex_1
   \                     ??GetIconIndex_2:
   \   00000088   0C00A0E3           MOV      R0,#+12
   \   0000008C   1EFF2FE1           BX       LR
    890                if (s & 0x0001) return(IS_AWAY);
   \                     ??GetIconIndex_1:
   \   00000090   010011E3           TST      R1,#0x1
   \   00000094   0200A013           MOVNE    R0,#+2
   \   00000098   1EFF2F11           BXNE     LR
    891                if (s & 0x0005) return(IS_NA);
   \   0000009C   050011E3           TST      R1,#0x5
   \   000000A0   0300A013           MOVNE    R0,#+3
   \   000000A4   1EFF2F11           BXNE     LR
    892                if (s & 0x0011) return(IS_OCCUPIED);
   \   000000A8   110011E3           TST      R1,#0x11
   \   000000AC   0400A013           MOVNE    R0,#+4
   \   000000B0   1EFF2F11           BXNE     LR
    893                if (s & 0x0013) return(IS_DND);
   \   000000B4   130011E3           TST      R1,#0x13
   \   000000B8   0500A013           MOVNE    R0,#+5
   \   000000BC   1EFF2F11           BXNE     LR
    894                if (s & 0x0002) return(IS_FFC);
   \   000000C0   020011E3           TST      R1,#0x2
   \   000000C4   EFFFFF1A           BNE      ??GetIconIndex_2
    895                if (s & 0x0100) return(IS_INVISIBLE);
   \   000000C8   400F11E3           TST      R1,#0x100
   \   000000CC   0100A013           MOVNE    R0,#+1
   \   000000D0   1EFF2F11           BXNE     LR
    896              }
    897            }
    898            else
    899            {
    900              return(IS_UNKNOWN);
    901            }
    902            return(IS_ONLINE);
   \   000000D4   0B00A0E3           MOV      R0,#+11
   \   000000D8   1EFF2FE1           BX       LR
   \                     ??GetIconIndex_0:
   \   000000DC   0E00A0E3           MOV      R0,#+14
   \   000000E0   1EFF2FE1           BX       LR               ;; return
    903          }
    904          

   \                                 In segment CODE, align 4, keep-with-next
    905          LOGQ *FindContactLOGQByAck(TPKT *p)
    906          {
   \                     FindContactLOGQByAck:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    907            CLIST *t;
    908            LockSched();
   \   00000008   460100EF           SWI      +326
    909            t=FindContactByUin(p->pkt.uin);
   \   0000000C   000094E5           LDR      R0,[R4, #+0]
   \   00000010   ........           _BLF     FindContactByUin,??FindContactByUin??rA
   \   00000014   0050A0E1           MOV      R5,R0
    910            UnlockSched();
   \   00000018   470100EF           SWI      +327
    911            unsigned int id=*((unsigned short*)(p->data));
   \   0000001C   B840D4E1           LDRH     R4,[R4, #+8]
    912            LOGQ *q;
    913            if (!t) return NULL;
   \   00000020   000055E3           CMP      R5,#+0
   \   00000024   0000A003           MOVEQ    R0,#+0
   \   00000028   3080BD08           POPEQ    {R4,R5,PC}
    914            LockSched();
   \   0000002C   460100EF           SWI      +326
    915            q=t->log;
   \   00000030   A85095E5           LDR      R5,[R5, #+168]
   \   00000034   000000EA           B        ??FindContactLOGQByAck_0
    916            while(q)
    917            {
    918              if (q->ID==id) break;
    919              q=q->next;
   \                     ??FindContactLOGQByAck_1:
   \   00000038   005095E5           LDR      R5,[R5, #+0]
   \                     ??FindContactLOGQByAck_0:
   \   0000003C   000055E3           CMP      R5,#+0
   \   00000040   08009515           LDRNE    R0,[R5, #+8]
   \   00000044   04005011           CMPNE    R0,R4
   \   00000048   FAFFFF1A           BNE      ??FindContactLOGQByAck_1
    920            }
    921            UnlockSched();
   \   0000004C   470100EF           SWI      +327
    922            return q;
   \   00000050   0500A0E1           MOV      R0,R5
   \   00000054   3080BDE8           POP      {R4,R5,PC}       ;; return
    923          }
    924          
    925          char ContactT9Key[32];
    926          

   \                                 In segment CODE, align 4, keep-with-next
    927          void UpdateCLheader(void)
    928          {
   \                     UpdateCLheader:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
    929            if (strlen(ContactT9Key))
   \   00000004   ........           LDR      R6,??DataTable23  ;; def_clm_hdr_text
   \   00000008   ........           LDR      R8,??DataTable27  ;; S_ICONS
   \   0000000C   F64FA0E3           MOV      R4,#+984
   \   00000010   EA5FA0E3           MOV      R5,#+936
   \   00000014   927FA0E3           MOV      R7,#+584
   \   00000018   080087E0           ADD      R0,R7,R8
   \   0000001C   1B0000EF           SWI      +27
   \   00000020   000050E3           CMP      R0,#+0
   \   00000024   0900000A           BEQ      ??UpdateCLheader_0
    930            {
    931              strcpy(clm_hdr_text,key_clm_hdr_text);
   \   00000028   201086E2           ADD      R1,R6,#+32
   \   0000002C   080085E0           ADD      R0,R5,R8
   \   00000030   1A0000EF           SWI      +26
    932              strcat(clm_hdr_text,ContactT9Key);
   \   00000034   081087E0           ADD      R1,R7,R8
   \   00000038   080085E0           ADD      R0,R5,R8
   \   0000003C   170000EF           SWI      +23
    933              strcpy(clmenu_sk_r,key_clmenu_sk_r);
   \   00000040   601086E2           ADD      R1,R6,#+96
   \   00000044   080084E0           ADD      R0,R4,R8
   \   00000048   1A0000EF           SWI      +26
   \   0000004C   F081BDE8           POP      {R4-R8,PC}
    934            }
    935            else
    936            {
    937          //    clm_hdr_text[0]=FIRST_UCS2_BITMAP+CurrentXStatus;
    938              strcpy(&clm_hdr_text[0],def_clm_hdr_text);
   \                     ??UpdateCLheader_0:
   \   00000050   0610A0E1           MOV      R1,R6
   \   00000054   080085E0           ADD      R0,R5,R8
   \   00000058   1A0000EF           SWI      +26
    939              strcpy(clmenu_sk_r,def_clmenu_sk_r);
   \   0000005C   401086E2           ADD      R1,R6,#+64
   \   00000060   080084E0           ADD      R0,R4,R8
   \   00000064   1A0000EF           SWI      +26
    940            }
    941          }
   \   00000068   F081BDE8           POP      {R4-R8,PC}       ;; return
    942          

   \                                 In segment CODE, align 4, keep-with-next
    943          void ClearContactT9Key(void)
    944          {
    945            zeromem(ContactT9Key,sizeof(ContactT9Key));
   \                     ClearContactT9Key:
   \   00000000   0C009FE5           LDR      R0,??ClearContactT9Key_0  ;; S_ICONS + 584
   \   00000004   00402DE9           PUSH     {LR}
   \   00000008   2010A0E3           MOV      R1,#+32
   \   0000000C   1D0100EF           SWI      +285
    946          }
   \   00000010   0080BDE8           POP      {PC}             ;; return
   \                     ??ClearContactT9Key_0:
   \   00000014   ........           DC32     S_ICONS + 584
    947          

   \                                 In segment CODE, align 4, keep-with-next
    948          void AddContactT9Key(int chr)
    949          {
   \                     AddContactT9Key:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
    950            int l=strlen(ContactT9Key);
   \   00000004   ........           LDR      R5,??DataTable27  ;; S_ICONS
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   920F85E2           ADD      R0,R5,#+584
   \   00000010   1B0000EF           SWI      +27
    951            if (l<(sizeof(ContactT9Key)-1))
   \   00000014   1F0050E3           CMP      R0,#+31
    952            {
    953              ContactT9Key[l]=chr;
   \   00000018   05008030           ADDCC    R0,R0,R5
   \   0000001C   4842C035           STRBCC   R4,[R0, #+584]
    954            }
    955          }
   \   00000020   3080BDE8           POP      {R4,R5,PC}       ;; return
    956          

   \                                 In segment CODE, align 4, keep-with-next
    957          void BackSpaceContactT9(void)
    958          {
   \                     BackSpaceContactT9:
   \   00000000   10402DE9           PUSH     {R4,LR}
    959            int l=strlen(ContactT9Key);
   \   00000004   ........           LDR      R4,??DataTable27  ;; S_ICONS
   \   00000008   920F84E2           ADD      R0,R4,#+584
   \   0000000C   1B0000EF           SWI      +27
    960            if (l)
   \   00000010   000050E3           CMP      R0,#+0
    961            {
    962              l--;
    963              ContactT9Key[l]=0;
   \   00000014   04008010           ADDNE    R0,R0,R4
   \   00000018   0010A013           MOVNE    R1,#+0
   \   0000001C   4712C015           STRBNE   R1,[R0, #+583]
    964            }
    965          }
   \   00000020   1080BDE8           POP      {R4,PC}          ;; return
    966          

   \                                 In segment CODE, align 4, keep-with-next
    967          void create_contactlist_menu(void)
    968          {
   \                     create_contactlist_menu:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
    969            int i;
    970            i=CountContacts();
    971            prev_clmenu_itemcount=i;
   \   00000004   ........           LDR      R5,??DataTable27  ;; S_ICONS
    972          
    973          
    974            //strcpy(def_clm_hdr_text, (char*)lgpData[LGP_ClTitle]);
    975            //strcpy(key_clm_hdr_text, (char*)lgpData[LGP_ClT9Inp]);
    976          
    977            //strcpy(def_clmenu_sk_r,(char*) lgpData[LGP_Close]);
    978            //strcpy(key_clmenu_sk_r,(char*) lgpData[LGP_Clear]);
    979          
    980            UpdateCLheader();
    981            patch_header(&contactlist_menuhdr);
   \   00000008   74609FE5           LDR      R6,??create_contactlist_menu_0  ;; contactlist_menuhdr
   \   0000000C   ........           _BLF     CountContacts,??CountContacts??rA
   \   00000010   0040A0E1           MOV      R4,R0
   \   00000014   F84085E5           STR      R4,[R5, #+248]
   \   00000018   ........           BL       UpdateCLheader
   \   0000001C   0000A0E3           MOV      R0,#+0
   \   00000020   B000C6E1           STRH     R0,[R6, #+0]
   \   00000024   1800A0E3           MOV      R0,#+24
   \   00000028   B200C6E1           STRH     R0,[R6, #+2]
   \   0000002C   888100EF           SWI      +33160
   \   00000030   010040E2           SUB      R0,R0,#+1
   \   00000034   B400C6E1           STRH     R0,[R6, #+4]
   \   00000038   8A8100EF           SWI      +33162
    982          
    983            clmenu_sk[0].lgp_id=(int)lgpData[LGP_Options];
    984            menu_sk[0].lgp_id=(int)lgpData[LGP_Select];
    985            menu_sk[1].lgp_id=(int)lgpData[LGP_Close];
    986          
    987          
    988          #ifdef USE_MLMENU
    989            contactlist_menu_id=CreateMultiLinesMenu(0,0,&contactlist_menu,&contactlist_menuhdr,0,i);
   \   0000003C   44209FE5           LDR      R2,??create_contactlist_menu_0+0x4  ;; contactlist_menu
   \   00000040   170080E2           ADD      R0,R0,#+23
   \   00000044   B600C6E1           STRH     R0,[R6, #+6]
   \   00000048   ........           LDR      R0,??DataTable28  ;; lgpData
   \   0000004C   0630A0E1           MOV      R3,R6
   \   00000050   1C1090E5           LDR      R1,[R0, #+28]
   \   00000054   301086E5           STR      R1,[R6, #+48]
   \   00000058   301090E5           LDR      R1,[R0, #+48]
   \   0000005C   200090E5           LDR      R0,[R0, #+32]
   \   00000060   181086E5           STR      R1,[R6, #+24]
   \   00000064   200086E5           STR      R0,[R6, #+32]
   \   00000068   10002DE9           PUSH     {R4}
   \   0000006C   0000A0E3           MOV      R0,#+0
   \   00000070   01002DE9           PUSH     {R0}
   \   00000074   0010A0E3           MOV      R1,#+0
   \   00000078   170200EF           SWI      +535
   \   0000007C   F00085E5           STR      R0,[R5, #+240]
    990          #else
    991            contactlist_menu_id=CreateMenu(0,0,&contactlist_menu,&contactlist_menuhdr,0,i,0,0);
    992          #endif
    993          
    994          }
   \   00000080   7380BDE8           POP      {R0,R1,R4-R6,PC}  ;; return
   \                     ??create_contactlist_menu_0:
   \   00000084   ........           DC32     contactlist_menuhdr
   \   00000088   ........           DC32     contactlist_menu
    995          

   \                                 In segment CODE, align 4, keep-with-next
    996          void contactlist_menu_ghook(void *data, int cmd)
    997          {
   \                     contactlist_menu_ghook:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0140A0E1           MOV      R4,R1
    998            PNGTOP_DESC *pltop=PNG_TOP();
   \   00000008   B98100EF           SWI      +33209
    999            if (cmd==9)
   \   0000000C   0010A0E3           MOV      R1,#+0
   \   00000010   090054E3           CMP      R4,#+9
   1000            {
   1001              pltop->dyn_pltop=NULL;
   \   00000014   08108005           STREQ    R1,[R0, #+8]
   \   00000018   1080BD08           POPEQ    {R4,PC}
   1002            }
   1003            if (cmd==0x0A)
   \   0000001C   0A0054E3           CMP      R4,#+10
   \   00000020   1080BD18           POPNE    {R4,PC}
   1004            {
   1005              silenthide=0;
   \   00000024   14209FE5           LDR      R2,??contactlist_menu_ghook_0  ;; S_ICONS + 156
   \   00000028   001082E5           STR      R1,[R2, #+0]
   1006              pltop->dyn_pltop=XStatusesImgList;
   \   0000002C   10109FE5           LDR      R1,??contactlist_menu_ghook_0+0x4  ;; XStatusesImgList
   \   00000030   001091E5           LDR      R1,[R1, #+0]
   \   00000034   081080E5           STR      R1,[R0, #+8]
   1007              DisableIDLETMR();
   \   00000038   7F0100EF           SWI      +383
   1008            }
   1009          }
   \   0000003C   1080BDE8           POP      {R4,PC}          ;; return
   \                     ??contactlist_menu_ghook_0:
   \   00000040   ........           DC32     S_ICONS + 156
   \   00000044   ........           DC32     XStatusesImgList
   1010          

   \                                 In segment CODE, align 4, keep-with-next
   1011          void RecountMenu(CLIST *req, int needfocus)
   1012          {
   \                     RecountMenu:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   1013            int i;
   1014            int j;
   1015            void *data;
   1016            UpdateCLheader();
   1017            if (!contactlist_menu_id) return; //Нечего считать
   \   00000004   ........           LDR      R6,??DataTable43  ;; S_ICONS
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   ........           BL       UpdateCLheader
   \   00000014   F00096E5           LDR      R0,[R6, #+240]
   \   00000018   000050E3           CMP      R0,#+0
   \   0000001C   F080BD08           POPEQ    {R4-R7,PC}
   1018            data=FindGUIbyId(contactlist_menu_id,NULL);
   \   00000020   F00096E5           LDR      R0,[R6, #+240]
   \   00000024   0010A0E3           MOV      R1,#+0
   \   00000028   090200EF           SWI      +521
   \   0000002C   0070A0E1           MOV      R7,R0
   1019            if (req==NULL)
   \   00000030   000054E3           CMP      R4,#+0
   \   00000034   0200000A           BEQ      ??RecountMenu_0
   1020            {
   1021              j=0;
   1022            }
   1023            else
   1024            {
   1025              j=FindContactByContact(req);
   \   00000038   0400A0E1           MOV      R0,R4
   \   0000003C   ........           _BLF     FindContactByContact,??FindContactByContact??rA
   \   00000040   0040A0E1           MOV      R4,R0
   1026            }
   1027            i=CountContacts();
   \                     ??RecountMenu_0:
   \   00000044   ........           _BLF     CountContacts,??CountContacts??rA
   1028            if (j>=i) j=i-1;
   1029            if (j<0) j=0;
   1030            if (i!=prev_clmenu_itemcount)
   \   00000048   F81096E5           LDR      R1,[R6, #+248]
   \   0000004C   000054E1           CMP      R4,R0
   \   00000050   014040A2           SUBGE    R4,R0,#+1
   \   00000054   000054E3           CMP      R4,#+0
   \   00000058   0040A043           MOVMI    R4,#+0
   \   0000005C   010050E1           CMP      R0,R1
   \   00000060   0300000A           BEQ      ??RecountMenu_1
   1031            {
   1032              prev_clmenu_itemcount=i;
   \   00000064   F80086E5           STR      R0,[R6, #+248]
   1033              Menu_SetItemCountDyn(data,i);
   \   00000068   0010A0E1           MOV      R1,R0
   \   0000006C   0700A0E1           MOV      R0,R7
   \   00000070   E60100EF           SWI      +486
   1034            }
   1035            if(needfocus) SetCursorToMenuItem(data,j);
   \                     ??RecountMenu_1:
   \   00000074   000055E3           CMP      R5,#+0
   \   00000078   0200000A           BEQ      ??RecountMenu_2
   \   0000007C   0410A0E1           MOV      R1,R4
   \   00000080   0700A0E1           MOV      R0,R7
   \   00000084   C40100EF           SWI      +452
   1036            if (IsGuiOnTop(contactlist_menu_id)) RefreshGUI();
   \                     ??RecountMenu_2:
   \   00000088   F00096E5           LDR      R0,[R6, #+240]
   \   0000008C   350100EF           SWI      +309
   \   00000090   000050E3           CMP      R0,#+0
   \   00000094   F080BD08           POPEQ    {R4-R7,PC}
   \   00000098   960100EF           SWI      +406
   \   0000009C   F080BDE8           POP      {R4-R7,PC}       ;; return
   1037          }
   1038          

   \                                 In segment CODE, align 4, keep-with-next
   1039          int contactlist_menu_onkey(void *data, GUI_MSG *msg)
   1040          {
   \                     contactlist_menu_onkey:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000004   0160A0E1           MOV      R6,R1
   1041            CLIST *t;
   1042            int i;
   1043            i=GetCurMenuItem(data);
   \   00000008   8F0100EF           SWI      +399
   1044            t=FindContactByN(i);
   \   0000000C   ........           _BLF     FindContactByN,??FindContactByN??rA
   \   00000010   0070A0E1           MOV      R7,R0
   1045            if (msg->keys==0x18)
   \   00000014   F200D6E1           LDRSH    R0,[R6, #+2]
   \   00000018   180050E3           CMP      R0,#+24
   \   0000001C   0100001A           BNE      ??contactlist_menu_onkey_0
   1046            {
   1047              ShowMainMenu();
   \   00000020   ........           _BLF     ShowMainMenu,??ShowMainMenu??rA
   1048              return(-1);
   \   00000024   270000EA           B        ??contactlist_menu_onkey_1
   1049            }
   1050            if (msg->keys==0x3D)
   \                     ??contactlist_menu_onkey_0:
   \   00000028   ........           LDR      R5,??DataTable43  ;; S_ICONS
   \   0000002C   FF80A0E3           MOV      R8,#+255
   \   00000030   FF8C88E3           ORR      R8,R8,#0xFF00
   \   00000034   924FA0E3           MOV      R4,#+584
   \   00000038   3D0050E3           CMP      R0,#+61
   \   0000003C   2300001A           BNE      ??contactlist_menu_onkey_2
   1051            {
   1052              if (t)
   \   00000040   000057E3           CMP      R7,#+0
   \   00000044   2B00000A           BEQ      ??contactlist_menu_onkey_3
   1053              {
   1054                if (t->isgroup)
   \   00000048   080097E5           LDR      R0,[R7, #+8]
   \   0000004C   000050E3           CMP      R0,#+0
   \   00000050   0500000A           BEQ      ??contactlist_menu_onkey_4
   1055                {
   1056          	t->state^=0xFFFF;
   \   00000054   B409D7E1           LDRH     R0,[R7, #+148]
   1057          	RecountMenu(t, 1);
   \   00000058   0110A0E3           MOV      R1,#+1
   \   0000005C   000028E0           EOR      R0,R8,R0
   \   00000060   B409C7E1           STRH     R0,[R7, #+148]
   \   00000064   0700A0E1           MOV      R0,R7
   \   00000068   210000EA           B        ??contactlist_menu_onkey_5
   1058          	return(-1);
   1059                }
   1060                if (strlen(ContactT9Key))
   \                     ??contactlist_menu_onkey_4:
   \   0000006C   050084E0           ADD      R0,R4,R5
   \   00000070   1B0000EF           SWI      +27
   \   00000074   000050E3           CMP      R0,#+0
   \   00000078   0500000A           BEQ      ??contactlist_menu_onkey_6
   1061                {
   1062          	ClearContactT9Key();
   \   0000007C   2010A0E3           MOV      R1,#+32
   \   00000080   050084E0           ADD      R0,R4,R5
   \   00000084   1D0100EF           SWI      +285
   1063          	RecountMenu(NULL, 1);
   \   00000088   0110A0E3           MOV      R1,#+1
   \   0000008C   0000A0E3           MOV      R0,#+0
   \   00000090   ........           BL       RecountMenu
   1064                }
   1065                if(!t->isactive && HISTORY_BUFFER) GetHistory(t, 64<<HISTORY_BUFFER);
   \                     ??contactlist_menu_onkey_6:
   \   00000094   B40097E5           LDR      R0,[R7, #+180]
   \   00000098   000050E3           CMP      R0,#+0
   \   0000009C   0700001A           BNE      ??contactlist_menu_onkey_7
   \   000000A0   ........           LDR      R0,??DataTable31  ;; HISTORY_BUFFER
   \   000000A4   000090E5           LDR      R0,[R0, #+0]
   \   000000A8   000050E3           CMP      R0,#+0
   \   000000AC   0300000A           BEQ      ??contactlist_menu_onkey_7
   \   000000B0   4010A0E3           MOV      R1,#+64
   \   000000B4   1110A0E1           LSL      R1,R1,R0
   \   000000B8   0700A0E1           MOV      R0,R7
   \   000000BC   ........           _BLF     GetHistory,??GetHistory??rA
   1066                CreateEditChat(t);
   \                     ??contactlist_menu_onkey_7:
   \   000000C0   0700A0E1           MOV      R0,R7
   \   000000C4   ........           BL       CreateEditChat
   1067              }
   1068              return(-1);
   \                     ??contactlist_menu_onkey_1:
   \   000000C8   0000E0E3           MVN      R0,#+0
   \   000000CC   F08FBDE8           POP      {R4-R11,PC}
   1069            }
   1070            if (msg->keys==1)
   \                     ??contactlist_menu_onkey_2:
   \   000000D0   010050E3           CMP      R0,#+1
   \   000000D4   0900001A           BNE      ??contactlist_menu_onkey_8
   1071            {
   1072              if (strlen(ContactT9Key))
   \   000000D8   050084E0           ADD      R0,R4,R5
   \   000000DC   1B0000EF           SWI      +27
   \   000000E0   000050E3           CMP      R0,#+0
   \   000000E4   0500000A           BEQ      ??contactlist_menu_onkey_8
   1073              {
   1074                BackSpaceContactT9();
   \   000000E8   ........           BL       BackSpaceContactT9
   1075                RecountMenu(NULL, 1);
   \   000000EC   0110A0E3           MOV      R1,#+1
   \   000000F0   0000A0E3           MOV      R0,#+0
   \                     ??contactlist_menu_onkey_5:
   \   000000F4   ........           BL       RecountMenu
   1076                return(-1);
   \                     ??contactlist_menu_onkey_3:
   \   000000F8   0000E0E3           MVN      R0,#+0
   \   000000FC   F08FBDE8           POP      {R4-R11,PC}
   1077              }
   1078            }
   1079            if (msg->gbsmsg->msg==KEY_DOWN)
   \                     ??contactlist_menu_onkey_8:
   \   00000100   041096E5           LDR      R1,[R6, #+4]
   \   00000104   0060A0E3           MOV      R6,#+0
   \   00000108   040091E5           LDR      R0,[R1, #+4]
   \   0000010C   B52044E2           SUB      R2,R4,#+181
   \   00000110   020050E1           CMP      R0,R2
   \   00000114   3B00001A           BNE      ??contactlist_menu_onkey_9
   1080            {
   1081              int key=msg->gbsmsg->submess;
   \   00000118   080091E5           LDR      R0,[R1, #+8]
   1082              if (((key>='0')&&(key<='9'))||(key=='#')||(key=='*'))
   \   0000011C   300050E3           CMP      R0,#+48
   \   00000120   100000BA           BLT      ??contactlist_menu_onkey_10
   \   00000124   3A0050E3           CMP      R0,#+58
   \   00000128   110000BA           BLT      ??contactlist_menu_onkey_11
   1083              {
   1084                AddContactT9Key(key);
   1085                RecountMenu(NULL, 1);
   1086                return(-1);
   1087              }
   1088              if (key==GREEN_BUTTON)
   1089              {
   1090                if (++Is_Active_Up>2) Is_Active_Up=0;
   1091                SUBPROC((void*)WriteDefSettings);
   1092                ResortCL();
   1093                RecountMenu(NULL, 1);
   1094                return(-1);
   1095              }
   1096              if (key==RIGHT_BUTTON)
   \   0000012C   082097E5           LDR      R2,[R7, #+8]
   \   00000130   3E0050E3           CMP      R0,#+62
   \   00000134   1F00001A           BNE      ??contactlist_menu_onkey_12
   1097              {
   1098                //Послать запрос текста XStatus
   1099                if (t)
   \   00000138   000057E3           CMP      R7,#+0
   \   0000013C   3100000A           BEQ      ??contactlist_menu_onkey_9
   1100                {
   1101          	if (!t->isgroup)
   \   00000140   000052E3           CMP      R2,#+0
   \   00000144   2F00001A           BNE      ??contactlist_menu_onkey_9
   1102          	{
   1103          	  FreeXText(t);
   \   00000148   0700A0E1           MOV      R0,R7
   \   0000014C   ........           _BLF     FreeXText,??FreeXText??rA
   1104                    t->req_xtext=0;
   \   00000150   C06087E5           STR      R6,[R7, #+192]
   1105                    RequestXText(t->uin);
   \   00000154   0C0097E5           LDR      R0,[R7, #+12]
   \   00000158   ........           BL       RequestXText
   1106          	  RefreshGUI();
   \   0000015C   960100EF           SWI      +406
   1107          	  return(-1);
   \   00000160   0600E0E1           MVN      R0,R6
   \   00000164   F08FBDE8           POP      {R4-R11,PC}
   1108          	}
   1109                }
   1110              }
   \                     ??contactlist_menu_onkey_10:
   \   00000168   230050E3           CMP      R0,#+35
   \   0000016C   2A005013           CMPNE    R0,#+42
   \   00000170   0100001A           BNE      ??contactlist_menu_onkey_13
   \                     ??contactlist_menu_onkey_11:
   \   00000174   ........           BL       AddContactT9Key
   \   00000178   090000EA           B        ??contactlist_menu_onkey_14
   \                     ??contactlist_menu_onkey_13:
   \   0000017C   0B0050E3           CMP      R0,#+11
   \   00000180   2000001A           BNE      ??contactlist_menu_onkey_9
   \   00000184   C00095E5           LDR      R0,[R5, #+192]
   \   00000188   010080E2           ADD      R0,R0,#+1
   \   0000018C   C00085E5           STR      R0,[R5, #+192]
   \   00000190   030050E3           CMP      R0,#+3
   \   00000194   50019FE5           LDR      R0,??contactlist_menu_onkey_15  ;; WriteDefSettings
   \   00000198   C06085A5           STRGE    R6,[R5, #+192]
   \   0000019C   710100EF           SWI      +369
   \   000001A0   ........           _BLF     ResortCL,??ResortCL??rA
   \                     ??contactlist_menu_onkey_14:
   \   000001A4   0110A0E3           MOV      R1,#+1
   \   000001A8   0000A0E3           MOV      R0,#+0
   \   000001AC   ........           BL       RecountMenu
   \   000001B0   0600E0E1           MVN      R0,R6
   \   000001B4   F08FBDE8           POP      {R4-R11,PC}
   1111              if (key==LEFT_BUTTON)
   \                     ??contactlist_menu_onkey_12:
   \   000001B8   3D0050E3           CMP      R0,#+61
   \   000001BC   1100001A           BNE      ??contactlist_menu_onkey_9
   1112              {
   1113                if (t && Is_Show_Groups) {//есть контакт и показываем группы?
   \   000001C0   000057E3           CMP      R7,#+0
   \   000001C4   B0009515           LDRNE    R0,[R5, #+176]
   \   000001C8   00005013           CMPNE    R0,#+0
   \   000001CC   C9FFFF0A           BEQ      ??contactlist_menu_onkey_3
   1114                 if (!t->isgroup)
   \   000001D0   000052E3           CMP      R2,#+0
   \   000001D4   0300001A           BNE      ??contactlist_menu_onkey_16
   1115                  t=FindGroupByID(t->group);
   \   000001D8   100097E5           LDR      R0,[R7, #+16]
   \   000001DC   ........           _BLF     FindGroupByID,??FindGroupByID??rA
   \   000001E0   0070B0E1           MOVS     R7,R0
   1116                 if (t && !t->state) {//группа нашлась и она открыта?
   \   000001E4   C3FFFF0A           BEQ      ??contactlist_menu_onkey_3
   \                     ??contactlist_menu_onkey_16:
   \   000001E8   B409D7E1           LDRH     R0,[R7, #+148]
   \   000001EC   000050E3           CMP      R0,#+0
   \   000001F0   C0FFFF1A           BNE      ??contactlist_menu_onkey_3
   1117                  t->state^=0xFFFF;
   \   000001F4   B489C7E1           STRH     R8,[R7, #+148]
   1118                  RecountMenu(t, 1);
   \   000001F8   0110A0E3           MOV      R1,#+1
   \   000001FC   0700A0E1           MOV      R0,R7
   \   00000200   ........           BL       RecountMenu
   \   00000204   AFFFFFEA           B        ??contactlist_menu_onkey_1
   1119                 }
   1120                }
   1121                return -1;
   1122              }
   1123            }
   1124            if (msg->gbsmsg->msg==LONG_PRESS)
   \                     ??contactlist_menu_onkey_9:
   \   00000208   040091E5           LDR      R0,[R1, #+4]
   \   0000020C   B32044E2           SUB      R2,R4,#+179
   \   00000210   020050E1           CMP      R0,R2
   \   00000214   3200001A           BNE      ??contactlist_menu_onkey_17
   1125            {
   1126              if (msg->gbsmsg->submess=='#')
   \   00000218   080091E5           LDR      R0,[R1, #+8]
   \   0000021C   ........           LDR      R11,??DataTable34  ;; Canvas
   \   00000220   0970A0E3           MOV      R7,#+9
   \   00000224   427C87E3           ORR      R7,R7,#0x4200
   \   00000228   B080A0E3           MOV      R8,#+176
   \   0000022C   DE8C88E3           ORR      R8,R8,#0xDE00
   \   00000230   569FA0E3           MOV      R9,#+344
   \   00000234   5EAFA0E3           MOV      R10,#+376
   \   00000238   230050E3           CMP      R0,#+35
   \   0000023C   1400001A           BNE      ??contactlist_menu_onkey_18
   1127              {
   1128                ClearContactT9Key();
   \   00000240   2010A0E3           MOV      R1,#+32
   \   00000244   050084E0           ADD      R0,R4,R5
   \   00000248   1D0100EF           SWI      +285
   1129                RecountMenu(NULL, 1);
   \   0000024C   0110A0E3           MOV      R1,#+1
   \   00000250   0000A0E3           MOV      R0,#+0
   \   00000254   ........           BL       RecountMenu
   1130                gipc.name_to=ipc_xtask_name;
   \   00000258   0B008AE0           ADD      R0,R10,R11
   \   0000025C   740085E5           STR      R0,[R5, #+116]
   1131                gipc.name_from=ipc_my_name;
   \   00000260   0B0089E0           ADD      R0,R9,R11
   \   00000264   780085E5           STR      R0,[R5, #+120]
   1132                gipc.data=0;
   \   00000268   7C6085E5           STR      R6,[R5, #+124]
   1133                GBS_SendMessage(MMI_CEPID,MSG_IPC,IPC_XTASK_IDLE,&gipc);
   \   0000026C   743085E2           ADD      R3,R5,#+116
   \   00000270   0120A0E3           MOV      R2,#+1
   \   00000274   0810A0E1           MOV      R1,R8
   \   00000278   0700A0E1           MOV      R0,R7
   \   0000027C   000100EF           SWI      +256
   1134                if (IsUnlocked())
   \   00000280   430000EF           SWI      +67
   \   00000284   000050E3           CMP      R0,#+0
   \   00000288   9AFFFF0A           BEQ      ??contactlist_menu_onkey_3
   1135                {
   1136                  KbdLock();
   \   0000028C   A90000EF           SWI      +169
   \   00000290   8CFFFFEA           B        ??contactlist_menu_onkey_1
   1137                }
   1138                return(-1);
   1139              }
   1140              if (msg->gbsmsg->submess=='*'){
   \                     ??contactlist_menu_onkey_18:
   \   00000294   2A0050E3           CMP      R0,#+42
   \   00000298   1100001A           BNE      ??contactlist_menu_onkey_17
   1141                ClearContactT9Key();
   \   0000029C   2010A0E3           MOV      R1,#+32
   \   000002A0   050084E0           ADD      R0,R4,R5
   \   000002A4   1D0100EF           SWI      +285
   1142                RecountMenu(NULL, 1);
   \   000002A8   0110A0E3           MOV      R1,#+1
   \   000002AC   0000A0E3           MOV      R0,#+0
   \   000002B0   ........           BL       RecountMenu
   1143                silenthide=1;
   \   000002B4   0100A0E3           MOV      R0,#+1
   \   000002B8   9C0085E5           STR      R0,[R5, #+156]
   1144                gipc.name_to=ipc_xtask_name;
   \   000002BC   0B008AE0           ADD      R0,R10,R11
   \   000002C0   740085E5           STR      R0,[R5, #+116]
   1145                gipc.name_from=ipc_my_name;
   \   000002C4   0B0089E0           ADD      R0,R9,R11
   \   000002C8   780085E5           STR      R0,[R5, #+120]
   1146                gipc.data=0;
   \   000002CC   7C6085E5           STR      R6,[R5, #+124]
   1147                GBS_SendMessage(MMI_CEPID,MSG_IPC,IPC_XTASK_IDLE,&gipc);
   \   000002D0   743085E2           ADD      R3,R5,#+116
   \   000002D4   0120A0E3           MOV      R2,#+1
   \   000002D8   0810A0E1           MOV      R1,R8
   \   000002DC   0700A0E1           MOV      R0,R7
   \   000002E0   000100EF           SWI      +256
   1148              }
   1149            }
   1150            return(0);
   \                     ??contactlist_menu_onkey_17:
   \   000002E4   0000A0E3           MOV      R0,#+0
   \   000002E8   F08FBDE8           POP      {R4-R11,PC}      ;; return
   \                     ??contactlist_menu_onkey_15:
   \   000002EC   ........           DC32     WriteDefSettings
   1151          }
   1152          

   \                                 In segment CODE, align 4, keep-with-next
   1153          void GetOnTotalContact(int group_id,int *_onlinetotal)
   1154          {
   1155            CLIST *t;
   1156            t=(CLIST *)&cltop;
   \                     GetOnTotalContact:
   \   00000000   ........           LDR      R2,??DataTable33  ;; S_ICONS + 232
   \   00000004   30002DE9           PUSH     {R4,R5}
   1157            int online=0,total=0;
   \   00000008   0030A0E3           MOV      R3,#+0
   \   0000000C   00C0A0E3           MOV      R12,#+0
   \   00000010   FF50A0E3           MOV      R5,#+255
   \   00000014   FF5C85E3           ORR      R5,R5,#0xFF00
   \   00000018   080000EA           B        ??GetOnTotalContact_0
   1158            while((t=t->next))
   1159            {
   1160              if(t->group==group_id && !t->isgroup)
   \                     ??GetOnTotalContact_1:
   \   0000001C   104092E5           LDR      R4,[R2, #+16]
   \   00000020   000054E1           CMP      R4,R0
   \   00000024   08409205           LDREQ    R4,[R2, #+8]
   \   00000028   00005403           CMPEQ    R4,#+0
   \   0000002C   0300001A           BNE      ??GetOnTotalContact_0
   1161              {
   1162                total++;
   1163                if (t->state!=0xFFFF) online++;
   \   00000030   B449D2E1           LDRH     R4,[R2, #+148]
   \   00000034   01C08CE2           ADD      R12,R12,#+1
   \   00000038   050054E1           CMP      R4,R5
   \   0000003C   01308312           ADDNE    R3,R3,#+1
   1164              }
   1165            }
   \                     ??GetOnTotalContact_0:
   \   00000040   002092E5           LDR      R2,[R2, #+0]
   \   00000044   000052E3           CMP      R2,#+0
   \   00000048   F3FFFF1A           BNE      ??GetOnTotalContact_1
   1166            _onlinetotal[0]=online;
   \   0000004C   003081E5           STR      R3,[R1, #+0]
   1167            _onlinetotal[1]=total;
   \   00000050   04C081E5           STR      R12,[R1, #+4]
   1168          }
   \   00000054   3000BDE8           POP      {R4,R5}
   \   00000058   1EFF2FE1           BX       LR               ;; return
   1169          
   1170          

   \                                 In segment CODE, align 4, keep-with-next
   1171          void contactlist_menu_iconhndl(void *data, int curitem, void *unk)
   1172          {
   \                     contactlist_menu_iconhndl:
   \   00000000   F24F2DE9           PUSH     {R1,R4-R11,LR}
   \   00000004   9CDF4DE2           SUB      SP,SP,#+624
   \   00000008   0040A0E1           MOV      R4,R0
   1173            CLIST *t;
   1174          #ifdef USE_MLMENU
   1175            void *item=AllocMLMenuItem(data);
   \   0000000C   190200EF           SWI      +537
   \   00000010   0050A0E1           MOV      R5,R0
   1176          #else
   1177            void *item=AllocMenuItem(data);
   1178          #endif
   1179            int icon;
   1180          
   1181            WSHDR *ws2;
   1182          #ifdef USE_MLMENU
   1183            WSHDR *ws4;
   1184          #endif
   1185            WSHDR ws1loc, *ws1;
   1186            unsigned short num[128];
   1187            ws1=CreateLocalWS(&ws1loc,num,128);
   \   00000014   8020A0E3           MOV      R2,#+128
   \   00000018   08108DE2           ADD      R1,SP,#+8
   \   0000001C   920F8DE2           ADD      R0,SP,#+584
   \   00000020   270100EF           SWI      +295
   \   00000024   0060A0E1           MOV      R6,R0
   1188          #ifdef USE_MLMENU
   1189            WSHDR ws3loc, *ws3;
   1190            unsigned short num3[128];
   1191            ws3=CreateLocalWS(&ws3loc,num3,128);
   \   00000028   8020A0E3           MOV      R2,#+128
   \   0000002C   421F8DE2           ADD      R1,SP,#+264
   \   00000030   970F8DE2           ADD      R0,SP,#+604
   \   00000034   270100EF           SWI      +295
   \   00000038   0070A0E1           MOV      R7,R0
   1192            char s[64];
   1193          #endif
   1194            t=FindContactByN(curitem);
   \   0000003C   70029DE5           LDR      R0,[SP, #+624]
   \   00000040   ........           _BLF     FindContactByN,??FindContactByN??rA
   \   00000044   0080B0E1           MOVS     R8,R0
   1195            if (t)
   \   00000048   8D00000A           BEQ      ??contactlist_menu_iconhndl_0
   1196            {
   1197              icon=GetIconIndex(t);
   1198              if (icon!=IS_GROUP)
   \   0000004C   ........           LDR      R10,??DataTable34  ;; Canvas
   \   00000050   ........           BL       GetIconIndex
   \   00000054   0090A0E1           MOV      R9,R0
   \   00000058   0F0059E3           CMP      R9,#+15
   \   0000005C   7700000A           BEQ      ??contactlist_menu_iconhndl_1
   1199              {
   1200                if (t->unreaded!=0 && cl_unreaded_cnt == 1)
   \   00000060   C80098E5           LDR      R0,[R8, #+200]
   \   00000064   000050E3           CMP      R0,#+0
   \   00000068   0700000A           BEQ      ??contactlist_menu_iconhndl_2
   \   0000006C   90029FE5           LDR      R0,??contactlist_menu_iconhndl_3  ;; cl_unreaded_cnt
   \   00000070   000090E5           LDR      R0,[R0, #+0]
   \   00000074   010050E3           CMP      R0,#+1
   \   00000078   0300001A           BNE      ??contactlist_menu_iconhndl_2
   1201                  wsprintf(ws1,"[%d] ",t->unreaded);		//Twitch
   \   0000007C   C82098E5           LDR      R2,[R8, #+200]
   \   00000080   541F8AE2           ADD      R1,R10,#+336
   \   00000084   0600A0E1           MOV      R0,R6
   \   00000088   240100EF           SWI      +292
   1202          	  wsprintf(ws1,"%w%t",ws1,t->name);
   \                     ??contactlist_menu_iconhndl_2:
   \   0000008C   143088E2           ADD      R3,R8,#+20
   \   00000090   0620A0E1           MOV      R2,R6
   \   00000094   521F8AE2           ADD      R1,R10,#+328
   \   00000098   0600A0E1           MOV      R0,R6
   \   0000009C   240100EF           SWI      +292
   1203                if (t->isactive)
   \   000000A0   B40098E5           LDR      R0,[R8, #+180]
   \   000000A4   000050E3           CMP      R0,#+0
   \   000000A8   0800000A           BEQ      ??contactlist_menu_iconhndl_4
   1204                {
   1205                  wsInsertChar(ws1,0x0002,1);
   \   000000AC   0120A0E3           MOV      R2,#+1
   \   000000B0   0210A0E3           MOV      R1,#+2
   \   000000B4   0600A0E1           MOV      R0,R6
   \   000000B8   1D0000EF           SWI      +29
   1206                  wsInsertChar(ws1,0xE008,1);
   \   000000BC   0120A0E3           MOV      R2,#+1
   \   000000C0   0810A0E3           MOV      R1,#+8
   \   000000C4   E01C81E3           ORR      R1,R1,#0xE000
   \   000000C8   0600A0E1           MOV      R0,R6
   \   000000CC   1D0000EF           SWI      +29
   \                     ??contactlist_menu_iconhndl_4:
   \   000000D0   B409D8E1           LDRH     R0,[R8, #+148]
   \   000000D4   FF10A0E3           MOV      R1,#+255
   \   000000D8   FF1C81E3           ORR      R1,R1,#0xFF00
   \   000000DC   010050E1           CMP      R0,R1
   \   000000E0   800E1013           TSTNE    R0,#0x800
   \   000000E4   0700000A           BEQ      ??contactlist_menu_iconhndl_5
   1207                }
   1208          #ifdef USE_MLMENU
   1209                if ((t->state!=0xffff)&&(t->state&0x800)){
   1210                  wsInsertChar(ws1,FIRST_UCS2_BITMAP+total_xstatuses,1);
   \   000000E8   18029FE5           LDR      R0,??contactlist_menu_iconhndl_3+0x4  ;; total_xstatuses
   \   000000EC   0120A0E3           MOV      R2,#+1
   \   000000F0   000090E5           LDR      R0,[R0, #+0]
   \   000000F4   2A10A0E3           MOV      R1,#+42
   \   000000F8   E11C81E3           ORR      R1,R1,#0xE100
   \   000000FC   001081E0           ADD      R1,R1,R0
   \   00000100   0600A0E1           MOV      R0,R6
   \   00000104   1D0000EF           SWI      +29
   1211                }
   1212                if (t->clientid && t->clientid<=total_clientid)
   \                     ??contactlist_menu_iconhndl_5:
   \   00000108   9A00D8E5           LDRB     R0,[R8, #+154]
   \   0000010C   000050E3           CMP      R0,#+0
   \   00000110   1600000A           BEQ      ??contactlist_menu_iconhndl_6
   \   00000114   F0019FE5           LDR      R0,??contactlist_menu_iconhndl_3+0x8  ;; total_clientid
   \   00000118   9A10D8E5           LDRB     R1,[R8, #+154]
   \   0000011C   000090E5           LDR      R0,[R0, #+0]
   \   00000120   010050E1           CMP      R0,R1
   \   00000124   110000BA           BLT      ??contactlist_menu_iconhndl_6
   1213                {
   1214                  int a=wstrlen(ws1)+1;
   \   00000128   0600A0E1           MOV      R0,R6
   \   0000012C   230100EF           SWI      +291
   \   00000130   01B080E2           ADD      R11,R0,#+1
   1215                  wsInsertChar(ws1,FIRST_UCS2_BITMAP+total_xstatuses+t->clientid,a);
   \   00000134   CC019FE5           LDR      R0,??contactlist_menu_iconhndl_3+0x4  ;; total_xstatuses
   \   00000138   0B20A0E1           MOV      R2,R11
   \   0000013C   000090E5           LDR      R0,[R0, #+0]
   \   00000140   9A10D8E5           LDRB     R1,[R8, #+154]
   \   00000144   000081E0           ADD      R0,R1,R0
   \   00000148   2A10A0E3           MOV      R1,#+42
   \   0000014C   E11C81E3           ORR      R1,R1,#0xE100
   \   00000150   001081E0           ADD      R1,R1,R0
   \   00000154   0600A0E1           MOV      R0,R6
   \   00000158   1D0000EF           SWI      +29
   1216                  wsInsertChar(ws1,UTF16_ALIGN_RIGHT,a);
   \   0000015C   0B20A0E1           MOV      R2,R11
   \   00000160   1D10A0E3           MOV      R1,#+29
   \   00000164   E01C81E3           ORR      R1,R1,#0xE000
   \   00000168   0600A0E1           MOV      R0,R6
   \   0000016C   1D0000EF           SWI      +29
   1217                }
   1218                if (t->xtext && t->xtext[0]!=0)
   \                     ??contactlist_menu_iconhndl_6:
   \   00000170   BC0098E5           LDR      R0,[R8, #+188]
   \   00000174   000050E3           CMP      R0,#+0
   \   00000178   0000D015           LDRBNE   R0,[R0, #+0]
   \   0000017C   00005013           CMPNE    R0,#+0
   \   00000180   1000000A           BEQ      ??contactlist_menu_iconhndl_7
   1219                {
   1220          	int i;
   1221          	zeromem(s,64);
   \   00000184   4010A0E3           MOV      R1,#+64
   \   00000188   820F8DE2           ADD      R0,SP,#+520
   \   0000018C   1D0100EF           SWI      +285
   1222          	i=t->xtext[0];
   \   00000190   BC0098E5           LDR      R0,[R8, #+188]
   \   00000194   0020D0E5           LDRB     R2,[R0, #+0]
   1223          	if (i>63) i=63;
   1224          	strncpy(s,t->xtext+1,i);
   \   00000198   011080E2           ADD      R1,R0,#+1
   \   0000019C   820F8DE2           ADD      R0,SP,#+520
   \   000001A0   400052E3           CMP      R2,#+64
   \   000001A4   3F20A0A3           MOVGE    R2,#+63
   \   000001A8   160100EF           SWI      +278
   1225          	wsprintf(ws3,"%c%t",0xE012,s);
   \   000001AC   823F8DE2           ADD      R3,SP,#+520
   \   000001B0   1220A0E3           MOV      R2,#+18
   \   000001B4   E02C82E3           ORR      R2,R2,#0xE000
   \   000001B8   20108AE2           ADD      R1,R10,#+32
   \   000001BC   0700A0E1           MOV      R0,R7
   \   000001C0   240100EF           SWI      +292
   \   000001C4   030000EA           B        ??contactlist_menu_iconhndl_8
   1226                }
   1227                else
   1228          	wsprintf(ws3,percent_d,t->uin);
   \                     ??contactlist_menu_iconhndl_7:
   \   000001C8   0C2098E5           LDR      R2,[R8, #+12]
   \   000001CC   0B108AE2           ADD      R1,R10,#+11
   \   000001D0   0700A0E1           MOV      R0,R7
   \   000001D4   240100EF           SWI      +292
   1229                if (t->xstate[0]){
   \                     ??contactlist_menu_iconhndl_8:
   \   000001D8   9600D8E5           LDRB     R0,[R8, #+150]
   \   000001DC   000050E3           CMP      R0,#+0
   \   000001E0   2B00000A           BEQ      ??contactlist_menu_iconhndl_9
   1230          	int a=0;
   \   000001E4   00A0A0E3           MOV      R10,#+0
   1231                  while(a<4){
   1232                    if (t->xstate[a] && (t->xstate[a]<total_xstatuses)){
   \                     ??contactlist_menu_iconhndl_10:
   \   000001E8   08008AE0           ADD      R0,R10,R8
   \   000001EC   9600D0E5           LDRB     R0,[R0, #+150]
   \   000001F0   000050E3           CMP      R0,#+0
   \   000001F4   2600000A           BEQ      ??contactlist_menu_iconhndl_9
   \   000001F8   08119FE5           LDR      R1,??contactlist_menu_iconhndl_3+0x4  ;; total_xstatuses
   \   000001FC   08008AE0           ADD      R0,R10,R8
   \   00000200   9600D0E5           LDRB     R0,[R0, #+150]
   \   00000204   001091E5           LDR      R1,[R1, #+0]
   \   00000208   010050E1           CMP      R0,R1
   \   0000020C   200000AA           BGE      ??contactlist_menu_iconhndl_9
   1233                      wsInsertChar(ws3,FIRST_UCS2_BITMAP+t->xstate[a],1);
   \   00000210   08008AE0           ADD      R0,R10,R8
   \   00000214   9600D0E5           LDRB     R0,[R0, #+150]
   \   00000218   0120A0E3           MOV      R2,#+1
   \   0000021C   2A10A0E3           MOV      R1,#+42
   \   00000220   E11C81E3           ORR      R1,R1,#0xE100
   \   00000224   001081E0           ADD      R1,R1,R0
   \   00000228   0700A0E1           MOV      R0,R7
   \   0000022C   1D0000EF           SWI      +29
   1234                    }else{
   1235                      break;
   1236                    }
   1237                    a++;
   \   00000230   01A08AE2           ADD      R10,R10,#+1
   1238                  }
   \   00000234   04005AE3           CMP      R10,#+4
   \   00000238   150000AA           BGE      ??contactlist_menu_iconhndl_9
   \   0000023C   E9FFFFEA           B        ??contactlist_menu_iconhndl_10
   1239                }
   1240          #endif
   1241              }
   1242              else
   1243              {
   1244                int onlinetotal[2];
   1245                GetOnTotalContact(t->group,onlinetotal);
   \                     ??contactlist_menu_iconhndl_1:
   \   00000240   100098E5           LDR      R0,[R8, #+16]
   \   00000244   0D10A0E1           MOV      R1,SP
   \   00000248   ........           BL       GetOnTotalContact
   1246          #ifdef USE_MLMENU
   1247                wsprintf(ws1,percent_t,t->name);
   \   0000024C   142088E2           ADD      R2,R8,#+20
   \   00000250   08108AE2           ADD      R1,R10,#+8
   \   00000254   0600A0E1           MOV      R0,R6
   \   00000258   240100EF           SWI      +292
   1248                wsprintf(ws3,"(%d/%d)",onlinetotal[0],onlinetotal[1]);
   \   0000025C   04309DE5           LDR      R3,[SP, #+4]
   \   00000260   00209DE5           LDR      R2,[SP, #+0]
   \   00000264   501F8AE2           ADD      R1,R10,#+320
   \   00000268   0700A0E1           MOV      R0,R7
   \   0000026C   240100EF           SWI      +292
   1249          #else
   1250                wsprintf(ws1,"%t%c%c(%d/%d)",t->name,0xE01D,0xE012,onlinetotal[0],onlinetotal[1]);
   1251          #endif
   1252                if (t->state) icon++; //Модификация иконки группы
   \   00000270   B409D8E1           LDRH     R0,[R8, #+148]
   \   00000274   000050E3           CMP      R0,#+0
   \   00000278   0500000A           BEQ      ??contactlist_menu_iconhndl_9
   \   0000027C   019089E2           ADD      R9,R9,#+1
   \   00000280   030000EA           B        ??contactlist_menu_iconhndl_9
   1253              }
   1254            }
   1255            else
   1256            {
   1257              wsprintf(ws1, lgpData[LGP_ClError]);
   \                     ??contactlist_menu_iconhndl_0:
   \   00000284   84009FE5           LDR      R0,??contactlist_menu_iconhndl_3+0xC  ;; lgpData + 12
   \   00000288   001090E5           LDR      R1,[R0, #+0]
   \   0000028C   0600A0E1           MOV      R0,R6
   \   00000290   240100EF           SWI      +292
   1258            }
   1259            ws2=AllocMenuWS(data,ws1->wsbody[0]);
   \                     ??contactlist_menu_iconhndl_9:
   \   00000294   000096E5           LDR      R0,[R6, #+0]
   \   00000298   B010D0E1           LDRH     R1,[R0, #+0]
   \   0000029C   0400A0E1           MOV      R0,R4
   \   000002A0   980100EF           SWI      +408
   \   000002A4   0080A0E1           MOV      R8,R0
   1260            wstrcpy(ws2,ws1);
   \   000002A8   0610A0E1           MOV      R1,R6
   \   000002AC   1F0100EF           SWI      +287
   1261          
   1262            SetMenuItemIconArray(data, item, S_ICONS+icon);
   \   000002B0   ........           LDR      R0,??DataTable35  ;; S_ICONS
   \   000002B4   0510A0E1           MOV      R1,R5
   \   000002B8   092180E0           ADD      R2,R0,R9, LSL #+2
   \   000002BC   0400A0E1           MOV      R0,R4
   \   000002C0   990100EF           SWI      +409
   1263          #ifdef USE_MLMENU
   1264            ws4=AllocMenuWS(data,ws3->wsbody[0]);
   \   000002C4   000097E5           LDR      R0,[R7, #+0]
   \   000002C8   B010D0E1           LDRH     R1,[R0, #+0]
   \   000002CC   0400A0E1           MOV      R0,R4
   \   000002D0   980100EF           SWI      +408
   \   000002D4   0060A0E1           MOV      R6,R0
   1265            wstrcpy(ws4,ws3);
   \   000002D8   0710A0E1           MOV      R1,R7
   \   000002DC   1F0100EF           SWI      +287
   1266            SetMLMenuItemText(data, item, ws2, ws4, curitem);
   \   000002E0   70029DE5           LDR      R0,[SP, #+624]
   \   000002E4   0630A0E1           MOV      R3,R6
   \   000002E8   01002DE9           PUSH     {R0}
   \   000002EC   0820A0E1           MOV      R2,R8
   \   000002F0   0510A0E1           MOV      R1,R5
   \   000002F4   0400A0E1           MOV      R0,R4
   \   000002F8   180200EF           SWI      +536
   1267          #else
   1268            SetMenuItemText(data, item, ws2, curitem);
   1269          #endif
   1270          }
   \   000002FC   9EDF8DE2           ADD      SP,SP,#+632
   \   00000300   F08FBDE8           POP      {R4-R11,PC}      ;; return
   \                     ??contactlist_menu_iconhndl_3:
   \   00000304   ........           DC32     cl_unreaded_cnt
   \   00000308   ........           DC32     total_xstatuses
   \   0000030C   ........           DC32     total_clientid
   \   00000310   ........           DC32     lgpData + 12
   1271          
   1272          //===============================================================================================
   1273          int DNR_ID=0;
   1274          int DNR_TRIES=3;
   1275          
   1276          extern const char NATICQ_HOST[];
   1277          extern const unsigned int NATICQ_PORT;
   1278          extern const unsigned int RECONNECT_TIME;
   1279          char hostname[128];
   1280          int host_counter=-1;
   1281          
   1282          //---------------------------------------------------------------------------

   \                                 In segment CODE, align 4, keep-with-next
   1283          const char *GetHost(int cnt, const char *str, char *buf)
   1284          {
   1285            const char *tmp = str, *begin, *end;
   \                     GetHost:
   \   00000000   0130A0E1           MOV      R3,R1
   1286            if(cnt)
   \   00000004   000050E3           CMP      R0,#+0
   \   00000008   0100001A           BNE      ??GetHost_0
   \   0000000C   180000EA           B        ??GetHost_1
   1287            {
   1288              for(;cnt;cnt--)
   1289              {
   1290                for(;*str!=';' && *str!=' ' && *str!='\x0D' && *str!='\x0A' && *str; str++);
   \                     ??GetHost_2:
   \   00000010   011081E2           ADD      R1,R1,#+1
   \                     ??GetHost_0:
   \   00000014   00C0D1E5           LDRB     R12,[R1, #+0]
   \   00000018   3B005CE3           CMP      R12,#+59
   \   0000001C   20005C13           CMPNE    R12,#+32
   \   00000020   0D005C13           CMPNE    R12,#+13
   \   00000024   0A005C13           CMPNE    R12,#+10
   \   00000028   00005C13           CMPNE    R12,#+0
   \   0000002C   F7FFFF1A           BNE      ??GetHost_2
   1291                if(!*str) str = tmp;
   \   00000030   00005CE3           CMP      R12,#+0
   \   00000034   0200001A           BNE      ??GetHost_3
   \   00000038   0310A0E1           MOV      R1,R3
   \   0000003C   000000EA           B        ??GetHost_3
   1292                for(;(*str==';' || *str==' ' || *str=='\x0D' || *str=='\x0A') && *str; str++);
   \                     ??GetHost_4:
   \   00000040   011081E2           ADD      R1,R1,#+1
   \                     ??GetHost_3:
   \   00000044   00C0D1E5           LDRB     R12,[R1, #+0]
   \   00000048   3B005CE3           CMP      R12,#+59
   \   0000004C   20005C13           CMPNE    R12,#+32
   \   00000050   0D005C13           CMPNE    R12,#+13
   \   00000054   0A005C13           CMPNE    R12,#+10
   \   00000058   0100001A           BNE      ??GetHost_5
   \   0000005C   00005CE3           CMP      R12,#+0
   \   00000060   F6FFFF1A           BNE      ??GetHost_4
   1293                if(!*str) str = tmp;
   \                     ??GetHost_5:
   \   00000064   00005CE3           CMP      R12,#+0
   \   00000068   0310A001           MOVEQ    R1,R3
   1294              }
   \   0000006C   010050E2           SUBS     R0,R0,#+1
   \   00000070   E7FFFF1A           BNE      ??GetHost_0
   1295            }
   1296            tmp = buf;
   \                     ??GetHost_1:
   \   00000074   0200A0E1           MOV      R0,R2
   1297            begin = str;
   \   00000078   0130A0E1           MOV      R3,R1
   \   0000007C   000000EA           B        ??GetHost_6
   1298            for(;*str!=';' && *str!=':' && *str!=' ' && *str!='\x0D' && *str!='\x0A' && *str; str++);
   \                     ??GetHost_7:
   \   00000080   011081E2           ADD      R1,R1,#+1
   \                     ??GetHost_6:
   \   00000084   00C0D1E5           LDRB     R12,[R1, #+0]
   \   00000088   3B005CE3           CMP      R12,#+59
   \   0000008C   3A005C13           CMPNE    R12,#+58
   \   00000090   20005C13           CMPNE    R12,#+32
   \   00000094   0D005C13           CMPNE    R12,#+13
   \   00000098   0A005C13           CMPNE    R12,#+10
   \   0000009C   00005C13           CMPNE    R12,#+0
   \   000000A0   F6FFFF1A           BNE      ??GetHost_7
   1299            end = str;
   1300            for(;begin<end; *buf = *begin, begin++, buf++);
   \                     ??GetHost_8:
   \   000000A4   010053E1           CMP      R3,R1
   \   000000A8   ........           LDRBCC   R12,[R3], #+1
   \   000000AC   ........           STRBCC   R12,[R2], #+1
   \   000000B0   FBFFFF3A           BCC      ??GetHost_8
   1301            *buf = 0;
   \   000000B4   0010A0E3           MOV      R1,#+0
   \   000000B8   0010C2E5           STRB     R1,[R2, #+0]
   1302            return tmp;
   \   000000BC   1EFF2FE1           BX       LR               ;; return
   1303          }
   1304          //---------------------------------------------------------------------------

   \                                 In segment CODE, align 4, keep-with-next
   1305          int atoi(char *attr)
   1306          {
   \                     atoi:
   \   00000000   10002DE9           PUSH     {R4}
   1307            int ret=0;
   \   00000004   0010A0E3           MOV      R1,#+0
   1308            int neg=1;
   \   00000008   0120A0E3           MOV      R2,#+1
   1309            for (int k=0; ; k++)
   \   0000000C   0030A0E3           MOV      R3,#+0
   \   00000010   060000EA           B        ??atoi_0
   1310            {
   1311              if ( attr[k]>0x2F && attr[k]<0x3A) {ret=ret*10+attr[k]-0x30;} else { if ( attr[k]=='-') {neg=-1;} else {return(ret*neg);}}
   \                     ??atoi_1:
   \   00000014   04C0A0E1           MOV      R12,R4
   \   00000018   3A005CE3           CMP      R12,#+58
   \   0000001C   0600002A           BCS      ??atoi_2
   \   00000020   0A40A0E3           MOV      R4,#+10
   \   00000024   94C121E0           MLA      R1,R4,R1,R12
   \   00000028   301041E2           SUB      R1,R1,#+48
   \                     ??atoi_3:
   \   0000002C   013083E2           ADD      R3,R3,#+1
   \                     ??atoi_0:
   \   00000030   0040D3E7           LDRB     R4,[R3, +R0]
   \   00000034   300054E3           CMP      R4,#+48
   \   00000038   F5FFFF2A           BCS      ??atoi_1
   \                     ??atoi_2:
   \   0000003C   2D0054E3           CMP      R4,#+45
   \   00000040   0020E003           MVNEQ    R2,#+0
   \   00000044   F8FFFF0A           BEQ      ??atoi_3
   \   00000048   1000BDE8           POP      {R4}
   \   0000004C   920100E0           MUL      R0,R2,R1
   \   00000050   1EFF2FE1           BX       LR               ;; return
   1312            }
   1313          }
   1314          //---------------------------------------------------------------------------

   \                                 In segment CODE, align 4, keep-with-next
   1315          int GetPort(int cnt, const char *str)
   1316          {
   \                     GetPort:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   08D04DE2           SUB      SP,SP,#+8
   1317            const char *tmp = str;
   \   00000008   01C0A0E1           MOV      R12,R1
   1318            char numbuf[6], numcnt = 0;
   \   0000000C   0020A0E3           MOV      R2,#+0
   \   00000010   0030A0E3           MOV      R3,#+0
   1319            if(cnt)
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   0100001A           BNE      ??GetPort_0
   \   0000001C   180000EA           B        ??GetPort_1
   1320            {
   1321              for(;cnt;cnt--)
   1322              {
   1323                for(;*str!=';' && *str!=' ' && *str!='\x0D' && *str!='\x0A' && *str; str++);
   \                     ??GetPort_2:
   \   00000020   011081E2           ADD      R1,R1,#+1
   \                     ??GetPort_0:
   \   00000024   0040D1E5           LDRB     R4,[R1, #+0]
   \   00000028   3B0054E3           CMP      R4,#+59
   \   0000002C   20005413           CMPNE    R4,#+32
   \   00000030   0D005413           CMPNE    R4,#+13
   \   00000034   0A005413           CMPNE    R4,#+10
   \   00000038   00005413           CMPNE    R4,#+0
   \   0000003C   F7FFFF1A           BNE      ??GetPort_2
   1324                if(!*str) str = tmp;
   \   00000040   000054E3           CMP      R4,#+0
   \   00000044   0200001A           BNE      ??GetPort_3
   \   00000048   0C10A0E1           MOV      R1,R12
   \   0000004C   000000EA           B        ??GetPort_3
   1325                for(;(*str==';' || *str==' ' || *str=='\x0D' || *str=='\x0A') && *str; str++);
   \                     ??GetPort_4:
   \   00000050   011081E2           ADD      R1,R1,#+1
   \                     ??GetPort_3:
   \   00000054   0040D1E5           LDRB     R4,[R1, #+0]
   \   00000058   3B0054E3           CMP      R4,#+59
   \   0000005C   20005413           CMPNE    R4,#+32
   \   00000060   0D005413           CMPNE    R4,#+13
   \   00000064   0A005413           CMPNE    R4,#+10
   \   00000068   0100001A           BNE      ??GetPort_5
   \   0000006C   000054E3           CMP      R4,#+0
   \   00000070   F6FFFF1A           BNE      ??GetPort_4
   1326                if(!*str) str = tmp;
   \                     ??GetPort_5:
   \   00000074   000054E3           CMP      R4,#+0
   \   00000078   0C10A001           MOVEQ    R1,R12
   1327              }
   \   0000007C   010050E2           SUBS     R0,R0,#+1
   \   00000080   E7FFFF1A           BNE      ??GetPort_0
   1328            }
   1329            for(;*str!=';' && *str!=':' && *str!=' ' && *str!='\x0D' && *str!='\x0A' && *str; str++);
   \                     ??GetPort_1:
   \   00000084   0000D1E5           LDRB     R0,[R1, #+0]
   \   00000088   3B0050E3           CMP      R0,#+59
   \   0000008C   3A005013           CMPNE    R0,#+58
   \   00000090   20005013           CMPNE    R0,#+32
   \   00000094   0D005013           CMPNE    R0,#+13
   \   00000098   0A005013           CMPNE    R0,#+10
   \   0000009C   00005013           CMPNE    R0,#+0
   \   000000A0   01108112           ADDNE    R1,R1,#+1
   \   000000A4   F6FFFF1A           BNE      ??GetPort_1
   1330            if(*str!=':') return NATICQ_PORT;
   \   000000A8   ........           LDRB     R0,[R1], #+1
   \   000000AC   3A0050E3           CMP      R0,#+58
   \   000000B0   58009F15           LDRNE    R0,??GetPort_6   ;; NATICQ_PORT
   \   000000B4   00009015           LDRNE    R0,[R0, #+0]
   \   000000B8   1680BD18           POPNE    {R1,R2,R4,PC}
   1331            str++;
   1332            numbuf[5] = 0;
   \   000000BC   0520CDE5           STRB     R2,[SP, #+5]
   \   000000C0   030000EA           B        ??GetPort_7
   1333            for(;*str!=';' && *str!=' ' && *str!='\x0D' && *str!='\x0A' && *str && numcnt<5; numbuf[numcnt] = *str, str++, numcnt++);
   \                     ??GetPort_8:
   \   000000C4   ........           LDRB     R4,[R1], #+1
   \   000000C8   013083E2           ADD      R3,R3,#+1
   \   000000CC   FF3003E2           AND      R3,R3,#0xFF
   \   000000D0   0040C0E5           STRB     R4,[R0, #+0]
   \                     ??GetPort_7:
   \   000000D4   0D40A0E1           MOV      R4,SP
   \   000000D8   040083E0           ADD      R0,R3,R4
   \   000000DC   0040D1E5           LDRB     R4,[R1, #+0]
   \   000000E0   3B0054E3           CMP      R4,#+59
   \   000000E4   20005413           CMPNE    R4,#+32
   \   000000E8   0D005413           CMPNE    R4,#+13
   \   000000EC   0A005413           CMPNE    R4,#+10
   \   000000F0   00005413           CMPNE    R4,#+0
   \   000000F4   0100000A           BEQ      ??GetPort_9
   \   000000F8   050053E3           CMP      R3,#+5
   \   000000FC   F0FFFF3A           BCC      ??GetPort_8
   1334            numbuf[numcnt] = 0;
   \                     ??GetPort_9:
   \   00000100   0020C0E5           STRB     R2,[R0, #+0]
   1335            return atoi(numbuf);
   \   00000104   0D00A0E1           MOV      R0,SP
   \   00000108   ........           BL       atoi
   \   0000010C   1680BDE8           POP      {R1,R2,R4,PC}    ;; return
   \                     ??GetPort_6:
   \   00000110   ........           DC32     NATICQ_PORT
   1336          
   1337          }
   1338          //---------------------------------------------------------------------------

   \                                 In segment CODE, align 4, keep-with-next
   1339          int GetHostsCount(const char *str)
   1340          {
   1341            char cnt = 1;
   \                     GetHostsCount:
   \   00000000   0110A0E3           MOV      R1,#+1
   \   00000004   000000EA           B        ??GetHostsCount_0
   1342            for(;cnt;cnt++)
   1343            {
   1344              for(;*str!=';' && *str!=' ' && *str!='\x0D' && *str!='\x0A' && *str; str++);
   \                     ??GetHostsCount_1:
   \   00000008   010080E2           ADD      R0,R0,#+1
   \                     ??GetHostsCount_0:
   \   0000000C   0020D0E5           LDRB     R2,[R0, #+0]
   \   00000010   3B0052E3           CMP      R2,#+59
   \   00000014   20005213           CMPNE    R2,#+32
   \   00000018   0D005213           CMPNE    R2,#+13
   \   0000001C   0A005213           CMPNE    R2,#+10
   \   00000020   00005213           CMPNE    R2,#+0
   \   00000024   F7FFFF1A           BNE      ??GetHostsCount_1
   1345              if(!*str) return cnt;
   \   00000028   000052E3           CMP      R2,#+0
   \   0000002C   0200001A           BNE      ??GetHostsCount_2
   \                     ??GetHostsCount_3:
   \   00000030   0100A0E1           MOV      R0,R1
   \   00000034   1EFF2FE1           BX       LR
   1346              for(;(*str==';' || *str==' ' || *str=='\x0D' || *str=='\x0A') && *str; str++);
   \                     ??GetHostsCount_4:
   \   00000038   010080E2           ADD      R0,R0,#+1
   \                     ??GetHostsCount_2:
   \   0000003C   0020D0E5           LDRB     R2,[R0, #+0]
   \   00000040   3B0052E3           CMP      R2,#+59
   \   00000044   20005213           CMPNE    R2,#+32
   \   00000048   0D005213           CMPNE    R2,#+13
   \   0000004C   0A005213           CMPNE    R2,#+10
   \   00000050   0100001A           BNE      ??GetHostsCount_5
   \   00000054   000052E3           CMP      R2,#+0
   \   00000058   F6FFFF1A           BNE      ??GetHostsCount_4
   1347              if(!*str) return cnt;
   \                     ??GetHostsCount_5:
   \   0000005C   000052E3           CMP      R2,#+0
   \   00000060   F2FFFF0A           BEQ      ??GetHostsCount_3
   1348            }
   \   00000064   011081E2           ADD      R1,R1,#+1
   \   00000068   FF1011E2           ANDS     R1,R1,#0xFF
   \   0000006C   E6FFFF1A           BNE      ??GetHostsCount_0
   1349            return 0;
   \   00000070   0000A0E3           MOV      R0,#+0
   \   00000074   1EFF2FE1           BX       LR               ;; return
   1350          
   1351          }
   1352          //---------------------------------------------------------------------------
   1353          

   \                                 In segment CODE, align 4, keep-with-next
   1354          void create_connect(void)
   1355          {
   \                     create_connect:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   1356            char hostbuf[128];
   1357            int hostport;
   1358            int ***p_res=NULL;
   1359            void do_reconnect(void);
   1360            SOCK_ADDR sa;
   1361            //Устанавливаем соединение
   1362            connect_state = 0;
   \   00000004   ........           LDR      R5,??DataTable42  ;; ecmenu_ITEMS
   \   00000008   ........           LDR      R6,??DataTable43  ;; S_ICONS
   1363            int err;
   1364            unsigned int ip;
   1365            GBS_DelTimer(&reconnect_tmr);
   1366            if (!IsGPRSEnabled())
   \   0000000C   C4829FE5           LDR      R8,??create_connect_0  ;; `?<Constant "\\315\\345\\342\\356\\347\\354\\356\\346\\3`
   \   00000010   94D04DE2           SUB      SP,SP,#+148
   \   00000014   0040A0E3           MOV      R4,#+0
   \   00000018   00408DE5           STR      R4,[SP, #+0]
   \   0000001C   084185E5           STR      R4,[R5, #+264]
   \   00000020   E20F86E2           ADD      R0,R6,#+904
   \   00000024   8C0100EF           SWI      +396
   \   00000028   9A7FA0E3           MOV      R7,#+616
   \   0000002C   A70000EF           SWI      +167
   \   00000030   000050E3           CMP      R0,#+0
   \   00000034   0400001A           BNE      ??create_connect_1
   1367            {
   1368              is_gprs_online=0;
   \   00000038   184185E5           STR      R4,[R5, #+280]
   1369              strcpy(logmsg,LG_GRWAITFORGPRS);
   \   0000003C   841088E2           ADD      R1,R8,#+132
   \   00000040   060087E0           ADD      R0,R7,R6
   \   00000044   1A0000EF           SWI      +26
   1370              SMART_REDRAW();
   \   00000048   770000EA           B        ??create_connect_2
   1371              return;
   1372            }
   1373            DNR_ID=0;
   1374            *socklasterr()=0;
   1375          
   1376            if(host_counter==-1){
   \                     ??create_connect_1:
   \   0000004C   88A29FE5           LDR      R10,??create_connect_0+0x4  ;; NATICQ_HOST
   \   00000050   204185E5           STR      R4,[R5, #+288]
   \   00000054   7C8100EF           SWI      +33148
   \   00000058   004080E5           STR      R4,[R0, #+0]
   \   0000005C   280195E5           LDR      R0,[R5, #+296]
   \   00000060   0490E0E1           MVN      R9,R4
   \   00000064   090050E1           CMP      R0,R9
   \   00000068   0600001A           BNE      ??create_connect_3
   1377              host_counter = (mrand()*GetHostsCount(NATICQ_HOST))>>15;
   \   0000006C   ........           _BLF     mrand,??mrand??rA
   \   00000070   00B0A0E1           MOV      R11,R0
   \   00000074   0A00A0E1           MOV      R0,R10
   \   00000078   ........           BL       GetHostsCount
   \   0000007C   900B01E0           MUL      R1,R0,R11
   \   00000080   C107A0E1           ASR      R0,R1,#+15
   \   00000084   280185E5           STR      R0,[R5, #+296]
   1378            }
   1379          
   1380            GetHost(host_counter, NATICQ_HOST, hostbuf);
   \                     ??create_connect_3:
   \   00000088   280195E5           LDR      R0,[R5, #+296]
   \   0000008C   14208DE2           ADD      R2,SP,#+20
   1381            hostport = GetPort(host_counter, NATICQ_HOST);
   1382            //host_counter++;
   1383          
   1384            sprintf(hostname, "%s:%d", hostbuf, hostport);
   1385          
   1386            SMART_REDRAW();
   1387          
   1388            ip=str2ip(hostbuf);
   \   00000090   ........           LDR      R11,??DataTable38  ;; do_reconnect
   \   00000094   0A10A0E1           MOV      R1,R10
   \   00000098   ........           BL       GetHost
   \   0000009C   280195E5           LDR      R0,[R5, #+296]
   \   000000A0   0A10A0E1           MOV      R1,R10
   \   000000A4   ........           BL       GetPort
   \   000000A8   00A0A0E1           MOV      R10,R0
   \   000000AC   0A30A0E1           MOV      R3,R10
   \   000000B0   14208DE2           ADD      R2,SP,#+20
   \   000000B4   7C1088E2           ADD      R1,R8,#+124
   \   000000B8   FA0F86E2           ADD      R0,R6,#+1000
   \   000000BC   160000EF           SWI      +22
   \   000000C0   ........           BL       SMART_REDRAW
   \   000000C4   14008DE2           ADD      R0,SP,#+20
   \   000000C8   B70100EF           SWI      +439
   \   000000CC   090050E1           CMP      R0,R9
   \   000000D0   0500000A           BEQ      ??create_connect_4
   1389            if (ip!=0xFFFFFFFF)
   1390            {
   1391              sa.ip=ip;
   \   000000D4   08008DE5           STR      R0,[SP, #+8]
   1392              strcpy(logmsg,"\nConnect by IP!");
   \   000000D8   6C1088E2           ADD      R1,R8,#+108
   \   000000DC   060087E0           ADD      R0,R7,R6
   \   000000E0   1A0000EF           SWI      +26
   1393              SMART_REDRAW();
   \   000000E4   ........           BL       SMART_REDRAW
   1394              goto L_CONNECT;
   \   000000E8   270000EA           B        ??create_connect_5
   1395            }
   1396            strcpy(logmsg,LG_GRSENDDNR);
   \                     ??create_connect_4:
   \   000000EC   601088E2           ADD      R1,R8,#+96
   \   000000F0   060087E0           ADD      R0,R7,R6
   \   000000F4   1A0000EF           SWI      +26
   1397            SMART_REDRAW();
   \   000000F8   ........           BL       SMART_REDRAW
   1398            err=async_gethostbyname(hostbuf,&p_res,&DNR_ID); //03461351 3<70<19<81
   \   000000FC   482F85E2           ADD      R2,R5,#+288
   \   00000100   0D10A0E1           MOV      R1,SP
   \   00000104   14008DE2           ADD      R0,SP,#+20
   \   00000108   B60100EF           SWI      +438
   \   0000010C   0030B0E1           MOVS     R3,R0
   1399            if (err)
   \   00000110   0D00000A           BEQ      ??create_connect_6
   1400            {
   1401              if ((err==0xC9)||(err==0xD6))
   \   00000114   C90053E3           CMP      R3,#+201
   \   00000118   D6005313           CMPNE    R3,#+214
   \   0000011C   4500001A           BNE      ??create_connect_7
   1402              {
   1403                snprintf(logmsg,255,LG_GRDNRERROR,err,DNR_ID);
   \   00000120   200195E5           LDR      R0,[R5, #+288]
   \   00000124   4C2088E2           ADD      R2,R8,#+76
   \   00000128   01002DE9           PUSH     {R0}
   \   0000012C   FF10A0E3           MOV      R1,#+255
   \   00000130   060087E0           ADD      R0,R7,R6
   \   00000134   1B0100EF           SWI      +283
   1404                SMART_REDRAW();
   \   00000138   ........           BL       SMART_REDRAW
   1405                if (DNR_ID)
   \   0000013C   200195E5           LDR      R0,[R5, #+288]
   \   00000140   04D08DE2           ADD      SP,SP,#+4
   \   00000144   000050E3           CMP      R0,#+0
   \   00000148   6000001A           BNE      ??create_connect_8
   1406                {
   1407          //        if (err==0xC9) host_counter=-1;
   1408          	return; //Ждем готовности DNR
   1409                }
   1410              }
   1411              else
   1412              {
   1413                host_counter=-1;
   1414                GBS_StartTimerProc(&reconnect_tmr,TMR_SECOND*RECONNECT_TIME,do_reconnect);
   1415                return;
   1416              }
   1417            }
   1418            if (p_res)
   \                     ??create_connect_6:
   \   0000014C   00009DE5           LDR      R0,[SP, #+0]
   \   00000150   000050E3           CMP      R0,#+0
   \   00000154   5400000A           BEQ      ??create_connect_9
   1419            {
   1420              if (p_res[3])
   \   00000158   0C0090E5           LDR      R0,[R0, #+12]
   \   0000015C   000050E3           CMP      R0,#+0
   \   00000160   5A00000A           BEQ      ??create_connect_8
   1421              {
   1422                strcpy(logmsg,LG_GRDNROK);
   \   00000164   341088E2           ADD      R1,R8,#+52
   \   00000168   060087E0           ADD      R0,R7,R6
   \   0000016C   1A0000EF           SWI      +26
   1423                SMART_REDRAW();
   \   00000170   ........           BL       SMART_REDRAW
   1424                DNR_TRIES=0;
   \   00000174   244185E5           STR      R4,[R5, #+292]
   1425                sa.ip=p_res[3][0][0];
   \   00000178   00109DE5           LDR      R1,[SP, #+0]
   \   0000017C   0C1091E5           LDR      R1,[R1, #+12]
   \   00000180   001091E5           LDR      R1,[R1, #+0]
   \   00000184   001091E5           LDR      R1,[R1, #+0]
   \   00000188   08108DE5           STR      R1,[SP, #+8]
   1426              L_CONNECT:
   1427                sprintf(hostname, "%s:%d\n(IP: %d.%d.%d.%d)", hostbuf, hostport,
   1428                        sa.ip&0xFF, (sa.ip>>8)&0xFF, (sa.ip>>16)&0xFF, (sa.ip>>24)&0xFF);
   \                     ??create_connect_5:
   \   0000018C   08009DE5           LDR      R0,[SP, #+8]
   \   00000190   0A30A0E1           MOV      R3,R10
   \   00000194   201CA0E1           LSR      R1,R0,#+24
   \   00000198   02002DE9           PUSH     {R1}
   \   0000019C   FF10A0E3           MOV      R1,#+255
   \   000001A0   201801E0           AND      R1,R1,R0, LSR #+16
   \   000001A4   02002DE9           PUSH     {R1}
   \   000001A8   FF10A0E3           MOV      R1,#+255
   \   000001AC   201401E0           AND      R1,R1,R0, LSR #+8
   \   000001B0   02002DE9           PUSH     {R1}
   \   000001B4   FF0000E2           AND      R0,R0,#0xFF
   \   000001B8   01002DE9           PUSH     {R0}
   \   000001BC   24208DE2           ADD      R2,SP,#+36
   \   000001C0   1C1088E2           ADD      R1,R8,#+28
   \   000001C4   FA0F86E2           ADD      R0,R6,#+1000
   \   000001C8   160000EF           SWI      +22
   1429          
   1430                sock=socket(1,1,0);
   \   000001CC   0020A0E3           MOV      R2,#+0
   \   000001D0   0110A0E3           MOV      R1,#+1
   \   000001D4   0100A0E1           MOV      R0,R1
   \   000001D8   730100EF           SWI      +371
   \   000001DC   0C0185E5           STR      R0,[R5, #+268]
   1431                if (sock!=-1)
   \   000001E0   090050E1           CMP      R0,R9
   \   000001E4   10D08DE2           ADD      SP,SP,#+16
   \   000001E8   2300000A           BEQ      ??create_connect_10
   \   000001EC   0110A0E3           MOV      R1,#+1
   \   000001F0   B410CDE1           STRH     R1,[SP, #+4]
   1432                {
   1433          	sa.family=1;
   1434          	sa.port=htons(hostport);
   \   000001F4   0A08A0E1           MOV      R0,R10, LSL #+16
   \   000001F8   2008A0E1           MOV      R0,R0, LSR #+16
   \   000001FC   7A0100EF           SWI      +378
   \   00000200   B600CDE1           STRH     R0,[SP, #+6]
   1435          	//    sa.ip=htonl(IP_ADDR(82,207,89,182));
   1436          	if (connect(sock,&sa,sizeof(sa))!=-1)
   \   00000204   0C0195E5           LDR      R0,[R5, #+268]
   \   00000208   1020A0E3           MOV      R2,#+16
   \   0000020C   04108DE2           ADD      R1,SP,#+4
   \   00000210   740100EF           SWI      +372
   \   00000214   090050E1           CMP      R0,R9
   \   00000218   0F00000A           BEQ      ??create_connect_11
   1437          	{
   1438          	  connect_state=1;
   \   0000021C   0100A0E3           MOV      R0,#+1
   \   00000220   080185E5           STR      R0,[R5, #+264]
   1439          	  TOTALRECEIVED=0;
   \   00000224   D84086E5           STR      R4,[R6, #+216]
   1440          	  TOTALSENDED=0;
   \   00000228   DC4086E5           STR      R4,[R6, #+220]
   1441          	  SMART_REDRAW();
   \                     ??create_connect_2:
   \   0000022C   ........           BL       SMART_REDRAW
   \                     ??create_connect_12:
   \   00000230   94D08DE2           ADD      SP,SP,#+148
   \   00000234   F08FBDE8           POP      {R4-R11,PC}
   1442          	}
   \                     ??create_connect_7:
   \   00000238   289185E5           STR      R9,[R5, #+296]
   \                     ??create_connect_13:
   \   0000023C   ........           LDR      R0,??DataTable39  ;; RECONNECT_TIME
   \   00000240   0B20A0E1           MOV      R2,R11
   \   00000244   000090E5           LDR      R0,[R0, #+0]
   \   00000248   D830A0E3           MOV      R3,#+216
   \   0000024C   930001E0           MUL      R1,R3,R0
   \   00000250   E20F86E2           ADD      R0,R6,#+904
   \   00000254   4D0000EF           SWI      +77
   \   00000258   F4FFFFEA           B        ??create_connect_12
   1443          	else
   1444          	{
   1445          	  closesocket(sock);
   \                     ??create_connect_11:
   \   0000025C   0C0195E5           LDR      R0,[R5, #+268]
   \   00000260   760100EF           SWI      +374
   1446          	  sock=-1;
   \   00000264   0C9185E5           STR      R9,[R5, #+268]
   1447          //	  LockSched();
   1448          //	  ShowMSG(1,(int)lgpData[LGP_MsgCantConn]); //надоела нашиш лезть
   1449          //	  UnlockSched();
   1450                    strcpy(logmsg,LG_MSGCANTCONN);
   \   00000268   0810A0E1           MOV      R1,R8
   \   0000026C   060087E0           ADD      R0,R7,R6
   \   00000270   1A0000EF           SWI      +26
   1451                    SMART_REDRAW();
   \   00000274   ........           BL       SMART_REDRAW
   1452          	  GBS_StartTimerProc(&reconnect_tmr,TMR_SECOND*RECONNECT_TIME,do_reconnect);
   \   00000278   EFFFFFEA           B        ??create_connect_13
   1453          	}
   1454                }
   1455                else
   1456                {
   1457          	LockSched();
   \                     ??create_connect_10:
   \   0000027C   460100EF           SWI      +326
   1458          	ShowMSG(1,(int)lgpData[LGP_MsgCantCrSc]);
   \   00000280   58009FE5           LDR      R0,??create_connect_0+0x8  ;; lgpData + 292
   \   00000284   001090E5           LDR      R1,[R0, #+0]
   \   00000288   0100A0E3           MOV      R0,#+1
   \   0000028C   480100EF           SWI      +328
   1459          	UnlockSched();
   \   00000290   470100EF           SWI      +327
   1460          	//Не осилили создания сокета, закрываем GPRS-сессию
   1461          	GPRS_OnOff(0,1);
   \   00000294   0110A0E3           MOV      R1,#+1
   \   00000298   0000A0E3           MOV      R0,#+0
   \   0000029C   8E0100EF           SWI      +398
   1462                  gprsdown=6;
   \   000002A0   0600A0E3           MOV      R0,#+6
   \   000002A4   1C0185E5           STR      R0,[R5, #+284]
   \   000002A8   E0FFFFEA           B        ??create_connect_12
   1463                }
   1464              }
   1465            }
   1466            else
   1467            {
   1468              DNR_TRIES--;
   \                     ??create_connect_9:
   \   000002AC   240195E5           LDR      R0,[R5, #+292]
   \   000002B0   010040E2           SUB      R0,R0,#+1
   \   000002B4   240185E5           STR      R0,[R5, #+292]
   1469              LockSched();
   \   000002B8   460100EF           SWI      +326
   1470              ShowMSG(1,(int)lgpData[LGP_MsgHostNFnd]);
   \   000002BC   20009FE5           LDR      R0,??create_connect_0+0xC  ;; lgpData + 296
   \   000002C0   001090E5           LDR      R1,[R0, #+0]
   \   000002C4   0100A0E3           MOV      R0,#+1
   \   000002C8   480100EF           SWI      +328
   1471              UnlockSched();
   \   000002CC   470100EF           SWI      +327
   \                     ??create_connect_8:
   \   000002D0   94D08DE2           ADD      SP,SP,#+148      ;; stack cleaning
   \   000002D4   F08FBDE8           POP      {R4-R11,PC}      ;; return
   \                     ??create_connect_0:
   \   000002D8   ........           DC32     `?<Constant "\\315\\345\\342\\356\\347\\354\\356\\346\\3`
   \   000002DC   ........           DC32     NATICQ_HOST
   \   000002E0   ........           DC32     lgpData + 292
   \   000002E4   ........           DC32     lgpData + 296
   1472            }
   1473          }
   1474          
   1475          #ifdef SEND_TIMER
   1476          GBSTMR send_tmr;
   1477          #endif
   1478          

   \                                 In segment CODE, align 4, keep-with-next
   1479          void ClearSendQ(void)
   1480          {
   \                     ClearSendQ:
   \   00000000   10402DE9           PUSH     {R4,LR}
   1481            mfree((void *)sendq_p);
   \   00000004   ........           LDR      R4,??DataTable42  ;; ecmenu_ITEMS
   \   00000008   140194E5           LDR      R0,[R4, #+276]
   \   0000000C   150000EF           SWI      +21
   1482            sendq_p=NULL;
   \   00000010   0000A0E3           MOV      R0,#+0
   \   00000014   140184E5           STR      R0,[R4, #+276]
   1483            sendq_l=NULL;
   \   00000018   100184E5           STR      R0,[R4, #+272]
   1484          #ifdef SEND_TIMER
   1485            GBS_DelTimer(&send_tmr);
   1486          #endif
   1487          }
   \   0000001C   1080BDE8           POP      {R4,PC}          ;; return
   1488          

   \                                 In segment CODE, align 4, keep-with-next
   1489          void end_socket(void)
   1490          {
   \                     end_socket:
   \   00000000   10402DE9           PUSH     {R4,LR}
   1491            if (sock>=0)
   \   00000004   ........           LDR      R4,??DataTable42  ;; ecmenu_ITEMS
   \   00000008   0C0194E5           LDR      R0,[R4, #+268]
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   1080BD48           POPMI    {R4,PC}
   1492            {
   1493              shutdown(sock,2);
   \   00000014   0210A0E3           MOV      R1,#+2
   \   00000018   770100EF           SWI      +375
   1494              closesocket(sock);
   \   0000001C   0C0194E5           LDR      R0,[R4, #+268]
   \   00000020   760100EF           SWI      +374
   1495            }
   1496          #ifdef SEND_TIMER
   1497            GBS_DelTimer(&send_tmr);
   1498          #endif
   1499          }
   \   00000024   1080BDE8           POP      {R4,PC}          ;; return
   1500          
   1501          #ifdef SEND_TIMER
   1502          static void resend(void)
   1503          {
   1504            void SendAnswer(int dummy, TPKT *p);
   1505            SUBPROC((void*)SendAnswer,0,0);
   1506          }
   1507          #endif
   1508          

   \                                 In segment CODE, align 4, keep-with-next
   1509          void SendAnswer(int dummy, TPKT *p)
   1510          {
   \                     SendAnswer:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   1511            int i;
   1512            int j;
   1513            if (connect_state<2)
   \   00000004   ........           LDR      R4,??DataTable42  ;; ecmenu_ITEMS
   \   00000008   0170A0E1           MOV      R7,R1
   \   0000000C   080194E5           LDR      R0,[R4, #+264]
   \   00000010   020050E3           CMP      R0,#+2
   \   00000014   020000AA           BGE      ??SendAnswer_0
   1514            {
   1515              mfree(p);
   \   00000018   0700A0E1           MOV      R0,R7
   \   0000001C   150000EF           SWI      +21
   1516              return;
   \   00000020   F087BDE8           POP      {R4-R10,PC}
   1517            }
   1518            if (p)
   \                     ??SendAnswer_0:
   \   00000024   ........           LDR      R5,??DataTable43  ;; S_ICONS
   \   00000028   000057E3           CMP      R7,#+0
   \   0000002C   2600000A           BEQ      ??SendAnswer_1
   1519            {
   1520              j=sizeof(PKT)+p->pkt.data_len; //Размер пакета
   \   00000030   B600D7E1           LDRH     R0,[R7, #+6]
   \   00000034   086080E2           ADD      R6,R0,#+8
   1521              TOTALSENDED+=j;
   \   00000038   DC0095E5           LDR      R0,[R5, #+220]
   \   0000003C   000086E0           ADD      R0,R6,R0
   \   00000040   DC0085E5           STR      R0,[R5, #+220]
   1522              ALLTOTALSENDED+=j;			//by BoBa 10.07
   \   00000044   E40095E5           LDR      R0,[R5, #+228]
   \   00000048   000086E0           ADD      R0,R6,R0
   \   0000004C   E40085E5           STR      R0,[R5, #+228]
   1523              //Проверяем, не надо ли добавить в очередь
   1524              if (sendq_p)
   \   00000050   140194E5           LDR      R0,[R4, #+276]
   \   00000054   000050E3           CMP      R0,#+0
   \   00000058   0F00000A           BEQ      ??SendAnswer_2
   1525              {
   1526                //Есть очередь, добавляем в нее
   1527                sendq_p=realloc((void *)sendq_p,sendq_l+j);
   \   0000005C   101194E5           LDR      R1,[R4, #+272]
   \   00000060   011086E0           ADD      R1,R6,R1
   \   00000064   BA0000EF           SWI      +186
   \   00000068   140184E5           STR      R0,[R4, #+276]
   1528                memcpy((char *)sendq_p+sendq_l,p,j);
   \   0000006C   100194E5           LDR      R0,[R4, #+272]
   \   00000070   143194E5           LDR      R3,[R4, #+276]
   \   00000074   0620A0E1           MOV      R2,R6
   \   00000078   0710A0E1           MOV      R1,R7
   \   0000007C   030080E0           ADD      R0,R0,R3
   \   00000080   1E0100EF           SWI      +286
   1529                mfree(p);
   \   00000084   0700A0E1           MOV      R0,R7
   \   00000088   150000EF           SWI      +21
   1530                sendq_l+=j;
   \   0000008C   100194E5           LDR      R0,[R4, #+272]
   \   00000090   000086E0           ADD      R0,R6,R0
   \   00000094   100184E5           STR      R0,[R4, #+272]
   1531                return;
   \   00000098   F087BDE8           POP      {R4-R10,PC}
   1532              }
   1533              sendq_p=p;
   \                     ??SendAnswer_2:
   \   0000009C   147184E5           STR      R7,[R4, #+276]
   1534              sendq_l=j;
   \   000000A0   106184E5           STR      R6,[R4, #+272]
   \   000000A4   080000EA           B        ??SendAnswer_1
   1535            }
   1536            //Отправляем уже существующее в очереди
   1537            while((i=sendq_l)!=0)
   1538            {
   1539              if (i>0x400) i=0x400;
   1540              j=send(sock,(void *)sendq_p,i,0);
   1541              snprintf(logmsg,255,"send res %d",j);
   1542              SMART_REDRAW();
   1543              if (j<0)
   1544              {
   1545                j=*socklasterr();
   1546                if ((j==0xC9)||(j==0xD6))
   1547                {
   1548          	//Передали что хотели
   1549          	strcpy(logmsg,"Send delayed...");
   1550          	return; //Видимо, надо ждать сообщения ENIP_BUFFER_FREE
   1551                }
   1552                else
   1553                {
   1554          	//Ошибка
   1555          	LockSched();
   1556          	ShowMSG(1,(int)"Send error!");
   1557          	UnlockSched();
   1558          	end_socket();
   1559          	return;
   1560                }
   1561              }
   1562              memcpy((void *)sendq_p,(char *)sendq_p+j,sendq_l-=j); //Удалили переданное
   \                     ??SendAnswer_3:
   \   000000A8   100194E5           LDR      R0,[R4, #+272]
   \   000000AC   062040E0           SUB      R2,R0,R6
   \   000000B0   102184E5           STR      R2,[R4, #+272]
   \   000000B4   140194E5           LDR      R0,[R4, #+276]
   \   000000B8   001086E0           ADD      R1,R6,R0
   \   000000BC   1E0100EF           SWI      +286
   1563              if (j<i)
   \   000000C0   070056E1           CMP      R6,R7
   \   000000C4   F087BDB8           POPLT    {R4-R10,PC}
   1564              {
   1565                //Передали меньше чем заказывали
   1566          #ifdef SEND_TIMER
   1567                GBS_StartTimerProc(&send_tmr,216*5,resend);
   1568          #endif
   1569                return; //Ждем сообщения ENIP_BUFFER_FREE1
   1570              }
   1571              tenseconds_to_ping=0; //Чего-то послали, можно начинать отсчет времени до пинга заново
   \   000000C8   FC8085E5           STR      R8,[R5, #+252]
   \                     ??SendAnswer_1:
   \   000000CC   107194E5           LDR      R7,[R4, #+272]
   \   000000D0   141194E5           LDR      R1,[R4, #+276]
   \   000000D4   0080A0E3           MOV      R8,#+0
   \   000000D8   000057E3           CMP      R7,#+0
   \   000000DC   2200000A           BEQ      ??SendAnswer_4
   \   000000E0   94A09FE5           LDR      R10,??SendAnswer_5  ;; `?<Constant "Send error!">`
   \   000000E4   0100A0E3           MOV      R0,#+1
   \   000000E8   400E80E3           ORR      R0,R0,#0x400
   \   000000EC   000057E1           CMP      R7,R0
   \   000000F0   0C0194E5           LDR      R0,[R4, #+268]
   \   000000F4   407EA0A3           MOVGE    R7,#+1024
   \   000000F8   0030A0E3           MOV      R3,#+0
   \   000000FC   0720A0E1           MOV      R2,R7
   \   00000100   790100EF           SWI      +377
   \   00000104   0060A0E1           MOV      R6,R0
   \   00000108   9A9FA0E3           MOV      R9,#+616
   \   0000010C   0630A0E1           MOV      R3,R6
   \   00000110   1C208AE2           ADD      R2,R10,#+28
   \   00000114   FF10A0E3           MOV      R1,#+255
   \   00000118   050089E0           ADD      R0,R9,R5
   \   0000011C   1B0100EF           SWI      +283
   \   00000120   ........           BL       SMART_REDRAW
   \   00000124   000056E3           CMP      R6,#+0
   \   00000128   DEFFFF5A           BPL      ??SendAnswer_3
   \   0000012C   7C8100EF           SWI      +33148
   \   00000130   006090E5           LDR      R6,[R0, #+0]
   \   00000134   C90056E3           CMP      R6,#+201
   \   00000138   D6005613           CMPNE    R6,#+214
   \   0000013C   0300001A           BNE      ??SendAnswer_6
   \   00000140   0C108AE2           ADD      R1,R10,#+12
   \   00000144   050089E0           ADD      R0,R9,R5
   \   00000148   1A0000EF           SWI      +26
   \   0000014C   F087BDE8           POP      {R4-R10,PC}
   \                     ??SendAnswer_6:
   \   00000150   460100EF           SWI      +326
   \   00000154   0A10A0E1           MOV      R1,R10
   \   00000158   0100A0E3           MOV      R0,#+1
   \   0000015C   480100EF           SWI      +328
   \   00000160   470100EF           SWI      +327
   \   00000164   ........           BL       end_socket
   \   00000168   F087BDE8           POP      {R4-R10,PC}
   1572            }
   1573            mfree((void *)sendq_p);
   \                     ??SendAnswer_4:
   \   0000016C   0100A0E1           MOV      R0,R1
   \   00000170   150000EF           SWI      +21
   1574            sendq_p=NULL;
   \   00000174   148184E5           STR      R8,[R4, #+276]
   1575          }
   \   00000178   F087BDE8           POP      {R4-R10,PC}      ;; return
   \                     ??SendAnswer_5:
   \   0000017C   ........           DC32     `?<Constant "Send error!">`
   1576          

   \                                 In segment CODE, align 4, keep-with-next
   1577          void do_ping(void)
   1578          {
   \                     do_ping:
   \   00000000   00402DE9           PUSH     {LR}
   1579            TPKT *pingp=malloc(sizeof(PKT));
   \   00000004   0800A0E3           MOV      R0,#+8
   \   00000008   140000EF           SWI      +20
   1580            pingp->pkt.uin=UIN;
   \   0000000C   ........           LDR      R1,??DataTable44  ;; UIN
   \   00000010   001091E5           LDR      R1,[R1, #+0]
   \   00000014   001080E5           STR      R1,[R0, #+0]
   1581            pingp->pkt.type=0;
   \   00000018   0010A0E3           MOV      R1,#+0
   \   0000001C   B410C0E1           STRH     R1,[R0, #+4]
   1582            pingp->pkt.data_len=0;
   \   00000020   B610C0E1           STRH     R1,[R0, #+6]
   1583            SendAnswer(0,pingp);
   \   00000024   0010A0E1           MOV      R1,R0
   \   00000028   0000A0E3           MOV      R0,#+0
   \   0000002C   0040BDE8           POP      {LR}             ;; Pop
   \   00000030   ........           B        SendAnswer       ;; tailcall
   1584          }
   1585          

   \                                 In segment CODE, align 4, keep-with-next
   1586          void SendMSGACK(int i)
   1587          {
   \                     SendMSGACK:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   1588            TPKT *ackp=malloc(sizeof(PKT));
   \   00000008   0800A0E3           MOV      R0,#+8
   \   0000000C   140000EF           SWI      +20
   1589            ackp->pkt.uin=i;
   \   00000010   004080E5           STR      R4,[R0, #+0]
   1590            ackp->pkt.type=T_MSGACK;
   \   00000014   1710A0E3           MOV      R1,#+23
   \   00000018   B410C0E1           STRH     R1,[R0, #+4]
   1591            ackp->pkt.data_len=0;
   \   0000001C   0010A0E3           MOV      R1,#+0
   \   00000020   B610C0E1           STRH     R1,[R0, #+6]
   1592            SendAnswer(0,ackp);
   \   00000024   0010A0E1           MOV      R1,R0
   \   00000028   0000A0E3           MOV      R0,#+0
   \   0000002C   1040BDE8           POP      {R4,LR}          ;; Pop
   \   00000030   ........           B        SendAnswer       ;; tailcall
   1593          }
   1594          

   \                                 In segment CODE, align 4, keep-with-next
   1595          void RequestXText(unsigned int uin)
   1596          {
   \                     RequestXText:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   1597            TPKT *p=malloc(sizeof(PKT));
   \   00000008   0800A0E3           MOV      R0,#+8
   \   0000000C   140000EF           SWI      +20
   1598            p->pkt.uin=uin;
   \   00000010   004080E5           STR      R4,[R0, #+0]
   1599            p->pkt.type=T_XTEXT_REQ;
   \   00000014   1810A0E3           MOV      R1,#+24
   \   00000018   B410C0E1           STRH     R1,[R0, #+4]
   1600            p->pkt.data_len=0;
   \   0000001C   0010A0E3           MOV      R1,#+0
   \   00000020   B610C0E1           STRH     R1,[R0, #+6]
   1601            SUBPROC((void *)SendAnswer,0,p);
   \   00000024   0020A0E1           MOV      R2,R0
   \   00000028   ........           LDR      R0,??DataTable81  ;; SendAnswer
   \   0000002C   710100EF           SWI      +369
   1602          }
   \   00000030   1080BDE8           POP      {R4,PC}          ;; return
   1603          

   \                                 In segment CODE, align 4, keep-with-next
   1604          void get_answer(void)
   1605          {
   \                     get_answer:
   \   00000000   ........           LDR      R0,??DataTable51  ;; ecmenu_ITEMS + 260
   \   00000004   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000008   14D04DE2           SUB      SP,SP,#+20
   \   0000000C   70DD4DE2           SUB      SP,SP,#+7168
   \   00000010   009090E5           LDR      R9,[R0, #+0]
   1606            void *p;
   1607            int i=RXstate;
   1608            int j;
   1609            int n;
   1610            char rb[7168];
   1611            char *rp=rb;
   1612            if (connect_state<2) return;
   \   00000014   ........           LDR      R0,??DataTable50  ;; ecmenu_ITEMS + 264
   \   00000018   14108DE2           ADD      R1,SP,#+20
   \   0000001C   000090E5           LDR      R0,[R0, #+0]
   \   00000020   00108DE5           STR      R1,[SP, #+0]
   \   00000024   020050E3           CMP      R0,#+2
   \   00000028   160100BA           BLT      ??get_answer_1
   \   0000002C   0A0079E3           CMN      R9,#+10
   \   00000030   1401000A           BEQ      ??get_answer_1
   1613            if (i==EOP) return;
   1614            j=recv(sock,rb,sizeof(rb),0);
   \   00000034   60049FE5           LDR      R0,??get_answer_2+0x8  ;; ecmenu_ITEMS + 268
   \   00000038   60649FE5           LDR      R6,??get_answer_2+0xC  ;; RXbuf
   \   0000003C   000090E5           LDR      R0,[R0, #+0]
   \   00000040   5C749FE5           LDR      R7,??get_answer_2+0x10  ;; `?<Constant "Ping %d-%d seconds!">`
   \   00000044   ........           LDR      R8,??DataTable84  ;; S_ICONS
   \   00000048   0030A0E3           MOV      R3,#+0
   \   0000004C   702DA0E3           MOV      R2,#+7168
   \   00000050   780100EF           SWI      +376
   \   00000054   0050A0E1           MOV      R5,R0
   \   00000058   AEA0A0E3           MOV      R10,#+174
   \   0000005C   DEAC8AE3           ORR      R10,R10,#0xDE00
   \   00000060   250000EA           B        ??get_answer_3
   1615            while(j>0)
   1616            {
   1617              if (i<0)
   1618              {
   1619                //Принимаем заголовок
   1620                n=-i; //Требуемое количество байт
   1621                if (j<n) n=j; //полученное<требуемое?
   1622                memcpy(RXbuf.data+i,rp,n); //Копируем
   1623                i+=n;
   1624                j-=n;
   1625                rp+=n;
   1626              }
   1627              if (i>=0)
   1628              {
   1629                //Принимаем тельце ;)
   1630                n=RXbuf.pkt.data_len; //Всего в тельце
   1631                if (n>16383)
   1632                {
   1633          	//Слишком много
   1634          	strcpy(logmsg,LG_GRBADPACKET);
   1635          	end_socket();
   1636          	RXstate=EOP;
   1637          	return;
   1638                }
   1639                n-=i; //Количество требуемых байт (общая длинна тельца-текущая позиция)
   1640                if (n>0)
   1641                {
   1642          	if (j<n) n=j; //полученное<требуемое?
   1643          	memcpy(RXbuf.data+i,rp,n);
   1644          	i+=n;
   1645          	j-=n;
   1646          	rp+=n;
   1647                }
   1648                if (RXbuf.pkt.data_len==i)
   1649                {
   1650          	//Пакет полностью получен
   1651          	TOTALRECEIVED+=(i+8);
   1652          	ALLTOTALRECEIVED+=(i+8);			//by BoBa 10.07
   1653          	//Пакет удачно принят, можно разбирать...
   1654          	RXbuf.data[i]=0; //Конец строки
   1655                  aa(&RXbuf);
   1656                  switch(RXbuf.pkt.type)
   1657          	{
   1658                  case T_LOGIN:
   1659          	  //Удачно залогинились
   1660          	  //Посылаем в MMI
   1661          	  n=i+sizeof(PKT)+1;
   1662          	  p=malloc(n);
   1663          	  memcpy(p,&RXbuf,n);
   1664          	  GBS_SendMessage(MMI_CEPID,MSG_HELPER_TRANSLATOR,0,p,sock);
   1665          	  Play(sndStartup);
   1666          	  //        GBS_StartTimerProc(&tmr_ping,120*TMR_SECOND,call_ping);
   1667          	  snprintf(logmsg,255,LG_GRLOGINMSG,RXbuf.data);
   1668          	  connect_state=3;
   1669          	  SMART_REDRAW();
   1670          	  break;
   1671          	case T_XTEXT_ACK:
   1672          	case T_GROUPID:
   1673          	case T_GROUPFOLLOW:
   1674          	case T_CLENTRY:
   1675                  case T_CONTACTREMOVED:
   1676          	  //Посылаем в MMI
   1677          	  n=i+sizeof(PKT)+1;
   1678          	  p=malloc(n);
   1679          	  memcpy(p,&RXbuf,n);
   1680          	  GBS_SendMessage(MMI_CEPID,MSG_HELPER_TRANSLATOR,0,p,sock);
   1681          	  //snprintf(logmsg,255,"CL: %s",RXbuf.data);
   1682          	  break;
   1683          	case T_STATUSCHANGE:
   1684          	case T_CLIENTID:
   1685          	  n=i+sizeof(PKT);
   1686          	  p=malloc(n);
   1687          	  memcpy(p,&RXbuf,n);
   1688          //	  snprintf(logmsg,255,LG_GRSTATUSCHNG,RXbuf.pkt.uin,*((unsigned short *)(RXbuf.data)));
   1689          	  GBS_SendMessage(MMI_CEPID,MSG_HELPER_TRANSLATOR,0,p,sock);
   1690          	  break;
   1691          	case T_ERROR:
   1692                    if(strstr(RXbuf.data, "Error code 1") || strstr(RXbuf.data, "110"))
   1693                    {
   1694                      snprintf(logmsg,255,LG_GRERROR,LG_GRDBLCONNECT);
   1695                      disautorecconect = 1;
   1696                    }
   1697                    else
   1698                    {
   1699                      snprintf(logmsg,255,LG_GRERROR,RXbuf.data);
   1700                      ShowMSG(1,(int)logmsg);
   1701                    }
   1702          
   1703          	  SMART_REDRAW();
   1704          	  break;
   1705          	case T_RECVMSG:
   1706          	  n=i+sizeof(PKT)+1;
   1707          	  p=malloc(n);
   1708          	  memcpy(p,&RXbuf,n);
   1709          	  {
   1710          	    char *s=p;
   1711          	    s+=sizeof(PKT);
   1712          	    int c;
   1713          	    while((c=*s))
   1714          	    {
   1715          	      if (c<3) *s=' ';
   1716          	      s++;
   1717          	    }
   1718          	  }
   1719          	  snprintf(logmsg,255,LG_GRRECVMSG,RXbuf.pkt.uin,RXbuf.data);
   1720          	  SendMSGACK(TOTALRECEIVED);
   1721          	  GBS_SendMessage(MMI_CEPID,MSG_HELPER_TRANSLATOR,0,p,sock);
   1722          	  SMART_REDRAW();
   1723          //	  Play(sndMsg);
   1724          //          UpdateCSMname();
   1725          	  break;
   1726          	case T_SSLRESP:
   1727          	  LockSched();
   1728          	  ShowMSG(1,(int)RXbuf.data);
   1729          	  UnlockSched();
   1730          	  break;
   1731          	case T_SRV_ACK:
   1732          	  if (FindContactLOGQByAck(&RXbuf)) Play(sndMsgSent);
   1733          	case T_CLIENT_ACK:
   1734          	  p=malloc(sizeof(PKT)+2);
   1735          	  memcpy(p,&RXbuf,sizeof(PKT)+2);
   1736          	  GBS_SendMessage(MMI_CEPID,MSG_HELPER_TRANSLATOR,0,p,sock);
   1737          	  break;
   1738          	case T_ECHORET:
   1739          	  {
   1740          	    TDate d;
   1741          	    TTime t;
   1742          	    TTime *pt=(TTime *)(RXbuf.data);
   1743          	    int s1;
   1744          	    int s2;
   1745          	    GetDateTime(&d,&t);
   \                     ??get_answer_4:
   \   00000064   04108DE2           ADD      R1,SP,#+4
   \   00000068   0C008DE2           ADD      R0,SP,#+12
   \   0000006C   B40000EF           SWI      +180
   1746          	    s1=t.hour*3600+t.min*60+t.sec;
   1747          	    s2=pt->hour*3600+pt->min*60+pt->sec;
   1748          	    s1-=s2;
   \   00000070   0400DDE5           LDRB     R0,[SP, #+4]
   \   00000074   0520DDE5           LDRB     R2,[SP, #+5]
   \   00000078   E11EA0E3           MOV      R1,#+3600
   \   0000007C   3C30A0E3           MOV      R3,#+60
   \   00000080   930202E0           MUL      R2,R3,R2
   \   00000084   912020E0           MLA      R0,R1,R0,R2
   \   00000088   0610DDE5           LDRB     R1,[SP, #+6]
   \   0000008C   E12EA0E3           MOV      R2,#+3600
   \   00000090   000081E0           ADD      R0,R1,R0
   \   00000094   0810D6E5           LDRB     R1,[R6, #+8]
   \   00000098   920101E0           MUL      R1,R2,R1
   1749          	    if (s1<0) s1+=86400;
   1750          	    snprintf(logmsg,255,"Ping %d-%d seconds!",s1,s1+1);
   \   0000009C   0720A0E1           MOV      R2,R7
   \   000000A0   010040E0           SUB      R0,R0,R1
   \   000000A4   0910D6E5           LDRB     R1,[R6, #+9]
   \   000000A8   930101E0           MUL      R1,R3,R1
   \   000000AC   010040E0           SUB      R0,R0,R1
   \   000000B0   0A10D6E5           LDRB     R1,[R6, #+10]
   \   000000B4   013050E0           SUBS     R3,R0,R1
   \   000000B8   500BA043           MOVMI    R0,#+81920
   \   000000BC   460D8043           ORRMI    R0,R0,#0x1180
   \   000000C0   03308040           ADDMI    R3,R0,R3
   \   000000C4   010083E2           ADD      R0,R3,#+1
   \   000000C8   01002DE9           PUSH     {R0}
   \   000000CC   FF10A0E3           MOV      R1,#+255
   \   000000D0   9A0F88E2           ADD      R0,R8,#+616
   \   000000D4   1B0100EF           SWI      +283
   1751          	    LockSched();
   \   000000D8   460100EF           SWI      +326
   1752          	    ShowMSG(1,(int)logmsg);
   \   000000DC   0B10A0E1           MOV      R1,R11
   \   000000E0   0100A0E3           MOV      R0,#+1
   \   000000E4   480100EF           SWI      +328
   1753          	    UnlockSched();
   \   000000E8   470100EF           SWI      +327
   \                     ??get_answer_5:
   \   000000EC   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   1754          	  }
   1755          	  break;
   1756                  case T_LASTPRIVACY:
   1757                    n=i+sizeof(PKT);
   1758                    p=malloc(n);
   1759                    memcpy(p,&RXbuf,n);
   1760          	  GBS_SendMessage(MMI_CEPID,MSG_HELPER_TRANSLATOR,0,p,sock);
   1761          	  break;
   1762          	}
   1763                  ad(&RXbuf);
   \                     ??get_answer_6:
   \   000000F0   0600A0E1           MOV      R0,R6
   \   000000F4   ........           _BLF     ad,??ad??rA
   1764          	i=-(int)sizeof(PKT); //А может еще есть данные
   \   000000F8   0790E0E3           MVN      R9,#+7
   \                     ??get_answer_3:
   \   000000FC   010055E3           CMP      R5,#+1
   \   00000100   DE0000BA           BLT      ??get_answer_7
   \   00000104   000059E3           CMP      R9,#+0
   \   00000108   0C00005A           BPL      ??get_answer_8
   \   0000010C   00109DE5           LDR      R1,[SP, #+0]
   \   00000110   004069E2           RSB      R4,R9,#+0
   \   00000114   040055E1           CMP      R5,R4
   \   00000118   0540A0B1           MOVLT    R4,R5
   \   0000011C   0420A0E1           MOV      R2,R4
   \   00000120   060089E0           ADD      R0,R9,R6
   \   00000124   080080E2           ADD      R0,R0,#+8
   \   00000128   1E0100EF           SWI      +286
   \   0000012C   00109DE5           LDR      R1,[SP, #+0]
   \   00000130   099084E0           ADD      R9,R4,R9
   \   00000134   045045E0           SUB      R5,R5,R4
   \   00000138   011084E0           ADD      R1,R4,R1
   \   0000013C   00108DE5           STR      R1,[SP, #+0]
   \                     ??get_answer_8:
   \   00000140   000059E3           CMP      R9,#+0
   \   00000144   ECFFFF4A           BMI      ??get_answer_3
   \   00000148   B640D6E1           LDRH     R4,[R6, #+6]
   \   0000014C   400C54E3           CMP      R4,#+16384
   \   00000150   090000BA           BLT      ??get_answer_9
   \   00000154   581087E2           ADD      R1,R7,#+88
   \   00000158   9A0F88E2           ADD      R0,R8,#+616
   \   0000015C   1A0000EF           SWI      +26
   \   00000160   ........           BL       end_socket
   \   00000164   ........           LDR      R0,??DataTable51  ;; ecmenu_ITEMS + 260
   \   00000168   0910E0E3           MVN      R1,#+9
   \   0000016C   001080E5           STR      R1,[R0, #+0]
   \   00000170   14D08DE2           ADD      SP,SP,#+20
   \   00000174   70DD8DE2           ADD      SP,SP,#+7168
   \   00000178   F08FBDE8           POP      {R4-R11,PC}
   \                     ??get_answer_9:
   \   0000017C   094044E0           SUB      R4,R4,R9
   \   00000180   010054E3           CMP      R4,#+1
   \   00000184   0B0000BA           BLT      ??get_answer_10
   \   00000188   00109DE5           LDR      R1,[SP, #+0]
   \   0000018C   040055E1           CMP      R5,R4
   \   00000190   0540A0B1           MOVLT    R4,R5
   \   00000194   0420A0E1           MOV      R2,R4
   \   00000198   060089E0           ADD      R0,R9,R6
   \   0000019C   080080E2           ADD      R0,R0,#+8
   \   000001A0   1E0100EF           SWI      +286
   \   000001A4   00109DE5           LDR      R1,[SP, #+0]
   \   000001A8   099084E0           ADD      R9,R4,R9
   \   000001AC   045045E0           SUB      R5,R5,R4
   \   000001B0   011084E0           ADD      R1,R4,R1
   \   000001B4   00108DE5           STR      R1,[SP, #+0]
   \                     ??get_answer_10:
   \   000001B8   B600D6E1           LDRH     R0,[R6, #+6]
   \   000001BC   090050E1           CMP      R0,R9
   \   000001C0   CDFFFF1A           BNE      ??get_answer_3
   \   000001C4   D80098E5           LDR      R0,[R8, #+216]
   \   000001C8   084089E2           ADD      R4,R9,#+8
   \   000001CC   000084E0           ADD      R0,R4,R0
   \   000001D0   D80088E5           STR      R0,[R8, #+216]
   \   000001D4   E00098E5           LDR      R0,[R8, #+224]
   \   000001D8   0010A0E3           MOV      R1,#+0
   \   000001DC   000084E0           ADD      R0,R4,R0
   \   000001E0   E00088E5           STR      R0,[R8, #+224]
   \   000001E4   060089E0           ADD      R0,R9,R6
   \   000001E8   0810C0E5           STRB     R1,[R0, #+8]
   \   000001EC   0600A0E1           MOV      R0,R6
   \   000001F0   ........           _BLF     aa,??aa??rA
   \   000001F4   B410D6E1           LDRH     R1,[R6, #+4]
   \   000001F8   9ABF88E2           ADD      R11,R8,#+616
   \   000001FC   090089E2           ADD      R0,R9,#+9
   \   00000200   0990A0E3           MOV      R9,#+9
   \   00000204   429C89E3           ORR      R9,R9,#0x4200
   \   00000208   031041E2           SUB      R1,R1,#+3
   \   0000020C   220051E3           CMP      R1,#+34
   \   00000210   B6FFFF8A           BHI      ??get_answer_6
   \   00000214   022F8FE2           ADR      R2,??get_answer_0
   \   00000218   8110A0E1           MOV      R1,R1, LSL #+1
   \   0000021C   F12092E1           LDRSH    R2,[R2, R1]
   \   00000220   02F18FE0           ADD      PC,PC,R2, LSL #+2
   \                     ??get_answer_0:
   \   00000224   58001100B2FF       DC16     +88,+17,+65458,+60
   \              3C00        
   \   0000022C   2B00B2FF3A00       DC16     +43,+65458,+58,+65458
   \              B2FF        
   \   00000234   B2FFB2FF7B00       DC16     +65458,+65458,+123,+65458
   \              B2FF        
   \   0000023C   B2FF81008700       DC16     +65458,+129,+135,+65458
   \              B2FF        
   \   00000244   8FFF2B002B00       DC16     +65423,+43,+43,+65458
   \              B2FF        
   \   0000024C   B2FFB2FF2B00       DC16     +65458,+65458,+43,+65458
   \              B2FF        
   \   00000254   B2FFB2FFB2FF       DC16     +65458,+65458,+65458,+65458
   \              B2FF        
   \   0000025C   3A00B2FFB2FF       DC16     +58,+65458,+65458,+43
   \              2B00        
   \   00000264   B2FFB2FF3A00       DC16     +65458,+65458,+58,+0
   \              0000        
   \                     ??get_answer_11:
   \   0000026C   0040A0E1           MOV      R4,R0
   \   00000270   140000EF           SWI      +20
   \   00000274   00B0A0E1           MOV      R11,R0
   \   00000278   0420A0E1           MOV      R2,R4
   \   0000027C   0610A0E1           MOV      R1,R6
   \   00000280   1E0100EF           SWI      +286
   \   00000284   10029FE5           LDR      R0,??get_answer_2+0x8  ;; ecmenu_ITEMS + 268
   \   00000288   0B30A0E1           MOV      R3,R11
   \   0000028C   000090E5           LDR      R0,[R0, #+0]
   \   00000290   0020A0E3           MOV      R2,#+0
   \   00000294   01002DE9           PUSH     {R0}
   \   00000298   0A10A0E1           MOV      R1,R10
   \   0000029C   0900A0E1           MOV      R0,R9
   \   000002A0   000100EF           SWI      +256
   \   000002A4   FC019FE5           LDR      R0,??get_answer_2+0x14  ;; sndStartup
   \   000002A8   ........           BL       Play
   \   000002AC   083086E2           ADD      R3,R6,#+8
   \   000002B0   772F8FE2           ADR      R2,??get_answer_2  ;; "%s"
   \   000002B4   FF10A0E3           MOV      R1,#+255
   \   000002B8   9A0F88E2           ADD      R0,R8,#+616
   \   000002BC   1B0100EF           SWI      +283
   \   000002C0   ........           LDR      R0,??DataTable50  ;; ecmenu_ITEMS + 264
   \   000002C4   0310A0E3           MOV      R1,#+3
   \   000002C8   001080E5           STR      R1,[R0, #+0]
   \   000002CC   ........           BL       SMART_REDRAW
   \   000002D0   85FFFFEA           B        ??get_answer_5
   \                     ??get_answer_12:
   \   000002D4   0040A0E1           MOV      R4,R0
   \                     ??get_answer_13:
   \   000002D8   140000EF           SWI      +20
   \   000002DC   00B0A0E1           MOV      R11,R0
   \   000002E0   0420A0E1           MOV      R2,R4
   \   000002E4   0610A0E1           MOV      R1,R6
   \   000002E8   1E0100EF           SWI      +286
   \   000002EC   A8019FE5           LDR      R0,??get_answer_2+0x8  ;; ecmenu_ITEMS + 268
   \   000002F0   0B30A0E1           MOV      R3,R11
   \   000002F4   000090E5           LDR      R0,[R0, #+0]
   \   000002F8   0020A0E3           MOV      R2,#+0
   \   000002FC   01002DE9           PUSH     {R0}
   \   00000300   0A10A0E1           MOV      R1,R10
   \   00000304   0900A0E1           MOV      R0,R9
   \   00000308   000100EF           SWI      +256
   \   0000030C   76FFFFEA           B        ??get_answer_5
   \                     ??get_answer_14:
   \   00000310   0400A0E1           MOV      R0,R4
   \   00000314   EFFFFFEA           B        ??get_answer_13
   \                     ??get_answer_15:
   \   00000318   201087E2           ADD      R1,R7,#+32
   \   0000031C   080086E2           ADD      R0,R6,#+8
   \   00000320   180100EF           SWI      +280
   \   00000324   000050E3           CMP      R0,#+0
   \   00000328   0400001A           BNE      ??get_answer_16
   \   0000032C   591F8FE2           ADR      R1,??get_answer_2+0x4  ;; "110"
   \   00000330   080086E2           ADD      R0,R6,#+8
   \   00000334   180100EF           SWI      +280
   \   00000338   000050E3           CMP      R0,#+0
   \   0000033C   0700000A           BEQ      ??get_answer_17
   \                     ??get_answer_16:
   \   00000340   303087E2           ADD      R3,R7,#+48
   \   00000344   502087E2           ADD      R2,R7,#+80
   \   00000348   FF10A0E3           MOV      R1,#+255
   \   0000034C   9A0F88E2           ADD      R0,R8,#+616
   \   00000350   1B0100EF           SWI      +283
   \   00000354   0100A0E3           MOV      R0,#+1
   \   00000358   A00088E5           STR      R0,[R8, #+160]
   \   0000035C   070000EA           B        ??get_answer_18
   \                     ??get_answer_17:
   \   00000360   083086E2           ADD      R3,R6,#+8
   \   00000364   502087E2           ADD      R2,R7,#+80
   \   00000368   FF10A0E3           MOV      R1,#+255
   \   0000036C   9A0F88E2           ADD      R0,R8,#+616
   \   00000370   1B0100EF           SWI      +283
   \   00000374   0B10A0E1           MOV      R1,R11
   \   00000378   0100A0E3           MOV      R0,#+1
   \   0000037C   480100EF           SWI      +328
   \                     ??get_answer_18:
   \   00000380   ........           BL       SMART_REDRAW
   \   00000384   59FFFFEA           B        ??get_answer_6
   \                     ??get_answer_19:
   \   00000388   0040A0E1           MOV      R4,R0
   \   0000038C   140000EF           SWI      +20
   \   00000390   00B0A0E1           MOV      R11,R0
   \   00000394   0420A0E1           MOV      R2,R4
   \   00000398   0610A0E1           MOV      R1,R6
   \   0000039C   1E0100EF           SWI      +286
   \   000003A0   08008BE2           ADD      R0,R11,#+8
   \   000003A4   030000EA           B        ??get_answer_20
   \                     ??get_answer_21:
   \   000003A8   030051E3           CMP      R1,#+3
   \   000003AC   2010A0B3           MOVLT    R1,#+32
   \   000003B0   0010C0B5           STRBLT   R1,[R0, #+0]
   \   000003B4   010080E2           ADD      R0,R0,#+1
   \                     ??get_answer_20:
   \   000003B8   0010D0E5           LDRB     R1,[R0, #+0]
   \   000003BC   000051E3           CMP      R1,#+0
   \   000003C0   F8FFFF1A           BNE      ??get_answer_21
   \   000003C4   080086E2           ADD      R0,R6,#+8
   \   000003C8   01002DE9           PUSH     {R0}
   \   000003CC   003096E5           LDR      R3,[R6, #+0]
   \   000003D0   142087E2           ADD      R2,R7,#+20
   \   000003D4   FF10A0E3           MOV      R1,#+255
   \   000003D8   9A0F88E2           ADD      R0,R8,#+616
   \   000003DC   1B0100EF           SWI      +283
   \   000003E0   D80098E5           LDR      R0,[R8, #+216]
   \   000003E4   ........           BL       SendMSGACK
   \   000003E8   AC009FE5           LDR      R0,??get_answer_2+0x8  ;; ecmenu_ITEMS + 268
   \   000003EC   0B30A0E1           MOV      R3,R11
   \   000003F0   000090E5           LDR      R0,[R0, #+0]
   \   000003F4   0020A0E3           MOV      R2,#+0
   \   000003F8   01002DE9           PUSH     {R0}
   \   000003FC   0A10A0E1           MOV      R1,R10
   \   00000400   0900A0E1           MOV      R0,R9
   \   00000404   000100EF           SWI      +256
   \   00000408   ........           BL       SMART_REDRAW
   \   0000040C   08D08DE2           ADD      SP,SP,#+8
   \   00000410   36FFFFEA           B        ??get_answer_6
   \                     ??get_answer_22:
   \   00000414   460100EF           SWI      +326
   \   00000418   081086E2           ADD      R1,R6,#+8
   \   0000041C   0100A0E3           MOV      R0,#+1
   \   00000420   480100EF           SWI      +328
   \   00000424   470100EF           SWI      +327
   \   00000428   30FFFFEA           B        ??get_answer_6
   \                     ??get_answer_23:
   \   0000042C   0600A0E1           MOV      R0,R6
   \   00000430   ........           BL       FindContactLOGQByAck
   \   00000434   000050E3           CMP      R0,#+0
   \   00000438   0100000A           BEQ      ??get_answer_24
   \   0000043C   68009FE5           LDR      R0,??get_answer_2+0x18  ;; sndMsgSent
   \   00000440   ........           BL       Play
   \                     ??get_answer_24:
   \   00000444   0A00A0E3           MOV      R0,#+10
   \   00000448   140000EF           SWI      +20
   \   0000044C   00B0A0E1           MOV      R11,R0
   \   00000450   0A20A0E3           MOV      R2,#+10
   \   00000454   0610A0E1           MOV      R1,R6
   \   00000458   1E0100EF           SWI      +286
   \   0000045C   38009FE5           LDR      R0,??get_answer_2+0x8  ;; ecmenu_ITEMS + 268
   \   00000460   0B30A0E1           MOV      R3,R11
   \   00000464   000090E5           LDR      R0,[R0, #+0]
   \   00000468   0020A0E3           MOV      R2,#+0
   \   0000046C   01002DE9           PUSH     {R0}
   \   00000470   0A10A0E1           MOV      R1,R10
   \   00000474   0900A0E1           MOV      R0,R9
   \   00000478   000100EF           SWI      +256
   \   0000047C   1AFFFFEA           B        ??get_answer_5
   1765                }
   1766              }
   1767            }
   1768            RXstate=i;
   \                     ??get_answer_7:
   \   00000480   ........           LDR      R0,??DataTable51  ;; ecmenu_ITEMS + 260
   \   00000484   009080E5           STR      R9,[R0, #+0]
   1769            //  GBS_StartTimerProc(&tmr_dorecv,3000,dorecv);
   1770            //  SMART_REDRAW();
   1771          }
   \                     ??get_answer_1:
   \   00000488   14D08DE2           ADD      SP,SP,#+20
   \   0000048C   70DD8DE2           ADD      SP,SP,#+7168
   \   00000490   F08FBDE8           POP      {R4-R11,PC}      ;; return
   \                     ??get_answer_2:
   \   00000494   25730000           DC8      "%s",+0
   \   00000498   31313000           DC8      "110"
   \   0000049C   ........           DC32     ecmenu_ITEMS + 268
   \   000004A0   ........           DC32     RXbuf
   \   000004A4   ........           DC32     `?<Constant "Ping %d-%d seconds!">`
   \   000004A8   ........           DC32     sndStartup
   \   000004AC   ........           DC32     sndMsgSent
   1772          

   \                                 In segment CODE, align 4, keep-with-next
   1773          void AddStringToLog(CLIST *t, int code, char *s, const char *name, unsigned int IDforACK)
   1774          {
   \                     AddStringToLog:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   \   00000004   90D04DE2           SUB      SP,SP,#+144
   \   00000008   AC809DE5           LDR      R8,[SP, #+172]
   \   0000000C   0040A0E1           MOV      R4,R0
   \   00000010   0150A0E1           MOV      R5,R1
   \   00000014   0270A0E1           MOV      R7,R2
   \   00000018   0360A0E1           MOV      R6,R3
   1775            char hs[128], *lastX;
   1776            TTime tt;
   1777            TDate d;
   1778            GetDateTime(&d,&tt);
   \   0000001C   0D10A0E1           MOV      R1,SP
   \   00000020   08008DE2           ADD      R0,SP,#+8
   \   00000024   B40000EF           SWI      +180
   1779            int i;
   1780          
   1781            if (code==3 && NOT_LOG_SAME_XTXT)
   \   00000028   030055E3           CMP      R5,#+3
   \   0000002C   1600001A           BNE      ??AddStringToLog_0
   \   00000030   70029FE5           LDR      R0,??AddStringToLog_1  ;; NOT_LOG_SAME_XTXT
   \   00000034   000090E5           LDR      R0,[R0, #+0]
   \   00000038   000050E3           CMP      R0,#+0
   \   0000003C   1200000A           BEQ      ??AddStringToLog_0
   1782            {
   1783              if(!t->isactive && HISTORY_BUFFER) GetHistory(t, 64<<HISTORY_BUFFER);
   \   00000040   B40094E5           LDR      R0,[R4, #+180]
   \   00000044   000050E3           CMP      R0,#+0
   \   00000048   0700001A           BNE      ??AddStringToLog_2
   \   0000004C   ........           LDR      R0,??DataTable52  ;; HISTORY_BUFFER
   \   00000050   000090E5           LDR      R0,[R0, #+0]
   \   00000054   000050E3           CMP      R0,#+0
   \   00000058   0300000A           BEQ      ??AddStringToLog_2
   \   0000005C   4010A0E3           MOV      R1,#+64
   \   00000060   1110A0E1           LSL      R1,R1,R0
   \   00000064   0400A0E1           MOV      R0,R4
   \   00000068   ........           _BLF     GetHistory,??GetHistory??rA
   1784              lastX = GetLastXTextLOGQ(t);
   \                     ??AddStringToLog_2:
   \   0000006C   0400A0E1           MOV      R0,R4
   \   00000070   ........           BL       GetLastXTextLOGQ
   1785              if(lastX)
   \   00000074   000050E3           CMP      R0,#+0
   \   00000078   0300000A           BEQ      ??AddStringToLog_0
   1786                if(strcmp(lastX, s) == 0) return;
   \   0000007C   0710A0E1           MOV      R1,R7
   \   00000080   190000EF           SWI      +25
   \   00000084   000050E3           CMP      R0,#+0
   \   00000088   8400000A           BEQ      ??AddStringToLog_3
   1787            }
   1788          
   1789            snprintf(hs,127,"%02d:%02d:%02d %02d-%02d %s:\r\n",tt.hour,tt.min,tt.sec,d.day,d.month,name);
   \                     ??AddStringToLog_0:
   \   0000008C   18929FE5           LDR      R9,??AddStringToLog_1+0x4  ;; `?<Constant "%02d:%02d:%02d %02d-%...">`
   \   00000090   0600A0E1           MOV      R0,R6
   \   00000094   01002DE9           PUSH     {R0}
   \   00000098   1000DDE5           LDRB     R0,[SP, #+16]
   \   0000009C   202089E2           ADD      R2,R9,#+32
   \   000000A0   7F10A0E3           MOV      R1,#+127
   \   000000A4   01002DE9           PUSH     {R0}
   \   000000A8   1500DDE5           LDRB     R0,[SP, #+21]
   \   000000AC   01002DE9           PUSH     {R0}
   \   000000B0   0E00DDE5           LDRB     R0,[SP, #+14]
   \   000000B4   01002DE9           PUSH     {R0}
   \   000000B8   1100DDE5           LDRB     R0,[SP, #+17]
   \   000000BC   01002DE9           PUSH     {R0}
   \   000000C0   1430DDE5           LDRB     R3,[SP, #+20]
   \   000000C4   24008DE2           ADD      R0,SP,#+36
   \   000000C8   1B0100EF           SWI      +283
   1790            if(code != 3 || LOG_XTXT) //Нужно сохранять иксстатус
   \   000000CC   030055E3           CMP      R5,#+3
   \   000000D0   14D08DE2           ADD      SP,SP,#+20
   \   000000D4   0300001A           BNE      ??AddStringToLog_4
   \   000000D8   D0019FE5           LDR      R0,??AddStringToLog_1+0x8  ;; LOG_XTXT
   \   000000DC   000090E5           LDR      R0,[R0, #+0]
   \   000000E0   000050E3           CMP      R0,#+0
   \   000000E4   0400000A           BEQ      ??AddStringToLog_5
   1791              Add2History(t, hs, s, code); // Запись хистори
   \                     ??AddStringToLog_4:
   \   000000E8   0530A0E1           MOV      R3,R5
   \   000000EC   0720A0E1           MOV      R2,R7
   \   000000F0   10108DE2           ADD      R1,SP,#+16
   \   000000F4   0400A0E1           MOV      R0,R4
   \   000000F8   ........           _BLF     Add2History,??Add2History??rA
   1792            LOGQ *p=NewLOGQ(s);
   \                     ??AddStringToLog_5:
   \   000000FC   0700A0E1           MOV      R0,R7
   \   00000100   ........           BL       NewLOGQ
   \   00000104   0070A0E1           MOV      R7,R0
   1793            snprintf(p->hdr,79,"%02d:%02d:%02d %02d-%02d %s:",tt.hour,tt.min,tt.sec,d.day,d.month,name);
   \   00000108   40002DE9           PUSH     {R6}
   \   0000010C   1000DDE5           LDRB     R0,[SP, #+16]
   \   00000110   0920A0E1           MOV      R2,R9
   \   00000114   4F10A0E3           MOV      R1,#+79
   \   00000118   01002DE9           PUSH     {R0}
   \   0000011C   1500DDE5           LDRB     R0,[SP, #+21]
   \   00000120   01002DE9           PUSH     {R0}
   \   00000124   0E00DDE5           LDRB     R0,[SP, #+14]
   \   00000128   01002DE9           PUSH     {R0}
   \   0000012C   1100DDE5           LDRB     R0,[SP, #+17]
   \   00000130   01002DE9           PUSH     {R0}
   \   00000134   1430DDE5           LDRB     R3,[SP, #+20]
   \   00000138   100087E2           ADD      R0,R7,#+16
   \   0000013C   1B0100EF           SWI      +283
   1794          //  snprintf(p->hdr,79,"%s:",name);
   1795            p->type=code;
   \   00000140   0C5087E5           STR      R5,[R7, #+12]
   1796            p->ID=IDforACK;  //0-32767
   \   00000144   088087E5           STR      R8,[R7, #+8]
   1797            i=AddLOGQ(&t->log,p);
   \   00000148   0710A0E1           MOV      R1,R7
   \   0000014C   A80084E2           ADD      R0,R4,#+168
   \   00000150   ........           BL       AddLOGQ
   \   00000154   0060A0E1           MOV      R6,R0
   \   00000158   150056E3           CMP      R6,#+21
   \   0000015C   14D08DE2           ADD      SP,SP,#+20
   \   00000160   090000BA           BLT      ??AddStringToLog_6
   1798            while(i>MAXLOGMSG)
   1799            {
   1800              if (t->log==t->last_log) t->last_log=t->last_log->next;
   \                     ??AddStringToLog_7:
   \   00000164   B00094E5           LDR      R0,[R4, #+176]
   \   00000168   A81094E5           LDR      R1,[R4, #+168]
   1801              RemoveLOGQ(&t->log,t->log);
   1802              i--;
   \   0000016C   016046E2           SUB      R6,R6,#+1
   \   00000170   000051E1           CMP      R1,R0
   \   00000174   00009005           LDREQ    R0,[R0, #+0]
   \   00000178   B0008405           STREQ    R0,[R4, #+176]
   \   0000017C   A80084E2           ADD      R0,R4,#+168
   \   00000180   ........           BL       RemoveLOGQ
   1803            }
   \   00000184   150056E3           CMP      R6,#+21
   \   00000188   F5FFFFAA           BGE      ??AddStringToLog_7
   1804            t->msg_count=i;
   \                     ??AddStringToLog_6:
   \   0000018C   B86084E5           STR      R6,[R4, #+184]
   1805          
   1806            int allsize = 0;
   1807            p = t->log;
   \   00000190   A87094E5           LDR      R7,[R4, #+168]
   \   00000194   0060A0E3           MOV      R6,#+0
   \   00000198   000097E5           LDR      R0,[R7, #+0]
   \   0000019C   000050E3           CMP      R0,#+0
   \   000001A0   1900000A           BEQ      ??AddStringToLog_8
   1808            while(p->next) {allsize+=strlen(p->text);p=p->next;}
   \                     ??AddStringToLog_9:
   \   000001A4   600087E2           ADD      R0,R7,#+96
   \   000001A8   1B0000EF           SWI      +27
   \   000001AC   007097E5           LDR      R7,[R7, #+0]
   \   000001B0   066080E0           ADD      R6,R0,R6
   \   000001B4   000097E5           LDR      R0,[R7, #+0]
   \   000001B8   000050E3           CMP      R0,#+0
   \   000001BC   F8FFFF1A           BNE      ??AddStringToLog_9
   1809          
   1810            while(allsize > MAXCHATSIZE)
   \                     ??AddStringToLog_10:
   \   000001C0   0100A0E3           MOV      R0,#+1
   \   000001C4   700D80E3           ORR      R0,R0,#0x1C00
   \   000001C8   000056E1           CMP      R6,R0
   \   000001CC   0E0000BA           BLT      ??AddStringToLog_8
   1811            {
   1812              if (t->log==t->last_log) t->last_log=t->last_log->next;
   \   000001D0   B00094E5           LDR      R0,[R4, #+176]
   \   000001D4   A81094E5           LDR      R1,[R4, #+168]
   \   000001D8   000051E1           CMP      R1,R0
   \   000001DC   00009005           LDREQ    R0,[R0, #+0]
   \   000001E0   B0008405           STREQ    R0,[R4, #+176]
   1813              allsize -= strlen(t->log->text);
   \   000001E4   600081E2           ADD      R0,R1,#+96
   \   000001E8   1B0000EF           SWI      +27
   1814              RemoveLOGQ(&t->log,t->log);
   \   000001EC   A81094E5           LDR      R1,[R4, #+168]
   \   000001F0   006046E0           SUB      R6,R6,R0
   \   000001F4   A80084E2           ADD      R0,R4,#+168
   \   000001F8   ........           BL       RemoveLOGQ
   1815              t->msg_count--;
   \   000001FC   B80094E5           LDR      R0,[R4, #+184]
   \   00000200   010040E2           SUB      R0,R0,#+1
   \   00000204   B80084E5           STR      R0,[R4, #+184]
   \   00000208   ECFFFFEA           B        ??AddStringToLog_10
   1816            }
   1817          
   1818            if (!t->last_log) t->last_log=p;
   \                     ??AddStringToLog_8:
   \   0000020C   B00094E5           LDR      R0,[R4, #+176]
   1819            if (code==3)
   \   00000210   ........           LDR      R6,??DataTable84  ;; S_ICONS
   \   00000214   000050E3           CMP      R0,#+0
   \   00000218   B0708405           STREQ    R7,[R4, #+176]
   \   0000021C   030055E3           CMP      R5,#+3
   \   00000220   0D00001A           BNE      ??AddStringToLog_11
   1820            {
   1821              if (edchat_id)
   \   00000224   F40096E5           LDR      R0,[R6, #+244]
   \   00000228   000050E3           CMP      R0,#+0
   \   0000022C   1900000A           BEQ      ??AddStringToLog_12
   1822              {
   1823                void *data=FindGUIbyId(edchat_id,NULL);
   \   00000230   F40096E5           LDR      R0,[R6, #+244]
   \   00000234   0010A0E3           MOV      R1,#+0
   \   00000238   090200EF           SWI      +521
   1824                if (data)
   \   0000023C   000050E3           CMP      R0,#+0
   \   00000240   1400000A           BEQ      ??AddStringToLog_12
   1825                {
   1826          	EDCHAT_STRUCT *ed_struct;
   1827          	ed_struct=EDIT_GetUserPointer(data);
   \   00000244   DF0100EF           SWI      +479
   1828          	if (ed_struct)
   \   00000248   000050E3           CMP      R0,#+0
   \   0000024C   1100000A           BEQ      ??AddStringToLog_12
   1829          	{
   1830          	  if (ed_struct->ed_contact==t)
   \   00000250   000090E5           LDR      R0,[R0, #+0]
   \   00000254   040050E1           CMP      R0,R4
   \   00000258   0E00001A           BNE      ??AddStringToLog_12
   1831          	  {
   1832          	    goto L_INC;
   1833          	  }
   1834          	}
   1835                }
   1836              }
   1837              goto L_NOINC;
   1838            }
   1839          L_INC:
   1840            // При приходе нового сообщения
   1841            if (!t->isunread)
   \                     ??AddStringToLog_11:
   \   0000025C   9C0094E5           LDR      R0,[R4, #+156]
   \   00000260   000050E3           CMP      R0,#+0
   1842            {
   1843              // Повышаем счетчик юзеров, от которых пришли новые сообщения
   1844              total_unread++;
   \   00000264   C8009605           LDREQ    R0,[R6, #+200]
   \   00000268   01008002           ADDEQ    R0,R0,#+1
   \   0000026C   C8008605           STREQ    R0,[R6, #+200]
   1845            }
   1846            // Повышаем счетчик непрочитанных сообщений по данному контакту
   1847            t->unreaded++;
   \   00000270   C80094E5           LDR      R0,[R4, #+200]
   \   00000274   010080E2           ADD      R0,R0,#+1
   \   00000278   C80084E5           STR      R0,[R4, #+200]
   1848            // Повышаем общий счетчик непрочитанных сообщений
   1849            messages_unread++;
   \   0000027C   CC0096E5           LDR      R0,[R6, #+204]
   \   00000280   010080E2           ADD      R0,R0,#+1
   \   00000284   CC0086E5           STR      R0,[R6, #+204]
   1850            t->isunread=1;
   \   00000288   0100A0E3           MOV      R0,#+1
   \   0000028C   9C0084E5           STR      R0,[R4, #+156]
   1851            UpdateCSMname();
   \   00000290   ........           BL       UpdateCSMname
   1852          #ifdef ELKA
   1853            UpdateSLIState(); //Twitch
   \   00000294   ........           BL       UpdateSLIState
   1854          #endif
   1855          L_NOINC:
   1856            ChangeContactPos(t);
   \                     ??AddStringToLog_12:
   \   00000298   0400A0E1           MOV      R0,R4
   \   0000029C   ........           _BLF     ChangeContactPos,??ChangeContactPos??rA
   1857          }
   \                     ??AddStringToLog_3:
   \   000002A0   90D08DE2           ADD      SP,SP,#+144      ;; stack cleaning
   \   000002A4   F083BDE8           POP      {R4-R9,PC}       ;; return
   \                     ??AddStringToLog_1:
   \   000002A8   ........           DC32     NOT_LOG_SAME_XTXT
   \   000002AC   ........           DC32     `?<Constant "%02d:%02d:%02d %02d-%...">`
   \   000002B0   ........           DC32     LOG_XTXT
   1858          
   1859          void ParseAnswer(WSHDR *ws, const char *s);
   1860          
   1861          int time_to_stop_t9;
   1862          

   \                                 In segment CODE, align 4, keep-with-next
   1863          void ParseXStatusText(WSHDR *ws, const char *s, int color)
   1864          {
   \                     ParseXStatusText:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0260A0E1           MOV      R6,R2
   1865            int c;
   1866            int flag=0;
   \   00000010   0070A0E3           MOV      R7,#+0
   1867            CutWSTR(ws,0);
   \   00000014   0010A0E3           MOV      R1,#+0
   \   00000018   260100EF           SWI      +294
   1868            if (strlen(s)==1) return;
   \   0000001C   0500A0E1           MOV      R0,R5
   \   00000020   1B0000EF           SWI      +27
   \   00000024   010050E3           CMP      R0,#+1
   \   00000028   F080BD08           POPEQ    {R4-R7,PC}
   1869            wsAppendChar(ws,0xE008);
   \   0000002C   0810A0E3           MOV      R1,#+8
   \   00000030   E01C81E3           ORR      R1,R1,#0xE000
   \   00000034   0400A0E1           MOV      R0,R4
   \   00000038   1C0000EF           SWI      +28
   1870            wsAppendChar(ws,color);
   \   0000003C   0610A0E1           MOV      R1,R6
   \   00000040   0400A0E1           MOV      R0,R4
   \   00000044   1C0000EF           SWI      +28
   1871            wsAppendChar(ws,0xE013);
   \   00000048   1310A0E3           MOV      R1,#+19
   \   0000004C   E01C81E3           ORR      R1,R1,#0xE000
   \   00000050   0A0000EA           B        ??ParseXStatusText_0
   1872            while((c=*s++))
   1873            {
   1874              if (c==13)
   \                     ??ParseXStatusText_1:
   \   00000054   0D0050E3           CMP      R0,#+13
   1875              {
   1876                if (!flag)
   \   00000058   00005703           CMPEQ    R7,#+0
   \   0000005C   0500001A           BNE      ??ParseXStatusText_2
   1877                {
   1878                  flag=1;
   \   00000060   0170A0E3           MOV      R7,#+1
   1879                  wsAppendChar(ws,0xE012);
   \   00000064   1210A0E3           MOV      R1,#+18
   \   00000068   E01C81E3           ORR      R1,R1,#0xE000
   \   0000006C   0400A0E1           MOV      R0,R4
   \   00000070   1C0000EF           SWI      +28
   1880                  c=' ';
   \   00000074   2000A0E3           MOV      R0,#+32
   1881                }
   1882              }
   1883              wsAppendChar(ws,char8to16(c));
   \                     ??ParseXStatusText_2:
   \   00000078   ........           _BLF     char8to16,??char8to16??rA
   \   0000007C   0010A0E1           MOV      R1,R0
   \                     ??ParseXStatusText_0:
   \   00000080   0400A0E1           MOV      R0,R4
   \   00000084   1C0000EF           SWI      +28
   1884            }
   \   00000088   ........           LDRB     R0,[R5], #+1
   \   0000008C   000050E3           CMP      R0,#+0
   \   00000090   EFFFFF1A           BNE      ??ParseXStatusText_1
   \   00000094   F080BDE8           POP      {R4-R7,PC}       ;; return
   1885          }
   1886          //Добавление итемов в чат при получении нового сообщения

   \                                 In segment CODE, align 4, keep-with-next
   1887          void AddMsgToChat(void *data)
   1888          {
   \                     AddMsgToChat:
   \   00000000   F14F2DE9           PUSH     {R0,R4-R11,LR}
   \   00000004   40D04DE2           SUB      SP,SP,#+64
   1889            LOGQ *p;
   1890            EDITCONTROL ec;
   1891            EDITC_OPTIONS ec_options;
   1892            EDCHAT_STRUCT *ed_struct;
   1893            int j;
   1894            int color, font, type;
   1895            int zc;
   1896            if (!data) return;
   \   00000008   000050E3           CMP      R0,#+0
   \   0000000C   CF00000A           BEQ      ??AddMsgToChat_0
   1897            ed_struct=EDIT_GetUserPointer(data);
   \   00000010   DF0100EF           SWI      +479
   \   00000014   0060B0E1           MOVS     R6,R0
   1898            if (!ed_struct) return;
   \   00000018   CC00000A           BEQ      ??AddMsgToChat_0
   1899            if (!ed_struct->ed_contact->isunread) return;
   \   0000001C   000096E5           LDR      R0,[R6, #+0]
   \   00000020   9C1090E5           LDR      R1,[R0, #+156]
   \   00000024   000051E3           CMP      R1,#+0
   \   00000028   C800000A           BEQ      ??AddMsgToChat_0
   1900          
   1901            p=ed_struct->ed_contact->last_log;
   \   0000002C   B07090E5           LDR      R7,[R0, #+176]
   1902            if (p)
   \   00000030   ........           LDR      R8,??DataTable84  ;; S_ICONS
   \   00000034   000057E3           CMP      R7,#+0
   \   00000038   A800000A           BEQ      ??AddMsgToChat_1
   1903            {
   1904              while(p)
   1905              {
   1906                font = ED_H_FONT_SIZE;
   1907                if ((zc=p->acked&3))
   \                     ??AddMsgToChat_2:
   \   0000003C   ........           LDR      R2,??DataTable55  ;; ED_X_FONT_SIZE
   \   00000040   ........           LDR      R0,??DataTable77  ;; ED_H_FONT_SIZE
   \   00000044   002092E5           LDR      R2,[R2, #+0]
   \   00000048   ........           LDR      R1,??DataTable57  ;; X_COLOR
   \   0000004C   00A090E5           LDR      R10,[R0, #+0]
   \   00000050   040097E5           LDR      R0,[R7, #+4]
   \   00000054   00208DE5           STR      R2,[SP, #+0]
   \   00000058   004091E5           LDR      R4,[R1, #+0]
   \   0000005C   ........           LDR      R1,??DataTable58  ;; O_ED_X_FONT_SIZE
   \   00000060   030010E2           ANDS     R0,R0,#0x3
   \   00000064   009091E5           LDR      R9,[R1, #+0]
   \   00000068   ........           LDR      R1,??DataTable59  ;; O_X_COLOR
   \   0000006C   005091E5           LDR      R5,[R1, #+0]
   \   00000070   ........           LDR      R1,??DataTable74  ;; I_COLOR
   \   00000074   00B091E5           LDR      R11,[R1, #+0]
   \   00000078   0300000A           BEQ      ??AddMsgToChat_3
   1908                {
   1909          	if (zc==1)
   \   0000007C   010050E3           CMP      R0,#+1
   \   00000080   1E00001A           BNE      ??AddMsgToChat_4
   1910          	  color=ACK_COLOR; //Зеленый
   \   00000084   ........           LDR      R0,??DataTable70  ;; ACK_COLOR
   \   00000088   1B0000EA           B        ??AddMsgToChat_5
   1911          	else
   1912          	  color=I_COLOR;
   1913                }
   1914                else
   1915                {
   1916          	if (p->ID==0xFFFFFFFF)
   \                     ??AddMsgToChat_3:
   \   0000008C   080097E5           LDR      R0,[R7, #+8]
   \   00000090   010070E3           CMN      R0,#+1
   \   00000094   1700001A           BNE      ??AddMsgToChat_6
   1917                  {
   1918                    type = p->type&0x0F;
   \   00000098   0C0097E5           LDR      R0,[R7, #+12]
   \   0000009C   0F1000E2           AND      R1,R0,#0xF
   1919                    if(p->type&0x10)
   \   000000A0   100010E3           TST      R0,#0x10
   \   000000A4   0B00000A           BEQ      ??AddMsgToChat_7
   1920                    {
   1921                      color = (type==1)?O_I_COLOR:((type==3)?O_X_COLOR:O_TO_COLOR);
   \   000000A8   010051E3           CMP      R1,#+1
   \   000000AC   ........           LDREQ    R0,??DataTable72  ;; O_I_COLOR
   \   000000B0   0400000A           BEQ      ??AddMsgToChat_8
   \   000000B4   030051E3           CMP      R1,#+3
   \   000000B8   05B0A001           MOVEQ    R11,R5
   \   000000BC   09A0A001           MOVEQ    R10,R9
   \   000000C0   0E00000A           BEQ      ??AddMsgToChat_4
   \   000000C4   ........           LDR      R0,??DataTable71  ;; O_TO_COLOR
   \                     ??AddMsgToChat_8:
   \   000000C8   00B090E5           LDR      R11,[R0, #+0]
   \   000000CC   ........           LDR      R0,??DataTable76  ;; O_ED_H_FONT_SIZE
   \   000000D0   00A090E5           LDR      R10,[R0, #+0]
   \   000000D4   090000EA           B        ??AddMsgToChat_4
   1922                      font = (type==3)?O_ED_X_FONT_SIZE:O_ED_H_FONT_SIZE;
   1923                    }
   1924                    else
   1925                    {
   1926                      color = (type==1)?I_COLOR:((type==3)?X_COLOR:TO_COLOR);
   \                     ??AddMsgToChat_7:
   \   000000D8   010051E3           CMP      R1,#+1
   \   000000DC   0700000A           BEQ      ??AddMsgToChat_4
   \   000000E0   030051E3           CMP      R1,#+3
   \   000000E4   04B0A001           MOVEQ    R11,R4
   \   000000E8   02A0A001           MOVEQ    R10,R2
   \   000000EC   0300000A           BEQ      ??AddMsgToChat_4
   \   000000F0   ........           LDR      R0,??DataTable73  ;; TO_COLOR
   \   000000F4   000000EA           B        ??AddMsgToChat_5
   1927                      font = (type==3)?ED_X_FONT_SIZE:ED_H_FONT_SIZE;
   1928                    }
   1929                  }
   1930                  else
   1931          	  color=UNACK_COLOR; //Серый
   \                     ??AddMsgToChat_6:
   \   000000F8   ........           LDR      R0,??DataTable75  ;; UNACK_COLOR
   \                     ??AddMsgToChat_5:
   \   000000FC   00B090E5           LDR      R11,[R0, #+0]
   1932                }
   1933                PrepareEditControl(&ec);
   \                     ??AddMsgToChat_4:
   \   00000100   14008DE2           ADD      R0,SP,#+20
   \   00000104   640100EF           SWI      +356
   1934                if ((p->type&0x0F)!=3)
   \   00000108   0C0097E5           LDR      R0,[R7, #+12]
   \   0000010C   0F0000E2           AND      R0,R0,#0xF
   \   00000110   030050E3           CMP      R0,#+3
   \   00000114   0800000A           BEQ      ??AddMsgToChat_9
   1935                {
   1936                  ascii2ws(ews,p->hdr);
   \   00000118   980098E5           LDR      R0,[R8, #+152]
   \   0000011C   101087E2           ADD      R1,R7,#+16
   \   00000120   ........           _BLF     ascii2ws,??ascii2ws??rA
   1937                  ConstructEditControl(&ec,ECT_HEADER,ECF_APPEND_EOL,ews,ews->wsbody[0]);
   \   00000124   983098E5           LDR      R3,[R8, #+152]
   \   00000128   4020A0E3           MOV      R2,#+64
   \   0000012C   000093E5           LDR      R0,[R3, #+0]
   \   00000130   B000D0E1           LDRH     R0,[R0, #+0]
   \   00000134   01002DE9           PUSH     {R0}
   \   00000138   030000EA           B        ??AddMsgToChat_10
   1938                }
   1939                else
   1940                  ConstructEditControl(&ec,ECT_HEADER,ECF_DELSTR,ews,0);
   \                     ??AddMsgToChat_9:
   \   0000013C   0000A0E3           MOV      R0,#+0
   \   00000140   01002DE9           PUSH     {R0}
   \   00000144   983098E5           LDR      R3,[R8, #+152]
   \   00000148   2020A0E3           MOV      R2,#+32
   \                     ??AddMsgToChat_10:
   \   0000014C   0110A0E3           MOV      R1,#+1
   \   00000150   18008DE2           ADD      R0,SP,#+24
   \   00000154   650100EF           SWI      +357
   \   00000158   04D08DE2           ADD      SP,SP,#+4
   1941                PrepareEditCOptions(&ec_options);
   \   0000015C   04008DE2           ADD      R0,SP,#+4
   \   00000160   C80100EF           SWI      +456
   1942                SetPenColorToEditCOptions(&ec_options,color);
   \   00000164   0B10A0E1           MOV      R1,R11
   \   00000168   04008DE2           ADD      R0,SP,#+4
   \   0000016C   CC0100EF           SWI      +460
   1943                SetFontToEditCOptions(&ec_options,font);
   \   00000170   0A10A0E1           MOV      R1,R10
   \   00000174   04008DE2           ADD      R0,SP,#+4
   \   00000178   CA0100EF           SWI      +458
   1944                CopyOptionsToEditControl(&ec,&ec_options);
   \   0000017C   04108DE2           ADD      R1,SP,#+4
   \   00000180   14008DE2           ADD      R0,SP,#+20
   \   00000184   CE0100EF           SWI      +462
   1945                //AddEditControlToEditQend(eq,&ec,ma);
   1946                EDIT_InsertEditControl(data,ed_struct->ed_answer-1,&ec);
   \   00000188   080096E5           LDR      R0,[R6, #+8]
   \   0000018C   14208DE2           ADD      R2,SP,#+20
   \   00000190   011040E2           SUB      R1,R0,#+1
   \   00000194   40009DE5           LDR      R0,[SP, #+64]
   \   00000198   D20100EF           SWI      +466
   1947                ed_struct->ed_answer++;
   \   0000019C   080096E5           LDR      R0,[R6, #+8]
   \   000001A0   010080E2           ADD      R0,R0,#+1
   \   000001A4   080086E5           STR      R0,[R6, #+8]
   1948                if ((p->type&0x0F)!=3)
   \   000001A8   0C0097E5           LDR      R0,[R7, #+12]
   \   000001AC   0F1000E2           AND      R1,R0,#0xF
   \   000001B0   030051E3           CMP      R1,#+3
   \   000001B4   0300000A           BEQ      ??AddMsgToChat_11
   1949                {
   1950                  ParseAnswer(ews,p->text);
   \   000001B8   980098E5           LDR      R0,[R8, #+152]
   \   000001BC   601087E2           ADD      R1,R7,#+96
   \   000001C0   ........           BL       ParseAnswer
   \   000001C4   050000EA           B        ??AddMsgToChat_12
   1951                }
   1952                else
   1953                {
   1954                  ParseXStatusText(ews, p->text, (p->type&0x10)?O_X_COLOR:X_COLOR);
   \                     ??AddMsgToChat_11:
   \   000001C8   100010E3           TST      R0,#0x10
   \   000001CC   980098E5           LDR      R0,[R8, #+152]
   \   000001D0   0520A011           MOVNE    R2,R5
   \   000001D4   0420A001           MOVEQ    R2,R4
   \   000001D8   601087E2           ADD      R1,R7,#+96
   \   000001DC   ........           BL       ParseXStatusText
   1955                }
   1956                PrepareEditControl(&ec);
   \                     ??AddMsgToChat_12:
   \   000001E0   14008DE2           ADD      R0,SP,#+20
   \   000001E4   640100EF           SWI      +356
   1957                ConstructEditControl(&ec,
   1958                                     ECT_NORMAL_TEXT,
   1959                                     ews->wsbody[0] ? ECF_APPEND_EOL|ECF_DISABLE_T9 : ECF_DELSTR,
   1960                                     ews,ews->wsbody[0]);
   \   000001E8   983098E5           LDR      R3,[R8, #+152]
   \   000001EC   000093E5           LDR      R0,[R3, #+0]
   \   000001F0   B010D0E1           LDRH     R1,[R0, #+0]
   \   000001F4   000051E3           CMP      R1,#+0
   \   000001F8   0100A0E1           MOV      R0,R1
   \   000001FC   01002DE9           PUSH     {R0}
   \   00000200   812DA013           MOVNE    R2,#+8256
   \   00000204   2020A003           MOVEQ    R2,#+32
   \   00000208   0310A0E3           MOV      R1,#+3
   \   0000020C   18008DE2           ADD      R0,SP,#+24
   \   00000210   650100EF           SWI      +357
   1961                PrepareEditCOptions(&ec_options);
   \   00000214   08008DE2           ADD      R0,SP,#+8
   \   00000218   C80100EF           SWI      +456
   1962          //#ifdef M75
   1963                if ((p->type&0x0F)!=3)
   \   0000021C   0C0097E5           LDR      R0,[R7, #+12]
   \   00000220   04D08DE2           ADD      SP,SP,#+4
   \   00000224   0F1000E2           AND      R1,R0,#0xF
   \   00000228   030051E3           CMP      R1,#+3
   \   0000022C   0400000A           BEQ      ??AddMsgToChat_13
   1964                {
   1965                  SetFontToEditCOptions(&ec_options,(p->type&0x10)?O_ED_FONT_SIZE:ED_FONT_SIZE);
   \   00000230   100010E3           TST      R0,#0x10
   \   00000234   ........           LDRNE    R0,??DataTable67  ;; O_ED_FONT_SIZE
   \   00000238   ........           LDREQ    R0,??DataTable68  ;; ED_FONT_SIZE
   \   0000023C   001090E5           LDR      R1,[R0, #+0]
   \   00000240   080000EA           B        ??AddMsgToChat_14
   1966                }
   1967                else
   1968                {
   1969                  SetPenColorToEditCOptions(&ec_options,(p->type&0x10)?O_X_COLOR:X_COLOR);
   \                     ??AddMsgToChat_13:
   \   00000244   100010E3           TST      R0,#0x10
   \   00000248   0510A011           MOVNE    R1,R5
   \   0000024C   0410A001           MOVEQ    R1,R4
   \   00000250   04008DE2           ADD      R0,SP,#+4
   \   00000254   CC0100EF           SWI      +460
   1970                  SetFontToEditCOptions(&ec_options,(p->type&0x10)?O_ED_X_FONT_SIZE:ED_X_FONT_SIZE);
   \   00000258   0C0097E5           LDR      R0,[R7, #+12]
   \   0000025C   100010E3           TST      R0,#0x10
   \   00000260   00109D05           LDREQ    R1,[SP, #+0]
   \   00000264   0910A011           MOVNE    R1,R9
   \                     ??AddMsgToChat_14:
   \   00000268   04008DE2           ADD      R0,SP,#+4
   \   0000026C   CA0100EF           SWI      +458
   1971                }
   1972          //#else
   1973          //      SetFontToEditCOptions(&ec_options,(p->type&0x10)?O_ED_FONT_SIZE:ED_FONT_SIZE);
   1974          //#endif
   1975                CopyOptionsToEditControl(&ec,&ec_options);
   \   00000270   04108DE2           ADD      R1,SP,#+4
   \   00000274   14008DE2           ADD      R0,SP,#+20
   \   00000278   CE0100EF           SWI      +462
   1976                EDIT_InsertEditControl(data,ed_struct->ed_answer-1,&ec);
   \   0000027C   080096E5           LDR      R0,[R6, #+8]
   \   00000280   14208DE2           ADD      R2,SP,#+20
   \   00000284   011040E2           SUB      R1,R0,#+1
   \   00000288   40009DE5           LDR      R0,[SP, #+64]
   \   0000028C   D20100EF           SWI      +466
   1977                ed_struct->ed_answer++;
   \   00000290   080096E5           LDR      R0,[R6, #+8]
   \   00000294   010080E2           ADD      R0,R0,#+1
   \   00000298   080086E5           STR      R0,[R6, #+8]
   1978                p=p->next;
   \   0000029C   007097E5           LDR      R7,[R7, #+0]
   1979              }
   \   000002A0   000057E3           CMP      R7,#+0
   \   000002A4   64FFFF1A           BNE      ??AddMsgToChat_2
   1980              j=((ed_struct->ed_contact->msg_count+1)*2); //Ожидаемый ed_answer
   \   000002A8   001096E5           LDR      R1,[R6, #+0]
   \   000002AC   B81091E5           LDR      R1,[R1, #+184]
   \   000002B0   011081E2           ADD      R1,R1,#+1
   \   000002B4   8140A0E1           LSL      R4,R1,#+1
   \   000002B8   000054E1           CMP      R4,R0
   \   000002BC   070000AA           BGE      ??AddMsgToChat_1
   1981              while(j<ed_struct->ed_answer)
   1982              {
   1983                EDIT_RemoveEditControl(ed_struct->ed_chatgui,1);
   \                     ??AddMsgToChat_15:
   \   000002C0   040096E5           LDR      R0,[R6, #+4]
   \   000002C4   0110A0E3           MOV      R1,#+1
   \   000002C8   D10100EF           SWI      +465
   1984                ed_struct->ed_answer--;
   \   000002CC   080096E5           LDR      R0,[R6, #+8]
   \   000002D0   010040E2           SUB      R0,R0,#+1
   \   000002D4   080086E5           STR      R0,[R6, #+8]
   1985              }
   \   000002D8   000054E1           CMP      R4,R0
   \   000002DC   F7FFFFBA           BLT      ??AddMsgToChat_15
   1986            }
   1987            ed_struct->ed_contact->last_log=NULL;
   \                     ??AddMsgToChat_1:
   \   000002E0   000096E5           LDR      R0,[R6, #+0]
   \   000002E4   0040A0E3           MOV      R4,#+0
   \   000002E8   B04080E5           STR      R4,[R0, #+176]
   1988            if (IsGuiOnTop(edchat_id)) // Если открыт активный чат
   \   000002EC   F40098E5           LDR      R0,[R8, #+244]
   \   000002F0   350100EF           SWI      +309
   \   000002F4   000050E3           CMP      R0,#+0
   \   000002F8   0A00000A           BEQ      ??AddMsgToChat_16
   1989            {
   1990              // Понижаем счетчик контактов с непрочитанными
   1991              total_unread--;
   \   000002FC   C80098E5           LDR      R0,[R8, #+200]
   1992              // Понижаем счетчик непрочитанных
   1993              messages_unread =     messages_unread - ed_struct->ed_contact->unreaded;
   \   00000300   CC1098E5           LDR      R1,[R8, #+204]
   \   00000304   010040E2           SUB      R0,R0,#+1
   \   00000308   C80088E5           STR      R0,[R8, #+200]
   \   0000030C   000096E5           LDR      R0,[R6, #+0]
   \   00000310   C82090E5           LDR      R2,[R0, #+200]
   \   00000314   021041E0           SUB      R1,R1,R2
   \   00000318   CC1088E5           STR      R1,[R8, #+204]
   1994              // Обнуляем счетчик непрочитанных по данному контакту
   1995              ed_struct->ed_contact->unreaded = 0;
   \   0000031C   C84080E5           STR      R4,[R0, #+200]
   1996              ed_struct->ed_contact->isunread=0;
   \   00000320   9C4080E5           STR      R4,[R0, #+156]
   \   00000324   050000EA           B        ??AddMsgToChat_17
   1997            }
   1998            else
   1999            {
   2000              // Пришло сообщение при свернутом чате
   2001              ed_struct->requested_decrement_total_unread++;
   \                     ??AddMsgToChat_16:
   \   00000328   0C0096E5           LDR      R0,[R6, #+12]
   2002              ed_struct->ed_contact->isunread=1;
   \   0000032C   0110A0E3           MOV      R1,#+1
   \   00000330   010080E2           ADD      R0,R0,#+1
   \   00000334   0C0086E5           STR      R0,[R6, #+12]
   \   00000338   000096E5           LDR      R0,[R6, #+0]
   \   0000033C   9C1080E5           STR      R1,[R0, #+156]
   2003            }
   2004            UpdateCSMname();
   \                     ??AddMsgToChat_17:
   \   00000340   ........           BL       UpdateCSMname
   2005          #ifdef ELKA
   2006            UpdateSLIState(); //Twitch
   \   00000344   ........           BL       UpdateSLIState
   2007          #endif
   2008            ChangeContactPos(ed_struct->ed_contact);
   \   00000348   000096E5           LDR      R0,[R6, #+0]
   \   0000034C   ........           _BLF     ChangeContactPos,??ChangeContactPos??rA
   2009            //  EDIT_SetFocus(data,ed_struct->ed_answer);
   2010          }
   \                     ??AddMsgToChat_0:
   \   00000350   44D08DE2           ADD      SP,SP,#+68       ;; stack cleaning
   \   00000354   F08FBDE8           POP      {R4-R11,PC}      ;; return
   2011          
   2012          //Рисуем подтверждения непосредственно

   \                                 In segment CODE, align 4, keep-with-next
   2013          void DrawAck(void *data)
   2014          {
   \                     DrawAck:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   3CD04DE2           SUB      SP,SP,#+60
   \   00000008   0040B0E1           MOVS     R4,R0
   2015            LOGQ *p;
   2016            EDITCONTROL ec;
   2017            EDITC_OPTIONS ec_options;
   2018            EDCHAT_STRUCT *ed_struct;
   2019            int j;
   2020            int color;
   2021            int dorefresh=0;
   \   0000000C   0060A0E3           MOV      R6,#+0
   2022            if (!data) return;
   \   00000010   4C00000A           BEQ      ??DrawAck_0
   2023            ed_struct=EDIT_GetUserPointer(data);
   \   00000014   DF0100EF           SWI      +479
   2024            if (!ed_struct) return;
   \   00000018   000050E3           CMP      R0,#+0
   \   0000001C   4900000A           BEQ      ??DrawAck_0
   2025            p=ed_struct->ed_contact->log;
   \   00000020   001090E5           LDR      R1,[R0, #+0]
   2026            j=ed_struct->ed_answer;
   2027            j-=(ed_struct->ed_contact->msg_count*2)+1; //Номер собственно хедера верхнего итема
   \   00000024   080090E5           LDR      R0,[R0, #+8]
   \   00000028   A85091E5           LDR      R5,[R1, #+168]
   \   0000002C   B81091E5           LDR      R1,[R1, #+184]
   \   00000030   000055E3           CMP      R5,#+0
   \   00000034   810040E0           SUB      R0,R0,R1, LSL #+1
   \   00000038   017040E2           SUB      R7,R0,#+1
   \   0000003C   3A00000A           BEQ      ??DrawAck_1
   2028            while(p)
   2029            {
   2030              if (j>=1) //Пока возможно лишнее
   \                     ??DrawAck_2:
   \   00000040   010057E3           CMP      R7,#+1
   \   00000044   340000BA           BLT      ??DrawAck_3
   2031              {
   2032                if (!(p->acked&4))
   \   00000048   040095E5           LDR      R0,[R5, #+4]
   \   0000004C   040010E3           TST      R0,#0x4
   \   00000050   3100001A           BNE      ??DrawAck_3
   2033                {
   2034          	ExtractEditControl(data,j,&ec);
   \   00000054   10208DE2           ADD      R2,SP,#+16
   \   00000058   0710A0E1           MOV      R1,R7
   \   0000005C   0400A0E1           MOV      R0,R4
   \   00000060   690100EF           SWI      +361
   2035          	PrepareEditCOptions(&ec_options);
   \   00000064   0D00A0E1           MOV      R0,SP
   \   00000068   C80100EF           SWI      +456
   2036          	if (p->acked)
   \   0000006C   040095E5           LDR      R0,[R5, #+4]
   \   00000070   000050E3           CMP      R0,#+0
   \   00000074   0300000A           BEQ      ??DrawAck_4
   2037          	{
   2038          	  if (p->acked==1)
   \   00000078   010050E3           CMP      R0,#+1
   \   0000007C   ........           LDRNE    R0,??DataTable74  ;; I_COLOR
   2039          	    color=ACK_COLOR; //Зеленый
   \   00000080   ........           LDREQ    R0,??DataTable70  ;; ACK_COLOR
   \   00000084   0F0000EA           B        ??DrawAck_5
   2040          	  else
   2041          	    color=I_COLOR;
   2042          	}
   2043          	else
   2044          	{
   2045          	  if (p->ID==0xFFFFFFFF)
   \                     ??DrawAck_4:
   \   00000088   080095E5           LDR      R0,[R5, #+8]
   \   0000008C   010070E3           CMN      R0,#+1
   \   00000090   0B00001A           BNE      ??DrawAck_6
   2046          	    color=(p->type&0x10)?(((p->type&0x0F)==1)?O_I_COLOR:O_TO_COLOR):(((p->type&0x0F)==1)?I_COLOR:TO_COLOR);
   \   00000094   0C0095E5           LDR      R0,[R5, #+12]
   \   00000098   100010E3           TST      R0,#0x10
   \   0000009C   0F0000E2           AND      R0,R0,#0xF
   \   000000A0   0300000A           BEQ      ??DrawAck_7
   \   000000A4   010050E3           CMP      R0,#+1
   \   000000A8   ........           LDRNE    R0,??DataTable71  ;; O_TO_COLOR
   \   000000AC   ........           LDREQ    R0,??DataTable72  ;; O_I_COLOR
   \   000000B0   040000EA           B        ??DrawAck_5
   \                     ??DrawAck_7:
   \   000000B4   010050E3           CMP      R0,#+1
   \   000000B8   ........           LDRNE    R0,??DataTable73  ;; TO_COLOR
   \   000000BC   ........           LDREQ    R0,??DataTable74  ;; I_COLOR
   \   000000C0   000000EA           B        ??DrawAck_5
   2047          	  else
   2048          	    color=UNACK_COLOR; //Серый
   \                     ??DrawAck_6:
   \   000000C4   ........           LDR      R0,??DataTable75  ;; UNACK_COLOR
   2049          	}
   2050          	SetPenColorToEditCOptions(&ec_options,color/*p->type==1?I_COLOR:TO_COLOR*/);
   2051          	SetFontToEditCOptions(&ec_options,(p->type&0x10)?O_ED_H_FONT_SIZE:ED_H_FONT_SIZE);
   2052          	CopyOptionsToEditControl(&ec,&ec_options);
   2053          	StoreEditControl(data,j,&ec);
   2054          	p->acked|=4; //Обработали
   2055          	dorefresh=1;
   \                     ??DrawAck_5:
   \   000000C8   0160A0E3           MOV      R6,#+1
   \   000000CC   001090E5           LDR      R1,[R0, #+0]
   \   000000D0   0D00A0E1           MOV      R0,SP
   \   000000D4   CC0100EF           SWI      +460
   \   000000D8   0C0095E5           LDR      R0,[R5, #+12]
   \   000000DC   100010E3           TST      R0,#0x10
   \   000000E0   ........           LDRNE    R0,??DataTable76  ;; O_ED_H_FONT_SIZE
   \   000000E4   ........           LDREQ    R0,??DataTable77  ;; ED_H_FONT_SIZE
   \   000000E8   001090E5           LDR      R1,[R0, #+0]
   \   000000EC   0D00A0E1           MOV      R0,SP
   \   000000F0   CA0100EF           SWI      +458
   \   000000F4   0D10A0E1           MOV      R1,SP
   \   000000F8   10008DE2           ADD      R0,SP,#+16
   \   000000FC   CE0100EF           SWI      +462
   \   00000100   10208DE2           ADD      R2,SP,#+16
   \   00000104   0710A0E1           MOV      R1,R7
   \   00000108   0400A0E1           MOV      R0,R4
   \   0000010C   6A0100EF           SWI      +362
   \   00000110   040095E5           LDR      R0,[R5, #+4]
   \   00000114   040080E3           ORR      R0,R0,#0x4
   \   00000118   040085E5           STR      R0,[R5, #+4]
   2056                }
   2057              }
   2058              j+=2;
   2059              p=p->next;
   \                     ??DrawAck_3:
   \   0000011C   005095E5           LDR      R5,[R5, #+0]
   \   00000120   027087E2           ADD      R7,R7,#+2
   2060            }
   \   00000124   000055E3           CMP      R5,#+0
   \   00000128   C4FFFF1A           BNE      ??DrawAck_2
   2061            if (IsGuiOnTop(edchat_id)&&dorefresh) RefreshGUI();
   \                     ??DrawAck_1:
   \   0000012C   1C009FE5           LDR      R0,??DrawAck_8   ;; S_ICONS + 244
   \   00000130   000090E5           LDR      R0,[R0, #+0]
   \   00000134   350100EF           SWI      +309
   \   00000138   000050E3           CMP      R0,#+0
   \   0000013C   00005613           CMPNE    R6,#+0
   \   00000140   0000000A           BEQ      ??DrawAck_0
   \   00000144   960100EF           SWI      +406
   \                     ??DrawAck_0:
   \   00000148   3CD08DE2           ADD      SP,SP,#+60       ;; stack cleaning
   \   0000014C   F080BDE8           POP      {R4-R7,PC}       ;; return
   \                     ??DrawAck_8:
   \   00000150   ........           DC32     S_ICONS + 244
   2062          }
   2063          

   \                                 In segment CODE, align 4, keep-with-next
   2064          void ask_my_info(void)
   2065          {
   2066            /*  TPKT *p;
   2067            CLIST *t;
   2068            p=malloc(sizeof(PKT));
   2069            p->pkt.uin=UIN;
   2070            p->pkt.type=T_REQINFOSHORT;
   2071            p->pkt.data_len=0;
   2072            //  AddStringToLog(t,0x01,"Request info...",I_str);
   2073            SUBPROC((void *)SendAnswer,0,p);*/
   2074          }
   \                     ask_my_info:
   \   00000000   1EFF2FE1           BX       LR               ;; return
   2075          

   \                                 In segment CODE, align 4, keep-with-next
   2076          void set_my_status(void)
   2077          {
   \                     set_my_status:
   \   00000000   00402DE9           PUSH     {LR}
   2078            TPKT *p;
   2079            p=malloc(sizeof(PKT)+1);
   \   00000004   0900A0E3           MOV      R0,#+9
   \   00000008   140000EF           SWI      +20
   2080            p->pkt.uin=0;               // Никому; поле нужно проигнорировать на сервере
   \   0000000C   0010A0E3           MOV      R1,#+0
   \   00000010   001080E5           STR      R1,[R0, #+0]
   2081            p->pkt.type=T_MY_STATUS_CH; // Тип пакета: изменение статуса
   \   00000014   0F10A0E3           MOV      R1,#+15
   \   00000018   B410C0E1           STRH     R1,[R0, #+4]
   2082            p->pkt.data_len=1;          // Длина пакета: 1 байт
   \   0000001C   0110A0E3           MOV      R1,#+1
   \   00000020   B610C0E1           STRH     R1,[R0, #+6]
   2083            p->data[0]=CurrentStatus;
   \   00000024   ........           LDR      R1,??DataTable78  ;; S_ICONS + 180
   2084            SUBPROC((void *)SendAnswer,0,p);
   \   00000028   0020A0E1           MOV      R2,R0
   \   0000002C   001091E5           LDR      R1,[R1, #+0]
   \   00000030   0810C0E5           STRB     R1,[R0, #+8]
   \   00000034   ........           LDR      R0,??DataTable81  ;; SendAnswer
   \   00000038   0010A0E3           MOV      R1,#+0
   \   0000003C   710100EF           SWI      +369
   2085          }
   \   00000040   0080BDE8           POP      {PC}             ;; return
   2086          

   \                                 In segment CODE, align 4, keep-with-next
   2087          void set_my_xstatus(void)
   2088          {
   \                     set_my_xstatus:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   2089            TPKT *p;
   2090            char *s1;
   2091            char *s2;
   2092            int l1;
   2093            int l2;
   2094            p=malloc(sizeof(PKT)+1);
   2095            p->pkt.uin=0;               // Никому; поле нужно проигнорировать на сервере
   2096            p->pkt.type=T_MY_XSTATUS_CH; // Тип пакета: изменение статуса
   2097            p->pkt.data_len=1;          // Длина пакета: 1 байт
   2098            p->data[0]=CurrentXStatus;
   \   00000004   ........           LDR      R8,??DataTable84  ;; S_ICONS
   2099            SUBPROC((void *)SendAnswer,0,p);
   \   00000008   ........           LDR      R6,??DataTable81  ;; SendAnswer
   \   0000000C   0CD04DE2           SUB      SP,SP,#+12
   \   00000010   0900A0E3           MOV      R0,#+9
   \   00000014   140000EF           SWI      +20
   \   00000018   0040A0E1           MOV      R4,R0
   \   0000001C   0050A0E3           MOV      R5,#+0
   \   00000020   005084E5           STR      R5,[R4, #+0]
   \   00000024   1600A0E3           MOV      R0,#+22
   \   00000028   B400C4E1           STRH     R0,[R4, #+4]
   \   0000002C   0100A0E3           MOV      R0,#+1
   \   00000030   B600C4E1           STRH     R0,[R4, #+6]
   \   00000034   B80098E5           LDR      R0,[R8, #+184]
   \   00000038   0420A0E1           MOV      R2,R4
   \   0000003C   0800C4E5           STRB     R0,[R4, #+8]
   \   00000040   0010A0E3           MOV      R1,#+0
   \   00000044   0600A0E1           MOV      R0,R6
   \   00000048   710100EF           SWI      +369
   2100            s1=GetXStatusStr(CurrentXStatus*3+1,&l1);
   \   0000004C   B80098E5           LDR      R0,[R8, #+184]
   \   00000050   0D10A0E1           MOV      R1,SP
   \   00000054   800080E0           ADD      R0,R0,R0, LSL #+1
   \   00000058   010080E2           ADD      R0,R0,#+1
   \   0000005C   ........           _BLF     GetXStatusStr,??GetXStatusStr??rA
   \   00000060   0070A0E1           MOV      R7,R0
   2101            s2=GetXStatusStr(CurrentXStatus*3+2,&l2);
   \   00000064   B80098E5           LDR      R0,[R8, #+184]
   \   00000068   04108DE2           ADD      R1,SP,#+4
   \   0000006C   800080E0           ADD      R0,R0,R0, LSL #+1
   \   00000070   020080E2           ADD      R0,R0,#+2
   \   00000074   ........           _BLF     GetXStatusStr,??GetXStatusStr??rA
   \   00000078   0080A0E1           MOV      R8,R0
   2102            if ((!s1)||(!s2)) return;
   \   0000007C   000057E3           CMP      R7,#+0
   \   00000080   00005813           CMPNE    R8,#+0
   \   00000084   F781BD08           POPEQ    {R0-R2,R4-R8,PC}
   2103            p=malloc(sizeof(PKT)+l1+l2+1);
   \   00000088   00009DE5           LDR      R0,[SP, #+0]
   \   0000008C   04109DE5           LDR      R1,[SP, #+4]
   \   00000090   000081E0           ADD      R0,R1,R0
   \   00000094   090080E2           ADD      R0,R0,#+9
   \   00000098   140000EF           SWI      +20
   \   0000009C   0040A0E1           MOV      R4,R0
   2104            p->pkt.uin=0;
   \   000000A0   005084E5           STR      R5,[R4, #+0]
   2105            p->pkt.type=T_XTEXT_SET;
   \   000000A4   1A00A0E3           MOV      R0,#+26
   \   000000A8   B400C4E1           STRH     R0,[R4, #+4]
   2106            p->pkt.data_len=l1+l2+1;
   \   000000AC   00009DE5           LDR      R0,[SP, #+0]
   \   000000B0   04109DE5           LDR      R1,[SP, #+4]
   \   000000B4   000081E0           ADD      R0,R1,R0
   \   000000B8   010080E2           ADD      R0,R0,#+1
   \   000000BC   B600C4E1           STRH     R0,[R4, #+6]
   2107            strncpy(p->data+0,s1,l1);
   \   000000C0   00209DE5           LDR      R2,[SP, #+0]
   \   000000C4   0710A0E1           MOV      R1,R7
   \   000000C8   080084E2           ADD      R0,R4,#+8
   \   000000CC   160100EF           SWI      +278
   2108            p->data[l1]=0;
   \   000000D0   00009DE5           LDR      R0,[SP, #+0]
   2109            strncpy(p->data+l1+1,s2,l2);
   \   000000D4   0810A0E1           MOV      R1,R8
   \   000000D8   040080E0           ADD      R0,R0,R4
   \   000000DC   0850C0E5           STRB     R5,[R0, #+8]
   \   000000E0   00009DE5           LDR      R0,[SP, #+0]
   \   000000E4   04209DE5           LDR      R2,[SP, #+4]
   \   000000E8   040080E0           ADD      R0,R0,R4
   \   000000EC   090080E2           ADD      R0,R0,#+9
   \   000000F0   160100EF           SWI      +278
   2110            SUBPROC((void *)SendAnswer,0,p);
   \   000000F4   0420A0E1           MOV      R2,R4
   \   000000F8   0010A0E3           MOV      R1,#+0
   \   000000FC   0600A0E1           MOV      R0,R6
   \   00000100   710100EF           SWI      +369
   2111          }
   \   00000104   F781BDE8           POP      {R0-R2,R4-R8,PC}  ;; return
   2112          

   \                                 In segment CODE, align 4, keep-with-next
   2113          void to_develop(void)
   2114          {
   2115            if (silenthide) return;
   \                     to_develop:
   \   00000000   ........           LDR      R0,??DataTable84  ;; S_ICONS
   \   00000004   00402DE9           PUSH     {LR}
   \   00000008   9C1090E5           LDR      R1,[R0, #+156]
   \   0000000C   000051E3           CMP      R1,#+0
   \   00000010   0080BD18           POPNE    {PC}
   2116            gipc.name_to=ipc_xtask_name;
   \   00000014   ........           LDR      R1,??DataTable95  ;; Canvas
   2117            gipc.name_from=ipc_my_name;
   2118            gipc.data=(void *)maincsm_id;
   2119            GBS_SendMessage(MMI_CEPID,MSG_IPC,IPC_XTASK_SHOW_CSM,&gipc);
   \   00000018   743080E2           ADD      R3,R0,#+116
   \   0000001C   5E2F81E2           ADD      R2,R1,#+376
   \   00000020   561F81E2           ADD      R1,R1,#+344
   \   00000024   781080E5           STR      R1,[R0, #+120]
   \   00000028   8C1090E5           LDR      R1,[R0, #+140]
   \   0000002C   742080E5           STR      R2,[R0, #+116]
   \   00000030   7C1080E5           STR      R1,[R0, #+124]
   \   00000034   0220A0E3           MOV      R2,#+2
   \   00000038   B010A0E3           MOV      R1,#+176
   \   0000003C   DE1C81E3           ORR      R1,R1,#0xDE00
   \   00000040   0900A0E3           MOV      R0,#+9
   \   00000044   420C80E3           ORR      R0,R0,#0x4200
   \   00000048   000100EF           SWI      +256
   2120          }
   \   0000004C   0080BDE8           POP      {PC}             ;; return
   2121          

   \                                 In segment CODE, align 4, keep-with-next
   2122          void ReqAddMsgToChat(CLIST *t)
   2123          {
   \                     ReqAddMsgToChat:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   2124            if (edchat_id)
   \   00000004   ........           LDR      R5,??DataTable84  ;; S_ICONS
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   F40095E5           LDR      R0,[R5, #+244]
   \   00000010   000050E3           CMP      R0,#+0
   \   00000014   7080BD08           POPEQ    {R4-R6,PC}
   2125            {
   2126              void *data=FindGUIbyId(edchat_id,NULL);
   \   00000018   F40095E5           LDR      R0,[R5, #+244]
   \   0000001C   0010A0E3           MOV      R1,#+0
   \   00000020   090200EF           SWI      +521
   \   00000024   0060A0E1           MOV      R6,R0
   2127              {
   2128                EDCHAT_STRUCT *ed_struct;
   2129                ed_struct=EDIT_GetUserPointer(data);
   \   00000028   DF0100EF           SWI      +479
   2130                if (ed_struct)
   \   0000002C   000050E3           CMP      R0,#+0
   \   00000030   7080BD08           POPEQ    {R4-R6,PC}
   2131                {
   2132                  if (ed_struct->ed_contact==t)
   \   00000034   000090E5           LDR      R0,[R0, #+0]
   \   00000038   040050E1           CMP      R0,R4
   \   0000003C   7080BD18           POPNE    {R4-R6,PC}
   2133                  {
   2134                    if (EDIT_IsBusy(data))
   \   00000040   0600A0E1           MOV      R0,R6
   \   00000044   1C0200EF           SWI      +540
   \   00000048   000050E3           CMP      R0,#+0
   \   0000004C   0400000A           BEQ      ??ReqAddMsgToChat_0
   2135                    {
   2136                      t->req_add=1;
   \   00000050   0100A0E3           MOV      R0,#+1
   \   00000054   A00084E5           STR      R0,[R4, #+160]
   2137                      time_to_stop_t9=3;
   \   00000058   0300A0E3           MOV      R0,#+3
   \   0000005C   000185E5           STR      R0,[R5, #+256]
   \   00000060   7080BDE8           POP      {R4-R6,PC}
   2138                    }
   2139                    else
   2140                    {
   2141                      AddMsgToChat(data);
   \                     ??ReqAddMsgToChat_0:
   \   00000064   0600A0E1           MOV      R0,R6
   \   00000068   ........           BL       AddMsgToChat
   2142                      DirectRedrawGUI_ID(edchat_id);
   \   0000006C   F40095E5           LDR      R0,[R5, #+244]
   \   00000070   400100EF           SWI      +320
   2143          	  }
   2144          	}
   2145                }
   2146              }
   2147            }
   2148          }
   \   00000074   7080BDE8           POP      {R4-R6,PC}       ;; return
   2149          

   \                                 In segment CODE, align 4, keep-with-next
   2150          void ProcessPacket(TPKT *p)
   2151          {
   \                     ProcessPacket:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000004   40DF4DE2           SUB      SP,SP,#+256
   2152            extern const int VIBR_TYPE, VIBR_ON_CONNECT;
   2153            CLIST *t,*t2;
   2154            LOGQ *q;
   2155            char s[256];
   2156            switch(p->pkt.type)
   \   00000008   ........           LDR      R8,??DataTable95  ;; Canvas
   \   0000000C   ........           LDR      R5,??DataTable103  ;; S_ICONS
   \   00000010   0040A0E1           MOV      R4,R0
   \   00000014   B410D4E1           LDRH     R1,[R4, #+4]
   \   00000018   000094E5           LDR      R0,[R4, #+0]
   \   0000001C   01A0A0E3           MOV      R10,#+1
   \   00000020   0070A0E3           MOV      R7,#+0
   \   00000024   031041E2           SUB      R1,R1,#+3
   \   00000028   220051E3           CMP      R1,#+34
   \   0000002C   E901008A           BHI      ??ProcessPacket_1
   \   00000030   022F8FE2           ADR      R2,??ProcessPacket_0
   \   00000034   8110A0E1           MOV      R1,R1, LSL #+1
   \   00000038   B12092E1           LDRH     R2,[R2, R1]
   \   0000003C   02F18FE0           ADD      PC,PC,R2, LSL #+2
   \                     ??ProcessPacket_0:
   \   00000040   D3001100E501       DC16     +211,+17,+485,+485
   \              E501        
   \   00000048   1400E5017100       DC16     +20,+485,+113,+485
   \              E501        
   \   00000050   E501E501E501       DC16     +485,+485,+485,+485
   \              E501        
   \   00000058   E50144014401       DC16     +485,+324,+324,+485
   \              E501        
   \   00000060   E5013E004C00       DC16     +485,+62,+76,+485
   \              E501        
   \   00000068   E501E5017501       DC16     +485,+485,+373,+485
   \              E501        
   \   00000070   E501E501E501       DC16     +485,+485,+485,+485
   \              E501        
   \   00000078   E301E501E501       DC16     +483,+485,+485,+78
   \              4E00        
   \   00000080   E501E5016B00       DC16     +485,+485,+107,+0
   \              0000        
   2157            {
   2158            case T_LOGIN:
   2159              set_my_status();
   \                     ??ProcessPacket_2:
   \   00000088   ........           BL       set_my_status
   2160              set_my_xstatus();
   \   0000008C   ........           BL       set_my_xstatus
   \   00000090   D00100EA           B        ??ProcessPacket_1
   2161              break;
   2162            case T_CLENTRY:
   2163              if (p->pkt.uin)
   \                     ??ProcessPacket_3:
   \   00000094   000050E3           CMP      R0,#+0
   \   00000098   1800000A           BEQ      ??ProcessPacket_4
   2164              {
   2165                if ((t=FindContactByUin(p->pkt.uin)))
   \   0000009C   ........           _BLF     FindContactByUin,??FindContactByUin??rA
   \   000000A0   0060B0E1           MOVS     R6,R0
   \   000000A4   0E00000A           BEQ      ??ProcessPacket_5
   2166                {
   2167          	//        t->state=0xFFFF;
   2168                  if (!t->local) strncpy(t->name,p->data,63);
   \   000000A8   C40096E5           LDR      R0,[R6, #+196]
   \   000000AC   000050E3           CMP      R0,#+0
   \   000000B0   0300001A           BNE      ??ProcessPacket_6
   \   000000B4   3F20A0E3           MOV      R2,#+63
   \   000000B8   081084E2           ADD      R1,R4,#+8
   \   000000BC   140086E2           ADD      R0,R6,#+20
   \   000000C0   160100EF           SWI      +278
   2169          	t->group=GROUP_CACHE;
   \                     ??ProcessPacket_6:
   \   000000C4   EC0095E5           LDR      R0,[R5, #+236]
   \   000000C8   100086E5           STR      R0,[R6, #+16]
   2170          	ChangeContactPos(t);
   \                     ??ProcessPacket_7:
   \   000000CC   0600A0E1           MOV      R0,R6
   \   000000D0   ........           _BLF     ChangeContactPos,??ChangeContactPos??rA
   2171          	RecountMenu(t, 1);
   \   000000D4   0110A0E3           MOV      R1,#+1
   \   000000D8   0600A0E1           MOV      R0,R6
   \                     ??ProcessPacket_8:
   \   000000DC   ........           BL       RecountMenu
   \   000000E0   BC0100EA           B        ??ProcessPacket_1
   2172                }
   2173                else
   2174                {
   2175                  RecountMenu(AddContact(p->pkt.uin,p->data, GROUP_CACHE, 0),1);
   \                     ??ProcessPacket_5:
   \   000000E4   EC2095E5           LDR      R2,[R5, #+236]
   \   000000E8   000094E5           LDR      R0,[R4, #+0]
   \   000000EC   0030A0E3           MOV      R3,#+0
   \   000000F0   081084E2           ADD      R1,R4,#+8
   \   000000F4   ........           _BLF     AddContact,??AddContact??rA
   \   000000F8   0A10A0E1           MOV      R1,R10
   \   000000FC   F6FFFFEA           B        ??ProcessPacket_8
   2176                }
   2177              }
   2178              else
   2179              {
   2180                if(VIBR_ON_CONNECT)
   \                     ??ProcessPacket_4:
   \   00000100   ........           LDR      R0,??DataTable87  ;; VIBR_ON_CONNECT
   \   00000104   000090E5           LDR      R0,[R0, #+0]
   \   00000108   000050E3           CMP      R0,#+0
   \   0000010C   0100000A           BEQ      ??ProcessPacket_9
   2181                {
   2182                  vibra_count=1;
   \   00000110   C4A085E5           STR      R10,[R5, #+196]
   2183                  start_vibra();
   \   00000114   ........           BL       start_vibra
   2184                }
   2185                GROUP_CACHE=0;
   \                     ??ProcessPacket_9:
   \   00000118   EC7085E5           STR      R7,[R5, #+236]
   2186                ask_my_info();
   2187                if (contactlist_menu_id)
   \   0000011C   F00095E5           LDR      R0,[R5, #+240]
   \   00000120   000050E3           CMP      R0,#+0
   \   00000124   0200000A           BEQ      ??ProcessPacket_10
   2188                {
   2189          	RecountMenu(NULL, 1);
   \   00000128   0110A0E3           MOV      R1,#+1
   \   0000012C   0700A0E1           MOV      R0,R7
   \                     ??ProcessPacket_11:
   \   00000130   E9FFFFEA           B        ??ProcessPacket_8
   2190                }
   2191                else
   2192                  create_contactlist_menu();
   \                     ??ProcessPacket_10:
   \   00000134   ........           BL       create_contactlist_menu
   \   00000138   A60100EA           B        ??ProcessPacket_1
   2193              }
   2194              break;
   2195            case T_GROUPID:
   2196              if (t=FindGroupByID(GROUP_CACHE=p->pkt.uin))
   \                     ??ProcessPacket_12:
   \   0000013C   EC0085E5           STR      R0,[R5, #+236]
   \   00000140   ........           _BLF     FindGroupByID,??FindGroupByID??rA
   \   00000144   0060B0E1           MOVS     R6,R0
   \   00000148   0400000A           BEQ      ??ProcessPacket_13
   2197              {
   2198                strncpy(t->name,p->data,63);
   \   0000014C   3F20A0E3           MOV      R2,#+63
   \   00000150   081084E2           ADD      R1,R4,#+8
   \   00000154   140086E2           ADD      R0,R6,#+20
   \   00000158   160100EF           SWI      +278
   2199                ChangeContactPos(t);
   \   0000015C   DAFFFFEA           B        ??ProcessPacket_7
   2200                RecountMenu(t, 1);
   2201              }
   2202              else
   2203              {
   2204                RecountMenu(AddGroup(p->pkt.uin,p->data), 1);
   \                     ??ProcessPacket_13:
   \   00000160   000094E5           LDR      R0,[R4, #+0]
   \   00000164   081084E2           ADD      R1,R4,#+8
   \   00000168   ........           _BLF     AddGroup,??AddGroup??rA
   \   0000016C   0110A0E3           MOV      R1,#+1
   \   00000170   D9FFFFEA           B        ??ProcessPacket_8
   2205              }
   2206              break;
   2207            case T_GROUPFOLLOW:
   2208              GROUP_CACHE=p->pkt.uin;
   \                     ??ProcessPacket_14:
   \   00000174   EC0085E5           STR      R0,[R5, #+236]
   \   00000178   960100EA           B        ??ProcessPacket_1
   2209              break;
   2210            case T_CONTACTREMOVED:
   2211              t=FindContactByUin(p->pkt.uin);
   \                     ??ProcessPacket_15:
   \   0000017C   ........           _BLF     FindContactByUin,??FindContactByUin??rA
   \   00000180   0060B0E1           MOVS     R6,R0
   2212              if(!t) break;
   \   00000184   9301000A           BEQ      ??ProcessPacket_1
   2213              if (edchat_id)
   \   00000188   F40095E5           LDR      R0,[R5, #+244]
   \   0000018C   000050E3           CMP      R0,#+0
   \   00000190   0E00000A           BEQ      ??ProcessPacket_16
   2214              {
   2215                void *data=FindGUIbyId(edchat_id,NULL);
   \   00000194   F40095E5           LDR      R0,[R5, #+244]
   \   00000198   0010A0E3           MOV      R1,#+0
   \   0000019C   090200EF           SWI      +521
   2216                if (data)
   \   000001A0   000050E3           CMP      R0,#+0
   \   000001A4   0900000A           BEQ      ??ProcessPacket_16
   2217                {
   2218                  EDCHAT_STRUCT *ed_struct=EDIT_GetUserPointer(data);
   \   000001A8   DF0100EF           SWI      +479
   2219                  if (ed_struct)
   \   000001AC   000050E3           CMP      R0,#+0
   \   000001B0   0600000A           BEQ      ??ProcessPacket_16
   2220                  {
   2221                    if (ed_struct->ed_contact==t)
   \   000001B4   000090E5           LDR      R0,[R0, #+0]
   \   000001B8   060050E1           CMP      R0,R6
   \   000001BC   0300001A           BNE      ??ProcessPacket_16
   2222                    {
   2223                      GeneralFunc_flag1(edchat_id,1);
   \   000001C0   F40095E5           LDR      R0,[R5, #+244]
   \   000001C4   0110A0E3           MOV      R1,#+1
   \   000001C8   3D0100EF           SWI      +317
   2224                      edchat_id=0;
   \   000001CC   F47085E5           STR      R7,[R5, #+244]
   2225                    }
   2226                  }
   2227                };
   2228              };
   2229              t2=t->prev;
   \                     ??ProcessPacket_16:
   \   000001D0   045096E5           LDR      R5,[R6, #+4]
   2230              DeleteContact(t);
   \   000001D4   0600A0E1           MOV      R0,R6
   \   000001D8   ........           _BLF     DeleteContact,??DeleteContact??rA
   2231              if(t2) RecountMenu(t2,1);
   \   000001DC   000055E3           CMP      R5,#+0
   \   000001E0   7C01000A           BEQ      ??ProcessPacket_1
   \   000001E4   0110A0E3           MOV      R1,#+1
   \   000001E8   0500A0E1           MOV      R0,R5
   \   000001EC   BAFFFFEA           B        ??ProcessPacket_8
   2232              break;
   2233            case T_CLIENTID:
   2234              if (t=FindContactByUin(p->pkt.uin)){
   \                     ??ProcessPacket_17:
   \   000001F0   ........           _BLF     FindContactByUin,??FindContactByUin??rA
   \   000001F4   0060B0E1           MOVS     R6,R0
   \   000001F8   7601000A           BEQ      ??ProcessPacket_1
   2235                t->clientid=*(char *)p->data;
   \   000001FC   0800D4E5           LDRB     R0,[R4, #+8]
   \   00000200   9A00C6E5           STRB     R0,[R6, #+154]
   \   00000204   730100EA           B        ??ProcessPacket_1
   2236              }
   2237              break;
   2238            case T_STATUSCHANGE:
   2239              t=FindContactByUin(p->pkt.uin);
   \                     ??ProcessPacket_18:
   \   00000208   ........           _BLF     FindContactByUin,??FindContactByUin??rA
   \   0000020C   0060B0E1           MOVS     R6,R0
   2240              if (t)
   \   00000210   4F00000A           BEQ      ??ProcessPacket_19
   2241              {
   2242                int i=t->state;
   2243                CLIST *oldt=NULL;
   \   00000214   B600D4E1           LDRH     R0,[R4, #+6]
   \   00000218   B489D6E1           LDRH     R8,[R6, #+148]
   \   0000021C   0090A0E3           MOV      R9,#+0
   \   00000220   02B040E2           SUB      R11,R0,#+2
   \   00000224   04005BE3           CMP      R11,#+4
   \   00000228   04B0A023           MOVCS    R11,#+4
   2244                int m=(p->pkt.data_len-2<sizeof(t->xstate)) ? p->pkt.data_len-2 : sizeof(t->xstate);
   2245                if (memcmp(t->xstate,&p->data[2],m))  // Если картинка икс статуса сменилась
   \   0000022C   0B20A0E1           MOV      R2,R11
   \   00000230   0A1084E2           ADD      R1,R4,#+10
   \   00000234   960086E2           ADD      R0,R6,#+150
   \   00000238   1C0100EF           SWI      +284
   \   0000023C   000050E3           CMP      R0,#+0
   \   00000240   2300000A           BEQ      ??ProcessPacket_20
   2246                {
   2247                  zeromem(t->xstate,sizeof(t->xstate));
   \   00000244   0410A0E3           MOV      R1,#+4
   \   00000248   960086E2           ADD      R0,R6,#+150
   \   0000024C   1D0100EF           SWI      +285
   2248                  memcpy(t->xstate,&p->data[2],m);
   \   00000250   0B20A0E1           MOV      R2,R11
   \   00000254   0A1084E2           ADD      R1,R4,#+10
   \   00000258   960086E2           ADD      R0,R6,#+150
   \   0000025C   1E0100EF           SWI      +286
   2249                  FreeXText(t);
   \   00000260   0600A0E1           MOV      R0,R6
   \   00000264   ........           _BLF     FreeXText,??FreeXText??rA
   2250                  if (t->xstate[0] && ENA_AUTO_XTXT)   // Если установлен икс статус и можно запрашивать по смене икс статуса :)
   \   00000268   9600D6E5           LDRB     R0,[R6, #+150]
   \   0000026C   000050E3           CMP      R0,#+0
   \   00000270   1600000A           BEQ      ??ProcessPacket_21
   \   00000274   70059FE5           LDR      R0,??ProcessPacket_22+0x4  ;; ENA_AUTO_XTXT
   \   00000278   000090E5           LDR      R0,[R0, #+0]
   \   0000027C   000050E3           CMP      R0,#+0
   \   00000280   1200000A           BEQ      ??ProcessPacket_21
   2251                  {
   2252                    t->req_xtext=1;
   \   00000284   C0A086E5           STR      R10,[R6, #+192]
   2253                    if (edchat_id)   // Если открыт чат
   \   00000288   F40095E5           LDR      R0,[R5, #+244]
   \   0000028C   000050E3           CMP      R0,#+0
   \   00000290   0F00000A           BEQ      ??ProcessPacket_20
   2254                    {
   2255                      void *data=FindGUIbyId(edchat_id,NULL);
   \   00000294   F40095E5           LDR      R0,[R5, #+244]
   \   00000298   0010A0E3           MOV      R1,#+0
   \   0000029C   090200EF           SWI      +521
   2256                      if (data)
   \   000002A0   000050E3           CMP      R0,#+0
   \   000002A4   0A00000A           BEQ      ??ProcessPacket_20
   2257                      {
   2258                        EDCHAT_STRUCT *ed_struct=EDIT_GetUserPointer(data);
   \   000002A8   DF0100EF           SWI      +479
   2259                        if (ed_struct)
   \   000002AC   000050E3           CMP      R0,#+0
   \   000002B0   0700000A           BEQ      ??ProcessPacket_20
   2260                        {
   2261                          if (ed_struct->ed_contact==t)   // Если наш чат то запрашиваем текст статуса
   \   000002B4   000090E5           LDR      R0,[R0, #+0]
   \   000002B8   060050E1           CMP      R0,R6
   \   000002BC   0400001A           BNE      ??ProcessPacket_20
   2262                          {
   2263                            t->req_xtext=0;
   \   000002C0   C07086E5           STR      R7,[R6, #+192]
   2264                            RequestXText(t->uin);
   \   000002C4   0C0096E5           LDR      R0,[R6, #+12]
   \   000002C8   ........           BL       RequestXText
   \   000002CC   000000EA           B        ??ProcessPacket_20
   2265                          }
   2266                        }
   2267          	    }
   2268          	  }
   2269          	}
   2270                  else  // Если икс статус не установлен то на всякий случай снимаем флаг получения текста
   2271                  {
   2272                    t->req_xtext=0;
   \                     ??ProcessPacket_21:
   \   000002D0   C07086E5           STR      R7,[R6, #+192]
   2273                  }
   2274                }
   2275                if (contactlist_menu_id)
   \                     ??ProcessPacket_20:
   \   000002D4   F00095E5           LDR      R0,[R5, #+240]
   \   000002D8   000050E3           CMP      R0,#+0
   \   000002DC   0500000A           BEQ      ??ProcessPacket_23
   2276                {
   2277          	oldt=FindContactByN(GetCurMenuItem(FindGUIbyId(contactlist_menu_id,NULL)));
   \   000002E0   F00095E5           LDR      R0,[R5, #+240]
   \   000002E4   0010A0E3           MOV      R1,#+0
   \   000002E8   090200EF           SWI      +521
   \   000002EC   8F0100EF           SWI      +399
   \   000002F0   ........           _BLF     FindContactByN,??FindContactByN??rA
   \   000002F4   0090A0E1           MOV      R9,R0
   2278                }
   2279                t->state=*((unsigned short *)(p->data));
   \                     ??ProcessPacket_23:
   \   000002F8   B800D4E1           LDRH     R0,[R4, #+8]
   \   000002FC   B409C6E1           STRH     R0,[R6, #+148]
   2280                LogStatusChange(t);
   \   00000300   0600A0E1           MOV      R0,R6
   \   00000304   ........           _BLF     LogStatusChange,??LogStatusChange??rA
   2281                ChangeContactPos(t);
   \   00000308   0600A0E1           MOV      R0,R6
   \   0000030C   ........           _BLF     ChangeContactPos,??ChangeContactPos??rA
   2282                RecountMenu(oldt, 1);
   \   00000310   0110A0E3           MOV      R1,#+1
   \   00000314   0900A0E1           MOV      R0,R9
   \   00000318   ........           BL       RecountMenu
   2283                if ((t->state!=0xFFFF)&&(i==0xFFFF))//Звук
   \   0000031C   B409D6E1           LDRH     R0,[R6, #+148]
   \   00000320   FF10A0E3           MOV      R1,#+255
   \   00000324   FF1C81E3           ORR      R1,R1,#0xFF00
   \   00000328   010050E1           CMP      R0,R1
   \   0000032C   0200000A           BEQ      ??ProcessPacket_24
   \   00000330   010058E1           CMP      R8,R1
   2284                {
   2285          	Play(sndGlobal);
   \   00000334   B4049F05           LDREQ    R0,??ProcessPacket_22+0x8  ;; sndGlobal
   \   00000338   0400000A           BEQ      ??ProcessPacket_25
   2286                }
   2287                if ((i!=0xFFFF)&&(t->state==0xFFFF))//Звук
   \                     ??ProcessPacket_24:
   \   0000033C   010058E1           CMP      R8,R1
   \   00000340   0300000A           BEQ      ??ProcessPacket_19
   \   00000344   010050E1           CMP      R0,R1
   \   00000348   0100001A           BNE      ??ProcessPacket_19
   2288                {
   2289          	Play(sndSrvMsg);
   \   0000034C   A0049FE5           LDR      R0,??ProcessPacket_22+0xC  ;; sndSrvMsg
   \                     ??ProcessPacket_25:
   \   00000350   ........           BL       Play
   2290                }
   2291              }
   2292              if (edchat_id)
   \                     ??ProcessPacket_19:
   \   00000354   F40095E5           LDR      R0,[R5, #+244]
   \   00000358   000050E3           CMP      R0,#+0
   \   0000035C   1D01000A           BEQ      ??ProcessPacket_1
   2293              {
   2294                void *data=FindGUIbyId(edchat_id,NULL);
   \   00000360   F40095E5           LDR      R0,[R5, #+244]
   \   00000364   0010A0E3           MOV      R1,#+0
   \   00000368   090200EF           SWI      +521
   2295                {
   2296          	EDCHAT_STRUCT *ed_struct;
   2297          	ed_struct=EDIT_GetUserPointer(data);
   \   0000036C   DF0100EF           SWI      +479
   2298          	if (ed_struct)
   \   00000370   000050E3           CMP      R0,#+0
   \   00000374   1701000A           BEQ      ??ProcessPacket_1
   2299          	{
   2300          	  if (ed_struct->ed_contact==t)
   \   00000378   000090E5           LDR      R0,[R0, #+0]
   \   0000037C   060050E1           CMP      R0,R6
   \   00000380   1401001A           BNE      ??ProcessPacket_1
   2301          	  {
   2302          	    DirectRedrawGUI_ID(edchat_id);
   \   00000384   F40095E5           LDR      R0,[R5, #+244]
   \   00000388   400100EF           SWI      +320
   \   0000038C   110100EA           B        ??ProcessPacket_1
   2303          	  }
   2304          	}
   2305                }
   2306              }
   2307              break;
   2308            case T_RECVMSG:
   2309          
   2310              t=FindContactByUin(p->pkt.uin);
   \                     ??ProcessPacket_26:
   \   00000390   ........           _BLF     FindContactByUin,??FindContactByUin??rA
   \   00000394   0060B0E1           MOVS     R6,R0
   2311              if (!t)
   \   00000398   0900001A           BNE      ??ProcessPacket_27
   2312              {
   2313                sprintf(s,percent_d,p->pkt.uin);
   \   0000039C   002094E5           LDR      R2,[R4, #+0]
   \   000003A0   0B1088E2           ADD      R1,R8,#+11
   \   000003A4   0D00A0E1           MOV      R0,SP
   \   000003A8   160000EF           SWI      +22
   2314                t=AddContact(p->pkt.uin,s,GROUP_CACHE,0);
   \   000003AC   EC2095E5           LDR      R2,[R5, #+236]
   \   000003B0   000094E5           LDR      R0,[R4, #+0]
   \   000003B4   0030A0E3           MOV      R3,#+0
   \   000003B8   0D10A0E1           MOV      R1,SP
   \   000003BC   ........           _BLF     AddContact,??AddContact??rA
   \   000003C0   0060A0E1           MOV      R6,R0
   2315              }
   2316              if(!t->isactive && HISTORY_BUFFER) GetHistory(t, 64<<HISTORY_BUFFER);
   \                     ??ProcessPacket_27:
   \   000003C4   B40096E5           LDR      R0,[R6, #+180]
   \   000003C8   000050E3           CMP      R0,#+0
   \   000003CC   0700001A           BNE      ??ProcessPacket_28
   \   000003D0   ........           LDR      R0,??DataTable88  ;; HISTORY_BUFFER
   \   000003D4   000090E5           LDR      R0,[R0, #+0]
   \   000003D8   000050E3           CMP      R0,#+0
   \   000003DC   0300000A           BEQ      ??ProcessPacket_28
   \   000003E0   4010A0E3           MOV      R1,#+64
   \   000003E4   1110A0E1           LSL      R1,R1,R0
   \   000003E8   0600A0E1           MOV      R0,R6
   \   000003EC   ........           _BLF     GetHistory,??GetHistory??rA
   2317              t->isactive=ACTIVE_TIME;
   \                     ??ProcessPacket_28:
   \   000003F0   B400A0E3           MOV      R0,#+180
   \   000003F4   B40086E5           STR      R0,[R6, #+180]
   2318          
   2319              //    ChangeContactPos(t);
   2320              if(VIBR_TYPE)
   \   000003F8   ........           LDR      R0,??DataTable89  ;; VIBR_TYPE
   \   000003FC   000090E5           LDR      R0,[R0, #+0]
   \   00000400   000050E3           CMP      R0,#+0
   2321                vibra_count=2;
   \   00000404   0200A013           MOVNE    R0,#+2
   \   00000408   C4008515           STRNE    R0,[R5, #+196]
   2322              else
   2323                vibra_count=1;
   \   0000040C   C4A08505           STREQ    R10,[R5, #+196]
   2324              start_vibra();
   \   00000410   ........           BL       start_vibra
   2325              IlluminationOn(ILL_DISP_RECV,ILL_KEYS_RECV,ILL_RECV_TMR,ILL_RECV_FADE); //Illumination by BoBa 19.04.2007
   \   00000414   DC039FE5           LDR      R0,??ProcessPacket_22+0x10  ;; ILL_RECV_FADE
   \   00000418   003090E5           LDR      R3,[R0, #+0]
   \   0000041C   D8039FE5           LDR      R0,??ProcessPacket_22+0x14  ;; ILL_RECV_TMR
   \   00000420   002090E5           LDR      R2,[R0, #+0]
   \   00000424   D4039FE5           LDR      R0,??ProcessPacket_22+0x18  ;; ILL_KEYS_RECV
   \   00000428   001090E5           LDR      R1,[R0, #+0]
   \   0000042C   D0039FE5           LDR      R0,??ProcessPacket_22+0x1C  ;; ILL_DISP_RECV
   \   00000430   000090E5           LDR      R0,[R0, #+0]
   \   00000434   ........           BL       IlluminationOn
   2326              if (t->name[0]=='#'||t->clientid==2)
   \   00000438   1400D6E5           LDRB     R0,[R6, #+20]
   \   0000043C   230050E3           CMP      R0,#+35
   \   00000440   9A00D615           LDRBNE   R0,[R6, #+154]
   \   00000444   02005013           CMPNE    R0,#+2
   \   00000448   1100001A           BNE      ??ProcessPacket_29
   2327              {
   2328                //Если это конференция, патчим имя
   2329                char *s=strchr(p->data,'>');
   \   0000044C   3E10A0E3           MOV      R1,#+62
   \   00000450   080084E2           ADD      R0,R4,#+8
   \   00000454   180000EF           SWI      +24
   2330                //Если нашли символ > и после него пробел и ник короче 16 символов
   2331                if (s)
   \   00000458   000050E3           CMP      R0,#+0
   \   0000045C   0C00000A           BEQ      ??ProcessPacket_29
   2332                {
   2333          	if ((s[1]==' ')&&((s-p->data)<40))
   \   00000460   0110D0E5           LDRB     R1,[R0, #+1]
   \   00000464   200051E3           CMP      R1,#+32
   \   00000468   0900001A           BNE      ??ProcessPacket_29
   \   0000046C   081084E2           ADD      R1,R4,#+8
   \   00000470   011040E0           SUB      R1,R0,R1
   \   00000474   280051E3           CMP      R1,#+40
   \   00000478   050000AA           BGE      ??ProcessPacket_29
   2334          	{
   2335          	  *s=0; //Режем строку
   \   0000047C   0070C0E5           STRB     R7,[R0, #+0]
   2336          	  AddStringToLog(t,0x02,s+2,p->data,0xFFFFFFFF); //Добавляем имя из текста сообщения
   \   00000480   0710E0E1           MVN      R1,R7
   \   00000484   02002DE9           PUSH     {R1}
   \   00000488   083084E2           ADD      R3,R4,#+8
   \   0000048C   022080E2           ADD      R2,R0,#+2
   \   00000490   030000EA           B        ??ProcessPacket_30
   2337          	  goto L1;
   2338          	}
   2339                }
   2340              }
   2341              AddStringToLog(t,0x02,p->data,t->name,0xFFFFFFFF);
   \                     ??ProcessPacket_29:
   \   00000494   0700E0E1           MVN      R0,R7
   \   00000498   01002DE9           PUSH     {R0}
   \   0000049C   143086E2           ADD      R3,R6,#+20
   \   000004A0   082084E2           ADD      R2,R4,#+8
   \                     ??ProcessPacket_30:
   \   000004A4   0210A0E3           MOV      R1,#+2
   \   000004A8   0600A0E1           MOV      R0,R6
   \   000004AC   ........           BL       AddStringToLog
   \   000004B0   04D08DE2           ADD      SP,SP,#+4
   2342              L1:
   2343              //Разворачиваем группу, в которой пришло сообщение
   2344              {
   2345                CLIST *g=FindGroupByID(t->group);
   \   000004B4   100096E5           LDR      R0,[R6, #+16]
   \   000004B8   ........           _BLF     FindGroupByID,??FindGroupByID??rA
   2346                if (g)
   \   000004BC   000050E3           CMP      R0,#+0
   2347                {
   2348          	if (g->state)
   \   000004C0   B419D011           LDRHNE   R1,[R0, #+148]
   \   000004C4   00005113           CMPNE    R1,#+0
   2349          	{
   2350          	  g->state=0;
   \   000004C8   B479C011           STRHNE   R7,[R0, #+148]
   2351          	}
   2352                }
   2353              }
   2354              ReqAddMsgToChat(t);
   \   000004CC   0600A0E1           MOV      R0,R6
   \   000004D0   ........           BL       ReqAddMsgToChat
   2355              RecountMenu(t, 1);
   \   000004D4   0110A0E3           MOV      R1,#+1
   \   000004D8   0600A0E1           MOV      R0,R6
   \   000004DC   ........           BL       RecountMenu
   2356              extern const int DEVELOP_IF;
   2357              switch (DEVELOP_IF)
   \   000004E0   20039FE5           LDR      R0,??ProcessPacket_22+0x20  ;; DEVELOP_IF
   \   000004E4   000090E5           LDR      R0,[R0, #+0]
   \   000004E8   000050E3           CMP      R0,#+0
   \   000004EC   0200000A           BEQ      ??ProcessPacket_31
   \   000004F0   010050E2           SUBS     R0,R0,#+1
   \   000004F4   0C00000A           BEQ      ??ProcessPacket_32
   \   000004F8   B60000EA           B        ??ProcessPacket_1
   2358              {
   2359              case 0:
   2360                if ((((CSM_RAM *)(CSM_root()->csm_q->csm.last))->id!=maincsm_id) && !InAway()) to_develop();
   \                     ??ProcessPacket_31:
   \   000004FC   068100EF           SWI      +33030
   \   00000500   080090E5           LDR      R0,[R0, #+8]
   \   00000504   8C1095E5           LDR      R1,[R5, #+140]
   \   00000508   0C0090E5           LDR      R0,[R0, #+12]
   \   0000050C   0C0090E5           LDR      R0,[R0, #+12]
   \   00000510   010050E1           CMP      R0,R1
   \                     ??ProcessPacket_33:
   \   00000514   AF00000A           BEQ      ??ProcessPacket_1
   \   00000518   ........           BL       InAway
   \   0000051C   000050E3           CMP      R0,#+0
   \   00000520   AC00001A           BNE      ??ProcessPacket_1
   \   00000524   ........           BL       to_develop
   \   00000528   AA0000EA           B        ??ProcessPacket_1
   2361                break;
   2362              case 1:
   2363                if ((((CSM_RAM *)(CSM_root()->csm_q->csm.last))->id!=maincsm_id)&&(IsUnlocked())&&!InAway()) to_develop();
   \                     ??ProcessPacket_32:
   \   0000052C   068100EF           SWI      +33030
   \   00000530   080090E5           LDR      R0,[R0, #+8]
   \   00000534   8C1095E5           LDR      R1,[R5, #+140]
   \   00000538   0C0090E5           LDR      R0,[R0, #+12]
   \   0000053C   0C0090E5           LDR      R0,[R0, #+12]
   \   00000540   010050E1           CMP      R0,R1
   \   00000544   A300000A           BEQ      ??ProcessPacket_1
   \   00000548   430000EF           SWI      +67
   \   0000054C   000050E3           CMP      R0,#+0
   \   00000550   EFFFFFEA           B        ??ProcessPacket_33
   2364                break;
   2365              case 2:
   2366                break;
   2367              }
   2368              break;
   2369            case T_SRV_ACK:
   2370            case T_CLIENT_ACK:
   2371              q=FindContactLOGQByAck(p);
   \                     ??ProcessPacket_34:
   \   00000554   0400A0E1           MOV      R0,R4
   \   00000558   ........           BL       FindContactLOGQByAck
   2372          /*    if ((
   2373          	IsGuiOnTop(contactlist_menu_id)||
   2374          	  IsGuiOnTop(edchat_id)
   2375          	    )&&(q))
   2376              {
   2377                DrawRoundedFrame(ScreenW()-8,YDISP,ScreenW()-1,YDISP+7,0,0,0,
   2378          		       GetPaletteAdrByColorIndex(0),
   2379          		       GetPaletteAdrByColorIndex(p->pkt.type==T_SRV_ACK?3:4));
   2380              }*/
   2381              if (q)
   \   0000055C   000050E3           CMP      R0,#+0
   \   00000560   9C00000A           BEQ      ??ProcessPacket_1
   2382              {
   2383                q->acked=p->pkt.type==T_SRV_ACK?1:2;
   \   00000564   B410D4E1           LDRH     R1,[R4, #+4]
   \   00000568   100051E3           CMP      R1,#+16
   \   0000056C   0110A003           MOVEQ    R1,#+1
   \   00000570   0210A013           MOVNE    R1,#+2
   \   00000574   041080E5           STR      R1,[R0, #+4]
   2384                t=FindContactByUin(p->pkt.uin);
   \   00000578   000094E5           LDR      R0,[R4, #+0]
   \   0000057C   ........           _BLF     FindContactByUin,??FindContactByUin??rA
   \   00000580   0060A0E1           MOV      R6,R0
   2385                if (edchat_id)
   \   00000584   F40095E5           LDR      R0,[R5, #+244]
   \   00000588   000050E3           CMP      R0,#+0
   \   0000058C   9100000A           BEQ      ??ProcessPacket_1
   2386                {
   2387          	void *data=FindGUIbyId(edchat_id,NULL);
   \   00000590   F40095E5           LDR      R0,[R5, #+244]
   \   00000594   0010A0E3           MOV      R1,#+0
   \   00000598   090200EF           SWI      +521
   \   0000059C   0070B0E1           MOVS     R7,R0
   2388          	if (data)
   \   000005A0   8C00000A           BEQ      ??ProcessPacket_1
   2389          	{
   2390          	  EDCHAT_STRUCT *ed_struct;
   2391          	  ed_struct=EDIT_GetUserPointer(data);
   \   000005A4   DF0100EF           SWI      +479
   2392          	  if (ed_struct)
   \   000005A8   000050E3           CMP      R0,#+0
   \   000005AC   8900000A           BEQ      ??ProcessPacket_1
   2393          	  {
   2394          	    if (ed_struct->ed_contact==t)
   \   000005B0   000090E5           LDR      R0,[R0, #+0]
   \   000005B4   060050E1           CMP      R0,R6
   \   000005B8   8600001A           BNE      ??ProcessPacket_1
   2395          	    {
   2396          	      if (EDIT_IsBusy(data))
   \   000005BC   0700A0E1           MOV      R0,R7
   \   000005C0   1C0200EF           SWI      +540
   \   000005C4   000050E3           CMP      R0,#+0
   \   000005C8   0300000A           BEQ      ??ProcessPacket_35
   2397          	      {
   2398          		t->req_drawack=1;
   \   000005CC   A4A086E5           STR      R10,[R6, #+164]
   2399          		time_to_stop_t9=3;
   \   000005D0   0300A0E3           MOV      R0,#+3
   \   000005D4   000185E5           STR      R0,[R5, #+256]
   \   000005D8   7E0000EA           B        ??ProcessPacket_1
   2400          	      }
   2401          	      else {
   2402          		DrawAck(data);
   \                     ??ProcessPacket_35:
   \   000005DC   0700A0E1           MOV      R0,R7
   \   000005E0   ........           BL       DrawAck
   2403                          if (p->pkt.type==T_SRV_ACK)
   \   000005E4   B400D4E1           LDRH     R0,[R4, #+4]
   \   000005E8   100050E3           CMP      R0,#+16
   \   000005EC   7900001A           BNE      ??ProcessPacket_1
   2404                            IlluminationOn(ILL_DISP_SEND,ILL_KEYS_SEND,ILL_SEND_TMR,ILL_RECV_FADE); //Illumination by BoBa 19.04.2007
   \   000005F0   00029FE5           LDR      R0,??ProcessPacket_22+0x10  ;; ILL_RECV_FADE
   \   000005F4   003090E5           LDR      R3,[R0, #+0]
   \   000005F8   0C029FE5           LDR      R0,??ProcessPacket_22+0x24  ;; ILL_SEND_TMR
   \   000005FC   002090E5           LDR      R2,[R0, #+0]
   \   00000600   08029FE5           LDR      R0,??ProcessPacket_22+0x28  ;; ILL_KEYS_SEND
   \   00000604   001090E5           LDR      R1,[R0, #+0]
   \   00000608   04029FE5           LDR      R0,??ProcessPacket_22+0x2C  ;; ILL_DISP_SEND
   \   0000060C   000090E5           LDR      R0,[R0, #+0]
   \   00000610   ........           BL       IlluminationOn
   \   00000614   6F0000EA           B        ??ProcessPacket_1
   2405                        }
   2406          	    }
   2407          	  }
   2408          	}
   2409                }
   2410              }
   2411              break;
   2412            case T_XTEXT_ACK:
   2413              t=FindContactByUin(p->pkt.uin);
   \                     ??ProcessPacket_36:
   \   00000618   ........           _BLF     FindContactByUin,??FindContactByUin??rA
   \   0000061C   0060B0E1           MOVS     R6,R0
   2414              if (t)
   \   00000620   6C00000A           BEQ      ??ProcessPacket_1
   2415              {
   2416                int i;
   2417                int j;
   2418                FreeXText(t);
   \   00000624   ........           _BLF     FreeXText,??FreeXText??rA
   2419                i=p->pkt.data_len;
   \   00000628   B670D4E1           LDRH     R7,[R4, #+6]
   2420                memcpy(t->xtext=malloc(i),p->data,i);
   \   0000062C   0700A0E1           MOV      R0,R7
   \   00000630   140000EF           SWI      +20
   \   00000634   BC0086E5           STR      R0,[R6, #+188]
   \   00000638   0720A0E1           MOV      R2,R7
   \   0000063C   081084E2           ADD      R1,R4,#+8
   \   00000640   1E0100EF           SWI      +286
   2421                zeromem(s,256);
   \   00000644   401FA0E3           MOV      R1,#+256
   \   00000648   0D00A0E1           MOV      R0,SP
   \   0000064C   1D0100EF           SWI      +285
   2422                strcpy(s,t->name);
   \   00000650   141086E2           ADD      R1,R6,#+20
   \   00000654   0D00A0E1           MOV      R0,SP
   \   00000658   1A0000EF           SWI      +26
   2423                strcat(s,":\n");
   \   0000065C   611F8FE2           ADR      R1,??ProcessPacket_22  ;; ":\n"
   \   00000660   0D00A0E1           MOV      R0,SP
   \   00000664   170000EF           SWI      +23
   2424                i=strlen(s);
   \   00000668   0D00A0E1           MOV      R0,SP
   \   0000066C   1B0000EF           SWI      +27
   2425                j=p->data[0];
   \   00000670   0870D4E5           LDRB     R7,[R4, #+8]
   \   00000674   0090A0E1           MOV      R9,R0
   2426                if (j>(255-i)) j=255-i;
   \   00000678   FF0069E2           RSB      R0,R9,#+255
   \   0000067C   070050E1           CMP      R0,R7
   \   00000680   0070A0B1           MOVLT    R7,R0
   2427                strncpy(s+i,p->data+1,j);
   \   00000684   0720A0E1           MOV      R2,R7
   \   00000688   091084E2           ADD      R1,R4,#+9
   \   0000068C   0D00A0E1           MOV      R0,SP
   \   00000690   000089E0           ADD      R0,R9,R0
   \   00000694   160100EF           SWI      +278
   2428                i+=j;
   \   00000698   090087E0           ADD      R0,R7,R9
   2429                if (i<255)
   \   0000069C   FF0050E3           CMP      R0,#+255
   \   000006A0   100000AA           BGE      ??ProcessPacket_37
   2430                {
   2431          	s[i]='\n';
   \   000006A4   0D10A0E1           MOV      R1,SP
   \   000006A8   0A20A0E3           MOV      R2,#+10
   \   000006AC   0120C0E7           STRB     R2,[R0, +R1]
   2432          	i++;
   \   000006B0   0810D4E5           LDRB     R1,[R4, #+8]
   \   000006B4   B620D4E1           LDRH     R2,[R4, #+6]
   \   000006B8   010080E2           ADD      R0,R0,#+1
   2433          	j=p->pkt.data_len-p->data[0]-1;
   2434          	if (j>(255-i)) j=255-i;
   2435          	strncpy(s+i,p->data+p->data[0]+1,j);
   \   000006BC   0D30A0E1           MOV      R3,SP
   \   000006C0   012042E0           SUB      R2,R2,R1
   \   000006C4   017042E2           SUB      R7,R2,#+1
   \   000006C8   FF2060E2           RSB      R2,R0,#+255
   \   000006CC   070052E1           CMP      R2,R7
   \   000006D0   0270A0B1           MOVLT    R7,R2
   \   000006D4   0720A0E1           MOV      R2,R7
   \   000006D8   041081E0           ADD      R1,R1,R4
   \   000006DC   091081E2           ADD      R1,R1,#+9
   \   000006E0   030080E0           ADD      R0,R0,R3
   \   000006E4   160100EF           SWI      +278
   2436                }
   2437          //      if (IsGuiOnTop(contactlist_menu_id)) RefreshGUI();
   2438                if (!edchat_id &&           // Только если редактор не наверху
   2439                    strlen(p->data))       // и x-status не пустой
   \                     ??ProcessPacket_37:
   \   000006E8   F40095E5           LDR      R0,[R5, #+244]
   \   000006EC   000050E3           CMP      R0,#+0
   \   000006F0   0600001A           BNE      ??ProcessPacket_38
   \   000006F4   080084E2           ADD      R0,R4,#+8
   \   000006F8   1B0000EF           SWI      +27
   \   000006FC   000050E3           CMP      R0,#+0
   \   00000700   0200000A           BEQ      ??ProcessPacket_38
   2440                    ShowMSG(0,(int)s);
   \   00000704   0D10A0E1           MOV      R1,SP
   \   00000708   0000A0E3           MOV      R0,#+0
   \   0000070C   480100EF           SWI      +328
   2441          
   2442                zeromem(s,256);
   \                     ??ProcessPacket_38:
   \   00000710   401FA0E3           MOV      R1,#+256
   \   00000714   0D00A0E1           MOV      R0,SP
   \   00000718   1D0100EF           SWI      +285
   2443                i=0;
   2444                j=p->data[0];
   \   0000071C   0850D4E5           LDRB     R5,[R4, #+8]
   2445                if (j>(255-i)) j=255-i;
   2446                strncpy(s,p->data+1,j);
   \   00000720   091084E2           ADD      R1,R4,#+9
   \   00000724   0D00A0E1           MOV      R0,SP
   \   00000728   400F55E3           CMP      R5,#+256
   \   0000072C   FF50A0A3           MOVGE    R5,#+255
   \   00000730   0520A0E1           MOV      R2,R5
   \   00000734   160100EF           SWI      +278
   2447                i+=j;
   2448                if (i<255)
   \   00000738   FF0055E3           CMP      R5,#+255
   \   0000073C   100000AA           BGE      ??ProcessPacket_39
   2449                {
   2450          	s[i++]=13;
   \   00000740   0D10A0E1           MOV      R1,SP
   \   00000744   0D20A0E3           MOV      R2,#+13
   \   00000748   0120C5E7           STRB     R2,[R5, +R1]
   \   0000074C   0810D4E5           LDRB     R1,[R4, #+8]
   \   00000750   B620D4E1           LDRH     R2,[R4, #+6]
   \   00000754   010085E2           ADD      R0,R5,#+1
   2451          	j=p->pkt.data_len-p->data[0]-1;
   2452          	if (j>(255-i)) j=255-i;
   2453          	strncpy(s+i,p->data+p->data[0]+1,j);
   \   00000758   0D30A0E1           MOV      R3,SP
   \   0000075C   012042E0           SUB      R2,R2,R1
   \   00000760   015042E2           SUB      R5,R2,#+1
   \   00000764   FF2060E2           RSB      R2,R0,#+255
   \   00000768   050052E1           CMP      R2,R5
   \   0000076C   0250A0B1           MOVLT    R5,R2
   \   00000770   0520A0E1           MOV      R2,R5
   \   00000774   041081E0           ADD      R1,R1,R4
   \   00000778   091081E2           ADD      R1,R1,#+9
   \   0000077C   030080E0           ADD      R0,R0,R3
   \   00000780   160100EF           SWI      +278
   2454                }
   2455                AddStringToLog(t,0x03,s,x_status_change,0xFFFFFFFF);
   \                     ??ProcessPacket_39:
   \   00000784   00006AE2           RSB      R0,R10,#+0
   \   00000788   01002DE9           PUSH     {R0}
   \   0000078C   603F88E2           ADD      R3,R8,#+384
   \   00000790   04208DE2           ADD      R2,SP,#+4
   \   00000794   0310A0E3           MOV      R1,#+3
   \   00000798   0600A0E1           MOV      R0,R6
   \   0000079C   ........           BL       AddStringToLog
   2456                ReqAddMsgToChat(t);
   \   000007A0   0600A0E1           MOV      R0,R6
   \   000007A4   ........           BL       ReqAddMsgToChat
   2457                if (strlen(p->data))       // Если x-status не пустой
   \   000007A8   080084E2           ADD      R0,R4,#+8
   \   000007AC   1B0000EF           SWI      +27
   \   000007B0   000050E3           CMP      R0,#+0
   \   000007B4   04D08DE2           ADD      SP,SP,#+4
   2458                  RecountMenu(t, 1);
   \   000007B8   0110A013           MOVNE    R1,#+1
   \   000007BC   0600A011           MOVNE    R0,R6
   \   000007C0   45FEFF1A           BNE      ??ProcessPacket_8
   2459                else
   2460                  RecountMenu(NULL, 0);
   \   000007C4   0010A0E3           MOV      R1,#+0
   \   000007C8   0000A0E3           MOV      R0,#+0
   \   000007CC   42FEFFEA           B        ??ProcessPacket_8
   2461              }
   2462              break;
   2463            case T_LASTPRIVACY:
   2464              CurrentPrivateStatus=p->data[0];
   \                     ??ProcessPacket_40:
   \   000007D0   0800D4E5           LDRB     R0,[R4, #+8]
   \   000007D4   BC0085E5           STR      R0,[R5, #+188]
   2465              break;
   2466            }
   2467            mfree(p);
   \                     ??ProcessPacket_1:
   \   000007D8   0400A0E1           MOV      R0,R4
   \   000007DC   150000EF           SWI      +21
   2468          }
   \   000007E0   40DF8DE2           ADD      SP,SP,#+256
   \   000007E4   F08FBDE8           POP      {R4-R11,PC}      ;; return
   \                     ??ProcessPacket_22:
   \   000007E8   3A0A0000           DC8      ":\n",+0
   \   000007EC   ........           DC32     ENA_AUTO_XTXT
   \   000007F0   ........           DC32     sndGlobal
   \   000007F4   ........           DC32     sndSrvMsg
   \   000007F8   ........           DC32     ILL_RECV_FADE
   \   000007FC   ........           DC32     ILL_RECV_TMR
   \   00000800   ........           DC32     ILL_KEYS_RECV
   \   00000804   ........           DC32     ILL_DISP_RECV
   \   00000808   ........           DC32     DEVELOP_IF
   \   0000080C   ........           DC32     ILL_SEND_TMR
   \   00000810   ........           DC32     ILL_KEYS_SEND
   \   00000814   ........           DC32     ILL_DISP_SEND
   2469          
   2470          IPC_REQ tmr_gipc;

   \                                 In segment CODE, align 4, keep-with-next
   2471          void process_active_timer(void)
   2472          {
   2473            if (connect_state>2)
   \                     process_active_timer:
   \   00000000   ........           LDR      R0,??DataTable97  ;; ecmenu_ITEMS + 264
   \   00000004   30402DE9           PUSH     {R4,R5,LR}
   \   00000008   000090E5           LDR      R0,[R0, #+0]
   \   0000000C   ........           LDR      R5,??DataTable103  ;; S_ICONS
   \   00000010   0040A0E3           MOV      R4,#+0
   \   00000014   030050E3           CMP      R0,#+3
   \   00000018   070000BA           BLT      ??process_active_timer_0
   2474            {
   2475              if (++tenseconds_to_ping>12)
   \   0000001C   FC0095E5           LDR      R0,[R5, #+252]
   \   00000020   010080E2           ADD      R0,R0,#+1
   \   00000024   FC0085E5           STR      R0,[R5, #+252]
   \   00000028   0D0050E3           CMP      R0,#+13
   \   0000002C   020000BA           BLT      ??process_active_timer_0
   2476              {
   2477                tenseconds_to_ping=0;
   2478                SUBPROC((void *)do_ping);
   \   00000030   50009FE5           LDR      R0,??process_active_timer_1  ;; do_ping
   \   00000034   FC4085E5           STR      R4,[R5, #+252]
   \   00000038   710100EF           SWI      +369
   2479              }
   2480            }
   2481            tmr_gipc.name_to=ipc_my_name;
   \                     ??process_active_timer_0:
   \   0000003C   ........           LDR      R1,??DataTable95  ;; Canvas
   \   00000040   560FA0E3           MOV      R0,#+344
   \   00000044   012080E0           ADD      R2,R0,R1
   \   00000048   802085E5           STR      R2,[R5, #+128]
   2482            tmr_gipc.name_from=ipc_my_name;
   \   0000004C   010080E0           ADD      R0,R0,R1
   \   00000050   840085E5           STR      R0,[R5, #+132]
   2483            tmr_gipc.data=NULL;
   \   00000054   884085E5           STR      R4,[R5, #+136]
   2484            GBS_SendMessage(MMI_CEPID,MSG_IPC,IPC_TENSECONDS,&tmr_gipc);
   \   00000058   803085E2           ADD      R3,R5,#+128
   \   0000005C   0420A0E3           MOV      R2,#+4
   \   00000060   B010A0E3           MOV      R1,#+176
   \   00000064   DE1C81E3           ORR      R1,R1,#0xDE00
   \   00000068   0900A0E3           MOV      R0,#+9
   \   0000006C   420C80E3           ORR      R0,R0,#0x4200
   \   00000070   000100EF           SWI      +256
   2485            GBS_StartTimerProc(&tmr_active,TMR_SECOND*10,process_active_timer);
   \   00000074   ........           LDR      R2,??DataTable104  ;; process_active_timer
   \   00000078   871EA0E3           MOV      R1,#+2160
   \   0000007C   E60F85E2           ADD      R0,R5,#+920
   \   00000080   4D0000EF           SWI      +77
   2486          }
   \   00000084   3080BDE8           POP      {R4,R5,PC}       ;; return
   \                     ??process_active_timer_1:
   \   00000088   ........           DC32     do_ping
   2487          
   2488          //===============================================================================================
   2489          
   2490          

   \                                 In segment CODE, align 4, keep-with-next
   2491          void onRedraw(MAIN_GUI *data)
   2492          {
   \                     onRedraw:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000004   0CD04DE2           SUB      SP,SP,#+12
   \   00000008   0040A0E1           MOV      R4,R0
   2493            int scr_w=ScreenW();
   \   0000000C   888100EF           SWI      +33160
   \   00000010   00B0A0E1           MOV      R11,R0
   2494            int scr_h=ScreenH();
   \   00000014   898100EF           SWI      +33161
   2495            int pos_status;
   2496            int pm = pictures_max, pl = pictures_loaded;
   \   00000018   40139FE5           LDR      R1,??onRedraw_0  ;; pictures_max
   \   0000001C   0060A0E1           MOV      R6,R0
   \   00000020   001091E5           LDR      R1,[R1, #+0]
   \   00000024   00108DE5           STR      R1,[SP, #+0]
   \   00000028   34139FE5           LDR      R1,??onRedraw_0+0x4  ;; pictures_loaded
   \   0000002C   001091E5           LDR      R1,[R1, #+0]
   \   00000030   04108DE5           STR      R1,[SP, #+4]
   2497          /*  DrawRoundedFrame(0,YDISP,scr_w-1,scr_h-1,0,0,0,
   2498          		   GetPaletteAdrByColorIndex(0),
   2499          		   GetPaletteAdrByColorIndex(20));*/
   2500            if (data->gui.state==2)
   \   00000034   0C00D4E5           LDRB     R0,[R4, #+12]
   \   00000038   020050E3           CMP      R0,#+2
   \   0000003C   F78FBD18           POPNE    {R0-R2,R4-R11,PC}
   2501            {
   2502            DrawRectangle(0,YDISP,scr_w-1,scr_h-1,0,
   2503          		   GetPaletteAdrByColorIndex(1),
   2504          		   GetPaletteAdrByColorIndex(1));
   2505            DrawImg(0,0,S_ICONS[ICON_LOGO]);
   \   00000040   ........           LDR      R9,??DataTable94  ;; S_ICONS
   \   00000044   0100A0E3           MOV      R0,#+1
   \   00000048   2E0100EF           SWI      +302
   \   0000004C   0050A0E1           MOV      R5,R0
   \   00000050   0100A0E3           MOV      R0,#+1
   \   00000054   2E0100EF           SWI      +302
   \   00000058   20002DE9           PUSH     {R5}
   2506            unsigned long RX=ALLTOTALRECEIVED; unsigned long TX=ALLTOTALSENDED;
   2507            wsprintf(data->ws1,LG_GRSTATESTRING,connect_state,RXstate,RX,TX,sendq_l,hostname,logmsg);
   \   0000005C   ........           LDR      R5,??DataTable95  ;; Canvas
   \   00000060   01002DE9           PUSH     {R0}
   \   00000064   013046E2           SUB      R3,R6,#+1
   \   00000068   01204BE2           SUB      R2,R11,#+1
   \   0000006C   1810A0E3           MOV      R1,#+24
   \   00000070   0000A0E3           MOV      R0,#+0
   \   00000074   01002DE9           PUSH     {R0}
   2508          
   2509            if(total_smiles || xstatuses_load){
   \   00000078   046046E2           SUB      R6,R6,#+4
   \   0000007C   B40100EF           SWI      +436
   \   00000080   502099E5           LDR      R2,[R9, #+80]
   \   00000084   0010A0E3           MOV      R1,#+0
   \   00000088   0000A0E3           MOV      R0,#+0
   \   0000008C   230000EF           SWI      +35
   \   00000090   E00099E5           LDR      R0,[R9, #+224]
   \   00000094   E41099E5           LDR      R1,[R9, #+228]
   \   00000098   9A2F89E2           ADD      R2,R9,#+616
   \   0000009C   04002DE9           PUSH     {R2}
   \   000000A0   FA2F89E2           ADD      R2,R9,#+1000
   \   000000A4   04002DE9           PUSH     {R2}
   \   000000A8   B8229FE5           LDR      R2,??onRedraw_0+0x8  ;; ecmenu_ITEMS + 272
   \   000000AC   002092E5           LDR      R2,[R2, #+0]
   \   000000B0   04002DE9           PUSH     {R2}
   \   000000B4   02002DE9           PUSH     {R1}
   \   000000B8   01002DE9           PUSH     {R0}
   \   000000BC   ........           LDR      R0,??DataTable96  ;; ecmenu_ITEMS + 260
   \   000000C0   421F85E2           ADD      R1,R5,#+264
   \   000000C4   003090E5           LDR      R3,[R0, #+0]
   \   000000C8   ........           LDR      R0,??DataTable97  ;; ecmenu_ITEMS + 264
   \   000000CC   002090E5           LDR      R2,[R0, #+0]
   \   000000D0   340094E5           LDR      R0,[R4, #+52]
   \   000000D4   240100EF           SWI      +292
   \   000000D8   8C029FE5           LDR      R0,??onRedraw_0+0xC  ;; total_smiles
   \   000000DC   000090E5           LDR      R0,[R0, #+0]
   \   000000E0   20D08DE2           ADD      SP,SP,#+32
   \   000000E4   000050E3           CMP      R0,#+0
   \   000000E8   0300001A           BNE      ??onRedraw_1
   \   000000EC   7C029FE5           LDR      R0,??onRedraw_0+0x10  ;; xstatuses_load
   \   000000F0   000090E5           LDR      R0,[R0, #+0]
   \   000000F4   000050E3           CMP      R0,#+0
   \   000000F8   4700000A           BEQ      ??onRedraw_2
   2510               DrawRectangle(0,scr_h-4-2*GetFontYSIZE(FONT_SMALL_BOLD),scr_w-1,scr_h-4-GetFontYSIZE(FONT_MEDIUM_BOLD)-2,0,
   2511                               GetPaletteAdrByColorIndex(0),
   2512                               GetPaletteAdrByColorIndex(0));
   \                     ??onRedraw_1:
   \   000000FC   0000A0E3           MOV      R0,#+0
   \   00000100   2E0100EF           SWI      +302
   \   00000104   0070A0E1           MOV      R7,R0
   \   00000108   0000A0E3           MOV      R0,#+0
   \   0000010C   2E0100EF           SWI      +302
   \   00000110   0080A0E1           MOV      R8,R0
   \   00000114   0500A0E3           MOV      R0,#+5
   \   00000118   C50100EF           SWI      +453
   \   0000011C   00A0A0E1           MOV      R10,R0
   \   00000120   0900A0E3           MOV      R0,#+9
   \   00000124   C50100EF           SWI      +453
   \   00000128   80002DE9           PUSH     {R7}
   \   0000012C   00012DE9           PUSH     {R8}
   \   00000130   0010A0E3           MOV      R1,#+0
   \   00000134   02002DE9           PUSH     {R1}
   \   00000138   01204BE2           SUB      R2,R11,#+1
   \   0000013C   0A1046E0           SUB      R1,R6,R10
   \   00000140   023041E2           SUB      R3,R1,#+2
   \   00000144   801046E0           SUB      R1,R6,R0, LSL #+1
   \   00000148   0000A0E3           MOV      R0,#+0
   \   0000014C   B40100EF           SWI      +436
   2513              pos_status = ((scr_w-1) * pl) / pm;
   2514              DrawRectangle(1,scr_h-4-2*GetFontYSIZE(FONT_SMALL_BOLD)+1,pos_status,scr_h-4-GetFontYSIZE(FONT_MEDIUM_BOLD)-3,0,
   2515                               GetPaletteAdrByColorIndex(14),
   2516                               GetPaletteAdrByColorIndex(14));
   \   00000150   0E00A0E3           MOV      R0,#+14
   \   00000154   2E0100EF           SWI      +302
   \   00000158   0070A0E1           MOV      R7,R0
   \   0000015C   0E00A0E3           MOV      R0,#+14
   \   00000160   2E0100EF           SWI      +302
   \   00000164   0080A0E1           MOV      R8,R0
   \   00000168   0500A0E3           MOV      R0,#+5
   \   0000016C   C50100EF           SWI      +453
   \   00000170   14008DE5           STR      R0,[SP, #+20]
   \   00000174   0900A0E3           MOV      R0,#+9
   \   00000178   C50100EF           SWI      +453
   \   0000017C   00A0A0E1           MOV      R10,R0
   \   00000180   80002DE9           PUSH     {R7}
   \   00000184   00012DE9           PUSH     {R8}
   \   00000188   0000A0E3           MOV      R0,#+0
   \   0000018C   01002DE9           PUSH     {R0}
   \   00000190   1C109DE5           LDR      R1,[SP, #+28]
   \   00000194   20009DE5           LDR      R0,[SP, #+32]
   \   00000198   000046E0           SUB      R0,R6,R0
   \   0000019C   033040E2           SUB      R3,R0,#+3
   \   000001A0   01004BE2           SUB      R0,R11,#+1
   \   000001A4   910000E0           MUL      R0,R1,R0
   \   000001A8   18109DE5           LDR      R1,[SP, #+24]
   \   000001AC   ........           _BLF     ??div32_a,??rA??div32_a
   \   000001B0   0120A0E1           MOV      R2,R1
   \   000001B4   8A0046E0           SUB      R0,R6,R10, LSL #+1
   \   000001B8   011080E2           ADD      R1,R0,#+1
   \   000001BC   0100A0E3           MOV      R0,#+1
   \   000001C0   B40100EF           SWI      +436
   2517              wstrcatprintf(data->ws1,"\nLoading images...");
   \   000001C4   340094E5           LDR      R0,[R4, #+52]
   \   000001C8   F41085E2           ADD      R1,R5,#+244
   \   000001CC   160200EF           SWI      +534
   2518              if (total_smiles){
   \   000001D0   94019FE5           LDR      R0,??onRedraw_0+0xC  ;; total_smiles
   \   000001D4   000090E5           LDR      R0,[R0, #+0]
   \   000001D8   18D08DE2           ADD      SP,SP,#+24
   \   000001DC   000050E3           CMP      R0,#+0
   \   000001E0   0400000A           BEQ      ??onRedraw_3
   2519                wstrcatprintf(data->ws1,"\nLoaded %d smiles",total_smiles);
   \   000001E4   80019FE5           LDR      R0,??onRedraw_0+0xC  ;; total_smiles
   \   000001E8   E01085E2           ADD      R1,R5,#+224
   \   000001EC   002090E5           LDR      R2,[R0, #+0]
   \   000001F0   340094E5           LDR      R0,[R4, #+52]
   \   000001F4   160200EF           SWI      +534
   2520              }
   2521              if (xstatuses_load){
   \                     ??onRedraw_3:
   \   000001F8   70019FE5           LDR      R0,??onRedraw_0+0x10  ;; xstatuses_load
   \   000001FC   000090E5           LDR      R0,[R0, #+0]
   \   00000200   000050E3           CMP      R0,#+0
   \   00000204   0400000A           BEQ      ??onRedraw_2
   2522              wstrcatprintf(data->ws1,"\nLoaded %d xstatus",total_xstatuses2);
   \   00000208   64019FE5           LDR      R0,??onRedraw_0+0x14  ;; total_xstatuses2
   \   0000020C   CC1085E2           ADD      R1,R5,#+204
   \   00000210   002090E5           LDR      R2,[R0, #+0]
   \   00000214   340094E5           LDR      R0,[R4, #+52]
   \   00000218   160200EF           SWI      +534
   2523              }
   2524            }
   2525            DrawString(data->ws1,3,3+YDISP,scr_w-4,scr_h-4-GetFontYSIZE(FONT_MEDIUM_BOLD),
   2526          	     FONT_SMALL,0,GetPaletteAdrByColorIndex(0),GetPaletteAdrByColorIndex(23));
   \                     ??onRedraw_2:
   \   0000021C   1700A0E3           MOV      R0,#+23
   \   00000220   2E0100EF           SWI      +302
   \   00000224   0080A0E1           MOV      R8,R0
   \   00000228   0000A0E3           MOV      R0,#+0
   \   0000022C   2E0100EF           SWI      +302
   \   00000230   00A0A0E1           MOV      R10,R0
   \   00000234   0500A0E3           MOV      R0,#+5
   \   00000238   C50100EF           SWI      +453
   \   0000023C   00012DE9           PUSH     {R8}
   \   00000240   00042DE9           PUSH     {R10}
   2527            wsprintf(data->ws2,percent_t,cltop? lgpData[LGP_GrsKeyClist] :empty_string);
   \   00000244   ........           LDR      R8,??DataTable124  ;; lgpData
   \   00000248   0010A0E3           MOV      R1,#+0
   \   0000024C   02002DE9           PUSH     {R1}
   \   00000250   000046E0           SUB      R0,R6,R0
   \   00000254   04704BE2           SUB      R7,R11,#+4
   \   00000258   0730A0E1           MOV      R3,R7
   \   0000025C   0810A0E3           MOV      R1,#+8
   \   00000260   02002DE9           PUSH     {R1}
   \   00000264   01002DE9           PUSH     {R0}
   \   00000268   340094E5           LDR      R0,[R4, #+52]
   \   0000026C   1B20A0E3           MOV      R2,#+27
   \   00000270   0310A0E3           MOV      R1,#+3
   \   00000274   4C0100EF           SWI      +332
   \   00000278   E80099E5           LDR      R0,[R9, #+232]
   \   0000027C   14D08DE2           ADD      SP,SP,#+20
   \   00000280   000050E3           CMP      R0,#+0
   \   00000284   EC009F05           LDREQ    R0,??onRedraw_0+0x18  ;; ecmenu_ITEMS + 252
   \   00000288   48219815           LDRNE    R2,[R8, #+328]
   \   0000028C   081085E2           ADD      R1,R5,#+8
   \   00000290   00209005           LDREQ    R2,[R0, #+0]
   \   00000294   380094E5           LDR      R0,[R4, #+56]
   2528            DrawString(data->ws2,(scr_w >> 1),scr_h-4-GetFontYSIZE(FONT_MEDIUM_BOLD),
   2529          	     scr_w-4,scr_h-4,FONT_MEDIUM_BOLD,TEXT_ALIGNRIGHT,GetPaletteAdrByColorIndex(0),GetPaletteAdrByColorIndex(23));
   \   00000298   CBB0A0E1           ASR      R11,R11,#+1
   \   0000029C   240100EF           SWI      +292
   \   000002A0   1700A0E3           MOV      R0,#+23
   \   000002A4   2E0100EF           SWI      +302
   \   000002A8   0090A0E1           MOV      R9,R0
   \   000002AC   0000A0E3           MOV      R0,#+0
   \   000002B0   2E0100EF           SWI      +302
   \   000002B4   00A0A0E1           MOV      R10,R0
   \   000002B8   0500A0E3           MOV      R0,#+5
   \   000002BC   C50100EF           SWI      +453
   \   000002C0   00022DE9           PUSH     {R9}
   \   000002C4   00042DE9           PUSH     {R10}
   \   000002C8   0410A0E3           MOV      R1,#+4
   \   000002CC   02002DE9           PUSH     {R1}
   \   000002D0   0730A0E1           MOV      R3,R7
   \   000002D4   002046E0           SUB      R2,R6,R0
   \   000002D8   0510A0E3           MOV      R1,#+5
   \   000002DC   02002DE9           PUSH     {R1}
   \   000002E0   0610A0E1           MOV      R1,R6
   \   000002E4   02002DE9           PUSH     {R1}
   \   000002E8   380094E5           LDR      R0,[R4, #+56]
   \   000002EC   0B10A0E1           MOV      R1,R11
   \   000002F0   4C0100EF           SWI      +332
   2530            wsprintf(data->ws2,percent_t, lgpData[LGP_GrsKeyExit] );
   \   000002F4   380094E5           LDR      R0,[R4, #+56]
   \   000002F8   442198E5           LDR      R2,[R8, #+324]
   \   000002FC   081085E2           ADD      R1,R5,#+8
   \   00000300   240100EF           SWI      +292
   2531            DrawString(data->ws2,3,scr_h-4-GetFontYSIZE(FONT_MEDIUM_BOLD),
   2532          	     scr_w>>1,scr_h-4,FONT_MEDIUM_BOLD,TEXT_ALIGNLEFT,GetPaletteAdrByColorIndex(0),GetPaletteAdrByColorIndex(23));
   \   00000304   1700A0E3           MOV      R0,#+23
   \   00000308   2E0100EF           SWI      +302
   \   0000030C   0050A0E1           MOV      R5,R0
   \   00000310   0000A0E3           MOV      R0,#+0
   \   00000314   2E0100EF           SWI      +302
   \   00000318   0070A0E1           MOV      R7,R0
   \   0000031C   0500A0E3           MOV      R0,#+5
   \   00000320   C50100EF           SWI      +453
   \   00000324   20002DE9           PUSH     {R5}
   \   00000328   80002DE9           PUSH     {R7}
   \   0000032C   0110A0E3           MOV      R1,#+1
   \   00000330   02002DE9           PUSH     {R1}
   \   00000334   0B30A0E1           MOV      R3,R11
   \   00000338   002046E0           SUB      R2,R6,R0
   \   0000033C   0510A0E3           MOV      R1,#+5
   \   00000340   02002DE9           PUSH     {R1}
   \   00000344   0610A0E1           MOV      R1,R6
   \   00000348   02002DE9           PUSH     {R1}
   \   0000034C   380094E5           LDR      R0,[R4, #+56]
   \   00000350   0310A0E3           MOV      R1,#+3
   \   00000354   4C0100EF           SWI      +332
   \   00000358   28D08DE2           ADD      SP,SP,#+40
   2533          }
   2534          }
   \   0000035C   F78FBDE8           POP      {R0-R2,R4-R11,PC}  ;; return
   \                     ??onRedraw_0:
   \   00000360   ........           DC32     pictures_max
   \   00000364   ........           DC32     pictures_loaded
   \   00000368   ........           DC32     ecmenu_ITEMS + 272
   \   0000036C   ........           DC32     total_smiles
   \   00000370   ........           DC32     xstatuses_load
   \   00000374   ........           DC32     total_xstatuses2
   \   00000378   ........           DC32     ecmenu_ITEMS + 252
   2535          

   \                                 In segment CODE, align 4, keep-with-next
   2536          void onCreate(MAIN_GUI *data,void *(*malloc_adr)(int))
   2537          {
   \                     onCreate:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   08D04DE2           SUB      SP,SP,#+8
   2538            TTime t;
   2539            GetDateTime(0,&t);
   \   00000008   0D10A0E1           MOV      R1,SP
   \   0000000C   0040A0E1           MOV      R4,R0
   \   00000010   0000A0E3           MOV      R0,#+0
   \   00000014   B40000EF           SWI      +180
   2540            msrand(t.sec);
   \   00000018   0200DDE5           LDRB     R0,[SP, #+2]
   \   0000001C   ........           _BLF     msrand,??msrand??rA
   2541            data->ws1=AllocWS(256);
   \   00000020   400FA0E3           MOV      R0,#+256
   \   00000024   250100EF           SWI      +293
   \   00000028   340084E5           STR      R0,[R4, #+52]
   2542            data->ws2=AllocWS(256);
   \   0000002C   400FA0E3           MOV      R0,#+256
   \   00000030   250100EF           SWI      +293
   \   00000034   380084E5           STR      R0,[R4, #+56]
   2543            data->gui.state=1;
   \   00000038   0100A0E3           MOV      R0,#+1
   \   0000003C   0C00C4E5           STRB     R0,[R4, #+12]
   2544          }
   \   00000040   1380BDE8           POP      {R0,R1,R4,PC}    ;; return
   2545          

   \                                 In segment CODE, align 4, keep-with-next
   2546          void onClose(MAIN_GUI *data,void (*mfree_adr)(void *))
   2547          {
   \                     onClose:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   2548            FreeWS(data->ws1);
   \   00000008   340094E5           LDR      R0,[R4, #+52]
   \   0000000C   290100EF           SWI      +297
   2549            FreeWS(data->ws2);
   \   00000010   380094E5           LDR      R0,[R4, #+56]
   \   00000014   290100EF           SWI      +297
   2550            data->gui.state=0;
   \   00000018   0000A0E3           MOV      R0,#+0
   \   0000001C   0C00C4E5           STRB     R0,[R4, #+12]
   2551          }
   \   00000020   1080BDE8           POP      {R4,PC}          ;; return
   2552          

   \                                 In segment CODE, align 4, keep-with-next
   2553          void onFocus(MAIN_GUI *data,void *(*malloc_adr)(int),void (*mfree_adr)(void *))
   2554          {
   \                     onFocus:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   2555          #ifdef ELKA
   2556            DisableIconBar(1);
   \   00000008   0100A0E3           MOV      R0,#+1
   \   0000000C   3B0200EF           SWI      +571
   2557          #endif
   2558            DisableIDLETMR();
   \   00000010   7F0100EF           SWI      +383
   2559            data->gui.state=2;
   \   00000014   0200A0E3           MOV      R0,#+2
   \   00000018   0C00C4E5           STRB     R0,[R4, #+12]
   2560            DirectRedrawGUI();
   \   0000001C   3F0100EF           SWI      +319
   2561          }
   \   00000020   1080BDE8           POP      {R4,PC}          ;; return
   2562          

   \                                 In segment CODE, align 4, keep-with-next
   2563          void onUnfocus(MAIN_GUI *data,void (*mfree_adr)(void *))
   2564          {
   \                     onUnfocus:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   2565          #ifdef ELKA
   2566            DisableIconBar(0);
   \   00000008   0000A0E3           MOV      R0,#+0
   \   0000000C   3B0200EF           SWI      +571
   2567          #endif
   2568            if (data->gui.state!=2)
   \   00000010   0C00D4E5           LDRB     R0,[R4, #+12]
   \   00000014   020050E3           CMP      R0,#+2
   2569              return;
   2570            data->gui.state=1;
   \   00000018   0100A003           MOVEQ    R0,#+1
   \   0000001C   0C00C405           STRBEQ   R0,[R4, #+12]
   2571          }
   \   00000020   1080BDE8           POP      {R4,PC}          ;; return
   2572          

   \                                 In segment CODE, align 4, keep-with-next
   2573          int onKey(MAIN_GUI *data,GUI_MSG *msg)
   2574          {
   \                     onKey:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0140A0E1           MOV      R4,R1
   2575            DirectRedrawGUI();
   \   0000000C   3F0100EF           SWI      +319
   2576            if (msg->gbsmsg->msg==KEY_DOWN)
   \   00000010   040094E5           LDR      R0,[R4, #+4]
   \   00000014   9320A0E3           MOV      R2,#+147
   \   00000018   041090E5           LDR      R1,[R0, #+4]
   \   0000001C   402F82E3           ORR      R2,R2,#0x100
   \   00000020   020051E1           CMP      R1,R2
   \   00000024   2600001A           BNE      ??onKey_0
   2577            {
   2578              switch(msg->gbsmsg->submess)
   \   00000028   080090E5           LDR      R0,[R0, #+8]
   \   0000002C   ........           LDR      R4,??DataTable123  ;; create_connect
   \   00000030   ........           LDR      R5,??DataTable114  ;; ecmenu_ITEMS
   \   00000034   ........           LDR      R8,??DataTable103  ;; S_ICONS
   \   00000038   0360A0E3           MOV      R6,#+3
   \   0000003C   E27FA0E3           MOV      R7,#+904
   \   00000040   0010A0E3           MOV      R1,#+0
   \   00000044   010050E2           SUBS     R0,R0,#+1
   \   00000048   0600000A           BEQ      ??onKey_1
   \   0000004C   030050E2           SUBS     R0,R0,#+3
   \   00000050   0600000A           BEQ      ??onKey_2
   \   00000054   070050E2           SUBS     R0,R0,#+7
   \   00000058   0A00000A           BEQ      ??onKey_3
   \   0000005C   250050E2           SUBS     R0,R0,#+37
   \   00000060   0F00000A           BEQ      ??onKey_4
   \   00000064   050000EA           B        ??onKey_5
   2579              {
   2580              case LEFT_SOFT:
   2581                return(1); //Происходит вызов GeneralFunc для тек. GUI -> закрытие GUI
   \                     ??onKey_1:
   \   00000068   0100A0E3           MOV      R0,#+1
   \   0000006C   F281BDE8           POP      {R1,R4-R8,PC}
   2582              case RIGHT_SOFT:
   2583                //      if (cltop) remake_clmenu();
   2584                if (cltop) create_contactlist_menu();
   \                     ??onKey_2:
   \   00000070   E80098E5           LDR      R0,[R8, #+232]
   \   00000074   000050E3           CMP      R0,#+0
   \   00000078   F281BD08           POPEQ    {R1,R4-R8,PC}
   \   0000007C   ........           BL       create_contactlist_menu
   \                     ??onKey_5:
   \   00000080   0000A0E3           MOV      R0,#+0
   \   00000084   F281BDE8           POP      {R1,R4-R8,PC}
   2585                break;
   2586              case GREEN_BUTTON:
   2587                disautorecconect=0;
   \                     ??onKey_3:
   \   00000088   A01088E5           STR      R1,[R8, #+160]
   2588                if ((connect_state==0)&&(sock==-1))
   \   0000008C   080195E5           LDR      R0,[R5, #+264]
   \   00000090   000050E3           CMP      R0,#+0
   \   00000094   0C019505           LDREQ    R0,[R5, #+268]
   \   00000098   01007003           CMNEQ    R0,#+1
   \   0000009C   0800001A           BNE      ??onKey_0
   2589                {
   2590                  GBS_DelTimer(&reconnect_tmr);
   \   000000A0   020000EA           B        ??onKey_6
   2591          	DNR_TRIES=3;
   2592                  SUBPROC((void *)create_connect);
   2593                }
   2594                break;
   2595              case '0':
   2596                disautorecconect=0;
   2597                SUBPROC((void*)end_socket);
   \                     ??onKey_4:
   \   000000A4   ........           LDR      R0,??DataTable127  ;; end_socket
   \   000000A8   A01088E5           STR      R1,[R8, #+160]
   \   000000AC   710100EF           SWI      +369
   2598                GBS_DelTimer(&reconnect_tmr);
   \                     ??onKey_6:
   \   000000B0   080087E0           ADD      R0,R7,R8
   \   000000B4   8C0100EF           SWI      +396
   2599                DNR_TRIES=3;
   \   000000B8   246185E5           STR      R6,[R5, #+292]
   2600                SUBPROC((void *)create_connect);
   \   000000BC   0400A0E1           MOV      R0,R4
   \   000000C0   710100EF           SWI      +369
   2601                break;
   2602              }
   2603            }
   2604            return(0);
   \                     ??onKey_0:
   \   000000C4   0000A0E3           MOV      R0,#+0
   \   000000C8   F281BDE8           POP      {R1,R4-R8,PC}    ;; return
   2605          }
   2606          

   \                                 In segment CODE, align 4, keep-with-next
   2607          int method8(void){return(0);}
   \                     method8:
   \   00000000   0000A0E3           MOV      R0,#+0
   \   00000004   1EFF2FE1           BX       LR               ;; return
   2608          

   \                                 In segment CODE, align 4, keep-with-next
   2609          int method9(void){return(0);}
   \                     method9:
   \   00000000   0000A0E3           MOV      R0,#+0
   \   00000004   1EFF2FE1           BX       LR               ;; return

   \                                 In segment DATA_C, align 4, align-sorted
   2610          
   2611          const void * const gui_methods[11]={
   2612            (void *)onRedraw,
   2613            (void *)onCreate,
   2614            (void *)onClose,
   2615            (void *)onFocus,
   2616            (void *)onUnfocus,
   2617            (void *)onKey,
   2618            0,
   2619            (void *)kill_data, //Destroy
   2620            (void *)method8,
   2621            (void *)method9,
   2622            0
   2623          };
   2624          
   2625          const RECT Canvas={0,0,0,0};
   \                     Canvas:
   \   00000000   000000000000       DC16 0, 0, 0, 0
   \              0000        
   \                     percent_t:
   \   00000008   257400             DC8 "%t"
   \                     percent_d:
   \   0000000B   256400             DC8 "%d"
   \   0000000E   0000               DC8 0, 0
   \   00000010   54727920746F       DC8 "Try to login..."
   \              206C6F67696E
   \              2E2E2E00    
   \   00000020   2563257400         DC8 "%c%t"
   \   00000025   000000             DC8 0, 0, 0
   \   00000028   446973636F6E       DC8 "Disconnected, %d bytes not sended!"
   \              6E6563746564
   \              2C2025642062
   \              79746573206E
   \              6F742073656E
   \              6465642100  
   \   0000004B   00                 DC8 0
   \   0000004C   25730ACEF8E8       DC8 "%s\012\316\370\350\341\352\340, \357\345\360\345\357\356\344\352\353\376\367\345\355\350\345 \367\345\360\345\347 %d \361\345\352\363\355\344..."
   \              E1EAE02C20EF
   \              E5F0E5EFEEE4
   \              EAEBFEF7E5ED
   \              E8E520F7E5F0
   \              E5E720256420
   \              F1E5EAF3EDE4
   \              2E2E2E00    
   \   0000007A   0000               DC8 0, 0
   \   0000007C   4750525320F1       DC8 47H, 50H, 52H, 53H, 20H, 0F1H, 0E5H, 0F1H
   \              E5F1        
   \   00000084   F1E8FF20E7E0       DC8 0F1H, 0E8H, 0FFH, 20H, 0E7H, 0E0H, 0EFH, 0F3H
   \              EFF3        
   \   0000008C   F9E5EDE02C20       DC8 0F9H, 0E5H, 0EDH, 0E0H, 2CH, 20H, 0EFH, 0EEH
   \              EFEE        
   \   00000094   E4EAEBFEF7E5       DC8 0E4H, 0EAH, 0EBH, 0FEH, 0F7H, 0E5H, 0EDH, 0E8H
   \              EDE8        
   \   0000009C   E520F7E5F0E5       DC8 0E5H, 20H, 0F7H, 0E5H, 0F0H, 0E5H, 0E7H, 20H
   \              E720        
   \   000000A4   256420F1E5EA       DC8 25H, 64H, 20H, 0F1H, 0E5H, 0EAH, 0F3H, 0EDH
   \              F3ED        
   \   000000AC   E42E2E2E00         DC8 0E4H, 2EH, 2EH, 2EH, 0
   \   000000B1   000000             DC8 0, 0, 0
   \   000000B4   4E6174494351       DC8 "NatICQ config reloaded!"
   \              20636F6E6669
   \              672072656C6F
   \              616465642100
   \   000000CC   0A4C6F616465       DC8 "\012Loaded %d xstatus"
   \              642025642078
   \              737461747573
   \              00          
   \   000000DF   00                 DC8 0
   \   000000E0   0A4C6F616465       DC8 "\012Loaded %d smiles"
   \              642025642073
   \              6D696C657300
   \   000000F2   0000               DC8 0, 0
   \   000000F4   0A4C6F616469       DC8 "\012Loading images..."
   \              6E6720696D61
   \              6765732E2E2E
   \              00          
   \   00000107   00                 DC8 0
   \   00000108   53746174653A       DC8 53H, 74H, 61H, 74H, 65H, 3AH, 20H, 25H
   \              2025        
   \   00000110   642C20525873       DC8 64H, 2CH, 20H, 52H, 58H, 73H, 74H, 61H
   \              7461        
   \   00000118   74653A202564       DC8 74H, 65H, 3AH, 20H, 25H, 64H, 0AH, 52H
   \              0A52        
   \   00000120   783A2564622C       DC8 78H, 3AH, 25H, 64H, 62H, 2CH, 20H, 54H
   \              2054        
   \   00000128   783A2564620A       DC8 78H, 3AH, 25H, 64H, 62H, 0AH, 51H, 75H
   \              5175        
   \   00000130   6575653A2025       DC8 65H, 75H, 65H, 3AH, 20H, 25H, 64H, 62H
   \              6462        
   \   00000138   0A25730A2574       DC8 0AH, 25H, 73H, 0AH, 25H, 74H, 0
   \              00          
   \   0000013F   00                 DC8 0
   \   00000140   2825642F2564       DC8 "(%d/%d)"
   \              2900        
   \   00000148   2577257400         DC8 "%w%t"
   \   0000014D   000000             DC8 0, 0, 0
   \   00000150   5B25645D2000       DC8 "[%d] "
   \   00000156   0000               DC8 0, 0
   \                     ipc_my_name:
   \   00000158   4E6174494351       DC8 "NatICQ"
   \              00          
   \   0000015F   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000016F   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000      
   \                     ipc_xtask_name:
   \   00000178   585461736B00       DC8 "XTask"
   \   0000017E   0000               DC8 0, 0
   \                     x_status_change:
   \   00000180   582D53746174       DC8 "X-Status change"
   \              757320636861
   \              6E676500    
   \                     gui_methods:
   \   00000190   ............       DC32 onRedraw, onCreate, onClose, onFocus, onUnfocus, onKey, 0H
   \              ............
   \              ............
   \              ............
   \              00000000    
   \   000001AC   ............       DC32 kill_data, method8, method9, 0H
   \              ............
   \              00000000    

   \                                 In segment DATA_C, align 4, align-sorted
   \                     S_OFFLINE:
   \   00000000   4F66666C696E       DC8 "Offline"
   \              6500        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     S_INVISIBLE:
   \   00000000   496E76697369       DC8 "Invisible"
   \              626C6500    
   \   0000000A   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     S_AWAY:
   \   00000000   4177617900         DC8 "Away"
   \   00000005   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     S_NA:
   \   00000000   4E2F4100           DC8 "N/A"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     S_OCCUPIED:
   \   00000000   4F6363757069       DC8 "Occupied"
   \              656400      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     S_DND:
   \   00000000   444E4400           DC8 "DND"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     S_ONLINE:
   \   00000000   4F6E6C696E65       DC8 "Online"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     S_FFC:
   \   00000000   46464300           DC8 "FFC"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\\\">_3`:
   \   00000000   5C00               DC8 "\\"
   \   00000002   0000               DC8 0, 0
   \   00000004   ............       DC32 `?<Constant "offline.png">`, `?<Constant "invisible.png">`
   \              ....        
   \   0000000C   ............       DC32 `?<Constant "away.png">`, `?<Constant "na.png">`
   \              ....        
   \   00000014   ............       DC32 `?<Constant "occupied.png">`, `?<Constant "dnd.png">`
   \              ....        
   \   0000001C   ............       DC32 `?<Constant "depression.png">`, `?<Constant "evil.png">`
   \              ....        
   \   00000024   ............       DC32 `?<Constant "home.png">`, `?<Constant "lunch.png">`
   \              ....        
   \   0000002C   ............       DC32 `?<Constant "work.png">`, `?<Constant "online.png">`
   \              ....        
   \   00000034   ............       DC32 `?<Constant "ffc.png">`, `?<Constant "message.png">`
   \              ....        
   \   0000003C   ............       DC32 `?<Constant "unknown.png">`, `?<Constant "groupon.png">`
   \              ....        
   \   00000044   ............       DC32 `?<Constant "groupoff.png">`, `?<Constant "null.png">`
   \              ....        
   \   0000004C   ............       DC32 `?<Constant "addcont.png">`, `?<Constant "head.png">`
   \              ....        
   \   00000054   ............       DC32 `?<Constant "logo.png">`, `?<Constant "ping.png">`
   \              ....        
   \   0000005C   ............       DC32 `?<Constant "settings.png">`, `?<Constant "vis1.png">`
   \              ....        
   \   00000064   ............       DC32 `?<Constant "vis2.png">`, `?<Constant "vis3.png">`
   \              ....        
   \   0000006C   ............       DC32 `?<Constant "vis4.png">`, `?<Constant "vis5.png">`
   \              ....        

   \                                 In segment DATA_C, align 1, align-sorted
   \                     empty_str:
   \   00000000   00                 DC8 ""

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\\\">`:
   \   00000000   5C00               DC8 "\\"
   \                     I_str:
   \   00000002   4900               DC8 "I"
   \   00000004   2573746D7025       DC8 "%stmp%u.url"
   \              752E75726C00
   \   00000010   526571756573       DC8 "Request info..."
   \              7420696E666F
   \              2E2E2E00    

   \                                 In segment DATA_C, align 4, align-sorted
   \                     def_setting:
   \   00000000   25736465665F       DC8 "%sdef_settings_%d"
   \              73657474696E
   \              67735F256400
   \   00000012   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     menusoftkeys:
   \   00000000   000000000100       DC32 0, 1, 2
   \              000002000000

   \                                 In segment DATA_C, align 4, align-sorted
   \                     menu_skt:
   \   00000000   ........0000       DC32 menu_sk, 0
   \              0000        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     clmenu_skt:
   \   00000000   ........0000       DC32 clmenu_sk, 0
   \              0000        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     contactlist_menu:
   \   00000000   08000000....       DC32 8, contactlist_menu_onkey, contactlist_menu_ghook, 0H
   \              ............
   \              00000000    
   \   00000010   ............       DC32 menusoftkeys, clmenu_skt, 17, contactlist_menu_iconhndl, 0H, 0H, 0
   \              ....11000000
   \              ........0000
   \              000000000000
   \              00000000    
   \   0000002C   01000000           DC32 1
   2626          

   \                                 In segment CODE, align 4, keep-with-next
   2627          void maincsm_oncreate(CSM_RAM *data)
   2628          {
   \                     maincsm_oncreate:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0050A0E1           MOV      R5,R0
   2629            MAIN_GUI *main_gui=malloc(sizeof(MAIN_GUI));
   \   00000008   4000A0E3           MOV      R0,#+64
   2630            MAIN_CSM*csm=(MAIN_CSM*)data;
   2631            zeromem(main_gui,sizeof(MAIN_GUI));
   2632            patch_rect((RECT*)&Canvas,0,0,ScreenW()-1,ScreenH()-1);
   \   0000000C   0070A0E3           MOV      R7,#+0
   \   00000010   140000EF           SWI      +20
   \   00000014   0060A0E1           MOV      R6,R0
   \   00000018   4010A0E3           MOV      R1,#+64
   \   0000001C   1D0100EF           SWI      +285
   \   00000020   898100EF           SWI      +33161
   \   00000024   0040A0E1           MOV      R4,R0
   \   00000028   888100EF           SWI      +33160
   \   0000002C   011044E2           SUB      R1,R4,#+1
   \   00000030   BC409FE5           LDR      R4,??maincsm_oncreate_0  ;; Canvas
   \   00000034   010040E2           SUB      R0,R0,#+1
   \   00000038   007084E5           STR      R7,[R4, #+0]
   \   0000003C   B400C4E1           STRH     R0,[R4, #+4]
   \   00000040   B610C4E1           STRH     R1,[R4, #+6]
   2633            main_gui->gui.canvas=(void *)(&Canvas);
   \   00000044   004086E5           STR      R4,[R6, #+0]
   2634          //  main_gui->gui.flag30=2;
   2635            main_gui->gui.methods=(void *)gui_methods;
   \   00000048   640F84E2           ADD      R0,R4,#+400
   \   0000004C   040086E5           STR      R0,[R6, #+4]
   2636            main_gui->gui.item_ll.data_mfree=(void (*)(void *))mfree_adr();
   \   00000050   158000EF           SWI      +32789
   \   00000054   200086E5           STR      R0,[R6, #+32]
   2637            csm->csm.state=0;
   \   00000058   107085E5           STR      R7,[R5, #+16]
   2638            csm->csm.unk1=0;
   \   0000005C   147085E5           STR      R7,[R5, #+20]
   2639            maingui_id=csm->gui_id=CreateGUI(main_gui);
   \   00000060   0600A0E1           MOV      R0,R6
   \   00000064   370100EF           SWI      +311
   \   00000068   280085E5           STR      R0,[R5, #+40]
   \   0000006C   ........           LDR      R5,??DataTable103  ;; S_ICONS
   \   00000070   900085E5           STR      R0,[R5, #+144]
   2640            ews=AllocWS(16384);
   \   00000074   400CA0E3           MOV      R0,#+16384
   \   00000078   250100EF           SWI      +293
   2641            //  MutexCreate(&contactlist_mtx);
   2642            DNR_TRIES=3;
   2643            GBS_StartTimerProc(&tmr_active,TMR_SECOND*10,process_active_timer);
   \   0000007C   ........           LDR      R2,??DataTable104  ;; process_active_timer
   \   00000080   980085E5           STR      R0,[R5, #+152]
   \   00000084   6C009FE5           LDR      R0,??maincsm_oncreate_0+0x4  ;; ecmenu_ITEMS + 292
   \   00000088   0310A0E3           MOV      R1,#+3
   \   0000008C   001080E5           STR      R1,[R0, #+0]
   \   00000090   871EA0E3           MOV      R1,#+2160
   \   00000094   E60F85E2           ADD      R0,R5,#+920
   \   00000098   4D0000EF           SWI      +77
   2644            sprintf((char *)ipc_my_name+6,percent_d,UIN);
   \   0000009C   ........           LDR      R0,??DataTable139  ;; UIN
   \   000000A0   0B1084E2           ADD      R1,R4,#+11
   \   000000A4   002090E5           LDR      R2,[R0, #+0]
   \   000000A8   5E00A0E3           MOV      R0,#+94
   \   000000AC   400F80E3           ORR      R0,R0,#0x100
   \   000000B0   040080E0           ADD      R0,R0,R4
   \   000000B4   160000EF           SWI      +22
   2645            gipc.name_to=ipc_my_name;
   \   000000B8   560FA0E3           MOV      R0,#+344
   \   000000BC   041080E0           ADD      R1,R0,R4
   \   000000C0   741085E5           STR      R1,[R5, #+116]
   2646            gipc.name_from=ipc_my_name;
   \   000000C4   040080E0           ADD      R0,R0,R4
   \   000000C8   780085E5           STR      R0,[R5, #+120]
   2647            gipc.data=(void *)-1;
   \   000000CC   0700E0E1           MVN      R0,R7
   \   000000D0   7C0085E5           STR      R0,[R5, #+124]
   2648            GBS_SendMessage(MMI_CEPID,MSG_IPC,IPC_CHECK_DOUBLERUN,&gipc);
   \   000000D4   743085E2           ADD      R3,R5,#+116
   \   000000D8   0120A0E3           MOV      R2,#+1
   \   000000DC   B010A0E3           MOV      R1,#+176
   \   000000E0   DE1C81E3           ORR      R1,R1,#0xDE00
   \   000000E4   0900A0E3           MOV      R0,#+9
   \   000000E8   420C80E3           ORR      R0,R0,#0x4200
   \   000000EC   000100EF           SWI      +256
   2649          }
   \   000000F0   F080BDE8           POP      {R4-R7,PC}       ;; return
   \                     ??maincsm_oncreate_0:
   \   000000F4   ........           DC32     Canvas
   \   000000F8   ........           DC32     ecmenu_ITEMS + 292
   2650          

   \                                 In segment CODE, align 4, keep-with-next
   2651          void maincsm_onclose(CSM_RAM *csm)
   2652          {
   \                     maincsm_onclose:
   \   00000000   10402DE9           PUSH     {R4,LR}
   2653            WriteDefSettings();
   2654            //  SaveConfigData(successed_config_filename);
   2655          /*
   2656            #pragma segment="CONFIG_C"
   2657            unsigned int ul;
   2658            int f;
   2659            extern const CFG_HDR cfghdr0; //first var in CONFIG
   2660            void *cfg=(void*)&cfghdr0;
   2661            unsigned int len=(int)__segment_end("CONFIG_C")-(int)__segment_begin("CONFIG_C");
   2662          
   2663            if ((f=fopen("4:\\ZBin\\etc\\NATICQ.bcfg",A_ReadWrite+A_Create+A_Truncate,P_READ+P_WRITE,&ul))==-1){
   2664             f=fopen("0:\\ZBin\\etc\\NATICQ.bcfg",A_ReadWrite+A_Create+A_Truncate,P_READ+P_WRITE,&ul);
   2665            }
   2666            fwrite(f,cfg,len,&ul);
   2667            fclose(f,&ul);
   2668          */
   2669          
   2670            //  GBS_DelTimer(&tmr_dorecv);
   2671            GBS_DelTimer(&tmr_active);
   \   00000004   ........           LDR      R4,??DataTable138  ;; S_ICONS
   \   00000008   ........           BL       WriteDefSettings
   \   0000000C   E60F84E2           ADD      R0,R4,#+920
   \   00000010   8C0100EF           SWI      +396
   2672            GBS_DelTimer(&tmr_vibra);
   \   00000014   DE0F84E2           ADD      R0,R4,#+888
   \   00000018   8C0100EF           SWI      +396
   2673            GBS_DelTimer(&reconnect_tmr);
   \   0000001C   E20F84E2           ADD      R0,R4,#+904
   \   00000020   8C0100EF           SWI      +396
   2674            GBS_DelTimer(&tmr_illumination);
   \   00000024   DA0F84E2           ADD      R0,R4,#+872
   \   00000028   8C0100EF           SWI      +396
   2675            //  <tridog/>
   2676            //  2.01.11. Автостатус.
   2677            DisposeAutoStatusEngine();
   \   0000002C   ........           _BLF     DisposeAutoStatusEngine,??DisposeAutoStatusEngine??rA
   2678            //  </tridog>
   2679            SetVibration(0);
   \   00000030   0000A0E3           MOV      R0,#+0
   \   00000034   7C0000EF           SWI      +124
   2680            FreeTemplates();
   \   00000038   ........           BL       FreeTemplates
   2681            FreeCLIST();
   \   0000003C   ........           _BLF     FreeCLIST,??FreeCLIST??rA
   2682            free_ICONS();
   \   00000040   ........           BL       free_ICONS
   2683            //  FreeSmiles();
   2684            FreeWS(ews);
   \   00000044   980094E5           LDR      R0,[R4, #+152]
   \   00000048   290100EF           SWI      +297
   2685            FreeXStatusText();
   \   0000004C   ........           _BLF     FreeXStatusText,??FreeXStatusText??rA
   2686            lgpFreeLangPack();
   \   00000050   ........           _BLF     lgpFreeLangPack,??lgpFreeLangPack??rA
   2687            //  MutexDestroy(&contactlist_mtx);
   2688            SUBPROC((void *)FreeSmiles);
   \   00000054   24009FE5           LDR      R0,??maincsm_onclose_0  ;; FreeSmiles
   \   00000058   710100EF           SWI      +369
   2689            SUBPROC((void *)FreeXStatusesImg);
   \   0000005C   20009FE5           LDR      R0,??maincsm_onclose_0+0x4  ;; FreeXStatusesImg
   \   00000060   710100EF           SWI      +369
   2690            SUBPROC((void *)end_socket);
   \   00000064   ........           LDR      R0,??DataTable127  ;; end_socket
   \   00000068   710100EF           SWI      +369
   2691            SUBPROC((void *)ClearSendQ);
   \   0000006C   ........           LDR      R0,??DataTable128  ;; ClearSendQ
   \   00000070   710100EF           SWI      +369
   2692            SUBPROC((void *)ElfKiller);
   \   00000074   ........           LDR      R0,??DataTable140  ;; ElfKiller
   \   00000078   710100EF           SWI      +369
   2693          }
   \   0000007C   1080BDE8           POP      {R4,PC}          ;; return
   \                     ??maincsm_onclose_0:
   \   00000080   ........           DC32     FreeSmiles
   \   00000084   ........           DC32     FreeXStatusesImg
   2694          

   \                                 In segment CODE, align 4, keep-with-next
   2695          void do_reconnect(void)
   2696          {
   2697            if (is_gprs_online)
   \                     do_reconnect:
   \   00000000   ........           LDR      R0,??DataTable114  ;; ecmenu_ITEMS
   \   00000004   00402DE9           PUSH     {LR}
   \   00000008   181190E5           LDR      R1,[R0, #+280]
   \   0000000C   000051E3           CMP      R1,#+0
   \   00000010   0080BD08           POPEQ    {PC}
   2698            {
   2699              DNR_TRIES=3;
   \   00000014   0310A0E3           MOV      R1,#+3
   \   00000018   241180E5           STR      R1,[R0, #+292]
   2700              SUBPROC((void*)create_connect);
   \   0000001C   ........           LDR      R0,??DataTable123  ;; create_connect
   \   00000020   710100EF           SWI      +369
   2701            }
   2702          }
   \   00000024   0080BDE8           POP      {PC}             ;; return
   2703          

   \                                 In segment CODE, align 4, keep-with-next
   2704          void CheckDoubleRun(void)
   2705          {
   \                     CheckDoubleRun:
   \   00000000   10402DE9           PUSH     {R4,LR}
   2706            int csm_id;
   2707            if ((csm_id=(int)(gipc.data))!=-1)
   \   00000004   ........           LDR      R4,??DataTable138  ;; S_ICONS
   \   00000008   7C0094E5           LDR      R0,[R4, #+124]
   \   0000000C   010070E3           CMN      R0,#+1
   \   00000010   1100000A           BEQ      ??CheckDoubleRun_0
   2708            {
   2709              gipc.name_to=ipc_xtask_name;
   \   00000014   ........           LDR      R1,??DataTable116  ;; Canvas
   2710              gipc.name_from=ipc_my_name;
   2711              gipc.data=(void *)csm_id;
   \   00000018   7C0084E5           STR      R0,[R4, #+124]
   \   0000001C   5E2F81E2           ADD      R2,R1,#+376
   \   00000020   742084E5           STR      R2,[R4, #+116]
   \   00000024   561F81E2           ADD      R1,R1,#+344
   \   00000028   781084E5           STR      R1,[R4, #+120]
   2712              GBS_SendMessage(MMI_CEPID,MSG_IPC,IPC_XTASK_SHOW_CSM,&gipc);
   \   0000002C   743084E2           ADD      R3,R4,#+116
   \   00000030   0220A0E3           MOV      R2,#+2
   \   00000034   B010A0E3           MOV      R1,#+176
   \   00000038   DE1C81E3           ORR      R1,R1,#0xDE00
   \   0000003C   0900A0E3           MOV      R0,#+9
   \   00000040   420C80E3           ORR      R0,R0,#0x4200
   \   00000044   000100EF           SWI      +256
   2713              LockSched();
   \   00000048   460100EF           SWI      +326
   2714              CloseCSM(maincsm_id);
   \   0000004C   8C0094E5           LDR      R0,[R4, #+140]
   \   00000050   FC0100EF           SWI      +508
   2715              //ShowMSG(1,(int)LG_ALREADY_STARTED);
   2716              UnlockSched();
   \   00000054   470100EF           SWI      +327
   \   00000058   1080BDE8           POP      {R4,PC}
   2717            }
   2718            else
   2719            {
   2720              SUBPROC((void *)InitXStatusesImg);
   \                     ??CheckDoubleRun_0:
   \   0000005C   10009FE5           LDR      R0,??CheckDoubleRun_1  ;; InitXStatusesImg
   \   00000060   710100EF           SWI      +369
   2721              SUBPROC((void *)InitSmiles);
   \   00000064   0C009FE5           LDR      R0,??CheckDoubleRun_1+0x4  ;; InitSmiles
   \   00000068   710100EF           SWI      +369
   2722              create_connect();
   \   0000006C   ........           BL       create_connect
   2723            }
   2724          }
   \   00000070   1080BDE8           POP      {R4,PC}          ;; return
   \                     ??CheckDoubleRun_1:
   \   00000074   ........           DC32     InitXStatusesImg
   \   00000078   ........           DC32     InitSmiles
   2725          

   \                                 In segment CODE, align 4, keep-with-next
   2726          int maincsm_onmessage(CSM_RAM *data,GBS_MSG *msg)
   2727          {
   \                     maincsm_onmessage:
   \   00000000   F14F2DE9           PUSH     {R0,R4-R11,LR}
   \   00000004   18D04DE2           SUB      SP,SP,#+24
   \   00000008   ........           LDR      R5,??DataTable114  ;; ecmenu_ITEMS
   \   0000000C   ........           LDR      R6,??DataTable115  ;; S_ICONS
   \   00000010   ........           LDR      R9,??DataTable116  ;; Canvas
   \   00000014   0140A0E1           MOV      R4,R1
   \   00000018   040094E5           LDR      R0,[R4, #+4]
   \   0000001C   0070A0E3           MOV      R7,#+0
   \   00000020   568FA0E3           MOV      R8,#+344
   \   00000024   B010A0E3           MOV      R1,#+176
   \   00000028   DE1C81E3           ORR      R1,R1,#0xDE00
   \   0000002C   010050E1           CMP      R0,R1
   \   00000030   1700001A           BNE      ??maincsm_onmessage_2
   2728            extern const int VIBR_ON_CONNECT;
   2729          
   2730            //  char ss[100];
   2731            MAIN_CSM *csm=(MAIN_CSM*)data;
   2732            {
   2733              //IPC
   2734              if (msg->msg==MSG_IPC)
   2735              {
   2736                IPC_REQ *ipc;
   2737                if ((ipc=(IPC_REQ*)msg->data0))
   \   00000034   0CA094E5           LDR      R10,[R4, #+12]
   \   00000038   00005AE3           CMP      R10,#+0
   \   0000003C   1400000A           BEQ      ??maincsm_onmessage_2
   2738                {
   2739          	if (strcmp_nocase(ipc->name_to,ipc_my_name)==0)
   \   00000040   00009AE5           LDR      R0,[R10, #+0]
   \   00000044   091088E0           ADD      R1,R8,R9
   \   00000048   ........           _BLF     strcmp_nocase,??strcmp_nocase??rA
   \   0000004C   000050E3           CMP      R0,#+0
   \   00000050   0F00001A           BNE      ??maincsm_onmessage_2
   2740          	{
   2741          	  switch (msg->submess)
   \   00000054   081094E5           LDR      R1,[R4, #+8]
   \   00000058   04009AE5           LDR      R0,[R10, #+4]
   \   0000005C   08B09AE5           LDR      R11,[R10, #+8]
   \   00000060   011041E2           SUB      R1,R1,#+1
   \   00000064   060051E3           CMP      R1,#+6
   \   00000068   0900008A           BHI      ??maincsm_onmessage_2
   \   0000006C   012F8FE2           ADR      R2,??maincsm_onmessage_0
   \   00000070   0120D2E7           LDRB     R2,[R2, R1]
   \   00000074   02F18FE0           ADD      PC,PC,R2, LSL #+2
   \                     ??maincsm_onmessage_0:
   \   00000078   011F262B           DC8      +1,+31,+38,+43
   \   0000007C   69068300           DC8      +105,+6,+131,+0
   2742          	  {
   2743          	  case IPC_CHECK_DOUBLERUN:
   2744          	    //Если приняли свое собственное сообщение, значит запускаем чекер
   2745          	    if (ipc->name_from==ipc_my_name) SUBPROC((void *)CheckDoubleRun);
   \                     ??maincsm_onmessage_3:
   \   00000080   091088E0           ADD      R1,R8,R9
   \   00000084   010050E1           CMP      R0,R1
   \   00000088   1700001A           BNE      ??maincsm_onmessage_4
   \   0000008C   98079FE5           LDR      R0,??maincsm_onmessage_5  ;; CheckDoubleRun
   \   00000090   710100EF           SWI      +369
   2746                      else ipc->data=(void *)maincsm_id;
   2747          	    break;
   2748          	  case IPC_SMILE_PROCESSED:
   2749          	    //Только собственные смайлы ;)
   2750          	    if (ipc->name_from==ipc_my_name) SUBPROC((void *)ProcessNextSmile);
   2751          	    SMART_REDRAW();
   2752          	    break;
   2753          	  case IPC_XSTATUSIMG_PROCESSED:
   2754          	    //Только собственные иксстатусы ;)
   2755          	    if (ipc->name_from==ipc_my_name) SUBPROC((void *)ProcessNextXStatImg);
   2756          	    SMART_REDRAW();
   2757          	    break;
   2758          	  case IPC_TENSECONDS:
   2759          	    //Только свое сообщение
   2760          	    if (ipc->name_from==ipc_my_name)
   2761          	    {
   2762          	      CLIST *t=(CLIST *)cltop;
   2763          	      int f=0;
   2764          	      while(t)
   2765          	      {
   2766          		if (t->isactive)
   2767          		{
   2768          		  if (!(--(t->isactive))) f=1; //Если дошли до 0 хотя бы один раз - надо перерисовать меню
   2769          		}
   2770          		t=(CLIST *)(t->next);
   2771          	      }
   2772          	      if (f)
   2773          	      {
   2774          		CLIST *oldt=NULL;
   2775          		if (contactlist_menu_id)
   2776          		{
   2777          		  oldt=FindContactByN(GetCurMenuItem(FindGUIbyId(contactlist_menu_id,NULL)));
   2778          		}
   2779          		RecountMenu(oldt, 1);
   2780          	      }
   2781          	      if (time_to_stop_t9)
   2782          	      {
   2783          		if (!(--time_to_stop_t9))
   2784          		{
   2785          		  if (IsGuiOnTop(edchat_id)) RefreshGUI();
   2786          		}
   2787          	      }
   2788                        if (gprsdown)   //включим гпрс, если сами же выключали.
   2789                          if (!(--gprsdown))
   2790                            GPRS_OnOff(1, 1);
   2791          
   2792                      //  <tridog/>
   2793                      //  Делаем автостатус по бездействию
   2794                        if(AutoStatusRemainedCounter)
   2795                          if (!(--AutoStatusRemainedCounter))
   2796                            AutoStatusOnIdle();
   2797                      //  </tridog>
   2798                        if (AutoStatusEvent)
   2799                        {
   2800                          AutoStatusOnAccessory();
   2801                          AutoStatusEvent = 0;
   2802                        }
   2803          	    }
   2804          	    break;
   2805               	  case IPC_SENDMSG:                                   //IPC_SENDMSG by BoBa 26.06.07
   2806          	    {
   2807          	      int l=strlen(((IPCMsg *)(ipc->data))->msg);
   2808          	      TPKT *msg=malloc(sizeof(PKT)+l);
   2809          	      msg->pkt.uin=((IPCMsg *)(ipc->data))->uin;
   2810          	      msg->pkt.type=T_SENDMSG;
   2811          	      msg->pkt.data_len=l;
   2812          	      memcpy(msg->data,((IPCMsg *)(ipc->data))->msg,l);
   2813          	      SENDMSGCOUNT++; //Номер сообщения
   2814          	      SUBPROC((void *)SendAnswer,0,msg);
   2815          	    }
   2816                      break;
   2817          	  case IPC_FREEMSG:
   2818          	    ;
   2819          	    IPCMsg_RECVMSG *fmp=((IPCMsg_RECVMSG *)(ipc->data));
   2820          	    if (ipc->name_to!=ipc_my_name) break;
   2821          	    if (!fmp->drop_msg)
   2822          	    {
   2823          	      //Добавляем сообщение в чат
   2824          	      int l=strlen(fmp->msg);
   2825          	      TPKT *msg=malloc(sizeof(PKT)+l+1);
   2826          	      msg->pkt.uin=fmp->uin;
   2827          	      msg->pkt.type=T_RECVMSG;
   2828          	      msg->pkt.data_len=l;
   2829          	      memcpy(msg->data,fmp->msg,l+1);
   2830          	      ae(msg);
   2831                        Play(sndMsg);
   2832          	    }
   2833          	    mfree(fmp->msg); //Освобождаем сам текст сообщения
   2834          	    mfree(fmp->ipc); //Освобождаем родительский IPC_REQ
   2835          	    mfree(fmp); //Освобождаем собственно IPCMsg_RECVMSG
   2836          	    mfree(ipc); //Освободили текущий IPC_REQ
   2837          	    return 0; //вышли нах
   2838          	  }
   2839          	}
   2840                }
   2841              }
   2842          //    UpdateCSMname();
   2843              //Нарисуем иконочку моего статуса
   2844          #define idlegui_id (((int *)icsm)[DISPLACE_OF_IDLEGUI_ID/4])
   2845          #ifdef NEWSGOLD
   2846              if(ICON_ON == 1 || ICON_ON == 3)
   \                     ??maincsm_onmessage_2:
   \   00000094   ........           LDR      R0,??DataTable131  ;; ICON_ON
   \   00000098   000090E5           LDR      R0,[R0, #+0]
   \   0000009C   010050E3           CMP      R0,#+1
   \   000000A0   03005013           CMPNE    R0,#+3
   \   000000A4   C200001A           BNE      ??maincsm_onmessage_6
   2847              {
   2848          #endif
   2849              CSM_RAM *icsm=FindCSMbyID(CSM_root()->idle_id);
   \   000000A8   068100EF           SWI      +33030
   \   000000AC   040090E5           LDR      R0,[R0, #+4]
   \   000000B0   080100EF           SWI      +264
   2850              if (IsGuiOnTop(idlegui_id)/*&&IsUnlocked()*/) //Если IdleGui на самом верху
   \   000000B4   2C0090E5           LDR      R0,[R0, #+44]
   \   000000B8   350100EF           SWI      +309
   \   000000BC   000050E3           CMP      R0,#+0
   \   000000C0   BB00000A           BEQ      ??maincsm_onmessage_6
   2851              {
   2852                GUI *igui=GetTopGUI();
   2853                if (igui) //И он существует
   \   000000C4   4D0100EF           SWI      +333
   \   000000C8   000050E3           CMP      R0,#+0
   \   000000CC   B800000A           BEQ      ??maincsm_onmessage_6
   2854                {
   2855          	void *canvasdata=BuildCanvas();
   \   000000D0   F18000EF           SWI      +33009
   \   000000D4   14008DE5           STR      R0,[SP, #+20]
   2856          	int icn;
   2857          	if (messages_unread > 0)
   \   000000D8   CC0096E5           LDR      R0,[R6, #+204]
   \   000000DC   010050E3           CMP      R0,#+1
   \   000000E0   8D0000BA           BLT      ??maincsm_onmessage_7
   2858          	  icn=IS_MSG;
   \   000000E4   0DA0A0E3           MOV      R10,#+13
   \   000000E8   960000EA           B        ??maincsm_onmessage_8
   \                     ??maincsm_onmessage_4:
   \   000000EC   8C0096E5           LDR      R0,[R6, #+140]
   \   000000F0   08008AE5           STR      R0,[R10, #+8]
   \   000000F4   E6FFFFEA           B        ??maincsm_onmessage_2
   \                     ??maincsm_onmessage_9:
   \   000000F8   091088E0           ADD      R1,R8,R9
   \   000000FC   010050E1           CMP      R0,R1
   \   00000100   0100001A           BNE      ??maincsm_onmessage_10
   \   00000104   24079FE5           LDR      R0,??maincsm_onmessage_5+0x4  ;; ProcessNextSmile
   \                     ??maincsm_onmessage_11:
   \   00000108   710100EF           SWI      +369
   \                     ??maincsm_onmessage_10:
   \   0000010C   ........           BL       SMART_REDRAW
   \   00000110   DFFFFFEA           B        ??maincsm_onmessage_2
   \                     ??maincsm_onmessage_12:
   \   00000114   091088E0           ADD      R1,R8,R9
   \   00000118   010050E1           CMP      R0,R1
   \   0000011C   FAFFFF1A           BNE      ??maincsm_onmessage_10
   \   00000120   0C079FE5           LDR      R0,??maincsm_onmessage_5+0x8  ;; ProcessNextXStatImg
   \   00000124   F7FFFFEA           B        ??maincsm_onmessage_11
   \                     ??maincsm_onmessage_13:
   \   00000128   091088E0           ADD      R1,R8,R9
   \   0000012C   010050E1           CMP      R0,R1
   \   00000130   D7FFFF1A           BNE      ??maincsm_onmessage_2
   \   00000134   E80096E5           LDR      R0,[R6, #+232]
   \   00000138   0010A0E3           MOV      R1,#+0
   \   0000013C   000050E3           CMP      R0,#+0
   \   00000140   1400000A           BEQ      ??maincsm_onmessage_14
   \                     ??maincsm_onmessage_15:
   \   00000144   B42090E5           LDR      R2,[R0, #+180]
   \   00000148   000052E3           CMP      R2,#+0
   \   0000014C   0200000A           BEQ      ??maincsm_onmessage_16
   \   00000150   012052E2           SUBS     R2,R2,#+1
   \   00000154   B42080E5           STR      R2,[R0, #+180]
   \   00000158   0110A003           MOVEQ    R1,#+1
   \                     ??maincsm_onmessage_16:
   \   0000015C   000090E5           LDR      R0,[R0, #+0]
   \   00000160   000050E3           CMP      R0,#+0
   \   00000164   F6FFFF1A           BNE      ??maincsm_onmessage_15
   \   00000168   000051E3           CMP      R1,#+0
   \   0000016C   0900000A           BEQ      ??maincsm_onmessage_14
   \   00000170   F01096E5           LDR      R1,[R6, #+240]
   \   00000174   000051E3           CMP      R1,#+0
   \   00000178   0400000A           BEQ      ??maincsm_onmessage_17
   \   0000017C   F00096E5           LDR      R0,[R6, #+240]
   \   00000180   0010A0E3           MOV      R1,#+0
   \   00000184   090200EF           SWI      +521
   \   00000188   8F0100EF           SWI      +399
   \   0000018C   ........           _BLF     FindContactByN,??FindContactByN??rA
   \                     ??maincsm_onmessage_17:
   \   00000190   0110A0E3           MOV      R1,#+1
   \   00000194   ........           BL       RecountMenu
   \                     ??maincsm_onmessage_14:
   \   00000198   000196E5           LDR      R0,[R6, #+256]
   \   0000019C   000050E3           CMP      R0,#+0
   \   000001A0   0700000A           BEQ      ??maincsm_onmessage_18
   \   000001A4   010050E2           SUBS     R0,R0,#+1
   \   000001A8   000186E5           STR      R0,[R6, #+256]
   \   000001AC   0400001A           BNE      ??maincsm_onmessage_18
   \   000001B0   F40096E5           LDR      R0,[R6, #+244]
   \   000001B4   350100EF           SWI      +309
   \   000001B8   000050E3           CMP      R0,#+0
   \   000001BC   0000000A           BEQ      ??maincsm_onmessage_18
   \   000001C0   960100EF           SWI      +406
   \                     ??maincsm_onmessage_18:
   \   000001C4   1C0195E5           LDR      R0,[R5, #+284]
   \   000001C8   000050E3           CMP      R0,#+0
   \   000001CC   0500000A           BEQ      ??maincsm_onmessage_19
   \   000001D0   010050E2           SUBS     R0,R0,#+1
   \   000001D4   1C0185E5           STR      R0,[R5, #+284]
   \   000001D8   0200001A           BNE      ??maincsm_onmessage_19
   \   000001DC   0110A0E3           MOV      R1,#+1
   \   000001E0   0100A0E3           MOV      R0,#+1
   \   000001E4   8E0100EF           SWI      +398
   \                     ??maincsm_onmessage_19:
   \   000001E8   48069FE5           LDR      R0,??maincsm_onmessage_5+0xC  ;; AutoStatusRemainedCounter
   \   000001EC   001090E5           LDR      R1,[R0, #+0]
   \   000001F0   000051E3           CMP      R1,#+0
   \   000001F4   0300000A           BEQ      ??maincsm_onmessage_20
   \   000001F8   011051E2           SUBS     R1,R1,#+1
   \   000001FC   001080E5           STR      R1,[R0, #+0]
   \   00000200   0000001A           BNE      ??maincsm_onmessage_20
   \   00000204   ........           _BLF     AutoStatusOnIdle,??AutoStatusOnIdle??rA
   \                     ??maincsm_onmessage_20:
   \   00000208   000195E5           LDR      R0,[R5, #+256]
   \   0000020C   000050E3           CMP      R0,#+0
   \   00000210   9FFFFF0A           BEQ      ??maincsm_onmessage_2
   \   00000214   ........           _BLF     AutoStatusOnAccessory,??AutoStatusOnAccessory??rA
   \   00000218   007185E5           STR      R7,[R5, #+256]
   \   0000021C   9CFFFFEA           B        ??maincsm_onmessage_2
   \                     ??maincsm_onmessage_21:
   \   00000220   04009BE5           LDR      R0,[R11, #+4]
   \   00000224   1B0000EF           SWI      +27
   \   00000228   00008DE5           STR      R0,[SP, #+0]
   \   0000022C   080080E2           ADD      R0,R0,#+8
   \   00000230   140000EF           SWI      +20
   \   00000234   00B0A0E1           MOV      R11,R0
   \   00000238   08009AE5           LDR      R0,[R10, #+8]
   \   0000023C   000090E5           LDR      R0,[R0, #+0]
   \   00000240   00008BE5           STR      R0,[R11, #+0]
   \   00000244   0200A0E3           MOV      R0,#+2
   \   00000248   B400CBE1           STRH     R0,[R11, #+4]
   \   0000024C   00009DE5           LDR      R0,[SP, #+0]
   \   00000250   B600CBE1           STRH     R0,[R11, #+6]
   \   00000254   08009AE5           LDR      R0,[R10, #+8]
   \   00000258   00209DE5           LDR      R2,[SP, #+0]
   \   0000025C   041090E5           LDR      R1,[R0, #+4]
   \   00000260   08008BE2           ADD      R0,R11,#+8
   \   00000264   1E0100EF           SWI      +286
   \   00000268   940096E5           LDR      R0,[R6, #+148]
   \   0000026C   0B20A0E1           MOV      R2,R11
   \   00000270   010080E2           ADD      R0,R0,#+1
   \   00000274   940086E5           STR      R0,[R6, #+148]
   \   00000278   ........           LDR      R0,??DataTable126  ;; SendAnswer
   \   0000027C   0010A0E3           MOV      R1,#+0
   \   00000280   710100EF           SWI      +369
   \   00000284   82FFFFEA           B        ??maincsm_onmessage_2
   \                     ??maincsm_onmessage_22:
   \   00000288   00009AE5           LDR      R0,[R10, #+0]
   \   0000028C   091088E0           ADD      R1,R8,R9
   \   00000290   010050E1           CMP      R0,R1
   \   00000294   7EFFFF1A           BNE      ??maincsm_onmessage_2
   \   00000298   08009BE5           LDR      R0,[R11, #+8]
   \   0000029C   000050E3           CMP      R0,#+0
   \   000002A0   1200001A           BNE      ??maincsm_onmessage_23
   \   000002A4   04009BE5           LDR      R0,[R11, #+4]
   \   000002A8   1B0000EF           SWI      +27
   \   000002AC   0040A0E1           MOV      R4,R0
   \   000002B0   090084E2           ADD      R0,R4,#+9
   \   000002B4   140000EF           SWI      +20
   \   000002B8   0050A0E1           MOV      R5,R0
   \   000002BC   00009BE5           LDR      R0,[R11, #+0]
   \   000002C0   012084E2           ADD      R2,R4,#+1
   \   000002C4   000085E5           STR      R0,[R5, #+0]
   \   000002C8   0300A0E3           MOV      R0,#+3
   \   000002CC   B400C5E1           STRH     R0,[R5, #+4]
   \   000002D0   B640C5E1           STRH     R4,[R5, #+6]
   \   000002D4   04109BE5           LDR      R1,[R11, #+4]
   \   000002D8   080085E2           ADD      R0,R5,#+8
   \   000002DC   1E0100EF           SWI      +286
   \   000002E0   0500A0E1           MOV      R0,R5
   \   000002E4   ........           _BLF     ae,??ae??rA
   \   000002E8   4C059FE5           LDR      R0,??maincsm_onmessage_5+0x10  ;; sndMsg
   \   000002EC   ........           BL       Play
   \                     ??maincsm_onmessage_23:
   \   000002F0   04009BE5           LDR      R0,[R11, #+4]
   \   000002F4   150000EF           SWI      +21
   \   000002F8   0C009BE5           LDR      R0,[R11, #+12]
   \   000002FC   150000EF           SWI      +21
   \   00000300   0B00A0E1           MOV      R0,R11
   \   00000304   150000EF           SWI      +21
   \   00000308   0A00A0E1           MOV      R0,R10
   \   0000030C   150000EF           SWI      +21
   \   00000310   0000A0E3           MOV      R0,#+0
   \   00000314   1CD08DE2           ADD      SP,SP,#+28
   \   00000318   F08FBDE8           POP      {R4-R11,PC}      ;; return
   2859          	else
   2860          	{
   2861          	  switch(connect_state)
   \                     ??maincsm_onmessage_7:
   \   0000031C   080195E5           LDR      R0,[R5, #+264]
   \   00000320   000050E3           CMP      R0,#+0
   \   00000324   0200000A           BEQ      ??maincsm_onmessage_24
   \   00000328   030050E2           SUBS     R0,R0,#+3
   \   0000032C   0200000A           BEQ      ??maincsm_onmessage_25
   \   00000330   030000EA           B        ??maincsm_onmessage_26
   2862          	  {
   2863          	  case 0:
   2864          	    icn=IS_OFFLINE; break;
   \                     ??maincsm_onmessage_24:
   \   00000334   00A0A0E3           MOV      R10,#+0
   \   00000338   020000EA           B        ??maincsm_onmessage_8
   2865          	  case 3:
   2866          	    icn=CurrentStatus; //IS_ONLINE;
   \                     ??maincsm_onmessage_25:
   \   0000033C   B4A096E5           LDR      R10,[R6, #+180]
   \   00000340   000000EA           B        ??maincsm_onmessage_8
   2867          	    break;
   2868          	  default:
   2869          	    icn=IS_UNKNOWN; break;
   \                     ??maincsm_onmessage_26:
   \   00000344   0EA0A0E3           MOV      R10,#+14
   \                     ??maincsm_onmessage_8:
   \   00000348   0A0196E7           LDR      R0,[R6, +R10, LSL #+2]
   2870          	  }
   2871          	}
   2872          	//Тут трохи поменял
   2873          	// by Rainmaker: Рисуем канву только для иконки и выводим в своих координатах
   2874          	DrawCanvas(canvasdata,IDLEICON_X,IDLEICON_Y,IDLEICON_X+GetImgWidth((int)S_ICONS[icn])-1,
   2875          		   IDLEICON_Y+GetImgHeight((int)S_ICONS[icn])-1,1);
   \   0000034C   210000EF           SWI      +33
   \   00000350   00008DE5           STR      R0,[SP, #+0]
   \   00000354   0A0196E7           LDR      R0,[R6, +R10, LSL #+2]
   \   00000358   220000EF           SWI      +34
   \   0000035C   DC249FE5           LDR      R2,??maincsm_onmessage_5+0x14  ;; IDLEICON_X
   \   00000360   DC149FE5           LDR      R1,??maincsm_onmessage_5+0x18  ;; IDLEICON_Y
   \   00000364   002092E5           LDR      R2,[R2, #+0]
   \   00000368   04208DE5           STR      R2,[SP, #+4]
   \   0000036C   00B091E5           LDR      R11,[R1, #+0]
   \   00000370   0110A0E3           MOV      R1,#+1
   \   00000374   02002DE9           PUSH     {R1}
   \   00000378   04109DE5           LDR      R1,[SP, #+4]
   \   0000037C   0B1081E0           ADD      R1,R1,R11
   \   00000380   011041E2           SUB      R1,R1,#+1
   \   00000384   02002DE9           PUSH     {R1}
   \   00000388   0210A0E1           MOV      R1,R2
   \   0000038C   010080E0           ADD      R0,R0,R1
   \   00000390   013040E2           SUB      R3,R0,#+1
   \   00000394   1C009DE5           LDR      R0,[SP, #+28]
   \   00000398   0B20A0E1           MOV      R2,R11
   \   0000039C   250000EF           SWI      +37
   2876          	DrawImg(IDLEICON_X,IDLEICON_Y,S_ICONS[icn]);
   \   000003A0   0A2196E7           LDR      R2,[R6, +R10, LSL #+2]
   \   000003A4   0C009DE5           LDR      R0,[SP, #+12]
   \   000003A8   0B10A0E1           MOV      R1,R11
   \   000003AC   230000EF           SWI      +35
   \   000003B0   08D08DE2           ADD      SP,SP,#+8
   2877                }
   2878              }
   2879          #ifdef NEWSGOLD
   2880              }
   2881          #endif
   2882          
   2883            }
   2884            if (msg->msg==MSG_RECONFIGURE_REQ)
   \                     ??maincsm_onmessage_6:
   \   000003B4   040094E5           LDR      R0,[R4, #+4]
   \   000003B8   AF10A0E3           MOV      R1,#+175
   \   000003BC   DE1C81E3           ORR      R1,R1,#0xDE00
   \   000003C0   010050E1           CMP      R0,R1
   \   000003C4   1300001A           BNE      ??maincsm_onmessage_27
   2885            {
   2886              if (strcmp_nocase(successed_config_filename,(char *)msg->data0)==0)
   \   000003C8   ........           LDR      R10,??DataTable137  ;; successed_config_filename
   \   000003CC   0C1094E5           LDR      R1,[R4, #+12]
   \   000003D0   00009AE5           LDR      R0,[R10, #+0]
   \   000003D4   ........           _BLF     strcmp_nocase,??strcmp_nocase??rA
   \   000003D8   000050E3           CMP      R0,#+0
   \   000003DC   0D00001A           BNE      ??maincsm_onmessage_27
   2887              {
   2888                ShowMSG(1,(int)"NatICQ config reloaded!");
   \   000003E0   B41089E2           ADD      R1,R9,#+180
   \   000003E4   0100A0E3           MOV      R0,#+1
   \   000003E8   480100EF           SWI      +328
   2889                InitConfig(successed_config_filename);
   \   000003EC   00009AE5           LDR      R0,[R10, #+0]
   \   000003F0   ........           _BLF     InitConfig,??InitConfig??rA
   2890                free_ICONS();
   \   000003F4   ........           BL       free_ICONS
   2891                setup_ICONS();
   \   000003F8   ........           BL       setup_ICONS
   2892                ResortCL();
   \   000003FC   ........           _BLF     ResortCL,??ResortCL??rA
   2893                RecountMenu(NULL, 1);
   \   00000400   0110A0E3           MOV      R1,#+1
   \   00000404   0000A0E3           MOV      R0,#+0
   \   00000408   ........           BL       RecountMenu
   2894                UpdateCSMname();
   \   0000040C   ........           BL       UpdateCSMname
   2895                //      InitSmiles();
   2896                //  <tridog/>
   2897                //  Автостатус
   2898                DisposeAutoStatusEngine();
   \   00000410   ........           _BLF     DisposeAutoStatusEngine,??DisposeAutoStatusEngine??rA
   2899                InitAutoStatusEngine();
   \   00000414   ........           _BLF     InitAutoStatusEngine,??InitAutoStatusEngine??rA
   2900                //  </tridog>
   2901              }
   2902            }
   2903            if (msg->msg==MSG_GUI_DESTROYED)
   \                     ??maincsm_onmessage_27:
   \   00000418   040094E5           LDR      R0,[R4, #+4]
   \   0000041C   0E10A0E3           MOV      R1,#+14
   \   00000420   641C81E3           ORR      R1,R1,#0x6400
   \   00000424   010050E1           CMP      R0,R1
   \   00000428   0E00001A           BNE      ??maincsm_onmessage_28
   2904            {
   2905              if ((int)msg->data0==csm->gui_id)
   \   0000042C   18109DE5           LDR      R1,[SP, #+24]
   \   00000430   0C0094E5           LDR      R0,[R4, #+12]
   \   00000434   281091E5           LDR      R1,[R1, #+40]
   \   00000438   010050E1           CMP      R0,R1
   2906              {
   2907                csm->csm.state=-3;
   \   0000043C   18009D05           LDREQ    R0,[SP, #+24]
   \   00000440   0210E003           MVNEQ    R1,#+2
   \   00000444   10108005           STREQ    R1,[R0, #+16]
   2908              }
   2909              if ((int)msg->data0==contactlist_menu_id)
   \   00000448   0C0094E5           LDR      R0,[R4, #+12]
   \   0000044C   F01096E5           LDR      R1,[R6, #+240]
   \   00000450   010050E1           CMP      R0,R1
   2910              {
   2911                contactlist_menu_id=0;
   \   00000454   F0708605           STREQ    R7,[R6, #+240]
   2912                prev_clmenu_itemcount=0;
   \   00000458   F8708605           STREQ    R7,[R6, #+248]
   2913              }
   2914              if ((int)msg->data0==edchat_id)
   \   0000045C   F41096E5           LDR      R1,[R6, #+244]
   \   00000460   010050E1           CMP      R0,R1
   2915              {
   2916                edchat_id=0;
   \   00000464   F4708605           STREQ    R7,[R6, #+244]
   \                     ??maincsm_onmessage_28:
   \   00000468   040094E5           LDR      R0,[R4, #+4]
   \   0000046C   AE10A0E3           MOV      R1,#+174
   \   00000470   DE1C81E3           ORR      R1,R1,#0xDE00
   \   00000474   010050E1           CMP      R0,R1
   \   00000478   E400001A           BNE      ??maincsm_onmessage_29
   2917              }
   2918            }
   2919            if (msg->msg==MSG_HELPER_TRANSLATOR)
   2920            {
   2921              switch((int)msg->data0)
   \   0000047C   ........           LDR      R3,??DataTable120  ;; VIBR_ON_CONNECT
   \   00000480   0C0094E5           LDR      R0,[R4, #+12]
   \   00000484   003093E5           LDR      R3,[R3, #+0]
   \   00000488   101094E5           LDR      R1,[R4, #+16]
   \   0000048C   ........           LDR      R10,??DataTable121  ;; do_reconnect
   \   00000490   00308DE5           STR      R3,[SP, #+0]
   \   00000494   9ABFA0E3           MOV      R11,#+616
   \   00000498   802050E2           SUBS     R2,R0,#+128
   \   0000049C   0600000A           BEQ      ??maincsm_onmessage_30
   \   000004A0   022052E2           SUBS     R2,R2,#+2
   \   000004A4   0200000A           BEQ      ??maincsm_onmessage_31
   \   000004A8   122052E2           SUBS     R2,R2,#+18
   \   000004AC   1B00000A           BEQ      ??maincsm_onmessage_32
   \   000004B0   260000EA           B        ??maincsm_onmessage_33
   2922              {
   2923              case LMAN_DISCONNECT_IND:
   2924                is_gprs_online=0;
   \                     ??maincsm_onmessage_31:
   \   000004B4   187185E5           STR      R7,[R5, #+280]
   2925                return(1);
   \                     ??maincsm_onmessage_34:
   \   000004B8   150000EA           B        ??maincsm_onmessage_35
   2926              case LMAN_CONNECT_CNF:
   2927                if(VIBR_ON_CONNECT){
   \                     ??maincsm_onmessage_30:
   \   000004BC   000053E3           CMP      R3,#+0
   \   000004C0   0200000A           BEQ      ??maincsm_onmessage_36
   2928                  vibra_count=1;
   \   000004C4   0100A0E3           MOV      R0,#+1
   \   000004C8   C40086E5           STR      R0,[R6, #+196]
   2929                  start_vibra();
   \   000004CC   ........           BL       start_vibra
   2930                }
   2931                is_gprs_online=1;
   \                     ??maincsm_onmessage_36:
   \   000004D0   0100A0E3           MOV      R0,#+1
   \   000004D4   180185E5           STR      R0,[R5, #+280]
   2932                //strcpy(logmsg,LG_GRGPRSUP);
   2933                if (!disautorecconect){
   \   000004D8   A00096E5           LDR      R0,[R6, #+160]
   \   000004DC   000050E3           CMP      R0,#+0
   \   000004E0   0B00001A           BNE      ??maincsm_onmessage_35
   2934                  snprintf(logmsg, 255, LG_GRGPRSUP, RECONNECT_TIME);
   \   000004E4   ........           LDR      R0,??DataTable129  ;; RECONNECT_TIME
   \   000004E8   7C2089E2           ADD      R2,R9,#+124
   \   000004EC   007090E5           LDR      R7,[R0, #+0]
   \   000004F0   FF10A0E3           MOV      R1,#+255
   \   000004F4   0730A0E1           MOV      R3,R7
   \   000004F8   06008BE0           ADD      R0,R11,R6
   \   000004FC   1B0100EF           SWI      +283
   2935                  GBS_StartTimerProc(&reconnect_tmr,TMR_SECOND*RECONNECT_TIME,do_reconnect);
   \   00000500   0A20A0E1           MOV      R2,R10
   \   00000504   D800A0E3           MOV      R0,#+216
   \   00000508   900701E0           MUL      R1,R0,R7
   \   0000050C   E20F86E2           ADD      R0,R6,#+904
   \   00000510   4D0000EF           SWI      +77
   2936                }
   2937                return(1);
   \                     ??maincsm_onmessage_35:
   \   00000514   0100A0E3           MOV      R0,#+1
   \                     ??maincsm_onmessage_37:
   \   00000518   1CD08DE2           ADD      SP,SP,#+28
   \   0000051C   F08FBDE8           POP      {R4-R11,PC}
   2938              case ENIP_DNR_HOST_BY_NAME:
   2939                if ((int)msg->data1==DNR_ID)
   \                     ??maincsm_onmessage_32:
   \   00000520   202195E5           LDR      R2,[R5, #+288]
   \   00000524   020051E1           CMP      R1,R2
   \   00000528   F9FFFF1A           BNE      ??maincsm_onmessage_35
   2940                {
   2941                  if ((int)msg->data0==148) host_counter=-1;
   \   0000052C   940050E3           CMP      R0,#+148
   \   00000530   0700E001           MVNEQ    R0,R7
   \   00000534   28018505           STREQ    R0,[R5, #+296]
   2942                  if (DNR_TRIES) SUBPROC((void *)create_connect);
   \   00000538   240195E5           LDR      R0,[R5, #+292]
   \   0000053C   000050E3           CMP      R0,#+0
   \   00000540   F3FFFF0A           BEQ      ??maincsm_onmessage_35
   \   00000544   ........           LDR      R0,??DataTable123  ;; create_connect
   \   00000548   710100EF           SWI      +369
   \   0000054C   F0FFFFEA           B        ??maincsm_onmessage_35
   2943                }
   2944                return(1);
   2945              }
   2946              if ((int)msg->data1==sock)
   \                     ??maincsm_onmessage_33:
   \   00000550   0C2195E5           LDR      R2,[R5, #+268]
   \   00000554   020051E1           CMP      R1,R2
   \   00000558   EDFFFF1A           BNE      ??maincsm_onmessage_35
   2947              {
   2948                //Если наш сокет
   2949                if ((((unsigned int)msg->data0)>>28)==0xA)
   \   0000055C   201EA0E1           LSR      R1,R0,#+28
   \   00000560   0A0051E3           CMP      R1,#+10
   \   00000564   3500001A           BNE      ??maincsm_onmessage_38
   2950                {
   2951          	TPKT *p=(TPKT *)msg->data0;
   \   00000568   0040A0E1           MOV      R4,R0
   2952          	//Принят пакет
   2953          	if (p->pkt.type==T_RECVMSG)
   \   0000056C   B400D4E1           LDRH     R0,[R4, #+4]
   \   00000570   030050E3           CMP      R0,#+3
   \   00000574   2D00001A           BNE      ??maincsm_onmessage_39
   2954          	{
   2955          	  //Просунем через IPC
   2956          
   2957          	  int l=p->pkt.data_len+1; //С завершающим \0
   \   00000578   B600D4E1           LDRH     R0,[R4, #+6]
   \   0000057C   01B080E2           ADD      R11,R0,#+1
   2958          	  IPC_REQ *ripc=malloc(sizeof(IPC_REQ));
   \   00000580   0C00A0E3           MOV      R0,#+12
   \   00000584   140000EF           SWI      +20
   \   00000588   0050A0E1           MOV      R5,R0
   2959          	  IPC_REQ *fipc=malloc(sizeof(IPC_REQ));
   \   0000058C   0C00A0E3           MOV      R0,#+12
   \   00000590   140000EF           SWI      +20
   \   00000594   0060A0E1           MOV      R6,R0
   2960          	  IPCMsg_RECVMSG *msg=malloc(sizeof(IPCMsg_RECVMSG));
   \   00000598   1000A0E3           MOV      R0,#+16
   \   0000059C   140000EF           SWI      +20
   \   000005A0   00A0A0E1           MOV      R10,R0
   2961          	  memcpy(msg->msg=malloc(l),p->data,l);
   \   000005A4   0B00A0E1           MOV      R0,R11
   \   000005A8   140000EF           SWI      +20
   \   000005AC   04008AE5           STR      R0,[R10, #+4]
   \   000005B0   0B20A0E1           MOV      R2,R11
   \   000005B4   081084E2           ADD      R1,R4,#+8
   \   000005B8   1E0100EF           SWI      +286
   2962          	  msg->uin=p->pkt.uin;
   \   000005BC   000094E5           LDR      R0,[R4, #+0]
   2963          	  msg->drop_msg=0;
   2964          	  msg->ipc=ripc;
   2965          	  ripc->data=msg;
   2966          	  fipc->data=msg;
   2967          	  ripc->name_from=ipc_my_name;
   2968          	  ripc->name_to=ipc_my_name;
   2969          	  fipc->name_from=ipc_my_name;
   2970          	  fipc->name_to=ipc_my_name;
   2971          	  GBS_SendMessage(MMI_CEPID,MSG_IPC,IPC_RECVMSG,ripc);
   \   000005C0   0530A0E1           MOV      R3,R5
   \   000005C4   00008AE5           STR      R0,[R10, #+0]
   \   000005C8   08708AE5           STR      R7,[R10, #+8]
   \   000005CC   0C508AE5           STR      R5,[R10, #+12]
   \   000005D0   08A085E5           STR      R10,[R5, #+8]
   \   000005D4   08A086E5           STR      R10,[R6, #+8]
   \   000005D8   090088E0           ADD      R0,R8,R9
   \   000005DC   040085E5           STR      R0,[R5, #+4]
   \   000005E0   000085E5           STR      R0,[R5, #+0]
   \   000005E4   040086E5           STR      R0,[R6, #+4]
   \   000005E8   000086E5           STR      R0,[R6, #+0]
   \   000005EC   0970A0E3           MOV      R7,#+9
   \   000005F0   427C87E3           ORR      R7,R7,#0x4200
   \   000005F4   0620A0E3           MOV      R2,#+6
   \   000005F8   B010A0E3           MOV      R1,#+176
   \   000005FC   DE1C81E3           ORR      R1,R1,#0xDE00
   \   00000600   0700A0E1           MOV      R0,R7
   \   00000604   000100EF           SWI      +256
   2972          	  GBS_SendMessage(MMI_CEPID,MSG_IPC,IPC_FREEMSG,fipc);
   \   00000608   0630A0E1           MOV      R3,R6
   \   0000060C   0720A0E3           MOV      R2,#+7
   \   00000610   B010A0E3           MOV      R1,#+176
   \   00000614   DE1C81E3           ORR      R1,R1,#0xDE00
   \   00000618   0700A0E1           MOV      R0,R7
   \   0000061C   000100EF           SWI      +256
   2973          	  mfree(p);
   \   00000620   0400A0E1           MOV      R0,R4
   \   00000624   150000EF           SWI      +21
   \   00000628   0000A0E3           MOV      R0,#+0
   \   0000062C   B9FFFFEA           B        ??maincsm_onmessage_37
   2974          	}
   2975          	else
   2976          	{
   2977          	  //Непосредственная обработка
   2978          	  ae(p);
   \                     ??maincsm_onmessage_39:
   \   00000630   0400A0E1           MOV      R0,R4
   \   00000634   ........           _BLF     ae,??ae??rA
   2979          	}
   2980          	return(0);
   \   00000638   0000A0E3           MOV      R0,#+0
   \   0000063C   B5FFFFEA           B        ??maincsm_onmessage_37
   2981                }
   2982                switch((int)msg->data0)
   \                     ??maincsm_onmessage_38:
   \   00000640   081195E5           LDR      R1,[R5, #+264]
   \   00000644   ........           LDR      R8,??DataTable124  ;; lgpData
   \   00000648   8A0040E2           SUB      R0,R0,#+138
   \   0000064C   050050E3           CMP      R0,#+5
   \   00000650   6E00008A           BHI      ??maincsm_onmessage_29
   \   00000654   012F8FE2           ADR      R2,??maincsm_onmessage_1
   \   00000658   0020D2E7           LDRB     R2,[R2, R0]
   \   0000065C   02F18FE0           ADD      PC,PC,R2, LSL #+2
   \                     ??maincsm_onmessage_1:
   \   00000660   35352E01           DC8      +53,+53,+46,+1
   \   00000664   3C3A0000           DC8      +60,+58,+0,+0
   2983                {
   2984                case ENIP_SOCK_CONNECTED:
   2985          	if (connect_state==1)
   \                     ??maincsm_onmessage_40:
   \   00000668   010051E3           CMP      R1,#+1
   \   0000066C   2600001A           BNE      ??maincsm_onmessage_41
   2986          	{
   2987          	  if(VIBR_ON_CONNECT){
   \   00000670   000053E3           CMP      R3,#+0
   \   00000674   0200000A           BEQ      ??maincsm_onmessage_42
   2988                      vibra_count=2;
   \   00000678   0200A0E3           MOV      R0,#+2
   \   0000067C   C40086E5           STR      R0,[R6, #+196]
   2989              	    start_vibra();
   \   00000680   ........           BL       start_vibra
   2990                    }
   2991          	  //Соединение установленно, посылаем пакет login
   2992          	  strcpy(logmsg, LG_GRTRYLOGIN);
   \                     ??maincsm_onmessage_42:
   \   00000684   101089E2           ADD      R1,R9,#+16
   \   00000688   06008BE0           ADD      R0,R11,R6
   \   0000068C   1A0000EF           SWI      +26
   2993          	  {
   2994          	    SUBPROC((void *)ab,0,0);
   \   00000690   B0019FE5           LDR      R0,??maincsm_onmessage_5+0x1C  ;; ab
   \   00000694   0020A0E3           MOV      R2,#+0
   \   00000698   0210A0E1           MOV      R1,R2
   \   0000069C   710100EF           SWI      +369
   2995          	  }
   2996          	  GROUP_CACHE=0;
   \   000006A0   EC7086E5           STR      R7,[R6, #+236]
   2997          	  SENDMSGCOUNT=0; //Начинаем отсчет
   \   000006A4   947086E5           STR      R7,[R6, #+148]
   2998          	  if (!FindGroupByID(0)) AddGroup(0,lgpData[LGP_GroupNotInList]);
   \   000006A8   0700A0E1           MOV      R0,R7
   \   000006AC   ........           _BLF     FindGroupByID,??FindGroupByID??rA
   \   000006B0   000050E3           CMP      R0,#+0
   \   000006B4   0100001A           BNE      ??maincsm_onmessage_43
   \   000006B8   141098E5           LDR      R1,[R8, #+20]
   \   000006BC   ........           _BLF     AddGroup,??AddGroup??rA
   2999                    extern const int b_loopback;
   3000                    if (b_loopback ==1)
   \                     ??maincsm_onmessage_43:
   \   000006C0   84019FE5           LDR      R0,??maincsm_onmessage_5+0x20  ;; b_loopback
   \   000006C4   000090E5           LDR      R0,[R0, #+0]
   \   000006C8   010050E3           CMP      R0,#+1
   \   000006CC   0A00001A           BNE      ??maincsm_onmessage_44
   3001                    {
   3002                      if (!FindContactByUin(UIN)) AddContact(UIN, lgpData[LGP_ClLoopback], 0,1);
   \   000006D0   ........           LDR      R0,??DataTable139  ;; UIN
   \   000006D4   006090E5           LDR      R6,[R0, #+0]
   \   000006D8   0600A0E1           MOV      R0,R6
   \   000006DC   ........           _BLF     FindContactByUin,??FindContactByUin??rA
   \   000006E0   000050E3           CMP      R0,#+0
   \   000006E4   0400001A           BNE      ??maincsm_onmessage_44
   \   000006E8   101098E5           LDR      R1,[R8, #+16]
   \   000006EC   0130A0E3           MOV      R3,#+1
   \   000006F0   0020A0E3           MOV      R2,#+0
   \   000006F4   0600A0E1           MOV      R0,R6
   \   000006F8   ........           _BLF     AddContact,??AddContact??rA
   3003                    }
   3004          	  SUBPROC((void *)LoadLocalCL);
   \                     ??maincsm_onmessage_44:
   \   000006FC   4C019FE5           LDR      R0,??maincsm_onmessage_5+0x24  ;; LoadLocalCL
   \   00000700   710100EF           SWI      +369
   3005          	  SMART_REDRAW();
   \   00000704   ........           BL       SMART_REDRAW
   \   00000708   400000EA           B        ??maincsm_onmessage_29
   3006          	}
   3007          	else
   3008          	{
   3009          	  ShowMSG(1,(int)lgpData[LGP_MsgIllegmsgcon]);
   \                     ??maincsm_onmessage_41:
   \   0000070C   181198E5           LDR      R1,[R8, #+280]
   \                     ??maincsm_onmessage_45:
   \   00000710   0100A0E3           MOV      R0,#+1
   \   00000714   480100EF           SWI      +328
   \   00000718   3C0000EA           B        ??maincsm_onmessage_29
   3010          	}
   3011          	break;
   3012                case ENIP_SOCK_DATA_READ:
   3013          	if (connect_state>=2)
   \                     ??maincsm_onmessage_46:
   \   0000071C   020051E3           CMP      R1,#+2
   \   00000720   020000BA           BLT      ??maincsm_onmessage_47
   3014          	{
   3015          	  //Если посылали send
   3016          	  SUBPROC((void *)get_answer);
   \   00000724   28019FE5           LDR      R0,??maincsm_onmessage_5+0x28  ;; get_answer
   \                     ??maincsm_onmessage_48:
   \   00000728   710100EF           SWI      +369
   \   0000072C   370000EA           B        ??maincsm_onmessage_29
   3017          	  //SMART_REDRAW();
   3018          	}
   3019          	else
   3020          	{
   3021          	  ShowMSG(1,(int)lgpData[LGP_MsgIllegmsgrea]);
   \                     ??maincsm_onmessage_47:
   \   00000730   1C1198E5           LDR      R1,[R8, #+284]
   \   00000734   F5FFFFEA           B        ??maincsm_onmessage_45
   3022          	}
   3023          	break;
   3024                case ENIP_BUFFER_FREE:
   3025                case ENIP_BUFFER_FREE1:
   3026          	SUBPROC((void *)SendAnswer,0,0);
   \                     ??maincsm_onmessage_49:
   \   00000738   ........           LDR      R0,??DataTable126  ;; SendAnswer
   \   0000073C   0020A0E3           MOV      R2,#+0
   \   00000740   0210A0E1           MOV      R1,R2
   \   00000744   710100EF           SWI      +369
   \   00000748   300000EA           B        ??maincsm_onmessage_29
   3027          	break;
   3028                case ENIP_SOCK_REMOTE_CLOSED:
   3029          	//Закрыт со стороны сервера
   3030          	  SUBPROC((void *)end_socket);
   \                     ??maincsm_onmessage_50:
   \   0000074C   ........           LDR      R0,??DataTable127  ;; end_socket
   \   00000750   F4FFFFEA           B        ??maincsm_onmessage_48
   3031          	break;
   3032                case ENIP_SOCK_CLOSED:
   3033          	//strcpy(logmsg, "No connection");
   3034          	//Dump not received
   3035          /*	if (RXstate>(-(int)sizeof(PKT)))
   3036          	{
   3037          	  unsigned int err;
   3038          	  int f=fopen("4:\\NATICQ.dump",A_ReadWrite+A_Create+A_Truncate+A_BIN,P_READ+P_WRITE,&err);
   3039          	  if (f!=-1)
   3040          	  {
   3041          	    fwrite(f,&RXbuf,RXstate+sizeof(PKT),&err);
   3042          	    fclose(f,&err);
   3043          	  }
   3044          	}*/
   3045          	FillAllOffline();
   \                     ??maincsm_onmessage_51:
   \   00000754   ........           _BLF     FillAllOffline,??FillAllOffline??rA
   3046          	RecountMenu(NULL, 1);
   \   00000758   0110A0E3           MOV      R1,#+1
   \   0000075C   0000A0E3           MOV      R0,#+0
   \   00000760   ........           BL       RecountMenu
   3047          	connect_state=0;
   \   00000764   087185E5           STR      R7,[R5, #+264]
   3048          	sock=-1;
   \   00000768   0700E0E1           MVN      R0,R7
   \   0000076C   0C0185E5           STR      R0,[R5, #+268]
   3049                  host_counter=-1;
   \   00000770   280185E5           STR      R0,[R5, #+296]
   3050                  if(VIBR_ON_CONNECT){
   \   00000774   00009DE5           LDR      R0,[SP, #+0]
   \   00000778   000050E3           CMP      R0,#+0
   \   0000077C   0200000A           BEQ      ??maincsm_onmessage_52
   3051                    vibra_count=4;
   \   00000780   0400A0E3           MOV      R0,#+4
   \   00000784   C40086E5           STR      R0,[R6, #+196]
   3052          	  start_vibra();
   \   00000788   ........           BL       start_vibra
   3053                  }
   3054          	if (sendq_p)
   \                     ??maincsm_onmessage_52:
   \   0000078C   140195E5           LDR      R0,[R5, #+276]
   \   00000790   000050E3           CMP      R0,#+0
   \   00000794   0400000A           BEQ      ??maincsm_onmessage_53
   3055          	{
   3056          	  snprintf(logmsg,255,"Disconnected, %d bytes not sended!",sendq_l);
   \   00000798   103195E5           LDR      R3,[R5, #+272]
   \   0000079C   282089E2           ADD      R2,R9,#+40
   \   000007A0   FF10A0E3           MOV      R1,#+255
   \   000007A4   06008BE0           ADD      R0,R11,R6
   \   000007A8   1B0100EF           SWI      +283
   3057          	}
   3058          	SMART_REDRAW();
   \                     ??maincsm_onmessage_53:
   \   000007AC   ........           BL       SMART_REDRAW
   3059          	SUBPROC((void *)ClearSendQ);
   \   000007B0   ........           LDR      R0,??DataTable128  ;; ClearSendQ
   \   000007B4   710100EF           SWI      +369
   3060          	if (!disautorecconect)
   \   000007B8   A00096E5           LDR      R0,[R6, #+160]
   \   000007BC   000050E3           CMP      R0,#+0
   \   000007C0   1200001A           BNE      ??maincsm_onmessage_29
   3061                  {
   3062                    int rec_rand = (mrand()*30)>>15;
   \   000007C4   ........           _BLF     mrand,??mrand??rA
   \   000007C8   1E10A0E3           MOV      R1,#+30
   \   000007CC   910000E0           MUL      R0,R1,R0
   3063                    GBS_StartTimerProc(&reconnect_tmr,TMR_SECOND*(RECONNECT_TIME+rec_rand),do_reconnect);
   \   000007D0   ........           LDR      R1,??DataTable129  ;; RECONNECT_TIME
   \   000007D4   C007A0E1           ASR      R0,R0,#+15
   \   000007D8   007091E5           LDR      R7,[R1, #+0]
   \   000007DC   0A20A0E1           MOV      R2,R10
   \   000007E0   077080E0           ADD      R7,R0,R7
   \   000007E4   D800A0E3           MOV      R0,#+216
   \   000007E8   900701E0           MUL      R1,R0,R7
   \   000007EC   E20F86E2           ADD      R0,R6,#+904
   \   000007F0   4D0000EF           SWI      +77
   3064                    snprintf(logmsg,255,LG_GRRECONNECT,logmsg, RECONNECT_TIME+rec_rand);
   \   000007F4   80002DE9           PUSH     {R7}
   \   000007F8   06308BE0           ADD      R3,R11,R6
   \   000007FC   4C2089E2           ADD      R2,R9,#+76
   \   00000800   FF10A0E3           MOV      R1,#+255
   \   00000804   06008BE0           ADD      R0,R11,R6
   \   00000808   1B0100EF           SWI      +283
   \   0000080C   04D08DE2           ADD      SP,SP,#+4
   3065                  }
   3066          	break;
   3067                }
   3068              }
   3069            }
   3070            //  <tridog/>
   3071            //  21.03.2011. Автостатус при подключении / отключении аксесуара
   3072          #ifdef NEWSGOLD
   3073          #ifdef ELKA
   3074            if (msg->msg==0x1567F)
   \                     ??maincsm_onmessage_29:
   \   00000810   040094E5           LDR      R0,[R4, #+4]
   \   00000814   3C109FE5           LDR      R1,??maincsm_onmessage_5+0x2C  ;; 0x1567f
   \   00000818   010050E1           CMP      R0,R1
   \   0000081C   3CFFFF1A           BNE      ??maincsm_onmessage_35
   3075          #else
   3076            if (msg->msg==0x15681)
   3077          #endif 
   3078          #else
   3079            if (msg->msg==0x29)    
   3080          #endif
   3081            {
   3082              AutoStatusEvent = 1;
   \   00000820   0100A0E3           MOV      R0,#+1
   \   00000824   000185E5           STR      R0,[R5, #+256]
   \   00000828   39FFFFEA           B        ??maincsm_onmessage_35
   \                     ??maincsm_onmessage_5:
   \   0000082C   ........           DC32     CheckDoubleRun
   \   00000830   ........           DC32     ProcessNextSmile
   \   00000834   ........           DC32     ProcessNextXStatImg
   \   00000838   ........           DC32     AutoStatusRemainedCounter
   \   0000083C   ........           DC32     sndMsg
   \   00000840   ........           DC32     IDLEICON_X
   \   00000844   ........           DC32     IDLEICON_Y
   \   00000848   ........           DC32     ab
   \   0000084C   ........           DC32     b_loopback
   \   00000850   ........           DC32     LoadLocalCL
   \   00000854   ........           DC32     get_answer
   \   00000858   7F560100           DC32     0x1567f
   3083            }
   3084            // </tridog>
   3085            return(1);
   3086          }
   3087          

   \                                 In segment DATA_C, align 4, align-sorted
   3088          const int minus11=-11;
   \                     minus11:
   \   00000000   F5FFFFFF           DC32 -11
   3089          
   3090          unsigned short maincsm_name_body[140];
   3091          
   3092          #ifdef NEWSGOLD
   3093          typedef struct
   3094          {
   3095            char check_name[8];
   3096            int addr;
   3097          }ICONBAR_H;
   3098          

   \                                 In segment CODE, align 4, keep-with-next
   3099          static void addIconBar(short* num)
   3100          {
   \                     addIconBar:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   3101            if(ICON_ON > 1)
   \   00000004   ........           LDR      R5,??DataTable138  ;; S_ICONS
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   ........           LDR      R0,??DataTable131  ;; ICON_ON
   \   00000010   000090E5           LDR      R0,[R0, #+0]
   \   00000014   020050E3           CMP      R0,#+2
   \   00000018   0F00003A           BCC      ??addIconBar_0
   3102            {
   3103              int icn;
   3104              if (messages_unread >0)
   \   0000001C   CC0095E5           LDR      R0,[R5, #+204]
   \   00000020   010050E3           CMP      R0,#+1
   3105              icn=IS_MSG;
   \   00000024   0D00A0A3           MOVGE    R0,#+13
   \   00000028   060000AA           BGE      ??addIconBar_1
   3106              else
   3107              {
   3108                switch(connect_state)
   \   0000002C   ........           LDR      R0,??DataTable132  ;; ecmenu_ITEMS + 264
   \   00000030   000090E5           LDR      R0,[R0, #+0]
   \   00000034   000050E3           CMP      R0,#+0
   \   00000038   0200000A           BEQ      ??addIconBar_1
   \   0000003C   030050E2           SUBS     R0,R0,#+3
   3109                {
   3110                  case 0:
   3111                  icn=IS_OFFLINE; break;
   3112                  case 3:
   3113                  icn=CurrentStatus; //IS_ONLINE;
   \   00000040   B4009505           LDREQ    R0,[R5, #+180]
   3114                  break;
   3115                  default:
   3116                  icn=IS_UNKNOWN; break;
   \   00000044   0E00A013           MOVNE    R0,#+14
   3117                }
   3118              }
   3119              AddIconToIconBar(ST_FIRST+icn,num);
   \                     ??addIconBar_1:
   \   00000048   38209FE5           LDR      R2,??addIconBar_2  ;; ST_FIRST
   \   0000004C   0410A0E1           MOV      R1,R4
   \   00000050   002092E5           LDR      R2,[R2, #+0]
   \   00000054   020080E0           ADD      R0,R0,R2
   \   00000058   270000EF           SWI      +39
   3120            }
   3121            if(XST_IC) AddIconToIconBar(X_FIRST+CurrentXStatus,num);
   \                     ??addIconBar_0:
   \   0000005C   28009FE5           LDR      R0,??addIconBar_2+0x4  ;; XST_IC
   \   00000060   000090E5           LDR      R0,[R0, #+0]
   \   00000064   000050E3           CMP      R0,#+0
   \   00000068   3080BD08           POPEQ    {R4,R5,PC}
   \   0000006C   1C009FE5           LDR      R0,??addIconBar_2+0x8  ;; X_FIRST
   \   00000070   B82095E5           LDR      R2,[R5, #+184]
   \   00000074   000090E5           LDR      R0,[R0, #+0]
   \   00000078   0410A0E1           MOV      R1,R4
   \   0000007C   000082E0           ADD      R0,R2,R0
   \   00000080   270000EF           SWI      +39
   3122          }
   \   00000084   3080BDE8           POP      {R4,R5,PC}       ;; return
   \                     ??addIconBar_2:
   \   00000088   ........           DC32     ST_FIRST
   \   0000008C   ........           DC32     XST_IC
   \   00000090   ........           DC32     X_FIRST
   3123          #endif
   3124          
   3125          
   3126          struct
   3127          {
   3128            CSM_DESC maincsm;
   3129            WSHDR maincsm_name;
   3130          #ifdef NEWSGOLD
   3131            ICONBAR_H iconbar_handler;
   3132          #endif
   3133          
   3134          }MAINCSM =
   3135          {
   3136            {
   3137              maincsm_onmessage,
   3138              maincsm_oncreate,
   3139          #ifdef NEWSGOLD
   3140          0,
   3141          0,
   3142          0,
   3143          0,
   3144          #endif
   3145          maincsm_onclose,
   3146          sizeof(MAIN_CSM),
   3147          1,
   3148          &minus11
   3149            },
   3150            {
   3151              maincsm_name_body,
   3152              NAMECSM_MAGIC1,
   3153              NAMECSM_MAGIC2,
   3154              0x0,
   3155              139
   3156          #ifdef NEWSGOLD
   3157            },
   3158            {
   3159              "IconBar"
   3160            }
   3161          #else
   3162            }
   3163          #endif
   3164          };
   3165          

   \                                 In segment CODE, align 4, keep-with-next
   3166          void UpdateCSMname()
   3167          {
   \                     UpdateCSMname:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   3168            // tridog, 09.05.09
   3169            // Поскольку у нас теперь может быть запущено несколько наташ сразу, старый
   3170            // вариант имени CSM состоящий из UIN'a не очень удобен.
   3171            extern const int b__task_unread_icon;
   3172            extern const int b__task_unread_count;
   3173            extern const int task_show;
   3174            // Формируем заголовок
   3175            WSHDR *task_name=AllocWS(512);
   3176            // Иконка при непрочитанных
   3177            if(b__task_unread_icon)
   \   00000004   4C519FE5           LDR      R5,??UpdateCSMname_0+0x4  ;; `?<Constant "%w %d">`
   \   00000008   ........           LDR      R7,??DataTable138  ;; S_ICONS
   \   0000000C   800FA0E3           MOV      R0,#+512
   \   00000010   250100EF           SWI      +293
   \   00000014   0040A0E1           MOV      R4,R0
   \   00000018   3C019FE5           LDR      R0,??UpdateCSMname_0+0x8  ;; b__task_unread_icon
   \   0000001C   006090E5           LDR      R6,[R0, #+0]
   \   00000020   000056E3           CMP      R6,#+0
   \   00000024   0800000A           BEQ      ??UpdateCSMname_1
   3178            {
   3179              if(messages_unread > 0)
   \   00000028   CC0097E5           LDR      R0,[R7, #+204]
   \   0000002C   010050E3           CMP      R0,#+1
   \   00000030   050000BA           BLT      ??UpdateCSMname_1
   3180              {
   3181          #ifdef NEWSGOLD
   3182                wsprintf(task_name, "%w%c ", task_name, 0xE16D);
   \   00000034   6D30A0E3           MOV      R3,#+109
   \   00000038   E13C83E3           ORR      R3,R3,#0xE100
   \   0000003C   0420A0E1           MOV      R2,R4
   \   00000040   1C1085E2           ADD      R1,R5,#+28
   \   00000044   0400A0E1           MOV      R0,R4
   \   00000048   240100EF           SWI      +292
   3183          #else
   3184                wsprintf(task_name, "%w%c ", task_name, 0xE17A);
   3185          #endif
   3186              }
   3187            }
   3188            // Количество непрочитанных
   3189            if(b__task_unread_count)
   \                     ??UpdateCSMname_1:
   \   0000004C   0C019FE5           LDR      R0,??UpdateCSMname_0+0xC  ;; b__task_unread_count
   \   00000050   000090E5           LDR      R0,[R0, #+0]
   \   00000054   000050E3           CMP      R0,#+0
   \   00000058   0600000A           BEQ      ??UpdateCSMname_2
   3190            {
   3191              if (messages_unread > 0)
   \   0000005C   CC3097E5           LDR      R3,[R7, #+204]
   \   00000060   010053E3           CMP      R3,#+1
   \   00000064   030000BA           BLT      ??UpdateCSMname_2
   3192              {
   3193                wsprintf(task_name, "%w[%d] ", task_name, messages_unread);
   \   00000068   0420A0E1           MOV      R2,R4
   \   0000006C   141085E2           ADD      R1,R5,#+20
   \   00000070   0400A0E1           MOV      R0,R4
   \   00000074   240100EF           SWI      +292
   3194              }
   3195            }
   3196            // NatICQ
   3197            if ((!messages_unread) | (!b__task_unread_icon))
   \                     ??UpdateCSMname_2:
   \   00000078   CC0097E5           LDR      R0,[R7, #+204]
   \   0000007C   000050E3           CMP      R0,#+0
   \   00000080   00005613           CMPNE    R6,#+0
   \   00000084   0300001A           BNE      ??UpdateCSMname_3
   3198            {
   3199              wsprintf(task_name, "%wNatICQ:", task_name);
   \   00000088   0420A0E1           MOV      R2,R4
   \   0000008C   081085E2           ADD      R1,R5,#+8
   \   00000090   0400A0E1           MOV      R0,R4
   \   00000094   240100EF           SWI      +292
   3200            }
   3201            // UIN
   3202            if(task_show == 0)
   \                     ??UpdateCSMname_3:
   \   00000098   C4009FE5           LDR      R0,??UpdateCSMname_0+0x10  ;; task_show
   \   0000009C   000090E5           LDR      R0,[R0, #+0]
   \   000000A0   000050E3           CMP      R0,#+0
   \   000000A4   0600001A           BNE      ??UpdateCSMname_4
   3203            {
   3204              wsprintf(task_name, "%w %d", task_name, UIN);
   \   000000A8   ........           LDR      R0,??DataTable139  ;; UIN
   \   000000AC   0420A0E1           MOV      R2,R4
   \   000000B0   003090E5           LDR      R3,[R0, #+0]
   \   000000B4   0510A0E1           MOV      R1,R5
   \   000000B8   0400A0E1           MOV      R0,R4
   \   000000BC   240100EF           SWI      +292
   \   000000C0   1C0000EA           B        ??UpdateCSMname_5
   3205            }
   3206            // Profile name
   3207            else
   3208            {
   3209              char *s_profile_name = malloc(strlen(successed_config_filename) * 2);
   \                     ??UpdateCSMname_4:
   \   000000C4   ........           LDR      R6,??DataTable137  ;; successed_config_filename
   \   000000C8   000096E5           LDR      R0,[R6, #+0]
   \   000000CC   1B0000EF           SWI      +27
   \   000000D0   8000A0E1           LSL      R0,R0,#+1
   \   000000D4   140000EF           SWI      +20
   3210              strcpy(s_profile_name, successed_config_filename);
   \   000000D8   001096E5           LDR      R1,[R6, #+0]
   \   000000DC   0070A0E1           MOV      R7,R0
   \   000000E0   1A0000EF           SWI      +26
   3211              char *p = strrchr(s_profile_name, '\\') + 1;
   \   000000E4   5C10A0E3           MOV      R1,#+92
   \   000000E8   0700A0E1           MOV      R0,R7
   \   000000EC   170100EF           SWI      +279
   \   000000F0   016080E2           ADD      R6,R0,#+1
   3212              del_ext(p);
   \   000000F4   0600A0E1           MOV      R0,R6
   \   000000F8   ........           _BLF     del_ext,??del_ext??rA
   3213              WSHDR *profile_name=AllocWS(256);
   \   000000FC   400FA0E3           MOV      R0,#+256
   \   00000100   250100EF           SWI      +293
   \   00000104   0080A0E1           MOV      R8,R0
   3214              str_2ws(profile_name,p,128);
   \   00000108   8020A0E3           MOV      R2,#+128
   \   0000010C   0610A0E1           MOV      R1,R6
   \   00000110   6C0100EF           SWI      +364
   3215              wsprintf(task_name, "%w %w", task_name, profile_name);
   \   00000114   0830A0E1           MOV      R3,R8
   \   00000118   0420A0E1           MOV      R2,R4
   \   0000011C   241085E2           ADD      R1,R5,#+36
   \   00000120   0400A0E1           MOV      R0,R4
   \   00000124   240100EF           SWI      +292
   3216              FreeWS(profile_name);
   \   00000128   0800A0E1           MOV      R0,R8
   \   0000012C   290100EF           SWI      +297
   3217              mfree(s_profile_name);
   \   00000130   0700A0E1           MOV      R0,R7
   \   00000134   150000EF           SWI      +21
   3218            }
   3219            // Теперь пишем его в имя CSM
   3220            wsprintf((WSHDR *)(&MAINCSM.maincsm_name),"%w",task_name);
   \                     ??UpdateCSMname_5:
   \   00000138   28009FE5           LDR      R0,??UpdateCSMname_0+0x14  ;; MAINCSM + 40
   \   0000013C   0420A0E1           MOV      R2,R4
   \   00000140   031F8FE2           ADR      R1,??UpdateCSMname_0  ;; "%w"
   \   00000144   240100EF           SWI      +292
   3221            FreeWS(task_name);
   \   00000148   0400A0E1           MOV      R0,R4
   \   0000014C   290100EF           SWI      +297
   3222          }
   \   00000150   F081BDE8           POP      {R4-R8,PC}       ;; return
   \                     ??UpdateCSMname_0:
   \   00000154   25770000           DC8      "%w",+0
   \   00000158   ........           DC32     `?<Constant "%w %d">`
   \   0000015C   ........           DC32     b__task_unread_icon
   \   00000160   ........           DC32     b__task_unread_count
   \   00000164   ........           DC32     task_show
   \   00000168   ........           DC32     MAINCSM + 40
   3223          
   3224          #ifdef NEWSGOLD

   \                                 In segment CODE, align 4, keep-with-next
   3225          void SetIconBarHandler()
   3226          {
   3227            MAINCSM.iconbar_handler.addr=(int)addIconBar;
   \                     SetIconBarHandler:
   \   00000000   08009FE5           LDR      R0,??SetIconBarHandler_0  ;; MAINCSM + 68
   \   00000004   ........           LDR      R1,??DataTable141  ;; addIconBar
   \   00000008   001080E5           STR      R1,[R0, #+0]
   3228          }
   \   0000000C   1EFF2FE1           BX       LR               ;; return
   \                     ??SetIconBarHandler_0:
   \   00000010   ........           DC32     MAINCSM + 68
   3229          #endif
   3230          

   \                                 In segment CODE, align 4, keep-with-next
   3231          void OpenConfig()
   3232          {
   \                     OpenConfig:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   3233            // tridog, 05.05.2009
   3234            // Теперь будем запускать конфиг любого расширения на редактирование
   3235            // не читая Extension.cfg
   3236            WSHDR *ws;
   3237            ws = AllocWS(256);
   \   00000004   400FA0E3           MOV      R0,#+256
   \   00000008   250100EF           SWI      +293
   \   0000000C   0040A0E1           MOV      R4,R0
   3238            WSHDR *xws;
   3239            xws=AllocWS(256);
   \   00000010   400FA0E3           MOV      R0,#+256
   \   00000014   250100EF           SWI      +293
   3240            int id;
   3241            str_2ws(xws,"bcfg",255);
   \   00000018   54109FE5           LDR      R1,??OpenConfig_0  ;; `?<Constant "bcfg">`
   \   0000001C   0050A0E1           MOV      R5,R0
   \   00000020   FF20A0E3           MOV      R2,#+255
   \   00000024   6C0100EF           SWI      +364
   3242            str_2ws(ws, successed_config_filename, 255);
   \   00000028   ........           LDR      R0,??DataTable137  ;; successed_config_filename
   \   0000002C   FF20A0E3           MOV      R2,#+255
   \   00000030   001090E5           LDR      R1,[R0, #+0]
   \   00000034   0400A0E1           MOV      R0,R4
   \   00000038   6C0100EF           SWI      +364
   3243            id=GetExtUid_ws(xws);
   \   0000003C   0500A0E1           MOV      R0,R5
   \   00000040   D00100EF           SWI      +464
   3244            TREGEXPLEXT *pr=get_regextpnt_by_uid(id);
   \   00000044   CF0100EF           SWI      +463
   \   00000048   0030A0E1           MOV      R3,R0
   3245            typedef unsigned int (*func)(WSHDR *p1, WSHDR *p2, int p3);
   3246            func myproc = (func)(pr->proc);
   3247            myproc(ws, xws, 0);
   \   0000004C   203093E5           LDR      R3,[R3, #+32]
   \   00000050   0020A0E3           MOV      R2,#+0
   \   00000054   0510A0E1           MOV      R1,R5
   \   00000058   0400A0E1           MOV      R0,R4
   \   0000005C   33FF2FE1           BLX      R3
   3248            FreeWS(ws);
   \   00000060   0400A0E1           MOV      R0,R4
   \   00000064   290100EF           SWI      +297
   3249            FreeWS(xws);
   \   00000068   0500A0E1           MOV      R0,R5
   \   0000006C   290100EF           SWI      +297
   3250            //
   3251          }
   \   00000070   3080BDE8           POP      {R4,R5,PC}       ;; return
   \                     ??OpenConfig_0:
   \   00000074   ........           DC32     `?<Constant "bcfg">`
   3252          

   \                                 In segment CODE, align 4, keep-with-next
   3253          int main(char *filename, const char *config_name)
   3254          {
   \                     main:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   3255            // filename - путь к эльфу
   3256            // config_name - путь к конфигу
   3257            MAIN_CSM main_csm;
   3258            char *s;
   3259            int len;
   3260          
   3261            // tridog, 18 april 2009
   3262            // Делаем многопрофильность
   3263            InitConfig(config_name);
   3264            //
   3265          
   3266            s=strrchr(filename,'\\');
   3267            len=(s-filename)+1;
   3268            strncpy(elf_path,filename,len);
   \   00000004   ........           LDR      R4,??DataTable138  ;; S_ICONS
   \   00000008   2CD04DE2           SUB      SP,SP,#+44
   \   0000000C   0050A0E1           MOV      R5,R0
   \   00000010   0100A0E1           MOV      R0,R1
   \   00000014   ........           _BLF     InitConfig,??InitConfig??rA
   \   00000018   5C10A0E3           MOV      R1,#+92
   \   0000001C   0500A0E1           MOV      R0,R5
   \   00000020   170100EF           SWI      +279
   \   00000024   050040E0           SUB      R0,R0,R5
   \   00000028   016080E2           ADD      R6,R0,#+1
   \   0000002C   0620A0E1           MOV      R2,R6
   \   00000030   0510A0E1           MOV      R1,R5
   \   00000034   520F84E2           ADD      R0,R4,#+328
   \   00000038   160100EF           SWI      +278
   3269            elf_path[len]=0;
   \   0000003C   040086E0           ADD      R0,R6,R4
   \   00000040   0010A0E3           MOV      R1,#+0
   \   00000044   4811C0E5           STRB     R1,[R0, #+328]
   3270          
   3271            lgpLoadLangpack();
   \   00000048   ........           _BLF     lgpLoadLangpack,??lgpLoadLangpack??rA
   3272          
   3273            if (!UIN)
   \   0000004C   ........           LDR      R0,??DataTable139  ;; UIN
   \   00000050   000090E5           LDR      R0,[R0, #+0]
   \   00000054   000050E3           CMP      R0,#+0
   \   00000058   0C00001A           BNE      ??main_0
   3274            {
   3275              LockSched();
   \   0000005C   460100EF           SWI      +326
   3276              ShowMSG(1,(int)lgpData[LGP_MsgNoUinPass]);
   \   00000060   70009FE5           LDR      R0,??main_1      ;; lgpData + 316
   \   00000064   001090E5           LDR      R1,[R0, #+0]
   \   00000068   0100A0E3           MOV      R0,#+1
   \   0000006C   480100EF           SWI      +328
   3277              OpenConfig();
   \   00000070   ........           BL       OpenConfig
   3278              UnlockSched();
   \   00000074   470100EF           SWI      +327
   3279              lgpFreeLangPack();
   \   00000078   ........           _BLF     lgpFreeLangPack,??lgpFreeLangPack??rA
   3280              SUBPROC((void *)ElfKiller);
   \   0000007C   ........           LDR      R0,??DataTable140  ;; ElfKiller
   \   00000080   710100EF           SWI      +369
   3281              return 0;
   \   00000084   0000A0E3           MOV      R0,#+0
   \   00000088   2CD08DE2           ADD      SP,SP,#+44
   \   0000008C   7080BDE8           POP      {R4-R6,PC}
   3282            }
   3283          
   3284            ReadDefSettings();
   3285            setup_ICONS();
   3286            LoadXStatusText();
   3287            UpdateCSMname();
   3288          #ifdef NEWSGOLD
   3289            SetIconBarHandler();
   \                     ??main_0:
   \   00000090   44509FE5           LDR      R5,??main_1+0x4  ;; MAINCSM
   \   00000094   ........           BL       ReadDefSettings
   \   00000098   ........           BL       setup_ICONS
   \   0000009C   ........           _BLF     LoadXStatusText,??LoadXStatusText??rA
   \   000000A0   ........           BL       UpdateCSMname
   \   000000A4   ........           LDR      R0,??DataTable141  ;; addIconBar
   \   000000A8   440085E5           STR      R0,[R5, #+68]
   3290          #endif
   3291            //  <tridog/>
   3292            //  2.01.11. Автостатус.
   3293            InitAutoStatusEngine();
   \   000000AC   ........           _BLF     InitAutoStatusEngine,??InitAutoStatusEngine??rA
   3294            //  </tridog>
   3295            LockSched();
   \   000000B0   460100EF           SWI      +326
   3296            maincsm_id=CreateCSM(&MAINCSM.maincsm,&main_csm,0);
   \   000000B4   0020A0E3           MOV      R2,#+0
   \   000000B8   0D10A0E1           MOV      R1,SP
   \   000000BC   0500A0E1           MOV      R0,R5
   \   000000C0   070100EF           SWI      +263
   \   000000C4   8C0084E5           STR      R0,[R4, #+140]
   3297            UnlockSched();
   \   000000C8   470100EF           SWI      +327
   3298            return 0;
   \   000000CC   0000A0E3           MOV      R0,#+0
   \   000000D0   2CD08DE2           ADD      SP,SP,#+44
   \   000000D4   7080BDE8           POP      {R4-R6,PC}       ;; return
   \                     ??main_1:
   \   000000D8   ........           DC32     lgpData + 316
   \   000000DC   ........           DC32     MAINCSM
   3299          }
   3300          
   3301          //===========================================================
   3302          // Edit chat
   3303          //===========================================================

   \                                 In segment CODE, align 4, keep-with-next
   3304          void edchat_locret(void){}
   \                     edchat_locret:
   \   00000000   1EFF2FE1           BX       LR               ;; return
   3305          

   \                                 In segment CODE, align 4, keep-with-next
   3306          char *ExtractAnswer(WSHDR *ws)
   3307          {
   \                     ExtractAnswer:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   3308            S_SMILES *t;
   3309            int c;
   3310            int len=0;
   3311            int scur;
   3312            char *msg=NULL;
   3313            unsigned short *wsbody=ws->wsbody;
   \   00000004   005090E5           LDR      R5,[R0, #+0]
   \   00000008   0040A0E3           MOV      R4,#+0
   3314            int wslen=wsbody[0];
   \   0000000C   B060D5E1           LDRH     R6,[R5, #+0]
   \   00000010   0070A0E3           MOV      R7,#+0
   3315            if (wslen)
   \   00000014   000056E3           CMP      R6,#+0
   \   00000018   3C00000A           BEQ      ??ExtractAnswer_0
   3316            {
   3317              for (int i=0; i<wslen; i++) // Посчитаем общую длину будущей строки
   \   0000001C   010056E3           CMP      R6,#+1
   \   00000020   070000AA           BGE      ??ExtractAnswer_1
   3318              {
   3319                c=wsbody[i+1];
   3320                if (c>=0xE100)
   3321                {
   3322                  t=FindSmileByUni(c);
   3323                  if (t)
   3324                  {
   3325                    if (t->lines)
   3326                    {
   3327                      len+=strlen(t->lines->text);
   3328                    }
   3329                  }
   3330                  else  len++;
   3331                }
   3332                else  len++;
   3333              }
   3334          
   3335              msg=malloc(len+1);
   \                     ??ExtractAnswer_2:
   \   00000024   010084E2           ADD      R0,R4,#+1
   \   00000028   140000EF           SWI      +20
   \   0000002C   0070A0E1           MOV      R7,R0
   3336              scur=0;
   \   00000030   0090A0E3           MOV      R9,#+0
   3337              for (int wcur=0; wcur<wslen && scur<len; wcur++)
   \   00000034   00A0A0E3           MOV      R10,#+0
   \   00000038   180000EA           B        ??ExtractAnswer_3
   \                     ??ExtractAnswer_4:
   \   0000003C   014084E2           ADD      R4,R4,#+1
   \                     ??ExtractAnswer_5:
   \   00000040   017087E2           ADD      R7,R7,#+1
   \                     ??ExtractAnswer_1:
   \   00000044   060057E1           CMP      R7,R6
   \   00000048   F5FFFFAA           BGE      ??ExtractAnswer_2
   \   0000004C   870085E0           ADD      R0,R5,R7, LSL #+1
   \   00000050   B280D0E1           LDRH     R8,[R0, #+2]
   \   00000054   E10C58E3           CMP      R8,#+57600
   \   00000058   F7FFFFBA           BLT      ??ExtractAnswer_4
   \   0000005C   0800A0E1           MOV      R0,R8
   \   00000060   ........           _BLF     FindSmileByUni,??FindSmileByUni??rA
   \   00000064   000050E3           CMP      R0,#+0
   \   00000068   F3FFFF0A           BEQ      ??ExtractAnswer_4
   \   0000006C   080090E5           LDR      R0,[R0, #+8]
   \   00000070   000050E3           CMP      R0,#+0
   \   00000074   F1FFFF0A           BEQ      ??ExtractAnswer_5
   \   00000078   0C0080E2           ADD      R0,R0,#+12
   \   0000007C   1B0000EF           SWI      +27
   \   00000080   044080E0           ADD      R4,R0,R4
   \   00000084   EDFFFFEA           B        ??ExtractAnswer_5
   3338              {
   3339                c=wsbody[wcur+1];
   3340                if (c==10) c=13;
   \                     ??ExtractAnswer_6:
   \   00000088   0D80A0E3           MOV      R8,#+13
   3341                if (c>=0xE100)
   3342                {
   3343                  t=FindSmileByUni(c);
   3344                  if (t)
   3345                  {
   3346                    int w;
   3347                    char *s;
   3348                    if (t->lines)
   3349                    {
   3350                      s=t->lines->text;
   3351                      while ((w=*s++) && scur<len)
   3352                      {
   3353                        msg[scur]=w;
   3354                        scur++;
   3355                      }
   3356                    }
   3357                  }
   3358                  else
   3359                  {
   3360                    msg[scur]=char16to8(c);
   3361                    scur++;
   3362                  }
   3363                }
   3364                else
   3365                {
   3366                  msg[scur]=char16to8(c);
   \                     ??ExtractAnswer_7:
   \   0000008C   0800A0E1           MOV      R0,R8
   \   00000090   ........           _BLF     char16to8,??char16to8??rA
   \   00000094   0700C9E7           STRB     R0,[R9, +R7]
   3367                  scur++;
   \   00000098   0B90A0E1           MOV      R9,R11
   3368                }
   \                     ??ExtractAnswer_8:
   \   0000009C   01A08AE2           ADD      R10,R10,#+1
   \                     ??ExtractAnswer_3:
   \   000000A0   06005AE1           CMP      R10,R6
   \   000000A4   040059B1           CMPLT    R9,R4
   \   000000A8   160000AA           BGE      ??ExtractAnswer_9
   \   000000AC   8A0085E0           ADD      R0,R5,R10, LSL #+1
   \   000000B0   B280D0E1           LDRH     R8,[R0, #+2]
   \   000000B4   01B089E2           ADD      R11,R9,#+1
   \   000000B8   0A0058E3           CMP      R8,#+10
   \   000000BC   F1FFFF0A           BEQ      ??ExtractAnswer_6
   \   000000C0   E10C58E3           CMP      R8,#+57600
   \   000000C4   F0FFFFBA           BLT      ??ExtractAnswer_7
   \   000000C8   0800A0E1           MOV      R0,R8
   \   000000CC   ........           _BLF     FindSmileByUni,??FindSmileByUni??rA
   \   000000D0   000050E3           CMP      R0,#+0
   \   000000D4   ECFFFF0A           BEQ      ??ExtractAnswer_7
   \   000000D8   080090E5           LDR      R0,[R0, #+8]
   \   000000DC   000050E3           CMP      R0,#+0
   \   000000E0   EDFFFF0A           BEQ      ??ExtractAnswer_8
   \   000000E4   0C0080E2           ADD      R0,R0,#+12
   \                     ??ExtractAnswer_10:
   \   000000E8   ........           LDRB     R1,[R0], #+1
   \   000000EC   000051E3           CMP      R1,#+0
   \   000000F0   E9FFFF0A           BEQ      ??ExtractAnswer_8
   \   000000F4   040059E1           CMP      R9,R4
   \   000000F8   E7FFFFAA           BGE      ??ExtractAnswer_8
   \   000000FC   0710C9E7           STRB     R1,[R9, +R7]
   \   00000100   019089E2           ADD      R9,R9,#+1
   \   00000104   F7FFFFEA           B        ??ExtractAnswer_10
   3369              }
   3370              msg[scur]=0;
   \                     ??ExtractAnswer_9:
   \   00000108   0000A0E3           MOV      R0,#+0
   \   0000010C   0700C9E7           STRB     R0,[R9, +R7]
   3371            }
   3372            return msg;
   \                     ??ExtractAnswer_0:
   \   00000110   0700A0E1           MOV      R0,R7
   \   00000114   F08FBDE8           POP      {R4-R11,PC}      ;; return
   3373          }
   3374          

   \                                 In segment CODE, align 4, keep-with-next
   3375          CLIST *FindNextActiveContact(CLIST *t)
   3376          {
   3377            while(t=(CLIST *)(t->next))
   \                     FindNextActiveContact:
   \                     ??FindNextActiveContact_0:
   \   00000000   000090E5           LDR      R0,[R0, #+0]
   \   00000004   000050E3           CMP      R0,#+0
   \   00000008   0300000A           BEQ      ??FindNextActiveContact_1
   3378            {
   3379              if (t->isactive) return t;
   \   0000000C   B41090E5           LDR      R1,[R0, #+180]
   \   00000010   000051E3           CMP      R1,#+0
   \   00000014   F9FFFF0A           BEQ      ??FindNextActiveContact_0
   \   00000018   1EFF2FE1           BX       LR
   3380            }
   3381            t=(CLIST *)(&cltop);
   \                     ??FindNextActiveContact_1:
   \   0000001C   ........           LDR      R0,??DataTable143  ;; S_ICONS + 232
   \   00000020   020000EA           B        ??FindNextActiveContact_2
   3382            while(t=(CLIST *)(t->next))
   3383            {
   3384              if (t->isactive) return t;
   \                     ??FindNextActiveContact_3:
   \   00000024   B41090E5           LDR      R1,[R0, #+180]
   \   00000028   000051E3           CMP      R1,#+0
   \   0000002C   1EFF2F11           BXNE     LR
   3385            }
   \                     ??FindNextActiveContact_2:
   \   00000030   000090E5           LDR      R0,[R0, #+0]
   \   00000034   000050E3           CMP      R0,#+0
   \   00000038   F9FFFF1A           BNE      ??FindNextActiveContact_3
   3386            return NULL;
   \   0000003C   1EFF2FE1           BX       LR               ;; return
   3387          }
   3388          

   \                                 In segment CODE, align 4, keep-with-next
   3389          CLIST *FindPrevActiveContact(CLIST *t)
   3390          {
   3391            CLIST *cl;
   3392            CLIST *cl_active=NULL;
   3393            cl=(CLIST *)(&cltop);
   \                     FindPrevActiveContact:
   \   00000000   ........           LDR      R2,??DataTable143  ;; S_ICONS + 232
   \   00000004   0010A0E3           MOV      R1,#+0
   \   00000008   020000EA           B        ??FindPrevActiveContact_0
   3394          
   3395          
   3396            while(cl=cl->next)
   3397            {
   3398              if (cl==t)
   3399              {
   3400                if (cl_active==NULL) break;
   3401                else return (cl_active);
   3402              }
   3403              else
   3404              {
   3405                if (cl->isactive) cl_active=cl;
   \                     ??FindPrevActiveContact_1:
   \   0000000C   B43092E5           LDR      R3,[R2, #+180]
   \   00000010   000053E3           CMP      R3,#+0
   \   00000014   0210A011           MOVNE    R1,R2
   3406              }
   \                     ??FindPrevActiveContact_0:
   \   00000018   002092E5           LDR      R2,[R2, #+0]
   \   0000001C   000052E3           CMP      R2,#+0
   \   00000020   0500000A           BEQ      ??FindPrevActiveContact_2
   \   00000024   000052E1           CMP      R2,R0
   \   00000028   F7FFFF1A           BNE      ??FindPrevActiveContact_1
   \   0000002C   000051E3           CMP      R1,#+0
   \   00000030   0100000A           BEQ      ??FindPrevActiveContact_2
   \                     ??FindPrevActiveContact_3:
   \   00000034   0100A0E1           MOV      R0,R1
   \   00000038   1EFF2FE1           BX       LR               ;; return
   3407            }
   3408            while(t)
   \                     ??FindPrevActiveContact_2:
   \   0000003C   000050E3           CMP      R0,#+0
   \   00000040   FBFFFF0A           BEQ      ??FindPrevActiveContact_3
   3409            {
   3410              if (t->isactive) cl_active=t;
   \   00000044   B42090E5           LDR      R2,[R0, #+180]
   \   00000048   000052E3           CMP      R2,#+0
   \   0000004C   0010A011           MOVNE    R1,R0
   3411              t=t->next;
   \   00000050   000090E5           LDR      R0,[R0, #+0]
   \   00000054   F8FFFFEA           B        ??FindPrevActiveContact_2
   3412            }
   3413            return cl_active;
   3414          }
   3415          
   3416          

   \                                 In segment CODE, align 4, keep-with-next
   3417          void ed_options_handler(USR_MENU_ITEM *item)
   3418          {
   \                     ed_options_handler:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   3419            EDCHAT_STRUCT *ed_struct=item->user_pointer;
   3420            CLIST *t;
   3421            int i=item->cur_item;
   3422            if (item->type==0)
   \   00000004   ........           LDR      R5,??DataTable155  ;; S_ICONS
   \   00000008   2CD04DE2           SUB      SP,SP,#+44
   \   0000000C   0070A0E1           MOV      R7,R0
   \   00000010   0000D7E5           LDRB     R0,[R7, #+0]
   \   00000014   044097E5           LDR      R4,[R7, #+4]
   \   00000018   B860D7E1           LDRH     R6,[R7, #+8]
   \   0000001C   000050E3           CMP      R0,#+0
   \   00000020   1100001A           BNE      ??ed_options_handler_0
   3423            {
   3424              switch(i)
   \   00000024   0C0097E5           LDR      R0,[R7, #+12]
   \   00000028   ........           LDR      R1,??DataTable156  ;; lgpData
   \   0000002C   0620B0E1           MOVS     R2,R6
   \   00000030   0200000A           BEQ      ??ed_options_handler_1
   \   00000034   012056E2           SUBS     R2,R6,#+1
   \   00000038   0200000A           BEQ      ??ed_options_handler_2
   \   0000003C   030000EA           B        ??ed_options_handler_3
   3425              {
   3426              case 0:
   3427                ascii2ws(item->ws,lgpData[LGP_MnuEdNextAct]);
   \                     ??ed_options_handler_1:
   \   00000040   B01091E5           LDR      R1,[R1, #+176]
   \   00000044   070000EA           B        ??ed_options_handler_4
   3428                break;
   3429              case 1:
   3430                ascii2ws(item->ws,lgpData[LGP_MnuEdPrevAct]);
   \                     ??ed_options_handler_2:
   \   00000048   B41091E5           LDR      R1,[R1, #+180]
   \   0000004C   050000EA           B        ??ed_options_handler_4
   3431                break;
   3432              default:
   3433                i-=2;
   3434                if (i<ed_struct->loaded_templates) ascii2ws(item->ws,templates_lines[i]);
   \                     ??ed_options_handler_3:
   \   00000050   101094E5           LDR      R1,[R4, #+16]
   \   00000054   026046E2           SUB      R6,R6,#+2
   \   00000058   010056E1           CMP      R6,R1
   \   0000005C   550000AA           BGE      ??ed_options_handler_5
   \   00000060   D41095E5           LDR      R1,[R5, #+212]
   \   00000064   061191E7           LDR      R1,[R1, +R6, LSL #+2]
   \                     ??ed_options_handler_4:
   \   00000068   ........           _BLF     ascii2ws,??ascii2ws??rA
   3435                break;
   3436              }
   3437            }
   3438            if (item->type==1)
   \                     ??ed_options_handler_0:
   \   0000006C   0000D7E5           LDRB     R0,[R7, #+0]
   \   00000070   010050E3           CMP      R0,#+1
   \   00000074   4F00001A           BNE      ??ed_options_handler_5
   3439            {
   3440              switch(i)
   \   00000078   007094E5           LDR      R7,[R4, #+0]
   \   0000007C   0600B0E1           MOVS     R0,R6
   \   00000080   0200000A           BEQ      ??ed_options_handler_6
   \   00000084   010056E2           SUBS     R0,R6,#+1
   \   00000088   0C00000A           BEQ      ??ed_options_handler_7
   \   0000008C   0E0000EA           B        ??ed_options_handler_8
   3441              {
   3442              case 0:
   3443                t=FindNextActiveContact(ed_struct->ed_contact);
   \                     ??ed_options_handler_6:
   \   00000090   0700A0E1           MOV      R0,R7
   \   00000094   ........           BL       FindNextActiveContact
   \                     ??ed_options_handler_9:
   \   00000098   0040B0E1           MOVS     R4,R0
   3444                if (t && t!=ed_struct->ed_contact)
   \   0000009C   07005411           CMPNE    R4,R7
   \   000000A0   4400000A           BEQ      ??ed_options_handler_5
   3445                {
   3446                  GeneralFunc_flag1(edchat_id,1);
   \   000000A4   F40095E5           LDR      R0,[R5, #+244]
   \   000000A8   0110A0E3           MOV      R1,#+1
   \   000000AC   3D0100EF           SWI      +317
   3447                  CreateEditChat(t);
   \   000000B0   0400A0E1           MOV      R0,R4
   \   000000B4   ........           BL       CreateEditChat
   \   000000B8   2CD08DE2           ADD      SP,SP,#+44
   \   000000BC   F080BDE8           POP      {R4-R7,PC}
   3448                }
   3449                break;
   3450              case 1:
   3451                t=FindPrevActiveContact(ed_struct->ed_contact);
   \                     ??ed_options_handler_7:
   \   000000C0   0700A0E1           MOV      R0,R7
   \   000000C4   ........           BL       FindPrevActiveContact
   \   000000C8   F2FFFFEA           B        ??ed_options_handler_9
   3452                if (t && t!=ed_struct->ed_contact)
   3453                {
   3454                  GeneralFunc_flag1(edchat_id,1);
   3455                  CreateEditChat(t);
   3456                }
   3457                break;
   3458              default:
   3459                i-=2;
   3460                if (i<ed_struct->loaded_templates)
   \                     ??ed_options_handler_8:
   \   000000CC   100094E5           LDR      R0,[R4, #+16]
   \   000000D0   026046E2           SUB      R6,R6,#+2
   \   000000D4   000056E1           CMP      R6,R0
   \   000000D8   360000AA           BGE      ??ed_options_handler_5
   3461                {
   3462          	EDITCONTROL ec;
   3463          	WSHDR *ed_ws;
   3464          	int c;
   3465          	char *p=templates_lines[i];
   \   000000DC   D40095E5           LDR      R0,[R5, #+212]
   3466          	ExtractEditControl(ed_struct->ed_chatgui,ed_struct->ed_answer,&ec);
   \   000000E0   081094E5           LDR      R1,[R4, #+8]
   \   000000E4   065190E7           LDR      R5,[R0, +R6, LSL #+2]
   \   000000E8   040094E5           LDR      R0,[R4, #+4]
   \   000000EC   0D20A0E1           MOV      R2,SP
   \   000000F0   690100EF           SWI      +361
   3467          	ed_ws=AllocWS(ec.pWS->wsbody[0]+strlen(p));
   \   000000F4   0500A0E1           MOV      R0,R5
   \   000000F8   1B0000EF           SWI      +27
   \   000000FC   28109DE5           LDR      R1,[SP, #+40]
   \   00000100   001091E5           LDR      R1,[R1, #+0]
   \   00000104   B010D1E1           LDRH     R1,[R1, #+0]
   \   00000108   010080E0           ADD      R0,R0,R1
   \   0000010C   250100EF           SWI      +293
   3468          	wstrcpy(ed_ws,ec.pWS);
   \   00000110   28109DE5           LDR      R1,[SP, #+40]
   \   00000114   0060A0E1           MOV      R6,R0
   \   00000118   1F0100EF           SWI      +287
   3469                  if (EDIT_GetFocus(ed_struct->ed_chatgui)==ed_struct->ed_answer)
   \   0000011C   040094E5           LDR      R0,[R4, #+4]
   \   00000120   820100EF           SWI      +386
   \   00000124   081094E5           LDR      R1,[R4, #+8]
   \   00000128   010050E1           CMP      R0,R1
   \   0000012C   1800001A           BNE      ??ed_options_handler_10
   3470                  {
   3471                    int pos=EDIT_GetCursorPos(ed_struct->ed_chatgui);
   \   00000130   040094E5           LDR      R0,[R4, #+4]
   \   00000134   D30100EF           SWI      +467
   \   00000138   0070A0E1           MOV      R7,R0
   \   0000013C   050000EA           B        ??ed_options_handler_11
   3472                    while(c=*p++)
   3473                    {
   3474                      wsInsertChar(ed_ws,char8to16(c),pos++);
   \                     ??ed_options_handler_12:
   \   00000140   ........           _BLF     char8to16,??char8to16??rA
   \   00000144   0010A0E1           MOV      R1,R0
   \   00000148   0720A0E1           MOV      R2,R7
   \   0000014C   0600A0E1           MOV      R0,R6
   \   00000150   1D0000EF           SWI      +29
   \   00000154   017087E2           ADD      R7,R7,#+1
   3475                    }
   \                     ??ed_options_handler_11:
   \   00000158   ........           LDRB     R0,[R5], #+1
   \   0000015C   000050E3           CMP      R0,#+0
   \   00000160   F6FFFF1A           BNE      ??ed_options_handler_12
   3476                    EDIT_SetTextToEditControl(ed_struct->ed_chatgui,ed_struct->ed_answer,ed_ws);
   \   00000164   081094E5           LDR      R1,[R4, #+8]
   \   00000168   040094E5           LDR      R0,[R4, #+4]
   \   0000016C   0620A0E1           MOV      R2,R6
   \   00000170   DE0100EF           SWI      +478
   3477                    EDIT_SetCursorPos(ed_struct->ed_chatgui,pos);
   \   00000174   040094E5           LDR      R0,[R4, #+4]
   \   00000178   0710A0E1           MOV      R1,R7
   \   0000017C   D40100EF           SWI      +468
   \   00000180   0A0000EA           B        ??ed_options_handler_13
   3478                  }
   3479                  else
   3480                  {
   3481                    while(c=*p++)
   3482                    {
   3483                      wsAppendChar(ed_ws,char8to16(c));
   \                     ??ed_options_handler_14:
   \   00000184   ........           _BLF     char8to16,??char8to16??rA
   \   00000188   0010A0E1           MOV      R1,R0
   \   0000018C   0600A0E1           MOV      R0,R6
   \   00000190   1C0000EF           SWI      +28
   3484                    }
   \                     ??ed_options_handler_10:
   \   00000194   ........           LDRB     R0,[R5], #+1
   \   00000198   000050E3           CMP      R0,#+0
   \   0000019C   F8FFFF1A           BNE      ??ed_options_handler_14
   3485                    EDIT_SetTextToEditControl(ed_struct->ed_chatgui,ed_struct->ed_answer,ed_ws);
   \   000001A0   081094E5           LDR      R1,[R4, #+8]
   \   000001A4   040094E5           LDR      R0,[R4, #+4]
   \   000001A8   0620A0E1           MOV      R2,R6
   \   000001AC   DE0100EF           SWI      +478
   3486                  }
   3487          	FreeWS(ed_ws);
   \                     ??ed_options_handler_13:
   \   000001B0   0600A0E1           MOV      R0,R6
   \   000001B4   290100EF           SWI      +297
   3488                }
   3489                break;
   3490              }
   3491            }
   3492          }
   \                     ??ed_options_handler_5:
   \   000001B8   2CD08DE2           ADD      SP,SP,#+44       ;; stack cleaning
   \   000001BC   F080BDE8           POP      {R4-R7,PC}       ;; return
   3493          

   \                                 In segment CODE, align 4, keep-with-next
   3494          unsigned short * wstrstr(unsigned short *ws, char *str, int *wslen, int len)
   3495          {
   \                     wstrstr:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   \   00000004   0070A0E1           MOV      R7,R0
   \   00000008   0140A0E1           MOV      R4,R1
   \   0000000C   0250A0E1           MOV      R5,R2
   \   00000010   0360A0E1           MOV      R6,R3
   \   00000014   030000EA           B        ??wstrstr_0
   3496            char *s;
   3497            unsigned short *w;
   3498            int l;
   3499          
   3500            while(*wslen >= len)
   3501            {
   3502              s = str;
   3503              w = ws;
   3504              l = len;
   3505              for(; (char16to8(*w) == *s) && l; w++, s++, l--);
   3506              if(!l) return ws;
   3507              ws++;
   3508              (*wslen)--;
   \                     ??wstrstr_1:
   \   00000018   000095E5           LDR      R0,[R5, #+0]
   \   0000001C   027087E2           ADD      R7,R7,#+2
   \   00000020   010040E2           SUB      R0,R0,#+1
   \   00000024   000085E5           STR      R0,[R5, #+0]
   \                     ??wstrstr_0:
   \   00000028   000095E5           LDR      R0,[R5, #+0]
   \   0000002C   060050E1           CMP      R0,R6
   \   00000030   0F0000BA           BLT      ??wstrstr_2
   \   00000034   0480A0E1           MOV      R8,R4
   \   00000038   0790A0E1           MOV      R9,R7
   \   0000003C   06A0A0E1           MOV      R10,R6
   \   00000040   000000EA           B        ??wstrstr_3
   \                     ??wstrstr_4:
   \   00000044   01A04AE2           SUB      R10,R10,#+1
   \                     ??wstrstr_3:
   \   00000048   ........           LDRH     R0,[R9], #+2
   \   0000004C   ........           _BLF     char16to8,??char16to8??rA
   \   00000050   ........           LDRB     R1,[R8], #+1
   \   00000054   010050E1           CMP      R0,R1
   \   00000058   0100001A           BNE      ??wstrstr_5
   \   0000005C   00005AE3           CMP      R10,#+0
   \   00000060   F7FFFF1A           BNE      ??wstrstr_4
   \                     ??wstrstr_5:
   \   00000064   00005AE3           CMP      R10,#+0
   \   00000068   EAFFFF1A           BNE      ??wstrstr_1
   \   0000006C   0700A0E1           MOV      R0,R7
   \   00000070   F087BDE8           POP      {R4-R10,PC}
   3509            }
   3510            return 0;
   \                     ??wstrstr_2:
   \   00000074   0000A0E3           MOV      R0,#+0
   \   00000078   F087BDE8           POP      {R4-R10,PC}      ;; return
   3511          
   3512          }
   3513          

   \                                 In segment CODE, align 4, keep-with-next
   3514          int IsUrl(WSHDR *ws, int pos, char *link)
   3515          {
   \                     IsUrl:
   \   00000000   F14F2DE9           PUSH     {R0,R4-R11,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0150A0E1           MOV      R5,R1
   3516            const char *valid = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789$-_.+!*'(),%;:@&#=/?#абвгдеёжзийклмнопрстуфхцчшщъыьэюяАБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ~";
   3517          
   3518            int len = wstrlen(ws);
   3519            unsigned short *str = ws->wsbody+1, *tmp, *begin;
   3520            tmp = str;
   3521          
   3522            begin = str = wstrstr(str, "http://", &len, 7);
   \   0000000C   ........           LDR      R7,??DataTable148  ;; `?<Constant "abcdefghijklmnopqrstu...">`
   \   00000010   0260A0E1           MOV      R6,R2
   \   00000014   230100EF           SWI      +291
   \   00000018   00008DE5           STR      R0,[SP, #+0]
   \   0000001C   04009DE5           LDR      R0,[SP, #+4]
   \   00000020   0730A0E3           MOV      R3,#+7
   \   00000024   000090E5           LDR      R0,[R0, #+0]
   \   00000028   0D20A0E1           MOV      R2,SP
   \   0000002C   028080E2           ADD      R8,R0,#+2
   \   00000030   981087E2           ADD      R1,R7,#+152
   \   00000034   0800A0E1           MOV      R0,R8
   \   00000038   ........           BL       wstrstr
   \   0000003C   00B0A0E1           MOV      R11,R0
   \   00000040   0040A0E1           MOV      R4,R0
   \   00000044   A890A0E1           LSR      R9,R8,#+1
   \   00000048   02A045E2           SUB      R10,R5,#+2
   \   0000004C   060000EA           B        ??IsUrl_0
   3523          
   3524            while(str && (begin-tmp <= pos))
   3525            {
   3526              while(len && strchr(valid, char16to8(*str))) {str++; len--;}
   3527              if(str-tmp >= pos-2)
   3528              {
   3529                for(;begin < str; begin++, link++)
   3530                  *link = char16to8(*begin);
   3531                link[str-begin] = 0;
   3532                return 1;
   3533              }
   3534              begin = str = wstrstr(str, "http://", &len, 7);
   \                     ??IsUrl_1:
   \   00000050   0730A0E3           MOV      R3,#+7
   \   00000054   0D20A0E1           MOV      R2,SP
   \   00000058   981087E2           ADD      R1,R7,#+152
   \   0000005C   0B00A0E1           MOV      R0,R11
   \   00000060   ........           BL       wstrstr
   \   00000064   00B0A0E1           MOV      R11,R0
   \   00000068   0040A0E1           MOV      R4,R0
   \                     ??IsUrl_0:
   \   0000006C   00005BE3           CMP      R11,#+0
   \   00000070   0200000A           BEQ      ??IsUrl_2
   \   00000074   A40069E0           RSB      R0,R9,R4, LSR #+1
   \   00000078   000055E1           CMP      R5,R0
   \   0000007C   0B0000AA           BGE      ??IsUrl_3
   3535            }
   3536          
   3537            len = wstrlen(ws);
   \                     ??IsUrl_2:
   \   00000080   04009DE5           LDR      R0,[SP, #+4]
   \   00000084   230100EF           SWI      +291
   \   00000088   00008DE5           STR      R0,[SP, #+0]
   3538            begin = str = wstrstr(tmp, "www.", &len, 4);
   \   0000008C   0430A0E3           MOV      R3,#+4
   \   00000090   0D20A0E1           MOV      R2,SP
   \   00000094   A01087E2           ADD      R1,R7,#+160
   \   00000098   0800A0E1           MOV      R0,R8
   \   0000009C   200000EA           B        ??IsUrl_4
   \                     ??IsUrl_5:
   \   000000A0   00109DE5           LDR      R1,[SP, #+0]
   \   000000A4   02B08BE2           ADD      R11,R11,#+2
   \   000000A8   011041E2           SUB      R1,R1,#+1
   \   000000AC   00108DE5           STR      R1,[SP, #+0]
   \                     ??IsUrl_3:
   \   000000B0   00009DE5           LDR      R0,[SP, #+0]
   \   000000B4   000050E3           CMP      R0,#+0
   \   000000B8   0600000A           BEQ      ??IsUrl_6
   \   000000BC   B000DBE1           LDRH     R0,[R11, #+0]
   \   000000C0   ........           _BLF     char16to8,??char16to8??rA
   \   000000C4   0010A0E1           MOV      R1,R0
   \   000000C8   0700A0E1           MOV      R0,R7
   \   000000CC   180000EF           SWI      +24
   \   000000D0   000050E3           CMP      R0,#+0
   \   000000D4   F1FFFF1A           BNE      ??IsUrl_5
   \                     ??IsUrl_6:
   \   000000D8   AB0069E0           RSB      R0,R9,R11, LSR #+1
   \   000000DC   0A0050E1           CMP      R0,R10
   \   000000E0   DAFFFFBA           BLT      ??IsUrl_1
   \                     ??IsUrl_7:
   \   000000E4   0B0054E1           CMP      R4,R11
   \   000000E8   0300002A           BCS      ??IsUrl_8
   \   000000EC   ........           LDRH     R0,[R4], #+2
   \   000000F0   ........           _BLF     char16to8,??char16to8??rA
   \   000000F4   ........           STRB     R0,[R6], #+1
   \   000000F8   F9FFFFEA           B        ??IsUrl_7
   \                     ??IsUrl_8:
   \   000000FC   AB00A0E1           LSR      R0,R11,#+1
   \   00000100   A40040E0           SUB      R0,R0,R4, LSR #+1
   \   00000104   0010A0E3           MOV      R1,#+0
   \   00000108   0610C0E7           STRB     R1,[R0, +R6]
   \   0000010C   0100A0E3           MOV      R0,#+1
   \   00000110   F68FBDE8           POP      {R1,R2,R4-R11,PC}
   3539            while(str && (begin-tmp <= pos))
   3540            {
   3541              while(len && strchr(valid, char16to8(*str))) {str++; len--;}
   3542              if(str-tmp >= pos-2)
   3543              {
   3544                for(;begin < str; begin++, link++)
   3545                  *link = char16to8(*begin);
   3546                link[str-begin] = 0;
   3547                return 1;
   3548              }
   3549              begin = str = wstrstr(str, "www.", &len, 4);
   \                     ??IsUrl_9:
   \   00000114   0430A0E3           MOV      R3,#+4
   \   00000118   0D20A0E1           MOV      R2,SP
   \   0000011C   A01087E2           ADD      R1,R7,#+160
   \   00000120   0B00A0E1           MOV      R0,R11
   \                     ??IsUrl_4:
   \   00000124   ........           BL       wstrstr
   \   00000128   00B0A0E1           MOV      R11,R0
   \   0000012C   0040A0E1           MOV      R4,R0
   \   00000130   00005BE3           CMP      R11,#+0
   \   00000134   0200000A           BEQ      ??IsUrl_10
   \   00000138   A40069E0           RSB      R0,R9,R4, LSR #+1
   \   0000013C   000055E1           CMP      R5,R0
   \   00000140   050000AA           BGE      ??IsUrl_11
   3550            }
   3551            return 0;
   \                     ??IsUrl_10:
   \   00000144   0000A0E3           MOV      R0,#+0
   \   00000148   F68FBDE8           POP      {R1,R2,R4-R11,PC}  ;; return
   \                     ??IsUrl_12:
   \   0000014C   00109DE5           LDR      R1,[SP, #+0]
   \   00000150   02B08BE2           ADD      R11,R11,#+2
   \   00000154   011041E2           SUB      R1,R1,#+1
   \   00000158   00108DE5           STR      R1,[SP, #+0]
   \                     ??IsUrl_11:
   \   0000015C   00009DE5           LDR      R0,[SP, #+0]
   \   00000160   000050E3           CMP      R0,#+0
   \   00000164   0600000A           BEQ      ??IsUrl_13
   \   00000168   B000DBE1           LDRH     R0,[R11, #+0]
   \   0000016C   ........           _BLF     char16to8,??char16to8??rA
   \   00000170   0010A0E1           MOV      R1,R0
   \   00000174   0700A0E1           MOV      R0,R7
   \   00000178   180000EF           SWI      +24
   \   0000017C   000050E3           CMP      R0,#+0
   \   00000180   F1FFFF1A           BNE      ??IsUrl_12
   \                     ??IsUrl_13:
   \   00000184   AB0069E0           RSB      R0,R9,R11, LSR #+1
   \   00000188   0A0050E1           CMP      R0,R10
   \   0000018C   E0FFFFBA           BLT      ??IsUrl_9
   \                     ??IsUrl_14:
   \   00000190   0B0054E1           CMP      R4,R11
   \   00000194   D8FFFF2A           BCS      ??IsUrl_8
   \   00000198   ........           LDRH     R0,[R4], #+2
   \   0000019C   ........           _BLF     char16to8,??char16to8??rA
   \   000001A0   ........           STRB     R0,[R6], #+1
   \   000001A4   F9FFFFEA           B        ??IsUrl_14
   3552          }
   3553          
   3554          #define UTF16_DIS_UNDERLINE (0xE002)
   3555          #define UTF16_ENA_UNDERLINE (0xE001)
   3556          

   \                                 In segment CODE, align 4, keep-with-next
   3557          void ParseAnswer(WSHDR *ws, const char *s)
   3558          {
   \                     ParseAnswer:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   3559            const char *valid = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789$-_.+!*#'(),%;:@&=/?абвгдеёжзийклмнопрстуфхцчшщъыьэюяАБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ";
   3560            S_SMILES *t;
   3561            S_SMILES *t_root=(S_SMILES *)s_top;
   \   00000008   ........           LDR      R0,??DataTable147  ;; s_top
   \   0000000C   04D04DE2           SUB      SP,SP,#+4
   \   00000010   006090E5           LDR      R6,[R0, #+0]
   \   00000014   0150A0E1           MOV      R5,R1
   3562            STXT_SMILES *st;
   3563            unsigned int wchar;
   3564            unsigned int ulb=s[0]+(s[1]<<8)+(s[2]<<16)+(s[3]<<24);
   \   00000018   0000D5E5           LDRB     R0,[R5, #+0]
   \   0000001C   0110D5E5           LDRB     R1,[R5, #+1]
   \   00000020   010480E0           ADD      R0,R0,R1, LSL #+8
   \   00000024   0210D5E5           LDRB     R1,[R5, #+2]
   \   00000028   010880E0           ADD      R0,R0,R1, LSL #+16
   \   0000002C   0310D5E5           LDRB     R1,[R5, #+3]
   \   00000030   018C80E0           ADD      R8,R0,R1, LSL #+24
   3565            CutWSTR(ws,0);
   \   00000034   0010A0E3           MOV      R1,#+0
   \   00000038   0400A0E1           MOV      R0,R4
   \   0000003C   260100EF           SWI      +294
   \   00000040   160000EA           B        ??ParseAnswer_0
   3566            int i;
   3567            while(wchar=*s)
   3568            {
   3569              if(s==strstr(s, "http://") || s == strstr(s, "www."))
   3570              {
   3571                wsAppendChar(ws,UTF16_ENA_UNDERLINE);
   3572                while(*s && strchr(valid, *s))
   3573                {
   3574                  wchar=char8to16(*s);
   \                     ??ParseAnswer_1:
   \   00000044   ........           LDRB     R0,[R5], #+1
   \   00000048   ........           _BLF     char8to16,??char8to16??rA
   3575                  wsAppendChar(ws,wchar);
   \   0000004C   0010A0E1           MOV      R1,R0
   \                     ??ParseAnswer_2:
   \   00000050   0400A0E1           MOV      R0,R4
   \   00000054   1C0000EF           SWI      +28
   3576                  s++;
   3577                }
   \   00000058   0010D5E5           LDRB     R1,[R5, #+0]
   \   0000005C   000051E3           CMP      R1,#+0
   \   00000060   0300000A           BEQ      ??ParseAnswer_3
   \   00000064   A80089E2           ADD      R0,R9,#+168
   \   00000068   180000EF           SWI      +24
   \   0000006C   000050E3           CMP      R0,#+0
   \   00000070   F3FFFF1A           BNE      ??ParseAnswer_1
   3578                wsAppendChar(ws,UTF16_DIS_UNDERLINE);
   \                     ??ParseAnswer_3:
   \   00000074   0210A0E3           MOV      R1,#+2
   \   00000078   E01C81E3           ORR      R1,R1,#0xE000
   \   0000007C   0400A0E1           MOV      R0,R4
   \   00000080   1C0000EF           SWI      +28
   3579                ulb=s[0]+(s[1]<<8)+(s[2]<<16)+(s[3]<<24);
   \   00000084   0000D5E5           LDRB     R0,[R5, #+0]
   \   00000088   0110D5E5           LDRB     R1,[R5, #+1]
   \   0000008C   010480E0           ADD      R0,R0,R1, LSL #+8
   \   00000090   0210D5E5           LDRB     R1,[R5, #+2]
   \   00000094   010880E0           ADD      R0,R0,R1, LSL #+16
   \   00000098   0310D5E5           LDRB     R1,[R5, #+3]
   \   0000009C   018C80E0           ADD      R8,R0,R1, LSL #+24
   3580                continue;
   \                     ??ParseAnswer_0:
   \   000000A0   0070D5E5           LDRB     R7,[R5, #+0]
   \   000000A4   000057E3           CMP      R7,#+0
   \   000000A8   4F00000A           BEQ      ??ParseAnswer_4
   \   000000AC   ........           LDR      R9,??DataTable148  ;; `?<Constant "abcdefghijklmnopqrstu...">`
   \   000000B0   0500A0E1           MOV      R0,R5
   \   000000B4   981089E2           ADD      R1,R9,#+152
   \   000000B8   180100EF           SWI      +280
   \   000000BC   000055E1           CMP      R5,R0
   \   000000C0   0400000A           BEQ      ??ParseAnswer_5
   \   000000C4   A01089E2           ADD      R1,R9,#+160
   \   000000C8   0500A0E1           MOV      R0,R5
   \   000000CC   180100EF           SWI      +280
   \   000000D0   000055E1           CMP      R5,R0
   \   000000D4   0200001A           BNE      ??ParseAnswer_6
   \                     ??ParseAnswer_5:
   \   000000D8   0110A0E3           MOV      R1,#+1
   \   000000DC   E01C81E3           ORR      R1,R1,#0xE000
   \   000000E0   DAFFFFEA           B        ??ParseAnswer_2
   3581              }
   3582          
   3583              t=t_root;
   \                     ??ParseAnswer_6:
   \   000000E4   0690A0E1           MOV      R9,R6
   \   000000E8   230000EA           B        ??ParseAnswer_7
   3584              while(t)
   3585              {
   3586                st=t->lines;
   3587                while(st)
   3588                {
   3589          	if ((ulb&st->mask)==st->key)
   \                     ??ParseAnswer_8:
   \   000000EC   0B00DAE5           LDRB     R0,[R10, #+11]
   \   000000F0   0A10DAE5           LDRB     R1,[R10, #+10]
   \   000000F4   0620DAE5           LDRB     R2,[R10, #+6]
   \   000000F8   000481E1           ORR      R0,R1,R0, LSL #+8
   \   000000FC   0910DAE5           LDRB     R1,[R10, #+9]
   \   00000100   000481E1           ORR      R0,R1,R0, LSL #+8
   \   00000104   0810DAE5           LDRB     R1,[R10, #+8]
   \   00000108   000481E1           ORR      R0,R1,R0, LSL #+8
   \   0000010C   0710DAE5           LDRB     R1,[R10, #+7]
   \   00000110   080000E0           AND      R0,R0,R8
   \   00000114   011482E1           ORR      R1,R2,R1, LSL #+8
   \   00000118   0520DAE5           LDRB     R2,[R10, #+5]
   \   0000011C   011482E1           ORR      R1,R2,R1, LSL #+8
   \   00000120   0420DAE5           LDRB     R2,[R10, #+4]
   \   00000124   011482E1           ORR      R1,R2,R1, LSL #+8
   \   00000128   010050E1           CMP      R0,R1
   \   0000012C   0700001A           BNE      ??ParseAnswer_9
   3590          	{
   3591          	  if (!strncmp(s,st->text,strlen(st->text))) goto L1;
   \   00000130   0C008AE2           ADD      R0,R10,#+12
   \   00000134   1B0000EF           SWI      +27
   \   00000138   0020A0E1           MOV      R2,R0
   \   0000013C   0C108AE2           ADD      R1,R10,#+12
   \   00000140   0500A0E1           MOV      R0,R5
   \   00000144   150100EF           SWI      +277
   \   00000148   000050E3           CMP      R0,#+0
   \   0000014C   1500000A           BEQ      ??ParseAnswer_10
   3592          	}
   3593          	st=st->next;
   \                     ??ParseAnswer_9:
   \   00000150   0000A0E3           MOV      R0,#+0
   \                     ??ParseAnswer_11:
   \   00000154   0A20D0E7           LDRB     R2,[R0, +R10]
   \   00000158   0D10A0E1           MOV      R1,SP
   \   0000015C   0120C0E7           STRB     R2,[R0, +R1]
   \   00000160   010080E2           ADD      R0,R0,#+1
   \   00000164   040050E3           CMP      R0,#+4
   \   00000168   F9FFFFBA           BLT      ??ParseAnswer_11
   \   0000016C   00A09DE5           LDR      R10,[SP, #+0]
   3594                }
   \                     ??ParseAnswer_12:
   \   00000170   00005AE3           CMP      R10,#+0
   \   00000174   DCFFFF1A           BNE      ??ParseAnswer_8
   3595                t=t->next;
   \   00000178   009099E5           LDR      R9,[R9, #+0]
   \                     ??ParseAnswer_7:
   \   0000017C   000059E3           CMP      R9,#+0
   \   00000180   08A09915           LDRNE    R10,[R9, #+8]
   \   00000184   F9FFFF1A           BNE      ??ParseAnswer_12
   3596              }
   3597            L1:
   3598              if (t)
   3599              {
   3600                wchar=t->uni_smile;
   3601                s+=strlen(st->text);
   3602                ulb=s[0]+(s[1]<<8)+(s[2]<<16)+(s[3]<<24);
   3603              }
   3604              else
   3605              {
   3606                wchar=char8to16(wchar);
   \   00000188   0700A0E1           MOV      R0,R7
   \   0000018C   ........           _BLF     char8to16,??char8to16??rA
   \   00000190   0070A0E1           MOV      R7,R0
   3607                s++;
   3608                ulb>>=8;
   3609                ulb+=s[3]<<24;
   \   00000194   015085E2           ADD      R5,R5,#+1
   \   00000198   0300D5E5           LDRB     R0,[R5, #+3]
   \   0000019C   000CA0E1           LSL      R0,R0,#+24
   \   000001A0   288480E0           ADD      R8,R0,R8, LSR #+8
   \   000001A4   0A0000EA           B        ??ParseAnswer_13
   3610              }
   \                     ??ParseAnswer_10:
   \   000001A8   047099E5           LDR      R7,[R9, #+4]
   \   000001AC   0C008AE2           ADD      R0,R10,#+12
   \   000001B0   1B0000EF           SWI      +27
   \   000001B4   055080E0           ADD      R5,R0,R5
   \   000001B8   0000D5E5           LDRB     R0,[R5, #+0]
   \   000001BC   0110D5E5           LDRB     R1,[R5, #+1]
   \   000001C0   010480E0           ADD      R0,R0,R1, LSL #+8
   \   000001C4   0210D5E5           LDRB     R1,[R5, #+2]
   \   000001C8   010880E0           ADD      R0,R0,R1, LSL #+16
   \   000001CC   0310D5E5           LDRB     R1,[R5, #+3]
   \   000001D0   018C80E0           ADD      R8,R0,R1, LSL #+24
   3611              if (wchar!=10) wsAppendChar(ws,wchar);
   \                     ??ParseAnswer_13:
   \   000001D4   0A0057E3           CMP      R7,#+10
   \   000001D8   B0FFFF0A           BEQ      ??ParseAnswer_0
   \   000001DC   0710A0E1           MOV      R1,R7
   \   000001E0   0400A0E1           MOV      R0,R4
   \   000001E4   1C0000EF           SWI      +28
   \   000001E8   ACFFFFEA           B        ??ParseAnswer_0
   3612            }
   3613            i=ws->wsbody[0];
   \                     ??ParseAnswer_4:
   \   000001EC   000094E5           LDR      R0,[R4, #+0]
   \   000001F0   B010D0E1           LDRH     R1,[R0, #+0]
   \   000001F4   000000EA           B        ??ParseAnswer_14
   3614            while(i>1)
   3615            {
   3616              if (ws->wsbody[i--]!=13) break;
   3617              ws->wsbody[0]=i;
   \                     ??ParseAnswer_15:
   \   000001F8   B010C0E1           STRH     R1,[R0, #+0]
   \                     ??ParseAnswer_14:
   \   000001FC   020051E3           CMP      R1,#+2
   \   00000200   F187BDB8           POPLT    {R0,R4-R10,PC}
   \   00000204   0120A0E1           MOV      R2,R1
   \   00000208   011042E2           SUB      R1,R2,#+1
   \   0000020C   822080E0           ADD      R2,R0,R2, LSL #+1
   \   00000210   B020D2E1           LDRH     R2,[R2, #+0]
   \   00000214   0D0052E3           CMP      R2,#+13
   \   00000218   F6FFFF0A           BEQ      ??ParseAnswer_15
   3618            }
   3619          }
   \   0000021C   F187BDE8           POP      {R0,R4-R10,PC}   ;; return
   3620          

   \                                 In segment CODE, align 4, keep-with-next
   3621          void SaveAnswer(CLIST *cl, WSHDR *ws)
   3622          {
   \                     SaveAnswer:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0100A0E1           MOV      R0,R1
   3623            char *p=ExtractAnswer(ws);
   \   0000000C   ........           BL       ExtractAnswer
   \   00000010   0050A0E1           MOV      R5,R0
   3624            mfree(cl->answer);
   \   00000014   AC0094E5           LDR      R0,[R4, #+172]
   \   00000018   150000EF           SWI      +21
   3625            cl->answer=p;
   \   0000001C   AC5084E5           STR      R5,[R4, #+172]
   3626          }
   \   00000020   3080BDE8           POP      {R4,R5,PC}       ;; return
   3627          
   3628          

   \                                 In segment CODE, align 4, keep-with-next
   3629          int GetTempName(void)
   3630          {
   \                     GetTempName:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   10D04DE2           SUB      SP,SP,#+16
   3631            static const int DMonth[]={0,31,59,90,120,151,181,212,243,273,304,334,365};
   3632            unsigned long iday;
   3633            TTime tt;
   3634            TDate dd;
   3635            GetDateTime(&dd,&tt);
   \   00000008   08108DE2           ADD      R1,SP,#+8
   \   0000000C   0D00A0E1           MOV      R0,SP
   \   00000010   B40000EF           SWI      +180
   3636            dd.year=dd.year%100;
   \   00000014   00109DE5           LDR      R1,[SP, #+0]
   \   00000018   84209FE5           LDR      R2,??GetTempName_0  ;; 0x51eb851f
   \   0000001C   92318CE0           UMULL    R3,R12,R2,R1
   \   00000020   6430A0E3           MOV      R3,#+100
   \   00000024   ACC2A0E1           LSR      R12,R12,#+5
   \   00000028   930C0CE0           MUL      R12,R3,R12
   3637            iday=365*dd.year+DMonth[dd.month-1]+(dd.day - 1);
   3638            iday=iday+(dd.year>>2);
   \   0000002C   6D20A0E3           MOV      R2,#+109
   \   00000030   0CC041E0           SUB      R12,R1,R12
   \   00000034   00C08DE5           STR      R12,[SP, #+0]
   \   00000038   0400DDE5           LDRB     R0,[SP, #+4]
   \   0000003C   0C10A0E1           MOV      R1,R12
   \   00000040   60C09FE5           LDR      R12,??GetTempName_0+0x4  ;; ??DMonth
   \   00000044   402F82E3           ORR      R2,R2,#0x100
   \   00000048   00318CE0           ADD      R3,R12,R0, LSL #+2
   \   0000004C   043013E5           LDR      R3,[R3, #-4]
   3639            if (dd.month>2||(dd.year&3)>0)
   \   00000050   030050E3           CMP      R0,#+3
   \   00000054   923121E0           MLA      R1,R2,R1,R3
   \   00000058   0520DDE5           LDRB     R2,[SP, #+5]
   \   0000005C   012042E2           SUB      R2,R2,#+1
   \   00000060   011082E0           ADD      R1,R2,R1
   \   00000064   00209DE5           LDR      R2,[SP, #+0]
   \   00000068   221181E0           ADD      R1,R1,R2, LSR #+2
   \   0000006C   0100002A           BCS      ??GetTempName_1
   \   00000070   030012E3           TST      R2,#0x3
   \   00000074   0000000A           BEQ      ??GetTempName_2
   3640              iday++;
   \                     ??GetTempName_1:
   \   00000078   011081E2           ADD      R1,R1,#+1
   3641            iday=(tt.sec+60*(tt.min+60*(tt.hour+24* iday)));
   3642            return iday;
   \                     ??GetTempName_2:
   \   0000007C   0830DDE5           LDRB     R3,[SP, #+8]
   \   00000080   0920DDE5           LDRB     R2,[SP, #+9]
   \   00000084   0A00DDE5           LDRB     R0,[SP, #+10]
   \   00000088   18C0A0E3           MOV      R12,#+24
   \   0000008C   9C3121E0           MLA      R1,R12,R1,R3
   \   00000090   3C30A0E3           MOV      R3,#+60
   \   00000094   932121E0           MLA      R1,R3,R1,R2
   \   00000098   10D08DE2           ADD      SP,SP,#+16
   \   0000009C   930120E0           MLA      R0,R3,R1,R0
   \   000000A0   0080BDE8           POP      {PC}             ;; return
   \                     ??GetTempName_0:
   \   000000A4   1F85EB51           DC32     0x51eb851f
   \   000000A8   ........           DC32     ??DMonth
   3643          }

   \                                 In segment DATA_C, align 4, align-sorted
   \                     ??DMonth:
   \   00000000   000000001F00       DC32 0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334, 365
   \              00003B000000
   \              5A0000007800
   \              000097000000
   \              B5000000D400
   \              0000F3000000
   \              110100003001
   \              00004E010000
   \              6D010000    
   3644          
   3645          

   \                                 In segment CODE, align 4, keep-with-next
   3646          int edchat_onkey(GUI *data, GUI_MSG *msg)
   3647          {
   \                     edchat_onkey:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   3648            //-1 - do redraw
   3649            GBS_DelTimer(&tmr_illumination);
   \   00000004   ........           LDR      R6,??DataTable155  ;; S_ICONS
   \   00000008   6DDF4DE2           SUB      SP,SP,#+436
   \   0000000C   0040A0E1           MOV      R4,R0
   \   00000010   0170A0E1           MOV      R7,R1
   \   00000014   DA0F86E2           ADD      R0,R6,#+872
   \   00000018   8C0100EF           SWI      +396
   3650            CLIST *t;
   3651            TPKT *p;
   3652            EDITCONTROL ec;
   3653            int len, f;
   3654            unsigned err;
   3655            char *s;
   3656            int l=msg->gbsmsg->submess;
   \   0000001C   040097E5           LDR      R0,[R7, #+4]
   \   00000020   089090E5           LDR      R9,[R0, #+8]
   3657            EDCHAT_STRUCT *ed_struct=EDIT_GetUserPointer(data);
   \   00000024   0400A0E1           MOV      R0,R4
   \   00000028   DF0100EF           SWI      +479
   \   0000002C   0050A0E1           MOV      R5,R0
   3658          //  WSHDR *ews;
   3659            char fn[256];
   3660          
   3661            if (msg->keys==0xFFF)
   \   00000030   F200D7E1           LDRSH    R0,[R7, #+2]
   \   00000034   FF10A0E3           MOV      R1,#+255
   \   00000038   F01E81E3           ORR      R1,R1,#0xF00
   \   0000003C   010050E1           CMP      R0,R1
   \   00000040   0200001A           BNE      ??edchat_onkey_0
   3662            {
   3663              void ec_menu(EDCHAT_STRUCT *);
   3664              ec_menu(ed_struct);
   \   00000044   0500A0E1           MOV      R0,R5
   \   00000048   ........           BL       ec_menu
   3665              return(-1);
   \                     ??edchat_onkey_1:
   \   0000004C   E30000EA           B        ??edchat_onkey_2
   3666            }
   3667            if (msg->keys==0xFF0)  return (1);
   \                     ??edchat_onkey_0:
   \   00000050   FF0E50E3           CMP      R0,#+4080
   \   00000054   0100001A           BNE      ??edchat_onkey_3
   \   00000058   0100A0E3           MOV      R0,#+1
   \   0000005C   E00000EA           B        ??edchat_onkey_4
   3668            if (msg->gbsmsg->msg==LONG_PRESS)
   \                     ??edchat_onkey_3:
   \   00000060   040097E5           LDR      R0,[R7, #+4]
   \   00000064   9510A0E3           MOV      R1,#+149
   \   00000068   040090E5           LDR      R0,[R0, #+4]
   \   0000006C   401F81E3           ORR      R1,R1,#0x100
   \   00000070   010050E1           CMP      R0,R1
   3669            {
   3670              if (l==RIGHT_BUTTON)
   \   00000074   3E005903           CMPEQ    R9,#+62
   \   00000078   1800001A           BNE      ??edchat_onkey_5
   3671              {
   3672                if (EDIT_GetFocus(data)==ed_struct->ed_answer)
   \   0000007C   0400A0E1           MOV      R0,R4
   \   00000080   820100EF           SWI      +386
   \   00000084   081095E5           LDR      R1,[R5, #+8]
   \   00000088   010050E1           CMP      R0,R1
   \   0000008C   1300001A           BNE      ??edchat_onkey_5
   3673                {
   3674          	ExtractEditControl(data,ed_struct->ed_answer,&ec);
   \   00000090   08208DE2           ADD      R2,SP,#+8
   \   00000094   0400A0E1           MOV      R0,R4
   \   00000098   690100EF           SWI      +361
   3675          	if (ec.pWS->wsbody[0]==(EDIT_GetCursorPos(data)-1))
   \   0000009C   0400A0E1           MOV      R0,R4
   \   000000A0   D30100EF           SWI      +467
   \   000000A4   30109DE5           LDR      R1,[SP, #+48]
   \   000000A8   010040E2           SUB      R0,R0,#+1
   \   000000AC   001091E5           LDR      R1,[R1, #+0]
   \   000000B0   B010D1E1           LDRH     R1,[R1, #+0]
   \   000000B4   000051E1           CMP      R1,R0
   \   000000B8   0800001A           BNE      ??edchat_onkey_5
   3676          	{
   3677          	  t=FindNextActiveContact(ed_struct->ed_contact);
   \   000000BC   00A095E5           LDR      R10,[R5, #+0]
   \   000000C0   0A00A0E1           MOV      R0,R10
   \   000000C4   ........           BL       FindNextActiveContact
   \   000000C8   0080B0E1           MOVS     R8,R0
   3678          	  if (t && t!=ed_struct->ed_contact)
   \   000000CC   0A005011           CMPNE    R0,R10
   \   000000D0   0200000A           BEQ      ??edchat_onkey_5
   3679          	  {
   3680          	    CreateEditChat(t);
   \   000000D4   ........           BL       CreateEditChat
   3681          	    return(1);
   \   000000D8   0100A0E3           MOV      R0,#+1
   \   000000DC   C00000EA           B        ??edchat_onkey_4
   3682          	  }
   3683          	}
   3684                }
   3685              }
   3686            }
   3687            if (msg->gbsmsg->msg==KEY_DOWN)
   \                     ??edchat_onkey_5:
   \   000000E0   040097E5           LDR      R0,[R7, #+4]
   \   000000E4   9310A0E3           MOV      R1,#+147
   \   000000E8   040090E5           LDR      R0,[R0, #+4]
   \   000000EC   401F81E3           ORR      R1,R1,#0x100
   \   000000F0   010050E1           CMP      R0,R1
   \   000000F4   0A00001A           BNE      ??edchat_onkey_6
   3688            {
   3689              if ((l>='0')&&(l<='9'))
   \   000000F8   300059E3           CMP      R9,#+48
   \   000000FC   0B0000BA           BLT      ??edchat_onkey_7
   \   00000100   3A0059E3           CMP      R9,#+58
   \   00000104   060000AA           BGE      ??edchat_onkey_6
   3690              {
   3691                if (EDIT_GetFocus(data)!=ed_struct->ed_answer)
   \   00000108   0400A0E1           MOV      R0,R4
   \   0000010C   820100EF           SWI      +386
   \   00000110   081095E5           LDR      R1,[R5, #+8]
   \   00000114   010050E1           CMP      R0,R1
   \   00000118   0100000A           BEQ      ??edchat_onkey_6
   3692          	EDIT_SetFocus(data,ed_struct->ed_answer);
   \   0000011C   0400A0E1           MOV      R0,R4
   \   00000120   9B0100EF           SWI      +411
   3693              }
   3694              if (l==GREEN_BUTTON)
   3695              {
   3696                if (connect_state==3)
   3697                {
   3698          	if ((t=ed_struct->ed_contact))
   3699          	{
   3700                    ExtractEditControl(data,ed_struct->ed_answer,&ec);
   3701                    SaveAnswer(t,ec.pWS);
   3702          	  if ((s=t->answer))
   3703          	  {
   3704          	    if ((len=strlen(s)))
   3705          	    {
   3706          	      t->isactive=ACTIVE_TIME;
   3707          	      p=malloc(sizeof(PKT)+len+1);
   3708          	      p->pkt.uin=t->uin;
   3709          	      p->pkt.type=T_SENDMSG;
   3710          	      p->pkt.data_len=len;
   3711          	      strcpy(p->data,s);
   3712          	      AddStringToLog(t,0x01,p->data,I_str,(++SENDMSGCOUNT)&0x7FFF); //Номер сообщения
   3713          	      SUBPROC((void *)SendAnswer,0,p);
   3714          	      mfree(t->answer);
   3715          	      t->answer=NULL;
   3716          	      //        request_remake_edchat=1;
   3717          	      EDIT_SetFocus(data,ed_struct->ed_answer);
   3718          	      CutWSTR(ews,0);
   3719          	      EDIT_SetTextToFocused(data,ews);
   3720          	      AddMsgToChat(data);
   3721          	      RecountMenu(t, 1);
   3722          	      return(-1);
   3723          	    }
   3724          	  }
   3725          	}
   3726                }
   3727              }
   3728              if (l==ENTER_BUTTON)
   3729              {
   3730          
   3731                if (!EDIT_IsMarkModeActive(data))  // Только если не выделение
   3732                {
   3733                  int pos, len;
   3734                  char *link;
   3735                  ExtractEditControl(ed_struct->ed_chatgui,EDIT_GetFocus(ed_struct->ed_chatgui),&ec);
   3736                  wstrcpy(ews,ec.pWS);
   3737                  pos = EDIT_GetCursorPos(data);
   3738                  len = wstrlen(ews);
   3739          
   3740                  link = malloc(len+1);
   3741          
   3742                  if(IsUrl(ews, pos, link))
   3743                  {
   3744                    char templates_path[128];
   3745                    zeromem(templates_path,128);
   3746                    strcpy(templates_path,TEMPLATES_PATH);
   3747                    const char _slash[]="\\";
   3748                    if (templates_path[strlen(templates_path)-1]!='\\') strcat(templates_path,_slash);
   3749          
   3750                    snprintf(fn, 255, "%stmp%u.url", templates_path, GetTempName);
   3751                    if ((f=fopen(fn,A_WriteOnly+A_BIN+A_Create+A_Truncate,P_WRITE,&err))!=-1)
   3752                    {
   3753                      fwrite(f,link,strlen(link),&err);
   3754                      fclose(f,&err);
   3755                      str_2ws(ews,fn,256);
   3756                      ExecuteFile(ews,0,0);
   3757                      unlink(fn, &err);
   3758                    }
   3759          
   3760          //          LockSched();
   3761          //          ShowMSG(1,(int)link);
   3762          //          UnlockSched();
   3763                    mfree(link);
   3764                    return (-1);
   3765                  }
   3766                  else
   3767                  {
   3768                    int i=ed_struct->loaded_templates=LoadTemplates(ed_struct->ed_contact);
   3769                    EDIT_OpenOptionMenuWithUserItems(data,ed_options_handler,ed_struct,i+2);
   3770                    mfree(link);
   3771                    return (-1);
   3772                  }
   3773          
   3774                }
   3775          
   3776              }
   3777              if (l==VOL_UP_BUTTON)
   3778              {
   3779                int pos;
   3780          
   3781                if ((pos=EDIT_GetFocus(data)-2)>=2)
   3782                {
   3783                  EDIT_SetFocus(data, pos);
   3784                  EDIT_SetCursorPos(data, 1);
   3785                }
   3786                return (-1);
   3787              }
   3788              if (l==VOL_DOWN_BUTTON)
   3789              {
   3790                int pos;
   3791          
   3792                if ((pos=EDIT_GetFocus(data)+2)<=ed_struct->ed_answer)
   3793                {
   3794                  EDIT_SetFocus(data, pos);
   3795                  EDIT_SetCursorPos(data, 1);
   3796                }
   3797                return (-1);
   3798              }
   3799            }
   3800            return(0); //Do standart keys
   \                     ??edchat_onkey_6:
   \   00000124   0000A0E3           MOV      R0,#+0
   \   00000128   6DDF8DE2           ADD      SP,SP,#+436
   \   0000012C   F08FBDE8           POP      {R4-R11,PC}      ;; return
   \                     ??edchat_onkey_7:
   \   00000130   ........           LDR      R7,??DataTable174  ;; `?<Constant "\\\\">`
   \   00000134   0B0059E3           CMP      R9,#+11
   \   00000138   4500001A           BNE      ??edchat_onkey_8
   \   0000013C   ........           LDR      R0,??DataTable181  ;; ecmenu_ITEMS + 264
   \   00000140   000090E5           LDR      R0,[R0, #+0]
   \   00000144   030050E3           CMP      R0,#+3
   \   00000148   F5FFFF1A           BNE      ??edchat_onkey_6
   \   0000014C   008095E5           LDR      R8,[R5, #+0]
   \   00000150   000058E3           CMP      R8,#+0
   \   00000154   F2FFFF0A           BEQ      ??edchat_onkey_6
   \   00000158   081095E5           LDR      R1,[R5, #+8]
   \   0000015C   08208DE2           ADD      R2,SP,#+8
   \   00000160   0400A0E1           MOV      R0,R4
   \   00000164   690100EF           SWI      +361
   \   00000168   30109DE5           LDR      R1,[SP, #+48]
   \   0000016C   0800A0E1           MOV      R0,R8
   \   00000170   ........           BL       SaveAnswer
   \   00000174   ACA098E5           LDR      R10,[R8, #+172]
   \   00000178   00005AE3           CMP      R10,#+0
   \   0000017C   E8FFFF0A           BEQ      ??edchat_onkey_6
   \   00000180   0A00A0E1           MOV      R0,R10
   \   00000184   1B0000EF           SWI      +27
   \   00000188   00B0B0E1           MOVS     R11,R0
   \   0000018C   E4FFFF0A           BEQ      ??edchat_onkey_6
   \   00000190   B400A0E3           MOV      R0,#+180
   \   00000194   B40088E5           STR      R0,[R8, #+180]
   \   00000198   09008BE2           ADD      R0,R11,#+9
   \   0000019C   140000EF           SWI      +20
   \   000001A0   0090A0E1           MOV      R9,R0
   \   000001A4   0C0098E5           LDR      R0,[R8, #+12]
   \   000001A8   0A10A0E1           MOV      R1,R10
   \   000001AC   000089E5           STR      R0,[R9, #+0]
   \   000001B0   0200A0E3           MOV      R0,#+2
   \   000001B4   B400C9E1           STRH     R0,[R9, #+4]
   \   000001B8   B6B0C9E1           STRH     R11,[R9, #+6]
   \   000001BC   080089E2           ADD      R0,R9,#+8
   \   000001C0   1A0000EF           SWI      +26
   \   000001C4   940096E5           LDR      R0,[R6, #+148]
   \   000001C8   023087E2           ADD      R3,R7,#+2
   \   000001CC   010080E2           ADD      R0,R0,#+1
   \   000001D0   940086E5           STR      R0,[R6, #+148]
   \   000001D4   8008A0E1           LSL      R0,R0,#+17
   \   000001D8   A008A0E1           LSR      R0,R0,#+17
   \   000001DC   01002DE9           PUSH     {R0}
   \   000001E0   082089E2           ADD      R2,R9,#+8
   \   000001E4   0110A0E3           MOV      R1,#+1
   \   000001E8   0800A0E1           MOV      R0,R8
   \   000001EC   ........           BL       AddStringToLog
   \   000001F0   ........           LDR      R0,??DataTable188  ;; SendAnswer
   \   000001F4   0920A0E1           MOV      R2,R9
   \   000001F8   0010A0E3           MOV      R1,#+0
   \   000001FC   710100EF           SWI      +369
   \   00000200   AC0098E5           LDR      R0,[R8, #+172]
   \   00000204   150000EF           SWI      +21
   \   00000208   0000A0E3           MOV      R0,#+0
   \   0000020C   AC0088E5           STR      R0,[R8, #+172]
   \   00000210   081095E5           LDR      R1,[R5, #+8]
   \   00000214   0400A0E1           MOV      R0,R4
   \   00000218   9B0100EF           SWI      +411
   \   0000021C   980096E5           LDR      R0,[R6, #+152]
   \   00000220   0010A0E3           MOV      R1,#+0
   \   00000224   260100EF           SWI      +294
   \   00000228   981096E5           LDR      R1,[R6, #+152]
   \   0000022C   0400A0E1           MOV      R0,R4
   \   00000230   810100EF           SWI      +385
   \   00000234   0400A0E1           MOV      R0,R4
   \   00000238   ........           BL       AddMsgToChat
   \   0000023C   0110A0E3           MOV      R1,#+1
   \   00000240   0800A0E1           MOV      R0,R8
   \   00000244   ........           BL       RecountMenu
   \   00000248   0000E0E3           MVN      R0,#+0
   \   0000024C   04D08DE2           ADD      SP,SP,#+4
   \   00000250   630000EA           B        ??edchat_onkey_4
   \                     ??edchat_onkey_8:
   \   00000254   1A0059E3           CMP      R9,#+26
   \   00000258   6300001A           BNE      ??edchat_onkey_9
   \   0000025C   0400A0E1           MOV      R0,R4
   \   00000260   D80100EF           SWI      +472
   \   00000264   000050E3           CMP      R0,#+0
   \   00000268   ADFFFF1A           BNE      ??edchat_onkey_6
   \   0000026C   040095E5           LDR      R0,[R5, #+4]
   \   00000270   820100EF           SWI      +386
   \   00000274   08208DE2           ADD      R2,SP,#+8
   \   00000278   0010A0E1           MOV      R1,R0
   \   0000027C   040095E5           LDR      R0,[R5, #+4]
   \   00000280   690100EF           SWI      +361
   \   00000284   980096E5           LDR      R0,[R6, #+152]
   \   00000288   30109DE5           LDR      R1,[SP, #+48]
   \   0000028C   1F0100EF           SWI      +287
   \   00000290   0400A0E1           MOV      R0,R4
   \   00000294   D30100EF           SWI      +467
   \   00000298   0090A0E1           MOV      R9,R0
   \   0000029C   980096E5           LDR      R0,[R6, #+152]
   \   000002A0   230100EF           SWI      +291
   \   000002A4   010080E2           ADD      R0,R0,#+1
   \   000002A8   140000EF           SWI      +20
   \   000002AC   0080A0E1           MOV      R8,R0
   \   000002B0   980096E5           LDR      R0,[R6, #+152]
   \   000002B4   0820A0E1           MOV      R2,R8
   \   000002B8   0910A0E1           MOV      R1,R9
   \   000002BC   ........           BL       IsUrl
   \   000002C0   000050E3           CMP      R0,#+0
   \   000002C4   3B00000A           BEQ      ??edchat_onkey_10
   \   000002C8   8010A0E3           MOV      R1,#+128
   \   000002CC   4D0F8DE2           ADD      R0,SP,#+308
   \   000002D0   1D0100EF           SWI      +285
   \   000002D4   ........           LDR      R1,??DataTable153  ;; TEMPLATES_PATH
   \   000002D8   4D0F8DE2           ADD      R0,SP,#+308
   \   000002DC   1A0000EF           SWI      +26
   \   000002E0   0010D7E5           LDRB     R1,[R7, #0]
   \   000002E4   04008DE2           ADD      R0,SP,#+4
   \   000002E8   0010C0E5           STRB     R1,[R0, #+0]
   \   000002EC   0110D7E5           LDRB     R1,[R7, #+1]
   \   000002F0   0110C0E5           STRB     R1,[R0, #+1]
   \   000002F4   4D0F8DE2           ADD      R0,SP,#+308
   \   000002F8   1B0000EF           SWI      +27
   \   000002FC   4D1F8DE2           ADD      R1,SP,#+308
   \   00000300   010080E0           ADD      R0,R0,R1
   \   00000304   010050E5           LDRB     R0,[R0, #-1]
   \   00000308   5C0050E3           CMP      R0,#+92
   \   0000030C   0200000A           BEQ      ??edchat_onkey_11
   \   00000310   04108DE2           ADD      R1,SP,#+4
   \   00000314   4D0F8DE2           ADD      R0,SP,#+308
   \   00000318   170000EF           SWI      +23
   \                     ??edchat_onkey_11:
   \   0000031C   1C019FE5           LDR      R0,??edchat_onkey_12  ;; GetTempName
   \   00000320   042087E2           ADD      R2,R7,#+4
   \   00000324   01002DE9           PUSH     {R0}
   \   00000328   4E3F8DE2           ADD      R3,SP,#+312
   \   0000032C   FF10A0E3           MOV      R1,#+255
   \   00000330   38008DE2           ADD      R0,SP,#+56
   \   00000334   1B0100EF           SWI      +283
   \   00000338   04308DE2           ADD      R3,SP,#+4
   \   0000033C   402FA0E3           MOV      R2,#+256
   \   00000340   0110A0E3           MOV      R1,#+1
   \   00000344   831C81E3           ORR      R1,R1,#0x8300
   \   00000348   38008DE2           ADD      R0,SP,#+56
   \   0000034C   0A0000EF           SWI      +10
   \   00000350   0040A0E1           MOV      R4,R0
   \   00000354   010074E3           CMN      R4,#+1
   \   00000358   04D08DE2           ADD      SP,SP,#+4
   \   0000035C   1D00000A           BEQ      ??edchat_onkey_13
   \   00000360   0800A0E1           MOV      R0,R8
   \   00000364   1B0000EF           SWI      +27
   \   00000368   0020A0E1           MOV      R2,R0
   \   0000036C   0D30A0E1           MOV      R3,SP
   \   00000370   0810A0E1           MOV      R1,R8
   \   00000374   0400A0E1           MOV      R0,R4
   \   00000378   0C0000EF           SWI      +12
   \   0000037C   0D10A0E1           MOV      R1,SP
   \   00000380   0400A0E1           MOV      R0,R4
   \   00000384   0D0000EF           SWI      +13
   \   00000388   980096E5           LDR      R0,[R6, #+152]
   \   0000038C   402FA0E3           MOV      R2,#+256
   \   00000390   34108DE2           ADD      R1,SP,#+52
   \   00000394   6C0100EF           SWI      +364
   \   00000398   980096E5           LDR      R0,[R6, #+152]
   \   0000039C   0020A0E3           MOV      R2,#+0
   \   000003A0   0010A0E3           MOV      R1,#+0
   \   000003A4   940000EF           SWI      +148
   \   000003A8   0D10A0E1           MOV      R1,SP
   \   000003AC   34008DE2           ADD      R0,SP,#+52
   \   000003B0   6B0100EF           SWI      +363
   \                     ??edchat_onkey_14:
   \   000003B4   070000EA           B        ??edchat_onkey_13
   \                     ??edchat_onkey_10:
   \   000003B8   000095E5           LDR      R0,[R5, #+0]
   \   000003BC   ........           BL       LoadTemplates
   \   000003C0   7C109FE5           LDR      R1,??edchat_onkey_12+0x4  ;; ed_options_handler
   \   000003C4   100085E5           STR      R0,[R5, #+16]
   \   000003C8   023080E2           ADD      R3,R0,#+2
   \   000003CC   0520A0E1           MOV      R2,R5
   \   000003D0   0400A0E1           MOV      R0,R4
   \   000003D4   E50100EF           SWI      +485
   \                     ??edchat_onkey_13:
   \   000003D8   0800A0E1           MOV      R0,R8
   \   000003DC   150000EF           SWI      +21
   \                     ??edchat_onkey_2:
   \   000003E0   0000E0E3           MVN      R0,#+0
   \                     ??edchat_onkey_4:
   \   000003E4   6DDF8DE2           ADD      SP,SP,#+436
   \   000003E8   F08FBDE8           POP      {R4-R11,PC}
   \                     ??edchat_onkey_9:
   \   000003EC   0D0059E3           CMP      R9,#+13
   \   000003F0   0A00001A           BNE      ??edchat_onkey_15
   \   000003F4   0400A0E1           MOV      R0,R4
   \   000003F8   820100EF           SWI      +386
   \   000003FC   021040E2           SUB      R1,R0,#+2
   \   00000400   020051E3           CMP      R1,#+2
   \                     ??edchat_onkey_16:
   \   00000404   F5FFFFBA           BLT      ??edchat_onkey_2
   \   00000408   0400A0E1           MOV      R0,R4
   \   0000040C   9B0100EF           SWI      +411
   \   00000410   0110A0E3           MOV      R1,#+1
   \   00000414   0400A0E1           MOV      R0,R4
   \   00000418   D40100EF           SWI      +468
   \   0000041C   EFFFFFEA           B        ??edchat_onkey_2
   \                     ??edchat_onkey_15:
   \   00000420   0E0059E3           CMP      R9,#+14
   \   00000424   3EFFFF1A           BNE      ??edchat_onkey_6
   \   00000428   0400A0E1           MOV      R0,R4
   \   0000042C   820100EF           SWI      +386
   \   00000430   021080E2           ADD      R1,R0,#+2
   \   00000434   080095E5           LDR      R0,[R5, #+8]
   \   00000438   010050E1           CMP      R0,R1
   \   0000043C   F0FFFFEA           B        ??edchat_onkey_16
   \                     ??edchat_onkey_12:
   \   00000440   ........           DC32     GetTempName
   \   00000444   ........           DC32     ed_options_handler
   3801            //1: close
   3802          }
   3803          
   3804          static const HEADER_DESC edchat_hdr={0,0,NULL,NULL,NULL,0,LGP_NULL};
   3805          
   3806          void (*old_ed_redraw)(void *data);

   \                                 In segment CODE, align 4, keep-with-next
   3807          void my_ed_redraw(void *data)
   3808          {
   \                     my_ed_redraw:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   3809            void *edchat_gui;
   3810            EDCHAT_STRUCT *ed_struct;
   3811            if (old_ed_redraw) old_ed_redraw(data);
   \   00000004   ........           LDR      R4,??DataTable157  ;; S_ICONS
   \   00000008   041194E5           LDR      R1,[R4, #+260]
   \   0000000C   000051E3           CMP      R1,#+0
   \   00000010   0100000A           BEQ      ??my_ed_redraw_0
   \   00000014   31FF2FE1           BLX      R1
   3812            edchat_gui=FindGUIbyId(edchat_id,NULL);
   \   00000018   0010A0E3           MOV      R1,#+0
   \                     ??my_ed_redraw_0:
   \   0000001C   F40094E5           LDR      R0,[R4, #+244]
   \   00000020   090200EF           SWI      +521
   3813            if (edchat_gui)
   \   00000024   000050E3           CMP      R0,#+0
   \   00000028   3080BD08           POPEQ    {R4,R5,PC}
   3814            {
   3815              ed_struct=EDIT_GetUserPointer(edchat_gui);
   \   0000002C   DF0100EF           SWI      +479
   3816              if (ed_struct)
   \   00000030   000050E3           CMP      R0,#+0
   \   00000034   3080BD08           POPEQ    {R4,R5,PC}
   3817              {
   3818                int icon, width;
   3819          #ifndef	NEWSGOLD
   3820                icon=*(S_ICONS+GetIconIndex(ed_struct->ed_contact));
   3821                ((HEADER_DESC *)&edchat_hdr)->rc.x2=ScreenW()-1-(width=GetImgWidth(icon));
   3822                DrawImg(ScreenW()-1-width,1,icon);
   3823          #else
   3824                icon=*(S_ICONS+GetIconIndex(ed_struct->ed_contact));
   \   00000038   000090E5           LDR      R0,[R0, #+0]
   \   0000003C   ........           BL       GetIconIndex
   \   00000040   004194E7           LDR      R4,[R4, +R0, LSL #+2]
   3825                width=GetImgWidth(icon);
   \   00000044   0400A0E1           MOV      R0,R4
   \   00000048   220000EF           SWI      +34
   \   0000004C   0050A0E1           MOV      R5,R0
   3826                DrawImg(2,((HeaderH()-width)>>1)+YDISP,icon);
   \   00000050   8A8100EF           SWI      +33162
   \   00000054   0420A0E1           MOV      R2,R4
   \   00000058   050040E0           SUB      R0,R0,R5
   \   0000005C   1810A0E3           MOV      R1,#+24
   \   00000060   C01081E0           ADD      R1,R1,R0, ASR #+1
   \   00000064   0200A0E3           MOV      R0,#+2
   \   00000068   230000EF           SWI      +35
   3827          /*      DrawRoundedFrame(ScreenW()-8,YDISP,ScreenW()-1,YDISP+7,0,0,0,
   3828          		       GetPaletteAdrByColorIndex(0),
   3829          		       GetPaletteAdrByColorIndex(EDIT_IsBusy(edchat_gui)?3:4));*/
   3830          #endif
   3831              }
   3832            }
   3833          }
   \   0000006C   3080BDE8           POP      {R4,R5,PC}       ;; return
   3834          

   \                                 In segment CODE, align 4, keep-with-next
   3835          void edchat_ghook(GUI *data, int cmd)
   3836          {
   \                     edchat_ghook:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   3837          
   3838            static SOFTKEY_DESC sk={0x0FFF,0x0000,NULL};
   3839            sk.lgp_id=(int)lgpData[LGP_Menu];
   \   00000004   3C929FE5           LDR      R9,??edchat_ghook_0  ;; ??sk
   3840            static SOFTKEY_DESC sk_cancel={0x0FF0,0x0000,NULL};
   3841            sk_cancel.lgp_id=(int)lgpData[LGP_Close];
   3842            //  static SOFTKEY_DESC sk={0x0018,0x0000,(int)"Menu"};
   3843            int j;
   3844            EDITCONTROL ec;
   3845            EDCHAT_STRUCT *ed_struct=EDIT_GetUserPointer(data);
   3846            PNGTOP_DESC *pltop=PNG_TOP();
   3847            if (cmd==9)
   \   00000008   ........           LDR      R4,??DataTable155  ;; S_ICONS
   \   0000000C   0050A0E1           MOV      R5,R0
   \   00000010   ........           LDR      R0,??DataTable156  ;; lgpData
   \   00000014   2CD04DE2           SUB      SP,SP,#+44
   \   00000018   0180A0E1           MOV      R8,R1
   \   0000001C   181090E5           LDR      R1,[R0, #+24]
   \   00000020   200090E5           LDR      R0,[R0, #+32]
   \   00000024   041089E5           STR      R1,[R9, #+4]
   \   00000028   0C0089E5           STR      R0,[R9, #+12]
   \   0000002C   0500A0E1           MOV      R0,R5
   \   00000030   DF0100EF           SWI      +479
   \   00000034   0060A0E1           MOV      R6,R0
   \   00000038   B98100EF           SWI      +33209
   \   0000003C   00A0A0E1           MOV      R10,R0
   \   00000040   0070A0E3           MOV      R7,#+0
   \   00000044   090058E3           CMP      R8,#+9
   \   00000048   0300001A           BNE      ??edchat_ghook_1
   3848            {
   3849              GBS_DelTimer(&tmr_illumination);          //by BoBa 25.06.07
   \   0000004C   DA0F84E2           ADD      R0,R4,#+872
   \   00000050   8C0100EF           SWI      +396
   3850              pltop->dyn_pltop=NULL;
   \   00000054   08708AE5           STR      R7,[R10, #+8]
   \   00000058   170000EA           B        ??edchat_ghook_2
   3851            }
   3852            if (cmd==2)
   \                     ??edchat_ghook_1:
   \   0000005C   081096E5           LDR      R1,[R6, #+8]
   \   00000060   020058E3           CMP      R8,#+2
   \   00000064   1600001A           BNE      ??edchat_ghook_3
   3853            {
   3854              ed_struct->ed_chatgui=data;
   \   00000068   045086E5           STR      R5,[R6, #+4]
   3855          //    edgui_data=data;
   3856              EDIT_SetFocus(data,ed_struct->ed_answer);
   \   0000006C   0500A0E1           MOV      R0,R5
   \   00000070   9B0100EF           SWI      +411
   3857          
   3858              static void *methods[16];
   3859              void **m=GetDataOfItemByID(data,2);
   \   00000074   0210A0E3           MOV      R1,#+2
   \   00000078   0500A0E1           MOV      R0,R5
   \   0000007C   4F0100EF           SWI      +335
   \   00000080   0050B0E1           MOVS     R5,R0
   3860              if (m)
   3861              {
   3862                if (m[1])
   \   00000084   04009515           LDRNE    R0,[R5, #+4]
   \   00000088   00005013           CMPNE    R0,#+0
   \   0000008C   6B00000A           BEQ      ??edchat_ghook_4
   3863                {
   3864                  memcpy(methods,m[1],sizeof(methods));
   \   00000090   426FA0E3           MOV      R6,#+264
   \   00000094   4020A0E3           MOV      R2,#+64
   \   00000098   0010A0E1           MOV      R1,R0
   \   0000009C   040086E0           ADD      R0,R6,R4
   \   000000A0   1E0100EF           SWI      +286
   3865                  old_ed_redraw=(void (*)(void *))(methods[0]);
   \   000000A4   040096E7           LDR      R0,[R6, +R4]
   \   000000A8   040184E5           STR      R0,[R4, #+260]
   3866                  methods[0]=(void *)my_ed_redraw;
   \   000000AC   98019FE5           LDR      R0,??edchat_ghook_0+0x4  ;; my_ed_redraw
   \   000000B0   040086E7           STR      R0,[R6, +R4]
   3867                  m[1]=methods;
   \   000000B4   040086E0           ADD      R0,R6,R4
   \   000000B8   040085E5           STR      R0,[R5, #+4]
   \                     ??edchat_ghook_2:
   \   000000BC   2CD08DE2           ADD      SP,SP,#+44
   \   000000C0   F087BDE8           POP      {R4-R10,PC}
   3868                }
   3869              }
   3870            }
   3871            if (cmd==3)
   \                     ??edchat_ghook_3:
   \   000000C4   030058E3           CMP      R8,#+3
   \   000000C8   0E00001A           BNE      ??edchat_ghook_5
   3872            {
   3873          //    if (edgui_data==data) edgui_data=NULL;
   3874              if (ed_struct->ed_contact)
   \   000000CC   000096E5           LDR      R0,[R6, #+0]
   \   000000D0   000050E3           CMP      R0,#+0
   \   000000D4   0500000A           BEQ      ??edchat_ghook_6
   3875              {
   3876                ExtractEditControl(data,ed_struct->ed_answer,&ec);
   \   000000D8   0D20A0E1           MOV      R2,SP
   \   000000DC   0500A0E1           MOV      R0,R5
   \   000000E0   690100EF           SWI      +361
   3877                SaveAnswer(ed_struct->ed_contact,ec.pWS);
   \   000000E4   28109DE5           LDR      R1,[SP, #+40]
   \   000000E8   000096E5           LDR      R0,[R6, #+0]
   \   000000EC   ........           BL       SaveAnswer
   3878              }
   3879              RecountMenu(ed_struct->ed_contact, 1);
   \                     ??edchat_ghook_6:
   \   000000F0   000096E5           LDR      R0,[R6, #+0]
   \   000000F4   0110A0E3           MOV      R1,#+1
   \   000000F8   ........           BL       RecountMenu
   3880              mfree(ed_struct);
   \   000000FC   0600A0E1           MOV      R0,R6
   \   00000100   150000EF           SWI      +21
   \   00000104   ECFFFFEA           B        ??edchat_ghook_2
   3881            }
   3882            if (cmd==0x0A)
   \                     ??edchat_ghook_5:
   \   00000108   0A0058E3           CMP      R8,#+10
   \   0000010C   1200001A           BNE      ??edchat_ghook_7
   3883            {
   3884              pltop->dyn_pltop=SmilesImgList;
   \   00000110   38019FE5           LDR      R0,??edchat_ghook_0+0x8  ;; SmilesImgList
   \   00000114   000090E5           LDR      R0,[R0, #+0]
   \   00000118   08008AE5           STR      R0,[R10, #+8]
   3885              DisableIDLETMR();
   \   0000011C   7F0100EF           SWI      +383
   3886              total_unread = total_unread - ed_struct->requested_decrement_total_unread;
   \   00000120   C80094E5           LDR      R0,[R4, #+200]
   \   00000124   0C1096E5           LDR      R1,[R6, #+12]
   \   00000128   010040E0           SUB      R0,R0,R1
   3887              // Понижаем счетчик непрочитанных
   3888              messages_unread =     messages_unread - ed_struct->ed_contact->unreaded;
   \   0000012C   CC1094E5           LDR      R1,[R4, #+204]
   \   00000130   C80084E5           STR      R0,[R4, #+200]
   \   00000134   000096E5           LDR      R0,[R6, #+0]
   \   00000138   C82090E5           LDR      R2,[R0, #+200]
   \   0000013C   021041E0           SUB      R1,R1,R2
   \   00000140   CC1084E5           STR      R1,[R4, #+204]
   3889              // Обнуляем счетчик непрочитанных по данному контакту
   3890              ed_struct->ed_contact->unreaded = 0;
   \   00000144   C87080E5           STR      R7,[R0, #+200]
   3891              ed_struct->ed_contact->isunread=0;
   \   00000148   9C7080E5           STR      R7,[R0, #+156]
   3892              ed_struct->requested_decrement_total_unread=0;
   \   0000014C   0C7086E5           STR      R7,[R6, #+12]
   3893              UpdateCSMname();
   \   00000150   ........           BL       UpdateCSMname
   3894          #ifdef ELKA
   3895              UpdateSLIState(); //Twitch
   \   00000154   ........           BL       UpdateSLIState
   \   00000158   D7FFFFEA           B        ??edchat_ghook_2
   3896          #endif
   3897          /*    if (request_close_edchat)
   3898              {
   3899                request_close_edchat=0;
   3900                GeneralFunc_flag1(edchat_id,1);
   3901                return;
   3902              }*/
   3903            }
   3904            if (cmd==7)
   \                     ??edchat_ghook_7:
   \   0000015C   070058E3           CMP      R8,#+7
   \   00000160   2700001A           BNE      ??edchat_ghook_8
   3905            {
   3906              SetSoftKey(data,&sk,SET_SOFT_KEY_N);
   \   00000164   0020A0E3           MOV      R2,#+0
   \   00000168   0910A0E1           MOV      R1,R9
   \   0000016C   0500A0E1           MOV      R0,R5
   \   00000170   680100EF           SWI      +360
   3907              ExtractEditControl(data,ed_struct->ed_answer,&ec);
   \   00000174   081096E5           LDR      R1,[R6, #+8]
   \   00000178   0D20A0E1           MOV      R2,SP
   \   0000017C   0500A0E1           MOV      R0,R5
   \   00000180   690100EF           SWI      +361
   3908              if (ec.pWS->wsbody[0]==0)
   \   00000184   28009DE5           LDR      R0,[SP, #+40]
   \   00000188   000090E5           LDR      R0,[R0, #+0]
   \   0000018C   B000D0E1           LDRH     R0,[R0, #+0]
   \   00000190   000050E3           CMP      R0,#+0
   \   00000194   0300001A           BNE      ??edchat_ghook_9
   3909                SetSoftKey(data,&sk_cancel,SET_SOFT_KEY_N==0?1:0);
   \   00000198   0120A0E3           MOV      R2,#+1
   \   0000019C   081089E2           ADD      R1,R9,#+8
   \   000001A0   0500A0E1           MOV      R0,R5
   \   000001A4   680100EF           SWI      +360
   3910              if (!EDIT_IsBusy(data))
   \                     ??edchat_ghook_9:
   \   000001A8   0500A0E1           MOV      R0,R5
   \   000001AC   1C0200EF           SWI      +540
   \   000001B0   000050E3           CMP      R0,#+0
   \   000001B4   2100001A           BNE      ??edchat_ghook_4
   3911              {
   3912                time_to_stop_t9=0;
   \   000001B8   007184E5           STR      R7,[R4, #+256]
   3913                if (ed_struct->ed_contact->req_add)
   \   000001BC   000096E5           LDR      R0,[R6, #+0]
   \   000001C0   A01090E5           LDR      R1,[R0, #+160]
   \   000001C4   000051E3           CMP      R1,#+0
   \   000001C8   0500000A           BEQ      ??edchat_ghook_10
   3914                {
   3915          	ed_struct->ed_contact->req_add=0;
   \   000001CC   A07080E5           STR      R7,[R0, #+160]
   3916          	AddMsgToChat(data);
   \   000001D0   0500A0E1           MOV      R0,R5
   \   000001D4   ........           BL       AddMsgToChat
   3917          	RecountMenu(ed_struct->ed_contact, 1);
   \   000001D8   000096E5           LDR      R0,[R6, #+0]
   \   000001DC   0110A0E3           MOV      R1,#+1
   \   000001E0   ........           BL       RecountMenu
   3918                }
   3919                if (ed_struct->ed_contact->req_drawack)
   \                     ??edchat_ghook_10:
   \   000001E4   000096E5           LDR      R0,[R6, #+0]
   \   000001E8   A41090E5           LDR      R1,[R0, #+164]
   \   000001EC   000051E3           CMP      R1,#+0
   \   000001F0   1200000A           BEQ      ??edchat_ghook_4
   3920                {
   3921          	ed_struct->ed_contact->req_drawack=0;
   \   000001F4   A47080E5           STR      R7,[R0, #+164]
   3922          	DrawAck(data);
   \   000001F8   0500A0E1           MOV      R0,R5
   \   000001FC   ........           BL       DrawAck
   \   00000200   ADFFFFEA           B        ??edchat_ghook_2
   3923                }
   3924              }
   3925            }
   3926            if (cmd==0x0C)
   \                     ??edchat_ghook_8:
   \   00000204   0C0058E3           CMP      R8,#+12
   \   00000208   0C00001A           BNE      ??edchat_ghook_4
   3927            {
   3928              j=EDIT_GetFocus(data);
   \   0000020C   0500A0E1           MOV      R0,R5
   \   00000210   820100EF           SWI      +386
   \   00000214   0040A0E1           MOV      R4,R0
   3929              if ((EDIT_GetUnFocus(data)<j)&&(j!=ed_struct->ed_answer))
   \   00000218   0500A0E1           MOV      R0,R5
   \   0000021C   830100EF           SWI      +387
   \   00000220   040050E1           CMP      R0,R4
   \   00000224   050000AA           BGE      ??edchat_ghook_4
   \   00000228   080096E5           LDR      R0,[R6, #+8]
   \   0000022C   000054E1           CMP      R4,R0
   \   00000230   0200000A           BEQ      ??edchat_ghook_4
   3930                EDIT_SetCursorPos(data,1);
   \   00000234   0110A0E3           MOV      R1,#+1
   \   00000238   0500A0E1           MOV      R0,R5
   \   0000023C   D40100EF           SWI      +468
   3931            }
   3932          }
   \                     ??edchat_ghook_4:
   \   00000240   2CD08DE2           ADD      SP,SP,#+44       ;; stack cleaning
   \   00000244   F087BDE8           POP      {R4-R10,PC}      ;; return
   \                     ??edchat_ghook_0:
   \   00000248   ........           DC32     ??sk
   \   0000024C   ........           DC32     my_ed_redraw
   \   00000250   ........           DC32     SmilesImgList

   \                                 In segment DATA_Z, align 4, align-sorted
   \                     S_ICONS:
   \   00000000                      DS8 116
   \                     gipc:
   \   00000074                      DS8 12
   \                     tmr_gipc:
   \   00000080                      DS8 12
   \                     maincsm_id:
   \   0000008C                      DS8 4
   \                     maingui_id:
   \   00000090                      DS8 4
   \                     SENDMSGCOUNT:
   \   00000094                      DS8 4
   \                     ews:
   \   00000098                      DS8 4
   \                     silenthide:
   \   0000009C                      DS8 4
   \                     disautorecconect:
   \   000000A0                      DS8 4
   \                     Is_Vibra_Enabled:
   \   000000A4                      DS8 4
   \                     Is_Sounds_Enabled:
   \   000000A8                      DS8 4
   \                     Is_Show_Offline:
   \   000000AC                      DS8 4
   \                     Is_Show_Groups:
   \   000000B0                      DS8 4
   \                     CurrentStatus:
   \   000000B4                      DS8 4
   \                     CurrentXStatus:
   \   000000B8                      DS8 4
   \                     CurrentPrivateStatus:
   \   000000BC                      DS8 4
   \                     Is_Active_Up:
   \   000000C0                      DS8 4
   \                     vibra_count:
   \   000000C4                      DS8 4
   \                     total_unread:
   \   000000C8                      DS8 4
   \                     messages_unread:
   \   000000CC                      DS8 4
   \                     templates_chars:
   \   000000D0                      DS8 4
   \                     templates_lines:
   \   000000D4                      DS8 4
   \                     TOTALRECEIVED:
   \   000000D8                      DS8 4
   \                     TOTALSENDED:
   \   000000DC                      DS8 4
   \                     ALLTOTALRECEIVED:
   \   000000E0                      DS8 4
   \                     ALLTOTALSENDED:
   \   000000E4                      DS8 4
   \                     cltop:
   \   000000E8                      DS8 4
   \                     GROUP_CACHE:
   \   000000EC                      DS8 4
   \                     contactlist_menu_id:
   \   000000F0                      DS8 4
   \                     edchat_id:
   \   000000F4                      DS8 4
   \   000000F8                      DS8 4
   \                     tenseconds_to_ping:
   \   000000FC                      DS8 4
   \                     time_to_stop_t9:
   \   00000100                      DS8 4
   \                     old_ed_redraw:
   \   00000104                      DS8 4
   \   00000108                      DS8 64
   \                     elf_path:
   \   00000148                      DS8 256
   \                     ContactT9Key:
   \   00000248                      DS8 32
   \                     logmsg:
   \   00000268                      DS8 256
   \                     tmr_illumination:
   \   00000368                      DS8 16
   \                     tmr_vibra:
   \   00000378                      DS8 16
   \                     reconnect_tmr:
   \   00000388                      DS8 16
   \                     tmr_active:
   \   00000398                      DS8 16
   \                     clm_hdr_text:
   \   000003A8                      DS8 48
   \                     clmenu_sk_r:
   \   000003D8                      DS8 16
   \                     hostname:
   \   000003E8                      DS8 128

   \                                 In segment DATA_Z, align 4, align-sorted
   \                     RXbuf:
   \   00000000                      DS8 16392

   \                                 In segment DATA_Z, align 4, align-sorted
   \                     TXbuf:
   \   00000000                      DS8 16392

   \                                 In segment DATA_Z, align 4, align-sorted
   \                     def_clm_hdr_text:
   \   00000000                      DS8 32
   \   00000020                      DS8 32
   \   00000040                      DS8 32
   \   00000060                      DS8 32

   \                                 In segment DATA_Z, align 4, align-sorted
   \                     maincsm_name_body:
   \   00000000                      DS8 280

   \                                 In segment DATA_C, align 4, align-sorted
   3933          
   3934          
   3935          
   3936          static const INPUTDIA_DESC edchat_desc =
   \                     edchat_desc:
   \   00000000   01000000....       DC32 1, edchat_onkey, edchat_ghook, edchat_locret, 0, menu_skt
   \              ............
   \              ........0000
   \              0000........
   \   00000018   000000000000       DC16 0, 0, 0, 0
   \              0000        
   \   00000020   080000006400       DC32 8, 100, 101, 0, 0, 1073741824
   \              000065000000
   \              000000000000
   \              000000000040
   \   00000038   000000000000       DC16 0, 0, 0, 0
   \              0000        
   \   00000040   000000000000       DC32 0H, 0, 2147483647
   \              0000FFFFFF7F
   \   0000004C   2D2D2D2D2D2D       DC8 "-------"
   \              2D00        
   3937          {
   3938            1,
   3939            edchat_onkey,
   3940            edchat_ghook,
   3941            (void *)edchat_locret,
   3942            0,
   3943            &menu_skt,
   3944            {0,NULL,NULL,NULL},
   3945            FONT_SMALL,
   3946            100,
   3947            101,
   3948            0,
   3949            //  0x00000001 - Выровнять по правому краю
   3950            //  0x00000002 - Выровнять по центру
   3951            //  0x00000004 - Инверсия знакомест
   3952            //  0x00000008 - UnderLine
   3953            //  0x00000020 - Не переносить слова
   3954            //  0x00000200 - bold
   3955            0,
   3956            //  0x00000002 - ReadOnly
   3957            //  0x00000004 - Не двигается курсор
   3958            //  0x40000000 - Поменять местами софт-кнопки
   3959            0x40000000
   3960          };
   3961          

   \                                 In segment CODE, align 4, keep-with-next
   3962          void CreateEditChat(CLIST *t)
   3963          {
   \                     CreateEditChat:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   3964            extern const int FIRST_LETTER;
   3965            void *ma=malloc_adr();
   3966            void *eq;
   3967            EDITCONTROL ec;
   3968            EDITC_OPTIONS ec_options;
   3969            int color, font, type;
   3970            int zc;
   3971          
   3972            LOGQ *lp;
   3973            int edchat_toitem;
   3974          //  edcontact=t;
   3975          
   3976            *((int *)(&edchat_hdr.lgp_id))=(int)t->name;
   \   00000004   9C649FE5           LDR      R6,??CreateEditChat_0  ;; edchat_desc
   3977          //  *((int **)(&edchat_hdr.icon))=(int *)S_ICONS+GetIconIndex(t);
   3978            *((int **)(&edchat_hdr.icon))=(int *)S_ICONS+IS_NULLICON;
   \   00000008   ........           LDR      R7,??DataTable157  ;; S_ICONS
   \   0000000C   4CD04DE2           SUB      SP,SP,#+76
   \   00000010   0040A0E1           MOV      R4,R0
   \   00000014   148000EF           SWI      +32788
   \   00000018   0050A0E1           MOV      R5,R0
   \   0000001C   140084E2           ADD      R0,R4,#+20
   \   00000020   440086E5           STR      R0,[R6, #+68]
   \   00000024   440087E2           ADD      R0,R7,#+68
   \   00000028   400086E5           STR      R0,[R6, #+64]
   3979          
   3980            eq=AllocEQueue(ma,mfree_adr());
   \   0000002C   158000EF           SWI      +32789
   \   00000030   0010A0E1           MOV      R1,R0
   \   00000034   0500A0E1           MOV      R0,R5
   \   00000038   630100EF           SWI      +355
   3981          
   3982          
   3983            lp=t->log;
   \   0000003C   A89094E5           LDR      R9,[R4, #+168]
   \   00000040   0080A0E1           MOV      R8,R0
   \   00000044   000059E3           CMP      R9,#+0
   \   00000048   9500000A           BEQ      ??CreateEditChat_1
   3984          
   3985            while(lp)
   3986            {
   3987              font = ED_H_FONT_SIZE;
   3988              if ((zc=lp->acked&3))
   \                     ??CreateEditChat_2:
   \   0000004C   ........           LDR      R2,??DataTable158  ;; ED_X_FONT_SIZE
   \   00000050   ........           LDR      R0,??DataTable159  ;; ED_H_FONT_SIZE
   \   00000054   002092E5           LDR      R2,[R2, #+0]
   \   00000058   00A090E5           LDR      R10,[R0, #+0]
   \   0000005C   040099E5           LDR      R0,[R9, #+4]
   \   00000060   ........           LDR      R1,??DataTable160  ;; I_COLOR
   \   00000064   1C208DE5           STR      R2,[SP, #+28]
   \   00000068   ........           LDR      R2,??DataTable161  ;; X_COLOR
   \   0000006C   030010E2           ANDS     R0,R0,#0x3
   \   00000070   002092E5           LDR      R2,[R2, #+0]
   \   00000074   14208DE5           STR      R2,[SP, #+20]
   \   00000078   ........           LDR      R2,??DataTable162  ;; O_ED_X_FONT_SIZE
   \   0000007C   002092E5           LDR      R2,[R2, #+0]
   \   00000080   18208DE5           STR      R2,[SP, #+24]
   \   00000084   ........           LDR      R2,??DataTable163  ;; O_X_COLOR
   \   00000088   002092E5           LDR      R2,[R2, #+0]
   \   0000008C   10208DE5           STR      R2,[SP, #+16]
   \   00000090   00B091E5           LDR      R11,[R1, #+0]
   \   00000094   0300000A           BEQ      ??CreateEditChat_3
   3989              {
   3990                if (zc==1)
   \   00000098   010050E3           CMP      R0,#+1
   \   0000009C   1E00001A           BNE      ??CreateEditChat_4
   3991          	color=ACK_COLOR; //Зеленый
   \   000000A0   ........           LDR      R0,??DataTable164  ;; ACK_COLOR
   \   000000A4   1B0000EA           B        ??CreateEditChat_5
   3992                else
   3993          	color=I_COLOR;
   3994              }
   3995              else
   3996              {
   3997                if (lp->ID==0xFFFFFFFF)
   \                     ??CreateEditChat_3:
   \   000000A8   080099E5           LDR      R0,[R9, #+8]
   \   000000AC   010070E3           CMN      R0,#+1
   \   000000B0   1700001A           BNE      ??CreateEditChat_6
   3998                {
   3999                  type = lp->type&0x0F;
   \   000000B4   0C0099E5           LDR      R0,[R9, #+12]
   \   000000B8   0F1000E2           AND      R1,R0,#0xF
   4000                  if(lp->type&0x10)
   \   000000BC   100010E3           TST      R0,#0x10
   \   000000C0   0B00000A           BEQ      ??CreateEditChat_7
   4001                  {
   4002                    color = (type==1)?O_I_COLOR:((type==3)?O_X_COLOR:O_TO_COLOR);
   \   000000C4   010051E3           CMP      R1,#+1
   \   000000C8   ........           LDREQ    R0,??DataTable165  ;; O_I_COLOR
   \   000000CC   0400000A           BEQ      ??CreateEditChat_8
   \   000000D0   030051E3           CMP      R1,#+3
   \   000000D4   18A09D05           LDREQ    R10,[SP, #+24]
   \   000000D8   02B0A001           MOVEQ    R11,R2
   \   000000DC   0E00000A           BEQ      ??CreateEditChat_4
   \   000000E0   ........           LDR      R0,??DataTable166  ;; O_TO_COLOR
   \                     ??CreateEditChat_8:
   \   000000E4   00B090E5           LDR      R11,[R0, #+0]
   \   000000E8   ........           LDR      R0,??DataTable167  ;; O_ED_H_FONT_SIZE
   \   000000EC   00A090E5           LDR      R10,[R0, #+0]
   \   000000F0   090000EA           B        ??CreateEditChat_4
   4003                    font = (type==3)?O_ED_X_FONT_SIZE:O_ED_H_FONT_SIZE;
   4004                  }
   4005                  else
   4006                  {
   4007                    color = (type==1)?I_COLOR:((type==3)?X_COLOR:TO_COLOR);
   \                     ??CreateEditChat_7:
   \   000000F4   010051E3           CMP      R1,#+1
   \   000000F8   0700000A           BEQ      ??CreateEditChat_4
   \   000000FC   030051E3           CMP      R1,#+3
   \   00000100   14B09D05           LDREQ    R11,[SP, #+20]
   \   00000104   1CA09D05           LDREQ    R10,[SP, #+28]
   \   00000108   0300000A           BEQ      ??CreateEditChat_4
   \   0000010C   ........           LDR      R0,??DataTable168  ;; TO_COLOR
   \   00000110   000000EA           B        ??CreateEditChat_5
   4008                    font = (type==3)?ED_X_FONT_SIZE:ED_H_FONT_SIZE;
   4009                  }
   4010                }
   4011                else
   4012          	color=UNACK_COLOR; //Серый
   \                     ??CreateEditChat_6:
   \   00000114   ........           LDR      R0,??DataTable169  ;; UNACK_COLOR
   \                     ??CreateEditChat_5:
   \   00000118   00B090E5           LDR      R11,[R0, #+0]
   4013              }
   4014              PrepareEditControl(&ec);
   \                     ??CreateEditChat_4:
   \   0000011C   20008DE2           ADD      R0,SP,#+32
   \   00000120   640100EF           SWI      +356
   4015              if ((lp->type&0x0F)!=3)
   \   00000124   0C0099E5           LDR      R0,[R9, #+12]
   \   00000128   0F0000E2           AND      R0,R0,#0xF
   \   0000012C   030050E3           CMP      R0,#+3
   \   00000130   0800000A           BEQ      ??CreateEditChat_9
   4016              {
   4017                ascii2ws(ews,lp->hdr);
   \   00000134   980097E5           LDR      R0,[R7, #+152]
   \   00000138   101089E2           ADD      R1,R9,#+16
   \   0000013C   ........           _BLF     ascii2ws,??ascii2ws??rA
   4018                ConstructEditControl(&ec,ECT_HEADER,ECF_APPEND_EOL,ews,ews->wsbody[0]);
   \   00000140   983097E5           LDR      R3,[R7, #+152]
   \   00000144   4020A0E3           MOV      R2,#+64
   \   00000148   000093E5           LDR      R0,[R3, #+0]
   \   0000014C   B000D0E1           LDRH     R0,[R0, #+0]
   \   00000150   01002DE9           PUSH     {R0}
   \   00000154   030000EA           B        ??CreateEditChat_10
   4019              }
   4020              else
   4021                ConstructEditControl(&ec,ECT_HEADER,ECF_DELSTR,ews,0);
   \                     ??CreateEditChat_9:
   \   00000158   0000A0E3           MOV      R0,#+0
   \   0000015C   01002DE9           PUSH     {R0}
   \   00000160   983097E5           LDR      R3,[R7, #+152]
   \   00000164   2020A0E3           MOV      R2,#+32
   \                     ??CreateEditChat_10:
   \   00000168   0110A0E3           MOV      R1,#+1
   \   0000016C   24008DE2           ADD      R0,SP,#+36
   \   00000170   650100EF           SWI      +357
   \   00000174   04D08DE2           ADD      SP,SP,#+4
   4022              PrepareEditCOptions(&ec_options);
   \   00000178   0D00A0E1           MOV      R0,SP
   \   0000017C   C80100EF           SWI      +456
   4023              SetPenColorToEditCOptions(&ec_options,color);
   \   00000180   0B10A0E1           MOV      R1,R11
   \   00000184   0D00A0E1           MOV      R0,SP
   \   00000188   CC0100EF           SWI      +460
   4024              SetFontToEditCOptions(&ec_options,font);
   \   0000018C   0A10A0E1           MOV      R1,R10
   \   00000190   0D00A0E1           MOV      R0,SP
   \   00000194   CA0100EF           SWI      +458
   4025              CopyOptionsToEditControl(&ec,&ec_options);
   \   00000198   0D10A0E1           MOV      R1,SP
   \   0000019C   20008DE2           ADD      R0,SP,#+32
   \   000001A0   CE0100EF           SWI      +462
   4026              AddEditControlToEditQend(eq,&ec,ma);
   \   000001A4   0520A0E1           MOV      R2,R5
   \   000001A8   20108DE2           ADD      R1,SP,#+32
   \   000001AC   0800A0E1           MOV      R0,R8
   \   000001B0   660100EF           SWI      +358
   4027              if ((lp->type&0x0F)!=3)
   \   000001B4   0C0099E5           LDR      R0,[R9, #+12]
   \   000001B8   0F1000E2           AND      R1,R0,#0xF
   \   000001BC   030051E3           CMP      R1,#+3
   \   000001C0   0300000A           BEQ      ??CreateEditChat_11
   4028              {
   4029                ParseAnswer(ews,lp->text);
   \   000001C4   980097E5           LDR      R0,[R7, #+152]
   \   000001C8   601089E2           ADD      R1,R9,#+96
   \   000001CC   ........           BL       ParseAnswer
   \   000001D0   050000EA           B        ??CreateEditChat_12
   4030              }
   4031              else
   4032              {
   4033                ParseXStatusText(ews,lp->text,(lp->type&0x10)?O_X_COLOR:X_COLOR);
   \                     ??CreateEditChat_11:
   \   000001D4   100010E3           TST      R0,#0x10
   \   000001D8   10209D15           LDRNE    R2,[SP, #+16]
   \   000001DC   980097E5           LDR      R0,[R7, #+152]
   \   000001E0   14209D05           LDREQ    R2,[SP, #+20]
   \   000001E4   601089E2           ADD      R1,R9,#+96
   \   000001E8   ........           BL       ParseXStatusText
   4034              }
   4035              PrepareEditControl(&ec);
   \                     ??CreateEditChat_12:
   \   000001EC   20008DE2           ADD      R0,SP,#+32
   \   000001F0   640100EF           SWI      +356
   4036              ConstructEditControl(&ec,
   4037                                   ECT_NORMAL_TEXT,
   4038                                   ews->wsbody[0] ? ECF_APPEND_EOL|ECF_DISABLE_T9 : ECF_DELSTR,
   4039                                   ews,ews->wsbody[0]);
   \   000001F4   983097E5           LDR      R3,[R7, #+152]
   \   000001F8   000093E5           LDR      R0,[R3, #+0]
   \   000001FC   B010D0E1           LDRH     R1,[R0, #+0]
   \   00000200   000051E3           CMP      R1,#+0
   \   00000204   0100A0E1           MOV      R0,R1
   \   00000208   01002DE9           PUSH     {R0}
   \   0000020C   812DA013           MOVNE    R2,#+8256
   \   00000210   2020A003           MOVEQ    R2,#+32
   \   00000214   0310A0E3           MOV      R1,#+3
   \   00000218   24008DE2           ADD      R0,SP,#+36
   \   0000021C   650100EF           SWI      +357
   4040              PrepareEditCOptions(&ec_options);
   \   00000220   04008DE2           ADD      R0,SP,#+4
   \   00000224   C80100EF           SWI      +456
   4041          //#ifdef M75
   4042              if ((lp->type&0x0F)!=3)
   \   00000228   0C0099E5           LDR      R0,[R9, #+12]
   \   0000022C   04D08DE2           ADD      SP,SP,#+4
   \   00000230   0F1000E2           AND      R1,R0,#0xF
   \   00000234   030051E3           CMP      R1,#+3
   \   00000238   0400000A           BEQ      ??CreateEditChat_13
   4043              {
   4044                SetFontToEditCOptions(&ec_options,(lp->type&0x10)?O_ED_FONT_SIZE:ED_FONT_SIZE);
   \   0000023C   100010E3           TST      R0,#0x10
   \   00000240   ........           LDRNE    R0,??DataTable170  ;; O_ED_FONT_SIZE
   \   00000244   ........           LDREQ    R0,??DataTable172  ;; ED_FONT_SIZE
   \   00000248   001090E5           LDR      R1,[R0, #+0]
   \   0000024C   080000EA           B        ??CreateEditChat_14
   4045              }
   4046              else
   4047              {
   4048                SetPenColorToEditCOptions(&ec_options,(lp->type&0x10)?O_X_COLOR:X_COLOR);
   \                     ??CreateEditChat_13:
   \   00000250   100010E3           TST      R0,#0x10
   \   00000254   10109D15           LDRNE    R1,[SP, #+16]
   \   00000258   0D00A0E1           MOV      R0,SP
   \   0000025C   14109D05           LDREQ    R1,[SP, #+20]
   \   00000260   CC0100EF           SWI      +460
   4049                SetFontToEditCOptions(&ec_options,(lp->type&0x10)?O_ED_X_FONT_SIZE:ED_X_FONT_SIZE);
   \   00000264   0C0099E5           LDR      R0,[R9, #+12]
   \   00000268   100010E3           TST      R0,#0x10
   \   0000026C   18109D15           LDRNE    R1,[SP, #+24]
   \   00000270   1C109D05           LDREQ    R1,[SP, #+28]
   \                     ??CreateEditChat_14:
   \   00000274   0D00A0E1           MOV      R0,SP
   \   00000278   CA0100EF           SWI      +458
   4050              }
   4051          //#else
   4052          //    SetFontToEditCOptions(&ec_options,(lp->type&0x10)?O_ED_FONT_SIZE:ED_FONT_SIZE);
   4053          //#endif
   4054              CopyOptionsToEditControl(&ec,&ec_options);
   \   0000027C   0D10A0E1           MOV      R1,SP
   \   00000280   20008DE2           ADD      R0,SP,#+32
   \   00000284   CE0100EF           SWI      +462
   4055              AddEditControlToEditQend(eq,&ec,ma);
   \   00000288   0520A0E1           MOV      R2,R5
   \   0000028C   20108DE2           ADD      R1,SP,#+32
   \   00000290   0800A0E1           MOV      R0,R8
   \   00000294   660100EF           SWI      +358
   4056              lp=lp->next;
   \   00000298   009099E5           LDR      R9,[R9, #+0]
   4057            }
   \   0000029C   000059E3           CMP      R9,#+0
   \   000002A0   69FFFF1A           BNE      ??CreateEditChat_2
   4058            if (t->isunread)
   \                     ??CreateEditChat_1:
   \   000002A4   9C0094E5           LDR      R0,[R4, #+156]
   \   000002A8   000050E3           CMP      R0,#+0
   \   000002AC   0300000A           BEQ      ??CreateEditChat_15
   4059            {
   4060              total_unread = total_unread - t->unreaded;
   \   000002B0   C80097E5           LDR      R0,[R7, #+200]
   \   000002B4   C81094E5           LDR      R1,[R4, #+200]
   \   000002B8   010040E0           SUB      R0,R0,R1
   \   000002BC   C80087E5           STR      R0,[R7, #+200]
   4061            }
   4062            messages_unread = messages_unread - t->unreaded;
   \                     ??CreateEditChat_15:
   \   000002C0   CC0097E5           LDR      R0,[R7, #+204]
   \   000002C4   C81094E5           LDR      R1,[R4, #+200]
   4063            t->unreaded = 0;
   \   000002C8   0090A0E3           MOV      R9,#+0
   \   000002CC   010040E0           SUB      R0,R0,R1
   \   000002D0   CC0087E5           STR      R0,[R7, #+204]
   \   000002D4   C89084E5           STR      R9,[R4, #+200]
   4064            t->isunread=0;
   \   000002D8   9C9084E5           STR      R9,[R4, #+156]
   4065            UpdateCSMname();
   \   000002DC   ........           BL       UpdateCSMname
   4066          #ifdef ELKA
   4067            UpdateSLIState(); //Twitch
   \   000002E0   ........           BL       UpdateSLIState
   4068          #endif
   4069            ChangeContactPos(t);
   \   000002E4   0400A0E1           MOV      R0,R4
   \   000002E8   ........           _BLF     ChangeContactPos,??ChangeContactPos??rA
   4070            wsprintf(ews, "-------");
   \   000002EC   980097E5           LDR      R0,[R7, #+152]
   \   000002F0   4C1086E2           ADD      R1,R6,#+76
   \   000002F4   240100EF           SWI      +292
   4071            PrepareEditControl(&ec);
   \   000002F8   20008DE2           ADD      R0,SP,#+32
   \   000002FC   640100EF           SWI      +356
   4072            ConstructEditControl(&ec,ECT_HEADER,ECF_APPEND_EOL,ews,ews->wsbody[0]);
   \   00000300   983097E5           LDR      R3,[R7, #+152]
   \   00000304   4020A0E3           MOV      R2,#+64
   \   00000308   000093E5           LDR      R0,[R3, #+0]
   \   0000030C   0110A0E3           MOV      R1,#+1
   \   00000310   B000D0E1           LDRH     R0,[R0, #+0]
   \   00000314   01002DE9           PUSH     {R0}
   \   00000318   24008DE2           ADD      R0,SP,#+36
   \   0000031C   650100EF           SWI      +357
   4073            PrepareEditCOptions(&ec_options);
   \   00000320   04008DE2           ADD      R0,SP,#+4
   \   00000324   C80100EF           SWI      +456
   4074            SetFontToEditCOptions(&ec_options,ED_FONT_SIZE);
   \   00000328   ........           LDR      R0,??DataTable172  ;; ED_FONT_SIZE
   \   0000032C   00A090E5           LDR      R10,[R0, #+0]
   \   00000330   04008DE2           ADD      R0,SP,#+4
   \   00000334   0A10A0E1           MOV      R1,R10
   \   00000338   CA0100EF           SWI      +458
   4075            CopyOptionsToEditControl(&ec,&ec_options);
   \   0000033C   04108DE2           ADD      R1,SP,#+4
   \   00000340   24008DE2           ADD      R0,SP,#+36
   \   00000344   CE0100EF           SWI      +462
   4076            AddEditControlToEditQend(eq,&ec,ma);
   \   00000348   0520A0E1           MOV      R2,R5
   \   0000034C   24108DE2           ADD      R1,SP,#+36
   \   00000350   0800A0E1           MOV      R0,R8
   \   00000354   660100EF           SWI      +358
   4077          
   4078            if (t->answer) ParseAnswer(ews,t->answer);
   \   00000358   AC1094E5           LDR      R1,[R4, #+172]
   \   0000035C   04D08DE2           ADD      SP,SP,#+4
   \   00000360   000051E3           CMP      R1,#+0
   \   00000364   0200000A           BEQ      ??CreateEditChat_16
   \   00000368   980097E5           LDR      R0,[R7, #+152]
   \   0000036C   ........           BL       ParseAnswer
   \   00000370   020000EA           B        ??CreateEditChat_17
   4079            else  CutWSTR(ews,0);
   \                     ??CreateEditChat_16:
   \   00000374   980097E5           LDR      R0,[R7, #+152]
   \   00000378   0010A0E3           MOV      R1,#+0
   \   0000037C   260100EF           SWI      +294
   4080            PrepareEditControl(&ec);
   \                     ??CreateEditChat_17:
   \   00000380   20008DE2           ADD      R0,SP,#+32
   \   00000384   640100EF           SWI      +356
   4081            ConstructEditControl(&ec,3,(FIRST_LETTER)?ECF_DEFAULT_BIG_LETTER:0,ews,7168);
   \   00000388   1C019FE5           LDR      R0,??CreateEditChat_0+0x4  ;; FIRST_LETTER
   \   0000038C   0310A0E3           MOV      R1,#+3
   \   00000390   000090E5           LDR      R0,[R0, #+0]
   \   00000394   000050E3           CMP      R0,#+0
   \   00000398   700DA0E3           MOV      R0,#+7168
   \   0000039C   01002DE9           PUSH     {R0}
   \   000003A0   983097E5           LDR      R3,[R7, #+152]
   \   000003A4   402DA013           MOVNE    R2,#+4096
   \   000003A8   0020A003           MOVEQ    R2,#+0
   \   000003AC   24008DE2           ADD      R0,SP,#+36
   \   000003B0   650100EF           SWI      +357
   4082          
   4083            PrepareEditCOptions(&ec_options);
   \   000003B4   04008DE2           ADD      R0,SP,#+4
   \   000003B8   C80100EF           SWI      +456
   4084            SetFontToEditCOptions(&ec_options,ED_FONT_SIZE);
   \   000003BC   0A10A0E1           MOV      R1,R10
   \   000003C0   04008DE2           ADD      R0,SP,#+4
   \   000003C4   CA0100EF           SWI      +458
   4085            CopyOptionsToEditControl(&ec,&ec_options);
   \   000003C8   04108DE2           ADD      R1,SP,#+4
   \   000003CC   24008DE2           ADD      R0,SP,#+36
   \   000003D0   CE0100EF           SWI      +462
   4086            edchat_toitem=AddEditControlToEditQend(eq,&ec,ma);
   \   000003D4   0520A0E1           MOV      R2,R5
   \   000003D8   24108DE2           ADD      R1,SP,#+36
   \   000003DC   0800A0E1           MOV      R0,R8
   \   000003E0   660100EF           SWI      +358
   \   000003E4   00A0A0E1           MOV      R10,R0
   4087          
   4088            if (t->req_xtext)
   \   000003E8   C00094E5           LDR      R0,[R4, #+192]
   \   000003EC   04D08DE2           ADD      SP,SP,#+4
   \   000003F0   000050E3           CMP      R0,#+0
   \   000003F4   0400000A           BEQ      ??CreateEditChat_18
   4089            {
   4090              FreeXText(t);
   \   000003F8   0400A0E1           MOV      R0,R4
   \   000003FC   ........           _BLF     FreeXText,??FreeXText??rA
   4091              t->req_xtext=0;
   \   00000400   C09084E5           STR      R9,[R4, #+192]
   4092              RequestXText(t->uin);
   \   00000404   0C0094E5           LDR      R0,[R4, #+12]
   \   00000408   ........           BL       RequestXText
   4093            }
   4094          
   4095            EDCHAT_STRUCT *ed_struct=malloc(sizeof(EDCHAT_STRUCT));
   \                     ??CreateEditChat_18:
   \   0000040C   1400A0E3           MOV      R0,#+20
   \   00000410   140000EF           SWI      +20
   \   00000414   0050A0E1           MOV      R5,R0
   4096            ed_struct->ed_contact=t;
   \   00000418   004085E5           STR      R4,[R5, #+0]
   4097            ed_struct->ed_answer=edchat_toitem;
   \   0000041C   08A085E5           STR      R10,[R5, #+8]
   4098            ed_struct->requested_decrement_total_unread=0;
   \   00000420   0C9085E5           STR      R9,[R5, #+12]
   4099          
   4100            t->req_add=0;
   \   00000424   A09084E5           STR      R9,[R4, #+160]
   4101            t->last_log=NULL;
   \   00000428   B09084E5           STR      R9,[R4, #+176]
   4102          
   4103            //  int scr_w=ScreenW();
   4104            //  int scr_h=ScreenH();
   4105            //  int head_h=HeaderH();
   4106          
   4107            patch_header(&edchat_hdr);
   \   0000042C   B893C6E1           STRH     R9,[R6, #+56]
   \   00000430   1800A0E3           MOV      R0,#+24
   \   00000434   BA03C6E1           STRH     R0,[R6, #+58]
   \   00000438   888100EF           SWI      +33160
   \   0000043C   010040E2           SUB      R0,R0,#+1
   \   00000440   BC03C6E1           STRH     R0,[R6, #+60]
   \   00000444   8A8100EF           SWI      +33162
   \   00000448   170080E2           ADD      R0,R0,#+23
   \   0000044C   BE03C6E1           STRH     R0,[R6, #+62]
   4108            patch_input(&edchat_desc);
   \   00000450   B891C6E1           STRH     R9,[R6, #+24]
   \   00000454   8A8100EF           SWI      +33162
   \   00000458   190080E2           ADD      R0,R0,#+25
   \   0000045C   BA01C6E1           STRH     R0,[R6, #+26]
   \   00000460   888100EF           SWI      +33160
   \   00000464   010040E2           SUB      R0,R0,#+1
   \   00000468   BC01C6E1           STRH     R0,[R6, #+28]
   \   0000046C   898100EF           SWI      +33161
   \   00000470   0040A0E1           MOV      R4,R0
   \   00000474   8B8100EF           SWI      +33163
   \   00000478   000044E0           SUB      R0,R4,R0
   \   0000047C   010040E2           SUB      R0,R0,#+1
   \   00000480   BE01C6E1           STRH     R0,[R6, #+30]
   4109            //  edchat_desc.font=ED_FONT_SIZE;
   4110          
   4111          
   4112            edchat_id=CreateInputTextDialog(&edchat_desc,&edchat_hdr,eq,1,ed_struct);
   \   00000484   20002DE9           PUSH     {R5}
   \   00000488   0130A0E3           MOV      R3,#+1
   \   0000048C   0820A0E1           MOV      R2,R8
   \   00000490   381086E2           ADD      R1,R6,#+56
   \   00000494   0600A0E1           MOV      R0,R6
   \   00000498   670100EF           SWI      +359
   \   0000049C   F40087E5           STR      R0,[R7, #+244]
   4113          }
   \   000004A0   50D08DE2           ADD      SP,SP,#+80
   \   000004A4   F08FBDE8           POP      {R4-R11,PC}      ;; return
   \                     ??CreateEditChat_0:
   \   000004A8   ........           DC32     edchat_desc
   \   000004AC   ........           DC32     FIRST_LETTER
   4114          
   4115          //-----------------------------------------------------------------------------
   4116          #define EC_MNU_MAX 9
   4117          

   \                                 In segment CODE, align 4, keep-with-next
   4118          void Quote(GUI *data)
   4119          {
   \                     Quote:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   84D04DE2           SUB      SP,SP,#+132
   4120            int q_n;
   4121            EDITCONTROL ec, ec_hdr;
   4122            EDITCONTROL ec_ed;
   4123            WSHDR *ed_ws;
   4124            WSHDR *ws;
   4125          
   4126            EDCHAT_STRUCT *ed_struct;
   4127            ed_struct=MenuGetUserPointer(data);
   \   00000008   E00100EF           SWI      +480
   \   0000000C   0040A0E1           MOV      R4,R0
   4128          
   4129            q_n=EDIT_GetFocus(ed_struct->ed_chatgui);
   \   00000010   040094E5           LDR      R0,[R4, #+4]
   \   00000014   820100EF           SWI      +386
   \   00000018   0050A0E1           MOV      R5,R0
   4130            ExtractEditControl(ed_struct->ed_chatgui,q_n,&ec);
   \   0000001C   040094E5           LDR      R0,[R4, #+4]
   \   00000020   2C208DE2           ADD      R2,SP,#+44
   \   00000024   0510A0E1           MOV      R1,R5
   \   00000028   690100EF           SWI      +361
   4131            ExtractEditControl(ed_struct->ed_chatgui,q_n-1,&ec_hdr);
   \   0000002C   040094E5           LDR      R0,[R4, #+4]
   \   00000030   58208DE2           ADD      R2,SP,#+88
   \   00000034   011045E2           SUB      R1,R5,#+1
   \   00000038   690100EF           SWI      +361
   4132            ExtractEditControl(ed_struct->ed_chatgui,ed_struct->ed_answer,&ec_ed);
   \   0000003C   081094E5           LDR      R1,[R4, #+8]
   \   00000040   040094E5           LDR      R0,[R4, #+4]
   \   00000044   0D20A0E1           MOV      R2,SP
   \   00000048   690100EF           SWI      +361
   4133          
   4134            ed_ws=AllocWS((ec_ed.maxlen<<1) + 1);
   \   0000004C   F801DDE1           LDRSH    R0,[SP, #+24]
   \   00000050   0110A0E3           MOV      R1,#+1
   \   00000054   800081E0           ADD      R0,R1,R0, LSL #+1
   \   00000058   250100EF           SWI      +293
   \   0000005C   0050A0E1           MOV      R5,R0
   4135            if(wstrlen(ec_hdr.pWS))
   \   00000060   80009DE5           LDR      R0,[SP, #+128]
   \   00000064   230100EF           SWI      +291
   \   00000068   000050E3           CMP      R0,#+0
   \   0000006C   0600000A           BEQ      ??Quote_0
   4136            {
   4137              wstrcpy(ed_ws,ec_hdr.pWS);
   \   00000070   80109DE5           LDR      R1,[SP, #+128]
   \   00000074   0500A0E1           MOV      R0,R5
   \   00000078   1F0100EF           SWI      +287
   4138              wsAppendChar(ed_ws,'\r');
   \   0000007C   0D10A0E3           MOV      R1,#+13
   \   00000080   0500A0E1           MOV      R0,R5
   \   00000084   1C0000EF           SWI      +28
   \   00000088   020000EA           B        ??Quote_1
   4139            }
   4140            else
   4141              CutWSTR(ed_ws,0);
   \                     ??Quote_0:
   \   0000008C   0010A0E3           MOV      R1,#+0
   \   00000090   0500A0E1           MOV      R0,R5
   \   00000094   260100EF           SWI      +294
   4142            if (EDIT_IsMarkModeActive(ed_struct->ed_chatgui))
   \                     ??Quote_1:
   \   00000098   040094E5           LDR      R0,[R4, #+4]
   \   0000009C   D80100EF           SWI      +472
   \   000000A0   000050E3           CMP      R0,#+0
   \   000000A4   0300000A           BEQ      ??Quote_2
   4143            {
   4144              EDIT_GetMarkedText(ed_struct->ed_chatgui,ed_ws);
   \   000000A8   040094E5           LDR      R0,[R4, #+4]
   \   000000AC   0510A0E1           MOV      R1,R5
   \   000000B0   D90100EF           SWI      +473
   \   000000B4   020000EA           B        ??Quote_3
   4145            }
   4146            else
   4147            {
   4148              wstrcat(ed_ws,ec.pWS);
   \                     ??Quote_2:
   \   000000B8   54109DE5           LDR      R1,[SP, #+84]
   \   000000BC   0500A0E1           MOV      R0,R5
   \   000000C0   210100EF           SWI      +289
   4149            }
   4150            int ed_pos=0;
   \                     ??Quote_3:
   \   000000C4   0000A0E3           MOV      R0,#+0
   \   000000C8   FF60A0E3           MOV      R6,#+255
   \   000000CC   FF6C86E3           ORR      R6,R6,#0xFF00
   4151            do
   4152            {
   4153              ed_pos++;
   \                     ??Quote_4:
   \   000000D0   017080E2           ADD      R7,R0,#+1
   4154              wsInsertChar(ed_ws,'>',ed_pos++);
   \   000000D4   0720A0E1           MOV      R2,R7
   \   000000D8   3E10A0E3           MOV      R1,#+62
   \   000000DC   0500A0E1           MOV      R0,R5
   \   000000E0   1D0000EF           SWI      +29
   \   000000E4   017087E2           ADD      R7,R7,#+1
   4155              wsInsertChar(ed_ws,' ',ed_pos);
   \   000000E8   0720A0E1           MOV      R2,R7
   \   000000EC   2010A0E3           MOV      R1,#+32
   \   000000F0   0500A0E1           MOV      R0,R5
   \   000000F4   1D0000EF           SWI      +29
   4156            }
   4157            while((ed_pos=wstrchr(ed_ws,ed_pos,'\r'))!=0xFFFF);
   \   000000F8   0D20A0E3           MOV      R2,#+13
   \   000000FC   0710A0E1           MOV      R1,R7
   \   00000100   0500A0E1           MOV      R0,R5
   \   00000104   DC0100EF           SWI      +476
   \   00000108   060050E1           CMP      R0,R6
   \   0000010C   EFFFFF1A           BNE      ??Quote_4
   4158            wsAppendChar(ed_ws,'\n');
   \   00000110   0A10A0E3           MOV      R1,#+10
   \   00000114   0500A0E1           MOV      R0,R5
   \   00000118   1C0000EF           SWI      +28
   4159          
   4160            wsAppendChar(ed_ws,'\r');
   \   0000011C   0D10A0E3           MOV      R1,#+13
   \   00000120   0500A0E1           MOV      R0,R5
   \   00000124   1C0000EF           SWI      +28
   4161            ws=AllocWS(ec_ed.pWS->wsbody[0]+ed_ws->wsbody[0]);
   \   00000128   28009DE5           LDR      R0,[SP, #+40]
   \   0000012C   001095E5           LDR      R1,[R5, #+0]
   \   00000130   000090E5           LDR      R0,[R0, #+0]
   \   00000134   B010D1E1           LDRH     R1,[R1, #+0]
   \   00000138   B000D0E1           LDRH     R0,[R0, #+0]
   \   0000013C   000081E0           ADD      R0,R1,R0
   \   00000140   250100EF           SWI      +293
   4162            wstrcpy(ws,ec_ed.pWS);
   \   00000144   28109DE5           LDR      R1,[SP, #+40]
   \   00000148   0060A0E1           MOV      R6,R0
   \   0000014C   1F0100EF           SWI      +287
   4163            wstrcat(ws,ed_ws);
   \   00000150   0510A0E1           MOV      R1,R5
   \   00000154   0600A0E1           MOV      R0,R6
   \   00000158   210100EF           SWI      +289
   4164            FreeWS(ed_ws);
   \   0000015C   0500A0E1           MOV      R0,R5
   \   00000160   290100EF           SWI      +297
   4165            CutWSTR(ws,ec_ed.maxlen);
   \   00000164   F811DDE1           LDRSH    R1,[SP, #+24]
   \   00000168   0600A0E1           MOV      R0,R6
   \   0000016C   260100EF           SWI      +294
   4166            EDIT_SetFocus(ed_struct->ed_chatgui,ed_struct->ed_answer);
   \   00000170   081094E5           LDR      R1,[R4, #+8]
   \   00000174   040094E5           LDR      R0,[R4, #+4]
   \   00000178   9B0100EF           SWI      +411
   4167            EDIT_SetTextToFocused(ed_struct->ed_chatgui,ws);
   \   0000017C   040094E5           LDR      R0,[R4, #+4]
   \   00000180   0610A0E1           MOV      R1,R6
   \   00000184   810100EF           SWI      +385
   4168            FreeWS(ws);
   \   00000188   0600A0E1           MOV      R0,R6
   \   0000018C   290100EF           SWI      +297
   4169            GeneralFuncF1(1);
   \   00000190   0100A0E3           MOV      R0,#+1
   \   00000194   3B0100EF           SWI      +315
   4170          }
   \   00000198   84D08DE2           ADD      SP,SP,#+132
   \   0000019C   F080BDE8           POP      {R4-R7,PC}       ;; return
   4171          

   \                                 In segment CODE, align 4, keep-with-next
   4172          void GetShortInfo(GUI *data)
   4173          {
   \                     GetShortInfo:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   4174            EDCHAT_STRUCT *ed_struct;
   4175            ed_struct=MenuGetUserPointer(data);
   \   00000004   E00100EF           SWI      +480
   \   00000008   0040A0E1           MOV      R4,R0
   4176          
   4177            TPKT *p;
   4178            CLIST *t;
   4179            if ((t=ed_struct->ed_contact)&&(connect_state==3))
   \   0000000C   005094E5           LDR      R5,[R4, #+0]
   \   00000010   000055E3           CMP      R5,#+0
   \   00000014   1E00000A           BEQ      ??GetShortInfo_0
   \   00000018   ........           LDR      R0,??DataTable181  ;; ecmenu_ITEMS + 264
   \   0000001C   000090E5           LDR      R0,[R0, #+0]
   \   00000020   030050E3           CMP      R0,#+3
   \   00000024   1A00001A           BNE      ??GetShortInfo_0
   4180            {
   4181              p=malloc(sizeof(PKT));
   \   00000028   0800A0E3           MOV      R0,#+8
   \   0000002C   140000EF           SWI      +20
   \   00000030   0060A0E1           MOV      R6,R0
   4182              p->pkt.uin=t->uin;
   \   00000034   0C0095E5           LDR      R0,[R5, #+12]
   4183              p->pkt.type=T_REQINFOSHORT;
   4184              p->pkt.data_len=0;
   4185              AddStringToLog(t, 0x01, "Request info...", I_str,0xFFFFFFFF);
   \   00000038   0010E0E3           MVN      R1,#+0
   \   0000003C   000086E5           STR      R0,[R6, #+0]
   \   00000040   0B00A0E3           MOV      R0,#+11
   \   00000044   B400C6E1           STRH     R0,[R6, #+4]
   \   00000048   0000A0E3           MOV      R0,#+0
   \   0000004C   B600C6E1           STRH     R0,[R6, #+6]
   \   00000050   ........           LDR      R0,??DataTable174  ;; `?<Constant "\\\\">`
   \   00000054   02002DE9           PUSH     {R1}
   \   00000058   023080E2           ADD      R3,R0,#+2
   \   0000005C   102080E2           ADD      R2,R0,#+16
   \   00000060   0500A0E1           MOV      R0,R5
   \   00000064   0110A0E3           MOV      R1,#+1
   \   00000068   ........           BL       AddStringToLog
   4186              AddMsgToChat(ed_struct->ed_chatgui);
   \   0000006C   040094E5           LDR      R0,[R4, #+4]
   \   00000070   ........           BL       AddMsgToChat
   4187              RecountMenu(t, 1);
   \   00000074   0110A0E3           MOV      R1,#+1
   \   00000078   0500A0E1           MOV      R0,R5
   \   0000007C   ........           BL       RecountMenu
   4188              SUBPROC((void *)SendAnswer,0,p);
   \   00000080   ........           LDR      R0,??DataTable188  ;; SendAnswer
   \   00000084   0620A0E1           MOV      R2,R6
   \   00000088   0010A0E3           MOV      R1,#+0
   \   0000008C   710100EF           SWI      +369
   \   00000090   04D08DE2           ADD      SP,SP,#+4
   4189            }
   4190            GeneralFuncF1(1);
   \                     ??GetShortInfo_0:
   \   00000094   0100A0E3           MOV      R0,#+1
   \   00000098   3B0100EF           SWI      +315
   4191          }
   \   0000009C   7080BDE8           POP      {R4-R6,PC}       ;; return
   4192          
   4193          void AskNickAndAddContact(EDCHAT_STRUCT *);

   \                                 In segment CODE, align 4, keep-with-next
   4194          void AddCurContact(GUI *data)
   4195          {
   \                     AddCurContact:
   \   00000000   00402DE9           PUSH     {LR}
   4196            EDCHAT_STRUCT *ed_struct;
   4197            ed_struct=MenuGetUserPointer(data);
   \   00000004   E00100EF           SWI      +480
   4198          
   4199            if ((ed_struct->ed_contact)&&(connect_state==3)) AskNickAndAddContact(ed_struct);
   \   00000008   000090E5           LDR      R0,[R0, #+0]
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   0400000A           BEQ      ??AddCurContact_0
   \   00000014   ........           LDR      R1,??DataTable181  ;; ecmenu_ITEMS + 264
   \   00000018   001091E5           LDR      R1,[R1, #+0]
   \   0000001C   030051E3           CMP      R1,#+3
   \   00000020   0000001A           BNE      ??AddCurContact_0
   \   00000024   ........           _BLF     CreateAddContactGrpDialog,??CreateAddContactGrpDialog??rA
   4200            GeneralFuncF1(1);
   \                     ??AddCurContact_0:
   \   00000028   0100A0E3           MOV      R0,#+1
   \   0000002C   3B0100EF           SWI      +315
   4201          }
   \   00000030   0080BDE8           POP      {PC}             ;; return
   4202          

   \                                 In segment CODE, align 4, keep-with-next
   4203          void ActionOnCurContact(GUI *data,int msg)
   4204          {
   \                     ActionOnCurContact:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0140A0E1           MOV      R4,R1
   4205            EDCHAT_STRUCT *ed_struct;
   4206            ed_struct=MenuGetUserPointer(data);
   \   00000008   E00100EF           SWI      +480
   4207            CLIST *t;
   4208            if ((t=ed_struct->ed_contact)&&(connect_state==3))
   \   0000000C   005090E5           LDR      R5,[R0, #+0]
   \   00000010   000055E3           CMP      R5,#+0
   \   00000014   1200000A           BEQ      ??ActionOnCurContact_0
   \   00000018   ........           LDR      R0,??DataTable181  ;; ecmenu_ITEMS + 264
   \   0000001C   000090E5           LDR      R0,[R0, #+0]
   \   00000020   030050E3           CMP      R0,#+3
   \   00000024   0E00001A           BNE      ??ActionOnCurContact_0
   4209                {
   4210                TPKT *p;
   4211                p=malloc(sizeof(PKT));
   \   00000028   0800A0E3           MOV      R0,#+8
   \   0000002C   140000EF           SWI      +20
   \   00000030   0060A0E1           MOV      R6,R0
   4212                p->pkt.uin=t->uin;
   \   00000034   0C0095E5           LDR      R0,[R5, #+12]
   4213                p->pkt.type=msg;
   4214                p->pkt.data_len=0;
   4215                //AddStringToLog(t, 0x01, logtext, I_str,0xFFFFFFFF);
   4216                RecountMenu(t, 1);
   \   00000038   0110A0E3           MOV      R1,#+1
   \   0000003C   000086E5           STR      R0,[R6, #+0]
   \   00000040   B440C6E1           STRH     R4,[R6, #+4]
   \   00000044   0000A0E3           MOV      R0,#+0
   \   00000048   B600C6E1           STRH     R0,[R6, #+6]
   \   0000004C   0500A0E1           MOV      R0,R5
   \   00000050   ........           BL       RecountMenu
   4217                SUBPROC((void *)SendAnswer,0,p);
   \   00000054   ........           LDR      R0,??DataTable188  ;; SendAnswer
   \   00000058   0620A0E1           MOV      R2,R6
   \   0000005C   0010A0E3           MOV      R1,#+0
   \   00000060   710100EF           SWI      +369
   4218                };
   4219            GeneralFuncF1(1);
   \                     ??ActionOnCurContact_0:
   \   00000064   0100A0E3           MOV      R0,#+1
   \   00000068   3B0100EF           SWI      +315
   4220          }
   \   0000006C   7080BDE8           POP      {R4-R6,PC}       ;; return
   4221          

   \                                 In segment CODE, align 4, keep-with-next
   4222          void DeleteContactFromList(int res)
   4223          {
   \                     DeleteContactFromList:
   \   00000000   00402DE9           PUSH     {LR}
   4224            if (!res)
   \   00000004   000050E3           CMP      R0,#+0
   \   00000008   0080BD18           POPNE    {PC}
   4225            {
   4226              ActionOnCurContact(deleting_contact,T_REMOVECONTACT);
   \   0000000C   ........           LDR      R0,??DataTable180  ;; deleting_contact
   \   00000010   2110A0E3           MOV      R1,#+33
   \   00000014   000090E5           LDR      R0,[R0, #+0]
   \   00000018   ........           BL       ActionOnCurContact
   4227            }
   4228          }
   \   0000001C   0080BDE8           POP      {PC}             ;; return
   4229          

   \                                 In segment CODE, align 4, keep-with-next
   4230          void RemoveCurContact(GUI *data) //by captain_SISka 21.12.2008
   4231          {
   4232            deleting_contact = data;
   \                     RemoveCurContact:
   \   00000000   ........           LDR      R1,??DataTable180  ;; deleting_contact
   4233            MsgBoxYesNo(1, (int)lgpData[LGP_MnuRemContQuestions], DeleteContactFromList);
   \   00000004   18209FE5           LDR      R2,??RemoveCurContact_0  ;; DeleteContactFromList
   \   00000008   00402DE9           PUSH     {LR}
   \   0000000C   000081E5           STR      R0,[R1, #+0]
   \   00000010   10009FE5           LDR      R0,??RemoveCurContact_0+0x4  ;; lgpData + 144
   \   00000014   001090E5           LDR      R1,[R0, #+0]
   \   00000018   0100A0E3           MOV      R0,#+1
   \   0000001C   4F0000EF           SWI      +79
   4234          }
   \   00000020   0080BDE8           POP      {PC}             ;; return
   \                     ??RemoveCurContact_0:
   \   00000024   ........           DC32     DeleteContactFromList
   \   00000028   ........           DC32     lgpData + 144
   4235          
   4236          /*void IgnoreCurContact(GUI *data) //by captain_SISka 21.12.2008
   4237          {
   4238           ActionOnCurContact(data,T_ADDIGNORE);
   4239          }*/
   4240          
   4241          

   \                                 In segment CODE, align 4, keep-with-next
   4242          void SendAuthReq(GUI *data)
   4243          {
   \                     SendAuthReq:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   4244            EDCHAT_STRUCT *ed_struct;
   4245            ed_struct=MenuGetUserPointer(data);
   \   00000004   E00100EF           SWI      +480
   \   00000008   0040A0E1           MOV      R4,R0
   4246          
   4247            TPKT *p;
   4248            CLIST *t;
   4249            int l;
   4250            //const char s[]=LG_AUTHREQ;
   4251            //char s[]=empty_string;
   4252            //strcpy(s,(char*)lgpData[LGP_AuthReq]);
   4253          
   4254            if ((t=ed_struct->ed_contact)&&(connect_state==3))
   \   0000000C   005094E5           LDR      R5,[R4, #+0]
   \   00000010   000055E3           CMP      R5,#+0
   \   00000014   2300000A           BEQ      ??SendAuthReq_0
   \   00000018   ........           LDR      R0,??DataTable181  ;; ecmenu_ITEMS + 264
   \   0000001C   000090E5           LDR      R0,[R0, #+0]
   \   00000020   030050E3           CMP      R0,#+3
   \   00000024   1F00001A           BNE      ??SendAuthReq_0
   4255            {
   4256              p=malloc(sizeof(PKT)+(l=strlen((char*)lgpData[LGP_AuthReq]))+1);
   \   00000028   ........           LDR      R6,??DataTable191  ;; lgpData
   \   0000002C   540096E5           LDR      R0,[R6, #+84]
   \   00000030   1B0000EF           SWI      +27
   \   00000034   0070A0E1           MOV      R7,R0
   \   00000038   090087E2           ADD      R0,R7,#+9
   \   0000003C   140000EF           SWI      +20
   \   00000040   0080A0E1           MOV      R8,R0
   4257              p->pkt.uin=t->uin;
   \   00000044   0C0095E5           LDR      R0,[R5, #+12]
   \   00000048   000088E5           STR      R0,[R8, #+0]
   4258              p->pkt.type=T_AUTHREQ;
   \   0000004C   0A00A0E3           MOV      R0,#+10
   \   00000050   B400C8E1           STRH     R0,[R8, #+4]
   4259              p->pkt.data_len=l;
   \   00000054   B670C8E1           STRH     R7,[R8, #+6]
   4260              strcpy(p->data,(char*)lgpData[LGP_AuthReq]);
   \   00000058   541096E5           LDR      R1,[R6, #+84]
   \   0000005C   080088E2           ADD      R0,R8,#+8
   \   00000060   1A0000EF           SWI      +26
   4261              AddStringToLog(t,0x01,p->data,I_str,0xFFFFFFFF);
   \   00000064   ........           LDR      R3,??DataTable187  ;; `?<Constant "\\\\">` + 2
   \   00000068   0000E0E3           MVN      R0,#+0
   \   0000006C   01002DE9           PUSH     {R0}
   \   00000070   082088E2           ADD      R2,R8,#+8
   \   00000074   0110A0E3           MOV      R1,#+1
   \   00000078   0500A0E1           MOV      R0,R5
   \   0000007C   ........           BL       AddStringToLog
   4262              AddMsgToChat(ed_struct->ed_chatgui);
   \   00000080   040094E5           LDR      R0,[R4, #+4]
   \   00000084   ........           BL       AddMsgToChat
   4263              RecountMenu(t, 1);
   \   00000088   0110A0E3           MOV      R1,#+1
   \   0000008C   0500A0E1           MOV      R0,R5
   \   00000090   ........           BL       RecountMenu
   4264              SUBPROC((void *)SendAnswer,0,p);
   \   00000094   ........           LDR      R0,??DataTable188  ;; SendAnswer
   \   00000098   0820A0E1           MOV      R2,R8
   \   0000009C   0010A0E3           MOV      R1,#+0
   \   000000A0   710100EF           SWI      +369
   \   000000A4   04D08DE2           ADD      SP,SP,#+4
   4265            }
   4266            GeneralFuncF1(1);
   \                     ??SendAuthReq_0:
   \   000000A8   0100A0E3           MOV      R0,#+1
   \   000000AC   3B0100EF           SWI      +315
   4267          }
   \   000000B0   F081BDE8           POP      {R4-R8,PC}       ;; return
   4268          

   \                                 In segment CODE, align 4, keep-with-next
   4269          void SendAuthGrant(GUI *data)
   4270          {
   \                     SendAuthGrant:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   4271            EDCHAT_STRUCT *ed_struct;
   4272            ed_struct=MenuGetUserPointer(data);
   \   00000004   E00100EF           SWI      +480
   \   00000008   0040A0E1           MOV      R4,R0
   4273          
   4274            TPKT *p;
   4275            CLIST *t;
   4276            int l;
   4277            //const char s[]=LG_AUTHGRANT;
   4278            //char s[]=empty_string;
   4279            //strcpy(s,(char*)lgpData[LGP_AuthGrant]);
   4280          
   4281            if ((t=ed_struct->ed_contact)&&(connect_state==3))
   \   0000000C   005094E5           LDR      R5,[R4, #+0]
   \   00000010   000055E3           CMP      R5,#+0
   \   00000014   2300000A           BEQ      ??SendAuthGrant_0
   \   00000018   ........           LDR      R0,??DataTable185  ;; ecmenu_ITEMS + 264
   \   0000001C   000090E5           LDR      R0,[R0, #+0]
   \   00000020   030050E3           CMP      R0,#+3
   \   00000024   1F00001A           BNE      ??SendAuthGrant_0
   4282            {
   4283              p=malloc(sizeof(PKT)+(l=strlen((char*)lgpData[LGP_AuthGrant]))+1);
   \   00000028   ........           LDR      R6,??DataTable191  ;; lgpData
   \   0000002C   580096E5           LDR      R0,[R6, #+88]
   \   00000030   1B0000EF           SWI      +27
   \   00000034   0070A0E1           MOV      R7,R0
   \   00000038   090087E2           ADD      R0,R7,#+9
   \   0000003C   140000EF           SWI      +20
   \   00000040   0080A0E1           MOV      R8,R0
   4284              p->pkt.uin=t->uin;
   \   00000044   0C0095E5           LDR      R0,[R5, #+12]
   \   00000048   000088E5           STR      R0,[R8, #+0]
   4285              p->pkt.type=T_AUTHGRANT;
   \   0000004C   0E00A0E3           MOV      R0,#+14
   \   00000050   B400C8E1           STRH     R0,[R8, #+4]
   4286              p->pkt.data_len=l;
   \   00000054   B670C8E1           STRH     R7,[R8, #+6]
   4287              strcpy(p->data,(char*)lgpData[LGP_AuthGrant]);
   \   00000058   581096E5           LDR      R1,[R6, #+88]
   \   0000005C   080088E2           ADD      R0,R8,#+8
   \   00000060   1A0000EF           SWI      +26
   4288              AddStringToLog(t,0x01,p->data,I_str,0xFFFFFFFF);
   \   00000064   ........           LDR      R3,??DataTable187  ;; `?<Constant "\\\\">` + 2
   \   00000068   0000E0E3           MVN      R0,#+0
   \   0000006C   01002DE9           PUSH     {R0}
   \   00000070   082088E2           ADD      R2,R8,#+8
   \   00000074   0110A0E3           MOV      R1,#+1
   \   00000078   0500A0E1           MOV      R0,R5
   \   0000007C   ........           BL       AddStringToLog
   4289              AddMsgToChat(ed_struct->ed_chatgui);
   \   00000080   040094E5           LDR      R0,[R4, #+4]
   \   00000084   ........           BL       AddMsgToChat
   4290              RecountMenu(t, 1);
   \   00000088   0110A0E3           MOV      R1,#+1
   \   0000008C   0500A0E1           MOV      R0,R5
   \   00000090   ........           BL       RecountMenu
   4291              SUBPROC((void *)SendAnswer,0,p);
   \   00000094   ........           LDR      R0,??DataTable188  ;; SendAnswer
   \   00000098   0820A0E1           MOV      R2,R8
   \   0000009C   0010A0E3           MOV      R1,#+0
   \   000000A0   710100EF           SWI      +369
   \   000000A4   04D08DE2           ADD      SP,SP,#+4
   4292            }
   4293            GeneralFuncF1(1);
   \                     ??SendAuthGrant_0:
   \   000000A8   0100A0E3           MOV      R0,#+1
   \   000000AC   3B0100EF           SWI      +315
   4294          }
   \   000000B0   F081BDE8           POP      {R4-R8,PC}       ;; return
   4295          

   \                                 In segment CODE, align 4, keep-with-next
   4296          void OpenLogfile(GUI *data)
   4297          {
   \                     OpenLogfile:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   4298            EDCHAT_STRUCT *ed_struct;
   4299            ed_struct=MenuGetUserPointer(data);
   4300          
   4301            extern const char HIST_PATH[64];
   4302            extern const int HISTORY_TYPE;
   4303            const char _slash[]="\\";
   \   00000004   E4409FE5           LDR      R4,??OpenLogfile_0  ;; `?<Constant "\\\\">_1`
   \   00000008   84D04DE2           SUB      SP,SP,#+132
   \   0000000C   E00100EF           SWI      +480
   \   00000010   0010D4E5           LDRB     R1,[R4, #0]
   \   00000014   0050A0E1           MOV      R5,R0
   \   00000018   0D00A0E1           MOV      R0,SP
   \   0000001C   0010C0E5           STRB     R1,[R0, #+0]
   \   00000020   0110D4E5           LDRB     R1,[R4, #+1]
   \   00000024   0110C0E5           STRB     R1,[R0, #+1]
   4304            CLIST *t;
   4305            char hist_path[128];
   4306            zeromem(hist_path,128);
   \   00000028   8010A0E3           MOV      R1,#+128
   \   0000002C   04008DE2           ADD      R0,SP,#+4
   \   00000030   1D0100EF           SWI      +285
   4307            strcpy(hist_path,HIST_PATH);
   \   00000034   B8109FE5           LDR      R1,??OpenLogfile_0+0x4  ;; HIST_PATH
   \   00000038   04008DE2           ADD      R0,SP,#+4
   \   0000003C   1A0000EF           SWI      +26
   4308            if (hist_path[strlen(hist_path)-1]!='\\') strcat(hist_path,_slash);
   \   00000040   04008DE2           ADD      R0,SP,#+4
   \   00000044   1B0000EF           SWI      +27
   \   00000048   04108DE2           ADD      R1,SP,#+4
   \   0000004C   010080E0           ADD      R0,R0,R1
   \   00000050   010050E5           LDRB     R0,[R0, #-1]
   \   00000054   5C0050E3           CMP      R0,#+92
   \   00000058   0200000A           BEQ      ??OpenLogfile_1
   \   0000005C   0D10A0E1           MOV      R1,SP
   \   00000060   04008DE2           ADD      R0,SP,#+4
   \   00000064   170000EF           SWI      +23
   4309          
   4310            WSHDR *ws=AllocWS(256);
   \                     ??OpenLogfile_1:
   \   00000068   400FA0E3           MOV      R0,#+256
   \   0000006C   250100EF           SWI      +293
   \   00000070   0060A0E1           MOV      R6,R0
   4311            if ((t=ed_struct->ed_contact))
   \   00000074   000095E5           LDR      R0,[R5, #+0]
   \   00000078   000050E3           CMP      R0,#+0
   \   0000007C   1500000A           BEQ      ??OpenLogfile_2
   4312            {
   4313              if (HISTORY_TYPE)
   \   00000080   0C3090E5           LDR      R3,[R0, #+12]
   \   00000084   6C009FE5           LDR      R0,??OpenLogfile_0+0x8  ;; HISTORY_TYPE
   \   00000088   000090E5           LDR      R0,[R0, #+0]
   \   0000008C   000050E3           CMP      R0,#+0
   \   00000090   0800000A           BEQ      ??OpenLogfile_3
   4314                wsprintf(ws,"%s%u\\%u.txt",hist_path,UIN,t->uin);
   \   00000094   ........           LDR      R0,??DataTable189  ;; UIN
   \   00000098   08002DE9           PUSH     {R3}
   \   0000009C   08208DE2           ADD      R2,SP,#+8
   \   000000A0   003090E5           LDR      R3,[R0, #+0]
   \   000000A4   041084E2           ADD      R1,R4,#+4
   \   000000A8   0600A0E1           MOV      R0,R6
   \   000000AC   240100EF           SWI      +292
   \   000000B0   04D08DE2           ADD      SP,SP,#+4
   \   000000B4   030000EA           B        ??OpenLogfile_4
   4315              else
   4316                wsprintf(ws,"%s%u.txt",hist_path,t->uin);
   \                     ??OpenLogfile_3:
   \   000000B8   04208DE2           ADD      R2,SP,#+4
   \   000000BC   101084E2           ADD      R1,R4,#+16
   \   000000C0   0600A0E1           MOV      R0,R6
   \   000000C4   240100EF           SWI      +292
   4317              ExecuteFile(ws,NULL,NULL);
   \                     ??OpenLogfile_4:
   \   000000C8   0020A0E3           MOV      R2,#+0
   \   000000CC   0010A0E3           MOV      R1,#+0
   \   000000D0   0600A0E1           MOV      R0,R6
   \   000000D4   940000EF           SWI      +148
   4318            }
   4319            FreeWS(ws);
   \                     ??OpenLogfile_2:
   \   000000D8   0600A0E1           MOV      R0,R6
   \   000000DC   290100EF           SWI      +297
   4320            GeneralFuncF1(1);
   \   000000E0   0100A0E3           MOV      R0,#+1
   \   000000E4   3B0100EF           SWI      +315
   4321          }
   \   000000E8   84D08DE2           ADD      SP,SP,#+132
   \   000000EC   7080BDE8           POP      {R4-R6,PC}       ;; return
   \                     ??OpenLogfile_0:
   \   000000F0   ........           DC32     `?<Constant "\\\\">_1`
   \   000000F4   ........           DC32     HIST_PATH
   \   000000F8   ........           DC32     HISTORY_TYPE
   4322          

   \                                 In segment CODE, align 4, keep-with-next
   4323          void ClearLog(GUI *data/*,void *dummy*/)
   4324          {
   \                     ClearLog:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   2CD04DE2           SUB      SP,SP,#+44
   4325            EDITCONTROL ec;
   4326            EDCHAT_STRUCT *ed_struct;
   4327            WSHDR *ws;
   4328            CLIST *t;
   4329          
   4330            ed_struct=MenuGetUserPointer(data);
   \   00000008   E00100EF           SWI      +480
   \   0000000C   0040A0E1           MOV      R4,R0
   4331          
   4332            ExtractEditControl(ed_struct->ed_chatgui,ed_struct->ed_answer,&ec);
   \   00000010   081094E5           LDR      R1,[R4, #+8]
   \   00000014   040094E5           LDR      R0,[R4, #+4]
   \   00000018   0D20A0E1           MOV      R2,SP
   \   0000001C   690100EF           SWI      +361
   4333            if(wstrlen(ec.pWS)>0)
   \   00000020   28009DE5           LDR      R0,[SP, #+40]
   \   00000024   230100EF           SWI      +291
   \   00000028   010050E3           CMP      R0,#+1
   \   0000002C   0D0000BA           BLT      ??ClearLog_0
   4334            {
   4335              ws=AllocWS(1);
   \   00000030   0100A0E3           MOV      R0,#+1
   \   00000034   250100EF           SWI      +293
   \   00000038   0050A0E1           MOV      R5,R0
   4336              CutWSTR(ws,0);
   \   0000003C   0010A0E3           MOV      R1,#+0
   \   00000040   260100EF           SWI      +294
   4337          
   4338              EDIT_SetFocus(ed_struct->ed_chatgui,ed_struct->ed_answer);
   \   00000044   081094E5           LDR      R1,[R4, #+8]
   \   00000048   040094E5           LDR      R0,[R4, #+4]
   \   0000004C   9B0100EF           SWI      +411
   4339              EDIT_SetTextToFocused(ed_struct->ed_chatgui,ws);
   \   00000050   040094E5           LDR      R0,[R4, #+4]
   \   00000054   0510A0E1           MOV      R1,R5
   \   00000058   810100EF           SWI      +385
   4340          
   4341              FreeWS(ws);
   \   0000005C   0500A0E1           MOV      R0,R5
   \   00000060   290100EF           SWI      +297
   4342              GeneralFuncF1(1);
   \   00000064   1D0000EA           B        ??ClearLog_1
   4343            }
   4344            else
   4345            {
   4346          
   4347              if ((t=ed_struct->ed_contact))
   \                     ??ClearLog_0:
   \   00000068   005094E5           LDR      R5,[R4, #+0]
   \   0000006C   000055E3           CMP      R5,#+0
   \   00000070   1C00000A           BEQ      ??ClearLog_2
   4348              {
   4349                if (t->log)
   \   00000074   A80095E5           LDR      R0,[R5, #+168]
   \   00000078   0060A0E3           MOV      R6,#+0
   \   0000007C   000050E3           CMP      R0,#+0
   \   00000080   1200000A           BEQ      ??ClearLog_3
   4350                {
   4351                  FreeLOGQ(&t->log);
   \   00000084   A80085E2           ADD      R0,R5,#+168
   \   00000088   ........           BL       FreeLOGQ
   4352                  t->msg_count=0;
   \   0000008C   B86085E5           STR      R6,[R5, #+184]
   4353                  if (ed_struct->ed_answer>=2&&ed_struct->ed_chatgui)
   \   00000090   080094E5           LDR      R0,[R4, #+8]
   \   00000094   020050E3           CMP      R0,#+2
   \   00000098   0C0000BA           BLT      ??ClearLog_3
   \   0000009C   040094E5           LDR      R0,[R4, #+4]
   \   000000A0   000050E3           CMP      R0,#+0
   \   000000A4   0900000A           BEQ      ??ClearLog_3
   \   000000A8   050000EA           B        ??ClearLog_4
   4354                  {
   4355                    while(ed_struct->ed_answer!=2)
   4356                    {
   4357                      EDIT_RemoveEditControl(ed_struct->ed_chatgui,1);
   \                     ??ClearLog_5:
   \   000000AC   040094E5           LDR      R0,[R4, #+4]
   \   000000B0   0110A0E3           MOV      R1,#+1
   \   000000B4   D10100EF           SWI      +465
   4358                      ed_struct->ed_answer--;
   \   000000B8   080094E5           LDR      R0,[R4, #+8]
   \   000000BC   010040E2           SUB      R0,R0,#+1
   \   000000C0   080084E5           STR      R0,[R4, #+8]
   4359                    }
   \                     ??ClearLog_4:
   \   000000C4   080094E5           LDR      R0,[R4, #+8]
   \   000000C8   020050E3           CMP      R0,#+2
   \   000000CC   F6FFFF1A           BNE      ??ClearLog_5
   4360                  }
   4361                }
   4362                t->isactive=0;		//by BoBa  18.06.07
   \                     ??ClearLog_3:
   \   000000D0   B46085E5           STR      R6,[R5, #+180]
   4363                RecountMenu(t, 1);
   \   000000D4   0110A0E3           MOV      R1,#+1
   \   000000D8   0500A0E1           MOV      R0,R5
   \   000000DC   ........           BL       RecountMenu
   4364                GeneralFuncF1(1);
   \                     ??ClearLog_1:
   \   000000E0   0100A0E3           MOV      R0,#+1
   \   000000E4   3B0100EF           SWI      +315
   4365              }
   4366            }
   4367          }
   \                     ??ClearLog_2:
   \   000000E8   2CD08DE2           ADD      SP,SP,#+44       ;; stack cleaning
   \   000000EC   7080BDE8           POP      {R4-R6,PC}       ;; return
   4368          

   \                                 In segment CODE, align 4, keep-with-next
   4369          void ecmenu_ghook(void *data, int cmd)
   4370          {
   \                     ecmenu_ghook:
   \   00000000   00402DE9           PUSH     {LR}
   4371            if (cmd==0x0A)
   \   00000004   0A0051E3           CMP      R1,#+10
   \   00000008   0080BD18           POPNE    {PC}
   4372            {
   4373              DisableIDLETMR();
   \   0000000C   7F0100EF           SWI      +383
   4374            }
   4375          }
   \   00000010   0080BDE8           POP      {PC}             ;; return

   \                                 In segment DATA_I, align 4, align-sorted
   4376          
   4377          static MENUITEM_DESC ecmenu_ITEMS[EC_MNU_MAX]=
   \                     ecmenu_ITEMS:
   \   00000000                      DS8 252
   \   000000FC                      REQUIRE `?<Initializer for ecmenu_ITEMS>`
   \                     empty_string:
   \   000000FC                      DS8 4
   \   00000100                      REQUIRE `?<Initializer for empty_string>`
   \                     AutoStatusEvent:
   \   00000100                      DS8 4
   \   00000104                      REQUIRE `?<Initializer for AutoStatusEvent>`
   \                     RXstate:
   \   00000104                      DS8 4
   \   00000108                      REQUIRE `?<Initializer for RXstate>`
   \                     connect_state:
   \   00000108                      DS8 4
   \   0000010C                      REQUIRE `?<Initializer for connect_state>`
   \                     sock:
   \   0000010C                      DS8 4
   \   00000110                      REQUIRE `?<Initializer for sock>`
   \                     sendq_l:
   \   00000110                      DS8 4
   \   00000114                      REQUIRE `?<Initializer for sendq_l>`
   \                     sendq_p:
   \   00000114                      DS8 4
   \   00000118                      REQUIRE `?<Initializer for sendq_p>`
   \                     is_gprs_online:
   \   00000118                      DS8 4
   \   0000011C                      REQUIRE `?<Initializer for is_gprs_online>`
   \                     gprsdown:
   \   0000011C                      DS8 4
   \   00000120                      REQUIRE `?<Initializer for gprsdown>`
   \                     DNR_ID:
   \   00000120                      DS8 4
   \   00000124                      REQUIRE `?<Initializer for DNR_ID>`
   \                     DNR_TRIES:
   \   00000124                      DS8 4
   \   00000128                      REQUIRE `?<Initializer for DNR_TRIES>`
   \                     host_counter:
   \   00000128                      DS8 4
   \   0000012C                      REQUIRE `?<Initializer for host_counter>`

   \                                 In segment DATA_I, align 4, align-sorted
   \                     contactlist_menuhdr:
   \   00000000                      DS8 20
   \   00000014                      REQUIRE `?<Initializer for contactlist_menuhdr>`
   \                     menu_sk:
   \   00000014                      DS8 24
   \   0000002C                      REQUIRE `?<Initializer for menu_sk>`
   \                     clmenu_sk:
   \   0000002C                      DS8 24
   \   00000044                      REQUIRE `?<Initializer for clmenu_sk>`

   \                                 In segment DATA_I, align 4, align-sorted
   \                     MAINCSM:
   \   00000000                      DS8 72
   \   00000048                      REQUIRE `?<Initializer for MAINCSM>`

   \                                 In segment DATA_I, align 4, align-sorted
   \                     ??sk:
   \   00000000                      DS8 8
   \   00000008                      REQUIRE `?<Initializer for sk>`
   \   00000008                      DS8 8
   \   00000010                      REQUIRE `?<Initializer for sk_cancel>`
   4378          {
   4379            {NULL,NULL,LGP_NULL,0,NULL,MENU_FLAG3,MENU_FLAG2},
   4380            {NULL,NULL,LGP_NULL,0,NULL,MENU_FLAG3,MENU_FLAG2},
   4381            {NULL,NULL,LGP_NULL,0,NULL,MENU_FLAG3,MENU_FLAG2},
   4382            {NULL,NULL,LGP_NULL,0,NULL,MENU_FLAG3,MENU_FLAG2},
   4383            {NULL,NULL,LGP_NULL,0,NULL,MENU_FLAG3,MENU_FLAG2},
   4384            {NULL,NULL,LGP_NULL,0,NULL,MENU_FLAG3,MENU_FLAG2},
   4385            {NULL,NULL,LGP_NULL,0,NULL,MENU_FLAG3,MENU_FLAG2},
   4386            {NULL,NULL,LGP_NULL,0,NULL,MENU_FLAG3,MENU_FLAG2},
   4387            {NULL,NULL,LGP_NULL,0,NULL,MENU_FLAG3,MENU_FLAG2}
   4388          };
   4389          
   4390          extern void AddSmile(GUI *data);

   \                                 In segment DATA_C, align 4, align-sorted
   4391          static const MENUPROCS_DESC ecmenu_HNDLS[EC_MNU_MAX]=
   \                     ecmenu_HNDLS:
   \   00000000   ............       DC32 Quote, AddSmile, GetShortInfo, AddCurContact, SendAuthReq
   \              ............
   \              ............
   \              ....        
   \   00000014   ............       DC32 SendAuthGrant, OpenLogfile, RemoveCurContact, ClearLog
   \              ............
   \              ........    
   4392          {
   4393            Quote,
   4394            AddSmile,
   4395            GetShortInfo,
   4396            AddCurContact,
   4397            SendAuthReq,
   4398            SendAuthGrant,
   4399            OpenLogfile,
   4400            RemoveCurContact,
   4401            ClearLog
   4402          };
   4403          

   \                                 In segment DATA_Z, align 4, align-sorted
   4404          char ecm_contactname[64];
   \                     ecm_contactname:
   \   00000000                      DS8 64
   4405          

   \                                 In segment DATA_C, align 4, align-sorted
   4406          static const HEADER_DESC ecmenu_HDR={0,0,NULL,NULL,NULL,(int)ecm_contactname,LGP_NULL};
   \                     ecmenu_HDR:
   \   00000000   000000000000       DC16 0, 0, 0, 0
   \              0000        
   \   00000008   00000000....       DC32 0H, ecm_contactname, 2147483647
   \              ....FFFFFF7F
   \   00000014   080000000000       DC32 8, 0H, ecmenu_ghook, 0H, menusoftkeys, menu_skt, 0, 0H
   \              0000........
   \              00000000....
   \              ............
   \              000000000000
   \              0000        
   \   00000034   ............       DC32 ecmenu_ITEMS, ecmenu_HNDLS, 9
   \              ....09000000
   4407          
   4408          static const MENU_DESC ecmenu_STRUCT=
   4409          {
   4410            8,NULL,ecmenu_ghook,NULL,
   4411            menusoftkeys,
   4412            &menu_skt,
   4413            0,
   4414            NULL,
   4415            ecmenu_ITEMS,
   4416            ecmenu_HNDLS,
   4417            EC_MNU_MAX
   4418          };
   4419          

   \                                 In segment CODE, align 4, keep-with-next
   4420          void ec_menu(EDCHAT_STRUCT *ed_struct)
   4421          {
   \                     ec_menu:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   28D04DE2           SUB      SP,SP,#+40
   \   00000008   0040A0E1           MOV      R4,R0
   4422            CLIST *t;
   4423            int to_remove[EC_MNU_MAX+1];
   4424            int remove=0;
   4425            if ((t=ed_struct->ed_contact))
   \   0000000C   001094E5           LDR      R1,[R4, #+0]
   \   00000010   000051E3           CMP      R1,#+0
   \   00000014   6000000A           BEQ      ??ec_menu_0
   4426            {
   4427              if (t->name)
   \   00000018   88019FE5           LDR      R0,??ec_menu_1+0x4  ;; ecm_contactname
   \   0000001C   142091E2           ADDS     R2,R1,#+20
   \   00000020   0300000A           BEQ      ??ec_menu_2
   4428              {
   4429                strncpy(ecm_contactname,t->name,63);
   \   00000024   3F20A0E3           MOV      R2,#+63
   \   00000028   141081E2           ADD      R1,R1,#+20
   \   0000002C   160100EF           SWI      +278
   \   00000030   020000EA           B        ??ec_menu_3
   4430              }
   4431              else
   4432              {
   4433                sprintf(ecm_contactname,"%u",t->uin);
   \                     ??ec_menu_2:
   \   00000034   0C2091E5           LDR      R2,[R1, #+12]
   \   00000038   591F8FE2           ADR      R1,??ec_menu_1   ;; "%u"
   \   0000003C   160000EF           SWI      +22
   4434              }
   4435              if (EDIT_GetFocus(ed_struct->ed_chatgui)==ed_struct->ed_answer)
   \                     ??ec_menu_3:
   \   00000040   040094E5           LDR      R0,[R4, #+4]
   \   00000044   0160A0E3           MOV      R6,#+1
   \   00000048   820100EF           SWI      +386
   \   0000004C   083094E5           LDR      R3,[R4, #+8]
   \   00000050   0120A0E3           MOV      R2,#+1
   \   00000054   0010A0E3           MOV      R1,#+0
   \   00000058   030050E1           CMP      R0,R3
   \   0000005C   0700001A           BNE      ??ec_menu_4
   4436              {
   4437                to_remove[++remove]=0;
   4438                if (!s_top){
   \   00000060   ........           LDR      R0,??DataTable190  ;; s_top
   \   00000064   04108DE5           STR      R1,[SP, #+4]
   \   00000068   000090E5           LDR      R0,[R0, #+0]
   \   0000006C   000050E3           CMP      R0,#+0
   \   00000070   0300001A           BNE      ??ec_menu_5
   4439                  to_remove[++remove]=1;
   \   00000074   0260A0E3           MOV      R6,#+2
   \   00000078   08208DE5           STR      R2,[SP, #+8]
   \   0000007C   000000EA           B        ??ec_menu_5
   4440                }
   4441              }
   4442              else
   4443              {
   4444                to_remove[++remove]=1;
   \                     ??ec_menu_4:
   \   00000080   04208DE5           STR      R2,[SP, #+4]
   4445              }
   4446          
   4447              if (ed_struct->ed_answer<=2) to_remove[++remove]=8;
   \                     ??ec_menu_5:
   \   00000084   080094E5           LDR      R0,[R4, #+8]
   \   00000088   030050E3           CMP      R0,#+3
   \   0000008C   030000AA           BGE      ??ec_menu_6
   \   00000090   016086E2           ADD      R6,R6,#+1
   \   00000094   0D00A0E1           MOV      R0,SP
   \   00000098   0820A0E3           MOV      R2,#+8
   \   0000009C   062180E7           STR      R2,[R0, +R6, LSL #+2]
   4448              if (!ed_struct->ed_contact || connect_state!=3)
   \                     ??ec_menu_6:
   \   000000A0   000094E5           LDR      R0,[R4, #+0]
   \   000000A4   00519FE5           LDR      R5,??ec_menu_1+0x8  ;; ecmenu_ITEMS
   \   000000A8   000050E3           CMP      R0,#+0
   \   000000AC   0200000A           BEQ      ??ec_menu_7
   \   000000B0   080195E5           LDR      R0,[R5, #+264]
   \   000000B4   030050E3           CMP      R0,#+3
   \   000000B8   0D00000A           BEQ      ??ec_menu_8
   4449              {
   4450                to_remove[++remove]=2;
   \                     ??ec_menu_7:
   \   000000BC   010086E2           ADD      R0,R6,#+1
   \   000000C0   0D20A0E1           MOV      R2,SP
   \   000000C4   0230A0E3           MOV      R3,#+2
   \   000000C8   003182E7           STR      R3,[R2, +R0, LSL #+2]
   4451                to_remove[++remove]=3;
   \   000000CC   010080E2           ADD      R0,R0,#+1
   \   000000D0   0330A0E3           MOV      R3,#+3
   \   000000D4   003182E7           STR      R3,[R2, +R0, LSL #+2]
   4452                to_remove[++remove]=4;
   \   000000D8   010080E2           ADD      R0,R0,#+1
   \   000000DC   0430A0E3           MOV      R3,#+4
   \   000000E0   003182E7           STR      R3,[R2, +R0, LSL #+2]
   4453                to_remove[++remove]=5;
   \   000000E4   016080E2           ADD      R6,R0,#+1
   \   000000E8   0D00A0E1           MOV      R0,SP
   \   000000EC   0520A0E3           MOV      R2,#+5
   \   000000F0   062180E7           STR      R2,[R0, +R6, LSL #+2]
   4454              }
   4455              patch_header(&ecmenu_HDR);
   \                     ??ec_menu_8:
   \   000000F4   B4709FE5           LDR      R7,??ec_menu_1+0xC  ;; ecmenu_HDR
   \   000000F8   1800A0E3           MOV      R0,#+24
   \   000000FC   B010C7E1           STRH     R1,[R7, #+0]
   \   00000100   B200C7E1           STRH     R0,[R7, #+2]
   \   00000104   888100EF           SWI      +33160
   \   00000108   010040E2           SUB      R0,R0,#+1
   \   0000010C   B400C7E1           STRH     R0,[R7, #+4]
   \   00000110   8A8100EF           SWI      +33162
   \   00000114   170080E2           ADD      R0,R0,#+23
   \   00000118   B600C7E1           STRH     R0,[R7, #+6]
   4456              to_remove[0]=remove;
   4457          
   4458              //Инициализация ленгпака
   4459              ecmenu_ITEMS[0].lgp_id_small=(int)lgpData[LGP_MnuQuote];
   \   0000011C   ........           LDR      R0,??DataTable191  ;; lgpData
   \   00000120   00608DE5           STR      R6,[SP, #+0]
   \   00000124   881090E5           LDR      R1,[R0, #+136]
   4460              ecmenu_ITEMS[1].lgp_id_small=(int)lgpData[LGP_MnuAddSml];
   4461              ecmenu_ITEMS[2].lgp_id_small=(int)lgpData[LGP_MnuShInfo];
   4462              ecmenu_ITEMS[3].lgp_id_small=(int)lgpData[LGP_MnuAddRen];
   4463              ecmenu_ITEMS[4].lgp_id_small=(int)lgpData[LGP_MnuSAuthReq];
   4464              ecmenu_ITEMS[5].lgp_id_small=(int)lgpData[LGP_MnuSAuthGrt];
   4465              ecmenu_ITEMS[6].lgp_id_small=(int)lgpData[LGP_MnuOpenLog];
   4466              ecmenu_ITEMS[7].lgp_id_small=(int)lgpData[LGP_MnuRemCont];
   4467              ecmenu_ITEMS[8].lgp_id_small=(int)lgpData[LGP_MnuClearCht];
   4468          
   4469              CreateMenu(0,0,&ecmenu_STRUCT,&ecmenu_HDR,0,EC_MNU_MAX,ed_struct,to_remove);
   \   00000128   0730A0E1           MOV      R3,R7
   \   0000012C   041085E5           STR      R1,[R5, #+4]
   \   00000130   941090E5           LDR      R1,[R0, #+148]
   \   00000134   142087E2           ADD      R2,R7,#+20
   \   00000138   201085E5           STR      R1,[R5, #+32]
   \   0000013C   981090E5           LDR      R1,[R0, #+152]
   \   00000140   3C1085E5           STR      R1,[R5, #+60]
   \   00000144   9C1090E5           LDR      R1,[R0, #+156]
   \   00000148   581085E5           STR      R1,[R5, #+88]
   \   0000014C   A01090E5           LDR      R1,[R0, #+160]
   \   00000150   741085E5           STR      R1,[R5, #+116]
   \   00000154   A41090E5           LDR      R1,[R0, #+164]
   \   00000158   901085E5           STR      R1,[R5, #+144]
   \   0000015C   A81090E5           LDR      R1,[R0, #+168]
   \   00000160   AC1085E5           STR      R1,[R5, #+172]
   \   00000164   8C1090E5           LDR      R1,[R0, #+140]
   \   00000168   AC0090E5           LDR      R0,[R0, #+172]
   \   0000016C   C81085E5           STR      R1,[R5, #+200]
   \   00000170   E40085E5           STR      R0,[R5, #+228]
   \   00000174   0D00A0E1           MOV      R0,SP
   \   00000178   01002DE9           PUSH     {R0}
   \   0000017C   10002DE9           PUSH     {R4}
   \   00000180   0010A0E3           MOV      R1,#+0
   \   00000184   0900A0E3           MOV      R0,#+9
   \   00000188   01002DE9           PUSH     {R0}
   \   0000018C   0000A0E3           MOV      R0,#+0
   \   00000190   01002DE9           PUSH     {R0}
   \   00000194   520100EF           SWI      +338
   \   00000198   10D08DE2           ADD      SP,SP,#+16
   4470            }
   4471          }
   \                     ??ec_menu_0:
   \   0000019C   28D08DE2           ADD      SP,SP,#+40       ;; stack cleaning
   \   000001A0   F080BDE8           POP      {R4-R7,PC}       ;; return
   \                     ??ec_menu_1:
   \   000001A4   25750000           DC8      "%u",+0
   \   000001A8   ........           DC32     ecm_contactname
   \   000001AC   ........           DC32     ecmenu_ITEMS
   \   000001B0   ........           DC32     ecmenu_HDR
   4472          
   4473          

   \                                 In segment CODE, align 4, keep-with-next
   4474          void AskNickAndAddContact(EDCHAT_STRUCT *ed_struct)
   4475          {
   4476            CreateAddContactGrpDialog(ed_struct->ed_contact);
   \                     AskNickAndAddContact:
   \   00000000   000090E5           LDR      R0,[R0, #+0]
   \   00000004   ........           _BF      CreateAddContactGrpDialog,??CreateAddContactGrpDialog??rA  ;; tailcall
   4477          }
   4478          

   \                                 In segment CODE, align 4, keep-with-next
   4479          void AddSmile(GUI *data)
   4480          {
   \                     AddSmile:
   \   00000000   00402DE9           PUSH     {LR}
   4481            EDCHAT_STRUCT *ed_struct=MenuGetUserPointer(data);
   \   00000004   E00100EF           SWI      +480
   4482            CreateSmileSelectGUI(ed_struct);
   \   00000008   ........           _BLF     CreateSmileSelectGUI,??CreateSmileSelectGUI??rA
   4483            GeneralFuncF1(1);
   \   0000000C   0100A0E3           MOV      R0,#+1
   \   00000010   3B0100EF           SWI      +315
   4484          }
   \   00000014   0080BDE8           POP      {PC}             ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   ........           DC32     S_ICONS

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   ........           DC32     S_ICONS + 180

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable7:
   \   00000000   ........           DC32     UIN

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable8:
   \   00000000   ........           DC32     def_setting

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable13:
   \   00000000   ........           DC32     VIBR_TYPE

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable19:
   \   00000000   ........           DC32     TEMPLATES_PATH

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable23:
   \   00000000   ........           DC32     def_clm_hdr_text

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable27:
   \   00000000   ........           DC32     S_ICONS

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable28:
   \   00000000   ........           DC32     lgpData

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable31:
   \   00000000   ........           DC32     HISTORY_BUFFER

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable33:
   \   00000000   ........           DC32     S_ICONS + 232

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable34:
   \   00000000   ........           DC32     Canvas

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable35:
   \   00000000   ........           DC32     S_ICONS

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable38:
   \   00000000   ........           DC32     do_reconnect

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable39:
   \   00000000   ........           DC32     RECONNECT_TIME

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable42:
   \   00000000   ........           DC32     ecmenu_ITEMS

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable43:
   \   00000000   ........           DC32     S_ICONS

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable44:
   \   00000000   ........           DC32     UIN

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable50:
   \   00000000   ........           DC32     ecmenu_ITEMS + 264

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable51:
   \   00000000   ........           DC32     ecmenu_ITEMS + 260

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable52:
   \   00000000   ........           DC32     HISTORY_BUFFER

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable55:
   \   00000000   ........           DC32     ED_X_FONT_SIZE

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable57:
   \   00000000   ........           DC32     X_COLOR

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable58:
   \   00000000   ........           DC32     O_ED_X_FONT_SIZE

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable59:
   \   00000000   ........           DC32     O_X_COLOR

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable67:
   \   00000000   ........           DC32     O_ED_FONT_SIZE

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable68:
   \   00000000   ........           DC32     ED_FONT_SIZE

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable70:
   \   00000000   ........           DC32     ACK_COLOR

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable71:
   \   00000000   ........           DC32     O_TO_COLOR

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable72:
   \   00000000   ........           DC32     O_I_COLOR

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable73:
   \   00000000   ........           DC32     TO_COLOR

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable74:
   \   00000000   ........           DC32     I_COLOR

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable75:
   \   00000000   ........           DC32     UNACK_COLOR

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable76:
   \   00000000   ........           DC32     O_ED_H_FONT_SIZE

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable77:
   \   00000000   ........           DC32     ED_H_FONT_SIZE

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable78:
   \   00000000   ........           DC32     S_ICONS + 180

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable81:
   \   00000000   ........           DC32     SendAnswer

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable84:
   \   00000000   ........           DC32     S_ICONS

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable87:
   \   00000000   ........           DC32     VIBR_ON_CONNECT

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable88:
   \   00000000   ........           DC32     HISTORY_BUFFER

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable89:
   \   00000000   ........           DC32     VIBR_TYPE

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable94:
   \   00000000   ........           DC32     S_ICONS

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable95:
   \   00000000   ........           DC32     Canvas

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable96:
   \   00000000   ........           DC32     ecmenu_ITEMS + 260

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable97:
   \   00000000   ........           DC32     ecmenu_ITEMS + 264

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable103:
   \   00000000   ........           DC32     S_ICONS

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable104:
   \   00000000   ........           DC32     process_active_timer

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable114:
   \   00000000   ........           DC32     ecmenu_ITEMS

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable115:
   \   00000000   ........           DC32     S_ICONS

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable116:
   \   00000000   ........           DC32     Canvas

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable120:
   \   00000000   ........           DC32     VIBR_ON_CONNECT

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable121:
   \   00000000   ........           DC32     do_reconnect

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable123:
   \   00000000   ........           DC32     create_connect

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable124:
   \   00000000   ........           DC32     lgpData

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable126:
   \   00000000   ........           DC32     SendAnswer

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable127:
   \   00000000   ........           DC32     end_socket

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable128:
   \   00000000   ........           DC32     ClearSendQ

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable129:
   \   00000000   ........           DC32     RECONNECT_TIME

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable131:
   \   00000000   ........           DC32     ICON_ON

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable132:
   \   00000000   ........           DC32     ecmenu_ITEMS + 264

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable137:
   \   00000000   ........           DC32     successed_config_filename

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable138:
   \   00000000   ........           DC32     S_ICONS

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable139:
   \   00000000   ........           DC32     UIN

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable140:
   \   00000000   ........           DC32     ElfKiller

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable141:
   \   00000000   ........           DC32     addIconBar

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable143:
   \   00000000   ........           DC32     S_ICONS + 232

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable147:
   \   00000000   ........           DC32     s_top

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable148:
   \   00000000   ........           DC32     `?<Constant "abcdefghijklmnopqrstu...">`

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable153:
   \   00000000   ........           DC32     TEMPLATES_PATH

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable155:
   \   00000000   ........           DC32     S_ICONS

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable156:
   \   00000000   ........           DC32     lgpData

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable157:
   \   00000000   ........           DC32     S_ICONS

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable158:
   \   00000000   ........           DC32     ED_X_FONT_SIZE

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable159:
   \   00000000   ........           DC32     ED_H_FONT_SIZE

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable160:
   \   00000000   ........           DC32     I_COLOR

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable161:
   \   00000000   ........           DC32     X_COLOR

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable162:
   \   00000000   ........           DC32     O_ED_X_FONT_SIZE

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable163:
   \   00000000   ........           DC32     O_X_COLOR

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable164:
   \   00000000   ........           DC32     ACK_COLOR

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable165:
   \   00000000   ........           DC32     O_I_COLOR

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable166:
   \   00000000   ........           DC32     O_TO_COLOR

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable167:
   \   00000000   ........           DC32     O_ED_H_FONT_SIZE

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable168:
   \   00000000   ........           DC32     TO_COLOR

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable169:
   \   00000000   ........           DC32     UNACK_COLOR

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable170:
   \   00000000   ........           DC32     O_ED_FONT_SIZE

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable172:
   \   00000000   ........           DC32     ED_FONT_SIZE

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable174:
   \   00000000   ........           DC32     `?<Constant "\\\\">`

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable180:
   \   00000000   ........           DC32     deleting_contact

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable181:
   \   00000000   ........           DC32     ecmenu_ITEMS + 264

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable185:
   \   00000000   ........           DC32     ecmenu_ITEMS + 264

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable187:
   \   00000000   ........           DC32     `?<Constant "\\\\">` + 2

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable188:
   \   00000000   ........           DC32     SendAnswer

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable189:
   \   00000000   ........           DC32     UIN

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable190:
   \   00000000   ........           DC32     s_top

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable191:
   \   00000000   ........           DC32     lgpData

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for ss>`:
   \   00000000   ........           DC32 `?<Constant "%s%s">`

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for sd>`:
   \   00000000   ........           DC32 `?<Constant "%s%d">`

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for sw>`:
   \   00000000   ........           DC32 `?<Constant "%s%w">`

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for s>`:
   \   00000000   ........           DC32 `?<Constant "%s">`

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for ecmenu_ITEMS>`:
   \   00000000   000000000000       DC32 0H, 0, 2147483647, 0, 0H, 3, 1442, 0H, 0, 2147483647, 0, 0H, 3
   \              0000FFFFFF7F
   \              000000000000
   \              000003000000
   \              A20500000000
   \              000000000000
   \              FFFFFF7F0000
   \              000000000000
   \              03000000    
   \   00000034   A20500000000       DC32 1442, 0H, 0, 2147483647, 0, 0H, 3, 1442, 0H, 0, 2147483647, 0, 0H
   \              000000000000
   \              FFFFFF7F0000
   \              000000000000
   \              03000000A205
   \              000000000000
   \              00000000FFFF
   \              FF7F00000000
   \              00000000    
   \   00000068   03000000A205       DC32 3, 1442, 0H, 0, 2147483647, 0, 0H, 3, 1442, 0H, 0, 2147483647, 0
   \              000000000000
   \              00000000FFFF
   \              FF7F00000000
   \              000000000300
   \              0000A2050000
   \              000000000000
   \              0000FFFFFF7F
   \              00000000    
   \   0000009C   000000000300       DC32 0H, 3, 1442, 0H, 0, 2147483647, 0, 0H, 3, 1442, 0H, 0, 2147483647
   \              0000A2050000
   \              000000000000
   \              0000FFFFFF7F
   \              000000000000
   \              000003000000
   \              A20500000000
   \              000000000000
   \              FFFFFF7F    
   \   000000D0   000000000000       DC32 0, 0H, 3, 1442, 0H, 0, 2147483647, 0, 0H, 3, 1442
   \              000003000000
   \              A20500000000
   \              000000000000
   \              FFFFFF7F0000
   \              000000000000
   \              03000000A205
   \              0000        
   \                     `?<Initializer for empty_string>`:
   \   000000FC   ........           DC32 `?<Constant "">`
   \                     `?<Initializer for AutoStatusEvent>`:
   \   00000100   00000000           DC32 0
   \                     `?<Initializer for RXstate>`:
   \   00000104   F6FFFFFF           DC32 -10
   \                     `?<Initializer for connect_state>`:
   \   00000108   00000000           DC32 0
   \                     `?<Initializer for sock>`:
   \   0000010C   FFFFFFFF           DC32 -1
   \                     `?<Initializer for sendq_l>`:
   \   00000110   00000000           DC32 0
   \                     `?<Initializer for sendq_p>`:
   \   00000114   00000000           DC32 0H
   \                     `?<Initializer for is_gprs_online>`:
   \   00000118   01000000           DC32 1
   \                     `?<Initializer for gprsdown>`:
   \   0000011C   00000000           DC32 0
   \                     `?<Initializer for DNR_ID>`:
   \   00000120   00000000           DC32 0
   \                     `?<Initializer for DNR_TRIES>`:
   \   00000124   03000000           DC32 3
   \                     `?<Initializer for host_counter>`:
   \   00000128   FFFFFFFF           DC32 -1

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for contactlist_menuhdr>`:
   \   00000000   000000000000       DC16 0, 0, 0, 0
   \              0000        
   \   00000008   ............       DC32 S_ICONS + 4CH, clm_hdr_text, 2147483647
   \              ....FFFFFF7F
   \                     `?<Initializer for menu_sk>`:
   \   00000014   18000000           DC16 24, 0
   \   00000018   00000000           DC32 0
   \   0000001C   01000000           DC16 1, 0
   \   00000020   00000000           DC32 0
   \   00000024   3D000000           DC16 61, 0
   \   00000028   FBC0FF7F           DC32 2147467515
   \                     `?<Initializer for clmenu_sk>`:
   \   0000002C   18000000           DC16 24, 0
   \   00000030   00000000           DC32 0
   \   00000034   01000000           DC16 1, 0
   \   00000038   ........           DC32 clmenu_sk_r
   \   0000003C   3D000000           DC16 61, 0
   \   00000040   FBC0FF7F           DC32 2147467515

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for MAINCSM>`:
   \   00000000   ............       DC32 maincsm_onmessage, maincsm_oncreate, 0, 0, 0, 0, maincsm_onclose
   \              ....00000000
   \              000000000000
   \              000000000000
   \              ........    
   \   0000001C   2C0000000100       DC32 44, 1, minus11, maincsm_name_body, 55AACCCCH, 3333AA55H, 0
   \              0000........
   \              ........CCCC
   \              AA5555AA3333
   \              00000000    
   \   00000038   8B00               DC16 139
   \   0000003A   0000               DC8 0, 0
   \   0000003C   49636F6E4261       DC8 "IconBar"
   \              7200        
   \   00000044   00000000           DC8 0, 0, 0, 0

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for sk>`:
   \   00000000   FF0F0000           DC16 4095, 0
   \   00000004   00000000           DC32 0
   \                     `?<Initializer for sk_cancel>`:
   \   00000008   F00F0000           DC16 4080, 0
   \   0000000C   00000000           DC32 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "invisible.png">`:
   \   00000000   696E76697369       DC8 "invisible.png"
   \              626C652E706E
   \              6700        
   \   0000000E   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "offline.png">`:
   \   00000000   6F66666C696E       DC8 "offline.png"
   \              652E706E6700

   \                                 In segment DATA_C, align 1, align-sorted
   \                     `?<Constant "">`:
   \   00000000   00                 DC8 ""

   \                                 In segment DATA_C, align 1, align-sorted
   \                     `?<Constant "%s">`:
   \   00000000   257300             DC8 "%s"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "%s%w">`:
   \   00000000   2573257700         DC8 "%s%w"
   \   00000005   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "%s%d">`:
   \   00000000   2573256400         DC8 "%s%d"
   \   00000005   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "%s%s">`:
   \   00000000   2573257300         DC8 "%s%s"
   \   00000005   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   257700             DC8 "%w"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "bcfg">`:
   \   00000000   6263666700         DC8 "bcfg"
   \   00000005   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "abcdefghijklmnopqrstu...">`:
   \   00000000   616263646566       DC8 61H, 62H, 63H, 64H, 65H, 66H, 67H, 68H
   \              6768        
   \   00000008   696A6B6C6D6E       DC8 69H, 6AH, 6BH, 6CH, 6DH, 6EH, 6FH, 70H
   \              6F70        
   \   00000010   717273747576       DC8 71H, 72H, 73H, 74H, 75H, 76H, 77H, 78H
   \              7778        
   \   00000018   797A41424344       DC8 79H, 7AH, 41H, 42H, 43H, 44H, 45H, 46H
   \              4546        
   \   00000020   4748494A4B4C       DC8 47H, 48H, 49H, 4AH, 4BH, 4CH, 4DH, 4EH
   \              4D4E        
   \   00000028   4F5051525354       DC8 4FH, 50H, 51H, 52H, 53H, 54H, 55H, 56H
   \              5556        
   \   00000030   5758595A3031       DC8 57H, 58H, 59H, 5AH, 30H, 31H, 32H, 33H
   \              3233        
   \   00000038   343536373839       DC8 34H, 35H, 36H, 37H, 38H, 39H, 24H, 2DH
   \              242D        
   \   00000040   5F2E2B212A27       DC8 5FH, 2EH, 2BH, 21H, 2AH, 27H, 28H, 29H
   \              2829        
   \   00000048   2C253B3A4026       DC8 2CH, 25H, 3BH, 3AH, 40H, 26H, 23H, 3DH
   \              233D        
   \   00000050   2F3F23E0E1E2       DC8 2FH, 3FH, 23H, 0E0H, 0E1H, 0E2H, 0E3H, 0E4H
   \              E3E4        
   \   00000058   E5B8E6E7E8E9       DC8 0E5H, 0B8H, 0E6H, 0E7H, 0E8H, 0E9H, 0EAH, 0EBH
   \              EAEB        
   \   00000060   ECEDEEEFF0F1       DC8 0ECH, 0EDH, 0EEH, 0EFH, 0F0H, 0F1H, 0F2H, 0F3H
   \              F2F3        
   \   00000068   F4F5F6F7F8F9       DC8 0F4H, 0F5H, 0F6H, 0F7H, 0F8H, 0F9H, 0FAH, 0FBH
   \              FAFB        
   \   00000070   FCFDFEFFC0C1       DC8 0FCH, 0FDH, 0FEH, 0FFH, 0C0H, 0C1H, 0C2H, 0C3H
   \              C2C3        
   \   00000078   C4C5A8C6C7C8       DC8 0C4H, 0C5H, 0A8H, 0C6H, 0C7H, 0C8H, 0C9H, 0CAH
   \              C9CA        
   \   00000080   CBCCCDCECFD0       DC8 0CBH, 0CCH, 0CDH, 0CEH, 0CFH, 0D0H, 0D1H, 0D2H
   \              D1D2        
   \   00000088   D3D4D5D6D7D8       DC8 0D3H, 0D4H, 0D5H, 0D6H, 0D7H, 0D8H, 0D9H, 0DAH
   \              D9DA        
   \   00000090   DBDCDDDEDF7E       DC8 0DBH, 0DCH, 0DDH, 0DEH, 0DFH, 7EH, 0
   \              00          
   \   00000097   00                 DC8 0
   \   00000098   687474703A2F       DC8 "http://"
   \              2F00        
   \   000000A0   7777772E00         DC8 "www."
   \   000000A5   000000             DC8 0, 0, 0
   \   000000A8   616263646566       DC8 61H, 62H, 63H, 64H, 65H, 66H, 67H, 68H
   \              6768        
   \   000000B0   696A6B6C6D6E       DC8 69H, 6AH, 6BH, 6CH, 6DH, 6EH, 6FH, 70H
   \              6F70        
   \   000000B8   717273747576       DC8 71H, 72H, 73H, 74H, 75H, 76H, 77H, 78H
   \              7778        
   \   000000C0   797A41424344       DC8 79H, 7AH, 41H, 42H, 43H, 44H, 45H, 46H
   \              4546        
   \   000000C8   4748494A4B4C       DC8 47H, 48H, 49H, 4AH, 4BH, 4CH, 4DH, 4EH
   \              4D4E        
   \   000000D0   4F5051525354       DC8 4FH, 50H, 51H, 52H, 53H, 54H, 55H, 56H
   \              5556        
   \   000000D8   5758595A3031       DC8 57H, 58H, 59H, 5AH, 30H, 31H, 32H, 33H
   \              3233        
   \   000000E0   343536373839       DC8 34H, 35H, 36H, 37H, 38H, 39H, 24H, 2DH
   \              242D        
   \   000000E8   5F2E2B212A23       DC8 5FH, 2EH, 2BH, 21H, 2AH, 23H, 27H, 28H
   \              2728        
   \   000000F0   292C253B3A40       DC8 29H, 2CH, 25H, 3BH, 3AH, 40H, 26H, 3DH
   \              263D        
   \   000000F8   2F3FE0E1E2E3       DC8 2FH, 3FH, 0E0H, 0E1H, 0E2H, 0E3H, 0E4H, 0E5H
   \              E4E5        
   \   00000100   B8E6E7E8E9EA       DC8 0B8H, 0E6H, 0E7H, 0E8H, 0E9H, 0EAH, 0EBH, 0ECH
   \              EBEC        
   \   00000108   EDEEEFF0F1F2       DC8 0EDH, 0EEH, 0EFH, 0F0H, 0F1H, 0F2H, 0F3H, 0F4H
   \              F3F4        
   \   00000110   F5F6F7F8F9FA       DC8 0F5H, 0F6H, 0F7H, 0F8H, 0F9H, 0FAH, 0FBH, 0FCH
   \              FBFC        
   \   00000118   FDFEFFC0C1C2       DC8 0FDH, 0FEH, 0FFH, 0C0H, 0C1H, 0C2H, 0C3H, 0C4H
   \              C3C4        
   \   00000120   C5A8C6C7C8C9       DC8 0C5H, 0A8H, 0C6H, 0C7H, 0C8H, 0C9H, 0CAH, 0CBH
   \              CACB        
   \   00000128   CCCDCECFD0D1       DC8 0CCH, 0CDH, 0CEH, 0CFH, 0D0H, 0D1H, 0D2H, 0D3H
   \              D2D3        
   \   00000130   D4D5D6D7D8D9       DC8 0D4H, 0D5H, 0D6H, 0D7H, 0D8H, 0D9H, 0DAH, 0DBH
   \              DADB        
   \   00000138   DCDDDEDF00         DC8 0DCH, 0DDH, 0DEH, 0DFH, 0
   \   0000013D   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\\\">_1`:
   \   00000000   5C00               DC8 "\\"
   \   00000002   0000               DC8 0, 0
   \   00000004   257325755C25       DC8 "%s%u\\%u.txt"
   \              752E74787400
   \   00000010   257325752E74       DC8 "%s%u.txt"
   \              787400      
   \   00000019   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "%w %d">`:
   \   00000000   257720256400       DC8 "%w %d"
   \   00000006   0000               DC8 0, 0
   \   00000008   25774E617449       DC8 "%wNatICQ:"
   \              43513A00    
   \   00000012   0000               DC8 0, 0
   \   00000014   25775B25645D       DC8 "%w[%d] "
   \              2000        
   \   0000001C   257725632000       DC8 "%w%c "
   \   00000022   0000               DC8 0, 0
   \   00000024   257720257700       DC8 "%w %w"
   \   0000002A   0000               DC8 0, 0

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   257500             DC8 "%u"

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   3A0A00             DC8 ":\012"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "%02d:%02d:%02d %02d-%...">`:
   \   00000000   253032643A25       DC8 "%02d:%02d:%02d %02d-%02d %s:"
   \              3032643A2530
   \              326420253032
   \              642D25303264
   \              2025733A00  
   \   0000001D   000000             DC8 0, 0, 0
   \   00000020   253032643A25       DC8 "%02d:%02d:%02d %02d-%02d %s:\015\012"
   \              3032643A2530
   \              326420253032
   \              642D25303264
   \              2025733A0D0A
   \              00          
   \   0000003F   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Ping %d-%d seconds!">`:
   \   00000000   50696E672025       DC8 "Ping %d-%d seconds!"
   \              642D25642073
   \              65636F6E6473
   \              2100        
   \   00000014   4D534725643A       DC8 "MSG%d: %s"
   \              20257300    
   \   0000001E   0000               DC8 0, 0
   \   00000020   4572726F7220       DC8 "Error code 1"
   \              636F64652031
   \              00          
   \   0000002D   000000             DC8 0, 0, 0
   \   00000030   CDEEECE5F0EE       DC8 "\315\356\354\345\360\356\354 \347\340\370\353\350 \361 \344\360\363\343\356\343\356 \352\353\350\345\355\362\340"
   \              EC20E7E0F8EB
   \              E820F120E4F0
   \              F3E3EEE3EE20
   \              EAEBE8E5EDF2
   \              E000        
   \   00000050   4552523A2025       DC8 "ERR: %s"
   \              7300        
   \   00000058   426164207061       DC8 "Bad packet"
   \              636B657400  
   \   00000063   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \   00000000   31313000           DC8 "110"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Send error!">`:
   \   00000000   53656E642065       DC8 "Send error!"
   \              72726F722100
   \   0000000C   53656E642064       DC8 "Send delayed..."
   \              656C61796564
   \              2E2E2E00    
   \   0000001C   73656E642072       DC8 "send res %d"
   \              657320256400

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\315\\345\\342\\356\\347\\354\\356\\346\\3`:
   \   00000000   CDE5E2EEE7EC       DC8 "\315\345\342\356\347\354\356\346\355\356 \357\356\344\352\353\376\367\350\362\374\361\377!"
   \              EEE6EDEE20EF
   \              EEE4EAEBFEF7
   \              E8F2FCF1FF21
   \              00          
   \   00000019   000000             DC8 0, 0, 0
   \   0000001C   25733A25640A       DC8 "%s:%d\012(IP: %d.%d.%d.%d)"
   \              2849503A2025
   \              642E25642E25
   \              642E25642900
   \   00000034   444E52204F6B       DC8 "DNR Ok, connecting..."
   \              2C20636F6E6E
   \              656374696E67
   \              2E2E2E00    
   \   0000004A   0000               DC8 0, 0
   \   0000004C   444E52204552       DC8 "DNR ERROR %d %d!"
   \              524F52202564
   \              2025642100  
   \   0000005D   000000             DC8 0, 0, 0
   \   00000060   53656E642044       DC8 "Send DNR..."
   \              4E522E2E2E00
   \   0000006C   0A436F6E6E65       DC8 "\012Connect by IP!"
   \              637420627920
   \              49502100    
   \   0000007C   25733A256400       DC8 "%s:%d"
   \   00000082   0000               DC8 0, 0
   \   00000084   57616974696E       DC8 "Waiting for GPRS up..."
   \              6720666F7220
   \              475052532075
   \              702E2E2E00  
   \   0000009B   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\\\">_2`:
   \   00000000   5C00               DC8 "\\"
   \   00000002   0000               DC8 0, 0
   \   00000004   6164642000         DC8 "add "
   \   00000009   000000             DC8 0, 0, 0
   \   0000000C   302E74787400       DC8 "0.txt"
   \   00000012   0000               DC8 0, 0
   \   00000014   25642E747874       DC8 "%d.txt"
   \              00          
   \   0000001B   00                 DC8 0

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   7C2000             DC8 "| "

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "vis5.png">`:
   \   00000000   766973352E70       DC8 "vis5.png"
   \              6E6700      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "vis4.png">`:
   \   00000000   766973342E70       DC8 "vis4.png"
   \              6E6700      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "vis3.png">`:
   \   00000000   766973332E70       DC8 "vis3.png"
   \              6E6700      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "vis2.png">`:
   \   00000000   766973322E70       DC8 "vis2.png"
   \              6E6700      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "vis1.png">`:
   \   00000000   766973312E70       DC8 "vis1.png"
   \              6E6700      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "settings.png">`:
   \   00000000   73657474696E       DC8 "settings.png"
   \              67732E706E67
   \              00          
   \   0000000D   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "ping.png">`:
   \   00000000   70696E672E70       DC8 "ping.png"
   \              6E6700      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "logo.png">`:
   \   00000000   6C6F676F2E70       DC8 "logo.png"
   \              6E6700      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "head.png">`:
   \   00000000   686561642E70       DC8 "head.png"
   \              6E6700      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "groupon.png">`:
   \   00000000   67726F75706F       DC8 "groupon.png"
   \              6E2E706E6700

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "addcont.png">`:
   \   00000000   616464636F6E       DC8 "addcont.png"
   \              742E706E6700

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "null.png">`:
   \   00000000   6E756C6C2E70       DC8 "null.png"
   \              6E6700      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "groupoff.png">`:
   \   00000000   67726F75706F       DC8 "groupoff.png"
   \              66662E706E67
   \              00          
   \   0000000D   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "unknown.png">`:
   \   00000000   756E6B6E6F77       DC8 "unknown.png"
   \              6E2E706E6700

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "message.png">`:
   \   00000000   6D6573736167       DC8 "message.png"
   \              652E706E6700

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "ffc.png">`:
   \   00000000   6666632E706E       DC8 "ffc.png"
   \              6700        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "online.png">`:
   \   00000000   6F6E6C696E65       DC8 "online.png"
   \              2E706E6700  
   \   0000000B   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "work.png">`:
   \   00000000   776F726B2E70       DC8 "work.png"
   \              6E6700      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "lunch.png">`:
   \   00000000   6C756E63682E       DC8 "lunch.png"
   \              706E6700    
   \   0000000A   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "home.png">`:
   \   00000000   686F6D652E70       DC8 "home.png"
   \              6E6700      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "evil.png">`:
   \   00000000   6576696C2E70       DC8 "evil.png"
   \              6E6700      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "depression.png">`:
   \   00000000   646570726573       DC8 "depression.png"
   \              73696F6E2E70
   \              6E6700      
   \   0000000F   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "dnd.png">`:
   \   00000000   646E642E706E       DC8 "dnd.png"
   \              6700        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "occupied.png">`:
   \   00000000   6F6363757069       DC8 "occupied.png"
   \              65642E706E67
   \              00          
   \   0000000D   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "na.png">`:
   \   00000000   6E612E706E67       DC8 "na.png"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "away.png">`:
   \   00000000   617761792E70       DC8 "away.png"
   \              6E6700      
   \   00000009   000000             DC8 0, 0, 0

   Maximum stack usage in bytes:

     Function                  CSTACK
     --------                  ------
     ActionOnCurContact           16
     AddContactT9Key              12
     AddCurContact                 4
     AddLOGQ                       0
     AddMsgToChat                108
     AddSmile                      4
     AddStringToLog              192
     AskNickAndAddContact          4
     BackSpaceContactT9            8
     ChangeSound                   4
     ChangeVibra                   4
     CheckDoubleRun                8
     ClearContactT9Key             4
     ClearLog                     60
     ClearSendQ                    8
     CreateEditChat              116
     DeleteContactFromList         4
     DrawAck                      80
     ElfKiller                     4
     ExtractAnswer                36
     FindContactLOGQByAck         12
     FindNextActiveContact         0
     FindPrevActiveContact         0
     FreeLOGQ                      8
     FreeTemplates                 8
     GetHost                       0
     GetHostsCount                 0
     GetIconIndex                  0
     GetLastXTextLOGQ              0
     GetOnTotalContact             8
     GetPort                      16
     GetShortInfo                 20
     GetTempName                  20
     IlluminationOff               8
     IlluminationOn               28
     InAway                        0
     IsUrl                        44
     LastLOGQ                      0
     LoadTemplates               348
     NewLOGQ                      12
     OpenConfig                   12
     OpenLogfile                 152
     ParseAnswer                  36
     ParseXStatusText             20
     Play                        236
     ProcessPacket               296
     Quote                       152
     ReadDefSettings             152
     RecountMenu                  20
     RemoveCurContact              4
     RemoveLOGQ                    4
     ReqAddMsgToChat              16
     RequestXText                  8
     SMART_REDRAW                  8
     SaveAnswer                   12
     SendAnswer                   32
     SendAuthGrant                28
     SendAuthReq                  28
     SendMSGACK                    8
     SetIconBarHandler             0
     SetSLI                        4
     UpdateCLheader               24
     UpdateCSMname                24
     UpdateSLIState                4
     WriteDefSettings            152
     addIconBar                   12
     ask_my_info                   0
     atoi                          4
     contactlist_menu_ghook        8
     contactlist_menu_iconhndl   668
     contactlist_menu_onkey       36
     create_connect              200
     create_contactlist_menu      24
     do_ping                       4
     do_reconnect                  4
     ec_menu                      76
     ecmenu_ghook                  4
     ed_options_handler           64
     edchat_ghook                 76
     edchat_locret                 0
     edchat_onkey                476
     end_socket                    8
     free_ICONS                   16
     get_answer                 7232
     lgpUpdateClHdr               12
     main                         60
     maincsm_onclose               8
     maincsm_oncreate             20
     maincsm_onmessage            72
     method8                       0
     method9                       0
     my_ed_redraw                 12
     onClose                       8
     onCreate                     16
     onFocus                       8
     onKey                        28
     onRedraw                     88
     onUnfocus                     8
     process_active_timer         12
     set_my_status                 4
     set_my_xstatus               36
     setup_ICONS                 148
     start_vibra                   8
     stop_vibra                    4
     to_develop                    4
     wstrstr                      32


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     deleting_contact                   4
     ss                                 4
     sd                                 4
     sw                                 4
     s                                  4
     SMART_REDRAW                      48
     setup_ICONS                      168
     free_ICONS                        44
     IlluminationOff                   60
     IlluminationOn                   120
     InAway                            60
     ReadDefSettings                  240
     WriteDefSettings                 236
     Play                             316
     start_vibra                      124
     stop_vibra                        84
     ChangeVibra                       56
     ChangeSound                       56
     SetSLI                            16
     UpdateSLIState                    64
     FreeTemplates                     56
     LoadTemplates                   1268
     ElfKiller                         28
     lgpUpdateClHdr                    64
     NewLOGQ                           52
     LastLOGQ                          36
     FreeLOGQ                          48
     RemoveLOGQ                        52
     AddLOGQ                           44
     GetLastXTextLOGQ                  72
     GetIconIndex                     228
     FindContactLOGQByAck              88
     UpdateCLheader                   108
     ClearContactT9Key                 24
     AddContactT9Key                   36
     BackSpaceContactT9                36
     create_contactlist_menu          140
     contactlist_menu_ghook            72
     RecountMenu                      160
     contactlist_menu_onkey           752
     GetOnTotalContact                 92
     contactlist_menu_iconhndl        788
     GetHost                          192
     atoi                              84
     GetPort                          276
     GetHostsCount                    120
     create_connect                   744
     ClearSendQ                        32
     end_socket                        40
     SendAnswer                       384
     do_ping                           52
     SendMSGACK                        52
     RequestXText                      52
     get_answer                      1200
     AddStringToLog                   692
     ParseXStatusText                 152
     AddMsgToChat                     856
     DrawAck                          340
     ask_my_info                        4
     set_my_status                     68
     set_my_xstatus                   264
     to_develop                        80
     ReqAddMsgToChat                  120
     ProcessPacket                   2072
     process_active_timer             140
     onRedraw                         892
     onCreate                          68
     onClose                           36
     onFocus                           36
     onUnfocus                         36
     onKey                            204
     method8                            8
     method9                            8
     Canvas                           444
     S_OFFLINE                          8
     S_INVISIBLE                       12
     S_AWAY                             8
     S_NA                               4
     S_OCCUPIED                        12
     S_DND                              4
     S_ONLINE                           8
     S_FFC                              4
     ?<Constant "\\">_3               116
     empty_str                          1
     ?<Constant "\\">                  32
     def_setting                       20
     menusoftkeys                      12
     menu_skt                           8
     clmenu_skt                         8
     contactlist_menu                  48
     maincsm_oncreate                 252
     maincsm_onclose                  136
     do_reconnect                      40
     CheckDoubleRun                   124
     maincsm_onmessage               2140
     minus11                            4
     addIconBar                       148
     UpdateCSMname                    364
     SetIconBarHandler                 20
     OpenConfig                       120
     main                             224
     edchat_locret                      4
     ExtractAnswer                    280
     ??FindNextActiveContact_0         64
     FindPrevActiveContact             88
     ed_options_handler               448
     wstrstr                          124
     IsUrl                            424
     ParseAnswer                      544
     SaveAnswer                        36
     GetTempName                      172
     DMonth                            52
     edchat_onkey                    1096
     my_ed_redraw                     112
     edchat_ghook                     596
     S_ICONS                         1128
     RXbuf                          16392
     TXbuf                          16392
     def_clm_hdr_text                 128
     maincsm_name_body                280
     edchat_desc                       84
     CreateEditChat                  1200
     Quote                            416
     GetShortInfo                     160
     AddCurContact                     52
     ActionOnCurContact               112
     DeleteContactFromList             32
     RemoveCurContact                  44
     SendAuthReq                      180
     SendAuthGrant                    180
     OpenLogfile                      252
     ClearLog                         240
     ecmenu_ghook                      20
     ecmenu_ITEMS                     300
     contactlist_menuhdr               68
     MAINCSM                           72
     sk                                16
     ecmenu_HNDLS                      36
     ecm_contactname                   64
     ecmenu_HDR                        64
     ec_menu                          436
     AskNickAndAddContact               8
     AddSmile                          24
     ??DataTable1                       4
     ??DataTable3                       4
     ??DataTable7                       4
     ??DataTable8                       4
     ??DataTable13                      4
     ??DataTable19                      4
     ??DataTable23                      4
     ??DataTable27                      4
     ??DataTable28                      4
     ??DataTable31                      4
     ??DataTable33                      4
     ??DataTable34                      4
     ??DataTable35                      4
     ??DataTable38                      4
     ??DataTable39                      4
     ??DataTable42                      4
     ??DataTable43                      4
     ??DataTable44                      4
     ??DataTable50                      4
     ??DataTable51                      4
     ??DataTable52                      4
     ??DataTable55                      4
     ??DataTable57                      4
     ??DataTable58                      4
     ??DataTable59                      4
     ??DataTable67                      4
     ??DataTable68                      4
     ??DataTable70                      4
     ??DataTable71                      4
     ??DataTable72                      4
     ??DataTable73                      4
     ??DataTable74                      4
     ??DataTable75                      4
     ??DataTable76                      4
     ??DataTable77                      4
     ??DataTable78                      4
     ??DataTable81                      4
     ??DataTable84                      4
     ??DataTable87                      4
     ??DataTable88                      4
     ??DataTable89                      4
     ??DataTable94                      4
     ??DataTable95                      4
     ??DataTable96                      4
     ??DataTable97                      4
     ??DataTable103                     4
     ??DataTable104                     4
     ??DataTable114                     4
     ??DataTable115                     4
     ??DataTable116                     4
     ??DataTable120                     4
     ??DataTable121                     4
     ??DataTable123                     4
     ??DataTable124                     4
     ??DataTable126                     4
     ??DataTable127                     4
     ??DataTable128                     4
     ??DataTable129                     4
     ??DataTable131                     4
     ??DataTable132                     4
     ??DataTable137                     4
     ??DataTable138                     4
     ??DataTable139                     4
     ??DataTable140                     4
     ??DataTable141                     4
     ??DataTable143                     4
     ??DataTable147                     4
     ??DataTable148                     4
     ??DataTable153                     4
     ??DataTable155                     4
     ??DataTable156                     4
     ??DataTable157                     4
     ??DataTable158                     4
     ??DataTable159                     4
     ??DataTable160                     4
     ??DataTable161                     4
     ??DataTable162                     4
     ??DataTable163                     4
     ??DataTable164                     4
     ??DataTable165                     4
     ??DataTable166                     4
     ??DataTable167                     4
     ??DataTable168                     4
     ??DataTable169                     4
     ??DataTable170                     4
     ??DataTable172                     4
     ??DataTable174                     4
     ??DataTable180                     4
     ??DataTable181                     4
     ??DataTable185                     4
     ??DataTable187                     4
     ??DataTable188                     4
     ??DataTable189                     4
     ??DataTable190                     4
     ??DataTable191                     4
     ?<Initializer for ss>              4
     ?<Initializer for sd>              4
     ?<Initializer for sw>              4
     ?<Initializer for s>               4
     ?<Initializer for ecmenu_ITEMS>
                                      300
     ?<Initializer for contactlist_menuhdr>
                                       68
     ?<Initializer for MAINCSM>        72
     ?<Initializer for sk>             16
     ?<Constant "invisible.png">       16
     ?<Constant "offline.png">         12
     ?<Constant "">                     1
     ?<Constant "%s">                   3
     ?<Constant "%s%w">                 8
     ?<Constant "%s%d">                 8
     ?<Constant "%s%s">                 8
     ?<Constant "%w">                   3
     ?<Constant "bcfg">                 8
     ?<Constant "abcdefghijklmnopqrstu...">
                                      320
     ?<Constant "\\">_1                28
     ?<Constant "%w %d">               44
     ?<Constant "%u">                   3
     ?<Constant ":\n">                  3
     ?<Constant "%02d:%02d:%02d %02d-%...">
                                       64
     ?<Constant "Ping %d-%d seconds!">
                                      100
     ?<Constant "110">                  4
     ?<Constant "Send error!">         40
     ?<Constant "\315\345\342\356\347\354\356\346\3
                                      156
     ?<Constant "\\">_2                28
     ?<Constant "| ">                   3
     ?<Constant "vis5.png">            12
     ?<Constant "vis4.png">            12
     ?<Constant "vis3.png">            12
     ?<Constant "vis2.png">            12
     ?<Constant "vis1.png">            12
     ?<Constant "settings.png">        16
     ?<Constant "ping.png">            12
     ?<Constant "logo.png">            12
     ?<Constant "head.png">            12
     ?<Constant "groupon.png">         12
     ?<Constant "addcont.png">         12
     ?<Constant "null.png">            12
     ?<Constant "groupoff.png">        16
     ?<Constant "unknown.png">         12
     ?<Constant "message.png">         12
     ?<Constant "ffc.png">              8
     ?<Constant "online.png">          12
     ?<Constant "work.png">            12
     ?<Constant "lunch.png">           12
     ?<Constant "home.png">            12
     ?<Constant "evil.png">            12
     ?<Constant "depression.png">      16
     ?<Constant "dnd.png">              8
     ?<Constant "occupied.png">        16
     ?<Constant "na.png">               8
     ?<Constant "away.png">            12
      Others                          964

 
 27 472 bytes in segment CODE
  2 165 bytes in segment DATA_C
    472 bytes in segment DATA_I
    472 bytes in segment DATA_ID
 34 388 bytes in segment DATA_Z
     24 bytes in segment INITTAB
 
 26 532 bytes of CODE  memory (+ 964 bytes shared)
  2 637 bytes of CONST memory
 34 860 bytes of DATA  memory

Errors: none
Warnings: none
