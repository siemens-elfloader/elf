##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION    22/May/2009  19:10:28 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  D:\pasha\elf\SVN2\CfgEdit\visual.c                   #
#    Command line    =  D:\pasha\elf\SVN2\CfgEdit\visual.c -D NEWSGOLD -D    #
#                       ELKA -lC D:\pasha\elf\SVN2\CfgEdit\Release_ELKA\List #
#                       \ -o D:\pasha\elf\SVN2\CfgEdit\Release_ELKA\Obj\     #
#                       -s9 --no_unroll --cpu_mode arm --endian little       #
#                       --cpu ARM926EJ-S --stack_align 4 --interwork -e      #
#                       --fpu None --dlib_config "D:\pasha\Embedded          #
#                       Workbench 4.0 Evaluation2\ARM\LIB\dl5tpainl8n.h" -I  #
#                       "D:\pasha\Embedded Workbench 4.0                     #
#                       Evaluation2\ARM\INC\" --inline_threshold=2           #
#    List file       =  D:\pasha\elf\SVN2\CfgEdit\Release_ELKA\List\visual.l #
#                       st                                                   #
#    Object file     =  D:\pasha\elf\SVN2\CfgEdit\Release_ELKA\Obj\visual.r7 #
#                       9                                                    #
#                                                                            #
#                                                                            #
##############################################################################

D:\pasha\elf\SVN2\CfgEdit\visual.c
      1          #include "..\inc\swilib.h"
      2          #include "rect_patcher.h"

   \                                 In segment DATA_I, align 4, align-sorted
      3          char colors[4][4]={{0xFF,0,0,0x64},{0,0xFF,0,0x64},{0,0,0xFF,0x64},{0xC6,0xAA,0xAF,0x32}};
   \                     colors:
   \   00000000                      DS8 16
   \   00000010                      REQUIRE `?<Initializer for colors>`
      4          char black[4]={0x00,0x00,0x00,0x64};
   \                     black:
   \   00000010                      DS8 4
   \   00000014                      REQUIRE `?<Initializer for black>`
      5          char white[4]={0xFF,0xFF,0xFF,0x64};
   \                     white:
   \   00000014                      DS8 4
   \   00000018                      REQUIRE `?<Initializer for white>`
      6          char transparent[4]={0x00,0x00,0x00,0x00};
   \                     transparent:
   \   00000018                      DS8 4
   \   0000001C                      REQUIRE `?<Initializer for transparent>`
      7          extern long  strtol (const char *nptr,char **endptr,int base);
      8          extern unsigned long  strtoul (const char *nptr,char **endptr,int base);
      9          #define MIN(a,b) (a<b)?a:b
     10          #define MAX(a,b) (a>b)?a:b
     11          
     12          //  YDISP нам больше не нужен так как иконбар отключим
     13          #ifdef ELKA  
     14          #undef YDISP
     15          #define   YDISP 0
     16          #endif
     17          
     18          typedef struct
     19          {
     20            GUI gui;
     21            WSHDR *ws1;
     22            int is_rect_needed;
     23            int is_first_set;
     24            int x_pos;
     25            int y_pos;
     26            int x2_pos;
     27            int y2_pos;
     28            union
     29            {
     30              unsigned int *xy;
     31              RECT *rc;
     32            };
     33            int cstep;
     34          }RECT_GUI;
     35          

   \                                 In segment DATA_C, align 4, align-sorted
     36          const char Pointer[5]={0x27,0x27,0xFF,0x27,0x27};
   \                     Pointer:
   \   00000000   2727FF272700       DC8 39, 39, 255, 39, 39, 0, 0, 0
   \              0000        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "%u,%u,%u,%u">`:
   \   00000000   25752C25752C       DC8 "%u,%u,%u,%u"
   \              25752C257500
   \   0000000C   25752C257500       DC8 "%u,%u"
   \   00000012   0000               DC8 0, 0
     37          const IMGHDR imgPointer = {5,5,0x1,(char *)Pointer};
   \                     imgPointer:
   \   00000014   05000500           DC16 5, 5
   \   00000018   01000000....       DC32 1, Pointer
   \              ....        
     38          

   \                                 In segment CODE, align 4, keep-with-next
     39          void DrwImg(IMGHDR *img, int x, int y, char *pen, char *brush)
     40          {
   \                     DrwImg:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   2CD04DE2           SUB      SP,SP,#+44
   \   00000008   3C609DE5           LDR      R6,[SP, #+60]
   \   0000000C   0040A0E1           MOV      R4,R0
     41            RECT rc;
     42            DRWOBJ drwobj;
     43            StoreXYWHtoRECT(&rc,x,y,img->w,img->h);
   \   00000010   B200D4E1           LDRH     R0,[R4, #+2]
   \   00000014   0350A0E1           MOV      R5,R3
   \   00000018   01002DE9           PUSH     {R0}
   \   0000001C   B030D4E1           LDRH     R3,[R4, #+0]
   \   00000020   04008DE2           ADD      R0,SP,#+4
   \   00000024   330100EF           SWI      +307
     44            SetPropTo_Obj5(&drwobj,&rc,0,img);
   \   00000028   0430A0E1           MOV      R3,R4
   \   0000002C   0020A0E3           MOV      R2,#+0
   \   00000030   04108DE2           ADD      R1,SP,#+4
   \   00000034   0C008DE2           ADD      R0,SP,#+12
   \   00000038   510100EF           SWI      +337
     45            SetColor(&drwobj,pen,brush);
   \   0000003C   0620A0E1           MOV      R2,R6
   \   00000040   0510A0E1           MOV      R1,R5
   \   00000044   0C008DE2           ADD      R0,SP,#+12
   \   00000048   4B0100EF           SWI      +331
     46            DrawObject(&drwobj);
   \   0000004C   0C008DE2           ADD      R0,SP,#+12
   \   00000050   2A0100EF           SWI      +298
     47          }
   \   00000054   30D08DE2           ADD      SP,SP,#+48
   \   00000058   7080BDE8           POP      {R4-R6,PC}       ;; return
     48          extern char picpath[];

   \                                 In segment CODE, align 4, keep-with-next
     49          void method0_rect(RECT_GUI *data)
     50          {
   \                     method0_rect:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
     51            int scr_w=ScreenW();
     52            int scr_h=ScreenH();
     53            FSTATS fs;
     54            unsigned int ul;
     55            if (!GetFileStats(picpath,&fs,&ul))
   \   00000004   6C729FE5           LDR      R7,??method0_rect_0  ;; picpath
   \   00000008   6C629FE5           LDR      R6,??method0_rect_0+0x4  ;; colors
   \   0000000C   2CD04DE2           SUB      SP,SP,#+44
   \   00000010   0040A0E1           MOV      R4,R0
   \   00000014   888100EF           SWI      +33160
   \   00000018   0080A0E1           MOV      R8,R0
   \   0000001C   898100EF           SWI      +33161
   \   00000020   0050A0E1           MOV      R5,R0
   \   00000024   0D20A0E1           MOV      R2,SP
   \   00000028   04108DE2           ADD      R1,SP,#+4
   \   0000002C   0700A0E1           MOV      R0,R7
   \   00000030   840000EF           SWI      +132
   \   00000034   000050E3           CMP      R0,#+0
   \   00000038   0300001A           BNE      ??method0_rect_1
     56              DrawImg(0,0,(int)picpath);
   \   0000003C   0720A0E1           MOV      R2,R7
   \   00000040   0010A0E3           MOV      R1,#+0
   \   00000044   230000EF           SWI      +35
   \   00000048   2D0000EA           B        ??method0_rect_2
     57            else{
     58              DrawRectangle(0,YDISP,scr_w-1,scr_h-1,0,white,white);
   \                     ??method0_rect_1:
   \   0000004C   140086E2           ADD      R0,R6,#+20
   \   00000050   01002DE9           PUSH     {R0}
   \   00000054   01002DE9           PUSH     {R0}
   \   00000058   019048E2           SUB      R9,R8,#+1
   \   0000005C   017045E2           SUB      R7,R5,#+1
   \   00000060   0730A0E1           MOV      R3,R7
   \   00000064   0000A0E3           MOV      R0,#+0
   \   00000068   01002DE9           PUSH     {R0}
   \   0000006C   0920A0E1           MOV      R2,R9
   \   00000070   0010A0E3           MOV      R1,#+0
     59              // Нарисуем сетку
     60              for (int y_0=YDISP; y_0< scr_h;y_0+=10)
   \   00000074   00A0A0E3           MOV      R10,#+0
   \   00000078   B40100EF           SWI      +436
   \   0000007C   010055E3           CMP      R5,#+1
   \   00000080   0CD08DE2           ADD      SP,SP,#+12
   \   00000084   0B0000AA           BGE      ??method0_rect_3
   \   00000088   0C0000EA           B        ??method0_rect_4
     61              {
     62                DrawLine(0,y_0,scr_w-1,y_0,1,colors[3]);
   \                     ??method0_rect_5:
   \   0000008C   0C0086E2           ADD      R0,R6,#+12
   \   00000090   01002DE9           PUSH     {R0}
   \   00000094   0A30A0E1           MOV      R3,R10
   \   00000098   0920A0E1           MOV      R2,R9
   \   0000009C   0A10A0E1           MOV      R1,R10
   \   000000A0   0100A0E3           MOV      R0,#+1
   \   000000A4   01002DE9           PUSH     {R0}
     63              }  
   \   000000A8   0AA08AE2           ADD      R10,R10,#+10
   \   000000AC   0000A0E3           MOV      R0,#+0
   \   000000B0   B30100EF           SWI      +435
   \   000000B4   08D08DE2           ADD      SP,SP,#+8
   \                     ??method0_rect_3:
   \   000000B8   05005AE1           CMP      R10,R5
   \   000000BC   F2FFFFBA           BLT      ??method0_rect_5
     64              for (int x_0=0; x_0<scr_w;x_0+=10)
   \                     ??method0_rect_4:
   \   000000C0   0090A0E3           MOV      R9,#+0
   \   000000C4   010058E3           CMP      R8,#+1
   \   000000C8   0B0000AA           BGE      ??method0_rect_6
   \   000000CC   0C0000EA           B        ??method0_rect_2
     65              {
     66                DrawLine(x_0,YDISP,x_0, scr_h-1,1,colors[3]);
   \                     ??method0_rect_7:
   \   000000D0   0C0086E2           ADD      R0,R6,#+12
   \   000000D4   01002DE9           PUSH     {R0}
   \   000000D8   0730A0E1           MOV      R3,R7
   \   000000DC   0920A0E1           MOV      R2,R9
   \   000000E0   0010A0E3           MOV      R1,#+0
   \   000000E4   0100A0E3           MOV      R0,#+1
   \   000000E8   01002DE9           PUSH     {R0}
   \   000000EC   0900A0E1           MOV      R0,R9
     67              }
   \   000000F0   0A9089E2           ADD      R9,R9,#+10
   \   000000F4   B30100EF           SWI      +435
   \   000000F8   08D08DE2           ADD      SP,SP,#+8
   \                     ??method0_rect_6:
   \   000000FC   080059E1           CMP      R9,R8
   \   00000100   F2FFFFBA           BLT      ??method0_rect_7
     68            }
     69            
     70            if (data->is_rect_needed)
   \                     ??method0_rect_2:
   \   00000104   380094E5           LDR      R0,[R4, #+56]
   \   00000108   70919FE5           LDR      R9,??method0_rect_0+0x8  ;; `?<Constant "%u,%u,%u,%u">`
   \   0000010C   048048E2           SUB      R8,R8,#+4
   \   00000110   017045E2           SUB      R7,R5,#+1
   \   00000114   000050E3           CMP      R0,#+0
   \   00000118   3400000A           BEQ      ??method0_rect_8
     71            {
     72              DrawRoundedFrame(data->rc->x,data->rc->y,data->rc->x2,data->rc->y2,
     73                               0,0,0,colors[3],transparent); // Предыдущий рект
   \   0000011C   500094E5           LDR      R0,[R4, #+80]
   \   00000120   181086E2           ADD      R1,R6,#+24
   \   00000124   02002DE9           PUSH     {R1}
   \   00000128   0C1086E2           ADD      R1,R6,#+12
   \   0000012C   02002DE9           PUSH     {R1}
   \   00000130   0010A0E3           MOV      R1,#+0
   \   00000134   02002DE9           PUSH     {R1}
   \   00000138   02002DE9           PUSH     {R1}
   \   0000013C   02002DE9           PUSH     {R1}
   \   00000140   F630D0E1           LDRSH    R3,[R0, #+6]
   \   00000144   F420D0E1           LDRSH    R2,[R0, #+4]
   \   00000148   F210D0E1           LDRSH    R1,[R0, #+2]
   \   0000014C   F000D0E1           LDRSH    R0,[R0, #+0]
   \   00000150   500100EF           SWI      +336
     74              if (data->is_first_set)
   \   00000154   3C0094E5           LDR      R0,[R4, #+60]
   \   00000158   14D08DE2           ADD      SP,SP,#+20
   \   0000015C   000050E3           CMP      R0,#+0
   \   00000160   1700000A           BEQ      ??method0_rect_9
     75              {
     76                DrawRoundedFrame(data->x2_pos,data->y2_pos,data->x_pos,data->y_pos,
     77                                 0,0,0,black,transparent);
   \   00000164   180086E2           ADD      R0,R6,#+24
   \   00000168   01002DE9           PUSH     {R0}
   \   0000016C   100086E2           ADD      R0,R6,#+16
   \   00000170   01002DE9           PUSH     {R0}
   \   00000174   0000A0E3           MOV      R0,#+0
   \   00000178   01002DE9           PUSH     {R0}
   \   0000017C   01002DE9           PUSH     {R0}
   \   00000180   01002DE9           PUSH     {R0}
   \   00000184   443094E5           LDR      R3,[R4, #+68]
   \   00000188   402094E5           LDR      R2,[R4, #+64]
   \   0000018C   4C1094E5           LDR      R1,[R4, #+76]
   \   00000190   480094E5           LDR      R0,[R4, #+72]
   \   00000194   500100EF           SWI      +336
     78                wsprintf(data->ws1,"%u,%u,%u,%u",data->x2_pos,data->y2_pos,data->x_pos,data->y_pos); 
   \   00000198   440094E5           LDR      R0,[R4, #+68]
   \   0000019C   0910A0E1           MOV      R1,R9
   \   000001A0   01002DE9           PUSH     {R0}
   \   000001A4   400094E5           LDR      R0,[R4, #+64]
   \   000001A8   01002DE9           PUSH     {R0}
   \   000001AC   4C3094E5           LDR      R3,[R4, #+76]
   \   000001B0   482094E5           LDR      R2,[R4, #+72]
   \   000001B4   340094E5           LDR      R0,[R4, #+52]
   \   000001B8   240100EF           SWI      +292
   \   000001BC   1CD08DE2           ADD      SP,SP,#+28
   \   000001C0   0F0000EA           B        ??method0_rect_10
     79              }
     80              else
     81              {
     82                wsprintf(data->ws1,"%u,%u,%u,%u",data->x_pos,data->y_pos,data->x2_pos,data->y2_pos);
   \                     ??method0_rect_9:
   \   000001C4   4C0094E5           LDR      R0,[R4, #+76]
   \   000001C8   0910A0E1           MOV      R1,R9
   \   000001CC   01002DE9           PUSH     {R0}
   \   000001D0   480094E5           LDR      R0,[R4, #+72]
   \   000001D4   01002DE9           PUSH     {R0}
   \   000001D8   443094E5           LDR      R3,[R4, #+68]
   \   000001DC   402094E5           LDR      R2,[R4, #+64]
   \   000001E0   340094E5           LDR      R0,[R4, #+52]
   \   000001E4   240100EF           SWI      +292
   \   000001E8   08D08DE2           ADD      SP,SP,#+8
     83              }
     84              DrawString(data->ws1,3,scr_h-GetFontYSIZE(FONT_SMALL)-1,scr_w-4,scr_h-1,FONT_SMALL,1,black,transparent);
   \   000001EC   040000EA           B        ??method0_rect_10
     85            }
     86            else
     87            {
     88              wsprintf(data->ws1,"%u,%u",data->x_pos,data->y_pos);
   \                     ??method0_rect_8:
   \   000001F0   443094E5           LDR      R3,[R4, #+68]
   \   000001F4   402094E5           LDR      R2,[R4, #+64]
   \   000001F8   340094E5           LDR      R0,[R4, #+52]
   \   000001FC   0C1089E2           ADD      R1,R9,#+12
   \   00000200   240100EF           SWI      +292
     89              DrawString(data->ws1,3,scr_h-GetFontYSIZE(FONT_SMALL)-1,scr_w-4,scr_h-1,FONT_SMALL,1,black,transparent);
   \                     ??method0_rect_10:
   \   00000204   0800A0E3           MOV      R0,#+8
   \   00000208   C50100EF           SWI      +453
   \   0000020C   181086E2           ADD      R1,R6,#+24
   \   00000210   02002DE9           PUSH     {R1}
   \   00000214   0830A0E1           MOV      R3,R8
   \   00000218   000045E0           SUB      R0,R5,R0
   \   0000021C   012040E2           SUB      R2,R0,#+1
   \   00000220   101086E2           ADD      R1,R6,#+16
   \   00000224   02002DE9           PUSH     {R1}
   \   00000228   0110A0E3           MOV      R1,#+1
   \   0000022C   02002DE9           PUSH     {R1}
   \   00000230   0810A0E3           MOV      R1,#+8
   \   00000234   02002DE9           PUSH     {R1}
   \   00000238   80002DE9           PUSH     {R7}
   \   0000023C   340094E5           LDR      R0,[R4, #+52]
   \   00000240   0310A0E3           MOV      R1,#+3
   \   00000244   4C0100EF           SWI      +332
   \   00000248   14D08DE2           ADD      SP,SP,#+20
     90            }
     91            
     92            //Текущая позиция
     93            DrwImg((IMGHDR *)&imgPointer,data->x_pos-2,data->y_pos-2,black,transparent);
   \   0000024C   180086E2           ADD      R0,R6,#+24
   \   00000250   01002DE9           PUSH     {R0}
   \   00000254   440094E5           LDR      R0,[R4, #+68]
   \   00000258   103086E2           ADD      R3,R6,#+16
   \   0000025C   022040E2           SUB      R2,R0,#+2
   \   00000260   400094E5           LDR      R0,[R4, #+64]
   \   00000264   021040E2           SUB      R1,R0,#+2
   \   00000268   140089E2           ADD      R0,R9,#+20
   \   0000026C   ........           BL       DrwImg
     94          }
   \   00000270   30D08DE2           ADD      SP,SP,#+48
   \   00000274   F087BDE8           POP      {R4-R10,PC}      ;; return
   \                     ??method0_rect_0:
   \   00000278   ........           DC32     picpath
   \   0000027C   ........           DC32     colors
   \   00000280   ........           DC32     `?<Constant "%u,%u,%u,%u">`
     95          
     96          

   \                                 In segment CODE, align 4, keep-with-next
     97          void method1_rect(RECT_GUI *data, void *(*malloc_adr)(int))
     98          {
   \                     method1_rect:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
     99            data->ws1=AllocWS(256);
   \   00000008   400FA0E3           MOV      R0,#+256
   \   0000000C   250100EF           SWI      +293
   \   00000010   340084E5           STR      R0,[R4, #+52]
    100            data->gui.state=1;
   \   00000014   0100A0E3           MOV      R0,#+1
   \   00000018   0C00C4E5           STRB     R0,[R4, #+12]
    101          }
   \   0000001C   1080BDE8           POP      {R4,PC}          ;; return
    102          

   \                                 In segment CODE, align 4, keep-with-next
    103          void method2_rect(RECT_GUI *data, void (*mfree_adr)(void *))
    104          {
   \                     method2_rect:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    105            FreeWS(data->ws1);
   \   00000008   340094E5           LDR      R0,[R4, #+52]
   \   0000000C   290100EF           SWI      +297
    106            data->gui.state=0;
   \   00000010   0000A0E3           MOV      R0,#+0
   \   00000014   0C00C4E5           STRB     R0,[R4, #+12]
    107          }
   \   00000018   1080BDE8           POP      {R4,PC}          ;; return
    108          

   \                                 In segment CODE, align 4, keep-with-next
    109          void method3_rect(RECT_GUI *data, void *(*malloc_adr)(int), void (*mfree_adr)(void *))
    110          {
   \                     method3_rect:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    111          #ifdef ELKA  
    112            DisableIconBar(1);
   \   00000008   0100A0E3           MOV      R0,#+1
   \   0000000C   3B0200EF           SWI      +571
    113          #endif  
    114            data->gui.state=2;
   \   00000010   0200A0E3           MOV      R0,#+2
   \   00000014   0C00C4E5           STRB     R0,[R4, #+12]
    115          }
   \   00000018   1080BDE8           POP      {R4,PC}          ;; return
    116          

   \                                 In segment CODE, align 4, keep-with-next
    117          void method4_rect(RECT_GUI *data, void (*mfree_adr)(void *))
    118          {
    119            if (data->gui.state!=2) return;
   \                     method4_rect:
   \   00000000   0C10D0E5           LDRB     R1,[R0, #+12]
   \   00000004   020051E3           CMP      R1,#+2
    120            data->gui.state=1;
   \   00000008   0110A003           MOVEQ    R1,#+1
   \   0000000C   0C10C005           STRBEQ   R1,[R0, #+12]
    121          }
   \   00000010   1EFF2FE1           BX       LR               ;; return
    122          /*
    123          #define MIN_STEP 1
    124          #define MAX_STEP 8
    125          */
    126          
    127          

   \                                 In segment CODE, align 4, keep-with-next
    128          int method5_rect(RECT_GUI *data, GUI_MSG *msg)
    129          {
   \                     method5_rect:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0150A0E1           MOV      R5,R1
    130            if ((msg->gbsmsg->msg==KEY_DOWN)||(msg->gbsmsg->msg==LONG_PRESS))
   \   00000008   041095E5           LDR      R1,[R5, #+4]
   \   0000000C   0040A0E1           MOV      R4,R0
   \   00000010   040091E5           LDR      R0,[R1, #+4]
   \   00000014   0160A0E3           MOV      R6,#+1
   \   00000018   652F86E3           ORR      R2,R6,#0x194
   \   0000001C   023042E2           SUB      R3,R2,#+2
   \   00000020   030050E1           CMP      R0,R3
   \   00000024   02005011           CMPNE    R0,R2
   \   00000028   8F00001A           BNE      ??method5_rect_1
    131            {
    132              if (msg->gbsmsg->msg==KEY_DOWN)
   \   0000002C   04C091E5           LDR      R12,[R1, #+4]
   \   00000030   400094E5           LDR      R0,[R4, #+64]
   \   00000034   0070A0E3           MOV      R7,#+0
   \   00000038   03005CE1           CMP      R12,R3
   \   0000003C   0D00001A           BNE      ??method5_rect_2
    133              {
    134                 switch(msg->gbsmsg->submess)
   \   00000040   08E091E5           LDR      LR,[R1, #+8]
   \   00000044   3C3094E5           LDR      R3,[R4, #+60]
   \   00000048   38C094E5           LDR      R12,[R4, #+56]
   \   0000004C   04E05EE2           SUBS     LR,LR,#+4
   \   00000050   0400000A           BEQ      ??method5_rect_3
   \   00000054   08E05EE2           SUBS     LR,LR,#+8
   \   00000058   4500000A           BEQ      ??method5_rect_4
   \   0000005C   0EE05EE2           SUBS     LR,LR,#+14
   \   00000060   1F00000A           BEQ      ??method5_rect_5
   \   00000064   030000EA           B        ??method5_rect_2
    135                 {
    136                 case RIGHT_SOFT:
    137                   if (data->is_rect_needed)
   \                     ??method5_rect_3:
   \   00000068   00005CE3           CMP      R12,#+0
    138                   {
    139                     if (data->is_first_set)
   \   0000006C   00005313           CMPNE    R3,#+0
   \   00000070   3F00000A           BEQ      ??method5_rect_4
    140                     {
    141                       data->is_first_set=0;
   \   00000074   3C7084E5           STR      R7,[R4, #+60]
    142                       break;
    143                     }
    144                   }
    145                   
    146                 case RED_BUTTON:
    147                   return (1);
    148                   
    149                 case ENTER_BUTTON:
    150                   if (data->is_rect_needed)
    151                   {
    152                     if (!data->is_first_set)
    153                     {
    154                       data->x2_pos=data->x_pos;
    155                       data->y2_pos=data->y_pos;
    156                       data->is_first_set=1;
    157                     }
    158                     else
    159                     {
    160                       data->rc->x=MIN(data->x2_pos,data->x_pos);
    161                       data->rc->y=MIN(data->y2_pos,data->y_pos);
    162                       data->rc->x2=MAX(data->x2_pos,data->x_pos);
    163                       data->rc->y2=MAX(data->y2_pos,data->y_pos);
    164                       return (1);
    165                     }
    166                   }
    167                   else
    168                   {
    169                     data->xy[0]=data->x_pos;
    170                     data->xy[1]=data->y_pos;
    171                     return (1);
    172                   }
    173                 }
    174              }
    175              if (msg->gbsmsg->msg==LONG_PRESS)
   \                     ??method5_rect_2:
   \   00000078   043091E5           LDR      R3,[R1, #+4]
   \   0000007C   020053E1           CMP      R3,R2
    176          #ifdef ELKA      
    177                data->cstep=9;
   \   00000080   0920A003           MOVEQ    R2,#+9
   \   00000084   54208405           STREQ    R2,[R4, #+84]
    178          #else
    179                data->cstep=5;    
    180          #endif    
    181              
    182              switch(msg->gbsmsg->submess)
   \   00000088   542094E5           LDR      R2,[R4, #+84]
   \   0000008C   443094E5           LDR      R3,[R4, #+68]
   \   00000090   081091E5           LDR      R1,[R1, #+8]
   \   00000094   023043E0           SUB      R3,R3,R2
   \   00000098   020040E0           SUB      R0,R0,R2
   \   0000009C   311041E2           SUB      R1,R1,#+49
   \   000000A0   0D0051E3           CMP      R1,#+13
   \   000000A4   7000008A           BHI      ??method5_rect_1
   \   000000A8   012F8FE2           ADR      R2,??method5_rect_0
   \   000000AC   0120D2E7           LDRB     R2,[R2, R1]
   \   000000B0   02F18FE0           ADD      PC,PC,R2, LSL #+2
   \                     ??method5_rect_0:
   \   000000B4   03063141           DC8      +3,+6,+49,+65
   \   000000B8   6D465262           DC8      +109,+70,+82,+98
   \   000000BC   576D0662           DC8      +87,+109,+6,+98
   \   000000C0   41460000           DC8      +65,+70,+0,+0
    183              {
    184              case '1':
    185                if ((data->x_pos-=data->cstep)<0)
   \                     ??method5_rect_6:
   \   000000C4   400084E5           STR      R0,[R4, #+64]
   \   000000C8   000050E3           CMP      R0,#+0
    186                  data->x_pos=0;
   \   000000CC   40708445           STRMI    R7,[R4, #+64]
    187                if ((data->y_pos-=data->cstep)<YDISP)
   \                     ??method5_rect_7:
   \   000000D0   443084E5           STR      R3,[R4, #+68]
   \   000000D4   000053E3           CMP      R3,#+0
   \                     ??method5_rect_8:
   \   000000D8   6300005A           BPL      ??method5_rect_1
    188                  data->y_pos=YDISP;
   \   000000DC   447084E5           STR      R7,[R4, #+68]
   \   000000E0   610000EA           B        ??method5_rect_1
   \                     ??method5_rect_5:
   \   000000E4   00005CE3           CMP      R12,#+0
   \   000000E8   1C00000A           BEQ      ??method5_rect_9
   \   000000EC   000053E3           CMP      R3,#+0
   \   000000F0   0400001A           BNE      ??method5_rect_10
   \   000000F4   480084E5           STR      R0,[R4, #+72]
   \   000000F8   443094E5           LDR      R3,[R4, #+68]
   \   000000FC   4C3084E5           STR      R3,[R4, #+76]
   \   00000100   3C6084E5           STR      R6,[R4, #+60]
   \   00000104   DBFFFFEA           B        ??method5_rect_2
   \                     ??method5_rect_10:
   \   00000108   481094E5           LDR      R1,[R4, #+72]
   \   0000010C   503094E5           LDR      R3,[R4, #+80]
   \   00000110   000051E1           CMP      R1,R0
   \   00000114   0120A0B1           MOVLT    R2,R1
   \   00000118   0020A0A1           MOVGE    R2,R0
   \   0000011C   B020C3E1           STRH     R2,[R3, #+0]
   \   00000120   443094E5           LDR      R3,[R4, #+68]
   \   00000124   4C2094E5           LDR      R2,[R4, #+76]
   \   00000128   506094E5           LDR      R6,[R4, #+80]
   \   0000012C   030052E1           CMP      R2,R3
   \   00000130   0250A0B1           MOVLT    R5,R2
   \   00000134   0350A0A1           MOVGE    R5,R3
   \   00000138   B250C6E1           STRH     R5,[R6, #+2]
   \   0000013C   010050E1           CMP      R0,R1
   \   00000140   0100A0B1           MOVLT    R0,R1
   \   00000144   501094E5           LDR      R1,[R4, #+80]
   \   00000148   020053E1           CMP      R3,R2
   \   0000014C   B400C1E1           STRH     R0,[R1, #+4]
   \   00000150   500094E5           LDR      R0,[R4, #+80]
   \   00000154   0230A0B1           MOVLT    R3,R2
   \   00000158   B630C0E1           STRH     R3,[R0, #+6]
   \   0000015C   040000EA           B        ??method5_rect_4
   \                     ??method5_rect_9:
   \   00000160   501094E5           LDR      R1,[R4, #+80]
   \   00000164   000081E5           STR      R0,[R1, #+0]
   \   00000168   500094E5           LDR      R0,[R4, #+80]
   \   0000016C   441094E5           LDR      R1,[R4, #+68]
   \   00000170   041080E5           STR      R1,[R0, #+4]
   \                     ??method5_rect_4:
   \   00000174   0100A0E3           MOV      R0,#+1
   \   00000178   F080BDE8           POP      {R4-R7,PC}
    189                break;
    190                
    191              case '2':
    192              case UP_BUTTON:
    193                if ((data->y_pos-=data->cstep)<YDISP)
    194                  data->y_pos=YDISP;
    195                break;
    196                
    197              case '3':
    198                if ((data->x_pos+=data->cstep)>ScreenW()-1)
   \                     ??method5_rect_11:
   \   0000017C   888100EF           SWI      +33160
   \   00000180   401094E5           LDR      R1,[R4, #+64]
   \   00000184   542094E5           LDR      R2,[R4, #+84]
   \   00000188   010040E2           SUB      R0,R0,#+1
   \   0000018C   011082E0           ADD      R1,R2,R1
   \   00000190   401084E5           STR      R1,[R4, #+64]
   \   00000194   010050E1           CMP      R0,R1
   \   00000198   020000AA           BGE      ??method5_rect_12
    199                  data->x_pos=ScreenW()-1;
   \   0000019C   888100EF           SWI      +33160
   \   000001A0   010040E2           SUB      R0,R0,#+1
   \   000001A4   400084E5           STR      R0,[R4, #+64]
    200                if ((data->y_pos-=data->cstep)<YDISP)
   \                     ??method5_rect_12:
   \   000001A8   440094E5           LDR      R0,[R4, #+68]
   \   000001AC   541094E5           LDR      R1,[R4, #+84]
   \   000001B0   010050E0           SUBS     R0,R0,R1
   \   000001B4   440084E5           STR      R0,[R4, #+68]
   \   000001B8   C6FFFFEA           B        ??method5_rect_8
    201                  data->y_pos=YDISP;
    202                break;
    203               
    204              case '4':
    205              case LEFT_BUTTON:
    206                if ((data->x_pos-=data->cstep)<0)
   \                     ??method5_rect_13:
   \   000001BC   400084E5           STR      R0,[R4, #+64]
   \   000001C0   000050E3           CMP      R0,#+0
   \   000001C4   2800005A           BPL      ??method5_rect_1
    207                  data->x_pos=0;
   \   000001C8   407084E5           STR      R7,[R4, #+64]
   \   000001CC   260000EA           B        ??method5_rect_1
    208                break;
    209                
    210              case '6':
    211              case RIGHT_BUTTON:
    212                if ((data->x_pos+=data->cstep)>ScreenW()-1)
   \                     ??method5_rect_14:
   \   000001D0   888100EF           SWI      +33160
   \   000001D4   401094E5           LDR      R1,[R4, #+64]
   \   000001D8   542094E5           LDR      R2,[R4, #+84]
   \   000001DC   010040E2           SUB      R0,R0,#+1
   \   000001E0   011082E0           ADD      R1,R2,R1
   \   000001E4   401084E5           STR      R1,[R4, #+64]
   \   000001E8   010050E1           CMP      R0,R1
   \   000001EC   1E0000AA           BGE      ??method5_rect_1
    213                  data->x_pos=ScreenW()-1;
   \   000001F0   888100EF           SWI      +33160
   \   000001F4   010040E2           SUB      R0,R0,#+1
   \   000001F8   400084E5           STR      R0,[R4, #+64]
   \   000001FC   1A0000EA           B        ??method5_rect_1
    214                break;
    215                
    216              case '7': 
    217                if ((data->x_pos-=data->cstep)<0)
   \                     ??method5_rect_15:
   \   00000200   400084E5           STR      R0,[R4, #+64]
   \   00000204   000050E3           CMP      R0,#+0
   \   00000208   0C00005A           BPL      ??method5_rect_16
    218                  data->x_pos=0;      
   \   0000020C   407084E5           STR      R7,[R4, #+64]
    219                if ((data->y_pos+=data->cstep)>ScreenH()-1)
   \   00000210   0A0000EA           B        ??method5_rect_16
    220                  data->y_pos=ScreenH()-1;
    221                break;
    222                
    223              case '8':
    224              case DOWN_BUTTON:
    225                if ((data->y_pos+=data->cstep)>ScreenH()-1)
    226                  data->y_pos=ScreenH()-1;
    227                break;
    228                
    229              case '9': 
    230                if ((data->x_pos+=data->cstep)>ScreenW()-1)
   \                     ??method5_rect_17:
   \   00000214   888100EF           SWI      +33160
   \   00000218   401094E5           LDR      R1,[R4, #+64]
   \   0000021C   542094E5           LDR      R2,[R4, #+84]
   \   00000220   010040E2           SUB      R0,R0,#+1
   \   00000224   011082E0           ADD      R1,R2,R1
   \   00000228   401084E5           STR      R1,[R4, #+64]
   \   0000022C   010050E1           CMP      R0,R1
   \   00000230   020000AA           BGE      ??method5_rect_16
    231                  data->x_pos=ScreenW()-1;
   \   00000234   888100EF           SWI      +33160
   \   00000238   010040E2           SUB      R0,R0,#+1
   \   0000023C   400084E5           STR      R0,[R4, #+64]
    232                if ((data->y_pos+=data->cstep)>ScreenH()-1)
   \                     ??method5_rect_16:
   \   00000240   898100EF           SWI      +33161
   \   00000244   441094E5           LDR      R1,[R4, #+68]
   \   00000248   542094E5           LDR      R2,[R4, #+84]
   \   0000024C   010040E2           SUB      R0,R0,#+1
   \   00000250   011082E0           ADD      R1,R2,R1
   \   00000254   441084E5           STR      R1,[R4, #+68]
   \   00000258   010050E1           CMP      R0,R1
   \   0000025C   020000AA           BGE      ??method5_rect_1
    233                  data->y_pos=ScreenH()-1;
   \   00000260   898100EF           SWI      +33161
   \   00000264   010040E2           SUB      R0,R0,#+1
   \   00000268   440084E5           STR      R0,[R4, #+68]
    234                break; 
    235              }
    236            }
    237            if (msg->gbsmsg->msg==KEY_UP)
   \                     ??method5_rect_1:
   \   0000026C   040095E5           LDR      R0,[R5, #+4]
   \   00000270   040090E5           LDR      R0,[R0, #+4]
   \   00000274   650F50E3           CMP      R0,#+404
    238              data->cstep=1;
   \   00000278   54608405           STREQ    R6,[R4, #+84]
    239            
    240            DirectRedrawGUI();
   \   0000027C   3F0100EF           SWI      +319
    241            return(0);
   \   00000280   0000A0E3           MOV      R0,#+0
   \   00000284   F080BDE8           POP      {R4-R7,PC}       ;; return
    242          }
    243          

   \                                 In segment CODE, align 4, keep-with-next
    244          void method7_rect(RECT_GUI *data, void (*mfree_adr)(void *))
    245          {
    246            extern void kill_data(void *p, void (*func_p)(void *));
    247            kill_data(data,mfree_adr);
   \                     method7_rect:
   \   00000000   ........           _BF      kill_data,??kill_data??rA  ;; tailcall
    248          }
    249          

   \                                 In segment CODE, align 4, keep-with-next
    250          int method8_rect(void){return(0);}
   \                     method8_rect:
   \   00000000   0000A0E3           MOV      R0,#+0
   \   00000004   1EFF2FE1           BX       LR               ;; return
    251          

   \                                 In segment CODE, align 4, keep-with-next
    252          int method9_rect(void){return(0);}
   \                     method9_rect:
   \   00000000   0000A0E3           MOV      R0,#+0
   \   00000004   1EFF2FE1           BX       LR               ;; return
    253          

   \                                 In segment DATA_C, align 4, align-sorted
    254          const void * const gui_methods_rect[11]={
    255            (void *)method0_rect,	//Redraw
    256            (void *)method1_rect,	//Create
    257            (void *)method2_rect,	//Close
    258            (void *)method3_rect,	//Focus
    259            (void *)method4_rect,	//Unfocus
    260            (void *)method5_rect,	//OnKey
    261            0,
    262            (void *)method7_rect,	//Destroy
    263            (void *)method8_rect,
    264            (void *)method9_rect,
    265            0
    266          };
    267          
    268          const RECT Canvas_1={0,0,0,0};
   \                     Canvas_1:
   \   00000000   000000000000       DC16 0, 0, 0, 0
   \              0000        
   \                     gui_methods_rect:
   \   00000008   ............       DC32 method0_rect, method1_rect, method2_rect, method3_rect
   \              ............
   \              ........    
   \   00000018   ............       DC32 method4_rect, method5_rect, 0H, method7_rect, method8_rect
   \              ....00000000
   \              ............
   \              ....        
   \   0000002C   ........0000       DC32 method9_rect, 0H
   \              0000        
    269          

   \                                 In segment CODE, align 4, keep-with-next
    270          void EditCoordinates(void *rect_or_xy, int is_rect)
    271          {
   \                     EditCoordinates:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0050A0E1           MOV      R5,R0
    272            RECT_GUI *rect_gui=malloc(sizeof(RECT_GUI));
   \   00000008   5800A0E3           MOV      R0,#+88
   \   0000000C   0160A0E1           MOV      R6,R1
   \   00000010   140000EF           SWI      +20
   \   00000014   0040A0E1           MOV      R4,R0
    273            zeromem(rect_gui,sizeof(RECT_GUI));
   \   00000018   5810A0E3           MOV      R1,#+88
   \   0000001C   1D0100EF           SWI      +285
    274            
    275            rect_gui->is_rect_needed=is_rect;
   \   00000020   386084E5           STR      R6,[R4, #+56]
    276            if (!is_rect)
   \   00000024   000056E3           CMP      R6,#+0
   \   00000028   0400001A           BNE      ??EditCoordinates_0
    277            {
    278              unsigned int *xy=rect_or_xy;
    279              rect_gui->x_pos=xy[0];
   \   0000002C   000095E5           LDR      R0,[R5, #+0]
   \   00000030   400084E5           STR      R0,[R4, #+64]
    280              rect_gui->y_pos=xy[1];
   \   00000034   040095E5           LDR      R0,[R5, #+4]
   \   00000038   440084E5           STR      R0,[R4, #+68]
    281              rect_gui->xy=rect_or_xy;
   \   0000003C   070000EA           B        ??EditCoordinates_1
    282            }
    283            else
    284            {
    285              RECT *rc=rect_or_xy;
    286              rect_gui->x_pos=rc->x;
   \                     ??EditCoordinates_0:
   \   00000040   F000D5E1           LDRSH    R0,[R5, #+0]
   \   00000044   400084E5           STR      R0,[R4, #+64]
    287              rect_gui->y_pos=rc->y;
   \   00000048   F200D5E1           LDRSH    R0,[R5, #+2]
   \   0000004C   440084E5           STR      R0,[R4, #+68]
    288              rect_gui->x2_pos=rc->x2;
   \   00000050   F400D5E1           LDRSH    R0,[R5, #+4]
   \   00000054   480084E5           STR      R0,[R4, #+72]
    289              rect_gui->y2_pos=rc->y2;
   \   00000058   F600D5E1           LDRSH    R0,[R5, #+6]
   \   0000005C   4C0084E5           STR      R0,[R4, #+76]
    290              rect_gui->rc=rect_or_xy;
   \                     ??EditCoordinates_1:
   \   00000060   505084E5           STR      R5,[R4, #+80]
    291            }
    292            rect_gui->cstep=1;
   \   00000064   0100A0E3           MOV      R0,#+1
   \   00000068   540084E5           STR      R0,[R4, #+84]
    293            patch_rect((RECT*)&Canvas_1,0,YDISP,ScreenW()-1,ScreenH()-1);
   \   0000006C   898100EF           SWI      +33161
   \   00000070   0050A0E1           MOV      R5,R0
   \   00000074   888100EF           SWI      +33160
   \   00000078   3C209FE5           LDR      R2,??EditCoordinates_2  ;; Canvas_1
   \   0000007C   011045E2           SUB      R1,R5,#+1
   \   00000080   010040E2           SUB      R0,R0,#+1
   \   00000084   0030A0E3           MOV      R3,#+0
   \   00000088   003082E5           STR      R3,[R2, #+0]
   \   0000008C   B400C2E1           STRH     R0,[R2, #+4]
   \   00000090   B610C2E1           STRH     R1,[R2, #+6]
    294            rect_gui->gui.canvas=(void *)(&Canvas_1);
   \   00000094   002084E5           STR      R2,[R4, #+0]
    295            rect_gui->gui.flag30=2;
   \   00000098   0200A0E3           MOV      R0,#+2
   \   0000009C   300084E5           STR      R0,[R4, #+48]
    296            rect_gui->gui.methods=(void *)gui_methods_rect;
   \   000000A0   080082E2           ADD      R0,R2,#+8
   \   000000A4   040084E5           STR      R0,[R4, #+4]
    297            rect_gui->gui.item_ll.data_mfree=(void (*)(void *))mfree_adr();
   \   000000A8   158000EF           SWI      +32789
   \   000000AC   200084E5           STR      R0,[R4, #+32]
    298            CreateGUI(rect_gui);
   \   000000B0   0400A0E1           MOV      R0,R4
   \   000000B4   370100EF           SWI      +311
    299          }
   \   000000B8   7080BDE8           POP      {R4-R6,PC}       ;; return
   \                     ??EditCoordinates_2:
   \   000000BC   ........           DC32     Canvas_1
    300          
    301          typedef struct
    302          {
    303            void *next;
    304            int is_folder;
    305            char *fullname;  
    306            char *name;  
    307          }FLIST;
    308          
    309          typedef struct
    310          {
    311            void *gui;
    312            int type;
    313          }FVIEW;
    314          
    315          volatile FLIST *fltop;
    316          

   \                                 In segment CODE, align 4, keep-with-next
    317          void Free_FLIST(void)
    318          {
   \                     Free_FLIST:
   \   00000000   10402DE9           PUSH     {R4,LR}
    319            LockSched();
   \   00000004   460100EF           SWI      +326
    320            FLIST *fl=(FLIST *)fltop;
   \   00000008   ........           LDR      R0,??DataTable5  ;; filelist_HDR
    321            fltop=0;
   \   0000000C   0010A0E3           MOV      R1,#+0
   \   00000010   144090E5           LDR      R4,[R0, #+20]
   \   00000014   141080E5           STR      R1,[R0, #+20]
    322            UnlockSched();
   \   00000018   470100EF           SWI      +327
   \   0000001C   000054E3           CMP      R4,#+0
   \   00000020   1080BD08           POPEQ    {R4,PC}
    323            while(fl)
    324            {
    325              FLIST *fl_prev=fl;
   \                     ??Free_FLIST_0:
   \   00000024   0400A0E1           MOV      R0,R4
    326              fl=fl->next;
   \   00000028   004094E5           LDR      R4,[R4, #+0]
    327              mfree(fl_prev);
   \   0000002C   150000EF           SWI      +21
    328            }
   \   00000030   000054E3           CMP      R4,#+0
   \   00000034   FAFFFF1A           BNE      ??Free_FLIST_0
    329          }
   \   00000038   1080BDE8           POP      {R4,PC}          ;; return
    330          
    331          enum TYPES {IS_BACK, IS_FOLDER, IS_FILE}; 

   \                                 In segment DATA_C, align 4, align-sorted
    332          const char back[]="..";             
   \                     back:
   \   00000000   2E2E00             DC8 ".."
   \   00000003   00                 DC8 0
   \   00000004   524F4F5400         DC8 "ROOT"
   \   00000009   000000             DC8 0, 0, 0
    333          
    334          

   \                                 In segment CODE, align 4, keep-with-next
    335          int strcmp_nocase(const char *s, const char *d)
    336          {
    337            int cs;
    338            int ds;
    339            do
    340            {
    341              cs=*s++;
   \                     strcmp_nocase:
   \                     ??strcmp_nocase_0:
   \   00000000   ........           LDRB     R2,[R0], #+1
    342              if (cs&0x40) cs&=0xDF;
    343              ds=*d++;
   \   00000004   ........           LDRB     R3,[R1], #+1
   \   00000008   400012E3           TST      R2,#0x40
   \   0000000C   DF200212           ANDNE    R2,R2,#0xDF
    344              if (ds&0x40) ds&=0xDF;
   \   00000010   400013E3           TST      R3,#0x40
   \   00000014   DF300312           ANDNE    R3,R3,#0xDF
    345              cs-=ds;
   \   00000018   032052E0           SUBS     R2,R2,R3
    346              if (cs) break;
   \   0000001C   0100001A           BNE      ??strcmp_nocase_1
    347            }
    348            while(ds);
   \   00000020   000053E3           CMP      R3,#+0
   \   00000024   F5FFFF1A           BNE      ??strcmp_nocase_0
    349            return(cs);
   \                     ??strcmp_nocase_1:
   \   00000028   0200A0E1           MOV      R0,R2
   \   0000002C   1EFF2FE1           BX       LR               ;; return
    350          }
    351          

   \                                 In segment CODE, align 4, keep-with-next
    352          FLIST *AddToFList(const char* full_name, const char *name, int is_folder)
    353          {
   \                     AddToFList:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   0050A0E1           MOV      R5,R0
   \   00000008   0160A0E1           MOV      R6,R1
   \   0000000C   0270A0E1           MOV      R7,R2
    354            int l_fname;
    355            FLIST *fl;
    356            FLIST *fn=malloc(sizeof(FLIST)+(l_fname=strlen(full_name))+strlen(name)+2);
   \   00000010   1B0000EF           SWI      +27
   \   00000014   0080A0E1           MOV      R8,R0
   \   00000018   0600A0E1           MOV      R0,R6
   \   0000001C   1B0000EF           SWI      +27
   \   00000020   080080E0           ADD      R0,R0,R8
   \   00000024   120080E2           ADD      R0,R0,#+18
   \   00000028   140000EF           SWI      +20
   \   0000002C   0040A0E1           MOV      R4,R0
    357            fn->fullname=(char *)fn+sizeof(FLIST);
   \   00000030   100084E2           ADD      R0,R4,#+16
   \   00000034   080084E5           STR      R0,[R4, #+8]
    358            fn->name=(char *)fn+sizeof(FLIST)+l_fname+1;
   \   00000038   040088E0           ADD      R0,R8,R4
   \   0000003C   110080E2           ADD      R0,R0,#+17
   \   00000040   0C0084E5           STR      R0,[R4, #+12]
    359            strcpy(fn->fullname,full_name);
   \   00000044   080094E5           LDR      R0,[R4, #+8]
   \   00000048   0510A0E1           MOV      R1,R5
   \   0000004C   1A0000EF           SWI      +26
    360            strcpy(fn->name,name);
   \   00000050   0C0094E5           LDR      R0,[R4, #+12]
   \   00000054   0610A0E1           MOV      R1,R6
   \   00000058   1A0000EF           SWI      +26
    361            fn->is_folder=is_folder;
   \   0000005C   047084E5           STR      R7,[R4, #+4]
    362            fn->next=0;
   \   00000060   0000A0E3           MOV      R0,#+0
   \   00000064   000084E5           STR      R0,[R4, #+0]
    363            fl=(FLIST *)fltop;
   \   00000068   ........           LDR      R0,??DataTable5  ;; filelist_HDR
   \   0000006C   145090E5           LDR      R5,[R0, #+20]
    364            if (fl)
   \   00000070   000055E3           CMP      R5,#+0
   \   00000074   0E00000A           BEQ      ??AddToFList_0
    365            {
    366              FLIST *pr;
    367              pr=(FLIST *)&fltop;
   \   00000078   0C7094E5           LDR      R7,[R4, #+12]
   \   0000007C   146080E2           ADD      R6,R0,#+20
    368              while(strcmp_nocase(fl->name,fn->name)<0)
   \                     ??AddToFList_1:
   \   00000080   0C0095E5           LDR      R0,[R5, #+12]
   \   00000084   0710A0E1           MOV      R1,R7
   \   00000088   ........           BL       strcmp_nocase
   \   0000008C   000050E3           CMP      R0,#+0
   \   00000090   0300005A           BPL      ??AddToFList_2
    369              {
    370                pr=fl;
   \   00000094   0560A0E1           MOV      R6,R5
    371                fl=fl->next;
   \   00000098   005095E5           LDR      R5,[R5, #+0]
    372                if (!fl) break;
   \   0000009C   000055E3           CMP      R5,#+0
   \   000000A0   F6FFFF1A           BNE      ??AddToFList_1
    373              }
    374              fn->next=fl;
   \                     ??AddToFList_2:
   \   000000A4   005084E5           STR      R5,[R4, #+0]
    375              pr->next=fn;
   \   000000A8   004086E5           STR      R4,[R6, #+0]
   \   000000AC   0400A0E1           MOV      R0,R4
   \   000000B0   F081BDE8           POP      {R4-R8,PC}
    376            }
    377            else
    378            {
    379              fltop=fn;
   \                     ??AddToFList_0:
   \   000000B4   144080E5           STR      R4,[R0, #+20]
    380            }
    381            return (fn);
   \   000000B8   0400A0E1           MOV      R0,R4
   \   000000BC   F081BDE8           POP      {R4-R8,PC}       ;; return
    382          }
    383          

   \                                 In segment CODE, align 4, keep-with-next
    384          int FindFiles(char *str, int type)  // type == 0 SelectFolder, type == 1 SelectFile
    385          {
   \                     FindFiles:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   \   00000004   C8D04DE2           SUB      SP,SP,#+200
   \   00000008   40DE4DE2           SUB      SP,SP,#+1024
   \   0000000C   0140A0E1           MOV      R4,R1
    386            DIR_ENTRY de;
    387            unsigned int err;
    388            char *rev,*s,*d;
    389            int i, c, n=0;
    390            char path[256];
    391            char name[128];
    392            
    393            strcpy(path,str);
   \   00000010   0010A0E1           MOV      R1,R0
   \   00000014   D20F8DE2           ADD      R0,SP,#+840
   \   00000018   1A0000EF           SWI      +26
    394            Free_FLIST();
   \   0000001C   ........           BL       Free_FLIST
    395            s=path;
   \   00000020   D20F8DE2           ADD      R0,SP,#+840
    396            d=name;
   \   00000024   48108DE2           ADD      R1,SP,#+72
   \   00000028   401E81E2           ADD      R1,R1,#+1024
    397            rev=0;
   \   0000002C   0050A0E3           MOV      R5,#+0
   \   00000030   0020A0E3           MOV      R2,#+0
   \   00000034   050000EA           B        ??FindFiles_0
    398            while((c=*s++))
    399            {
    400              *d++=c;
   \                     ??FindFiles_1:
   \   00000038   ........           STRB     R3,[R1], #+1
    401              if (c=='\\' && *s!='\0') rev=d;
   \   0000003C   5C0053E3           CMP      R3,#+92
   \   00000040   0200001A           BNE      ??FindFiles_0
   \   00000044   0030D0E5           LDRB     R3,[R0, #+0]
   \   00000048   000053E3           CMP      R3,#+0
   \   0000004C   0120A011           MOVNE    R2,R1
    402            }
   \                     ??FindFiles_0:
   \   00000050   ........           LDRB     R3,[R0], #+1
   \   00000054   000053E3           CMP      R3,#+0
   \   00000058   F6FFFF1A           BNE      ??FindFiles_1
    403            if(rev==0)
   \   0000005C   2C019FE5           LDR      R0,??FindFiles_2  ;; back
   \   00000060   000052E3           CMP      R2,#+0
    404              AddToFList("ROOT",back,IS_BACK);
   \   00000064   0010A001           MOVEQ    R1,R0
   \   00000068   04008002           ADDEQ    R0,R0,#+4
   \   0000006C   0400000A           BEQ      ??FindFiles_3
    405            else
    406            {
    407              *rev=0;
   \   00000070   0050C2E5           STRB     R5,[R2, #+0]
    408              AddToFList(name,back,IS_BACK);
   \   00000074   0020A0E3           MOV      R2,#+0
   \   00000078   0010A0E1           MOV      R1,R0
   \   0000007C   48008DE2           ADD      R0,SP,#+72
   \   00000080   400E80E2           ADD      R0,R0,#+1024
   \                     ??FindFiles_3:
   \   00000084   ........           BL       AddToFList
    409            }
    410            n++;
   \   00000088   0160A0E3           MOV      R6,#+1
    411            
    412            
    413            i=strlen(path);
   \   0000008C   D20F8DE2           ADD      R0,SP,#+840
   \   00000090   1B0000EF           SWI      +27
   \   00000094   0090A0E1           MOV      R9,R0
    414            path[i++]='*';
   \   00000098   D20F8DE2           ADD      R0,SP,#+840
   \   0000009C   000089E0           ADD      R0,R9,R0
   \   000000A0   2A10A0E3           MOV      R1,#+42
   \   000000A4   0010C0E5           STRB     R1,[R0, #+0]
    415            path[i]='\0';
   \   000000A8   0150C0E5           STRB     R5,[R0, #+1]
    416            if (FindFirstFile(&de,path,&err))
   \   000000AC   0D20A0E1           MOV      R2,SP
   \   000000B0   D21F8DE2           ADD      R1,SP,#+840
   \   000000B4   04008DE2           ADD      R0,SP,#+4
   \   000000B8   6B0000EF           SWI      +107
   \   000000BC   000050E3           CMP      R0,#+0
   \   000000C0   5C70A0E3           MOV      R7,#+92
   \   000000C4   2A00000A           BEQ      ??FindFiles_4
    417            {
    418              do
    419              {
    420                i=strlen(de.folder_name);
   \                     ??FindFiles_5:
   \   000000C8   38008DE2           ADD      R0,SP,#+56
   \   000000CC   1B0000EF           SWI      +27
   \   000000D0   0090A0E1           MOV      R9,R0
    421                strcpy(path,de.folder_name);
   \   000000D4   38108DE2           ADD      R1,SP,#+56
   \   000000D8   D20F8DE2           ADD      R0,SP,#+840
   \   000000DC   1A0000EF           SWI      +26
    422                path[i++]='\\';
   \   000000E0   D20F8DE2           ADD      R0,SP,#+840
   \   000000E4   000089E0           ADD      R0,R9,R0
   \   000000E8   ........           STRB     R7,[R0], #+1
    423                strcpy(path+i,de.file_name);
   \   000000EC   B9108DE2           ADD      R1,SP,#+185
   \   000000F0   1A0000EF           SWI      +26
    424                if (de.file_attr&FA_DIRECTORY)
   \   000000F4   F003DDE1           LDRSH    R0,[SP, #+48]
   \   000000F8   018086E2           ADD      R8,R6,#+1
   \   000000FC   100010E3           TST      R0,#0x10
   \   00000100   0F00000A           BEQ      ??FindFiles_6
    425                {
    426                  i=strlen(path);
   \   00000104   D20F8DE2           ADD      R0,SP,#+840
   \   00000108   1B0000EF           SWI      +27
   \   0000010C   0090A0E1           MOV      R9,R0
    427                  path[i++]='\\';
   \   00000110   D20F8DE2           ADD      R0,SP,#+840
   \   00000114   000089E0           ADD      R0,R9,R0
   \   00000118   0070C0E5           STRB     R7,[R0, #+0]
    428                  path[i]=0;
   \   0000011C   0150C0E5           STRB     R5,[R0, #+1]
    429                  name[0]='\\';
   \   00000120   4874CDE5           STRB     R7,[SP, #+1096]
    430                  strcpy(name+1,de.file_name);
   \   00000124   B9108DE2           ADD      R1,SP,#+185
   \   00000128   49008DE2           ADD      R0,SP,#+73
   \   0000012C   400E80E2           ADD      R0,R0,#+1024
   \   00000130   1A0000EF           SWI      +26
    431                  AddToFList(path,name,IS_FOLDER);
   \   00000134   0120A0E3           MOV      R2,#+1
   \   00000138   48108DE2           ADD      R1,SP,#+72
   \   0000013C   401E81E2           ADD      R1,R1,#+1024
   \   00000140   030000EA           B        ??FindFiles_7
    432                  n++;
    433                }
    434                else
    435                {
    436                  if (type!=0)
   \                     ??FindFiles_6:
   \   00000144   000054E3           CMP      R4,#+0
   \   00000148   0400000A           BEQ      ??FindFiles_8
    437                  {
    438                    AddToFList(path,de.file_name,IS_FILE);
   \   0000014C   0220A0E3           MOV      R2,#+2
   \   00000150   B9108DE2           ADD      R1,SP,#+185
   \                     ??FindFiles_7:
   \   00000154   D20F8DE2           ADD      R0,SP,#+840
   \   00000158   ........           BL       AddToFList
    439                    n++;
   \   0000015C   0860A0E1           MOV      R6,R8
    440                  }
    441                }
    442              }
    443              while(FindNextFile(&de,&err));
   \                     ??FindFiles_8:
   \   00000160   0D10A0E1           MOV      R1,SP
   \   00000164   04008DE2           ADD      R0,SP,#+4
   \   00000168   6C0000EF           SWI      +108
   \   0000016C   000050E3           CMP      R0,#+0
   \   00000170   D4FFFF1A           BNE      ??FindFiles_5
    444            }
    445            FindClose(&de,&err);
   \                     ??FindFiles_4:
   \   00000174   0D10A0E1           MOV      R1,SP
   \   00000178   04008DE2           ADD      R0,SP,#+4
   \   0000017C   6D0000EF           SWI      +109
    446            return n;
   \   00000180   0600A0E1           MOV      R0,R6
   \   00000184   C8D08DE2           ADD      SP,SP,#+200
   \   00000188   40DE8DE2           ADD      SP,SP,#+1024
   \   0000018C   F083BDE8           POP      {R4-R9,PC}       ;; return
   \                     ??FindFiles_2:
   \   00000190   ........           DC32     back
    447          }
    448          
    449          
    450          
    451          extern void ClearT9Key(char *T9_key);
    452          extern void AddT9Key(char *T9_key,int chr);
    453          extern void BackSpaceT9(char *T9_key);
    454          extern const char table_T9Key[];
    455          
    456          int flist_id;
    457          int flist_prev_itemcount;
    458          char flist_hdr_text[128];
    459          char flist_sk_r[16];
    460          char flist_header[128];
    461          char FListT9Key[32];
    462          /*
    463          FLIST *FindFLISTtByNS(int *i, int si)
    464          {
    465            FLIST *fl;
    466            fl=(FLIST *)fltop;
    467            while(fl)
    468            {
    469              if (fl->is_folder==si)
    470              {
    471                if (!(*i)) return (fl);
    472                (*i)--;
    473              }    
    474              fl=fl->next;
    475            }
    476            return fl;
    477          }
    478            */
    479          

   \                                 In segment CODE, align 4, keep-with-next
    480          FLIST *FindFLISTtByNS(int *i, int si)
    481          {
    482            FLIST *fl;
    483            fl=(FLIST *)fltop;
   \                     FindFLISTtByNS:
   \   00000000   ........           LDR      R3,??DataTable5  ;; filelist_HDR
   \   00000004   F0002DE9           PUSH     {R4-R7}
   \   00000008   142093E5           LDR      R2,[R3, #+20]
   \   0000000C   020000EA           B        ??FindFLISTtByNS_0
    484            char *s;
    485            char *d;
    486            int c;
    487            while(fl)
    488            {
    489              s=FListT9Key;
    490              if(si==IS_FOLDER) d=fl->name+1;// пропустим слеш \ в имени папки
    491              else d=fl->name;
    492              
    493              while(c=*s++)
    494               {
    495                if(c!=table_T9Key[*d++]) goto L_NOT9;
    496               }
    497              if (fl->is_folder==si)
    498              {      
    499                if (!(*i)) return (fl);
    500                (*i)--;
   \                     ??FindFLISTtByNS_1:
   \   00000010   01404CE2           SUB      R4,R12,#+1
   \   00000014   004080E5           STR      R4,[R0, #+0]
    501              }    
    502            L_NOT9:
    503              fl=fl->next;
   \                     ??FindFLISTtByNS_2:
   \   00000018   002092E5           LDR      R2,[R2, #+0]
   \                     ??FindFLISTtByNS_0:
   \   0000001C   000052E3           CMP      R2,#+0
   \   00000020   1600000A           BEQ      ??FindFLISTtByNS_3
   \   00000024   0C4092E5           LDR      R4,[R2, #+12]
   \   00000028   6CCF83E2           ADD      R12,R3,#+432
   \   0000002C   010051E3           CMP      R1,#+1
   \   00000030   0600001A           BNE      ??FindFLISTtByNS_4
   \   00000034   014084E2           ADD      R4,R4,#+1
   \   00000038   040000EA           B        ??FindFLISTtByNS_4
   \                     ??FindFLISTtByNS_5:
   \   0000003C   ........           LDRB     R6,[R4], #+1
   \   00000040   44709FE5           LDR      R7,??FindFLISTtByNS_6  ;; table_T9Key
   \   00000044   0760D6E7           LDRB     R6,[R6, +R7]
   \   00000048   060055E1           CMP      R5,R6
   \   0000004C   F1FFFF1A           BNE      ??FindFLISTtByNS_2
   \                     ??FindFLISTtByNS_4:
   \   00000050   ........           LDRB     R5,[R12], #+1
   \   00000054   000055E3           CMP      R5,#+0
   \   00000058   F7FFFF1A           BNE      ??FindFLISTtByNS_5
   \   0000005C   044092E5           LDR      R4,[R2, #+4]
   \   00000060   010054E1           CMP      R4,R1
   \   00000064   EBFFFF1A           BNE      ??FindFLISTtByNS_2
   \   00000068   00C090E5           LDR      R12,[R0, #+0]
   \   0000006C   00005CE3           CMP      R12,#+0
   \   00000070   E6FFFF1A           BNE      ??FindFLISTtByNS_1
   \   00000074   F000BDE8           POP      {R4-R7}
   \   00000078   0200A0E1           MOV      R0,R2
   \   0000007C   1EFF2FE1           BX       LR
    504            }
    505            return fl;
   \                     ??FindFLISTtByNS_3:
   \   00000080   F000BDE8           POP      {R4-R7}
   \   00000084   0000A0E3           MOV      R0,#+0
   \   00000088   1EFF2FE1           BX       LR               ;; return
   \                     ??FindFLISTtByNS_6:
   \   0000008C   ........           DC32     table_T9Key
    506          }
    507          

   \                                 In segment CODE, align 4, keep-with-next
    508          void UpdateFListHeader(void)
    509          {
   \                     UpdateFListHeader:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
    510            if (strlen(FListT9Key))
   \   00000004   60509FE5           LDR      R5,??UpdateFListHeader_0+0x4  ;; `?<Constant "Close">`
   \   00000008   ........           LDR      R7,??DataTable5  ;; filelist_HDR
   \   0000000C   484FA0E3           MOV      R4,#+288
   \   00000010   6C6FA0E3           MOV      R6,#+432
   \   00000014   070086E0           ADD      R0,R6,R7
   \   00000018   1B0000EF           SWI      +27
   \   0000001C   000050E3           CMP      R0,#+0
   \   00000020   0900000A           BEQ      ??UpdateFListHeader_1
    511            {
    512              strcpy(flist_hdr_text,"Input T9:");
   \   00000024   081085E2           ADD      R1,R5,#+8
   \   00000028   A00087E2           ADD      R0,R7,#+160
   \   0000002C   1A0000EF           SWI      +26
    513              strcat(flist_hdr_text,FListT9Key);
   \   00000030   071086E0           ADD      R1,R6,R7
   \   00000034   A00087E2           ADD      R0,R7,#+160
   \   00000038   170000EF           SWI      +23
    514              strcpy(flist_sk_r,"<C");
   \   0000003C   091F8FE2           ADR      R1,??UpdateFListHeader_0  ;; "<C"
   \   00000040   070084E0           ADD      R0,R4,R7
   \   00000044   1A0000EF           SWI      +26
   \   00000048   F080BDE8           POP      {R4-R7,PC}
    515            }
    516            else
    517            {
    518              strcpy(flist_hdr_text,flist_header);
   \                     ??UpdateFListHeader_1:
   \   0000004C   4C1F87E2           ADD      R1,R7,#+304
   \   00000050   A00087E2           ADD      R0,R7,#+160
   \   00000054   1A0000EF           SWI      +26
    519              strcpy(flist_sk_r,"Close");
   \   00000058   0510A0E1           MOV      R1,R5
   \   0000005C   070084E0           ADD      R0,R4,R7
   \   00000060   1A0000EF           SWI      +26
    520            }
    521          }
   \   00000064   F080BDE8           POP      {R4-R7,PC}       ;; return
   \                     ??UpdateFListHeader_0:
   \   00000068   3C430000           DC8      "<C",+0
   \   0000006C   ........           DC32     `?<Constant "Close">`
    522          

   \                                 In segment CODE, align 4, keep-with-next
    523          int CountFList(void)
    524          {
   \                     CountFList:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
    525            int l=-1;
   \   00000008   0010E0E3           MVN      R1,#+0
   \   0000000C   00108DE5           STR      R1,[SP, #+0]
    526            FindFLISTtByNS(&l,IS_BACK);
   \   00000010   0010A0E3           MOV      R1,#+0
   \   00000014   0D00A0E1           MOV      R0,SP
   \   00000018   ........           BL       FindFLISTtByNS
    527            FindFLISTtByNS(&l,IS_FOLDER);
   \   0000001C   0110A0E3           MOV      R1,#+1
   \   00000020   0D00A0E1           MOV      R0,SP
   \   00000024   ........           BL       FindFLISTtByNS
    528            FindFLISTtByNS(&l,IS_FILE);
   \   00000028   0210A0E3           MOV      R1,#+2
   \   0000002C   0D00A0E1           MOV      R0,SP
   \   00000030   ........           BL       FindFLISTtByNS
    529            l=-1-l;
    530            return l;
   \   00000034   00109DE5           LDR      R1,[SP, #+0]
   \   00000038   0000E0E3           MVN      R0,#+0
   \   0000003C   010040E0           SUB      R0,R0,R1
   \   00000040   0280BDE8           POP      {R1,PC}          ;; return
    531          }
    532          
    533          

   \                                 In segment CODE, align 4, keep-with-next
    534          void RecountFList()
    535          {
   \                     RecountFList:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
    536            int i;
    537            void *data;
    538            UpdateFListHeader();
    539            if (!flist_id) return; 
   \   00000004   ........           LDR      R4,??DataTable5  ;; filelist_HDR
   \   00000008   ........           BL       UpdateFListHeader
   \   0000000C   180094E5           LDR      R0,[R4, #+24]
   \   00000010   000050E3           CMP      R0,#+0
   \   00000014   3080BD08           POPEQ    {R4,R5,PC}
    540            data=FindGUIbyId(flist_id,NULL);
   \   00000018   0010A0E3           MOV      R1,#+0
   \   0000001C   090200EF           SWI      +521
   \   00000020   0050A0E1           MOV      R5,R0
    541          
    542            i=CountFList();
   \   00000024   ........           BL       CountFList
   \   00000028   0010A0E1           MOV      R1,R0
    543            if (i!=flist_prev_itemcount)
   \   0000002C   1C0094E5           LDR      R0,[R4, #+28]
   \   00000030   000051E1           CMP      R1,R0
   \   00000034   0200000A           BEQ      ??RecountFList_0
    544            {
    545              flist_prev_itemcount=i;
   \   00000038   1C1084E5           STR      R1,[R4, #+28]
    546              Menu_SetItemCountDyn(data,i);
   \   0000003C   0500A0E1           MOV      R0,R5
   \   00000040   E60100EF           SWI      +486
    547            }
    548            SetCursorToMenuItem(data,0);
   \                     ??RecountFList_0:
   \   00000044   0010A0E3           MOV      R1,#+0
   \   00000048   0500A0E1           MOV      R0,R5
   \   0000004C   C40100EF           SWI      +452
    549            if (IsGuiOnTop(flist_id)) RefreshGUI();
   \   00000050   180094E5           LDR      R0,[R4, #+24]
   \   00000054   350100EF           SWI      +309
   \   00000058   000050E3           CMP      R0,#+0
   \   0000005C   3080BD08           POPEQ    {R4,R5,PC}
   \   00000060   960100EF           SWI      +406
   \   00000064   3080BDE8           POP      {R4,R5,PC}       ;; return
    550          }
    551          

   \                                 In segment CODE, align 4, keep-with-next
    552          FLIST *FindFLISTtByN(int n)
    553          {
   \                     FindFLISTtByN:
   \   00000000   01402DE9           PUSH     {R0,LR}
    554            FLIST *fl;
    555            fl=FindFLISTtByNS(&n,IS_BACK); if ((!n)&&(fl)) return(fl);
   \   00000004   0010A0E3           MOV      R1,#+0
   \   00000008   0D00A0E1           MOV      R0,SP
   \   0000000C   ........           BL       FindFLISTtByNS
   \   00000010   00109DE5           LDR      R1,[SP, #+0]
   \   00000014   000051E3           CMP      R1,#+0
   \   00000018   0100001A           BNE      ??FindFLISTtByN_0
   \   0000001C   000050E3           CMP      R0,#+0
   \   00000020   0280BD18           POPNE    {R1,PC}
    556            fl=FindFLISTtByNS(&n,IS_FOLDER); if ((!n)&&(fl)) return(fl);
   \                     ??FindFLISTtByN_0:
   \   00000024   0110A0E3           MOV      R1,#+1
   \   00000028   0D00A0E1           MOV      R0,SP
   \   0000002C   ........           BL       FindFLISTtByNS
   \   00000030   00109DE5           LDR      R1,[SP, #+0]
   \   00000034   000051E3           CMP      R1,#+0
   \   00000038   0100001A           BNE      ??FindFLISTtByN_1
   \   0000003C   000050E3           CMP      R0,#+0
   \   00000040   0280BD18           POPNE    {R1,PC}
    557            fl=FindFLISTtByNS(&n,IS_FILE); if ((!n)&&(fl)) return(fl);
   \                     ??FindFLISTtByN_1:
   \   00000044   0210A0E3           MOV      R1,#+2
   \   00000048   0D00A0E1           MOV      R0,SP
   \   0000004C   ........           BL       FindFLISTtByNS
   \   00000050   0280BDE8           POP      {R1,PC}
    558            return fl;
    559          }
    560          

   \                                 In segment CODE, align 4, keep-with-next
    561          void SavePath(void *ed_gui, FLIST *fl)
    562          {
   \                     SavePath:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   2CD04DE2           SUB      SP,SP,#+44
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
    563            EDITCONTROL ec;
    564            EDIT_ExtractFocusedControl(ed_gui,&ec);
   \   00000010   0D10A0E1           MOV      R1,SP
   \   00000014   C60100EF           SWI      +454
    565            WSHDR *ws=AllocWS(ec.maxlen);
   \   00000018   F801DDE1           LDRSH    R0,[SP, #+24]
   \   0000001C   250100EF           SWI      +293
    566            str_2ws(ws,fl->fullname,ec.maxlen);
   \   00000020   F821DDE1           LDRSH    R2,[SP, #+24]
   \   00000024   081095E5           LDR      R1,[R5, #+8]
   \   00000028   0060A0E1           MOV      R6,R0
   \   0000002C   6C0100EF           SWI      +364
    567            EDIT_SetTextToFocused(ed_gui,ws);
   \   00000030   0610A0E1           MOV      R1,R6
   \   00000034   0400A0E1           MOV      R0,R4
   \   00000038   810100EF           SWI      +385
    568            FreeWS(ws);
   \   0000003C   0600A0E1           MOV      R0,R6
   \   00000040   290100EF           SWI      +297
    569          }
   \   00000044   2CD08DE2           ADD      SP,SP,#+44
   \   00000048   7080BDE8           POP      {R4-R6,PC}       ;; return
    570            
    571          
    572          char header[128];

   \                                 In segment CODE, align 4, keep-with-next
    573          int filelist_menu_onkey(void *data, GUI_MSG *msg)
    574          {
   \                     filelist_menu_onkey:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
    575            FVIEW *fview=MenuGetUserPointer(data);
    576            FLIST *fl;
    577            int i, n;
    578            i=GetCurMenuItem(data);
    579            fl=FindFLISTtByN(i);
    580            
    581            if (msg->keys==0x3D)
   \   00000004   ........           LDR      R8,??DataTable5  ;; filelist_HDR
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0190A0E1           MOV      R9,R1
   \   00000010   E00100EF           SWI      +480
   \   00000014   0050A0E1           MOV      R5,R0
   \   00000018   0400A0E1           MOV      R0,R4
   \   0000001C   8F0100EF           SWI      +399
   \   00000020   ........           BL       FindFLISTtByN
   \   00000024   0060A0E1           MOV      R6,R0
   \   00000028   F200D9E1           LDRSH    R0,[R9, #+2]
   \   0000002C   6C7FA0E3           MOV      R7,#+432
   \   00000030   3D0050E3           CMP      R0,#+61
   \   00000034   2C00001A           BNE      ??filelist_menu_onkey_0
    582            {    
    583              if (fl) 
   \   00000038   000056E3           CMP      R6,#+0
   \   0000003C   2100000A           BEQ      ??filelist_menu_onkey_1
    584              {
    585                if (fl->is_folder==IS_FOLDER || fl->is_folder==IS_BACK)
   \   00000040   040096E5           LDR      R0,[R6, #+4]
   \   00000044   010050E3           CMP      R0,#+1
   \   00000048   00005013           CMPNE    R0,#+0
   \   0000004C   2C00001A           BNE      ??filelist_menu_onkey_2
    586                {
    587                  int len;
    588                  if (strcmp(fl->fullname,"ROOT"))
   \   00000050   080096E5           LDR      R0,[R6, #+8]
   \   00000054   30119FE5           LDR      R1,??filelist_menu_onkey_3  ;; back + 4
   \   00000058   190000EF           SWI      +25
   \   0000005C   000050E3           CMP      R0,#+0
   \   00000060   0E00000A           BEQ      ??filelist_menu_onkey_4
    589                  {
    590                    strncpy(header,fl->fullname,sizeof(header)-1);
   \   00000064   081096E5           LDR      R1,[R6, #+8]
   \   00000068   7F20A0E3           MOV      R2,#+127
   \   0000006C   200088E2           ADD      R0,R8,#+32
   \   00000070   160100EF           SWI      +278
    591                    len=strlen(fl->fullname);
   \   00000074   080096E5           LDR      R0,[R6, #+8]
   \   00000078   1B0000EF           SWI      +27
    592                    header[len>sizeof(header)-1?sizeof(header)-1:len]=0;
   \   0000007C   800050E3           CMP      R0,#+128
   \   00000080   7F00A023           MOVCS    R0,#+127
   \   00000084   080080E0           ADD      R0,R0,R8
   \   00000088   0010A0E3           MOV      R1,#+0
   \   0000008C   2010C0E5           STRB     R1,[R0, #+32]
    593                    n=FindFiles(fl->fullname,fview->type);
   \   00000090   041095E5           LDR      R1,[R5, #+4]
   \   00000094   080096E5           LDR      R0,[R6, #+8]
   \   00000098   ........           BL       FindFiles
   \   0000009C   000000EA           B        ??filelist_menu_onkey_5
    594                  }
    595                  else
    596                  {
    597                    int CreateRootMenu();
    598                    n=CreateRootMenu();
   \                     ??filelist_menu_onkey_4:
   \   000000A0   ........           BL       CreateRootMenu
   \                     ??filelist_menu_onkey_5:
   \   000000A4   0050A0E1           MOV      R5,R0
    599                  }         
    600                  UpdateFListHeader();
   \   000000A8   ........           BL       UpdateFListHeader
    601                  Menu_SetItemCountDyn(data,n);
   \   000000AC   0510A0E1           MOV      R1,R5
   \   000000B0   0400A0E1           MOV      R0,R4
   \   000000B4   E60100EF           SWI      +486
    602                  SetCursorToMenuItem(data, 0);
   \   000000B8   0010A0E3           MOV      R1,#+0
   \   000000BC   0400A0E1           MOV      R0,R4
   \   000000C0   C40100EF           SWI      +452
    603                  RefreshGUI();
   \   000000C4   960100EF           SWI      +406
    604                }
    605                else
    606                {
    607                  SavePath(fview->gui,fl);        
    608                  return (1);
    609                }
    610              }
    611          
    612              if (strlen(FListT9Key))
   \                     ??filelist_menu_onkey_1:
   \   000000C8   080087E0           ADD      R0,R7,R8
   \   000000CC   1B0000EF           SWI      +27
   \   000000D0   000050E3           CMP      R0,#+0
   \   000000D4   2800000A           BEQ      ??filelist_menu_onkey_6
    613                {
    614          	ClearT9Key(FListT9Key);
   \   000000D8   080087E0           ADD      R0,R7,R8
   \   000000DC   ........           _BLF     ClearT9Key,??ClearT9Key??rA
    615          	RecountFList();
   \   000000E0   ........           BL       RecountFList
    616                }
    617              //    GeneralFunc_F1(1);
    618              return(-1);
   \   000000E4   0000E0E3           MVN      R0,#+0
   \   000000E8   F083BDE8           POP      {R4-R9,PC}
    619            }
    620            
    621            if (msg->keys==0x18)
   \                     ??filelist_menu_onkey_0:
   \   000000EC   180050E3           CMP      R0,#+24
   \   000000F0   0800001A           BNE      ??filelist_menu_onkey_7
    622            {
    623              if (fl)
   \   000000F4   000056E3           CMP      R6,#+0
    624              {
    625                if (fl->is_folder!=IS_BACK)
   \   000000F8   04009615           LDRNE    R0,[R6, #+4]
   \   000000FC   00005013           CMPNE    R0,#+0
   \   00000100   1D00000A           BEQ      ??filelist_menu_onkey_6
    626                {
    627                  SavePath(fview->gui,fl);
    628                  return (1);
    629                }      
    630              }   
    631              return (-1);
    632            }
   \                     ??filelist_menu_onkey_2:
   \   00000104   000095E5           LDR      R0,[R5, #+0]
   \   00000108   0610A0E1           MOV      R1,R6
   \   0000010C   ........           BL       SavePath
   \   00000110   0100A0E3           MOV      R0,#+1
   \   00000114   F083BDE8           POP      {R4-R9,PC}
    633           
    634            if (msg->gbsmsg->msg==KEY_DOWN)
   \                     ??filelist_menu_onkey_7:
   \   00000118   041099E5           LDR      R1,[R9, #+4]
   \   0000011C   1D3047E2           SUB      R3,R7,#+29
   \   00000120   042091E5           LDR      R2,[R1, #+4]
   \   00000124   030052E1           CMP      R2,R3
   \   00000128   0400001A           BNE      ??filelist_menu_onkey_8
    635            {
    636              int key=msg->gbsmsg->submess;
   \   0000012C   081091E5           LDR      R1,[R1, #+8]
    637              if (((key>='0')&&(key<='9'))||(key=='#')||(key=='*'))
   \   00000130   300051E3           CMP      R1,#+48
   \   00000134   0A0000BA           BLT      ??filelist_menu_onkey_9
   \   00000138   3A0051E3           CMP      R1,#+58
   \   0000013C   0B0000BA           BLT      ??filelist_menu_onkey_10
    638              {
    639                AddT9Key(FListT9Key,key);
    640                RecountFList();
    641                return(-1);
    642              }
    643            }
    644            
    645            if (msg->keys==1)
   \                     ??filelist_menu_onkey_8:
   \   00000140   010050E3           CMP      R0,#+1
   \   00000144   0E00001A           BNE      ??filelist_menu_onkey_11
    646            {
    647              if (strlen(FListT9Key))
   \   00000148   080087E0           ADD      R0,R7,R8
   \   0000014C   1B0000EF           SWI      +27
   \   00000150   000050E3           CMP      R0,#+0
   \   00000154   F083BD08           POPEQ    {R4-R9,PC}
    648              {
    649                BackSpaceT9(FListT9Key);
   \   00000158   080087E0           ADD      R0,R7,R8
   \   0000015C   ........           _BLF     BackSpaceT9,??BackSpaceT9??rA
    650                RecountFList();
   \   00000160   040000EA           B        ??filelist_menu_onkey_12
    651                return(-1);
    652              }
    653            }
   \                     ??filelist_menu_onkey_9:
   \   00000164   230051E3           CMP      R1,#+35
   \   00000168   2A005113           CMPNE    R1,#+42
   \   0000016C   F3FFFF1A           BNE      ??filelist_menu_onkey_8
   \                     ??filelist_menu_onkey_10:
   \   00000170   080087E0           ADD      R0,R7,R8
   \   00000174   ........           _BLF     AddT9Key,??AddT9Key??rA
   \                     ??filelist_menu_onkey_12:
   \   00000178   ........           BL       RecountFList
   \                     ??filelist_menu_onkey_6:
   \   0000017C   0000E0E3           MVN      R0,#+0
   \   00000180   F083BDE8           POP      {R4-R9,PC}
    654            return (0);
   \                     ??filelist_menu_onkey_11:
   \   00000184   0000A0E3           MOV      R0,#+0
   \   00000188   F083BDE8           POP      {R4-R9,PC}       ;; return
   \                     ??filelist_menu_onkey_3:
   \   0000018C   ........           DC32     back + 4
    655          }
    656          

   \                                 In segment CODE, align 4, keep-with-next
    657          void filelist_menu_ghook(void *data, int cmd)
    658          {
   \                     filelist_menu_ghook:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0140A0E1           MOV      R4,R1
    659            FVIEW *fview=MenuGetUserPointer(data);
   \   00000008   E00100EF           SWI      +480
   \   0000000C   0050A0E1           MOV      R5,R0
    660            if (cmd==TI_CMD_DESTROY)
   \   00000010   030054E3           CMP      R4,#+3
   \   00000014   0300001A           BNE      ??filelist_menu_ghook_0
    661            {
    662              Free_FLIST();
   \   00000018   ........           BL       Free_FLIST
    663              mfree(fview);    
   \   0000001C   0500A0E1           MOV      R0,R5
   \   00000020   150000EF           SWI      +21
   \   00000024   3080BDE8           POP      {R4,R5,PC}
    664            }
    665            if (cmd==TI_CMD_FOCUS)
   \                     ??filelist_menu_ghook_0:
   \   00000028   0A0054E3           CMP      R4,#+10
   \   0000002C   3080BD18           POPNE    {R4,R5,PC}
    666            {
    667              DisableIDLETMR();
   \   00000030   7F0100EF           SWI      +383
    668            }
    669          }
   \   00000034   3080BDE8           POP      {R4,R5,PC}       ;; return
    670          

   \                                 In segment CODE, align 4, keep-with-next
    671          void filelist_menu_iconhndl(void *data, int curitem, void *user_pointer)
    672          {
   \                     filelist_menu_iconhndl:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
    673            FLIST *fl;
    674            WSHDR *ws;
    675            void *item=AllocMenuItem(data);
   \   0000000C   970100EF           SWI      +407
   \   00000010   0060A0E1           MOV      R6,R0
    676            int len;
    677            UpdateFListHeader();
   \   00000014   ........           BL       UpdateFListHeader
    678            fl=FindFLISTtByN(curitem);
   \   00000018   0500A0E1           MOV      R0,R5
   \   0000001C   ........           BL       FindFLISTtByN
   \   00000020   0070B0E1           MOVS     R7,R0
    679            if (fl)
   \   00000024   1D00000A           BEQ      ??filelist_menu_iconhndl_0
    680            {
    681              len=strlen(fl->name);
   \   00000028   0C0097E5           LDR      R0,[R7, #+12]
   \   0000002C   1B0000EF           SWI      +27
   \   00000030   0080A0E1           MOV      R8,R0
    682              ws=AllocMenuWS(data,len+4);
   \   00000034   041088E2           ADD      R1,R8,#+4
   \   00000038   0400A0E1           MOV      R0,R4
   \   0000003C   980100EF           SWI      +408
   \   00000040   0090A0E1           MOV      R9,R0
    683              if (fl->is_folder==IS_BACK || fl->is_folder==IS_FOLDER)
   \   00000044   040097E5           LDR      R0,[R7, #+4]
   \   00000048   000050E3           CMP      R0,#+0
   \   0000004C   01005013           CMPNE    R0,#+1
   \   00000050   0D00001A           BNE      ??filelist_menu_iconhndl_1
    684              {
    685                str_2ws(ws,fl->name,len);
   \   00000054   0C1097E5           LDR      R1,[R7, #+12]
   \   00000058   0820A0E1           MOV      R2,R8
   \   0000005C   0900A0E1           MOV      R0,R9
   \   00000060   6C0100EF           SWI      +364
    686                wsInsertChar(ws,0x0002,1);
   \   00000064   0120A0E3           MOV      R2,#+1
   \   00000068   0210A0E3           MOV      R1,#+2
   \   0000006C   0900A0E1           MOV      R0,R9
   \   00000070   1D0000EF           SWI      +29
    687                wsInsertChar(ws,0xE008,1);
   \   00000074   0120A0E3           MOV      R2,#+1
   \   00000078   0810A0E3           MOV      R1,#+8
   \   0000007C   E01C81E3           ORR      R1,R1,#0xE000
   \   00000080   0900A0E1           MOV      R0,R9
   \   00000084   1D0000EF           SWI      +29
   \   00000088   0A0000EA           B        ??filelist_menu_iconhndl_2
    688              }
    689              else
    690              {
    691                str_2ws(ws,fl->name,len);
   \                     ??filelist_menu_iconhndl_1:
   \   0000008C   0C1097E5           LDR      R1,[R7, #+12]
   \   00000090   0820A0E1           MOV      R2,R8
   \   00000094   0900A0E1           MOV      R0,R9
   \   00000098   6C0100EF           SWI      +364
   \   0000009C   050000EA           B        ??filelist_menu_iconhndl_2
    692              }
    693            }
    694            else
    695            {
    696              ws=AllocMenuWS(data,10);
   \                     ??filelist_menu_iconhndl_0:
   \   000000A0   0A10A0E3           MOV      R1,#+10
   \   000000A4   0400A0E1           MOV      R0,R4
   \   000000A8   980100EF           SWI      +408
    697              wsprintf(ws, "Ошибка");
   \   000000AC   1C109FE5           LDR      R1,??filelist_menu_iconhndl_3  ;; `?<Constant "\\316\\370\\350\\341\\352\\340">`
   \   000000B0   0090A0E1           MOV      R9,R0
   \   000000B4   240100EF           SWI      +292
    698            }
    699            SetMenuItemText(data, item, ws, curitem);
   \                     ??filelist_menu_iconhndl_2:
   \   000000B8   0530A0E1           MOV      R3,R5
   \   000000BC   0920A0E1           MOV      R2,R9
   \   000000C0   0610A0E1           MOV      R1,R6
   \   000000C4   0400A0E1           MOV      R0,R4
   \   000000C8   9A0100EF           SWI      +410
    700          }
   \   000000CC   F083BDE8           POP      {R4-R9,PC}       ;; return
   \                     ??filelist_menu_iconhndl_3:
   \   000000D0   ........           DC32     `?<Constant "\\316\\370\\350\\341\\352\\340">`

   \                                 In segment DATA_I, align 4, align-sorted
    701          
    702          int fmenusoftkeys[]={0,1,2};
    703          SOFTKEY_DESC fmenu_sk[]=
    704          {
    705            {0x0018,0x0000,(int)"Select"},
    706            {0x0001,0x0000,(int)"Close"},
    707            {0x003D,0x0000,(int)"+"}
    708          };
    709          
    710          SOFTKEYSTAB fmenu_skt=
    711          {
    712            fmenu_sk,0
    713          };
    714          
    715          HEADER_DESC filelist_HDR={0,0,0,0,NULL,(int)header,LGP_NULL};
   \                     filelist_HDR:
   \   00000000                      DS8 20
   \   00000014                      REQUIRE `?<Initializer for filelist_HDR>`
   \                     fltop:
   \   00000014                      DS8 4
   \   00000018                      REQUIRE `?<Initializer for fltop>`
   \                     flist_id:
   \   00000018                      DS8 4
   \   0000001C                      REQUIRE `?<Initializer for flist_id>`
   \                     flist_prev_itemcount:
   \   0000001C                      DS8 4
   \   00000020                      REQUIRE `?<Initializer for flist_prev_itemcount>`
   \                     header:
   \   00000020                      DS8 128
   \   000000A0                      REQUIRE `?<Initializer for header>`
   \                     flist_hdr_text:
   \   000000A0                      DS8 128
   \   00000120                      REQUIRE `?<Initializer for flist_hdr_text>`
   \                     flist_sk_r:
   \   00000120                      DS8 16
   \   00000130                      REQUIRE `?<Initializer for flist_sk_r>`
   \                     flist_header:
   \   00000130                      DS8 128
   \   000001B0                      REQUIRE `?<Initializer for flist_header>`
   \                     FListT9Key:
   \   000001B0                      DS8 32
   \   000001D0                      REQUIRE `?<Initializer for FListT9Key>`
    716          
    717          MENU_DESC filelist_STRUCT=
   \                     filelist_STRUCT:
   \   000001D0                      DS8 44
   \   000001FC                      REQUIRE `?<Initializer for filelist_STRUCT>`

   \                                 In segment DATA_I, align 4, align-sorted
   \                     fmenusoftkeys:
   \   00000000                      DS8 12
   \   0000000C                      REQUIRE `?<Initializer for fmenusoftkeys>`

   \                                 In segment DATA_I, align 4, align-sorted
   \                     fmenu_sk:
   \   00000000                      DS8 24
   \   00000018                      REQUIRE `?<Initializer for fmenu_sk>`

   \                                 In segment DATA_I, align 4, align-sorted
   \                     fmenu_skt:
   \   00000000                      DS8 8
   \   00000008                      REQUIRE `?<Initializer for fmenu_skt>`
    718          {
    719            8,filelist_menu_onkey,filelist_menu_ghook,NULL,
    720            fmenusoftkeys,
    721            &fmenu_skt,
    722            0x10,
    723            filelist_menu_iconhndl,
    724            NULL,   //Items
    725            NULL,   //Procs
    726            0   //n
    727          };
    728          

   \                                 In segment CODE, align 4, keep-with-next
    729          int CreateRootMenu()
    730          {
   \                     CreateRootMenu:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   24D04DE2           SUB      SP,SP,#+36
    731            char path[32];
    732            unsigned int err;
    733            int n=0;
   \   00000008   0040A0E3           MOV      R4,#+0
    734            Free_FLIST();
    735            for (int i=0; i!=5; i++)
   \   0000000C   0050A0E3           MOV      R5,#+0
   \   00000010   ........           BL       Free_FLIST
    736            {
    737              path[0]=i+'0';
   \                     ??CreateRootMenu_0:
   \   00000014   301085E2           ADD      R1,R5,#+48
   \   00000018   0410CDE5           STRB     R1,[SP, #+4]
    738              path[1]=':';
   \   0000001C   3A10A0E3           MOV      R1,#+58
   \   00000020   0510CDE5           STRB     R1,[SP, #+5]
    739              path[2]='\\';
   \   00000024   5C10A0E3           MOV      R1,#+92
   \   00000028   0610CDE5           STRB     R1,[SP, #+6]
    740              path[3]=0;
   \   0000002C   0010A0E3           MOV      R1,#+0
   \   00000030   0710CDE5           STRB     R1,[SP, #+7]
    741              if (isdir(path,&err))
   \   00000034   0D10A0E1           MOV      R1,SP
   \   00000038   04008DE2           ADD      R0,SP,#+4
   \   0000003C   910000EF           SWI      +145
   \   00000040   000050E3           CMP      R0,#+0
   \   00000044   0400000A           BEQ      ??CreateRootMenu_1
    742              {
    743                AddToFList(path,path,IS_FOLDER);
   \   00000048   0120A0E3           MOV      R2,#+1
   \   0000004C   04108DE2           ADD      R1,SP,#+4
   \   00000050   04008DE2           ADD      R0,SP,#+4
   \   00000054   ........           BL       AddToFList
    744                n++;
   \   00000058   014084E2           ADD      R4,R4,#+1
    745              }
    746            }
   \                     ??CreateRootMenu_1:
   \   0000005C   015085E2           ADD      R5,R5,#+1
   \   00000060   050055E3           CMP      R5,#+5
   \   00000064   EAFFFF1A           BNE      ??CreateRootMenu_0
    747            strcpy(header,"Root");
   \   00000068   10109FE5           LDR      R1,??CreateRootMenu_2  ;; `?<Constant "Root">`
   \   0000006C   10009FE5           LDR      R0,??CreateRootMenu_2+0x4  ;; filelist_HDR + 32
   \   00000070   1A0000EF           SWI      +26
    748            return (n);
   \   00000074   0400A0E1           MOV      R0,R4
   \   00000078   24D08DE2           ADD      SP,SP,#+36
   \   0000007C   3080BDE8           POP      {R4,R5,PC}       ;; return
   \                     ??CreateRootMenu_2:
   \   00000080   ........           DC32     `?<Constant "Root">`
   \   00000084   ........           DC32     filelist_HDR + 32
    749          }
    750          
    751          

   \                                 In segment CODE, align 4, keep-with-next
    752          void open_select_file_gui(void *ed_gui, int type)
    753          {
   \                     open_select_file_gui:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   ACD04DE2           SUB      SP,SP,#+172
   \   00000008   0160A0E1           MOV      R6,R1
   \   0000000C   0080A0E1           MOV      R8,R0
    754            EDITCONTROL ec;
    755            FVIEW *fview;
    756            char path[128];
    757            char *s, *rev=0;
   \   00000010   0040A0E3           MOV      R4,#+0
   \   00000014   0070A0E3           MOV      R7,#+0
    758            int n, c, len;
    759            
    760            fview=malloc(sizeof(FVIEW));
   \   00000018   0800A0E3           MOV      R0,#+8
   \   0000001C   140000EF           SWI      +20
   \   00000020   0050A0E1           MOV      R5,R0
    761            fview->gui=ed_gui;
   \   00000024   008085E5           STR      R8,[R5, #+0]
    762            fview->type=type;
   \   00000028   046085E5           STR      R6,[R5, #+4]
    763            EDIT_ExtractFocusedControl(ed_gui,&ec);
   \   0000002C   80108DE2           ADD      R1,SP,#+128
   \   00000030   0800A0E1           MOV      R0,R8
   \   00000034   C60100EF           SWI      +454
    764            ws_2str(ec.pWS,path,127);
   \   00000038   A8009DE5           LDR      R0,[SP, #+168]
   \   0000003C   7F20A0E3           MOV      R2,#+127
   \   00000040   0D10A0E1           MOV      R1,SP
   \   00000044   A30000EF           SWI      +163
    765            s=path;
   \   00000048   0D00A0E1           MOV      R0,SP
   \   0000004C   040000EA           B        ??open_select_file_gui_0
    766            while((c=*s++))
    767            {
    768              if (c=='\\' && *s!='\0') rev=s;  
   \                     ??open_select_file_gui_1:
   \   00000050   5C0051E3           CMP      R1,#+92
   \   00000054   0200001A           BNE      ??open_select_file_gui_0
   \   00000058   0010D0E5           LDRB     R1,[R0, #+0]
   \   0000005C   000051E3           CMP      R1,#+0
   \   00000060   0070A011           MOVNE    R7,R0
    769            }
   \                     ??open_select_file_gui_0:
   \   00000064   ........           LDRB     R1,[R0], #+1
   \   00000068   000051E3           CMP      R1,#+0
   \   0000006C   F7FFFF1A           BNE      ??open_select_file_gui_1
    770            if (!rev)
   \   00000070   A4809FE5           LDR      R8,??open_select_file_gui_2  ;; filelist_HDR
   \   00000074   000057E3           CMP      R7,#+0
   \   00000078   0100001A           BNE      ??open_select_file_gui_3
    771              n=CreateRootMenu();
   \   0000007C   ........           BL       CreateRootMenu
   \   00000080   0D0000EA           B        ??open_select_file_gui_4
    772            else
    773            {
    774              *rev=0;
   \                     ??open_select_file_gui_3:
   \   00000084   0040C7E5           STRB     R4,[R7, #+0]
    775              strncpy(header,path,sizeof(header)-1);
   \   00000088   7F20A0E3           MOV      R2,#+127
   \   0000008C   0D10A0E1           MOV      R1,SP
   \   00000090   200088E2           ADD      R0,R8,#+32
   \   00000094   160100EF           SWI      +278
    776              len=strlen(path);
   \   00000098   0D00A0E1           MOV      R0,SP
   \   0000009C   1B0000EF           SWI      +27
    777              header[len>sizeof(header)-1?sizeof(header)-1:len]=0;
   \   000000A0   800050E3           CMP      R0,#+128
   \   000000A4   7F00A023           MOVCS    R0,#+127
   \   000000A8   080080E0           ADD      R0,R0,R8
   \   000000AC   2040C0E5           STRB     R4,[R0, #+32]
    778              n=FindFiles(path,type);
   \   000000B0   0610A0E1           MOV      R1,R6
   \   000000B4   0D00A0E1           MOV      R0,SP
   \   000000B8   ........           BL       FindFiles
   \                     ??open_select_file_gui_4:
   \   000000BC   0060A0E1           MOV      R6,R0
    779            }    
    780            UpdateFListHeader();
   \   000000C0   ........           BL       UpdateFListHeader
    781            flist_prev_itemcount=n;
   \   000000C4   1C6088E5           STR      R6,[R8, #+28]
    782            patch_header(&filelist_HDR);
   \   000000C8   B040C8E1           STRH     R4,[R8, #+0]
   \   000000CC   1800A0E3           MOV      R0,#+24
   \   000000D0   B200C8E1           STRH     R0,[R8, #+2]
   \   000000D4   888100EF           SWI      +33160
   \   000000D8   010040E2           SUB      R0,R0,#+1
   \   000000DC   B400C8E1           STRH     R0,[R8, #+4]
   \   000000E0   8A8100EF           SWI      +33162
   \   000000E4   170080E2           ADD      R0,R0,#+23
   \   000000E8   B600C8E1           STRH     R0,[R8, #+6]
    783            flist_id=CreateMenu(0,0,&filelist_STRUCT,&filelist_HDR,0,n,fview,0);
   \   000000EC   0000A0E3           MOV      R0,#+0
   \   000000F0   01002DE9           PUSH     {R0}
   \   000000F4   20002DE9           PUSH     {R5}
   \   000000F8   40002DE9           PUSH     {R6}
   \   000000FC   01002DE9           PUSH     {R0}
   \   00000100   0830A0E1           MOV      R3,R8
   \   00000104   742F88E2           ADD      R2,R8,#+464
   \   00000108   0010A0E1           MOV      R1,R0
   \   0000010C   520100EF           SWI      +338
   \   00000110   180088E5           STR      R0,[R8, #+24]
    784          }
   \   00000114   BCD08DE2           ADD      SP,SP,#+188
   \   00000118   F081BDE8           POP      {R4-R8,PC}       ;; return
   \                     ??open_select_file_gui_2:
   \   0000011C   ........           DC32     filelist_HDR

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable5:
   \   00000000   ........           DC32     filelist_HDR

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for colors>`:
   \   00000000   FF00006400FF       DC8 255, 0, 0, 100, 0, 255, 0, 100, 0, 0, 255, 100, 198, 170, 175, 50
   \              00640000FF64
   \              C6AAAF32    
   \                     `?<Initializer for black>`:
   \   00000010   00000064           DC8 0, 0, 0, 100
   \                     `?<Initializer for white>`:
   \   00000014   FFFFFF64           DC8 255, 255, 255, 100
   \                     `?<Initializer for transparent>`:
   \   00000018   00000000           DC8 0, 0, 0, 0

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for filelist_HDR>`:
   \   00000000   000000000000       DC16 0, 0, 0, 0
   \              0000        
   \   00000008   00000000....       DC32 0H, header, 2147483647
   \              ....FFFFFF7F
   \                     `?<Initializer for fltop>`:
   \   00000014   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for flist_id>`:
   \   00000018   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for flist_prev_itemcount>`:
   \   0000001C   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for header>`:
   \   00000020   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000030   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000040   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000050   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000060   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000070   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000080   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000090   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \                     `?<Initializer for flist_hdr_text>`:
   \   000000A0   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000000B0   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000000C0   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000000D0   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000000E0   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000000F0   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000100   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000110   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \                     `?<Initializer for flist_sk_r>`:
   \   00000120   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \                     `?<Initializer for flist_header>`:
   \   00000130   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000140   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000150   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000160   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000170   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000180   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000190   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000001A0   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \                     `?<Initializer for FListT9Key>`:
   \   000001B0   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000001C0   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \                     `?<Initializer for filelist_STRUCT>`:
   \   000001D0   08000000....       DC32 8, filelist_menu_onkey, filelist_menu_ghook, 0H, fmenusoftkeys
   \              ............
   \              00000000....
   \              ....        
   \   000001E4   ........1000       DC32 fmenu_skt, 16, filelist_menu_iconhndl, 0H, 0H, 0
   \              0000........
   \              000000000000
   \              000000000000

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for fmenusoftkeys>`:
   \   00000000   000000000100       DC32 0, 1, 2
   \              000002000000

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for fmenu_sk>`:
   \   00000000   18000000           DC16 24, 0
   \   00000004   ........           DC32 `?<Constant "Select">`
   \   00000008   01000000           DC16 1, 0
   \   0000000C   ........           DC32 `?<Constant "Close">`
   \   00000010   3D000000           DC16 61, 0
   \   00000014   ........           DC32 `?<Constant "+">`

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for fmenu_skt>`:
   \   00000000   ........0000       DC32 fmenu_sk, 0
   \              0000        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Select">`:
   \   00000000   53656C656374       DC8 "Select"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Close">`:
   \   00000000   436C6F736500       DC8 "Close"
   \   00000006   0000               DC8 0, 0
   \   00000008   496E70757420       DC8 "Input T9:"
   \              54393A00    
   \   00000012   0000               DC8 0, 0

   \                                 In segment DATA_C, align 1, align-sorted
   \                     `?<Constant "+">`:
   \   00000000   2B00               DC8 "+"

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   3C4300             DC8 "<C"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\316\\370\\350\\341\\352\\340">`:
   \   00000000   CEF8E8E1EAE0       DC8 "\316\370\350\341\352\340"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Root">`:
   \   00000000   526F6F7400         DC8 "Root"
   \   00000005   000000             DC8 0, 0, 0

   Maximum stack usage in bytes:

     Function               CSTACK
     --------               ------
     AddToFList                24
     CountFList                 8
     CreateRootMenu            48
     DrwImg                    64
     EditCoordinates           16
     FindFLISTtByN              8
     FindFLISTtByNS            16
     FindFiles               1252
     Free_FLIST                 8
     RecountFList              12
     SavePath                  60
     UpdateFListHeader         20
     filelist_menu_ghook       12
     filelist_menu_iconhndl    28
     filelist_menu_onkey       28
     method0_rect             104
     method1_rect               8
     method2_rect               8
     method3_rect               8
     method4_rect               0
     method5_rect              20
     method7_rect               4
     method8_rect               0
     method9_rect               0
     open_select_file_gui     212
     strcmp_nocase              0


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     colors                           28
     Pointer                           8
     ?<Constant "%u,%u,%u,%u">        32
     DrwImg                           92
     method0_rect                    644
     method1_rect                     32
     method2_rect                     28
     method3_rect                     28
     method4_rect                     20
     method5_rect                    648
     method7_rect                      4
     method8_rect                      8
     method9_rect                      8
     Canvas_1                         52
     EditCoordinates                 192
     Free_FLIST                       60
     back                             12
     ??strcmp_nocase_0                48
     AddToFList                      192
     FindFiles                       404
     FindFLISTtByNS                  144
     UpdateFListHeader               112
     CountFList                       68
     RecountFList                    104
     FindFLISTtByN                    84
     SavePath                         76
     filelist_menu_onkey             400
     filelist_menu_ghook              56
     filelist_menu_iconhndl          212
     filelist_HDR                    508
     fmenusoftkeys                    12
     fmenu_sk                         24
     fmenu_skt                         8
     CreateRootMenu                  136
     open_select_file_gui            288
     ??DataTable5                      4
     ?<Initializer for colors>        28
     ?<Initializer for filelist_HDR>
                                     508
     ?<Initializer for fmenusoftkeys>
                                      12
     ?<Initializer for fmenu_sk>      24
     ?<Initializer for fmenu_skt>      8
     ?<Constant "Select">              8
     ?<Constant "Close">              20
     ?<Constant "+">                   2
     ?<Constant "<C">                  3
     ?<Constant "\316\370\350\341\352\340">
                                       8
     ?<Constant "Root">                8
      Others                         164

 
 4 244 bytes in segment CODE
   153 bytes in segment DATA_C
   580 bytes in segment DATA_I
   580 bytes in segment DATA_ID
    12 bytes in segment INITTAB
 
 4 092 bytes of CODE  memory (+ 164 bytes shared)
   733 bytes of CONST memory
   580 bytes of DATA  memory

Errors: none
Warnings: none
