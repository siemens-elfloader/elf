##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.40A/W32 EVALUATION    28/Mar/2008  19:11:03 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  E:\Ivo\arm\IVOPLAY\mediafiles.c                      #
#    Command line    =  E:\Ivo\arm\IVOPLAY\mediafiles.c -D X75 -lC           #
#                       E:\Ivo\arm\IVOPLAY\ReleaseX75\List\ -lA              #
#                       E:\Ivo\arm\IVOPLAY\ReleaseX75\List\ -o               #
#                       E:\Ivo\arm\IVOPLAY\ReleaseX75\Obj\ -s9 --no_cse      #
#                       --no_unroll --no_inline --no_code_motion --no_tbaa   #
#                       --no_clustering --no_scheduling --cpu_mode arm       #
#                       --endian little --cpu ARM926EJ-S --stack_align 4     #
#                       --interwork -e --fpu None --dlib_config              #
#                       D:\arm\ARM\LIB\dl5tpainl8n.h -I D:\arm\ARM\INC\      #
#    List file       =  E:\Ivo\arm\IVOPLAY\ReleaseX75\List\mediafiles.lst    #
#    Object file     =  E:\Ivo\arm\IVOPLAY\ReleaseX75\Obj\mediafiles.r79     #
#                                                                            #
#                                                                            #
##############################################################################

E:\Ivo\arm\IVOPLAY\mediafiles.c
      1          #include "../inc/swilib.h"
      2          #include "language.h"
      3          #include "main.h"

   \                                 In segment DATA_C, align 1, align-sorted
   \   static char const __data pt[3]
   \                     pt:
   \   00000000   257400             DC8 "%t"

   \                                 In segment DATA_C, align 1, align-sorted
   \   static char const __data pp[1]
   \                     pp:
   \   00000000   00                 DC8 ""
      4          #include "mainmenu.h"
      5          #include "conf_loader.h"
      6          
      7          extern const char playerfolder[128];
      8          

   \                                 In segment DATA_Z, align 4, align-sorted
      9          int curent=0,select_art=0,select_alb=0,select_tra=0,max_art,max_alb,max_tra;
   \                     curent:
   \   00000000                      DS8 4

   \                                 In segment DATA_Z, align 4, align-sorted
   \                     select_art:
   \   00000000                      DS8 4

   \                                 In segment DATA_Z, align 4, align-sorted
   \                     select_alb:
   \   00000000                      DS8 4

   \                                 In segment DATA_Z, align 4, align-sorted
   \                     select_tra:
   \   00000000                      DS8 4

   \                                 In segment DATA_Z, align 4, align-sorted
   \                     max_art:
   \   00000000                      DS8 4

   \                                 In segment DATA_Z, align 4, align-sorted
   \                     max_alb:
   \   00000000                      DS8 4

   \                                 In segment DATA_Z, align 4, align-sorted
   \                     max_tra:
   \   00000000                      DS8 4

   \                                 In segment DATA_I, align 4, align-sorted
     10          int ToView=1;
   \                     ToView:
   \   00000000                      DS8 4
   \   00000004                      REQUIRE `?<Initializer for ToView>`

   \                                 In segment DATA_Z, align 4, align-sorted
     11          char masyv[30000];
   \                     masyv:
   \   00000000                      DS8 30000
     12          typedef struct
     13          {
     14            char c[30];
     15            int i;
     16          }p;

   \                                 In segment DATA_Z, align 4, align-sorted
     17          p artists[50],albums[50],tracks[200];
   \                     artists:
   \   00000000                      DS8 1800

   \                                 In segment DATA_Z, align 4, align-sorted
   \                     albums:
   \   00000000                      DS8 1800

   \                                 In segment DATA_Z, align 4, align-sorted
   \                     tracks:
   \   00000000                      DS8 7200

   \                                 In segment DATA_C, align 4, align-sorted
     18          const RECT Canvas3={0,0,131,175};
   \                     Canvas3:
   \   00000000   000000008300       DC16 0, 0, 131, 175
   \              AF00        

   \                                 In segment DATA_Z, align 4, align-sorted
     19          int GUI2;
   \                     GUI2:
   \   00000000                      DS8 4

   \                                 In segment CODE, align 4, keep-with-next
     20          void OnRedraw4(MAIN_GUI *data) // OnRedraw
     21          {
   \                     OnRedraw4:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
     22            WSHDR* a=AllocWS(128);
   \   00000008   8000A0E3           MOV      R0,#+128
   \   0000000C   250100EF           SWI      +293
   \   00000010   0040A0E1           MOV      R4,R0
     23            WSHDR* b=AllocWS(128);
   \   00000014   8000A0E3           MOV      R0,#+128
   \   00000018   250100EF           SWI      +293
   \   0000001C   0050A0E1           MOV      R5,R0
     24            DrawImg(0,0,(int)GetFon());
   \   00000020   ........           _BLF     GetFon,??GetFon??rA
   \   00000024   0020A0E1           MOV      R2,R0
   \   00000028   0010A0E3           MOV      R1,#+0
   \   0000002C   0000A0E3           MOV      R0,#+0
   \   00000030   230000EF           SWI      +35
     25            switch(ToView)
   \   00000034   ........           LDR      R0,??DataTable0  ;; ToView
   \   00000038   000090E5           LDR      R0,[R0, #+0]
   \   0000003C   010050E2           SUBS     R0,R0,#+1
   \   00000040   0400000A           BEQ      ??OnRedraw4_0
   \   00000044   010050E2           SUBS     R0,R0,#+1
   \   00000048   8A00000A           BEQ      ??OnRedraw4_1
   \   0000004C   010050E2           SUBS     R0,R0,#+1
   \   00000050   1301000A           BEQ      ??OnRedraw4_2
   \   00000054   C70100EA           B        ??OnRedraw4_3
     26            {
     27            case 1:
     28            {
     29              int bottom,top;
     30              if (max_art>9)
   \                     ??OnRedraw4_0:
   \   00000058   ........           LDR      R0,??DataTable9  ;; max_art
   \   0000005C   000090E5           LDR      R0,[R0, #+0]
   \   00000060   0A0050E3           CMP      R0,#+10
   \   00000064   140000BA           BLT      ??OnRedraw4_4
     31              {
     32              if((select_art-4)>=0){top=select_art-4;}else{top=0;}
   \   00000068   ........           LDR      R0,??DataTable21  ;; select_art
   \   0000006C   000090E5           LDR      R0,[R0, #+0]
   \   00000070   040050E2           SUBS     R0,R0,#+4
   \   00000074   0300004A           BMI      ??OnRedraw4_5
   \   00000078   ........           LDR      R0,??DataTable21  ;; select_art
   \   0000007C   000090E5           LDR      R0,[R0, #+0]
   \   00000080   047040E2           SUB      R7,R0,#+4
   \   00000084   000000EA           B        ??OnRedraw4_6
   \                     ??OnRedraw4_5:
   \   00000088   0070A0E3           MOV      R7,#+0
     33              if (top+10<max_art){bottom=max_art;}
     34              bottom=top+9;
   \                     ??OnRedraw4_6:
   \   0000008C   096087E2           ADD      R6,R7,#+9
     35              if(bottom>max_art)
   \   00000090   ........           LDR      R0,??DataTable9  ;; max_art
   \   00000094   000090E5           LDR      R0,[R0, #+0]
   \   00000098   060050E1           CMP      R0,R6
   \   0000009C   0B0000AA           BGE      ??OnRedraw4_7
     36              {
     37                while (bottom!=max_art) {bottom--;top--;}
   \                     ??OnRedraw4_8:
   \   000000A0   ........           LDR      R0,??DataTable9  ;; max_art
   \   000000A4   000090E5           LDR      R0,[R0, #+0]
   \   000000A8   000056E1           CMP      R6,R0
   \   000000AC   0700000A           BEQ      ??OnRedraw4_7
   \   000000B0   016046E2           SUB      R6,R6,#+1
   \   000000B4   017047E2           SUB      R7,R7,#+1
   \   000000B8   F8FFFFEA           B        ??OnRedraw4_8
     38              }
     39              }
     40              else
     41              {
     42                top=0;
   \                     ??OnRedraw4_4:
   \   000000BC   0070A0E3           MOV      R7,#+0
     43                bottom=max_art;
   \   000000C0   ........           LDR      R0,??DataTable9  ;; max_art
   \   000000C4   006090E5           LDR      R6,[R0, #+0]
     44              }
     45              int bkcolor=23;
     46              if (max_art!=0)
   \   000000C8   000056E3           CMP      R6,#+0
   \   000000CC   4B00000A           BEQ      ??OnRedraw4_9
     47              {
     48              for (int i=top;i<bottom;i++)
   \                     ??OnRedraw4_7:
   \   000000D0   060057E1           CMP      R7,R6
   \   000000D4   490000AA           BGE      ??OnRedraw4_9
   \   000000D8   2180A0E3           MOV      R8,#+33
   \   000000DC   2400A0E3           MOV      R0,#+36
   \   000000E0   ........           LDR      R1,??DataTable63  ;; artists
   \   000000E4   901729E0           MLA      R9,R0,R7,R1
     49              {
     50                  int colour=GetKatalogfontcolour();
   \                     ??OnRedraw4_10:
   \   000000E8   ........           _BLF     GetKatalogfontcolour,??GetKatalogfontcolour??rA
   \   000000EC   00A0A0E1           MOV      R10,R0
     51                  if (i==select_art)
   \   000000F0   ........           LDR      R0,??DataTable21  ;; select_art
   \   000000F4   000090E5           LDR      R0,[R0, #+0]
   \   000000F8   000057E1           CMP      R7,R0
   \   000000FC   0200001A           BNE      ??OnRedraw4_11
     52                {
     53                  bkcolor=GetKatalogbackgroundcolour();
   \   00000100   ........           _BLF     GetKatalogbackgroundcolour,??GetKatalogbackgroundcolour??rA
   \   00000104   00B0A0E1           MOV      R11,R0
   \   00000108   000000EA           B        ??OnRedraw4_12
     54                }
     55                else
     56                {
     57                  bkcolor=23;
   \                     ??OnRedraw4_11:
   \   0000010C   17B0A0E3           MOV      R11,#+23
     58                }
     59                  utf8_2ws(a,artists[i].c,320);
   \                     ??OnRedraw4_12:
   \   00000110   502FA0E3           MOV      R2,#+320
   \   00000114   0910A0E1           MOV      R1,R9
   \   00000118   0400A0E1           MOV      R0,R4
   \   0000011C   E30100EF           SWI      +483
     60                  wsprintf(a,pt,artists[i].c);
   \   00000120   0920A0E1           MOV      R2,R9
   \   00000124   64169FE5           LDR      R1,??OnRedraw4_13  ;; pt
   \   00000128   0400A0E1           MOV      R0,R4
   \   0000012C   240100EF           SWI      +292
     61                  if (Get_WS_width(a,7)<Get_WS_width(b,7))
   \   00000130   0710A0E3           MOV      R1,#+7
   \   00000134   0400A0E1           MOV      R0,R4
   \   00000138   080200EF           SWI      +520
   \   0000013C   00008DE5           STR      R0,[SP, #+0]
   \   00000140   01002DE9           PUSH     {R0}
   \   00000144   0710A0E3           MOV      R1,#+7
   \   00000148   0500A0E1           MOV      R0,R5
   \   0000014C   080200EF           SWI      +520
   \   00000150   0200BDE8           POP      {R1}
   \   00000154   000051E1           CMP      R1,R0
   \   00000158   0B00A0E1           MOV      R0,R11
   \   0000015C   100000AA           BGE      ??OnRedraw4_14
     62                  {
     63                    DrawString(b,2,(i-top)*15+22,1000,(i-top+1)*15+18,7,TEXT_ALIGNLEFT,GetPaletteAdrByColorIndex(colour),GetPaletteAdrByColorIndex(bkcolor));
   \   00000160   2E0100EF           SWI      +302
   \   00000164   00B0A0E1           MOV      R11,R0
   \   00000168   0A00A0E1           MOV      R0,R10
   \   0000016C   2E0100EF           SWI      +302
   \   00000170   00082DE9           PUSH     {R11}
   \   00000174   01002DE9           PUSH     {R0}
   \   00000178   0100A0E3           MOV      R0,#+1
   \   0000017C   01002DE9           PUSH     {R0}
   \   00000180   0700A0E3           MOV      R0,#+7
   \   00000184   01002DE9           PUSH     {R0}
   \   00000188   0800A0E1           MOV      R0,R8
   \   0000018C   01002DE9           PUSH     {R0}
   \   00000190   FA3FA0E3           MOV      R3,#+1000
   \   00000194   0B2048E2           SUB      R2,R8,#+11
   \   00000198   0210A0E3           MOV      R1,#+2
   \   0000019C   0500A0E1           MOV      R0,R5
   \   000001A0   0F0000EA           B        ??OnRedraw4_15
     64                  }
     65                  else
     66                  {
     67                    DrawString(a,2,(i-top)*15+22,1000,(i-top+1)*15+18,7,TEXT_ALIGNLEFT,GetPaletteAdrByColorIndex(colour),GetPaletteAdrByColorIndex(bkcolor));
   \                     ??OnRedraw4_14:
   \   000001A4   2E0100EF           SWI      +302
   \   000001A8   00B0A0E1           MOV      R11,R0
   \   000001AC   0A00A0E1           MOV      R0,R10
   \   000001B0   2E0100EF           SWI      +302
   \   000001B4   00082DE9           PUSH     {R11}
   \   000001B8   01002DE9           PUSH     {R0}
   \   000001BC   0100A0E3           MOV      R0,#+1
   \   000001C0   01002DE9           PUSH     {R0}
   \   000001C4   0700A0E3           MOV      R0,#+7
   \   000001C8   01002DE9           PUSH     {R0}
   \   000001CC   0800A0E1           MOV      R0,R8
   \   000001D0   01002DE9           PUSH     {R0}
   \   000001D4   FA3FA0E3           MOV      R3,#+1000
   \   000001D8   0B2048E2           SUB      R2,R8,#+11
   \   000001DC   0210A0E3           MOV      R1,#+2
   \   000001E0   0400A0E1           MOV      R0,R4
   \                     ??OnRedraw4_15:
   \   000001E4   4C0100EF           SWI      +332
   \   000001E8   14D08DE2           ADD      SP,SP,#+20       ;; stack cleaning
     68                  }
     69              }
   \   000001EC   017087E2           ADD      R7,R7,#+1
   \   000001F0   249089E2           ADD      R9,R9,#+36
   \   000001F4   0F8088E2           ADD      R8,R8,#+15
   \   000001F8   060057E1           CMP      R7,R6
   \   000001FC   B9FFFFBA           BLT      ??OnRedraw4_10
     70              }
     71              wsprintf(a,"%i%c%i",select_art+1,'/',max_art);
   \                     ??OnRedraw4_9:
   \   00000200   ........           LDR      R0,??DataTable9  ;; max_art
   \   00000204   000090E5           LDR      R0,[R0, #+0]
   \   00000208   01002DE9           PUSH     {R0}
   \   0000020C   2F30A0E3           MOV      R3,#+47
   \   00000210   ........           LDR      R0,??DataTable21  ;; select_art
   \   00000214   000090E5           LDR      R0,[R0, #+0]
   \   00000218   012080E2           ADD      R2,R0,#+1
   \   0000021C   70159FE5           LDR      R1,??OnRedraw4_13+0x4  ;; `?<Constant "%i%c%i">`
   \   00000220   0400A0E1           MOV      R0,R4
   \   00000224   240100EF           SWI      +292
     72              DrawString(a,1,3,128,176,7,TEXT_ALIGNRIGHT,GetPaletteAdrByColorIndex(GetKatalogfontcolour()),GetPaletteAdrByColorIndex(23)); 
   \   00000228   1700A0E3           MOV      R0,#+23
   \   0000022C   2E0100EF           SWI      +302
   \   00000230   0060A0E1           MOV      R6,R0
   \   00000234   ........           _BLF     GetKatalogfontcolour,??GetKatalogfontcolour??rA
   \   00000238   2E0100EF           SWI      +302
   \   0000023C   40002DE9           PUSH     {R6}
   \   00000240   01002DE9           PUSH     {R0}
   \   00000244   0400A0E3           MOV      R0,#+4
   \   00000248   01002DE9           PUSH     {R0}
   \   0000024C   0700A0E3           MOV      R0,#+7
   \   00000250   01002DE9           PUSH     {R0}
   \   00000254   B000A0E3           MOV      R0,#+176
   \   00000258   01002DE9           PUSH     {R0}
   \   0000025C   8030A0E3           MOV      R3,#+128
   \   00000260   0320A0E3           MOV      R2,#+3
   \   00000264   0110A0E3           MOV      R1,#+1
   \   00000268   0400A0E1           MOV      R0,R4
   \   0000026C   4C0100EF           SWI      +332
     73              wsprintf(a,pt,LG_ARTISTS);
   \   00000270   20259FE5           LDR      R2,??OnRedraw4_13+0x8  ;; `?<Constant "\\302\\350\\352\\356\\355\\340\\342\\366i.`
   \   00000274   150100EA           B        ??OnRedraw4_16
     74              DrawString(a,1,3,90,15,FONT_SMALL_BOLD,TEXT_ALIGNLEFT,GetPaletteAdrByColorIndex(GetKatalogfontcolour()),GetPaletteAdrByColorIndex(23));
     75              //wsprintf(wss.ws1,pt,LG_REMOVE);
     76              //DrawString(wss.ws1,1,163,130,176,7,TEXT_ALIGNLEFT,GetPaletteAdrByColorIndex(katalogfontcolour),GetPaletteAdrByColorIndex(23));
     77              //wsprintf(wss.ws1,pt,LG_ADD);
     78              //DrawString(wss.ws1,1,163,130,176,7,TEXT_ALIGNRIGHT,GetPaletteAdrByColorIndex(katalogfontcolour),GetPaletteAdrByColorIndex(23));
     79              DrawLine(0,17,132,17,0,GetPaletteAdrByColorIndex(GetKatalogfontcolour()));
     80              DrawLine(92,17,92,0,0,GetPaletteAdrByColorIndex(GetKatalogfontcolour()));
     81            }break;
     82            case 2:
     83              {
     84              int bottom,top;
     85              if (max_alb>9)
   \                     ??OnRedraw4_1:
   \   00000278   ........           LDR      R0,??DataTable83  ;; max_alb
   \   0000027C   000090E5           LDR      R0,[R0, #+0]
   \   00000280   0A0050E3           CMP      R0,#+10
   \   00000284   140000BA           BLT      ??OnRedraw4_17
     86              {
     87              if((select_alb-4)>=0){top=select_alb-4;}else{top=0;}
   \   00000288   ........           LDR      R0,??DataTable115  ;; select_alb
   \   0000028C   000090E5           LDR      R0,[R0, #+0]
   \   00000290   040050E2           SUBS     R0,R0,#+4
   \   00000294   0300004A           BMI      ??OnRedraw4_18
   \   00000298   ........           LDR      R0,??DataTable115  ;; select_alb
   \   0000029C   000090E5           LDR      R0,[R0, #+0]
   \   000002A0   047040E2           SUB      R7,R0,#+4
   \   000002A4   000000EA           B        ??OnRedraw4_19
   \                     ??OnRedraw4_18:
   \   000002A8   0070A0E3           MOV      R7,#+0
     88              if (top+10<max_alb){bottom=max_alb;}
     89              bottom=top+9;
   \                     ??OnRedraw4_19:
   \   000002AC   096087E2           ADD      R6,R7,#+9
     90              if(bottom>max_alb)
   \   000002B0   ........           LDR      R0,??DataTable83  ;; max_alb
   \   000002B4   000090E5           LDR      R0,[R0, #+0]
   \   000002B8   060050E1           CMP      R0,R6
   \   000002BC   0B0000AA           BGE      ??OnRedraw4_20
     91              {
     92                while (bottom!=max_alb) {bottom--;top--;}
   \                     ??OnRedraw4_21:
   \   000002C0   ........           LDR      R0,??DataTable83  ;; max_alb
   \   000002C4   000090E5           LDR      R0,[R0, #+0]
   \   000002C8   000056E1           CMP      R6,R0
   \   000002CC   0700000A           BEQ      ??OnRedraw4_20
   \   000002D0   016046E2           SUB      R6,R6,#+1
   \   000002D4   017047E2           SUB      R7,R7,#+1
   \   000002D8   F8FFFFEA           B        ??OnRedraw4_21
     93              }
     94              }
     95              else
     96              {
     97                top=0;
   \                     ??OnRedraw4_17:
   \   000002DC   0070A0E3           MOV      R7,#+0
     98                bottom=max_alb;
   \   000002E0   ........           LDR      R0,??DataTable83  ;; max_alb
   \   000002E4   006090E5           LDR      R6,[R0, #+0]
     99              }
    100              int bkcolor=23;
    101              if (max_alb!=0)
   \   000002E8   000056E3           CMP      R6,#+0
   \   000002EC   4B00000A           BEQ      ??OnRedraw4_22
    102              {
    103              for (int i=top;i<bottom;i++)
   \                     ??OnRedraw4_20:
   \   000002F0   060057E1           CMP      R7,R6
   \   000002F4   490000AA           BGE      ??OnRedraw4_22
   \   000002F8   2180A0E3           MOV      R8,#+33
   \   000002FC   2400A0E3           MOV      R0,#+36
   \   00000300   ........           LDR      R1,??DataTable116  ;; albums
   \   00000304   901729E0           MLA      R9,R0,R7,R1
    104              {
    105                  int colour=GetKatalogfontcolour();
   \                     ??OnRedraw4_23:
   \   00000308   ........           _BLF     GetKatalogfontcolour,??GetKatalogfontcolour??rA
   \   0000030C   00A0A0E1           MOV      R10,R0
    106                  utf8_2ws(a,albums[i].c,320);
   \   00000310   502FA0E3           MOV      R2,#+320
   \   00000314   0910A0E1           MOV      R1,R9
   \   00000318   0400A0E1           MOV      R0,R4
   \   0000031C   E30100EF           SWI      +483
    107                  wsprintf(b,pt,albums[i].c);
   \   00000320   0920A0E1           MOV      R2,R9
   \   00000324   64149FE5           LDR      R1,??OnRedraw4_13  ;; pt
   \   00000328   0500A0E1           MOV      R0,R5
   \   0000032C   240100EF           SWI      +292
    108                  if (i==select_alb)
   \   00000330   ........           LDR      R0,??DataTable115  ;; select_alb
   \   00000334   000090E5           LDR      R0,[R0, #+0]
   \   00000338   000057E1           CMP      R7,R0
   \   0000033C   0200001A           BNE      ??OnRedraw4_24
    109                {
    110                  bkcolor=GetKatalogbackgroundcolour();
   \   00000340   ........           _BLF     GetKatalogbackgroundcolour,??GetKatalogbackgroundcolour??rA
   \   00000344   00B0A0E1           MOV      R11,R0
   \   00000348   000000EA           B        ??OnRedraw4_25
    111                }
    112                else
    113                {
    114                  bkcolor=23;
   \                     ??OnRedraw4_24:
   \   0000034C   17B0A0E3           MOV      R11,#+23
    115                }
    116                  if (Get_WS_width(a,7)<Get_WS_width(b,7))
   \                     ??OnRedraw4_25:
   \   00000350   0710A0E3           MOV      R1,#+7
   \   00000354   0400A0E1           MOV      R0,R4
   \   00000358   080200EF           SWI      +520
   \   0000035C   00008DE5           STR      R0,[SP, #+0]
   \   00000360   01002DE9           PUSH     {R0}
   \   00000364   0710A0E3           MOV      R1,#+7
   \   00000368   0500A0E1           MOV      R0,R5
   \   0000036C   080200EF           SWI      +520
   \   00000370   0200BDE8           POP      {R1}
   \   00000374   000051E1           CMP      R1,R0
   \   00000378   0B00A0E1           MOV      R0,R11
   \   0000037C   100000AA           BGE      ??OnRedraw4_26
    117                  {
    118                    DrawString(b,2,(i-top)*15+22,1000,(i-top+1)*15+18,7,TEXT_ALIGNLEFT,GetPaletteAdrByColorIndex(colour),GetPaletteAdrByColorIndex(bkcolor));
   \   00000380   2E0100EF           SWI      +302
   \   00000384   00B0A0E1           MOV      R11,R0
   \   00000388   0A00A0E1           MOV      R0,R10
   \   0000038C   2E0100EF           SWI      +302
   \   00000390   00082DE9           PUSH     {R11}
   \   00000394   01002DE9           PUSH     {R0}
   \   00000398   0100A0E3           MOV      R0,#+1
   \   0000039C   01002DE9           PUSH     {R0}
   \   000003A0   0700A0E3           MOV      R0,#+7
   \   000003A4   01002DE9           PUSH     {R0}
   \   000003A8   0800A0E1           MOV      R0,R8
   \   000003AC   01002DE9           PUSH     {R0}
   \   000003B0   FA3FA0E3           MOV      R3,#+1000
   \   000003B4   0B2048E2           SUB      R2,R8,#+11
   \   000003B8   0210A0E3           MOV      R1,#+2
   \   000003BC   0500A0E1           MOV      R0,R5
   \   000003C0   0F0000EA           B        ??OnRedraw4_27
    119                  }
    120                  else
    121                  {
    122                    DrawString(a,2,(i-top)*15+22,1000,(i-top+1)*15+18,7,TEXT_ALIGNLEFT,GetPaletteAdrByColorIndex(colour),GetPaletteAdrByColorIndex(bkcolor));
   \                     ??OnRedraw4_26:
   \   000003C4   2E0100EF           SWI      +302
   \   000003C8   00B0A0E1           MOV      R11,R0
   \   000003CC   0A00A0E1           MOV      R0,R10
   \   000003D0   2E0100EF           SWI      +302
   \   000003D4   00082DE9           PUSH     {R11}
   \   000003D8   01002DE9           PUSH     {R0}
   \   000003DC   0100A0E3           MOV      R0,#+1
   \   000003E0   01002DE9           PUSH     {R0}
   \   000003E4   0700A0E3           MOV      R0,#+7
   \   000003E8   01002DE9           PUSH     {R0}
   \   000003EC   0800A0E1           MOV      R0,R8
   \   000003F0   01002DE9           PUSH     {R0}
   \   000003F4   FA3FA0E3           MOV      R3,#+1000
   \   000003F8   0B2048E2           SUB      R2,R8,#+11
   \   000003FC   0210A0E3           MOV      R1,#+2
   \   00000400   0400A0E1           MOV      R0,R4
   \                     ??OnRedraw4_27:
   \   00000404   4C0100EF           SWI      +332
   \   00000408   14D08DE2           ADD      SP,SP,#+20       ;; stack cleaning
    123                  }
    124              }
   \   0000040C   017087E2           ADD      R7,R7,#+1
   \   00000410   249089E2           ADD      R9,R9,#+36
   \   00000414   0F8088E2           ADD      R8,R8,#+15
   \   00000418   060057E1           CMP      R7,R6
   \   0000041C   B9FFFFBA           BLT      ??OnRedraw4_23
    125              }
    126              wsprintf(a,"%i%c%i",select_alb+1,'/',max_alb);
   \                     ??OnRedraw4_22:
   \   00000420   ........           LDR      R0,??DataTable83  ;; max_alb
   \   00000424   000090E5           LDR      R0,[R0, #+0]
   \   00000428   01002DE9           PUSH     {R0}
   \   0000042C   2F30A0E3           MOV      R3,#+47
   \   00000430   ........           LDR      R0,??DataTable115  ;; select_alb
   \   00000434   000090E5           LDR      R0,[R0, #+0]
   \   00000438   012080E2           ADD      R2,R0,#+1
   \   0000043C   50139FE5           LDR      R1,??OnRedraw4_13+0x4  ;; `?<Constant "%i%c%i">`
   \   00000440   0400A0E1           MOV      R0,R4
   \   00000444   240100EF           SWI      +292
    127              DrawString(a,1,3,128,176,7,TEXT_ALIGNRIGHT,GetPaletteAdrByColorIndex(GetKatalogfontcolour()),GetPaletteAdrByColorIndex(23)); 
   \   00000448   1700A0E3           MOV      R0,#+23
   \   0000044C   2E0100EF           SWI      +302
   \   00000450   0060A0E1           MOV      R6,R0
   \   00000454   ........           _BLF     GetKatalogfontcolour,??GetKatalogfontcolour??rA
   \   00000458   2E0100EF           SWI      +302
   \   0000045C   40002DE9           PUSH     {R6}
   \   00000460   01002DE9           PUSH     {R0}
   \   00000464   0400A0E3           MOV      R0,#+4
   \   00000468   01002DE9           PUSH     {R0}
   \   0000046C   0700A0E3           MOV      R0,#+7
   \   00000470   01002DE9           PUSH     {R0}
   \   00000474   B000A0E3           MOV      R0,#+176
   \   00000478   01002DE9           PUSH     {R0}
   \   0000047C   8030A0E3           MOV      R3,#+128
   \   00000480   0320A0E3           MOV      R2,#+3
   \   00000484   0110A0E3           MOV      R1,#+1
   \   00000488   0400A0E1           MOV      R0,R4
   \   0000048C   4C0100EF           SWI      +332
    128              wsprintf(a,pt,artists[select_art].c);
   \   00000490   ........           LDR      R0,??DataTable21  ;; select_art
   \   00000494   000090E5           LDR      R0,[R0, #+0]
   \   00000498   2410A0E3           MOV      R1,#+36
   \   0000049C   ........           LDR      R2,??DataTable63  ;; artists
   \   000004A0   890000EA           B        ??OnRedraw4_28
    129              DrawString(a,1,3,90,15,FONT_SMALL_BOLD,TEXT_ALIGNLEFT,GetPaletteAdrByColorIndex(GetKatalogfontcolour()),GetPaletteAdrByColorIndex(23));
    130              //wsprintf(wss.ws1,pt,LG_REMOVE);
    131              //DrawString(wss.ws1,1,163,130,176,7,TEXT_ALIGNLEFT,GetPaletteAdrByColorIndex(katalogfontcolour),GetPaletteAdrByColorIndex(23));
    132              //wsprintf(wss.ws1,pt,LG_ADD);
    133              //DrawString(wss.ws1,1,163,130,176,7,TEXT_ALIGNRIGHT,GetPaletteAdrByColorIndex(katalogfontcolour),GetPaletteAdrByColorIndex(23));
    134              DrawLine(0,17,132,17,0,GetPaletteAdrByColorIndex(GetKatalogfontcolour()));
    135              DrawLine(92,17,92,0,0,GetPaletteAdrByColorIndex(GetKatalogfontcolour()));
    136            }break;
    137            case 3:
    138              {
    139              int bottom,top;
    140              if (max_tra>9)
   \                     ??OnRedraw4_2:
   \   000004A4   ........           LDR      R0,??DataTable127  ;; max_tra
   \   000004A8   000090E5           LDR      R0,[R0, #+0]
   \   000004AC   0A0050E3           CMP      R0,#+10
   \   000004B0   140000BA           BLT      ??OnRedraw4_29
    141              {
    142              if((select_tra-4)>=0){top=select_tra-4;}else{top=0;}
   \   000004B4   ........           LDR      R0,??DataTable122  ;; select_tra
   \   000004B8   000090E5           LDR      R0,[R0, #+0]
   \   000004BC   040050E2           SUBS     R0,R0,#+4
   \   000004C0   0300004A           BMI      ??OnRedraw4_30
   \   000004C4   ........           LDR      R0,??DataTable122  ;; select_tra
   \   000004C8   000090E5           LDR      R0,[R0, #+0]
   \   000004CC   047040E2           SUB      R7,R0,#+4
   \   000004D0   000000EA           B        ??OnRedraw4_31
   \                     ??OnRedraw4_30:
   \   000004D4   0070A0E3           MOV      R7,#+0
    143              if (top+10<max_tra){bottom=max_tra;}
    144              bottom=top+9;
   \                     ??OnRedraw4_31:
   \   000004D8   096087E2           ADD      R6,R7,#+9
    145              if(bottom>max_tra)
   \   000004DC   ........           LDR      R0,??DataTable127  ;; max_tra
   \   000004E0   000090E5           LDR      R0,[R0, #+0]
   \   000004E4   060050E1           CMP      R0,R6
   \   000004E8   0B0000AA           BGE      ??OnRedraw4_32
    146              {
    147                while (bottom!=max_tra) {bottom--;top--;}
   \                     ??OnRedraw4_33:
   \   000004EC   ........           LDR      R0,??DataTable127  ;; max_tra
   \   000004F0   000090E5           LDR      R0,[R0, #+0]
   \   000004F4   000056E1           CMP      R6,R0
   \   000004F8   0700000A           BEQ      ??OnRedraw4_32
   \   000004FC   016046E2           SUB      R6,R6,#+1
   \   00000500   017047E2           SUB      R7,R7,#+1
   \   00000504   F8FFFFEA           B        ??OnRedraw4_33
    148              }
    149              }
    150              else
    151              {
    152                top=0;
   \                     ??OnRedraw4_29:
   \   00000508   0070A0E3           MOV      R7,#+0
    153                bottom=max_tra;
   \   0000050C   ........           LDR      R0,??DataTable127  ;; max_tra
   \   00000510   006090E5           LDR      R6,[R0, #+0]
    154              }
    155              int bkcolor=23;
    156              if (max_tra!=0)
   \   00000514   000056E3           CMP      R6,#+0
   \   00000518   4B00000A           BEQ      ??OnRedraw4_34
    157              {
    158              for (int i=top;i<bottom;i++)
   \                     ??OnRedraw4_32:
   \   0000051C   060057E1           CMP      R7,R6
   \   00000520   490000AA           BGE      ??OnRedraw4_34
   \   00000524   2180A0E3           MOV      R8,#+33
   \   00000528   2400A0E3           MOV      R0,#+36
   \   0000052C   ........           LDR      R1,??DataTable114  ;; tracks
   \   00000530   901729E0           MLA      R9,R0,R7,R1
    159              {
    160                  int colour=GetKatalogfontcolour();
   \                     ??OnRedraw4_35:
   \   00000534   ........           _BLF     GetKatalogfontcolour,??GetKatalogfontcolour??rA
   \   00000538   00A0A0E1           MOV      R10,R0
    161                  utf8_2ws(a,tracks[i].c,320);
   \   0000053C   502FA0E3           MOV      R2,#+320
   \   00000540   0910A0E1           MOV      R1,R9
   \   00000544   0400A0E1           MOV      R0,R4
   \   00000548   E30100EF           SWI      +483
    162                  wsprintf(b,pt,tracks[i].c);
   \   0000054C   0920A0E1           MOV      R2,R9
   \   00000550   38129FE5           LDR      R1,??OnRedraw4_13  ;; pt
   \   00000554   0500A0E1           MOV      R0,R5
   \   00000558   240100EF           SWI      +292
    163                  if (i==select_tra)
   \   0000055C   ........           LDR      R0,??DataTable122  ;; select_tra
   \   00000560   000090E5           LDR      R0,[R0, #+0]
   \   00000564   000057E1           CMP      R7,R0
   \   00000568   0200001A           BNE      ??OnRedraw4_36
    164                {
    165                  bkcolor=GetKatalogbackgroundcolour();
   \   0000056C   ........           _BLF     GetKatalogbackgroundcolour,??GetKatalogbackgroundcolour??rA
   \   00000570   00B0A0E1           MOV      R11,R0
   \   00000574   000000EA           B        ??OnRedraw4_37
    166                }
    167                else
    168                {
    169                  bkcolor=23;
   \                     ??OnRedraw4_36:
   \   00000578   17B0A0E3           MOV      R11,#+23
    170                }
    171                  if (Get_WS_width(a,7)<Get_WS_width(b,7))
   \                     ??OnRedraw4_37:
   \   0000057C   0710A0E3           MOV      R1,#+7
   \   00000580   0400A0E1           MOV      R0,R4
   \   00000584   080200EF           SWI      +520
   \   00000588   00008DE5           STR      R0,[SP, #+0]
   \   0000058C   01002DE9           PUSH     {R0}
   \   00000590   0710A0E3           MOV      R1,#+7
   \   00000594   0500A0E1           MOV      R0,R5
   \   00000598   080200EF           SWI      +520
   \   0000059C   0200BDE8           POP      {R1}
   \   000005A0   000051E1           CMP      R1,R0
   \   000005A4   0B00A0E1           MOV      R0,R11
   \   000005A8   100000AA           BGE      ??OnRedraw4_38
    172                  {
    173                    DrawString(b,2,(i-top)*15+22,1000,(i-top+1)*15+18,7,TEXT_ALIGNLEFT,GetPaletteAdrByColorIndex(colour),GetPaletteAdrByColorIndex(bkcolor));
   \   000005AC   2E0100EF           SWI      +302
   \   000005B0   00B0A0E1           MOV      R11,R0
   \   000005B4   0A00A0E1           MOV      R0,R10
   \   000005B8   2E0100EF           SWI      +302
   \   000005BC   00082DE9           PUSH     {R11}
   \   000005C0   01002DE9           PUSH     {R0}
   \   000005C4   0100A0E3           MOV      R0,#+1
   \   000005C8   01002DE9           PUSH     {R0}
   \   000005CC   0700A0E3           MOV      R0,#+7
   \   000005D0   01002DE9           PUSH     {R0}
   \   000005D4   0800A0E1           MOV      R0,R8
   \   000005D8   01002DE9           PUSH     {R0}
   \   000005DC   FA3FA0E3           MOV      R3,#+1000
   \   000005E0   0B2048E2           SUB      R2,R8,#+11
   \   000005E4   0210A0E3           MOV      R1,#+2
   \   000005E8   0500A0E1           MOV      R0,R5
   \   000005EC   0F0000EA           B        ??OnRedraw4_39
    174                  }
    175                  else
    176                  {
    177                    DrawString(a,2,(i-top)*15+22,1000,(i-top+1)*15+18,7,TEXT_ALIGNLEFT,GetPaletteAdrByColorIndex(colour),GetPaletteAdrByColorIndex(bkcolor));
   \                     ??OnRedraw4_38:
   \   000005F0   2E0100EF           SWI      +302
   \   000005F4   00B0A0E1           MOV      R11,R0
   \   000005F8   0A00A0E1           MOV      R0,R10
   \   000005FC   2E0100EF           SWI      +302
   \   00000600   00082DE9           PUSH     {R11}
   \   00000604   01002DE9           PUSH     {R0}
   \   00000608   0100A0E3           MOV      R0,#+1
   \   0000060C   01002DE9           PUSH     {R0}
   \   00000610   0700A0E3           MOV      R0,#+7
   \   00000614   01002DE9           PUSH     {R0}
   \   00000618   0800A0E1           MOV      R0,R8
   \   0000061C   01002DE9           PUSH     {R0}
   \   00000620   FA3FA0E3           MOV      R3,#+1000
   \   00000624   0B2048E2           SUB      R2,R8,#+11
   \   00000628   0210A0E3           MOV      R1,#+2
   \   0000062C   0400A0E1           MOV      R0,R4
   \                     ??OnRedraw4_39:
   \   00000630   4C0100EF           SWI      +332
   \   00000634   14D08DE2           ADD      SP,SP,#+20       ;; stack cleaning
    178                  }
    179              }
   \   00000638   017087E2           ADD      R7,R7,#+1
   \   0000063C   249089E2           ADD      R9,R9,#+36
   \   00000640   0F8088E2           ADD      R8,R8,#+15
   \   00000644   060057E1           CMP      R7,R6
   \   00000648   B9FFFFBA           BLT      ??OnRedraw4_35
    180              }
    181              wsprintf(a,"%i%c%i",select_tra+1,'/',max_tra);
   \                     ??OnRedraw4_34:
   \   0000064C   ........           LDR      R0,??DataTable127  ;; max_tra
   \   00000650   000090E5           LDR      R0,[R0, #+0]
   \   00000654   01002DE9           PUSH     {R0}
   \   00000658   2F30A0E3           MOV      R3,#+47
   \   0000065C   ........           LDR      R0,??DataTable122  ;; select_tra
   \   00000660   000090E5           LDR      R0,[R0, #+0]
   \   00000664   012080E2           ADD      R2,R0,#+1
   \   00000668   24119FE5           LDR      R1,??OnRedraw4_13+0x4  ;; `?<Constant "%i%c%i">`
   \   0000066C   0400A0E1           MOV      R0,R4
   \   00000670   240100EF           SWI      +292
    182              DrawString(a,1,3,128,176,7,TEXT_ALIGNRIGHT,GetPaletteAdrByColorIndex(GetKatalogfontcolour()),GetPaletteAdrByColorIndex(23)); 
   \   00000674   1700A0E3           MOV      R0,#+23
   \   00000678   2E0100EF           SWI      +302
   \   0000067C   0060A0E1           MOV      R6,R0
   \   00000680   ........           _BLF     GetKatalogfontcolour,??GetKatalogfontcolour??rA
   \   00000684   2E0100EF           SWI      +302
   \   00000688   40002DE9           PUSH     {R6}
   \   0000068C   01002DE9           PUSH     {R0}
   \   00000690   0400A0E3           MOV      R0,#+4
   \   00000694   01002DE9           PUSH     {R0}
   \   00000698   0700A0E3           MOV      R0,#+7
   \   0000069C   01002DE9           PUSH     {R0}
   \   000006A0   B000A0E3           MOV      R0,#+176
   \   000006A4   01002DE9           PUSH     {R0}
   \   000006A8   8030A0E3           MOV      R3,#+128
   \   000006AC   0320A0E3           MOV      R2,#+3
   \   000006B0   0110A0E3           MOV      R1,#+1
   \   000006B4   0400A0E1           MOV      R0,R4
   \   000006B8   4C0100EF           SWI      +332
    183              wsprintf(a,pt,albums[select_alb].c);
   \   000006BC   ........           LDR      R0,??DataTable115  ;; select_alb
   \   000006C0   000090E5           LDR      R0,[R0, #+0]
   \   000006C4   2410A0E3           MOV      R1,#+36
   \   000006C8   ........           LDR      R2,??DataTable116  ;; albums
   \                     ??OnRedraw4_28:
   \   000006CC   912022E0           MLA      R2,R1,R0,R2
   \                     ??OnRedraw4_16:
   \   000006D0   B8109FE5           LDR      R1,??OnRedraw4_13  ;; pt
   \   000006D4   0400A0E1           MOV      R0,R4
   \   000006D8   240100EF           SWI      +292
    184              DrawString(a,1,3,90,15,FONT_SMALL_BOLD,TEXT_ALIGNLEFT,GetPaletteAdrByColorIndex(GetKatalogfontcolour()),GetPaletteAdrByColorIndex(23));
   \   000006DC   1700A0E3           MOV      R0,#+23
   \   000006E0   2E0100EF           SWI      +302
   \   000006E4   0060A0E1           MOV      R6,R0
   \   000006E8   ........           _BLF     GetKatalogfontcolour,??GetKatalogfontcolour??rA
   \   000006EC   2E0100EF           SWI      +302
   \   000006F0   40002DE9           PUSH     {R6}
   \   000006F4   01002DE9           PUSH     {R0}
   \   000006F8   0100A0E3           MOV      R0,#+1
   \   000006FC   01002DE9           PUSH     {R0}
   \   00000700   0800A0E3           MOV      R0,#+8
   \   00000704   01002DE9           PUSH     {R0}
   \   00000708   0F00A0E3           MOV      R0,#+15
   \   0000070C   01002DE9           PUSH     {R0}
   \   00000710   5A30A0E3           MOV      R3,#+90
   \   00000714   0320A0E3           MOV      R2,#+3
   \   00000718   0110A0E3           MOV      R1,#+1
   \   0000071C   0400A0E1           MOV      R0,R4
   \   00000720   4C0100EF           SWI      +332
   \   00000724   2CD08DE2           ADD      SP,SP,#+44       ;; stack cleaning
    185              //wsprintf(wss.ws1,pt,LG_REMOVE);
    186              //DrawString(wss.ws1,1,163,130,176,7,TEXT_ALIGNLEFT,GetPaletteAdrByColorIndex(katalogfontcolour),GetPaletteAdrByColorIndex(23));
    187              //wsprintf(wss.ws1,pt,LG_ADD);
    188              //DrawString(wss.ws1,1,163,130,176,7,TEXT_ALIGNRIGHT,GetPaletteAdrByColorIndex(katalogfontcolour),GetPaletteAdrByColorIndex(23));
    189              DrawLine(0,17,132,17,0,GetPaletteAdrByColorIndex(GetKatalogfontcolour()));
   \   00000728   ........           _BLF     GetKatalogfontcolour,??GetKatalogfontcolour??rA
   \   0000072C   2E0100EF           SWI      +302
   \   00000730   01002DE9           PUSH     {R0}
   \   00000734   0000A0E3           MOV      R0,#+0
   \   00000738   01002DE9           PUSH     {R0}
   \   0000073C   1130A0E3           MOV      R3,#+17
   \   00000740   8420A0E3           MOV      R2,#+132
   \   00000744   1110A0E3           MOV      R1,#+17
   \   00000748   B30100EF           SWI      +435
    190              DrawLine(92,17,92,0,0,GetPaletteAdrByColorIndex(GetKatalogfontcolour()));
   \   0000074C   ........           _BLF     GetKatalogfontcolour,??GetKatalogfontcolour??rA
   \   00000750   2E0100EF           SWI      +302
   \   00000754   01002DE9           PUSH     {R0}
   \   00000758   0000A0E3           MOV      R0,#+0
   \   0000075C   01002DE9           PUSH     {R0}
   \   00000760   0030A0E1           MOV      R3,R0
   \   00000764   5C20A0E3           MOV      R2,#+92
   \   00000768   1110A0E3           MOV      R1,#+17
   \   0000076C   0200A0E1           MOV      R0,R2
   \   00000770   B30100EF           SWI      +435
   \   00000774   10D08DE2           ADD      SP,SP,#+16       ;; stack cleaning
    191            }break;
    192            }
    193            FreeWS(a);
   \                     ??OnRedraw4_3:
   \   00000778   0400A0E1           MOV      R0,R4
   \   0000077C   290100EF           SWI      +297
    194            FreeWS(b);
   \   00000780   0500A0E1           MOV      R0,R5
   \   00000784   290100EF           SWI      +297
    195          }
   \   00000788   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   \   0000078C   F08FBDE8           POP      {R4-R11,PC}      ;; return
   \                     ??OnRedraw4_13:
   \   00000790   ........           DC32     pt
   \   00000794   ........           DC32     `?<Constant "%i%c%i">`
   \   00000798   ........           DC32     `?<Constant "\\302\\350\\352\\356\\355\\340\\342\\366i.`

   \                                 In segment CODE, align 4, keep-with-next
    196          int MenuKeys3(MAIN_GUI *data, GUI_MSG *msg) //OnKey
    197          {
   \                     MenuKeys3:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   C9DF4DE2           SUB      SP,SP,#+804
    198            if (msg->gbsmsg->msg==KEY_DOWN)
   \   00000008   040091E5           LDR      R0,[R1, #+4]
   \   0000000C   F200D0E1           LDRSH    R0,[R0, #+2]
   \   00000010   9320A0E3           MOV      R2,#+147
   \   00000014   402F82E3           ORR      R2,R2,#0x100
   \   00000018   020050E1           CMP      R0,R2
   \   0000001C   E501001A           BNE      ??MenuKeys3_1
    199            {
    200              switch(msg->gbsmsg->submess)
   \   00000020   040091E5           LDR      R0,[R1, #+4]
   \   00000024   040090E5           LDR      R0,[R0, #+4]
   \   00000028   040040E2           SUB      R0,R0,#+4
   \   0000002C   380050E3           CMP      R0,#+56
   \   00000030   E001008A           BHI      ??MenuKeys3_1
   \   00000034   021F8FE2           ADR      R1,??MenuKeys3_0
   \   00000038   8000A0E1           MOV      R0,R0, LSL #+1
   \   0000003C   B01091E1           LDRH     R1,[R1, R0]
   \   00000040   01F18FE0           ADD      PC,PC,R1, LSL #+2
   \                     ??MenuKeys3_0:
   \   00000044   1C00DC01DC01       DC16     +28,+476,+476,+476
   \              DC01        
   \   0000004C   DC01DC01DC01       DC16     +476,+476,+476,+476
   \              DC01        
   \   00000054   1C00DC01DC01       DC16     +28,+476,+476,+476
   \              DC01        
   \   0000005C   DC01DC01DC01       DC16     +476,+476,+476,+476
   \              DC01        
   \   00000064   DC01DC01DC01       DC16     +476,+476,+476,+476
   \              DC01        
   \   0000006C   DC01DC017B00       DC16     +476,+476,+123,+476
   \              DC01        
   \   00000074   DC01DC01DC01       DC16     +476,+476,+476,+476
   \              DC01        
   \   0000007C   DC01DC01DC01       DC16     +476,+476,+476,+476
   \              DC01        
   \   00000084   DC01DC01DC01       DC16     +476,+476,+476,+476
   \              DC01        
   \   0000008C   DC01DC01DC01       DC16     +476,+476,+476,+476
   \              DC01        
   \   00000094   DC01DC01DC01       DC16     +476,+476,+476,+476
   \              DC01        
   \   0000009C   DC01DC012500       DC16     +476,+476,+37,+476
   \              DC01        
   \   000000A4   DC017B00DC01       DC16     +476,+123,+476,+476
   \              DC01        
   \   000000AC   4C00DC01DC01       DC16     +76,+476,+476,+37
   \              2500        
   \   000000B4   4C000000           DC16     +76,+0
    201              {
    202              case RED_BUTTON:case RIGHT_SOFT:
    203                {
    204                  ToView--;
   \                     ??MenuKeys3_2:
   \   000000B8   ........           LDR      R0,??DataTable131  ;; ToView
   \   000000BC   ........           LDR      R1,??DataTable131  ;; ToView
   \   000000C0   001091E5           LDR      R1,[R1, #+0]
   \   000000C4   011041E2           SUB      R1,R1,#+1
   \   000000C8   001080E5           STR      R1,[R0, #+0]
    205                  if (!ToView) return(1);
   \   000000CC   000051E3           CMP      R1,#+0
   \   000000D0   3B01001A           BNE      ??MenuKeys3_3
   \   000000D4   0100A0E3           MOV      R0,#+1
   \   000000D8   3B0100EA           B        ??MenuKeys3_4
    206                  REDRAW();
    207                }break;
    208              case UP_BUTTON:case'2':
    209                {
    210                  switch(ToView)
   \                     ??MenuKeys3_5:
   \   000000DC   ........           LDR      R0,??DataTable131  ;; ToView
   \   000000E0   000090E5           LDR      R0,[R0, #+0]
   \   000000E4   010050E2           SUBS     R0,R0,#+1
   \   000000E8   0400000A           BEQ      ??MenuKeys3_6
   \   000000EC   010050E2           SUBS     R0,R0,#+1
   \   000000F0   0E00000A           BEQ      ??MenuKeys3_7
   \   000000F4   010050E2           SUBS     R0,R0,#+1
   \   000000F8   1500000A           BEQ      ??MenuKeys3_8
   \   000000FC   300100EA           B        ??MenuKeys3_3
    211                  {
    212                  case 1:
    213                    {
    214                      select_art--;
   \                     ??MenuKeys3_6:
   \   00000100   ........           LDR      R0,??DataTable86  ;; select_art
   \   00000104   ........           LDR      R1,??DataTable86  ;; select_art
   \   00000108   001091E5           LDR      R1,[R1, #+0]
   \   0000010C   011041E2           SUB      R1,R1,#+1
   \   00000110   001080E5           STR      R1,[R0, #+0]
    215                      if (select_art==-1)
   \   00000114   010071E3           CMN      R1,#+1
   \   00000118   2901001A           BNE      ??MenuKeys3_3
    216                      {
    217                        select_art=max_art-1;
   \   0000011C   ........           LDR      R1,??DataTable135  ;; max_art
   \                     ??MenuKeys3_9:
   \   00000120   001091E5           LDR      R1,[R1, #+0]
   \   00000124   011041E2           SUB      R1,R1,#+1
   \                     ??MenuKeys3_10:
   \   00000128   001080E5           STR      R1,[R0, #+0]
    218                      }
    219                    }break;
   \                     ??MenuKeys3_11:
   \   0000012C   240100EA           B        ??MenuKeys3_3
    220                  case 2:
    221                    {
    222                      select_alb--;
   \                     ??MenuKeys3_7:
   \   00000130   ........           LDR      R0,??DataTable115  ;; select_alb
   \   00000134   ........           LDR      R1,??DataTable115  ;; select_alb
   \   00000138   001091E5           LDR      R1,[R1, #+0]
   \   0000013C   011041E2           SUB      R1,R1,#+1
   \   00000140   001080E5           STR      R1,[R0, #+0]
    223                      if (select_alb==-1)
   \   00000144   010071E3           CMN      R1,#+1
   \   00000148   1D01001A           BNE      ??MenuKeys3_3
    224                      {
    225                        select_alb=max_alb-1;
   \   0000014C   ........           LDR      R1,??DataTable83  ;; max_alb
   \   00000150   F2FFFFEA           B        ??MenuKeys3_9
    226                      }
    227                    }break;
    228                  case 3:
    229                    {
    230                      select_tra--;
   \                     ??MenuKeys3_8:
   \   00000154   ........           LDR      R0,??DataTable122  ;; select_tra
   \   00000158   ........           LDR      R1,??DataTable122  ;; select_tra
   \   0000015C   001091E5           LDR      R1,[R1, #+0]
   \   00000160   011041E2           SUB      R1,R1,#+1
   \   00000164   001080E5           STR      R1,[R0, #+0]
    231                      if (select_tra==-1)
   \   00000168   010071E3           CMN      R1,#+1
   \   0000016C   1401001A           BNE      ??MenuKeys3_3
    232                      {
    233                        select_tra=max_tra-1;
   \   00000170   ........           LDR      R1,??DataTable127  ;; max_tra
   \   00000174   E9FFFFEA           B        ??MenuKeys3_9
    234                      }
    235                    }break;
    236                  }
    237                  REDRAW();
    238                }break;
    239              case DOWN_BUTTON:case'8':
    240                {
    241                  switch(ToView)
   \                     ??MenuKeys3_12:
   \   00000178   ........           LDR      R0,??DataTable131  ;; ToView
   \   0000017C   000090E5           LDR      R0,[R0, #+0]
   \   00000180   010050E2           SUBS     R0,R0,#+1
   \   00000184   0400000A           BEQ      ??MenuKeys3_13
   \   00000188   010050E2           SUBS     R0,R0,#+1
   \   0000018C   0F00000A           BEQ      ??MenuKeys3_14
   \   00000190   010050E2           SUBS     R0,R0,#+1
   \   00000194   1900000A           BEQ      ??MenuKeys3_15
   \   00000198   090100EA           B        ??MenuKeys3_3
    242                  {
    243                  case 1:
    244                    {
    245                      select_art++;
   \                     ??MenuKeys3_13:
   \   0000019C   ........           LDR      R0,??DataTable86  ;; select_art
   \   000001A0   ........           LDR      R1,??DataTable86  ;; select_art
   \   000001A4   001091E5           LDR      R1,[R1, #+0]
   \   000001A8   011081E2           ADD      R1,R1,#+1
   \   000001AC   001080E5           STR      R1,[R0, #+0]
    246                      if (select_art==max_art)
   \   000001B0   0100A0E1           MOV      R0,R1
   \   000001B4   ........           LDR      R1,??DataTable135  ;; max_art
   \   000001B8   001091E5           LDR      R1,[R1, #+0]
   \   000001BC   010050E1           CMP      R0,R1
   \   000001C0   FF00001A           BNE      ??MenuKeys3_3
    247                      {
    248                        select_art=0;
   \   000001C4   ........           LDR      R0,??DataTable86  ;; select_art
   \                     ??MenuKeys3_16:
   \   000001C8   0010A0E3           MOV      R1,#+0
   \   000001CC   D5FFFFEA           B        ??MenuKeys3_10
    249                      }
    250                    }break;
    251                  case 2:
    252                    {
    253                      select_alb++;
   \                     ??MenuKeys3_14:
   \   000001D0   ........           LDR      R0,??DataTable115  ;; select_alb
   \   000001D4   ........           LDR      R1,??DataTable115  ;; select_alb
   \   000001D8   001091E5           LDR      R1,[R1, #+0]
   \   000001DC   011081E2           ADD      R1,R1,#+1
   \   000001E0   001080E5           STR      R1,[R0, #+0]
    254                      if (select_alb==max_alb)
   \   000001E4   0100A0E1           MOV      R0,R1
   \   000001E8   ........           LDR      R1,??DataTable83  ;; max_alb
   \   000001EC   001091E5           LDR      R1,[R1, #+0]
   \   000001F0   010050E1           CMP      R0,R1
   \   000001F4   F200001A           BNE      ??MenuKeys3_3
    255                      {
    256                        select_alb=0;
   \   000001F8   ........           LDR      R0,??DataTable115  ;; select_alb
   \   000001FC   F1FFFFEA           B        ??MenuKeys3_16
    257                      }
    258                    }break;
    259                  case 3:
    260                    {
    261                      select_tra++;
   \                     ??MenuKeys3_15:
   \   00000200   ........           LDR      R0,??DataTable122  ;; select_tra
   \   00000204   ........           LDR      R1,??DataTable122  ;; select_tra
   \   00000208   001091E5           LDR      R1,[R1, #+0]
   \   0000020C   011081E2           ADD      R1,R1,#+1
   \   00000210   001080E5           STR      R1,[R0, #+0]
    262                      if (select_tra==max_tra)
   \   00000214   0100A0E1           MOV      R0,R1
   \   00000218   ........           LDR      R1,??DataTable127  ;; max_tra
   \   0000021C   001091E5           LDR      R1,[R1, #+0]
   \   00000220   010050E1           CMP      R0,R1
   \   00000224   E600001A           BNE      ??MenuKeys3_3
    263                      {
    264                        select_tra=0;
   \   00000228   ........           LDR      R0,??DataTable122  ;; select_tra
   \   0000022C   0010A0E3           MOV      R1,#+0
   \   00000230   BCFFFFEA           B        ??MenuKeys3_10
    265                      }
    266                    }break;
    267                  }
    268                  REDRAW();
    269                }break;
    270              case ENTER_BUTTON:case'5':
    271                if (ToView==1)
   \                     ??MenuKeys3_17:
   \   00000234   ........           LDR      R0,??DataTable131  ;; ToView
   \   00000238   000090E5           LDR      R0,[R0, #+0]
   \   0000023C   010050E3           CMP      R0,#+1
   \   00000240   7200001A           BNE      ??MenuKeys3_18
    272                {
    273                  curent=0;
   \   00000244   ........           LDR      R0,??DataTable147  ;; curent
   \   00000248   0010A0E3           MOV      R1,#+0
   \   0000024C   001080E5           STR      R1,[R0, #+0]
    274                  char album[30];
    275                  for (int i=artists[select_art].i+2;i<artists[select_art+1].i;i++)
   \   00000250   ........           LDR      R0,??DataTable86  ;; select_art
   \   00000254   000090E5           LDR      R0,[R0, #+0]
   \   00000258   2410A0E3           MOV      R1,#+36
   \   0000025C   ........           LDR      R2,??DataTable63  ;; artists
   \   00000260   912020E0           MLA      R0,R1,R0,R2
   \   00000264   200090E5           LDR      R0,[R0, #+32]
   \   00000268   024080E2           ADD      R4,R0,#+2
   \   0000026C   ........           LDR      R0,??DataTable86  ;; select_art
   \   00000270   000090E5           LDR      R0,[R0, #+0]
   \   00000274   912020E0           MLA      R0,R1,R0,R2
   \   00000278   440090E5           LDR      R0,[R0, #+68]
   \   0000027C   000054E1           CMP      R4,R0
   \   00000280   4B0000AA           BGE      ??MenuKeys3_19
    276                  {
    277                    sprintf(album,pp);
   \                     ??MenuKeys3_20:
   \   00000284   ........           LDR      R1,??DataTable134  ;; pp
   \   00000288   04008DE2           ADD      R0,SP,#+4
   \   0000028C   160000EF           SWI      +22
   \   00000290   ........           LDR      R0,??DataTable149  ;; masyv
   \   00000294   005084E0           ADD      R5,R4,R0
   \   00000298   050000EA           B        ??MenuKeys3_21
    278                    while ((masyv[i]!=0x0D)&&(i<artists[select_art+1].i))
    279                    {
    280                      sprintf(album,"%s%c",album,masyv[i]);
   \                     ??MenuKeys3_22:
   \   0000029C   ........           LDRB     R3,[R5], #+1
   \   000002A0   04208DE2           ADD      R2,SP,#+4
   \   000002A4   ........           LDR      R1,??DataTable139  ;; `?<Constant "%s%c">`
   \   000002A8   04008DE2           ADD      R0,SP,#+4
   \   000002AC   160000EF           SWI      +22
    281                      i++;
   \   000002B0   014084E2           ADD      R4,R4,#+1
    282                    }
   \                     ??MenuKeys3_21:
   \   000002B4   0000D5E5           LDRB     R0,[R5, #+0]
   \   000002B8   0D0050E3           CMP      R0,#+13
   \   000002BC   0700000A           BEQ      ??MenuKeys3_23
   \   000002C0   ........           LDR      R0,??DataTable86  ;; select_art
   \   000002C4   000090E5           LDR      R0,[R0, #+0]
   \   000002C8   2410A0E3           MOV      R1,#+36
   \   000002CC   ........           LDR      R2,??DataTable63  ;; artists
   \   000002D0   912020E0           MLA      R0,R1,R0,R2
   \   000002D4   440090E5           LDR      R0,[R0, #+68]
   \   000002D8   000054E1           CMP      R4,R0
   \   000002DC   EEFFFFBA           BLT      ??MenuKeys3_22
    283                  
    284                    if (strcmp(albums[curent-1].c,album))
   \                     ??MenuKeys3_23:
   \   000002E0   04108DE2           ADD      R1,SP,#+4
   \   000002E4   ........           LDR      R0,??DataTable147  ;; curent
   \   000002E8   000090E5           LDR      R0,[R0, #+0]
   \   000002EC   2420A0E3           MOV      R2,#+36
   \   000002F0   ........           LDR      R3,??DataTable116  ;; albums
   \   000002F4   923020E0           MLA      R0,R2,R0,R3
   \   000002F8   240040E2           SUB      R0,R0,#+36
   \   000002FC   190000EF           SWI      +25
   \   00000300   000050E3           CMP      R0,#+0
   \   00000304   1100000A           BEQ      ??MenuKeys3_24
    285                    {
    286                      sprintf(albums[curent].c,album);
   \   00000308   04108DE2           ADD      R1,SP,#+4
   \   0000030C   ........           LDR      R0,??DataTable147  ;; curent
   \   00000310   000090E5           LDR      R0,[R0, #+0]
   \   00000314   2420A0E3           MOV      R2,#+36
   \   00000318   ........           LDR      R3,??DataTable116  ;; albums
   \   0000031C   923020E0           MLA      R0,R2,R0,R3
   \   00000320   160000EF           SWI      +22
    287                      albums[curent].i=i;
   \   00000324   ........           LDR      R0,??DataTable147  ;; curent
   \   00000328   000090E5           LDR      R0,[R0, #+0]
   \   0000032C   2410A0E3           MOV      R1,#+36
   \   00000330   ........           LDR      R2,??DataTable116  ;; albums
   \   00000334   912020E0           MLA      R0,R1,R0,R2
   \   00000338   204080E5           STR      R4,[R0, #+32]
    288                      curent++;
   \   0000033C   ........           LDR      R0,??DataTable147  ;; curent
   \   00000340   ........           LDR      R1,??DataTable147  ;; curent
   \   00000344   001091E5           LDR      R1,[R1, #+0]
   \   00000348   011081E2           ADD      R1,R1,#+1
   \   0000034C   001080E5           STR      R1,[R0, #+0]
    289                    }
    290                    for (int j=0;j<3;j++)
   \                     ??MenuKeys3_24:
   \   00000350   0300A0E3           MOV      R0,#+3
   \   00000354   2420A0E3           MOV      R2,#+36
   \   00000358   ........           LDR      R3,??DataTable63  ;; artists
    291                    {
    292                      i++;
   \                     ??MenuKeys3_25:
   \   0000035C   014084E2           ADD      R4,R4,#+1
    293                      while ((masyv[i]!=0x0D)&&(i<artists[select_art+1].i))
   \   00000360   ........           LDR      R1,??DataTable149  ;; masyv
   \   00000364   0110D4E7           LDRB     R1,[R4, +R1]
   \   00000368   0D0051E3           CMP      R1,#+13
   \   0000036C   0500000A           BEQ      ??MenuKeys3_26
   \   00000370   ........           LDR      R1,??DataTable86  ;; select_art
   \   00000374   001091E5           LDR      R1,[R1, #+0]
   \   00000378   923121E0           MLA      R1,R2,R1,R3
   \   0000037C   441091E5           LDR      R1,[R1, #+68]
   \   00000380   010054E1           CMP      R4,R1
   \   00000384   F4FFFFBA           BLT      ??MenuKeys3_25
    294                      {
    295                        i++;
    296                      }
    297                    }
   \                     ??MenuKeys3_26:
   \   00000388   010050E2           SUBS     R0,R0,#+1
   \   0000038C   F2FFFF1A           BNE      ??MenuKeys3_25
    298                    i++;
    299                  }
   \   00000390   024084E2           ADD      R4,R4,#+2
   \   00000394   ........           LDR      R0,??DataTable86  ;; select_art
   \   00000398   000090E5           LDR      R0,[R0, #+0]
   \   0000039C   2410A0E3           MOV      R1,#+36
   \   000003A0   ........           LDR      R2,??DataTable63  ;; artists
   \   000003A4   912020E0           MLA      R0,R1,R0,R2
   \   000003A8   440090E5           LDR      R0,[R0, #+68]
   \   000003AC   000054E1           CMP      R4,R0
   \   000003B0   B3FFFFBA           BLT      ??MenuKeys3_20
    300                  max_alb=curent;
   \                     ??MenuKeys3_19:
   \   000003B4   ........           LDR      R0,??DataTable83  ;; max_alb
   \   000003B8   ........           LDR      R1,??DataTable147  ;; curent
   \   000003BC   001091E5           LDR      R1,[R1, #+0]
   \   000003C0   001080E5           STR      R1,[R0, #+0]
    301                  albums[max_alb].i=artists[select_art+1].i;
   \   000003C4   0100A0E1           MOV      R0,R1
   \   000003C8   2410A0E3           MOV      R1,#+36
   \   000003CC   ........           LDR      R2,??DataTable116  ;; albums
   \   000003D0   912020E0           MLA      R0,R1,R0,R2
   \   000003D4   ........           LDR      R1,??DataTable86  ;; select_art
   \   000003D8   001091E5           LDR      R1,[R1, #+0]
   \   000003DC   2420A0E3           MOV      R2,#+36
   \   000003E0   ........           LDR      R3,??DataTable63  ;; artists
   \   000003E4   923121E0           MLA      R1,R2,R1,R3
   \   000003E8   441091E5           LDR      R1,[R1, #+68]
   \   000003EC   201080E5           STR      R1,[R0, #+32]
    302                  select_alb=0;
   \   000003F0   ........           LDR      R0,??DataTable115  ;; select_alb
   \   000003F4   0010A0E3           MOV      R1,#+0
   \   000003F8   001080E5           STR      R1,[R0, #+0]
    303                  ToView++;
   \   000003FC   ........           LDR      R0,??DataTable131  ;; ToView
   \   00000400   ........           LDR      R1,??DataTable131  ;; ToView
   \   00000404   001091E5           LDR      R1,[R1, #+0]
   \   00000408   011081E2           ADD      R1,R1,#+1
   \   0000040C   45FFFFEA           B        ??MenuKeys3_10
    304                  REDRAW();
    305                }
    306                else
    307                  if (ToView==2)
   \                     ??MenuKeys3_18:
   \   00000410   ........           LDR      R0,??DataTable131  ;; ToView
   \   00000414   000090E5           LDR      R0,[R0, #+0]
   \   00000418   020050E3           CMP      R0,#+2
   \   0000041C   6C00001A           BNE      ??MenuKeys3_27
    308                {
    309                  curent=0;
   \   00000420   ........           LDR      R0,??DataTable147  ;; curent
   \   00000424   0010A0E3           MOV      R1,#+0
   \   00000428   001080E5           STR      R1,[R0, #+0]
    310                  char track[30];
    311                  for (int i=albums[select_alb].i+2;i<albums[select_alb+1].i;i++)
   \   0000042C   ........           LDR      R0,??DataTable115  ;; select_alb
   \   00000430   000090E5           LDR      R0,[R0, #+0]
   \   00000434   2410A0E3           MOV      R1,#+36
   \   00000438   ........           LDR      R2,??DataTable116  ;; albums
   \   0000043C   912020E0           MLA      R0,R1,R0,R2
   \   00000440   200090E5           LDR      R0,[R0, #+32]
   \   00000444   024080E2           ADD      R4,R0,#+2
   \   00000448   ........           LDR      R0,??DataTable115  ;; select_alb
   \   0000044C   000090E5           LDR      R0,[R0, #+0]
   \   00000450   912020E0           MLA      R0,R1,R0,R2
   \   00000454   440090E5           LDR      R0,[R0, #+68]
   \   00000458   000054E1           CMP      R4,R0
   \   0000045C   410000AA           BGE      ??MenuKeys3_28
    312                  {
    313                    sprintf(track,pp);
   \                     ??MenuKeys3_29:
   \   00000460   ........           LDR      R1,??DataTable134  ;; pp
   \   00000464   04008DE2           ADD      R0,SP,#+4
   \   00000468   160000EF           SWI      +22
   \   0000046C   ........           LDR      R0,??DataTable149  ;; masyv
   \   00000470   005084E0           ADD      R5,R4,R0
   \   00000474   050000EA           B        ??MenuKeys3_30
    314                    while ((masyv[i]!=0x0D)&&(i<albums[select_alb+1].i))
    315                    {
    316                      sprintf(track,"%s%c",track,masyv[i]);
   \                     ??MenuKeys3_31:
   \   00000478   ........           LDRB     R3,[R5], #+1
   \   0000047C   04208DE2           ADD      R2,SP,#+4
   \   00000480   ........           LDR      R1,??DataTable139  ;; `?<Constant "%s%c">`
   \   00000484   04008DE2           ADD      R0,SP,#+4
   \   00000488   160000EF           SWI      +22
    317                      i++;
   \   0000048C   014084E2           ADD      R4,R4,#+1
    318                    }
   \                     ??MenuKeys3_30:
   \   00000490   0000D5E5           LDRB     R0,[R5, #+0]
   \   00000494   0D0050E3           CMP      R0,#+13
   \   00000498   0700000A           BEQ      ??MenuKeys3_32
   \   0000049C   ........           LDR      R0,??DataTable115  ;; select_alb
   \   000004A0   000090E5           LDR      R0,[R0, #+0]
   \   000004A4   2410A0E3           MOV      R1,#+36
   \   000004A8   ........           LDR      R2,??DataTable116  ;; albums
   \   000004AC   912020E0           MLA      R0,R1,R0,R2
   \   000004B0   440090E5           LDR      R0,[R0, #+68]
   \   000004B4   000054E1           CMP      R4,R0
   \   000004B8   EEFFFFBA           BLT      ??MenuKeys3_31
    319                  
    320                    //if (strcmp(tracks[curent-1].c,track))
    321                    {
    322                      sprintf(tracks[curent].c,track);
   \                     ??MenuKeys3_32:
   \   000004BC   04108DE2           ADD      R1,SP,#+4
   \   000004C0   ........           LDR      R0,??DataTable147  ;; curent
   \   000004C4   000090E5           LDR      R0,[R0, #+0]
   \   000004C8   2420A0E3           MOV      R2,#+36
   \   000004CC   ........           LDR      R3,??DataTable114  ;; tracks
   \   000004D0   923020E0           MLA      R0,R2,R0,R3
   \   000004D4   160000EF           SWI      +22
    323                      tracks[curent].i=i;
   \   000004D8   ........           LDR      R0,??DataTable147  ;; curent
   \   000004DC   000090E5           LDR      R0,[R0, #+0]
   \   000004E0   2410A0E3           MOV      R1,#+36
   \   000004E4   ........           LDR      R2,??DataTable114  ;; tracks
   \   000004E8   912020E0           MLA      R0,R1,R0,R2
   \   000004EC   204080E5           STR      R4,[R0, #+32]
    324                      curent++;
   \   000004F0   ........           LDR      R0,??DataTable147  ;; curent
   \   000004F4   ........           LDR      R1,??DataTable147  ;; curent
   \   000004F8   001091E5           LDR      R1,[R1, #+0]
   \   000004FC   011081E2           ADD      R1,R1,#+1
   \   00000500   001080E5           STR      R1,[R0, #+0]
    325                    }
    326                    
    327                    for (int j=0;j<3;j++)
   \   00000504   0300A0E3           MOV      R0,#+3
   \   00000508   2420A0E3           MOV      R2,#+36
   \   0000050C   ........           LDR      R3,??DataTable116  ;; albums
    328                    {
    329                      i++;
   \                     ??MenuKeys3_33:
   \   00000510   014084E2           ADD      R4,R4,#+1
    330                      while ((masyv[i]!=0x0D)&&(i<albums[select_alb+1].i))
   \   00000514   ........           LDR      R1,??DataTable149  ;; masyv
   \   00000518   0110D4E7           LDRB     R1,[R4, +R1]
   \   0000051C   0D0051E3           CMP      R1,#+13
   \   00000520   0500000A           BEQ      ??MenuKeys3_34
   \   00000524   ........           LDR      R1,??DataTable115  ;; select_alb
   \   00000528   001091E5           LDR      R1,[R1, #+0]
   \   0000052C   923121E0           MLA      R1,R2,R1,R3
   \   00000530   441091E5           LDR      R1,[R1, #+68]
   \   00000534   010054E1           CMP      R4,R1
   \   00000538   F4FFFFBA           BLT      ??MenuKeys3_33
    331                      {
    332                        i++;
    333                      }
    334                    }
   \                     ??MenuKeys3_34:
   \   0000053C   010050E2           SUBS     R0,R0,#+1
   \   00000540   F2FFFF1A           BNE      ??MenuKeys3_33
    335                    i++;
    336                  }
   \   00000544   024084E2           ADD      R4,R4,#+2
   \   00000548   ........           LDR      R0,??DataTable115  ;; select_alb
   \   0000054C   000090E5           LDR      R0,[R0, #+0]
   \   00000550   2410A0E3           MOV      R1,#+36
   \   00000554   ........           LDR      R2,??DataTable116  ;; albums
   \   00000558   912020E0           MLA      R0,R1,R0,R2
   \   0000055C   440090E5           LDR      R0,[R0, #+68]
   \   00000560   000054E1           CMP      R4,R0
   \   00000564   BDFFFFBA           BLT      ??MenuKeys3_29
    337                  max_tra=curent;
   \                     ??MenuKeys3_28:
   \   00000568   ........           LDR      R0,??DataTable127  ;; max_tra
   \   0000056C   ........           LDR      R1,??DataTable147  ;; curent
   \   00000570   001091E5           LDR      R1,[R1, #+0]
   \   00000574   001080E5           STR      R1,[R0, #+0]
    338                  tracks[max_tra].i=albums[select_alb+1].i;
   \   00000578   0100A0E1           MOV      R0,R1
   \   0000057C   2410A0E3           MOV      R1,#+36
   \   00000580   ........           LDR      R2,??DataTable114  ;; tracks
   \   00000584   912020E0           MLA      R0,R1,R0,R2
   \   00000588   ........           LDR      R1,??DataTable115  ;; select_alb
   \   0000058C   001091E5           LDR      R1,[R1, #+0]
   \   00000590   2420A0E3           MOV      R2,#+36
   \   00000594   ........           LDR      R3,??DataTable116  ;; albums
   \   00000598   923121E0           MLA      R1,R2,R1,R3
   \   0000059C   441091E5           LDR      R1,[R1, #+68]
   \   000005A0   201080E5           STR      R1,[R0, #+32]
    339                  select_tra=0;
   \   000005A4   ........           LDR      R0,??DataTable122  ;; select_tra
   \   000005A8   0010A0E3           MOV      R1,#+0
   \   000005AC   001080E5           STR      R1,[R0, #+0]
    340                  ToView++;
   \   000005B0   ........           LDR      R0,??DataTable131  ;; ToView
   \   000005B4   ........           LDR      R1,??DataTable131  ;; ToView
   \   000005B8   001091E5           LDR      R1,[R1, #+0]
   \   000005BC   011081E2           ADD      R1,R1,#+1
   \   000005C0   001080E5           STR      R1,[R0, #+0]
    341                  REDRAW();
   \                     ??MenuKeys3_3:
   \   000005C4   720100EF           SWI      +370
   \   000005C8   0000A0E3           MOV      R0,#+0
   \                     ??MenuKeys3_4:
   \   000005CC   C9DF8DE2           ADD      SP,SP,#+804
   \   000005D0   F080BDE8           POP      {R4-R7,PC}
    342                }
    343                else
    344                  if (ToView==3)
   \                     ??MenuKeys3_27:
   \   000005D4   ........           LDR      R0,??DataTable131  ;; ToView
   \   000005D8   000090E5           LDR      R0,[R0, #+0]
   \   000005DC   030050E3           CMP      R0,#+3
   \   000005E0   7400001A           BNE      ??MenuKeys3_1
    345                  {
    346                    char shliah[256];
    347                    int i=tracks[select_tra].i+2;
    348                    int f;
    349                    unsigned int err;
    350                    char way[256];
    351                    sprintf(way,"%smedia.ipl",playerfolder);
   \   000005E4   ........           LDR      R2,??DataTable132  ;; playerfolder
   \   000005E8   D8119FE5           LDR      R1,??MenuKeys3_35+0x4  ;; `?<Constant "%smedia.ipl">`
   \   000005EC   890F8DE2           ADD      R0,SP,#+548
   \   000005F0   160000EF           SWI      +22
    352                    if ((f=fopen(way, A_WriteOnly+A_Create, P_WRITE, & err ))!=-1)
   \   000005F4   0D30A0E1           MOV      R3,SP
   \   000005F8   402FA0E3           MOV      R2,#+256
   \   000005FC   011082E3           ORR      R1,R2,#0x1
   \   00000600   890F8DE2           ADD      R0,SP,#+548
   \   00000604   0A0000EF           SWI      +10
   \   00000608   0040A0E1           MOV      R4,R0
   \   0000060C   010074E3           CMN      R4,#+1
   \   00000610   5E00000A           BEQ      ??MenuKeys3_36
    353                    {          
    354                      sprintf(shliah,"%c%c%c\r\n",max_tra,1,select_tra);
   \   00000614   ........           LDR      R0,??DataTable122  ;; select_tra
   \   00000618   000090E5           LDR      R0,[R0, #+0]
   \   0000061C   01002DE9           PUSH     {R0}
   \   00000620   0130A0E3           MOV      R3,#+1
   \   00000624   ........           LDR      R0,??DataTable127  ;; max_tra
   \   00000628   002090E5           LDR      R2,[R0, #+0]
   \   0000062C   98119FE5           LDR      R1,??MenuKeys3_35+0x8  ;; `?<Constant "%c%c%c\\r\\n">`
   \   00000630   4A0F8DE2           ADD      R0,SP,#+296
   \   00000634   160000EF           SWI      +22
    355                      fwrite(f,shliah,5,&err);
   \   00000638   04308DE2           ADD      R3,SP,#+4
   \   0000063C   0520A0E3           MOV      R2,#+5
   \   00000640   4A1F8DE2           ADD      R1,SP,#+296
   \   00000644   0400A0E1           MOV      R0,R4
   \   00000648   0C0000EF           SWI      +12
    356                      for (i=0;i<max_tra;i++)
   \   0000064C   0050A0E3           MOV      R5,#+0
   \   00000650   78619FE5           LDR      R6,??MenuKeys3_35+0xC  ;; tracks + 32
   \   00000654   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   \   00000658   3A0000EA           B        ??MenuKeys3_37
    357                      {
    358                        int j=tracks[i].i+2;
    359                        sprintf(shliah,pp);
    360                        while ((masyv[j]!=0x0D)&&(j<tracks[i+1].i))
    361                        {
    362                          sprintf(shliah,"%s%c",shliah,masyv[j]);
   \                     ??MenuKeys3_38:
   \   0000065C   ........           LDR      R0,??DataTable149  ;; masyv
   \   00000660   0030D7E7           LDRB     R3,[R7, +R0]
   \   00000664   492F8DE2           ADD      R2,SP,#+292
   \   00000668   ........           LDR      R1,??DataTable139  ;; `?<Constant "%s%c">`
   \   0000066C   490F8DE2           ADD      R0,SP,#+292
   \   00000670   160000EF           SWI      +22
    363                          j++;
   \   00000674   017087E2           ADD      R7,R7,#+1
    364                        }
   \                     ??MenuKeys3_39:
   \   00000678   ........           LDR      R0,??DataTable149  ;; masyv
   \   0000067C   0000D7E7           LDRB     R0,[R7, +R0]
   \   00000680   0D0050E3           CMP      R0,#+13
   \   00000684   0200000A           BEQ      ??MenuKeys3_40
   \   00000688   240096E5           LDR      R0,[R6, #+36]
   \   0000068C   000057E1           CMP      R7,R0
   \   00000690   F1FFFFBA           BLT      ??MenuKeys3_38
    365                        char s[256]="";
   \                     ??MenuKeys3_40:
   \   00000694   24008DE2           ADD      R0,SP,#+36
   \   00000698   0010A0E3           MOV      R1,#+0
   \   0000069C   402FA0E3           MOV      R2,#+256
   \                     ??MenuKeys3_41:
   \   000006A0   042052E2           SUBS     R2,R2,#+4
   \   000006A4   021080E7           STR      R1,[R0, R2]
   \   000006A8   FCFFFF1A           BNE      ??MenuKeys3_41
    366                        char *y=strrchr(shliah,'\\')+1;
   \   000006AC   5C10A0E3           MOV      R1,#+92
   \   000006B0   490F8DE2           ADD      R0,SP,#+292
   \   000006B4   170100EF           SWI      +279
   \   000006B8   017080E2           ADD      R7,R0,#+1
    367                        strncpy(s,shliah,y-shliah);
   \   000006BC   490F8DE2           ADD      R0,SP,#+292
   \   000006C0   002047E0           SUB      R2,R7,R0
   \   000006C4   491F8DE2           ADD      R1,SP,#+292
   \   000006C8   24008DE2           ADD      R0,SP,#+36
   \   000006CC   160100EF           SWI      +278
    368                        s[y-shliah]='\0';
   \   000006D0   490F8DE2           ADD      R0,SP,#+292
   \   000006D4   000047E0           SUB      R0,R7,R0
   \   000006D8   24108DE2           ADD      R1,SP,#+36
   \   000006DC   0020A0E3           MOV      R2,#+0
   \   000006E0   0120C0E7           STRB     R2,[R0, +R1]
    369                        sprintf(y,"%s\r\n",y);
   \   000006E4   0720A0E1           MOV      R2,R7
   \   000006E8   E4109FE5           LDR      R1,??MenuKeys3_35+0x10  ;; `?<Constant "%s\\r\\n">`
   \   000006EC   0700A0E1           MOV      R0,R7
   \   000006F0   160000EF           SWI      +22
    370                        fwrite(f,s,strlen(s),&err);
   \   000006F4   24008DE2           ADD      R0,SP,#+36
   \   000006F8   1B0000EF           SWI      +27
   \   000006FC   0020A0E1           MOV      R2,R0
   \   00000700   0D30A0E1           MOV      R3,SP
   \   00000704   24108DE2           ADD      R1,SP,#+36
   \   00000708   0400A0E1           MOV      R0,R4
   \   0000070C   0C0000EF           SWI      +12
    371                        fwrite(f,"*",1,&err);
   \   00000710   0D30A0E1           MOV      R3,SP
   \   00000714   0120A0E3           MOV      R2,#+1
   \   00000718   291F8FE2           ADR      R1,??MenuKeys3_35  ;; "*"
   \   0000071C   0400A0E1           MOV      R0,R4
   \   00000720   0C0000EF           SWI      +12
    372                        fwrite(f,y,strlen(y),&err);
   \   00000724   0700A0E1           MOV      R0,R7
   \   00000728   1B0000EF           SWI      +27
   \   0000072C   0D30A0E1           MOV      R3,SP
   \   00000730   0020A0E1           MOV      R2,R0
   \   00000734   0710A0E1           MOV      R1,R7
   \   00000738   0400A0E1           MOV      R0,R4
   \   0000073C   0C0000EF           SWI      +12
   \   00000740   015085E2           ADD      R5,R5,#+1
   \   00000744   246086E2           ADD      R6,R6,#+36
   \                     ??MenuKeys3_37:
   \   00000748   ........           LDR      R0,??DataTable127  ;; max_tra
   \   0000074C   000090E5           LDR      R0,[R0, #+0]
   \   00000750   000055E1           CMP      R5,R0
   \   00000754   050000AA           BGE      ??MenuKeys3_42
   \   00000758   000096E5           LDR      R0,[R6, #+0]
   \   0000075C   027080E2           ADD      R7,R0,#+2
   \   00000760   ........           LDR      R1,??DataTable134  ;; pp
   \   00000764   490F8DE2           ADD      R0,SP,#+292
   \   00000768   160000EF           SWI      +22
   \   0000076C   C1FFFFEA           B        ??MenuKeys3_39
    373                      }
    374                      sprintf(shliah,"%sivoplay.elf",playerfolder);
   \                     ??MenuKeys3_42:
   \   00000770   ........           LDR      R2,??DataTable132  ;; playerfolder
   \   00000774   5C109FE5           LDR      R1,??MenuKeys3_35+0x14  ;; `?<Constant "%sivoplay.elf">`
   \   00000778   490F8DE2           ADD      R0,SP,#+292
   \   0000077C   160000EF           SWI      +22
    375                      main(shliah,way);
   \   00000780   891F8DE2           ADD      R1,SP,#+548
   \   00000784   490F8DE2           ADD      R0,SP,#+292
   \   00000788   ........           _BLF     main,??main??rA
   \   0000078C   010000EA           B        ??MenuKeys3_43
    376                      /*CLOSECURENTCSM();
    377                      WSHDR* w=AllocWS(128);
    378                      wsprintf(w,"%sivoplay.elf",playerfolder);
    379                      ExecuteFile(w,0,way);
    380                      FreeWS(w);*/
    381                    }
    382                    else
    383                    {
    384                      Message(LG_CANT_CREATE_FILE);
   \                     ??MenuKeys3_36:
   \   00000790   44009FE5           LDR      R0,??MenuKeys3_35+0x18  ;; `?<Constant "\\315\\345 \\354\\356\\346\\363 \\361\\362`
   \   00000794   ........           _BLF     Message,??Message??rA
    385                    }
    386                    fclose(f,&err);
   \                     ??MenuKeys3_43:
   \   00000798   0D10A0E1           MOV      R1,SP
   \   0000079C   0400A0E1           MOV      R0,R4
   \   000007A0   0D0000EF           SWI      +13
    387                    
    388                    CloseMAINMENU();
   \   000007A4   ........           _BLF     CloseMAINMENU,??CloseMAINMENU??rA
    389                    GeneralFunc_flag1 (GUI2,1);
   \   000007A8   0110A0E3           MOV      R1,#+1
   \   000007AC   ........           LDR      R0,??DataTable138  ;; GUI2
   \   000007B0   000090E5           LDR      R0,[R0, #+0]
   \   000007B4   3D0100EF           SWI      +317
    390                    
    391                  }
    392                break;
    393              }
    394            }
    395            return(0);
   \                     ??MenuKeys3_1:
   \   000007B8   0000A0E3           MOV      R0,#+0
   \   000007BC   C9DF8DE2           ADD      SP,SP,#+804      ;; stack cleaning
   \   000007C0   F080BDE8           POP      {R4-R7,PC}       ;; return
   \                     ??MenuKeys3_35:
   \   000007C4   2A000000           DC8      "*",+0,+0
   \   000007C8   ........           DC32     `?<Constant "%smedia.ipl">`
   \   000007CC   ........           DC32     `?<Constant "%c%c%c\\r\\n">`
   \   000007D0   ........           DC32     tracks + 32
   \   000007D4   ........           DC32     `?<Constant "%s\\r\\n">`
   \   000007D8   ........           DC32     `?<Constant "%sivoplay.elf">`
   \   000007DC   ........           DC32     `?<Constant "\\315\\345 \\354\\356\\346\\363 \\361\\362`
    396          }

   \                                 In segment DATA_C, align 4, align-sorted
    397          const void * const gui_methods4[11]={
   \                     gui_methods4:
   \   00000000   ............       DC32 OnRedraw4, onCreate2, onClose2, onFocus2, onUnfocus2, MenuKeys3
   \              ............
   \              ............
   \              ............
   \   00000018   00000000....       DC32 0H, kill_data, method, method, 0H
   \              ............
   \              ........0000
   \              0000        
    398            (void *)OnRedraw4,	//Redraw
    399            (void *)onCreate2,	//Create
    400            (void *)onClose2,	//Close
    401            (void *)onFocus2,	//Focus
    402            (void *)onUnfocus2,	//Unfocus
    403            (void *)MenuKeys3,	//OnKey
    404            0,
    405            #ifdef NEWSGOLD
    406            (void *)onDestroy,	//Destroy
    407            #else
    408            (void *)kill_data,	//Destroy
    409            #endif
    410            (void *)method,
    411            (void *)method,
    412            0
    413          };
    414          

   \                                 In segment CODE, align 4, keep-with-next
    415          int ViewFiles()
    416          {
   \                     ViewFiles:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   C7DF4DE2           SUB      SP,SP,#+796
    417            ToView=1;
   \   00000008   ........           LDR      R0,??DataTable131  ;; ToView
   \   0000000C   0110A0E3           MOV      R1,#+1
   \   00000010   001080E5           STR      R1,[R0, #+0]
    418            int f;
    419            char artist[30];
    420            unsigned int err;
    421            char name[320];
    422            sprintf(name,"%smediafiiles.txt",playerfolder);
   \   00000014   ........           LDR      R2,??DataTable132  ;; playerfolder
   \   00000018   EC119FE5           LDR      R1,??ViewFiles_0+0x4  ;; `?<Constant "%smediafiiles.txt">`
   \   0000001C   770F8DE2           ADD      R0,SP,#+476
   \   00000020   160000EF           SWI      +22
    423            f=fopen(name, A_ReadOnly, P_READ, & err );
   \   00000024   0D30A0E1           MOV      R3,SP
   \   00000028   8020A0E3           MOV      R2,#+128
   \   0000002C   0010A0E3           MOV      R1,#+0
   \   00000030   770F8DE2           ADD      R0,SP,#+476
   \   00000034   0A0000EF           SWI      +10
   \   00000038   0040A0E1           MOV      R4,R0
    424            if (f!=-1)
   \   0000003C   010074E3           CMN      R4,#+1
   \   00000040   1C00000A           BEQ      ??ViewFiles_1
    425            {
    426            DIR_ENTRY de;
    427            FindFirstFile(&de,name,&err);
   \   00000044   0D20A0E1           MOV      R2,SP
   \   00000048   771F8DE2           ADD      R1,SP,#+476
   \   0000004C   24008DE2           ADD      R0,SP,#+36
   \   00000050   6B0000EF           SWI      +107
    428            fread(f,masyv,de.file_size,&err);
   \   00000054   0D30A0E1           MOV      R3,SP
   \   00000058   38209DE5           LDR      R2,[SP, #+56]
   \   0000005C   ........           LDR      R1,??DataTable149  ;; masyv
   \   00000060   0400A0E1           MOV      R0,R4
   \   00000064   0B0000EF           SWI      +11
    429            sprintf(artist,pp);
   \   00000068   ........           LDR      R1,??DataTable134  ;; pp
   \   0000006C   04008DE2           ADD      R0,SP,#+4
   \   00000070   160000EF           SWI      +22
    430            for (int i=0;i<de.file_size;i++)
   \   00000074   0050A0E3           MOV      R5,#+0
   \   00000078   38009DE5           LDR      R0,[SP, #+56]
   \   0000007C   000050E3           CMP      R0,#+0
   \   00000080   5700001A           BNE      ??ViewFiles_2
    431            {
    432              sprintf(artist,"");
    433              while ((masyv[i]!=0x0D)&&(i<de.file_size))
    434              {
    435                sprintf(artist,"%s%c",artist,masyv[i]);
    436                i++;
    437              }
    438              if (strcmp(artists[curent-1].c,artist))
    439              {
    440                sprintf(artists[curent].c,artist);
    441                artists[curent].i=i;
    442                curent++;
    443              }
    444              for (int j=0;j<3;j++)
    445              {
    446                i++;
    447                while ((masyv[i]!=0x0D)&&(i<de.file_size))
    448                {
    449                  i++;
    450                }
    451              }
    452              i++;
    453            }
    454            max_art=curent;
   \                     ??ViewFiles_3:
   \   00000084   ........           LDR      R0,??DataTable135  ;; max_art
   \   00000088   ........           LDR      R1,??DataTable147  ;; curent
   \   0000008C   001091E5           LDR      R1,[R1, #+0]
   \   00000090   001080E5           STR      R1,[R0, #+0]
    455            artists[max_art].i=de.file_size;
   \   00000094   0100A0E1           MOV      R0,R1
   \   00000098   2410A0E3           MOV      R1,#+36
   \   0000009C   ........           LDR      R2,??DataTable145  ;; artists
   \   000000A0   912020E0           MLA      R0,R1,R0,R2
   \   000000A4   38109DE5           LDR      R1,[SP, #+56]
   \   000000A8   201080E5           STR      R1,[R0, #+32]
    456            FindClose(&de,&err);
   \   000000AC   0D10A0E1           MOV      R1,SP
   \   000000B0   24008DE2           ADD      R0,SP,#+36
   \   000000B4   6D0000EF           SWI      +109
    457            }
    458            fclose(f,&err);
   \                     ??ViewFiles_1:
   \   000000B8   0D10A0E1           MOV      R1,SP
   \   000000BC   0400A0E1           MOV      R0,R4
   \   000000C0   0D0000EF           SWI      +13
    459            MAIN_GUI *main_gui=malloc(sizeof(MAIN_GUI));
   \   000000C4   3C00A0E3           MOV      R0,#+60
   \   000000C8   140000EF           SWI      +20
   \   000000CC   0040A0E1           MOV      R4,R0
    460            zeromem(main_gui,sizeof(MAIN_GUI));
   \   000000D0   3C10A0E3           MOV      R1,#+60
   \   000000D4   1D0100EF           SWI      +285
    461            main_gui->gui.canvas=(void *)(&Canvas3);
   \   000000D8   30019FE5           LDR      R0,??ViewFiles_0+0x8  ;; Canvas3
   \   000000DC   000084E5           STR      R0,[R4, #+0]
    462            main_gui->gui.flag30=2;
   \   000000E0   0200A0E3           MOV      R0,#+2
   \   000000E4   2C0084E5           STR      R0,[R4, #+44]
    463            main_gui->gui.methods=(void *)gui_methods4;
   \   000000E8   24019FE5           LDR      R0,??ViewFiles_0+0xC  ;; gui_methods4
   \   000000EC   040084E5           STR      R0,[R4, #+4]
    464            main_gui->gui.item_ll.data_mfree=(void (*)(void *))mfree_adr();
   \   000000F0   158000EF           SWI      +32789
   \   000000F4   1C0084E5           STR      R0,[R4, #+28]
    465            GUI2=CreateGUI(main_gui);
   \   000000F8   0400A0E1           MOV      R0,R4
   \   000000FC   370100EF           SWI      +311
   \   00000100   ........           LDR      R1,??DataTable138  ;; GUI2
   \   00000104   000081E5           STR      R0,[R1, #+0]
    466            return(0);
   \   00000108   0000A0E3           MOV      R0,#+0
   \   0000010C   C7DF8DE2           ADD      SP,SP,#+796      ;; stack cleaning
   \   00000110   7080BDE8           POP      {R4-R6,PC}       ;; return
   \                     ??ViewFiles_4:
   \   00000114   ........           LDRB     R3,[R6], #+1
   \   00000118   04208DE2           ADD      R2,SP,#+4
   \   0000011C   ........           LDR      R1,??DataTable139  ;; `?<Constant "%s%c">`
   \   00000120   04008DE2           ADD      R0,SP,#+4
   \   00000124   160000EF           SWI      +22
   \   00000128   015085E2           ADD      R5,R5,#+1
   \                     ??ViewFiles_5:
   \   0000012C   0000D6E5           LDRB     R0,[R6, #+0]
   \   00000130   0D0050E3           CMP      R0,#+13
   \   00000134   0200000A           BEQ      ??ViewFiles_6
   \   00000138   38009DE5           LDR      R0,[SP, #+56]
   \   0000013C   000055E1           CMP      R5,R0
   \   00000140   F3FFFF3A           BCC      ??ViewFiles_4
   \                     ??ViewFiles_6:
   \   00000144   04108DE2           ADD      R1,SP,#+4
   \   00000148   ........           LDR      R0,??DataTable147  ;; curent
   \   0000014C   000090E5           LDR      R0,[R0, #+0]
   \   00000150   2420A0E3           MOV      R2,#+36
   \   00000154   ........           LDR      R3,??DataTable145  ;; artists
   \   00000158   923020E0           MLA      R0,R2,R0,R3
   \   0000015C   240040E2           SUB      R0,R0,#+36
   \   00000160   190000EF           SWI      +25
   \   00000164   000050E3           CMP      R0,#+0
   \   00000168   1100000A           BEQ      ??ViewFiles_7
   \   0000016C   04108DE2           ADD      R1,SP,#+4
   \   00000170   ........           LDR      R0,??DataTable147  ;; curent
   \   00000174   000090E5           LDR      R0,[R0, #+0]
   \   00000178   2420A0E3           MOV      R2,#+36
   \   0000017C   ........           LDR      R3,??DataTable145  ;; artists
   \   00000180   923020E0           MLA      R0,R2,R0,R3
   \   00000184   160000EF           SWI      +22
   \   00000188   ........           LDR      R0,??DataTable147  ;; curent
   \   0000018C   000090E5           LDR      R0,[R0, #+0]
   \   00000190   2410A0E3           MOV      R1,#+36
   \   00000194   ........           LDR      R2,??DataTable145  ;; artists
   \   00000198   912020E0           MLA      R0,R1,R0,R2
   \   0000019C   205080E5           STR      R5,[R0, #+32]
   \   000001A0   ........           LDR      R0,??DataTable147  ;; curent
   \   000001A4   ........           LDR      R1,??DataTable147  ;; curent
   \   000001A8   001091E5           LDR      R1,[R1, #+0]
   \   000001AC   011081E2           ADD      R1,R1,#+1
   \   000001B0   001080E5           STR      R1,[R0, #+0]
   \                     ??ViewFiles_7:
   \   000001B4   0300A0E3           MOV      R0,#+3
   \                     ??ViewFiles_8:
   \   000001B8   015085E2           ADD      R5,R5,#+1
   \   000001BC   ........           LDR      R1,??DataTable149  ;; masyv
   \   000001C0   0110D5E7           LDRB     R1,[R5, +R1]
   \   000001C4   0D0051E3           CMP      R1,#+13
   \   000001C8   0200000A           BEQ      ??ViewFiles_9
   \   000001CC   38109DE5           LDR      R1,[SP, #+56]
   \   000001D0   010055E1           CMP      R5,R1
   \   000001D4   F7FFFF3A           BCC      ??ViewFiles_8
   \                     ??ViewFiles_9:
   \   000001D8   010050E2           SUBS     R0,R0,#+1
   \   000001DC   F5FFFF1A           BNE      ??ViewFiles_8
   \   000001E0   025085E2           ADD      R5,R5,#+2
   \                     ??ViewFiles_2:
   \   000001E4   38009DE5           LDR      R0,[SP, #+56]
   \   000001E8   000055E1           CMP      R5,R0
   \   000001EC   A4FFFF2A           BCS      ??ViewFiles_3
   \   000001F0   041F8FE2           ADR      R1,??ViewFiles_0  ;; ""
   \   000001F4   04008DE2           ADD      R0,SP,#+4
   \   000001F8   160000EF           SWI      +22
   \   000001FC   ........           LDR      R0,??DataTable149  ;; masyv
   \   00000200   006085E0           ADD      R6,R5,R0
   \   00000204   C8FFFFEA           B        ??ViewFiles_5
   \                     ??ViewFiles_0:
   \   00000208   00000000           DC8      "",+0,+0,+0
   \   0000020C   ........           DC32     `?<Constant "%smediafiiles.txt">`
   \   00000210   ........           DC32     Canvas3
   \   00000214   ........           DC32     gui_methods4
    467          }

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable0:
   \   00000000   ........           DC32     ToView

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable9:
   \   00000000   ........           DC32     max_art

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable21:
   \   00000000   ........           DC32     select_art

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable63:
   \   00000000   ........           DC32     artists

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable83:
   \   00000000   ........           DC32     max_alb

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable86:
   \   00000000   ........           DC32     select_art

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable114:
   \   00000000   ........           DC32     tracks

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable115:
   \   00000000   ........           DC32     select_alb

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable116:
   \   00000000   ........           DC32     albums

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable122:
   \   00000000   ........           DC32     select_tra

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable127:
   \   00000000   ........           DC32     max_tra

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable131:
   \   00000000   ........           DC32     ToView

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable132:
   \   00000000   ........           DC32     playerfolder

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable134:
   \   00000000   ........           DC32     pp

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable135:
   \   00000000   ........           DC32     max_art

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable138:
   \   00000000   ........           DC32     GUI2

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable139:
   \   00000000   ........           DC32     `?<Constant "%s%c">`

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable145:
   \   00000000   ........           DC32     artists

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable147:
   \   00000000   ........           DC32     curent

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable149:
   \   00000000   ........           DC32     masyv

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for ToView>`:
   \   00000000   01000000           DC32 1

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "%i%c%i">`:
   \   00000000   256925632569       DC8 "%i%c%i"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\302\\350\\352\\356\\355\\340\\342\\366i.`:
   \   00000000   C2E8EAEEEDE0       DC8 "\302\350\352\356\355\340\342\366i..."
   \              E2F6692E2E2E
   \              00          
   \   0000000D   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "%s%c">`:
   \   00000000   2573256300         DC8 "%s%c"
   \   00000005   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "%smedia.ipl">`:
   \   00000000   25736D656469       DC8 "%smedia.ipl"
   \              612E69706C00

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "%c%c%c\\r\\n">`:
   \   00000000   256325632563       DC8 "%c%c%c\015\012"
   \              0D0A00      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \   00000000   00                 DC8 ""
   \   00000001   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000011   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000021   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000031   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000041   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000051   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000061   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000071   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000081   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000091   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000000A1   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000000B1   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000000C1   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000000D1   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000000E1   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000000F1   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000      

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "%s\\r\\n">`:
   \   00000000   25730D0A00         DC8 "%s\015\012"
   \   00000005   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   2A00               DC8 "*"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "%sivoplay.elf">`:
   \   00000000   257369766F70       DC8 "%sivoplay.elf"
   \              6C61792E656C
   \              6600        
   \   0000000E   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\315\\345 \\354\\356\\346\\363 \\361\\362`:
   \   00000000   CDE520ECEEE6       DC8 "\315\345 \354\356\346\363 \361\362\342\356\360\350\362\350 \364\340\351\353!"
   \              F320F1F2E2EE
   \              F0E8F2E820F4
   \              E0E9EB2100  
   \   00000017   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "%smediafiiles.txt">`:
   \   00000000   25736D656469       DC8 "%smediafiiles.txt"
   \              616669696C65
   \              732E74787400
   \   00000012   0000               DC8 0, 0

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   00                 DC8 ""

   Maximum stack usage in bytes:

     Function  CSTACK
     --------  ------
     MenuKeys3   828
     OnRedraw4    84
     ViewFiles   812


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     pt                                 3
     pp                                 1
     curent                             4
     select_art                         4
     select_alb                         4
     select_tra                         4
     max_art                            4
     max_alb                            4
     max_tra                            4
     ToView                             4
     masyv                          30000
     artists                         1800
     albums                          1800
     tracks                          7200
     Canvas3                            8
     GUI2                               4
     OnRedraw4                       1948
     MenuKeys3                       2016
     gui_methods4                      44
     ViewFiles                        536
     ??DataTable0                       4
     ??DataTable9                       4
     ??DataTable21                      4
     ??DataTable63                      4
     ??DataTable83                      4
     ??DataTable86                      4
     ??DataTable114                     4
     ??DataTable115                     4
     ??DataTable116                     4
     ??DataTable122                     4
     ??DataTable127                     4
     ??DataTable131                     4
     ??DataTable132                     4
     ??DataTable134                     4
     ??DataTable135                     4
     ??DataTable138                     4
     ??DataTable139                     4
     ??DataTable145                     4
     ??DataTable147                     4
     ??DataTable149                     4
     ?<Initializer for ToView>          4
     ?<Constant "%i%c%i">               8
     ?<Constant "\302\350\352\356\355\340\342\366i.
                                       16
     ?<Constant "%s%c">                 8
     ?<Constant "%smedia.ipl">         12
     ?<Constant "%c%c%c\r\n">          12
     ?<Constant "">                   256
     ?<Constant "%s\r\n">               8
     ?<Constant "*">                    2
     ?<Constant "%sivoplay.elf">       16
     ?<Constant "\315\345 \354\356\346\363 \361\362
                                       24
     ?<Constant "%smediafiiles.txt">
                                       20
     ?<Constant "">_1                   1
      Others                          108

 
  4 664 bytes in segment CODE
    439 bytes in segment DATA_C
      4 bytes in segment DATA_I
      4 bytes in segment DATA_ID
 40 832 bytes in segment DATA_Z
     24 bytes in segment INITTAB
 
  4 580 bytes of CODE  memory (+ 108 bytes shared)
    443 bytes of CONST memory
 40 836 bytes of DATA  memory

Errors: none
Warnings: none
