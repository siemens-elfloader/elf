##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.41A/W32 EVALUATION    10/Mar/2008  16:43:40 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  D:\Pasha\elf\menu_src\main.c                         #
#    Command line    =  D:\Pasha\elf\menu_src\main.c -D NEWSGOLD -D ELKA     #
#                       -lC D:\Pasha\elf\menu_src\Release_ELKA\List\ -lA     #
#                       D:\Pasha\elf\menu_src\Release_ELKA\List\ -o          #
#                       D:\Pasha\elf\menu_src\Release_ELKA\Obj\ -s9          #
#                       --no_unroll --cpu_mode arm --endian little --cpu     #
#                       ARM926EJ-S --stack_align 4 --interwork -e --fpu      #
#                       None --dlib_config "D:\Pasha\ARM_Embedded_Workbench\ #
#                       Embedded Workbench 4.0 Evaluation\ARM\LIB\dl5tpainl8 #
#                       n.h" -I "D:\Pasha\ARM_Embedded_Workbench\Embedded    #
#                       Workbench 4.0 Evaluation\ARM\INC\"                   #
#                       --inline_threshold=2                                 #
#    List file       =  D:\Pasha\elf\menu_src\Release_ELKA\List\main.lst     #
#    Object file     =  D:\Pasha\elf\menu_src\Release_ELKA\Obj\main.r79      #
#                                                                            #
#                                                                            #
##############################################################################

D:\Pasha\elf\menu_src\main.c
      1          #include "..\inc\swilib.h"
      2          
      3          
      4          extern unsigned long  strtoul (const char *nptr,char **endptr,int base);
      5          
      6          CSM_DESC icsmd;
      7          
      8          int (*old_icsm_onMessage)(CSM_RAM*,GBS_MSG*);
      9          void (*old_icsm_onClose)(CSM_RAM*);
     10          

   \                                 In segment DATA_Z, align 4, align-sorted
     11          unsigned short maincsm_name_body[140];
   \                     maincsm_name_body:
   \   00000000                      DS8 280

   \                                 In segment DATA_C, align 4, align-sorted
     12          const int minus11=-11;
   \                     minus11:
   \   00000000   F5FFFFFF           DC32 -11
     13          
     14          typedef struct
     15          {
     16            CSM_RAM csm;
     17            int gui_id;
     18          }MAIN_CSM;
     19          
     20          typedef struct
     21          {
     22            GUI gui;
     23            WSHDR *ws1;
     24            WSHDR *ws2;
     25            int i1;
     26          }MAIN_GUI;
     27          
     28          
     29          int y=27;
     30          int y_d=27;
     31          int y2;
     32          int sub_on;

   \                                 In segment DATA_Z, align 4, align-sorted
     33          int subbed;
   \                     subbed:
   \   00000000                      DS8 4
     34          int sub_pos;
     35          int main_pos;
     36          int sub_menu_c;
     37          int sub_y;
     38          #define SCREENSIZE ScreenH()*ScreenW()/////////////////
     39          #define HSIZE YDISP*ScreenW()///////////////////////

   \                                 In segment CODE, align 4, keep-with-next
     40          DrwImg(IMGHDR *img, int x, int y, char *pen, char *brush)//////////////////
     41          {
   \                     DrwImg:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   2CD04DE2           SUB      SP,SP,#+44
   \   00000008   3C609DE5           LDR      R6,[SP, #+60]
   \   0000000C   0040A0E1           MOV      R4,R0
     42            RECT rc;
     43            DRWOBJ drwobj;
     44            StoreXYWHtoRECT(&rc,x,y,img->w,img->h);
   \   00000010   B200D4E1           LDRH     R0,[R4, #+2]
   \   00000014   0350A0E1           MOV      R5,R3
   \   00000018   01002DE9           PUSH     {R0}
   \   0000001C   B030D4E1           LDRH     R3,[R4, #+0]
   \   00000020   04008DE2           ADD      R0,SP,#+4
   \   00000024   330100EF           SWI      +307
     45            SetPropTo_Obj5(&drwobj,&rc,0,img);
   \   00000028   0430A0E1           MOV      R3,R4
   \   0000002C   0020A0E3           MOV      R2,#+0
   \   00000030   04108DE2           ADD      R1,SP,#+4
   \   00000034   0C008DE2           ADD      R0,SP,#+12
   \   00000038   510100EF           SWI      +337
     46            SetColor(&drwobj,pen,brush);
   \   0000003C   0620A0E1           MOV      R2,R6
   \   00000040   0510A0E1           MOV      R1,R5
   \   00000044   0C008DE2           ADD      R0,SP,#+12
   \   00000048   4B0100EF           SWI      +331
     47            DrawObject(&drwobj);
   \   0000004C   0C008DE2           ADD      R0,SP,#+12
   \   00000050   2A0100EF           SWI      +298
     48          }
   \   00000054   30D08DE2           ADD      SP,SP,#+48
   \   00000058   7080BDE8           POP      {R4-R6,PC}       ;; return

   \                                 In segment DATA_I, align 4, align-sorted
     49          
     50          IMGHDR img2;
   \                     img2:
   \   00000000                      DS8 12
   \   0000000C                      REQUIRE `?<Initializer for img2>`
   \                     icsmd:
   \   0000000C                      DS8 40
   \   00000034                      REQUIRE `?<Initializer for icsmd>`
   \                     old_icsm_onMessage:
   \   00000034                      DS8 4
   \   00000038                      REQUIRE `?<Initializer for old_icsm_onMessage>`
   \                     old_icsm_onClose:
   \   00000038                      DS8 4
   \   0000003C                      REQUIRE `?<Initializer for old_icsm_onClose>`
   \                     y:
   \   0000003C                      DS8 4
   \   00000040                      REQUIRE `?<Initializer for y>`
   \                     y_d:
   \   00000040                      DS8 4
   \   00000044                      REQUIRE `?<Initializer for y_d>`
   \                     y2:
   \   00000044                      DS8 4
   \   00000048                      REQUIRE `?<Initializer for y2>`
   \                     sub_on:
   \   00000048                      DS8 4
   \   0000004C                      REQUIRE `?<Initializer for sub_on>`
   \                     sub_pos:
   \   0000004C                      DS8 4
   \   00000050                      REQUIRE `?<Initializer for sub_pos>`
   \                     main_pos:
   \   00000050                      DS8 4
   \   00000054                      REQUIRE `?<Initializer for main_pos>`
   \                     sub_menu_c:
   \   00000054                      DS8 4
   \   00000058                      REQUIRE `?<Initializer for sub_menu_c>`
   \                     sub_y:
   \   00000058                      DS8 4
   \   0000005C                      REQUIRE `?<Initializer for sub_y>`
     51          

   \                                 In segment CODE, align 4, keep-with-next
     52          void OnRedraw(MAIN_GUI *data) // OnRedraw
     53          {
   \                     OnRedraw:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
     54            DrwImg(&img2, 0, YDISP, GetPaletteAdrByColorIndex(0),GetPaletteAdrByColorIndex(2)); ////////
   \   00000008   ........           LDR      R4,??DataTable1  ;; img2
   \   0000000C   0200A0E3           MOV      R0,#+2
   \   00000010   2E0100EF           SWI      +302
   \   00000014   0050A0E1           MOV      R5,R0
   \   00000018   0000A0E3           MOV      R0,#+0
   \   0000001C   2E0100EF           SWI      +302
   \   00000020   20002DE9           PUSH     {R5}
     55            DrawImg(0,25,(int)"4:\\zbin\\my_menu\\bg.png");
   \   00000024   58559FE5           LDR      R5,??OnRedraw_1  ;; `?<Constant "4:\\\\zbin\\\\my_menu\\\\main_...">`
   \   00000028   0030A0E1           MOV      R3,R0
   \   0000002C   1820A0E3           MOV      R2,#+24
   \   00000030   0010A0E3           MOV      R1,#+0
   \   00000034   0400A0E1           MOV      R0,R4
   \   00000038   ........           BL       DrwImg
   \   0000003C   486085E2           ADD      R6,R5,#+72
   \   00000040   0620A0E1           MOV      R2,R6
   \   00000044   1910A0E3           MOV      R1,#+25
   \   00000048   0000A0E3           MOV      R0,#+0
   \   0000004C   230000EF           SWI      +35
     56            DrawImg(0,y,(int)"4:\\zbin\\my_menu\\cursor.png");
   \   00000050   3C1094E5           LDR      R1,[R4, #+60]
   \   00000054   607085E2           ADD      R7,R5,#+96
   \   00000058   0720A0E1           MOV      R2,R7
   \   0000005C   0000A0E3           MOV      R0,#+0
   \   00000060   230000EF           SWI      +35
     57            DrawImg(0,y_d+1,(int)"4:\\zbin\\my_menu\\main_mn\\main_1.png");
   \   00000064   400094E5           LDR      R0,[R4, #+64]
   \   00000068   7C2085E2           ADD      R2,R5,#+124
   \   0000006C   011080E2           ADD      R1,R0,#+1
   \   00000070   0000A0E3           MOV      R0,#+0
   \   00000074   230000EF           SWI      +35
     58            DrawImg(0,y_d+18,(int)"4:\\zbin\\my_menu\\main_mn\\main_2.png");
   \   00000078   400094E5           LDR      R0,[R4, #+64]
   \   0000007C   A02085E2           ADD      R2,R5,#+160
   \   00000080   121080E2           ADD      R1,R0,#+18
   \   00000084   0000A0E3           MOV      R0,#+0
   \   00000088   230000EF           SWI      +35
     59            DrawImg(0,y_d+35,(int)"4:\\zbin\\my_menu\\main_mn\\main_3.png");
   \   0000008C   400094E5           LDR      R0,[R4, #+64]
   \   00000090   C42085E2           ADD      R2,R5,#+196
   \   00000094   231080E2           ADD      R1,R0,#+35
   \   00000098   0000A0E3           MOV      R0,#+0
   \   0000009C   230000EF           SWI      +35
     60            DrawImg(0,y_d+52,(int)"4:\\zbin\\my_menu\\main_mn\\main_4.png");
   \   000000A0   400094E5           LDR      R0,[R4, #+64]
   \   000000A4   E82085E2           ADD      R2,R5,#+232
   \   000000A8   341080E2           ADD      R1,R0,#+52
   \   000000AC   0000A0E3           MOV      R0,#+0
   \   000000B0   230000EF           SWI      +35
     61            DrawImg(0,y_d+69,(int)"4:\\zbin\\my_menu\\main_mn\\main_5.png");
   \   000000B4   400094E5           LDR      R0,[R4, #+64]
   \   000000B8   432F85E2           ADD      R2,R5,#+268
   \   000000BC   451080E2           ADD      R1,R0,#+69
   \   000000C0   0000A0E3           MOV      R0,#+0
   \   000000C4   230000EF           SWI      +35
     62            DrawImg(0,y_d+86,(int)"4:\\zbin\\my_menu\\main_mn\\main_6.png");
   \   000000C8   400094E5           LDR      R0,[R4, #+64]
   \   000000CC   4C2F85E2           ADD      R2,R5,#+304
   \   000000D0   561080E2           ADD      R1,R0,#+86
   \   000000D4   0000A0E3           MOV      R0,#+0
   \   000000D8   230000EF           SWI      +35
     63            DrawImg(0,y_d+103,(int)"4:\\zbin\\my_menu\\main_mn\\main_7.png");
   \   000000DC   400094E5           LDR      R0,[R4, #+64]
   \   000000E0   552F85E2           ADD      R2,R5,#+340
   \   000000E4   671080E2           ADD      R1,R0,#+103
   \   000000E8   0000A0E3           MOV      R0,#+0
   \   000000EC   230000EF           SWI      +35
     64            DrawImg(0,y_d+120,(int)"4:\\zbin\\my_menu\\main_mn\\main_8.png");
   \   000000F0   400094E5           LDR      R0,[R4, #+64]
   \   000000F4   5E2F85E2           ADD      R2,R5,#+376
   \   000000F8   781080E2           ADD      R1,R0,#+120
   \   000000FC   0000A0E3           MOV      R0,#+0
   \   00000100   230000EF           SWI      +35
     65            DrawImg(0,y_d+137,(int)"4:\\zbin\\my_menu\\main_mn\\main_9.png");
   \   00000104   400094E5           LDR      R0,[R4, #+64]
   \   00000108   0520A0E1           MOV      R2,R5
   \   0000010C   891080E2           ADD      R1,R0,#+137
   \   00000110   0000A0E3           MOV      R0,#+0
   \   00000114   230000EF           SWI      +35
     66            if(sub_on)
   \   00000118   480094E5           LDR      R0,[R4, #+72]
   \   0000011C   04D08DE2           ADD      SP,SP,#+4
   \   00000120   000050E3           CMP      R0,#+0
   \   00000124   F180BD08           POPEQ    {R0,R4-R7,PC}
   \   00000128   3C0094E5           LDR      R0,[R4, #+60]
   \   0000012C   C12F85E2           ADD      R2,R5,#+772
   \   00000130   0A1080E2           ADD      R1,R0,#+10
   \   00000134   500094E5           LDR      R0,[R4, #+80]
   \   00000138   010040E2           SUB      R0,R0,#+1
   \   0000013C   070050E3           CMP      R0,#+7
   \   00000140   F180BD88           POPHI    {R0,R4-R7,PC}
   \   00000144   023F8FE2           ADR      R3,??OnRedraw_0
   \   00000148   8000A0E1           MOV      R0,R0, LSL #+1
   \   0000014C   B03093E1           LDRH     R3,[R3, R0]
   \   00000150   03F18FE0           ADD      PC,PC,R3, LSL #+2
   \                     ??OnRedraw_0:
   \   00000154   030036000A01       DC16     +3,+54,+266,+87
   \              5700        
   \   0000015C   0A0188000A01       DC16     +266,+136,+266,+196
   \              C400        
     67            {
     68              switch(main_pos)
     69              {
     70              case 1:
     71                DrawImg(50,y+10,(int)"4:\\zbin\\my_menu\\bg.png");
   \                     ??OnRedraw_2:
   \   00000164   0620A0E1           MOV      R2,R6
   \   00000168   3200A0E3           MOV      R0,#+50
   \   0000016C   230000EF           SWI      +35
     72                DrawImg(50,y2,(int)"4:\\zbin\\my_menu\\cursor.png");
   \   00000170   441094E5           LDR      R1,[R4, #+68]
   \   00000174   0720A0E1           MOV      R2,R7
   \   00000178   3200A0E3           MOV      R0,#+50
   \   0000017C   230000EF           SWI      +35
     73                DrawImg(52,y+11,(int)"4:\\zbin\\my_menu\\inet_menu\\inet_1.png");
   \   00000180   3C0094E5           LDR      R0,[R4, #+60]
   \   00000184   672F85E2           ADD      R2,R5,#+412
   \   00000188   0B1080E2           ADD      R1,R0,#+11
   \   0000018C   3400A0E3           MOV      R0,#+52
   \   00000190   230000EF           SWI      +35
     74                DrawImg(52,y+28,(int)"4:\\zbin\\my_menu\\inet_menu\\inet_2.png");
   \   00000194   3C0094E5           LDR      R0,[R4, #+60]
   \   00000198   712F85E2           ADD      R2,R5,#+452
   \   0000019C   1C1080E2           ADD      R1,R0,#+28
   \   000001A0   3400A0E3           MOV      R0,#+52
   \   000001A4   230000EF           SWI      +35
     75                DrawImg(52,y+45,(int)"4:\\zbin\\my_menu\\inet_menu\\inet_3.png");
   \   000001A8   3C0094E5           LDR      R0,[R4, #+60]
   \   000001AC   7B2F85E2           ADD      R2,R5,#+492
   \   000001B0   2D1080E2           ADD      R1,R0,#+45
   \   000001B4   3400A0E3           MOV      R0,#+52
   \   000001B8   230000EF           SWI      +35
     76                DrawImg(52,y+62,(int)"4:\\zbin\\my_menu\\inet_menu\\inet_4.png");
   \   000001BC   3C0094E5           LDR      R0,[R4, #+60]
   \   000001C0   852F85E2           ADD      R2,R5,#+532
   \   000001C4   3E1080E2           ADD      R1,R0,#+62
   \   000001C8   3400A0E3           MOV      R0,#+52
   \   000001CC   230000EF           SWI      +35
     77                DrawImg(52,y+79,(int)"4:\\zbin\\my_menu\\inet_menu\\inet_5.png");
   \   000001D0   3C0094E5           LDR      R0,[R4, #+60]
   \   000001D4   8F2F85E2           ADD      R2,R5,#+572
   \   000001D8   4F1080E2           ADD      R1,R0,#+79
   \   000001DC   3400A0E3           MOV      R0,#+52
   \   000001E0   230000EF           SWI      +35
     78                DrawImg(52,y+96,(int)"4:\\zbin\\my_menu\\inet_menu\\inet_6.png");
   \   000001E4   3C0094E5           LDR      R0,[R4, #+60]
   \   000001E8   992F85E2           ADD      R2,R5,#+612
   \   000001EC   601080E2           ADD      R1,R0,#+96
   \   000001F0   3400A0E3           MOV      R0,#+52
   \   000001F4   230000EF           SWI      +35
     79                DrawImg(52,y+113,(int)"4:\\zbin\\my_menu\\inet_menu\\inet_7.png");
   \   000001F8   3C0094E5           LDR      R0,[R4, #+60]
   \   000001FC   A32F85E2           ADD      R2,R5,#+652
   \   00000200   711080E2           ADD      R1,R0,#+113
   \   00000204   3400A0E3           MOV      R0,#+52
   \   00000208   230000EF           SWI      +35
     80                DrawImg(52,y+130,(int)"4:\\zbin\\my_menu\\inet_menu\\inet_8.png");
   \   0000020C   3C0094E5           LDR      R0,[R4, #+60]
   \   00000210   AD2F85E2           ADD      R2,R5,#+692
   \   00000214   821080E2           ADD      R1,R0,#+130
   \   00000218   3400A0E3           MOV      R0,#+52
   \   0000021C   230000EF           SWI      +35
     81                DrawImg(52,y+147,(int)"4:\\zbin\\my_menu\\inet_menu\\inet_9.png");
   \   00000220   3C0094E5           LDR      R0,[R4, #+60]
   \   00000224   B72F85E2           ADD      R2,R5,#+732
   \   00000228   931080E2           ADD      R1,R0,#+147
   \   0000022C   8A0000EA           B        ??OnRedraw_3
     82                break;
     83              case 2:
     84                DrawImg(50,y+10,(int)"4:\\zbin\\my_menu\\soft_menu\\soft_bg.png");
   \                     ??OnRedraw_4:
   \   00000230   3200A0E3           MOV      R0,#+50
   \   00000234   230000EF           SWI      +35
     85                DrawImg(50,y2,(int)"4:\\zbin\\my_menu\\cursor.png");
   \   00000238   441094E5           LDR      R1,[R4, #+68]
   \   0000023C   0720A0E1           MOV      R2,R7
   \   00000240   3200A0E3           MOV      R0,#+50
   \   00000244   230000EF           SWI      +35
     86                DrawImg(52,y+11,(int)"4:\\zbin\\my_menu\\game_menu\\game_1.png");
   \   00000248   3C0094E5           LDR      R0,[R4, #+60]
   \   0000024C   CB2F85E2           ADD      R2,R5,#+812
   \   00000250   0B1080E2           ADD      R1,R0,#+11
   \   00000254   3400A0E3           MOV      R0,#+52
   \   00000258   230000EF           SWI      +35
     87                DrawImg(52,y+28,(int)"4:\\zbin\\my_menu\\game_menu\\game_2.png");
   \   0000025C   3C0094E5           LDR      R0,[R4, #+60]
   \   00000260   D52F85E2           ADD      R2,R5,#+852
   \   00000264   1C1080E2           ADD      R1,R0,#+28
   \   00000268   3400A0E3           MOV      R0,#+52
   \   0000026C   230000EF           SWI      +35
     88                DrawImg(52,y+45,(int)"4:\\zbin\\my_menu\\game_menu\\game_3.png");
   \   00000270   3C0094E5           LDR      R0,[R4, #+60]
   \   00000274   DF2F85E2           ADD      R2,R5,#+892
   \   00000278   2D1080E2           ADD      R1,R0,#+45
   \   0000027C   3400A0E3           MOV      R0,#+52
   \   00000280   230000EF           SWI      +35
     89                DrawImg(52,y+62,(int)"4:\\zbin\\my_menu\\game_menu\\game_4.png");
   \   00000284   3C0094E5           LDR      R0,[R4, #+60]
   \   00000288   E92F85E2           ADD      R2,R5,#+932
   \   0000028C   3E1080E2           ADD      R1,R0,#+62
   \   00000290   3400A0E3           MOV      R0,#+52
   \   00000294   230000EF           SWI      +35
     90                DrawImg(52,y+79,(int)"4:\\zbin\\my_menu\\game_menu\\game_5.png");
   \   00000298   3C0094E5           LDR      R0,[R4, #+60]
   \   0000029C   F32F85E2           ADD      R2,R5,#+972
   \   000002A0   4F1080E2           ADD      R1,R0,#+79
   \   000002A4   3400A0E3           MOV      R0,#+52
   \   000002A8   230000EF           SWI      +35
     91                DrawImg(52,y+96,(int)"4:\\zbin\\my_menu\\game_menu\\game_6.png");
   \   000002AC   FD2F85E2           ADD      R2,R5,#+1012
   \   000002B0   2B0000EA           B        ??OnRedraw_5
     92                break;
     93              case 4:
     94                DrawImg(50,y+10,(int)"4:\\zbin\\my_menu\\soft_menu\\soft_bg.png");
   \                     ??OnRedraw_6:
   \   000002B4   3200A0E3           MOV      R0,#+50
   \   000002B8   230000EF           SWI      +35
     95                DrawImg(50,y2,(int)"4:\\zbin\\my_menu\\cursor.png");
   \   000002BC   441094E5           LDR      R1,[R4, #+68]
   \   000002C0   0720A0E1           MOV      R2,R7
   \   000002C4   3200A0E3           MOV      R0,#+50
   \   000002C8   230000EF           SWI      +35
     96                DrawImg(52,y+11,(int)"4:\\zbin\\my_menu\\soft_menu\\soft_1.png");
   \   000002CC   1C00A0E3           MOV      R0,#+28
   \   000002D0   400E80E3           ORR      R0,R0,#0x400
   \   000002D4   052080E0           ADD      R2,R0,R5
   \   000002D8   3C0094E5           LDR      R0,[R4, #+60]
   \   000002DC   0B1080E2           ADD      R1,R0,#+11
   \   000002E0   3400A0E3           MOV      R0,#+52
   \   000002E4   230000EF           SWI      +35
     97                DrawImg(52,y+28,(int)"4:\\zbin\\my_menu\\soft_menu\\soft_2.png");
   \   000002E8   4400A0E3           MOV      R0,#+68
   \   000002EC   400E80E3           ORR      R0,R0,#0x400
   \   000002F0   052080E0           ADD      R2,R0,R5
   \   000002F4   3C0094E5           LDR      R0,[R4, #+60]
   \   000002F8   1C1080E2           ADD      R1,R0,#+28
   \   000002FC   3400A0E3           MOV      R0,#+52
   \   00000300   230000EF           SWI      +35
     98                DrawImg(52,y+45,(int)"4:\\zbin\\my_menu\\soft_menu\\soft_3.png");
   \   00000304   6C00A0E3           MOV      R0,#+108
   \   00000308   400E80E3           ORR      R0,R0,#0x400
   \   0000030C   052080E0           ADD      R2,R0,R5
   \   00000310   3C0094E5           LDR      R0,[R4, #+60]
   \   00000314   2D1080E2           ADD      R1,R0,#+45
   \   00000318   3400A0E3           MOV      R0,#+52
   \   0000031C   230000EF           SWI      +35
     99                DrawImg(52,y+62,(int)"4:\\zbin\\my_menu\\soft_menu\\soft_4.png");
   \   00000320   9400A0E3           MOV      R0,#+148
   \   00000324   400E80E3           ORR      R0,R0,#0x400
   \   00000328   052080E0           ADD      R2,R0,R5
   \   0000032C   3C0094E5           LDR      R0,[R4, #+60]
   \   00000330   3E1080E2           ADD      R1,R0,#+62
   \   00000334   3400A0E3           MOV      R0,#+52
   \   00000338   230000EF           SWI      +35
    100                DrawImg(52,y+79,(int)"4:\\zbin\\my_menu\\soft_menu\\soft_5.png");
   \   0000033C   BC00A0E3           MOV      R0,#+188
   \   00000340   400E80E3           ORR      R0,R0,#0x400
   \   00000344   052080E0           ADD      R2,R0,R5
   \   00000348   3C0094E5           LDR      R0,[R4, #+60]
   \   0000034C   4F1080E2           ADD      R1,R0,#+79
   \   00000350   3400A0E3           MOV      R0,#+52
   \   00000354   230000EF           SWI      +35
    101                DrawImg(52,y+96,(int)"4:\\zbin\\my_menu\\soft_menu\\soft_6.png");
   \   00000358   E400A0E3           MOV      R0,#+228
   \   0000035C   400E80E3           ORR      R0,R0,#0x400
   \   00000360   052080E0           ADD      R2,R0,R5
   \                     ??OnRedraw_5:
   \   00000364   3C0094E5           LDR      R0,[R4, #+60]
   \   00000368   601080E2           ADD      R1,R0,#+96
   \   0000036C   3400A0E3           MOV      R0,#+52
   \   00000370   230000EF           SWI      +35
   \   00000374   F180BDE8           POP      {R0,R4-R7,PC}
    102                break;
    103              case 6:
    104                DrawImg(50,y+10,(int)"4:\\zbin\\my_menu\\msg_menu\\msg_bg.png");
   \                     ??OnRedraw_7:
   \   00000378   0C00A0E3           MOV      R0,#+12
   \   0000037C   500E80E3           ORR      R0,R0,#0x500
   \   00000380   052080E0           ADD      R2,R0,R5
   \   00000384   3200A0E3           MOV      R0,#+50
   \   00000388   230000EF           SWI      +35
    105                DrawImg(50,y2,(int)"4:\\zbin\\my_menu\\cursor.png");
   \   0000038C   441094E5           LDR      R1,[R4, #+68]
   \   00000390   0720A0E1           MOV      R2,R7
   \   00000394   3200A0E3           MOV      R0,#+50
   \   00000398   230000EF           SWI      +35
    106                DrawImg(52,y+11,(int)"4:\\zbin\\my_menu\\msg_menu\\msg_1.png");
   \   0000039C   3C0094E5           LDR      R0,[R4, #+60]
   \   000003A0   532E85E2           ADD      R2,R5,#+1328
   \   000003A4   0B1080E2           ADD      R1,R0,#+11
   \   000003A8   3400A0E3           MOV      R0,#+52
   \   000003AC   230000EF           SWI      +35
    107                DrawImg(52,y+28,(int)"4:\\zbin\\my_menu\\msg_menu\\msg_2.png");
   \   000003B0   5400A0E3           MOV      R0,#+84
   \   000003B4   500E80E3           ORR      R0,R0,#0x500
   \   000003B8   052080E0           ADD      R2,R0,R5
   \   000003BC   3C0094E5           LDR      R0,[R4, #+60]
   \   000003C0   1C1080E2           ADD      R1,R0,#+28
   \   000003C4   3400A0E3           MOV      R0,#+52
   \   000003C8   230000EF           SWI      +35
    108                DrawImg(52,y+45,(int)"4:\\zbin\\my_menu\\msg_menu\\msg_3.png");
   \   000003CC   7800A0E3           MOV      R0,#+120
   \   000003D0   500E80E3           ORR      R0,R0,#0x500
   \   000003D4   052080E0           ADD      R2,R0,R5
   \   000003D8   3C0094E5           LDR      R0,[R4, #+60]
   \   000003DC   2D1080E2           ADD      R1,R0,#+45
   \   000003E0   3400A0E3           MOV      R0,#+52
   \   000003E4   230000EF           SWI      +35
    109                DrawImg(52,y+62,(int)"4:\\zbin\\my_menu\\msg_menu\\msg_4.png");
   \   000003E8   9C00A0E3           MOV      R0,#+156
   \   000003EC   500E80E3           ORR      R0,R0,#0x500
   \   000003F0   052080E0           ADD      R2,R0,R5
   \   000003F4   3C0094E5           LDR      R0,[R4, #+60]
   \   000003F8   3E1080E2           ADD      R1,R0,#+62
   \   000003FC   3400A0E3           MOV      R0,#+52
   \   00000400   230000EF           SWI      +35
    110                DrawImg(52,y+79,(int)"4:\\zbin\\my_menu\\msg_menu\\msg_5.png");
   \   00000404   3C0094E5           LDR      R0,[R4, #+60]
   \   00000408   242085E2           ADD      R2,R5,#+36
   \   0000040C   4F1080E2           ADD      R1,R0,#+79
   \   00000410   3400A0E3           MOV      R0,#+52
   \   00000414   230000EF           SWI      +35
    111                DrawImg(52,y+96,(int)"4:\\zbin\\my_menu\\msg_menu\\msg_6.png");
   \   00000418   3C0094E5           LDR      R0,[R4, #+60]
   \   0000041C   5C2E85E2           ADD      R2,R5,#+1472
   \   00000420   601080E2           ADD      R1,R0,#+96
   \   00000424   3400A0E3           MOV      R0,#+52
   \   00000428   230000EF           SWI      +35
    112                DrawImg(52,y+113,(int)"4:\\zbin\\my_menu\\msg_menu\\msg_7.png");
   \   0000042C   E400A0E3           MOV      R0,#+228
   \   00000430   500E80E3           ORR      R0,R0,#0x500
   \   00000434   052080E0           ADD      R2,R0,R5
   \   00000438   3C0094E5           LDR      R0,[R4, #+60]
   \   0000043C   711080E2           ADD      R1,R0,#+113
   \   00000440   3400A0E3           MOV      R0,#+52
   \   00000444   230000EF           SWI      +35
    113                DrawImg(52,y+130,(int)"4:\\zbin\\my_menu\\msg_menu\\msg_8.png");
   \   00000448   0800A0E3           MOV      R0,#+8
   \   0000044C   600E80E3           ORR      R0,R0,#0x600
   \   00000450   052080E0           ADD      R2,R0,R5
   \   00000454   3C0094E5           LDR      R0,[R4, #+60]
   \   00000458   821080E2           ADD      R1,R0,#+130
   \                     ??OnRedraw_3:
   \   0000045C   3400A0E3           MOV      R0,#+52
   \   00000460   230000EF           SWI      +35
   \   00000464   F180BDE8           POP      {R0,R4-R7,PC}
    114                break;
    115              case 8:
    116                DrawImg(50,y+10,(int)"4:\\zbin\\my_menu\\bg.png");
   \                     ??OnRedraw_8:
   \   00000468   0620A0E1           MOV      R2,R6
   \   0000046C   3200A0E3           MOV      R0,#+50
   \   00000470   230000EF           SWI      +35
    117                DrawImg(50,y2,(int)"4:\\zbin\\my_menu\\cursor.png");
   \   00000474   441094E5           LDR      R1,[R4, #+68]
   \   00000478   0720A0E1           MOV      R2,R7
   \   0000047C   3200A0E3           MOV      R0,#+50
   \   00000480   230000EF           SWI      +35
    118                DrawImg(52,y+11,(int)"4:\\zbin\\my_menu\\sett_menu\\sett_1.png");
   \   00000484   2C00A0E3           MOV      R0,#+44
   \   00000488   600E80E3           ORR      R0,R0,#0x600
   \   0000048C   052080E0           ADD      R2,R0,R5
   \   00000490   3C0094E5           LDR      R0,[R4, #+60]
   \   00000494   0B1080E2           ADD      R1,R0,#+11
   \   00000498   3400A0E3           MOV      R0,#+52
   \   0000049C   230000EF           SWI      +35
    119                DrawImg(52,y+28,(int)"4:\\zbin\\my_menu\\sett_menu\\sett_2.png");
   \   000004A0   5400A0E3           MOV      R0,#+84
   \   000004A4   600E80E3           ORR      R0,R0,#0x600
   \   000004A8   052080E0           ADD      R2,R0,R5
   \   000004AC   3C0094E5           LDR      R0,[R4, #+60]
   \   000004B0   1C1080E2           ADD      R1,R0,#+28
   \   000004B4   3400A0E3           MOV      R0,#+52
   \   000004B8   230000EF           SWI      +35
    120                DrawImg(52,y+45,(int)"4:\\zbin\\my_menu\\sett_menu\\sett_3.png");
   \   000004BC   7C00A0E3           MOV      R0,#+124
   \   000004C0   600E80E3           ORR      R0,R0,#0x600
   \   000004C4   052080E0           ADD      R2,R0,R5
   \   000004C8   3C0094E5           LDR      R0,[R4, #+60]
   \   000004CC   2D1080E2           ADD      R1,R0,#+45
   \   000004D0   3400A0E3           MOV      R0,#+52
   \   000004D4   230000EF           SWI      +35
    121                DrawImg(52,y+62,(int)"4:\\zbin\\my_menu\\sett_menu\\sett_4.png");
   \   000004D8   A400A0E3           MOV      R0,#+164
   \   000004DC   600E80E3           ORR      R0,R0,#0x600
   \   000004E0   052080E0           ADD      R2,R0,R5
   \   000004E4   3C0094E5           LDR      R0,[R4, #+60]
   \   000004E8   3E1080E2           ADD      R1,R0,#+62
   \   000004EC   3400A0E3           MOV      R0,#+52
   \   000004F0   230000EF           SWI      +35
    122                DrawImg(52,y+79,(int)"4:\\zbin\\my_menu\\sett_menu\\sett_5.png");
   \   000004F4   CC00A0E3           MOV      R0,#+204
   \   000004F8   600E80E3           ORR      R0,R0,#0x600
   \   000004FC   052080E0           ADD      R2,R0,R5
   \   00000500   3C0094E5           LDR      R0,[R4, #+60]
   \   00000504   4F1080E2           ADD      R1,R0,#+79
   \   00000508   3400A0E3           MOV      R0,#+52
   \   0000050C   230000EF           SWI      +35
    123                DrawImg(52,y+96,(int)"4:\\zbin\\my_menu\\sett_menu\\sett_6.png");
   \   00000510   F400A0E3           MOV      R0,#+244
   \   00000514   600E80E3           ORR      R0,R0,#0x600
   \   00000518   052080E0           ADD      R2,R0,R5
   \   0000051C   3C0094E5           LDR      R0,[R4, #+60]
   \   00000520   601080E2           ADD      R1,R0,#+96
   \   00000524   3400A0E3           MOV      R0,#+52
   \   00000528   230000EF           SWI      +35
    124                DrawImg(52,y+113,(int)"4:\\zbin\\my_menu\\sett_menu\\sett_7.png");
   \   0000052C   1C00A0E3           MOV      R0,#+28
   \   00000530   700E80E3           ORR      R0,R0,#0x700
   \   00000534   052080E0           ADD      R2,R0,R5
   \   00000538   3C0094E5           LDR      R0,[R4, #+60]
   \   0000053C   711080E2           ADD      R1,R0,#+113
   \   00000540   3400A0E3           MOV      R0,#+52
   \   00000544   230000EF           SWI      +35
    125                DrawImg(52,y+130,(int)"4:\\zbin\\my_menu\\sett_menu\\sett_8.png");
   \   00000548   4400A0E3           MOV      R0,#+68
   \   0000054C   700E80E3           ORR      R0,R0,#0x700
   \   00000550   052080E0           ADD      R2,R0,R5
   \   00000554   3C0094E5           LDR      R0,[R4, #+60]
   \   00000558   821080E2           ADD      R1,R0,#+130
   \   0000055C   3400A0E3           MOV      R0,#+52
   \   00000560   230000EF           SWI      +35
    126                DrawImg(52,y+147,(int)"4:\\zbin\\my_menu\\sett_menu\\sett_9.png");
   \   00000564   6C00A0E3           MOV      R0,#+108
   \   00000568   700E80E3           ORR      R0,R0,#0x700
   \   0000056C   052080E0           ADD      R2,R0,R5
   \   00000570   3C0094E5           LDR      R0,[R4, #+60]
   \   00000574   931080E2           ADD      R1,R0,#+147
   \   00000578   3400A0E3           MOV      R0,#+52
   \   0000057C   230000EF           SWI      +35
    127                break;
    128              }
    129            }
    130          }
   \                     ??OnRedraw_9:
   \   00000580   F180BDE8           POP      {R0,R4-R7,PC}    ;; return
   \                     ??OnRedraw_1:
   \   00000584   ........           DC32     `?<Constant "4:\\\\zbin\\\\my_menu\\\\main_...">`
    131          

   \                                 In segment CODE, align 4, keep-with-next
    132          void onCreate(MAIN_GUI *data, void *(*malloc_adr)(int)) //Create
    133          {
    134            data->gui.state=1;
   \                     onCreate:
   \   00000000   0110A0E3           MOV      R1,#+1
   \   00000004   0C10C0E5           STRB     R1,[R0, #+12]
    135          }
   \   00000008   1EFF2FE1           BX       LR               ;; return
    136          

   \                                 In segment CODE, align 4, keep-with-next
    137          void onClose(MAIN_GUI *data, void (*mfree_adr)(void *)) //Close
    138          {
    139            data->gui.state=0;
   \                     onClose:
   \   00000000   0010A0E3           MOV      R1,#+0
   \   00000004   0C10C0E5           STRB     R1,[R0, #+12]
    140          }
   \   00000008   1EFF2FE1           BX       LR               ;; return
    141          

   \                                 In segment CODE, align 4, keep-with-next
    142          void onFocus(MAIN_GUI *data, void *(*malloc_adr)(int), void (*mfree_adr)(void *))//Focus
    143          {
   \                     onFocus:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    144            LockSched();
    145            short *p=malloc((SCREENSIZE-HSIZE)*sizeof(short)), *pp=RamScreenBuffer(); 
    146            pp+=HSIZE; 
    147            IMGHDR img={ScreenW(),(ScreenH()-YDISP),8,(char *)p};
    148          
    149            for(int i=0;i<SCREENSIZE-HSIZE;i++) 
   \   00000008   00A0A0E3           MOV      R10,#+0
   \   0000000C   460100EF           SWI      +326
   \   00000010   898100EF           SWI      +33161
   \   00000014   0050A0E1           MOV      R5,R0
   \   00000018   888100EF           SWI      +33160
   \   0000001C   0060A0E1           MOV      R6,R0
   \   00000020   888100EF           SWI      +33160
   \   00000024   960501E0           MUL      R1,R6,R5
   \   00000028   1820A0E3           MOV      R2,#+24
   \   0000002C   920000E0           MUL      R0,R2,R0
   \   00000030   000041E0           SUB      R0,R1,R0
   \   00000034   8000A0E1           LSL      R0,R0,#+1
   \   00000038   140000EF           SWI      +20
   \   0000003C   0050A0E1           MOV      R5,R0
   \   00000040   E08000EF           SWI      +32992
   \   00000044   0060A0E1           MOV      R6,R0
   \   00000048   888100EF           SWI      +33160
   \   0000004C   3010A0E3           MOV      R1,#+48
   \   00000050   916026E0           MLA      R6,R1,R0,R6
   \   00000054   888100EF           SWI      +33160
   \   00000058   0070A0E1           MOV      R7,R0
   \   0000005C   898100EF           SWI      +33161
   \   00000060   E810A0E3           MOV      R1,#+232
   \   00000064   FF1C81E3           ORR      R1,R1,#0xFF00
   \   00000068   008081E0           ADD      R8,R1,R0
   \   0000006C   0590A0E1           MOV      R9,R5
   \   00000070   020000EA           B        ??onFocus_0
    150              *p++=*pp++; 
   \                     ??onFocus_1:
   \   00000074   ........           LDRSH    R0,[R6], #+2
   \   00000078   01A08AE2           ADD      R10,R10,#+1
   \   0000007C   ........           STRH     R0,[R5], #+2
   \                     ??onFocus_0:
   \   00000080   898100EF           SWI      +33161
   \   00000084   00B0A0E1           MOV      R11,R0
   \   00000088   888100EF           SWI      +33160
   \   0000008C   900B0BE0           MUL      R11,R0,R11
   \   00000090   888100EF           SWI      +33160
   \   00000094   1810A0E3           MOV      R1,#+24
   \   00000098   910000E0           MUL      R0,R1,R0
   \   0000009C   00004BE0           SUB      R0,R11,R0
   \   000000A0   00005AE1           CMP      R10,R0
   \   000000A4   F2FFFFBA           BLT      ??onFocus_1
    151          //  DrwImg(&img, 0, YDISP, GetPaletteAdrByColorIndex(0),GetPaletteAdrByColorIndex(2)); 
    152          //  mfree(img.bitmap);
    153            UnlockSched();
   \   000000A8   470100EF           SWI      +327
    154            char* ramIconBar = RamIconBar();
    155            *ramIconBar = 0;
   \   000000AC   378200EF           SWI      +33335
   \   000000B0   0010A0E3           MOV      R1,#+0
   \   000000B4   0010C0E5           STRB     R1,[R0, #+0]
    156            data->gui.state=2;
   \   000000B8   0200A0E3           MOV      R0,#+2
   \   000000BC   0C00C4E5           STRB     R0,[R4, #+12]
    157            img2=img;
   \   000000C0   ........           LDR      R0,??DataTable1  ;; img2
   \   000000C4   0810A0E3           MOV      R1,#+8
   \   000000C8   B070C0E1           STRH     R7,[R0, #+0]
   \   000000CC   B280C0E1           STRH     R8,[R0, #+2]
   \   000000D0   041080E5           STR      R1,[R0, #+4]
   \   000000D4   089080E5           STR      R9,[R0, #+8]
    158          }
   \   000000D8   F08FBDE8           POP      {R4-R11,PC}      ;; return
    159          

   \                                 In segment CODE, align 4, keep-with-next
    160          void onUnfocus(MAIN_GUI *data, void (*mfree_adr)(void *)) //Unfocus
    161          {
   \                     onUnfocus:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    162            mfree(img2.bitmap);
   \   00000008   20009FE5           LDR      R0,??onUnfocus_0  ;; img2 + 8
    163            char* ramIconBar = RamIconBar();
    164            *ramIconBar = 1;
   \   0000000C   0150A0E3           MOV      R5,#+1
   \   00000010   000090E5           LDR      R0,[R0, #+0]
   \   00000014   150000EF           SWI      +21
   \   00000018   378200EF           SWI      +33335
   \   0000001C   0050C0E5           STRB     R5,[R0, #+0]
    165            if (data->gui.state!=2) return;
   \   00000020   0C00D4E5           LDRB     R0,[R4, #+12]
   \   00000024   020050E3           CMP      R0,#+2
    166            data->gui.state=1;
   \   00000028   0C50C405           STRBEQ   R5,[R4, #+12]
    167          }
   \   0000002C   3080BDE8           POP      {R4,R5,PC}       ;; return
   \                     ??onUnfocus_0:
   \   00000030   ........           DC32     img2 + 8
    168          

   \                                 In segment CODE, align 4, keep-with-next
    169          void Engade()
    170          {
    171            switch(main_pos)
   \                     Engade:
   \   00000000   ........           LDR      R0,??DataTable6  ;; img2
   \   00000004   30402DE9           PUSH     {R4,R5,LR}
   \   00000008   4C1090E5           LDR      R1,[R0, #+76]
   \   0000000C   500090E5           LDR      R0,[R0, #+80]
   \   00000010   20449FE5           LDR      R4,??Engade_6    ;; `?<Constant "A06F5365">`
   \   00000014   010040E2           SUB      R0,R0,#+1
   \   00000018   080050E3           CMP      R0,#+8
   \   0000001C   3080BD88           POPHI    {R4,R5,PC}
   \   00000020   022F8FE2           ADR      R2,??Engade_0
   \   00000024   8000A0E1           MOV      R0,R0, LSL #+1
   \   00000028   B02092E1           LDRH     R2,[R2, R0]
   \   0000002C   02F18FE0           ADD      PC,PC,R2, LSL #+2
   \                     ??Engade_0:
   \   00000030   040043006900       DC16     +4,+67,+105,+110
   \              6E00        
   \   00000038   94009A00C400       DC16     +148,+154,+196,+200
   \              C800        
   \   00000040   F5000000           DC16     +245,+0
    172            {
    173            case 1:
    174              switch(sub_pos)
   \                     ??Engade_7:
   \   00000044   011041E2           SUB      R1,R1,#+1
   \   00000048   080051E3           CMP      R1,#+8
   \   0000004C   3080BD88           POPHI    {R4,R5,PC}
   \   00000050   020F8FE2           ADR      R0,??Engade_1
   \   00000054   8110A0E1           MOV      R1,R1, LSL #+1
   \   00000058   B10090E1           LDRH     R0,[R0, R1]
   \   0000005C   00F18FE0           ADD      PC,PC,R0, LSL #+2
   \                     ??Engade_1:
   \   00000060   040009001500       DC16     +4,+9,+21,+26
   \              1A00        
   \   00000068   1F0024002900       DC16     +31,+36,+41,+45
   \              2D00        
   \   00000070   32000000           DC16     +50,+0
    175              {
    176              case 1:
    177                {
    178                WSHDR *elfname=AllocWS(256);
   \                     ??Engade_8:
   \   00000074   400FA0E3           MOV      R0,#+256
   \   00000078   250100EF           SWI      +293
   \   0000007C   0050A0E1           MOV      R5,R0
    179                wsprintf(elfname,(char*)"4:\\zbin\\weather\\weather.elf");
   \   00000080   E01084E2           ADD      R1,R4,#+224
   \   00000084   030000EA           B        ??Engade_9
    180                ExecuteFile(elfname,NULL,NULL);
    181                FreeWS(elfname);
    182                }
    183                break;
    184              case 2:
    185                {
    186                WSHDR *elfname=AllocWS(256);
   \                     ??Engade_10:
   \   00000088   400FA0E3           MOV      R0,#+256
   \   0000008C   250100EF           SWI      +293
   \   00000090   0050A0E1           MOV      R5,R0
    187                wsprintf(elfname,(char*)"4:\\Zbin\\NatICQ\\NatICQ.elf");
   \   00000094   FC1084E2           ADD      R1,R4,#+252
   \                     ??Engade_9:
   \   00000098   240100EF           SWI      +292
    188                ExecuteFile(elfname,NULL,NULL);
   \   0000009C   0020A0E3           MOV      R2,#+0
   \   000000A0   0010A0E3           MOV      R1,#+0
   \   000000A4   0500A0E1           MOV      R0,R5
   \   000000A8   940000EF           SWI      +148
    189                FreeWS(elfname);
   \   000000AC   0500A0E1           MOV      R0,R5
   \   000000B0   290100EF           SWI      +297
   \   000000B4   3080BDE8           POP      {R4,R5,PC}
    190                }
    191                break;
    192              case 3:
    193                {
    194                WSHDR *elfname=AllocWS(256);
   \                     ??Engade_11:
   \   000000B8   400FA0E3           MOV      R0,#+256
   \   000000BC   250100EF           SWI      +293
   \   000000C0   0050A0E1           MOV      R5,R0
    195                wsprintf(elfname,(char*)"4:\\Zbin\\NatICQ\\NatICQ2.elf");
   \   000000C4   461F84E2           ADD      R1,R4,#+280
   \   000000C8   F2FFFFEA           B        ??Engade_9
    196                ExecuteFile(elfname,NULL,NULL);
    197                FreeWS(elfname);
    198                }
    199                break;
    200              case 4:
    201                {
    202                WSHDR *elfname=AllocWS(256);
   \                     ??Engade_12:
   \   000000CC   400FA0E3           MOV      R0,#+256
   \   000000D0   250100EF           SWI      +293
   \   000000D4   0050A0E1           MOV      R5,R0
    203                wsprintf(elfname,(char*)"4:\\Zbin\\siejc\\siejc.elf");
   \   000000D8   4D1F84E2           ADD      R1,R4,#+308
   \   000000DC   EDFFFFEA           B        ??Engade_9
    204                ExecuteFile(elfname,NULL,NULL);
    205                FreeWS(elfname);
    206                }
    207                break;
    208              case 5:
    209                {
    210                WSHDR *elfname=AllocWS(256);
   \                     ??Engade_13:
   \   000000E0   400FA0E3           MOV      R0,#+256
   \   000000E4   250100EF           SWI      +293
   \   000000E8   0050A0E1           MOV      R5,R0
    211                wsprintf(elfname,(char*)"4:\\zbin\\balletmini\\operamini.oms");
   \   000000EC   531F84E2           ADD      R1,R4,#+332
   \   000000F0   E8FFFFEA           B        ??Engade_9
    212                ExecuteFile(elfname,NULL,NULL);
    213                FreeWS(elfname);
    214                }
    215                break;
    216              case 6:
    217                {
    218                WSHDR *elfname=AllocWS(256);
   \                     ??Engade_14:
   \   000000F4   400FA0E3           MOV      R0,#+256
   \   000000F8   250100EF           SWI      +293
   \   000000FC   0050A0E1           MOV      R5,R0
    219                wsprintf(elfname,(char*)"4:\\zbin\\emailclient\\mailviewer.elf");
   \   00000100   5C1F84E2           ADD      R1,R4,#+368
   \   00000104   E3FFFFEA           B        ??Engade_9
    220                ExecuteFile(elfname,NULL,NULL);
    221                FreeWS(elfname);
    222                }
    223                break;
    224              case 7:
    225                {
    226                typedef void (*voidfunc)(); 
    227                unsigned int addr=strtoul( (char*)"A06F52E7", 0, 16 );
   \                     ??Engade_15:
   \   00000108   1020A0E3           MOV      R2,#+16
   \   0000010C   0010A0E3           MOV      R1,#+0
   \   00000110   650F84E2           ADD      R0,R4,#+404
   \   00000114   6B0000EA           B        ??Engade_16
    228                voidfunc pp=(voidfunc)addr;
    229                SUBPROC((void*)pp);
    230                }
    231                break;
    232              case 8:
    233                {
    234                WSHDR *elfname=AllocWS(256);
   \                     ??Engade_17:
   \   00000118   400FA0E3           MOV      R0,#+256
   \   0000011C   250100EF           SWI      +293
   \   00000120   0050A0E1           MOV      R5,R0
    235                wsprintf(elfname,(char*)"4:\\viskas kas nav elf\\java\\soft\\mig33.jar");
   \   00000124   681F84E2           ADD      R1,R4,#+416
   \   00000128   DAFFFFEA           B        ??Engade_9
    236                ExecuteFile(elfname,NULL,NULL);
    237                FreeWS(elfname);
    238                }
    239                break;
    240              case 9:
    241                {
    242                WSHDR *elfname=AllocWS(256);
   \                     ??Engade_18:
   \   0000012C   400FA0E3           MOV      R0,#+256
   \   00000130   250100EF           SWI      +293
   \   00000134   0050A0E1           MOV      R5,R0
    243                wsprintf(elfname,(char*)"4:\\zbin\\utilities\\nrss.elf");
   \   00000138   731F84E2           ADD      R1,R4,#+460
   \   0000013C   D5FFFFEA           B        ??Engade_9
    244                ExecuteFile(elfname,NULL,NULL);
    245                FreeWS(elfname);
    246                }
    247                break;
    248              }
    249              break;
    250            case 2:
    251              switch(sub_pos)
   \                     ??Engade_19:
   \   00000140   011041E2           SUB      R1,R1,#+1
   \   00000144   050051E3           CMP      R1,#+5
   \   00000148   3080BD88           POPHI    {R4,R5,PC}
   \   0000014C   010F8FE2           ADR      R0,??Engade_2
   \   00000150   0100D0E7           LDRB     R0,[R0, R1]
   \   00000154   00F18FE0           ADD      PC,PC,R0, LSL #+2
   \                     ??Engade_2:
   \   00000158   01060B10           DC8      +1,+6,+11,+16
   \   0000015C   151A0000           DC8      +21,+26,+0,+0
    252              {
    253              case 1:
    254                {
    255                WSHDR *elfname=AllocWS(256);
   \                     ??Engade_20:
   \   00000160   400FA0E3           MOV      R0,#+256
   \   00000164   250100EF           SWI      +293
   \   00000168   0050A0E1           MOV      R5,R0
    256                wsprintf(elfname,(char*)"4:\\zbin\\emul\\tank.nes");
   \   0000016C   7A1F84E2           ADD      R1,R4,#+488
   \   00000170   C8FFFFEA           B        ??Engade_9
    257                ExecuteFile(elfname,NULL,NULL);
    258                FreeWS(elfname);
    259                }
    260                break;
    261              case 2:
    262                {
    263                WSHDR *elfname=AllocWS(256);
   \                     ??Engade_21:
   \   00000174   400FA0E3           MOV      R0,#+256
   \   00000178   250100EF           SWI      +293
   \   0000017C   0050A0E1           MOV      R5,R0
    264                wsprintf(elfname,(char*)"4:\\zbin\\emul\\mario.nes");
   \   00000180   801F84E2           ADD      R1,R4,#+512
   \   00000184   C3FFFFEA           B        ??Engade_9
    265                ExecuteFile(elfname,NULL,NULL);
    266                FreeWS(elfname);
    267                }
    268                break;
    269              case 3:
    270                {
    271                WSHDR *elfname=AllocWS(256);
   \                     ??Engade_22:
   \   00000188   400FA0E3           MOV      R0,#+256
   \   0000018C   250100EF           SWI      +293
   \   00000190   0050A0E1           MOV      R5,R0
    272                wsprintf(elfname,(char*)"4:\\zbin\\emul\\contra.nes");
   \   00000194   861F84E2           ADD      R1,R4,#+536
   \   00000198   BEFFFFEA           B        ??Engade_9
    273                ExecuteFile(elfname,NULL,NULL);
    274                FreeWS(elfname);
    275                }
    276                break;
    277              case 4:
    278                {
    279                WSHDR *elfname=AllocWS(256);
   \                     ??Engade_23:
   \   0000019C   400FA0E3           MOV      R0,#+256
   \   000001A0   250100EF           SWI      +293
   \   000001A4   0050A0E1           MOV      R5,R0
    280                wsprintf(elfname,(char*)"4:\\zbin\\emul\\scat.nes");
   \   000001A8   8C1F84E2           ADD      R1,R4,#+560
   \   000001AC   B9FFFFEA           B        ??Engade_9
    281                ExecuteFile(elfname,NULL,NULL);
    282                FreeWS(elfname);
    283                }
    284                break;
    285              case 5:
    286                {
    287                WSHDR *elfname=AllocWS(256);
   \                     ??Engade_24:
   \   000001B0   400FA0E3           MOV      R0,#+256
   \   000001B4   250100EF           SWI      +293
   \   000001B8   0050A0E1           MOV      R5,R0
    288                wsprintf(elfname,(char*)"4:\\zbin\\emul\\felix.nes");
   \   000001BC   921F84E2           ADD      R1,R4,#+584
   \   000001C0   B4FFFFEA           B        ??Engade_9
    289                ExecuteFile(elfname,NULL,NULL);
    290                FreeWS(elfname);
    291                }
    292                break;
    293              case 6:
    294                {
    295                WSHDR *elfname=AllocWS(256);
   \                     ??Engade_25:
   \   000001C4   400FA0E3           MOV      R0,#+256
   \   000001C8   250100EF           SWI      +293
   \   000001CC   0050A0E1           MOV      R5,R0
    296                wsprintf(elfname,(char*)"4:\\zbin\\emul\\shining_force_2.gg");
   \   000001D0   981F84E2           ADD      R1,R4,#+608
   \   000001D4   AFFFFFEA           B        ??Engade_9
    297                ExecuteFile(elfname,NULL,NULL);
    298                FreeWS(elfname);
    299                }
    300                break;
    301              }
    302              break;
    303            case 3:
    304              {
    305                WSHDR *elfname=AllocWS(256);
   \                     ??Engade_26:
   \   000001D8   400FA0E3           MOV      R0,#+256
   \   000001DC   250100EF           SWI      +293
   \   000001E0   0050A0E1           MOV      R5,R0
    306                wsprintf(elfname,(char*)"4:\\ZBin\\mc\\mc.elf");
   \   000001E4   A01F84E2           ADD      R1,R4,#+640
   \   000001E8   AAFFFFEA           B        ??Engade_9
    307                ExecuteFile(elfname,NULL,NULL);
    308                FreeWS(elfname);
    309              }
    310              break;
    311            case 4:
    312              switch(sub_pos)
   \                     ??Engade_27:
   \   000001EC   011041E2           SUB      R1,R1,#+1
   \   000001F0   050051E3           CMP      R1,#+5
   \   000001F4   3080BD88           POPHI    {R4,R5,PC}
   \   000001F8   010F8FE2           ADR      R0,??Engade_3
   \   000001FC   0100D0E7           LDRB     R0,[R0, R1]
   \   00000200   00F18FE0           ADD      PC,PC,R0, LSL #+2
   \                     ??Engade_3:
   \   00000204   01060B10           DC8      +1,+6,+11,+16
   \   00000208   151A0000           DC8      +21,+26,+0,+0
    313              {
    314              case 1:
    315                {
    316                WSHDR *elfname=AllocWS(256);
   \                     ??Engade_28:
   \   0000020C   400FA0E3           MOV      R0,#+256
   \   00000210   250100EF           SWI      +293
   \   00000214   0050A0E1           MOV      R5,R0
    317                wsprintf(elfname,(char*)"4:\\Zbin\\utilities\\mrs_editor.elf");
   \   00000218   A51F84E2           ADD      R1,R4,#+660
   \   0000021C   9DFFFFEA           B        ??Engade_9
    318                ExecuteFile(elfname,NULL,NULL);
    319                FreeWS(elfname);
    320                }
    321                break;
    322              case 2:
    323                {
    324                WSHDR *elfname=AllocWS(256);
   \                     ??Engade_29:
   \   00000220   400FA0E3           MOV      R0,#+256
   \   00000224   250100EF           SWI      +293
   \   00000228   0050A0E1           MOV      R5,R0
    325                wsprintf(elfname,(char*)"4:\\zbin\\utilities\\ext_manager.elf");
   \   0000022C   AE1F84E2           ADD      R1,R4,#+696
   \   00000230   98FFFFEA           B        ??Engade_9
    326                ExecuteFile(elfname,NULL,NULL);
    327                FreeWS(elfname);
    328                }
    329                break;
    330              case 3:
    331                {
    332                WSHDR *elfname=AllocWS(256);
   \                     ??Engade_30:
   \   00000234   400FA0E3           MOV      R0,#+256
   \   00000238   250100EF           SWI      +293
   \   0000023C   0050A0E1           MOV      R5,R0
    333                wsprintf(elfname,(char*)"4:\\Zbin\\utilities\\pandemonium.elf");
   \   00000240   B71F84E2           ADD      R1,R4,#+732
   \   00000244   93FFFFEA           B        ??Engade_9
    334                ExecuteFile(elfname,NULL,NULL);
    335                FreeWS(elfname);
    336                }
    337                break;  
    338              case 4:
    339                {
    340                WSHDR *elfname=AllocWS(256);
   \                     ??Engade_31:
   \   00000248   400FA0E3           MOV      R0,#+256
   \   0000024C   250100EF           SWI      +293
   \   00000250   0050A0E1           MOV      R5,R0
    341                wsprintf(elfname,(char*)"4:\\Zbin\\utilities\\tw6.elf");
   \   00000254   C01F84E2           ADD      R1,R4,#+768
   \   00000258   8EFFFFEA           B        ??Engade_9
    342                ExecuteFile(elfname,NULL,NULL);
    343                FreeWS(elfname);
    344                }
    345                break;  
    346              case 5:
    347                {
    348                WSHDR *elfname=AllocWS(256);
   \                     ??Engade_32:
   \   0000025C   400FA0E3           MOV      R0,#+256
   \   00000260   250100EF           SWI      +293
   \   00000264   0050A0E1           MOV      R5,R0
    349                wsprintf(elfname,(char*)"4:\\viskas kas nav elf\\java\\master\\master.jar");
   \   00000268   C71F84E2           ADD      R1,R4,#+796
   \   0000026C   89FFFFEA           B        ??Engade_9
    350                ExecuteFile(elfname,NULL,NULL);
    351                FreeWS(elfname);
    352                }
    353                break; 
    354              case 6:
    355                {
    356                WSHDR *elfname=AllocWS(256);
   \                     ??Engade_33:
   \   00000270   400FA0E3           MOV      R0,#+256
   \   00000274   250100EF           SWI      +293
   \   00000278   0050A0E1           MOV      R5,R0
    357                wsprintf(elfname,(char*)"4:\\viskas kas nav elf\\java\\soft\\icqmobireg.jar");
   \   0000027C   D31F84E2           ADD      R1,R4,#+844
   \   00000280   84FFFFEA           B        ??Engade_9
    358                ExecuteFile(elfname,NULL,NULL);
    359                FreeWS(elfname);
    360                }
    361                break;
    362              }
    363              break;
    364            case 5:
    365              {
    366                typedef void (*voidfunc)(); 
    367                unsigned int addr=strtoul( (char*)"A06F5839", 0, 16 );
   \                     ??Engade_34:
   \   00000284   1020A0E3           MOV      R2,#+16
   \   00000288   0010A0E3           MOV      R1,#+0
   \   0000028C   DF0F84E2           ADD      R0,R4,#+892
   \   00000290   ........           _BLF     strtoul,??strtoul??rA
    368                voidfunc pp=(voidfunc)addr;
    369                SUBPROC((void*)pp);
   \   00000294   710100EF           SWI      +369
   \   00000298   3080BDE8           POP      {R4,R5,PC}
    370              }
    371              break;
    372            case 6:
    373              switch(sub_pos)
   \                     ??Engade_35:
   \   0000029C   011041E2           SUB      R1,R1,#+1
   \   000002A0   070051E3           CMP      R1,#+7
   \   000002A4   3080BD88           POPHI    {R4,R5,PC}
   \   000002A8   010F8FE2           ADR      R0,??Engade_4
   \   000002AC   0100D0E7           LDRB     R0,[R0, R1]
   \   000002B0   00F18FE0           ADD      PC,PC,R0, LSL #+2
   \                     ??Engade_4:
   \   000002B4   01070B0F           DC8      +1,+7,+11,+15
   \   000002B8   13171B1F           DC8      +19,+23,+27,+31
    374              {
    375              case 1:
    376                {
    377                typedef void (*voidfunc)(); 
    378                unsigned int addr=strtoul( (char*)"A06F5359", 0, 16 );
   \                     ??Engade_36:
   \   000002BC   1020A0E3           MOV      R2,#+16
   \   000002C0   0010A0E3           MOV      R1,#+0
   \   000002C4   E20F84E2           ADD      R0,R4,#+904
   \                     ??Engade_16:
   \   000002C8   ........           _BLF     strtoul,??strtoul??rA
   \   000002CC   710100EF           SWI      +369
   \   000002D0   3080BDE8           POP      {R4,R5,PC}
    379                voidfunc pp=(voidfunc)addr;
    380                SUBPROC((void*)pp);
    381                }
    382                break;
    383              case 2:
    384                {
    385                typedef void (*voidfunc)(); 
    386                unsigned int addr=strtoul( (char*)"A06F5537", 0, 16 );
   \                     ??Engade_37:
   \   000002D4   1020A0E3           MOV      R2,#+16
   \   000002D8   0010A0E3           MOV      R1,#+0
   \   000002DC   E50F84E2           ADD      R0,R4,#+916
   \   000002E0   F8FFFFEA           B        ??Engade_16
    387                voidfunc pp=(voidfunc)addr;
    388                SUBPROC((void*)pp);
    389                }
    390                break;
    391              case 3:
    392                {
    393                typedef void (*voidfunc)(); 
    394                unsigned int addr=strtoul( (char*)"A06F5365", 0, 16 );
   \                     ??Engade_38:
   \   000002E4   1020A0E3           MOV      R2,#+16
   \   000002E8   0010A0E3           MOV      R1,#+0
   \   000002EC   0400A0E1           MOV      R0,R4
   \   000002F0   F4FFFFEA           B        ??Engade_16
    395                voidfunc pp=(voidfunc)addr;
    396                SUBPROC((void*)pp);
    397                }
    398                break;
    399              case 4:
    400                {
    401                typedef void (*voidfunc)(); 
    402                unsigned int addr=strtoul( (char*)"A06F537D", 0, 16 );
   \                     ??Engade_39:
   \   000002F4   1020A0E3           MOV      R2,#+16
   \   000002F8   0010A0E3           MOV      R1,#+0
   \   000002FC   0C0084E2           ADD      R0,R4,#+12
   \   00000300   F0FFFFEA           B        ??Engade_16
    403                voidfunc pp=(voidfunc)addr;
    404                SUBPROC((void*)pp);
    405                }
    406                break;
    407              case 5:
    408                {
    409                typedef void (*voidfunc)(); 
    410                unsigned int addr=strtoul( (char*)"A06F53c5", 0, 16 );
   \                     ??Engade_40:
   \   00000304   1020A0E3           MOV      R2,#+16
   \   00000308   0010A0E3           MOV      R1,#+0
   \   0000030C   180084E2           ADD      R0,R4,#+24
   \   00000310   ECFFFFEA           B        ??Engade_16
    411                voidfunc pp=(voidfunc)addr;
    412                SUBPROC((void*)pp);
    413                }
    414                break;
    415              case 6:
    416                {
    417                typedef void (*voidfunc)(); 
    418                unsigned int addr=strtoul( (char*)"A06F5585", 0, 16 );
   \                     ??Engade_41:
   \   00000314   1020A0E3           MOV      R2,#+16
   \   00000318   0010A0E3           MOV      R1,#+0
   \   0000031C   D40084E2           ADD      R0,R4,#+212
   \   00000320   E8FFFFEA           B        ??Engade_16
    419                voidfunc pp=(voidfunc)addr;
    420                SUBPROC((void*)pp);
    421                }
    422                break;
    423              case 7:
    424                {
    425                typedef void (*voidfunc)(); 
    426                unsigned int addr=strtoul( (char*)"A06F5421", 0, 16 );
   \                     ??Engade_42:
   \   00000324   1020A0E3           MOV      R2,#+16
   \   00000328   0010A0E3           MOV      R1,#+0
   \   0000032C   240084E2           ADD      R0,R4,#+36
   \   00000330   E4FFFFEA           B        ??Engade_16
    427                voidfunc pp=(voidfunc)addr;
    428                SUBPROC((void*)pp);
    429                }
    430                break;
    431              case 8:
    432                {
    433                typedef void (*voidfunc)(); 
    434                unsigned int addr=strtoul( (char*)"A06F5731", 0, 16 );
   \                     ??Engade_43:
   \   00000334   1020A0E3           MOV      R2,#+16
   \   00000338   0010A0E3           MOV      R1,#+0
   \   0000033C   300084E2           ADD      R0,R4,#+48
   \   00000340   E0FFFFEA           B        ??Engade_16
    435                voidfunc pp=(voidfunc)addr;
    436                SUBPROC((void*)pp);
    437                }
    438                break;
    439              }
    440              break;
    441            case 7:
    442              {
    443                typedef void (*voidfunc)(); 
    444                unsigned int addr=strtoul( (char*)"A19F8805", 0, 16 );
   \                     ??Engade_44:
   \   00000344   1020A0E3           MOV      R2,#+16
   \   00000348   0010A0E3           MOV      R1,#+0
   \   0000034C   3C0084E2           ADD      R0,R4,#+60
   \   00000350   DCFFFFEA           B        ??Engade_16
    445                voidfunc pp=(voidfunc)addr;
    446                SUBPROC((void*)pp);
    447              }
    448              break;
    449            case 8:
    450              switch(sub_pos)
   \                     ??Engade_45:
   \   00000354   011041E2           SUB      R1,R1,#+1
   \   00000358   080051E3           CMP      R1,#+8
   \   0000035C   3080BD88           POPHI    {R4,R5,PC}
   \   00000360   010F8FE2           ADR      R0,??Engade_5
   \   00000364   0100D0E7           LDRB     R0,[R0, R1]
   \   00000368   00F18FE0           ADD      PC,PC,R0, LSL #+2
   \                     ??Engade_5:
   \   0000036C   02060A0E           DC8      +2,+6,+10,+14
   \   00000370   12161A1E           DC8      +18,+22,+26,+30
   \   00000374   22000000           DC8      +34,+0,+0,+0
    451              {
    452              case 1:
    453                {
    454                typedef void (*voidfunc)(); 
    455                unsigned int addr=strtoul( (char*)"A06F5B65", 0, 16 );
   \                     ??Engade_46:
   \   00000378   1020A0E3           MOV      R2,#+16
   \   0000037C   0010A0E3           MOV      R1,#+0
   \   00000380   480084E2           ADD      R0,R4,#+72
   \   00000384   CFFFFFEA           B        ??Engade_16
    456                voidfunc pp=(voidfunc)addr;
    457                SUBPROC((void*)pp);
    458                }
    459                break;
    460              case 2:
    461                {
    462                typedef void (*voidfunc)(); 
    463                unsigned int addr=strtoul( (char*)"A06F5D6B", 0, 16 );
   \                     ??Engade_47:
   \   00000388   1020A0E3           MOV      R2,#+16
   \   0000038C   0010A0E3           MOV      R1,#+0
   \   00000390   540084E2           ADD      R0,R4,#+84
   \   00000394   CBFFFFEA           B        ??Engade_16
    464                voidfunc pp=(voidfunc)addr;
    465                SUBPROC((void*)pp);
    466                }
    467                break;
    468              case 3:
    469                {
    470                typedef void (*voidfunc)(); 
    471                unsigned int addr=strtoul( (char*)"A06F5E45", 0, 16 );
   \                     ??Engade_48:
   \   00000398   1020A0E3           MOV      R2,#+16
   \   0000039C   0010A0E3           MOV      R1,#+0
   \   000003A0   600084E2           ADD      R0,R4,#+96
   \   000003A4   C7FFFFEA           B        ??Engade_16
    472                voidfunc pp=(voidfunc)addr;
    473                SUBPROC((void*)pp);
    474                }
    475                break;
    476              case 4:
    477                {
    478                typedef void (*voidfunc)(); 
    479                unsigned int addr=strtoul( (char*)"A06F5FBD", 0, 16 );
   \                     ??Engade_49:
   \   000003A8   1020A0E3           MOV      R2,#+16
   \   000003AC   0010A0E3           MOV      R1,#+0
   \   000003B0   6C0084E2           ADD      R0,R4,#+108
   \   000003B4   C3FFFFEA           B        ??Engade_16
    480                voidfunc pp=(voidfunc)addr;
    481                SUBPROC((void*)pp);
    482                }
    483                break;
    484              case 5:
    485                {
    486                typedef void (*voidfunc)(); 
    487                unsigned int addr=strtoul( (char*)"A06F60F9", 0, 16 );
   \                     ??Engade_50:
   \   000003B8   1020A0E3           MOV      R2,#+16
   \   000003BC   0010A0E3           MOV      R1,#+0
   \   000003C0   780084E2           ADD      R0,R4,#+120
   \   000003C4   BFFFFFEA           B        ??Engade_16
    488                voidfunc pp=(voidfunc)addr;
    489                SUBPROC((void*)pp);
    490                }
    491                break;
    492              case 6:
    493                {
    494                typedef void (*voidfunc)(); 
    495                unsigned int addr=strtoul( (char*)"A06F620F", 0, 16 );
   \                     ??Engade_51:
   \   000003C8   1020A0E3           MOV      R2,#+16
   \   000003CC   0010A0E3           MOV      R1,#+0
   \   000003D0   840084E2           ADD      R0,R4,#+132
   \   000003D4   BBFFFFEA           B        ??Engade_16
    496                voidfunc pp=(voidfunc)addr;
    497                SUBPROC((void*)pp);
    498                }
    499                break;
    500              case 7:
    501                {
    502                typedef void (*voidfunc)(); 
    503                unsigned int addr=strtoul( (char*)"A06F62C7", 0, 16 );
   \                     ??Engade_52:
   \   000003D8   1020A0E3           MOV      R2,#+16
   \   000003DC   0010A0E3           MOV      R1,#+0
   \   000003E0   900084E2           ADD      R0,R4,#+144
   \   000003E4   B7FFFFEA           B        ??Engade_16
    504                voidfunc pp=(voidfunc)addr;
    505                SUBPROC((void*)pp);
    506                }
    507                break;
    508              case 8:
    509                {
    510                typedef void (*voidfunc)(); 
    511                unsigned int addr=strtoul( (char*)"A06F6421", 0, 16 );
   \                     ??Engade_53:
   \   000003E8   1020A0E3           MOV      R2,#+16
   \   000003EC   0010A0E3           MOV      R1,#+0
   \   000003F0   9C0084E2           ADD      R0,R4,#+156
   \   000003F4   B3FFFFEA           B        ??Engade_16
    512                voidfunc pp=(voidfunc)addr;
    513                SUBPROC((void*)pp);
    514                }
    515                break;
    516              case 9:
    517                {
    518                typedef void (*voidfunc)(); 
    519                unsigned int addr=strtoul( (char*)"A06F64FD", 0, 16 );
   \                     ??Engade_54:
   \   000003F8   1020A0E3           MOV      R2,#+16
   \   000003FC   0010A0E3           MOV      R1,#+0
   \   00000400   A80084E2           ADD      R0,R4,#+168
   \   00000404   AFFFFFEA           B        ??Engade_16
    520                voidfunc pp=(voidfunc)addr;
    521                SUBPROC((void*)pp);
    522                }
    523                break;
    524              }
    525              break;
    526            case 9:
    527              {
    528                WSHDR *elfname=AllocWS(256);
   \                     ??Engade_55:
   \   00000408   400FA0E3           MOV      R0,#+256
   \   0000040C   250100EF           SWI      +293
   \   00000410   0050A0E1           MOV      R5,R0
    529                wsprintf(elfname,(char*)"4:\\ZBIN\\utilities\\turnoff.elf");
   \   00000414   B41084E2           ADD      R1,R4,#+180
   \   00000418   240100EF           SWI      +292
    530                ExecuteFile(elfname,NULL,NULL);
   \   0000041C   0020A0E3           MOV      R2,#+0
   \   00000420   0010A0E3           MOV      R1,#+0
   \   00000424   0500A0E1           MOV      R0,R5
   \   00000428   940000EF           SWI      +148
    531                FreeWS(elfname);
   \   0000042C   0500A0E1           MOV      R0,R5
   \   00000430   290100EF           SWI      +297
    532              }
    533              break;
    534            }
    535          }
   \                     ??Engade_56:
   \   00000434   3080BDE8           POP      {R4,R5,PC}       ;; return
   \                     ??Engade_6:
   \   00000438   ........           DC32     `?<Constant "A06F5365">`
    536          

   \                                 In segment CODE, align 4, keep-with-next
    537          int OnKey(MAIN_GUI *data, GUI_MSG *msg) //OnKey
    538          {
   \                     OnKey:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0140A0E1           MOV      R4,R1
    539            DirectRedrawGUI();  
   \   00000008   3F0100EF           SWI      +319
    540            
    541            if (msg->gbsmsg->msg==KEY_DOWN)
   \   0000000C   041094E5           LDR      R1,[R4, #+4]
   \   00000010   9320A0E3           MOV      R2,#+147
   \   00000014   040091E5           LDR      R0,[R1, #+4]
   \   00000018   402F82E3           ORR      R2,R2,#0x100
   \   0000001C   020050E1           CMP      R0,R2
   \   00000020   6A00001A           BNE      ??OnKey_0
    542            {          
    543              switch(msg->gbsmsg->submess)
   \   00000024   ........           LDR      R4,??DataTable6  ;; img2
   \   00000028   081091E5           LDR      R1,[R1, #+8]
   \   0000002C   4C2094E5           LDR      R2,[R4, #+76]
   \   00000030   503094E5           LDR      R3,[R4, #+80]
   \   00000034   48C094E5           LDR      R12,[R4, #+72]
   \   00000038   0100A0E3           MOV      R0,#+1
   \   0000003C   0050A0E3           MOV      R5,#+0
   \   00000040   041051E2           SUBS     R1,R1,#+4
   \   00000044   0600000A           BEQ      ??OnKey_1
   \   00000048   161051E2           SUBS     R1,R1,#+22
   \   0000004C   4200000A           BEQ      ??OnKey_2
   \   00000050   211051E2           SUBS     R1,R1,#+33
   \   00000054   2100000A           BEQ      ??OnKey_3
   \   00000058   011051E2           SUBS     R1,R1,#+1
   \   0000005C   0400000A           BEQ      ??OnKey_4
   \   00000060   2F0000EA           B        ??OnKey_5
    544              {
    545              case RIGHT_SOFT: 
    546                if(sub_on)
   \                     ??OnKey_1:
   \   00000064   00005CE3           CMP      R12,#+0
    547                {
    548                  sub_on=0;
   \   00000068   48508415           STRNE    R5,[R4, #+72]
   \   0000006C   5700001A           BNE      ??OnKey_0
    549                }
    550                else
    551                return(1);
   \   00000070   3080BDE8           POP      {R4,R5,PC}
    552                break;
    553              case DOWN_BUTTON:
    554                {
    555                  if(sub_on)
   \                     ??OnKey_4:
   \   00000074   00005CE3           CMP      R12,#+0
   \   00000078   0D00000A           BEQ      ??OnKey_6
    556                  {
    557                    sub_pos++;
    558                    y2=y2+17;
    559                    if(y2>(sub_y-4+y)) 
   \   0000007C   583094E5           LDR      R3,[R4, #+88]
   \   00000080   011082E2           ADD      R1,R2,#+1
   \   00000084   3C2094E5           LDR      R2,[R4, #+60]
   \   00000088   4C1084E5           STR      R1,[R4, #+76]
   \   0000008C   441094E5           LDR      R1,[R4, #+68]
   \   00000090   033082E0           ADD      R3,R2,R3
   \   00000094   111081E2           ADD      R1,R1,#+17
   \   00000098   441084E5           STR      R1,[R4, #+68]
   \   0000009C   043043E2           SUB      R3,R3,#+4
   \   000000A0   010053E1           CMP      R3,R1
   \   000000A4   490000AA           BGE      ??OnKey_0
    560                    {
    561                      sub_pos=1;
   \   000000A8   4C0084E5           STR      R0,[R4, #+76]
    562                      y2=y+11;
   \   000000AC   0B0082E2           ADD      R0,R2,#+11
   \   000000B0   1A0000EA           B        ??OnKey_7
    563                    }
    564                  }
    565                  else
    566                  {
    567                    main_pos++;
    568                    y=y+17;
   \                     ??OnKey_6:
   \   000000B4   3C2094E5           LDR      R2,[R4, #+60]
   \   000000B8   011083E2           ADD      R1,R3,#+1
   \   000000BC   501084E5           STR      R1,[R4, #+80]
   \   000000C0   111082E2           ADD      R1,R2,#+17
   \   000000C4   3C1084E5           STR      R1,[R4, #+60]
    569                    if(y>175) 
   \   000000C8   B00051E3           CMP      R1,#+176
   \   000000CC   3F0000BA           BLT      ??OnKey_0
    570                    {
    571                      y=27;
   \   000000D0   1B10A0E3           MOV      R1,#+27
   \   000000D4   3C1084E5           STR      R1,[R4, #+60]
    572                      main_pos=1;
   \   000000D8   500084E5           STR      R0,[R4, #+80]
   \   000000DC   100000EA           B        ??OnKey_5
    573                    }
    574                  }
    575                }
    576                  break;
    577               case UP_BUTTON:
    578                 {
    579                    if(sub_on)
   \                     ??OnKey_3:
   \   000000E0   00005CE3           CMP      R12,#+0
   \   000000E4   1000000A           BEQ      ??OnKey_8
    580                    {
    581                      sub_pos--;
    582                      y2=y2-17;
   \   000000E8   441094E5           LDR      R1,[R4, #+68]
   \   000000EC   010042E2           SUB      R0,R2,#+1
    583                      if(y2<y-1) 
   \   000000F0   3C2094E5           LDR      R2,[R4, #+60]
   \   000000F4   4C0084E5           STR      R0,[R4, #+76]
   \   000000F8   110041E2           SUB      R0,R1,#+17
   \   000000FC   440084E5           STR      R0,[R4, #+68]
   \   00000100   011042E2           SUB      R1,R2,#+1
   \   00000104   010050E1           CMP      R0,R1
   \   00000108   300000AA           BGE      ??OnKey_0
    584                      {
    585                        sub_pos=sub_menu_c;
   \   0000010C   540094E5           LDR      R0,[R4, #+84]
   \   00000110   4C0084E5           STR      R0,[R4, #+76]
    586                        y2=y+sub_y-8;
   \   00000114   580094E5           LDR      R0,[R4, #+88]
   \   00000118   020080E0           ADD      R0,R0,R2
   \   0000011C   080040E2           SUB      R0,R0,#+8
   \                     ??OnKey_7:
   \   00000120   440084E5           STR      R0,[R4, #+68]
   \                     ??OnKey_5:
   \   00000124   0000A0E3           MOV      R0,#+0
   \   00000128   3080BDE8           POP      {R4,R5,PC}
    587                      }
    588                    }
    589                    else
    590                    {
    591                      main_pos--;
    592                      y=y-17;
   \                     ??OnKey_8:
   \   0000012C   3C2094E5           LDR      R2,[R4, #+60]
   \   00000130   010043E2           SUB      R0,R3,#+1
   \   00000134   500084E5           STR      R0,[R4, #+80]
   \   00000138   110042E2           SUB      R0,R2,#+17
   \   0000013C   3C0084E5           STR      R0,[R4, #+60]
    593                      if(y<24) 
   \   00000140   180050E3           CMP      R0,#+24
   \   00000144   210000AA           BGE      ??OnKey_0
    594                      {
    595                        y=153+9;
   \   00000148   A200A0E3           MOV      R0,#+162
   \   0000014C   3C0084E5           STR      R0,[R4, #+60]
    596                        main_pos=9;
   \   00000150   0900A0E3           MOV      R0,#+9
   \   00000154   500084E5           STR      R0,[R4, #+80]
   \   00000158   F1FFFFEA           B        ??OnKey_5
    597                      }
    598                    }
    599                  }
    600                  break;        
    601              case ENTER_BUTTON:
    602                {
    603                  if(sub_on)
   \                     ??OnKey_2:
   \   0000015C   00005CE3           CMP      R12,#+0
   \   00000160   0300000A           BEQ      ??OnKey_9
    604                  {
    605                    Engade();
   \   00000164   ........           BL       Engade
    606                    sub_on=0;
   \   00000168   485084E5           STR      R5,[R4, #+72]
    607                    return(1);
   \   0000016C   0100A0E3           MOV      R0,#+1
   \   00000170   3080BDE8           POP      {R4,R5,PC}
    608                  }
    609                  else
    610                  {
    611                    if((main_pos==3)||(main_pos==5)||(main_pos==7)||(main_pos==9))
   \                     ??OnKey_9:
   \   00000174   030053E3           CMP      R3,#+3
   \   00000178   05005313           CMPNE    R3,#+5
   \   0000017C   07005313           CMPNE    R3,#+7
   \   00000180   09005313           CMPNE    R3,#+9
   \   00000184   0200001A           BNE      ??OnKey_10
    612                    {
    613                      Engade();
   \   00000188   ........           BL       Engade
    614                      return(1);
   \   0000018C   0100A0E3           MOV      R0,#+1
   \   00000190   3080BDE8           POP      {R4,R5,PC}
    615                    }
    616                    else
    617                    {
    618                    sub_menu_c=9;
   \                     ??OnKey_10:
   \   00000194   0910A0E3           MOV      R1,#+9
    619                    if(main_pos==6) sub_menu_c=8;
   \   00000198   060053E3           CMP      R3,#+6
   \   0000019C   0810A003           MOVEQ    R1,#+8
   \   000001A0   0200000A           BEQ      ??OnKey_11
    620                    if(main_pos==4) sub_menu_c=6;
   \   000001A4   040053E3           CMP      R3,#+4
    621                    if(main_pos==2) sub_menu_c=6;
   \   000001A8   02005313           CMPNE    R3,#+2
   \   000001AC   0610A003           MOVEQ    R1,#+6
   \                     ??OnKey_11:
   \   000001B0   541084E5           STR      R1,[R4, #+84]
    622                    sub_y=sub_menu_c*17;
   \   000001B4   011281E0           ADD      R1,R1,R1, LSL #+4
   \   000001B8   581084E5           STR      R1,[R4, #+88]
    623                    y2=y+11;
   \   000001BC   3C1094E5           LDR      R1,[R4, #+60]
    624                    sub_on=1;
   \   000001C0   480084E5           STR      R0,[R4, #+72]
   \   000001C4   0B1081E2           ADD      R1,R1,#+11
   \   000001C8   441084E5           STR      R1,[R4, #+68]
    625                    sub_pos=1;
   \   000001CC   4C0084E5           STR      R0,[R4, #+76]
    626                    }
    627                  }
    628                }
    629                break;
    630              }
    631            }
    632            return(0);
   \                     ??OnKey_0:
   \   000001D0   0000A0E3           MOV      R0,#+0
   \   000001D4   3080BDE8           POP      {R4,R5,PC}       ;; return
    633          }
    634          

   \                                 In segment CODE, align 4, keep-with-next
    635          int method8(void){return(0);}
   \                     method8:
   \   00000000   0000A0E3           MOV      R0,#+0
   \   00000004   1EFF2FE1           BX       LR               ;; return
    636          

   \                                 In segment CODE, align 4, keep-with-next
    637          int method9(void){return(0);}
   \                     method9:
   \   00000000   0000A0E3           MOV      R0,#+0
   \   00000004   1EFF2FE1           BX       LR               ;; return
    638          
    639          extern void kill_data(void *p,void (*func_p)(void *));

   \                                 In segment CODE, align 4, keep-with-next
    640          void ElfKiller(void)
    641          {
   \                     ElfKiller:
   \   00000000   00402DE9           PUSH     {LR}
    642            extern void *ELF_BEGIN;
    643            kill_data(&ELF_BEGIN,(void (*)(void *))mfree_adr());
   \   00000004   158000EF           SWI      +32789
   \   00000008   0010A0E1           MOV      R1,R0
   \   0000000C   ........           LDR      R0,??DataTable5  ;; ELF_BEGIN
   \   00000010   0040BDE8           POP      {LR}             ;; Pop
   \   00000014   ........           _BF      kill_data,??kill_data??rA  ;; tailcall
    644          }
    645          

   \                                 In segment DATA_C, align 4, align-sorted
    646          const void * const gui_methods[11]={
    647            (void *)OnRedraw,	//Redraw
    648            (void *)onCreate,	//Create
    649            (void *)onClose,	//Close
    650            (void *)onFocus,	//Focus
    651            (void *)onUnfocus,	//Unfocus
    652            (void *)OnKey,	//OnKey
    653            0,
    654            (void *)kill_data,	//Destroy
    655            (void *)method8,
    656            (void *)method9,
    657            0
    658          };
    659          
    660          const RECT Canvas={0,0,0,0};
   \                     Canvas:
   \   00000000   000000000000       DC16 0, 0, 0, 0
   \              0000        
   \                     gui_methods:
   \   00000008   ............       DC32 OnRedraw, onCreate, onClose, onFocus, onUnfocus, OnKey, 0H
   \              ............
   \              ............
   \              ............
   \              00000000    
   \   00000024   ............       DC32 kill_data, method8, method9, 0H
   \              ............
   \              00000000    
    661          
    662          
    663          #pragma inline
    664          void patch_rect(const RECT*rcc,int x,int y, int x2, int y2)
    665          {
    666            RECT *rc=(RECT *)rcc;
    667            rc->x=x;
    668            rc->y=y;
    669            rc->x2=x2;
    670            rc->y2=y2;
    671          }
    672          

   \                                 In segment CODE, align 4, keep-with-next
    673          void maincsm_oncreate(CSM_RAM *data)
    674          {
   \                     maincsm_oncreate:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
    675            MAIN_GUI *main_gui=malloc(sizeof(MAIN_GUI));
    676            MAIN_CSM*csm=(MAIN_CSM*)data;
    677            zeromem(main_gui,sizeof(MAIN_GUI));
    678            main_gui->gui.canvas=(void *)(&Canvas);
   \   00000004   6C609FE5           LDR      R6,??maincsm_oncreate_0  ;; Canvas
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   4000A0E3           MOV      R0,#+64
   \   00000010   140000EF           SWI      +20
   \   00000014   0050A0E1           MOV      R5,R0
   \   00000018   4010A0E3           MOV      R1,#+64
   \   0000001C   1D0100EF           SWI      +285
   \   00000020   006085E5           STR      R6,[R5, #+0]
    679            main_gui->gui.methods=(void *)gui_methods;
   \   00000024   080086E2           ADD      R0,R6,#+8
   \   00000028   040085E5           STR      R0,[R5, #+4]
    680            main_gui->gui.item_ll.data_mfree=(void (*)(void *))mfree_adr();
   \   0000002C   158000EF           SWI      +32789
   \   00000030   200085E5           STR      R0,[R5, #+32]
    681            patch_rect((RECT*)&Canvas,0,YDISP,ScreenW()-1,ScreenH()-1);
   \   00000034   898100EF           SWI      +33161
   \   00000038   0070A0E1           MOV      R7,R0
   \   0000003C   888100EF           SWI      +33160
   \   00000040   011047E2           SUB      R1,R7,#+1
   \   00000044   010040E2           SUB      R0,R0,#+1
   \   00000048   0020A0E3           MOV      R2,#+0
   \   0000004C   B020C6E1           STRH     R2,[R6, #+0]
   \   00000050   1830A0E3           MOV      R3,#+24
   \   00000054   B230C6E1           STRH     R3,[R6, #+2]
   \   00000058   B400C6E1           STRH     R0,[R6, #+4]
   \   0000005C   B610C6E1           STRH     R1,[R6, #+6]
    682            csm->csm.state=0;
   \   00000060   102084E5           STR      R2,[R4, #+16]
    683            csm->csm.unk1=0;
   \   00000064   142084E5           STR      R2,[R4, #+20]
    684            csm->gui_id=CreateGUI(main_gui);
   \   00000068   0500A0E1           MOV      R0,R5
   \   0000006C   370100EF           SWI      +311
   \   00000070   280084E5           STR      R0,[R4, #+40]
    685          }
   \   00000074   F080BDE8           POP      {R4-R7,PC}       ;; return
   \                     ??maincsm_oncreate_0:
   \   00000078   ........           DC32     Canvas
    686          

   \                                 In segment CODE, align 4, keep-with-next
    687          void maincsm_onclose(CSM_RAM *csm)
    688          {
    689            SUBPROC((void *)ElfKiller);
   \                     maincsm_onclose:
   \   00000000   08009FE5           LDR      R0,??maincsm_onclose_0  ;; ElfKiller
   \   00000004   00402DE9           PUSH     {LR}
   \   00000008   710100EF           SWI      +369
    690          }
   \   0000000C   0080BDE8           POP      {PC}             ;; return
   \                     ??maincsm_onclose_0:
   \   00000010   ........           DC32     ElfKiller
    691          

   \                                 In segment CODE, align 4, keep-with-next
    692          int maincsm_onmessage(CSM_RAM *data, GBS_MSG *msg)
    693          {
    694            MAIN_CSM *csm=(MAIN_CSM*)data;
    695             if ((msg->msg==MSG_GUI_DESTROYED)&&((int)msg->data0==csm->gui_id))
   \                     maincsm_onmessage:
   \   00000000   042091E5           LDR      R2,[R1, #+4]
   \   00000004   0E30A0E3           MOV      R3,#+14
   \   00000008   643C83E3           ORR      R3,R3,#0x6400
   \   0000000C   030052E1           CMP      R2,R3
   \   00000010   0400001A           BNE      ??maincsm_onmessage_0
   \   00000014   0C1091E5           LDR      R1,[R1, #+12]
   \   00000018   282090E5           LDR      R2,[R0, #+40]
   \   0000001C   020051E1           CMP      R1,R2
    696            {
    697              csm->csm.state=-3;
   \   00000020   0210E003           MVNEQ    R1,#+2
   \   00000024   10108005           STREQ    R1,[R0, #+16]
    698            } 
    699            return(1); 
   \                     ??maincsm_onmessage_0:
   \   00000028   0100A0E3           MOV      R0,#+1
   \   0000002C   1EFF2FE1           BX       LR               ;; return
    700          }
    701          
    702          const struct
    703          {
    704            CSM_DESC maincsm;
    705            WSHDR maincsm_name;

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Fox menu">`:
   \   00000000   466F78206D65       DC8 "Fox menu"
   \              6E7500      
   \   00000009   000000             DC8 0, 0, 0
    706          }MAINCSM =
   \                     MAINCSM:
   \   0000000C   ............       DC32 maincsm_onmessage, maincsm_oncreate, 0, 0, 0, 0, maincsm_onclose
   \              ....00000000
   \              000000000000
   \              000000000000
   \              ........    
   \   00000028   2C0000000100       DC32 44, 1, minus11, maincsm_name_body, 55AACCCCH, 3333AA55H, 0
   \              0000........
   \              ........CCCC
   \              AA5555AA3333
   \              00000000    
   \   00000044   8B00               DC16 139
   \   00000046   0000               DC8 0, 0
    707          {
    708            {
    709            maincsm_onmessage,
    710            maincsm_oncreate,
    711          #ifdef NEWSGOLD
    712            0,
    713            0,
    714            0,
    715            0,
    716          #endif
    717            maincsm_onclose,
    718            sizeof(MAIN_CSM),
    719            1,
    720            &minus11
    721            },
    722            {
    723              maincsm_name_body,
    724              NAMECSM_MAGIC1,
    725              NAMECSM_MAGIC2,
    726              0x0,
    727              139
    728            }
    729          };
    730          

   \                                 In segment CODE, align 4, keep-with-next
    731          void UpdateCSMname(void)
    732          {
    733            wsprintf((WSHDR *)(&MAINCSM.maincsm_name),"Fox menu");
   \                     UpdateCSMname:
   \   00000000   10009FE5           LDR      R0,??UpdateCSMname_0  ;; `?<Constant "Fox menu">`
   \   00000004   00402DE9           PUSH     {LR}
   \   00000008   0010A0E1           MOV      R1,R0
   \   0000000C   340080E2           ADD      R0,R0,#+52
   \   00000010   240100EF           SWI      +292
    734          }
   \   00000014   0080BDE8           POP      {PC}             ;; return
   \                     ??UpdateCSMname_0:
   \   00000018   ........           DC32     `?<Constant "Fox menu">`
    735          
    736          

   \                                 In segment CODE, align 4, keep-with-next
    737          void MyIDLECSM_onClose(CSM_RAM *data)
    738          {
   \                     MyIDLECSM_onClose:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    739            extern void seqkill(void *data, void(*next_in_seq)(CSM_RAM *), void *data_to_kill, void *seqkiller);
    740            extern void *ELF_BEGIN;
    741            seqkill(data,old_icsm_onClose,&ELF_BEGIN,SEQKILLER_ADR());
   \   00000008   9C8100EF           SWI      +33180
   \   0000000C   ........           LDR      R2,??DataTable5  ;; ELF_BEGIN
   \   00000010   0030A0E1           MOV      R3,R0
   \   00000014   0C009FE5           LDR      R0,??MyIDLECSM_onClose_0  ;; img2 + 56
   \   00000018   001090E5           LDR      R1,[R0, #+0]
   \   0000001C   0400A0E1           MOV      R0,R4
   \   00000020   1040BDE8           POP      {R4,LR}          ;; Pop
   \   00000024   ........           _BF      seqkill,??seqkill??rA  ;; tailcall
   \                     ??MyIDLECSM_onClose_0:
   \   00000028   ........           DC32     img2 + 56
    742          }
    743          
    744          #pragma inline=forced
    745          int toupper(int c)
    746          {
    747            if ((c>='a')&&(c<='z')) c+='A'-'a';
    748            return(c);
    749          }
    750          #pragma inline
    751          int strcmp_nocase(const char *s1,const char *s2)
    752          {
    753            int i;
    754            int c;
    755            while(!(i=(c=toupper(*s1++))-toupper(*s2++))) if (!c) break;
    756            return(i);
    757          }
    758          

   \                                 In segment CODE, align 4, keep-with-next
    759          int MyIDLECSM_onMessage(CSM_RAM* data, GBS_MSG* msg)
    760          {
    761            int csm_result;
    762            csm_result=old_icsm_onMessage(data,msg);
   \                     MyIDLECSM_onMessage:
   \   00000000   34209FE5           LDR      R2,??MyIDLECSM_onMessage_0  ;; img2 + 52
   \   00000004   10402DE9           PUSH     {R4,LR}
   \   00000008   002092E5           LDR      R2,[R2, #+0]
   \   0000000C   32FF2FE1           BLX      R2
   \   00000010   0040A0E1           MOV      R4,R0
    763            
    764            void *icsm=FindCSMbyID(CSM_root()->idle_id);
   \   00000014   068100EF           SWI      +33030
   \   00000018   040090E5           LDR      R0,[R0, #+4]
   \   0000001C   080100EF           SWI      +264
    765            if ((IsGuiOnTop(((int *)icsm)[DISPLACE_OF_IDLEGUI_ID/4]))&&(!IsScreenSaver()))
   \   00000020   2C0090E5           LDR      R0,[R0, #+44]
   \   00000024   350100EF           SWI      +309
   \   00000028   000050E3           CMP      R0,#+0
   \   0000002C   0000000A           BEQ      ??MyIDLECSM_onMessage_1
   \   00000030   420000EF           SWI      +66
    766            {
    767          
    768            }
    769            return (csm_result);
   \                     ??MyIDLECSM_onMessage_1:
   \   00000034   0400A0E1           MOV      R0,R4
   \   00000038   1080BDE8           POP      {R4,PC}          ;; return
   \                     ??MyIDLECSM_onMessage_0:
   \   0000003C   ........           DC32     img2 + 52
    770          }  
    771          

   \                                 In segment CODE, align 4, keep-with-next
    772          int my_keyhook(int key, int m)
    773          {
   \                     my_keyhook:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   2CD04DE2           SUB      SP,SP,#+44
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
    774            void *icsm=FindCSMbyID(CSM_root()->idle_id);
   \   00000010   068100EF           SWI      +33030
   \   00000014   040090E5           LDR      R0,[R0, #+4]
   \   00000018   080100EF           SWI      +264
    775            if ((IsGuiOnTop(((int *)icsm)[DISPLACE_OF_IDLEGUI_ID/4]))&&IsUnlocked()&&(m==KEY_DOWN)&&(!IsScreenSaver()))
   \   0000001C   2C0090E5           LDR      R0,[R0, #+44]
   \   00000020   350100EF           SWI      +309
   \   00000024   000050E3           CMP      R0,#+0
   \   00000028   1200000A           BEQ      ??my_keyhook_0
   \   0000002C   430000EF           SWI      +67
   \   00000030   000050E3           CMP      R0,#+0
   \   00000034   0F00000A           BEQ      ??my_keyhook_0
   \   00000038   9300A0E3           MOV      R0,#+147
   \   0000003C   400F80E3           ORR      R0,R0,#0x100
   \   00000040   000055E1           CMP      R5,R0
   \   00000044   0A00001A           BNE      ??my_keyhook_1
   \   00000048   420000EF           SWI      +66
   \   0000004C   000050E3           CMP      R0,#+0
    776               if (key==0x01) 
   \   00000050   01005403           CMPEQ    R4,#+1
   \   00000054   0600001A           BNE      ??my_keyhook_1
    777                 {
    778                   LockSched();
   \   00000058   460100EF           SWI      +326
    779                   char dummy[sizeof(MAIN_CSM)];
    780                   UpdateCSMname();
   \   0000005C   ........           BL       UpdateCSMname
    781                   CreateCSM(&MAINCSM.maincsm,dummy,2);
   \   00000060   18009FE5           LDR      R0,??my_keyhook_2  ;; `?<Constant "Fox menu">` + 12
   \   00000064   0220A0E3           MOV      R2,#+2
   \   00000068   0D10A0E1           MOV      R1,SP
   \   0000006C   070100EF           SWI      +263
    782                   UnlockSched();
   \   00000070   470100EF           SWI      +327
    783                 }  
    784            return 0;
   \                     ??my_keyhook_1:
   \   00000074   0000A0E3           MOV      R0,#+0
   \                     ??my_keyhook_0:
   \   00000078   2CD08DE2           ADD      SP,SP,#+44       ;; stack cleaning
   \   0000007C   3080BDE8           POP      {R4,R5,PC}       ;; return
   \                     ??my_keyhook_2:
   \   00000080   ........           DC32     `?<Constant "Fox menu">` + 12
    785          }
    786          

   \                                 In segment CODE, align 4, keep-with-next
    787          int main(void)
    788          {
   \                     main:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
    789            LockSched();
    790            CSM_RAM *icsm=FindCSMbyID(CSM_root()->idle_id);
    791            memcpy(&icsmd,icsm->constr,sizeof(icsmd));
   \   00000004   ........           LDR      R5,??DataTable6  ;; img2
   \   00000008   460100EF           SWI      +326
   \   0000000C   068100EF           SWI      +33030
   \   00000010   040090E5           LDR      R0,[R0, #+4]
   \   00000014   080100EF           SWI      +264
   \   00000018   0040A0E1           MOV      R4,R0
   \   0000001C   081094E5           LDR      R1,[R4, #+8]
   \   00000020   2820A0E3           MOV      R2,#+40
   \   00000024   0C0085E2           ADD      R0,R5,#+12
   \   00000028   1E0100EF           SWI      +286
    792            old_icsm_onMessage=icsmd.onMessage;
   \   0000002C   0C0095E5           LDR      R0,[R5, #+12]
   \   00000030   340085E5           STR      R0,[R5, #+52]
    793            icsmd.onMessage=MyIDLECSM_onMessage;
   \   00000034   38009FE5           LDR      R0,??main_0      ;; MyIDLECSM_onMessage
   \   00000038   0C0085E5           STR      R0,[R5, #+12]
    794            old_icsm_onClose=icsmd.onClose;
   \   0000003C   240095E5           LDR      R0,[R5, #+36]
   \   00000040   380085E5           STR      R0,[R5, #+56]
    795            icsmd.onClose=MyIDLECSM_onClose;  
   \   00000044   2C009FE5           LDR      R0,??main_0+0x4  ;; MyIDLECSM_onClose
   \   00000048   240085E5           STR      R0,[R5, #+36]
    796            icsm->constr=&icsmd;  
   \   0000004C   0C0085E2           ADD      R0,R5,#+12
   \   00000050   080084E5           STR      R0,[R4, #+8]
    797            
    798            AddKeybMsgHook((void *)my_keyhook);
   \   00000054   20009FE5           LDR      R0,??main_0+0x8  ;; my_keyhook
   \   00000058   2B0100EF           SWI      +299
    799          
    800            UnlockSched();
   \   0000005C   470100EF           SWI      +327
    801            sub_pos=1;
   \   00000060   0100A0E3           MOV      R0,#+1
   \   00000064   4C0085E5           STR      R0,[R5, #+76]
    802            main_pos=1;
   \   00000068   500085E5           STR      R0,[R5, #+80]
    803            
    804            return 0;
   \   0000006C   0000A0E3           MOV      R0,#+0
   \   00000070   3080BDE8           POP      {R4,R5,PC}       ;; return
   \                     ??main_0:
   \   00000074   ........           DC32     MyIDLECSM_onMessage
   \   00000078   ........           DC32     MyIDLECSM_onClose
   \   0000007C   ........           DC32     my_keyhook
    805          }

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   ........           DC32     img2

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable5:
   \   00000000   ........           DC32     ELF_BEGIN

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable6:
   \   00000000   ........           DC32     img2

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for img2>`:
   \   00000000   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \                     `?<Initializer for icsmd>`:
   \   0000000C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000001C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000002C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0000        
   \                     `?<Initializer for old_icsm_onMessage>`:
   \   00000034   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for old_icsm_onClose>`:
   \   00000038   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for y>`:
   \   0000003C   1B000000           DC32 27
   \                     `?<Initializer for y_d>`:
   \   00000040   1B000000           DC32 27
   \                     `?<Initializer for y2>`:
   \   00000044   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for sub_on>`:
   \   00000048   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for sub_pos>`:
   \   0000004C   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for main_pos>`:
   \   00000050   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for sub_menu_c>`:
   \   00000054   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for sub_y>`:
   \   00000058   00000000           DC8 0, 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "4:\\\\zbin\\\\my_menu\\\\main_...">`:
   \   00000000   343A5C7A6269       DC8 "4:\\zbin\\my_menu\\main_mn\\main_9.png"
   \              6E5C6D795F6D
   \              656E755C6D61
   \              696E5F6D6E5C
   \              6D61696E5F39
   \              2E706E6700  
   \   00000023   00                 DC8 0
   \   00000024   343A5C7A6269       DC8 "4:\\zbin\\my_menu\\msg_menu\\msg_5.png"
   \              6E5C6D795F6D
   \              656E755C6D73
   \              675F6D656E75
   \              5C6D73675F35
   \              2E706E6700  
   \   00000047   00                 DC8 0
   \   00000048   343A5C7A6269       DC8 "4:\\zbin\\my_menu\\bg.png"
   \              6E5C6D795F6D
   \              656E755C6267
   \              2E706E6700  
   \   0000005F   00                 DC8 0
   \   00000060   343A5C7A6269       DC8 "4:\\zbin\\my_menu\\cursor.png"
   \              6E5C6D795F6D
   \              656E755C6375
   \              72736F722E70
   \              6E6700      
   \   0000007B   00                 DC8 0
   \   0000007C   343A5C7A6269       DC8 "4:\\zbin\\my_menu\\main_mn\\main_1.png"
   \              6E5C6D795F6D
   \              656E755C6D61
   \              696E5F6D6E5C
   \              6D61696E5F31
   \              2E706E6700  
   \   0000009F   00                 DC8 0
   \   000000A0   343A5C7A6269       DC8 "4:\\zbin\\my_menu\\main_mn\\main_2.png"
   \              6E5C6D795F6D
   \              656E755C6D61
   \              696E5F6D6E5C
   \              6D61696E5F32
   \              2E706E6700  
   \   000000C3   00                 DC8 0
   \   000000C4   343A5C7A6269       DC8 "4:\\zbin\\my_menu\\main_mn\\main_3.png"
   \              6E5C6D795F6D
   \              656E755C6D61
   \              696E5F6D6E5C
   \              6D61696E5F33
   \              2E706E6700  
   \   000000E7   00                 DC8 0
   \   000000E8   343A5C7A6269       DC8 "4:\\zbin\\my_menu\\main_mn\\main_4.png"
   \              6E5C6D795F6D
   \              656E755C6D61
   \              696E5F6D6E5C
   \              6D61696E5F34
   \              2E706E6700  
   \   0000010B   00                 DC8 0
   \   0000010C   343A5C7A6269       DC8 "4:\\zbin\\my_menu\\main_mn\\main_5.png"
   \              6E5C6D795F6D
   \              656E755C6D61
   \              696E5F6D6E5C
   \              6D61696E5F35
   \              2E706E6700  
   \   0000012F   00                 DC8 0
   \   00000130   343A5C7A6269       DC8 "4:\\zbin\\my_menu\\main_mn\\main_6.png"
   \              6E5C6D795F6D
   \              656E755C6D61
   \              696E5F6D6E5C
   \              6D61696E5F36
   \              2E706E6700  
   \   00000153   00                 DC8 0
   \   00000154   343A5C7A6269       DC8 "4:\\zbin\\my_menu\\main_mn\\main_7.png"
   \              6E5C6D795F6D
   \              656E755C6D61
   \              696E5F6D6E5C
   \              6D61696E5F37
   \              2E706E6700  
   \   00000177   00                 DC8 0
   \   00000178   343A5C7A6269       DC8 "4:\\zbin\\my_menu\\main_mn\\main_8.png"
   \              6E5C6D795F6D
   \              656E755C6D61
   \              696E5F6D6E5C
   \              6D61696E5F38
   \              2E706E6700  
   \   0000019B   00                 DC8 0
   \   0000019C   343A5C7A6269       DC8 "4:\\zbin\\my_menu\\inet_menu\\inet_1.png"
   \              6E5C6D795F6D
   \              656E755C696E
   \              65745F6D656E
   \              755C696E6574
   \              5F312E706E67
   \              00          
   \   000001C1   000000             DC8 0, 0, 0
   \   000001C4   343A5C7A6269       DC8 "4:\\zbin\\my_menu\\inet_menu\\inet_2.png"
   \              6E5C6D795F6D
   \              656E755C696E
   \              65745F6D656E
   \              755C696E6574
   \              5F322E706E67
   \              00          
   \   000001E9   000000             DC8 0, 0, 0
   \   000001EC   343A5C7A6269       DC8 "4:\\zbin\\my_menu\\inet_menu\\inet_3.png"
   \              6E5C6D795F6D
   \              656E755C696E
   \              65745F6D656E
   \              755C696E6574
   \              5F332E706E67
   \              00          
   \   00000211   000000             DC8 0, 0, 0
   \   00000214   343A5C7A6269       DC8 "4:\\zbin\\my_menu\\inet_menu\\inet_4.png"
   \              6E5C6D795F6D
   \              656E755C696E
   \              65745F6D656E
   \              755C696E6574
   \              5F342E706E67
   \              00          
   \   00000239   000000             DC8 0, 0, 0
   \   0000023C   343A5C7A6269       DC8 "4:\\zbin\\my_menu\\inet_menu\\inet_5.png"
   \              6E5C6D795F6D
   \              656E755C696E
   \              65745F6D656E
   \              755C696E6574
   \              5F352E706E67
   \              00          
   \   00000261   000000             DC8 0, 0, 0
   \   00000264   343A5C7A6269       DC8 "4:\\zbin\\my_menu\\inet_menu\\inet_6.png"
   \              6E5C6D795F6D
   \              656E755C696E
   \              65745F6D656E
   \              755C696E6574
   \              5F362E706E67
   \              00          
   \   00000289   000000             DC8 0, 0, 0
   \   0000028C   343A5C7A6269       DC8 "4:\\zbin\\my_menu\\inet_menu\\inet_7.png"
   \              6E5C6D795F6D
   \              656E755C696E
   \              65745F6D656E
   \              755C696E6574
   \              5F372E706E67
   \              00          
   \   000002B1   000000             DC8 0, 0, 0
   \   000002B4   343A5C7A6269       DC8 "4:\\zbin\\my_menu\\inet_menu\\inet_8.png"
   \              6E5C6D795F6D
   \              656E755C696E
   \              65745F6D656E
   \              755C696E6574
   \              5F382E706E67
   \              00          
   \   000002D9   000000             DC8 0, 0, 0
   \   000002DC   343A5C7A6269       DC8 "4:\\zbin\\my_menu\\inet_menu\\inet_9.png"
   \              6E5C6D795F6D
   \              656E755C696E
   \              65745F6D656E
   \              755C696E6574
   \              5F392E706E67
   \              00          
   \   00000301   000000             DC8 0, 0, 0
   \   00000304   343A5C7A6269       DC8 "4:\\zbin\\my_menu\\soft_menu\\soft_bg.png"
   \              6E5C6D795F6D
   \              656E755C736F
   \              66745F6D656E
   \              755C736F6674
   \              5F62672E706E
   \              6700        
   \   0000032A   0000               DC8 0, 0
   \   0000032C   343A5C7A6269       DC8 "4:\\zbin\\my_menu\\game_menu\\game_1.png"
   \              6E5C6D795F6D
   \              656E755C6761
   \              6D655F6D656E
   \              755C67616D65
   \              5F312E706E67
   \              00          
   \   00000351   000000             DC8 0, 0, 0
   \   00000354   343A5C7A6269       DC8 "4:\\zbin\\my_menu\\game_menu\\game_2.png"
   \              6E5C6D795F6D
   \              656E755C6761
   \              6D655F6D656E
   \              755C67616D65
   \              5F322E706E67
   \              00          
   \   00000379   000000             DC8 0, 0, 0
   \   0000037C   343A5C7A6269       DC8 "4:\\zbin\\my_menu\\game_menu\\game_3.png"
   \              6E5C6D795F6D
   \              656E755C6761
   \              6D655F6D656E
   \              755C67616D65
   \              5F332E706E67
   \              00          
   \   000003A1   000000             DC8 0, 0, 0
   \   000003A4   343A5C7A6269       DC8 "4:\\zbin\\my_menu\\game_menu\\game_4.png"
   \              6E5C6D795F6D
   \              656E755C6761
   \              6D655F6D656E
   \              755C67616D65
   \              5F342E706E67
   \              00          
   \   000003C9   000000             DC8 0, 0, 0
   \   000003CC   343A5C7A6269       DC8 "4:\\zbin\\my_menu\\game_menu\\game_5.png"
   \              6E5C6D795F6D
   \              656E755C6761
   \              6D655F6D656E
   \              755C67616D65
   \              5F352E706E67
   \              00          
   \   000003F1   000000             DC8 0, 0, 0
   \   000003F4   343A5C7A6269       DC8 "4:\\zbin\\my_menu\\game_menu\\game_6.png"
   \              6E5C6D795F6D
   \              656E755C6761
   \              6D655F6D656E
   \              755C67616D65
   \              5F362E706E67
   \              00          
   \   00000419   000000             DC8 0, 0, 0
   \   0000041C   343A5C7A6269       DC8 "4:\\zbin\\my_menu\\soft_menu\\soft_1.png"
   \              6E5C6D795F6D
   \              656E755C736F
   \              66745F6D656E
   \              755C736F6674
   \              5F312E706E67
   \              00          
   \   00000441   000000             DC8 0, 0, 0
   \   00000444   343A5C7A6269       DC8 "4:\\zbin\\my_menu\\soft_menu\\soft_2.png"
   \              6E5C6D795F6D
   \              656E755C736F
   \              66745F6D656E
   \              755C736F6674
   \              5F322E706E67
   \              00          
   \   00000469   000000             DC8 0, 0, 0
   \   0000046C   343A5C7A6269       DC8 "4:\\zbin\\my_menu\\soft_menu\\soft_3.png"
   \              6E5C6D795F6D
   \              656E755C736F
   \              66745F6D656E
   \              755C736F6674
   \              5F332E706E67
   \              00          
   \   00000491   000000             DC8 0, 0, 0
   \   00000494   343A5C7A6269       DC8 "4:\\zbin\\my_menu\\soft_menu\\soft_4.png"
   \              6E5C6D795F6D
   \              656E755C736F
   \              66745F6D656E
   \              755C736F6674
   \              5F342E706E67
   \              00          
   \   000004B9   000000             DC8 0, 0, 0
   \   000004BC   343A5C7A6269       DC8 "4:\\zbin\\my_menu\\soft_menu\\soft_5.png"
   \              6E5C6D795F6D
   \              656E755C736F
   \              66745F6D656E
   \              755C736F6674
   \              5F352E706E67
   \              00          
   \   000004E1   000000             DC8 0, 0, 0
   \   000004E4   343A5C7A6269       DC8 "4:\\zbin\\my_menu\\soft_menu\\soft_6.png"
   \              6E5C6D795F6D
   \              656E755C736F
   \              66745F6D656E
   \              755C736F6674
   \              5F362E706E67
   \              00          
   \   00000509   000000             DC8 0, 0, 0
   \   0000050C   343A5C7A6269       DC8 "4:\\zbin\\my_menu\\msg_menu\\msg_bg.png"
   \              6E5C6D795F6D
   \              656E755C6D73
   \              675F6D656E75
   \              5C6D73675F62
   \              672E706E6700
   \   00000530   343A5C7A6269       DC8 "4:\\zbin\\my_menu\\msg_menu\\msg_1.png"
   \              6E5C6D795F6D
   \              656E755C6D73
   \              675F6D656E75
   \              5C6D73675F31
   \              2E706E6700  
   \   00000553   00                 DC8 0
   \   00000554   343A5C7A6269       DC8 "4:\\zbin\\my_menu\\msg_menu\\msg_2.png"
   \              6E5C6D795F6D
   \              656E755C6D73
   \              675F6D656E75
   \              5C6D73675F32
   \              2E706E6700  
   \   00000577   00                 DC8 0
   \   00000578   343A5C7A6269       DC8 "4:\\zbin\\my_menu\\msg_menu\\msg_3.png"
   \              6E5C6D795F6D
   \              656E755C6D73
   \              675F6D656E75
   \              5C6D73675F33
   \              2E706E6700  
   \   0000059B   00                 DC8 0
   \   0000059C   343A5C7A6269       DC8 "4:\\zbin\\my_menu\\msg_menu\\msg_4.png"
   \              6E5C6D795F6D
   \              656E755C6D73
   \              675F6D656E75
   \              5C6D73675F34
   \              2E706E6700  
   \   000005BF   00                 DC8 0
   \   000005C0   343A5C7A6269       DC8 "4:\\zbin\\my_menu\\msg_menu\\msg_6.png"
   \              6E5C6D795F6D
   \              656E755C6D73
   \              675F6D656E75
   \              5C6D73675F36
   \              2E706E6700  
   \   000005E3   00                 DC8 0
   \   000005E4   343A5C7A6269       DC8 "4:\\zbin\\my_menu\\msg_menu\\msg_7.png"
   \              6E5C6D795F6D
   \              656E755C6D73
   \              675F6D656E75
   \              5C6D73675F37
   \              2E706E6700  
   \   00000607   00                 DC8 0
   \   00000608   343A5C7A6269       DC8 "4:\\zbin\\my_menu\\msg_menu\\msg_8.png"
   \              6E5C6D795F6D
   \              656E755C6D73
   \              675F6D656E75
   \              5C6D73675F38
   \              2E706E6700  
   \   0000062B   00                 DC8 0
   \   0000062C   343A5C7A6269       DC8 "4:\\zbin\\my_menu\\sett_menu\\sett_1.png"
   \              6E5C6D795F6D
   \              656E755C7365
   \              74745F6D656E
   \              755C73657474
   \              5F312E706E67
   \              00          
   \   00000651   000000             DC8 0, 0, 0
   \   00000654   343A5C7A6269       DC8 "4:\\zbin\\my_menu\\sett_menu\\sett_2.png"
   \              6E5C6D795F6D
   \              656E755C7365
   \              74745F6D656E
   \              755C73657474
   \              5F322E706E67
   \              00          
   \   00000679   000000             DC8 0, 0, 0
   \   0000067C   343A5C7A6269       DC8 "4:\\zbin\\my_menu\\sett_menu\\sett_3.png"
   \              6E5C6D795F6D
   \              656E755C7365
   \              74745F6D656E
   \              755C73657474
   \              5F332E706E67
   \              00          
   \   000006A1   000000             DC8 0, 0, 0
   \   000006A4   343A5C7A6269       DC8 "4:\\zbin\\my_menu\\sett_menu\\sett_4.png"
   \              6E5C6D795F6D
   \              656E755C7365
   \              74745F6D656E
   \              755C73657474
   \              5F342E706E67
   \              00          
   \   000006C9   000000             DC8 0, 0, 0
   \   000006CC   343A5C7A6269       DC8 "4:\\zbin\\my_menu\\sett_menu\\sett_5.png"
   \              6E5C6D795F6D
   \              656E755C7365
   \              74745F6D656E
   \              755C73657474
   \              5F352E706E67
   \              00          
   \   000006F1   000000             DC8 0, 0, 0
   \   000006F4   343A5C7A6269       DC8 "4:\\zbin\\my_menu\\sett_menu\\sett_6.png"
   \              6E5C6D795F6D
   \              656E755C7365
   \              74745F6D656E
   \              755C73657474
   \              5F362E706E67
   \              00          
   \   00000719   000000             DC8 0, 0, 0
   \   0000071C   343A5C7A6269       DC8 "4:\\zbin\\my_menu\\sett_menu\\sett_7.png"
   \              6E5C6D795F6D
   \              656E755C7365
   \              74745F6D656E
   \              755C73657474
   \              5F372E706E67
   \              00          
   \   00000741   000000             DC8 0, 0, 0
   \   00000744   343A5C7A6269       DC8 "4:\\zbin\\my_menu\\sett_menu\\sett_8.png"
   \              6E5C6D795F6D
   \              656E755C7365
   \              74745F6D656E
   \              755C73657474
   \              5F382E706E67
   \              00          
   \   00000769   000000             DC8 0, 0, 0
   \   0000076C   343A5C7A6269       DC8 "4:\\zbin\\my_menu\\sett_menu\\sett_9.png"
   \              6E5C6D795F6D
   \              656E755C7365
   \              74745F6D656E
   \              755C73657474
   \              5F392E706E67
   \              00          
   \   00000791   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "A06F5365">`:
   \   00000000   413036463533       DC8 "A06F5365"
   \              363500      
   \   00000009   000000             DC8 0, 0, 0
   \   0000000C   413036463533       DC8 "A06F537D"
   \              374400      
   \   00000015   000000             DC8 0, 0, 0
   \   00000018   413036463533       DC8 "A06F53c5"
   \              633500      
   \   00000021   000000             DC8 0, 0, 0
   \   00000024   413036463534       DC8 "A06F5421"
   \              323100      
   \   0000002D   000000             DC8 0, 0, 0
   \   00000030   413036463537       DC8 "A06F5731"
   \              333100      
   \   00000039   000000             DC8 0, 0, 0
   \   0000003C   413139463838       DC8 "A19F8805"
   \              303500      
   \   00000045   000000             DC8 0, 0, 0
   \   00000048   413036463542       DC8 "A06F5B65"
   \              363500      
   \   00000051   000000             DC8 0, 0, 0
   \   00000054   413036463544       DC8 "A06F5D6B"
   \              364200      
   \   0000005D   000000             DC8 0, 0, 0
   \   00000060   413036463545       DC8 "A06F5E45"
   \              343500      
   \   00000069   000000             DC8 0, 0, 0
   \   0000006C   413036463546       DC8 "A06F5FBD"
   \              424400      
   \   00000075   000000             DC8 0, 0, 0
   \   00000078   413036463630       DC8 "A06F60F9"
   \              463900      
   \   00000081   000000             DC8 0, 0, 0
   \   00000084   413036463632       DC8 "A06F620F"
   \              304600      
   \   0000008D   000000             DC8 0, 0, 0
   \   00000090   413036463632       DC8 "A06F62C7"
   \              433700      
   \   00000099   000000             DC8 0, 0, 0
   \   0000009C   413036463634       DC8 "A06F6421"
   \              323100      
   \   000000A5   000000             DC8 0, 0, 0
   \   000000A8   413036463634       DC8 "A06F64FD"
   \              464400      
   \   000000B1   000000             DC8 0, 0, 0
   \   000000B4   343A5C5A4249       DC8 "4:\\ZBIN\\utilities\\turnoff.elf"
   \              4E5C7574696C
   \              69746965735C
   \              7475726E6F66
   \              662E656C6600
   \   000000D2   0000               DC8 0, 0
   \   000000D4   413036463535       DC8 "A06F5585"
   \              383500      
   \   000000DD   000000             DC8 0, 0, 0
   \   000000E0   343A5C7A6269       DC8 "4:\\zbin\\weather\\weather.elf"
   \              6E5C77656174
   \              6865725C7765
   \              61746865722E
   \              656C6600    
   \   000000FC   343A5C5A6269       DC8 "4:\\Zbin\\NatICQ\\NatICQ.elf"
   \              6E5C4E617449
   \              43515C4E6174
   \              4943512E656C
   \              6600        
   \   00000116   0000               DC8 0, 0
   \   00000118   343A5C5A6269       DC8 "4:\\Zbin\\NatICQ\\NatICQ2.elf"
   \              6E5C4E617449
   \              43515C4E6174
   \              494351322E65
   \              6C6600      
   \   00000133   00                 DC8 0
   \   00000134   343A5C5A6269       DC8 "4:\\Zbin\\siejc\\siejc.elf"
   \              6E5C7369656A
   \              635C7369656A
   \              632E656C6600
   \   0000014C   343A5C7A6269       DC8 "4:\\zbin\\balletmini\\operamini.oms"
   \              6E5C62616C6C
   \              65746D696E69
   \              5C6F70657261
   \              6D696E692E6F
   \              6D7300      
   \   0000016D   000000             DC8 0, 0, 0
   \   00000170   343A5C7A6269       DC8 "4:\\zbin\\emailclient\\mailviewer.elf"
   \              6E5C656D6169
   \              6C636C69656E
   \              745C6D61696C
   \              766965776572
   \              2E656C6600  
   \   00000193   00                 DC8 0
   \   00000194   413036463532       DC8 "A06F52E7"
   \              453700      
   \   0000019D   000000             DC8 0, 0, 0
   \   000001A0   343A5C766973       DC8 "4:\\viskas kas nav elf\\java\\soft\\mig33.jar"
   \              6B6173206B61
   \              73206E617620
   \              656C665C6A61
   \              76615C736F66
   \              745C6D696733
   \              332E6A617200
   \   000001CA   0000               DC8 0, 0
   \   000001CC   343A5C7A6269       DC8 "4:\\zbin\\utilities\\nrss.elf"
   \              6E5C7574696C
   \              69746965735C
   \              6E7273732E65
   \              6C6600      
   \   000001E7   00                 DC8 0
   \   000001E8   343A5C7A6269       DC8 "4:\\zbin\\emul\\tank.nes"
   \              6E5C656D756C
   \              5C74616E6B2E
   \              6E657300    
   \   000001FE   0000               DC8 0, 0
   \   00000200   343A5C7A6269       DC8 "4:\\zbin\\emul\\mario.nes"
   \              6E5C656D756C
   \              5C6D6172696F
   \              2E6E657300  
   \   00000217   00                 DC8 0
   \   00000218   343A5C7A6269       DC8 "4:\\zbin\\emul\\contra.nes"
   \              6E5C656D756C
   \              5C636F6E7472
   \              612E6E657300
   \   00000230   343A5C7A6269       DC8 "4:\\zbin\\emul\\scat.nes"
   \              6E5C656D756C
   \              5C736361742E
   \              6E657300    
   \   00000246   0000               DC8 0, 0
   \   00000248   343A5C7A6269       DC8 "4:\\zbin\\emul\\felix.nes"
   \              6E5C656D756C
   \              5C66656C6978
   \              2E6E657300  
   \   0000025F   00                 DC8 0
   \   00000260   343A5C7A6269       DC8 "4:\\zbin\\emul\\shining_force_2.gg"
   \              6E5C656D756C
   \              5C7368696E69
   \              6E675F666F72
   \              63655F322E67
   \              6700        
   \   00000280   343A5C5A4269       DC8 "4:\\ZBin\\mc\\mc.elf"
   \              6E5C6D635C6D
   \              632E656C6600
   \   00000292   0000               DC8 0, 0
   \   00000294   343A5C5A6269       DC8 "4:\\Zbin\\utilities\\mrs_editor.elf"
   \              6E5C7574696C
   \              69746965735C
   \              6D72735F6564
   \              69746F722E65
   \              6C6600      
   \   000002B5   000000             DC8 0, 0, 0
   \   000002B8   343A5C7A6269       DC8 "4:\\zbin\\utilities\\ext_manager.elf"
   \              6E5C7574696C
   \              69746965735C
   \              6578745F6D61
   \              6E616765722E
   \              656C6600    
   \   000002DA   0000               DC8 0, 0
   \   000002DC   343A5C5A6269       DC8 "4:\\Zbin\\utilities\\pandemonium.elf"
   \              6E5C7574696C
   \              69746965735C
   \              70616E64656D
   \              6F6E69756D2E
   \              656C6600    
   \   000002FE   0000               DC8 0, 0
   \   00000300   343A5C5A6269       DC8 "4:\\Zbin\\utilities\\tw6.elf"
   \              6E5C7574696C
   \              69746965735C
   \              7477362E656C
   \              6600        
   \   0000031A   0000               DC8 0, 0
   \   0000031C   343A5C766973       DC8 "4:\\viskas kas nav elf\\java\\master\\master.jar"
   \              6B6173206B61
   \              73206E617620
   \              656C665C6A61
   \              76615C6D6173
   \              7465725C6D61
   \              737465722E6A
   \              617200      
   \   00000349   000000             DC8 0, 0, 0
   \   0000034C   343A5C766973       DC8 "4:\\viskas kas nav elf\\java\\soft\\icqmobireg.jar"
   \              6B6173206B61
   \              73206E617620
   \              656C665C6A61
   \              76615C736F66
   \              745C6963716D
   \              6F6269726567
   \              2E6A617200  
   \   0000037B   00                 DC8 0
   \   0000037C   413036463538       DC8 "A06F5839"
   \              333900      
   \   00000385   000000             DC8 0, 0, 0
   \   00000388   413036463533       DC8 "A06F5359"
   \              353900      
   \   00000391   000000             DC8 0, 0, 0
   \   00000394   413036463535       DC8 "A06F5537"
   \              333700      
   \   0000039D   000000             DC8 0, 0, 0

   Maximum stack usage in bytes:

     Function            CSTACK
     --------            ------
     DrwImg                 64
     ElfKiller               4
     Engade                 12
     MyIDLECSM_onClose       8
     MyIDLECSM_onMessage     8
     OnKey                  12
     OnRedraw               28
     UpdateCSMname           4
     main                   12
     maincsm_onclose         4
     maincsm_oncreate       20
     maincsm_onmessage       0
     method8                 0
     method9                 0
     my_keyhook             56
     onClose                 0
     onCreate                0
     onFocus                36
     onUnfocus              12


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     maincsm_name_body               280
     minus11                           4
     subbed                            4
     DrwImg                           92
     img2                             92
     OnRedraw                       1416
     onCreate                         12
     onClose                          12
     onFocus                         220
     onUnfocus                        52
     Engade                         1084
     OnKey                           472
     method8                           8
     method9                           8
     ElfKiller                        24
     Canvas                           52
     maincsm_oncreate                124
     maincsm_onclose                  20
     maincsm_onmessage                48
     ?<Constant "Fox menu">           72
     UpdateCSMname                    28
     MyIDLECSM_onClose                44
     MyIDLECSM_onMessage              64
     my_keyhook                      132
     main                            128
     ??DataTable1                      4
     ??DataTable5                      4
     ??DataTable6                      4
     ?<Initializer for img2>          92
     ?<Constant "4:\\zbin\\my_menu\\main_...">
                                    1940
     ?<Constant "A06F5365">          928
      Others                         136

 
 4 112 bytes in segment CODE
 2 996 bytes in segment DATA_C
    92 bytes in segment DATA_I
    92 bytes in segment DATA_ID
   284 bytes in segment DATA_Z
    24 bytes in segment INITTAB
 
 4 000 bytes of CODE  memory (+ 136 bytes shared)
 3 088 bytes of CONST memory
   376 bytes of DATA  memory

Errors: none
Warnings: none
