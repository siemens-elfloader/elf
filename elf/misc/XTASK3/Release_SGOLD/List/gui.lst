##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.41A/W32 EVALUATION    14/Sep/2007  19:11:07 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  C:\Documents and Settings\User\Рабочий               #
#                       стол\XTASK3\gui.c                                    #
#    Command line    =  "C:\Documents and Settings\User\Рабочий              #
#                       стол\XTASK3\gui.c" -lC "C:\Documents and             #
#                       Settings\User\Рабочий стол\XTASK3\Release_SGOLD\List #
#                       \" -o "C:\Documents and Settings\User\Рабочий        #
#                       стол\XTASK3\Release_SGOLD\Obj\" -s9 --no_unroll      #
#                       --no_clustering --cpu_mode arm --endian little       #
#                       --cpu ARM926EJ-S --stack_align 4 --interwork -e      #
#                       --fpu None -I "D:\Pasha\ARM_Embedded_Workbench\Embed #
#                       ded Workbench 4.0 Evaluation\ARM\INC\"               #
#                       --inline_threshold=2                                 #
#    List file       =  C:\Documents and Settings\User\Рабочий               #
#                       стол\XTASK3\Release_SGOLD\List\gui.lst               #
#    Object file     =  C:\Documents and Settings\User\Рабочий               #
#                       стол\XTASK3\Release_SGOLD\Obj\gui.r79                #
#                                                                            #
#                                                                            #
##############################################################################

C:\Documents and Settings\User\Рабочий стол\XTASK3\gui.c
      1          #include "..\inc\swilib.h"
      2          #include "conf_loader.h"
      3          #include "rect_patcher.h"
      4          #include "swaper.h"
      5          
      6          extern void kill_data(void *p, void (*func_p)(void *));
      7          

   \                                 In segment DATA_Z, align 4, align-sorted
      8          char mmenu_hdr_txt[32];
   \                     mmenu_hdr_txt:
   \   00000000                      DS8 32
      9          

   \                                 In segment DATA_Z, align 4, align-sorted
     10          int show_daemons;
   \                     show_daemons:
   \   00000000                      DS8 4
     11          //extern int mode;
     12          extern CSM_RAM *under_idle;
     13          
     14          extern const char BM1NAME[32];
     15          extern const char BM1FILE[128];
     16          extern const char BM2NAME[32];
     17          extern const char BM2FILE[128];
     18          extern const char BM3NAME[32];
     19          extern const char BM3FILE[128];
     20          extern const char BM4NAME[32];
     21          extern const char BM4FILE[128];
     22          extern const char BM5NAME[32];
     23          extern const char BM5FILE[128];
     24          extern const char BM6NAME[32];
     25          extern const char BM6FILE[128];
     26          extern const char BM7NAME[32];
     27          extern const char BM7FILE[128];
     28          extern const char BM8NAME[32];
     29          extern const char BM8FILE[128];
     30          extern const char BM9NAME[32];
     31          extern const char BM9FILE[128];
     32          
     33          const CSM_DESC maincsm;
     34          
     35          typedef struct
     36          {
     37            CSM_RAM csm;
     38            int gui_id;
     39          //  int show_csm;
     40          //  int do_idle;
     41          }MAIN_CSM;
     42          

   \                                 In segment DATA_Z, align 4, align-sorted
     43          int my_csm_id;
   \                     my_csm_id:
   \   00000000                      DS8 4
     44          
     45          #pragma inline=forced
     46          int toupper(int c)
     47          {
     48            if ((c>='a')&&(c<='z')) c+='A'-'a';
     49            return(c);
     50          }
     51          

   \                                 In segment CODE, align 4, keep-with-next
     52          int strncmp_nocase(const char *s1,const char *s2,unsigned int n)
     53          {
   \                     strncmp_nocase:
   \   00000000   10002DE9           PUSH     {R4}
     54            int i;
     55            int c;
     56            while(!(i=(c=toupper(*s1++))-toupper(*s2++))&&(--n)) if (!c) break;
   \                     ??strncmp_nocase_0:
   \   00000004   0030D0E5           LDRB     R3,[R0, #+0]
   \   00000008   610053E3           CMP      R3,#+97
   \   0000000C   010000BA           BLT      ??strncmp_nocase_1
   \   00000010   7B0053E3           CMP      R3,#+123
   \   00000014   203043B2           SUBLT    R3,R3,#+32
   \                     ??strncmp_nocase_1:
   \   00000018   0040D1E5           LDRB     R4,[R1, #+0]
   \   0000001C   010080E2           ADD      R0,R0,#+1
   \   00000020   03C0A0E1           MOV      R12,R3
   \   00000024   610054E3           CMP      R4,#+97
   \   00000028   010000BA           BLT      ??strncmp_nocase_2
   \   0000002C   7B0054E3           CMP      R4,#+123
   \   00000030   204044B2           SUBLT    R4,R4,#+32
   \                     ??strncmp_nocase_2:
   \   00000034   011081E2           ADD      R1,R1,#+1
   \   00000038   043053E0           SUBS     R3,R3,R4
   \   0000003C   0200001A           BNE      ??strncmp_nocase_3
   \   00000040   012052E2           SUBS     R2,R2,#+1
   \   00000044   00005C13           CMPNE    R12,#+0
   \   00000048   EDFFFF1A           BNE      ??strncmp_nocase_0
     57            return(i);
   \                     ??strncmp_nocase_3:
   \   0000004C   1000BDE8           POP      {R4}
   \   00000050   0300A0E1           MOV      R0,R3
   \   00000054   1EFF2FE1           BX       LR               ;; return
     58          }
     59          
     60          typedef struct
     61          {
     62            void *next;
     63            WSHDR *name;
     64            void *p;
     65            int is_daemon;
     66          } NAMELIST;
     67          

   \                                 In segment DATA_Z, align 4, align-sorted
     68          NAMELIST * volatile nltop;
   \                     nltop:
   \   00000000                      DS8 4
     69          

   \                                 In segment DATA_Z, align 4, align-sorted
     70          char csm_text[32768];
   \                     csm_text:
   \   00000000                      DS8 32768
     71          

   \                                 In segment DATA_C, align 1, align-sorted
     72          const char percent_t[]="%t";
   \                     percent_t:
   \   00000000   257400             DC8 "%t"
     73          

   \                                 In segment CODE, align 4, keep-with-next
     74          void ClearNL(void)
     75          {
   \                     ClearNL:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
     76            LockSched();
   \   00000004   460100EF           SWI      +326
     77            NAMELIST *nl=nltop;
   \   00000008   ........           LDR      R0,??DataTable7  ;; nltop
     78            nltop=0;
   \   0000000C   0010A0E3           MOV      R1,#+0
   \   00000010   004090E5           LDR      R4,[R0, #+0]
   \   00000014   001080E5           STR      R1,[R0, #+0]
     79            UnlockSched();
   \   00000018   470100EF           SWI      +327
   \   0000001C   000054E3           CMP      R4,#+0
   \   00000020   3080BD08           POPEQ    {R4,R5,PC}
     80            while(nl)
     81            {
     82              NAMELIST *p=nl;
     83              FreeWS(nl->name);
   \                     ??ClearNL_0:
   \   00000024   040094E5           LDR      R0,[R4, #+4]
   \   00000028   0450A0E1           MOV      R5,R4
   \   0000002C   290100EF           SWI      +297
     84              nl=p->next;
   \   00000030   004095E5           LDR      R4,[R5, #+0]
     85              mfree(p);
   \   00000034   0500A0E1           MOV      R0,R5
   \   00000038   150000EF           SWI      +21
     86            }
   \   0000003C   000054E3           CMP      R4,#+0
   \   00000040   F7FFFF1A           BNE      ??ClearNL_0
     87          }
   \   00000044   3080BDE8           POP      {R4,R5,PC}       ;; return
     88          

   \                                 In segment CODE, align 4, keep-with-next
     89          void AddNL(WSHDR *ws, int is_daemon)
     90          {
   \                     AddNL:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
     91            NAMELIST *nnl=malloc(sizeof(NAMELIST));
   \   0000000C   1000A0E3           MOV      R0,#+16
   \   00000010   140000EF           SWI      +20
   \   00000014   0060A0E1           MOV      R6,R0
     92            nnl->name=ws;
   \   00000018   044086E5           STR      R4,[R6, #+4]
     93            nnl->next=0;
   \   0000001C   0000A0E3           MOV      R0,#+0
   \   00000020   000086E5           STR      R0,[R6, #+0]
     94            nnl->is_daemon=is_daemon;
   \   00000024   0C5086E5           STR      R5,[R6, #+12]
     95            LockSched();
   \   00000028   460100EF           SWI      +326
     96            if (!nltop)
   \   0000002C   ........           LDR      R0,??DataTable7  ;; nltop
   \   00000030   001090E5           LDR      R1,[R0, #+0]
   \   00000034   000051E3           CMP      R1,#+0
     97            {
     98              nltop=nnl;
     99            }
    100            else
    101            {
    102              nnl->next=nltop;
   \   00000038   00109015           LDRNE    R1,[R0, #+0]
   \   0000003C   00108615           STRNE    R1,[R6, #+0]
    103              nltop=nnl;
   \   00000040   006080E5           STR      R6,[R0, #+0]
    104            }
    105            UnlockSched();
   \   00000044   470100EF           SWI      +327
    106          }
   \   00000048   7080BDE8           POP      {R4-R6,PC}       ;; return
    107          

   \                                 In segment CODE, align 4, keep-with-next
    108          char *find_name(CSM_RAM *csm)
    109          {
    110            char s[40];
    111            char *p;
    112            static char u[40];
    113          
    114            CSM_DESC *desc=csm->constr;
    115          
    116            sprintf(s,"%08X ",desc);
   \                     find_name:
   \   00000000   4C109FE5           LDR      R1,??find_name_0  ;; `?<Constant "%08X ">`
   \   00000004   30402DE9           PUSH     {R4,R5,LR}
   \   00000008   28D04DE2           SUB      SP,SP,#+40
   \   0000000C   084090E5           LDR      R4,[R0, #+8]
   \   00000010   0D00A0E1           MOV      R0,SP
   \   00000014   0420A0E1           MOV      R2,R4
   \   00000018   160000EF           SWI      +22
    117            p=strstr(csm_text,s);
   \   0000001C   ........           LDR      R0,??DataTable11  ;; csm_text
   \   00000020   0D10A0E1           MOV      R1,SP
   \   00000024   180100EF           SWI      +280
    118            if (p)
   \   00000028   000050E3           CMP      R0,#+0
    119            {
    120              return(p+9);
   \   0000002C   09008012           ADDNE    R0,R0,#+9
   \   00000030   0500001A           BNE      ??find_name_1
    121            }
    122            else
    123            {
    124              sprintf(u,"Unknown %08X!",desc);
   \   00000034   1C509FE5           LDR      R5,??find_name_0+0x4  ;; ??u
   \   00000038   1C109FE5           LDR      R1,??find_name_0+0x8  ;; `?<Constant "Unknown %08X!">`
   \   0000003C   0420A0E1           MOV      R2,R4
   \   00000040   0500A0E1           MOV      R0,R5
   \   00000044   160000EF           SWI      +22
    125              return(u);
   \   00000048   0500A0E1           MOV      R0,R5
   \                     ??find_name_1:
   \   0000004C   28D08DE2           ADD      SP,SP,#+40       ;; stack cleaning
   \   00000050   3080BDE8           POP      {R4,R5,PC}       ;; return
   \                     ??find_name_0:
   \   00000054   ........           DC32     `?<Constant "%08X ">`
   \   00000058   ........           DC32     ??u
   \   0000005C   ........           DC32     `?<Constant "Unknown %08X!">`
    126            }
    127          }

   \                                 In segment DATA_Z, align 4, align-sorted
   \                     ??u:
   \   00000000                      DS8 40
    128          

   \                                 In segment CODE, align 4, keep-with-next
    129          int GetNumberOfDialogs(void)
    130          {
   \                     GetNumberOfDialogs:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
    131            int count=0;
    132            int c;
    133            int i;
    134            CSM_RAM *icsm;
    135            WSHDR *ws;
    136            char ss[64];
    137          
    138            void *ircsm=FindCSMbyID(CSM_root()->idle_id);
    139            ClearNL();
    140          
    141            //Find new style daemons
    142            if (show_daemons)
   \   00000004   ........           LDR      R5,??DataTable7  ;; nltop
   \   00000008   5C629FE5           LDR      R6,??GetNumberOfDialogs_0  ;; 0x55aacccc
   \   0000000C   44D04DE2           SUB      SP,SP,#+68
   \   00000010   068100EF           SWI      +33030
   \   00000014   040090E5           LDR      R0,[R0, #+4]
   \   00000018   0040A0E3           MOV      R4,#+0
   \   0000001C   080100EF           SWI      +264
   \   00000020   00008DE5           STR      R0,[SP, #+0]
   \   00000024   ........           BL       ClearNL
   \   00000028   ........           LDR      R0,??DataTable10  ;; show_daemons
   \   0000002C   000090E5           LDR      R0,[R0, #+0]
   \   00000030   000050E3           CMP      R0,#+0
   \   00000034   2000000A           BEQ      ??GetNumberOfDialogs_1
    143            {
    144              icsm=((CSM_RAM *)(CSM_root()->csm_q->csm.first))->next; //пїЅпїЅпїЅпїЅпїЅпїЅ пїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅ CSM пїЅпїЅпїЅпїЅпїЅпїЅпїЅ
   \   00000038   068100EF           SWI      +33030
   \   0000003C   080090E5           LDR      R0,[R0, #+8]
   \   00000040   080090E5           LDR      R0,[R0, #+8]
   \   00000044   008090E5           LDR      R8,[R0, #+0]
   \   00000048   080098E5           LDR      R0,[R8, #+8]
   \   0000004C   A00DA0E1           LSR      R0,R0,#+27
   \   00000050   150050E3           CMP      R0,#+21
   \   00000054   1800001A           BNE      ??GetNumberOfDialogs_1
    145              while(((unsigned int)(icsm->constr)>>27)==0x15)
    146              {
    147                WSHDR *tws=(WSHDR *)(((char *)icsm->constr)+sizeof(CSM_DESC));
   \                     ??GetNumberOfDialogs_2:
   \   00000058   080098E5           LDR      R0,[R8, #+8]
   \   0000005C   189080E2           ADD      R9,R0,#+24
    148                if((tws->ws_malloc==NAMECSM_MAGIC1)&&(tws->ws_mfree==NAMECSM_MAGIC2))
   \   00000060   040099E5           LDR      R0,[R9, #+4]
   \   00000064   060050E1           CMP      R0,R6
   \   00000068   0E00001A           BNE      ??GetNumberOfDialogs_3
   \   0000006C   080099E5           LDR      R0,[R9, #+8]
   \   00000070   F8119FE5           LDR      R1,??GetNumberOfDialogs_0+0x4  ;; 0x3333aa55
   \   00000074   010050E1           CMP      R0,R1
   \   00000078   0A00001A           BNE      ??GetNumberOfDialogs_3
    149                {
    150                  ws=AllocWS(64);
   \   0000007C   4000A0E3           MOV      R0,#+64
   \   00000080   250100EF           SWI      +293
   \   00000084   0070A0E1           MOV      R7,R0
    151                  wstrcpy(ws,tws);
   \   00000088   0910A0E1           MOV      R1,R9
   \   0000008C   1F0100EF           SWI      +287
    152                  AddNL(ws,1);
   \   00000090   0110A0E3           MOV      R1,#+1
   \   00000094   0700A0E1           MOV      R0,R7
   \   00000098   ........           BL       AddNL
    153                  nltop->p=icsm;
   \   0000009C   000095E5           LDR      R0,[R5, #+0]
    154                  count++;
   \   000000A0   014084E2           ADD      R4,R4,#+1
   \   000000A4   088080E5           STR      R8,[R0, #+8]
    155                }
    156                icsm=icsm->next;
   \                     ??GetNumberOfDialogs_3:
   \   000000A8   008098E5           LDR      R8,[R8, #+0]
    157              }
   \   000000AC   080098E5           LDR      R0,[R8, #+8]
   \   000000B0   A00DA0E1           LSR      R0,R0,#+27
   \   000000B4   150050E3           CMP      R0,#+21
   \   000000B8   E6FFFF0A           BEQ      ??GetNumberOfDialogs_2
    158            }
    159            icsm=under_idle->next; //пїЅпїЅпїЅпїЅпїЅпїЅ пїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅ
   \                     ??GetNumberOfDialogs_1:
   \   000000BC   B0019FE5           LDR      R0,??GetNumberOfDialogs_0+0x8  ;; under_idle
   \   000000C0   000090E5           LDR      R0,[R0, #+0]
   \   000000C4   008090E5           LDR      R8,[R0, #+0]
    160            do
    161            {
    162              if (icsm==ircsm)
   \                     ??GetNumberOfDialogs_4:
   \   000000C8   00009DE5           LDR      R0,[SP, #+0]
   \   000000CC   019084E2           ADD      R9,R4,#+1
   \   000000D0   000058E1           CMP      R8,R0
   \   000000D4   0500001A           BNE      ??GetNumberOfDialogs_5
    163              {
    164                ws=AllocWS(40);
   \   000000D8   2800A0E3           MOV      R0,#+40
   \   000000DC   250100EF           SWI      +293
    165                wsprintf(ws,"IDLE Screen");
   \   000000E0   90119FE5           LDR      R1,??GetNumberOfDialogs_0+0xC  ;; `?<Constant "IDLE Screen">`
   \   000000E4   0070A0E1           MOV      R7,R0
   \                     ??GetNumberOfDialogs_6:
   \   000000E8   240100EF           SWI      +292
    166                AddNL(ws,0);
   \   000000EC   4E0000EA           B        ??GetNumberOfDialogs_7
    167                nltop->p=icsm;
    168                count++;
    169              }
    170              else
    171              {
    172                if (icsm->constr!=&maincsm)
   \                     ??GetNumberOfDialogs_5:
   \   000000F0   080098E5           LDR      R0,[R8, #+8]
   \   000000F4   ........           LDR      R1,??DataTable14  ;; maincsm
   \   000000F8   010050E1           CMP      R0,R1
   \   000000FC   5000000A           BEQ      ??GetNumberOfDialogs_8
    173                {
    174          	WSHDR *tws=(WSHDR *)(((char *)icsm->constr)+sizeof(CSM_DESC));
   \   00000100   18A080E2           ADD      R10,R0,#+24
    175          	char *s;
    176          	if((tws->ws_malloc==NAMECSM_MAGIC1)&&(tws->ws_mfree==NAMECSM_MAGIC2))
   \   00000104   04009AE5           LDR      R0,[R10, #+4]
   \   00000108   060050E1           CMP      R0,R6
   \   0000010C   0900001A           BNE      ??GetNumberOfDialogs_9
   \   00000110   08009AE5           LDR      R0,[R10, #+8]
   \   00000114   54119FE5           LDR      R1,??GetNumberOfDialogs_0+0x4  ;; 0x3333aa55
   \   00000118   010050E1           CMP      R0,R1
   \   0000011C   0500001A           BNE      ??GetNumberOfDialogs_9
    177          	{
    178          	  ws=AllocWS(64);
   \   00000120   4000A0E3           MOV      R0,#+64
   \   00000124   250100EF           SWI      +293
   \   00000128   0070A0E1           MOV      R7,R0
    179          	  wstrcpy(ws,tws);
   \   0000012C   0A10A0E1           MOV      R1,R10
   \   00000130   1F0100EF           SWI      +287
    180          	  AddNL(ws,0);
   \   00000134   3C0000EA           B        ??GetNumberOfDialogs_7
    181          	  nltop->p=icsm;
    182          	  count++;
    183          	}
    184          	else
    185          	{
    186          	  s=find_name(icsm);
    187          #ifdef NEWSGOLD
    188          	  if (!strncmp_nocase(s,"Java",4))
    189          	  {
    190          	    typedef struct
    191          	    {
    192          	      CSM_RAM csm;
    193          	      int unk1;
    194          	      int bearer;
    195          	      int gui_id;
    196          	      int unk2;
    197          	      int param_R1;
    198          	      int param_ZERO;
    199          	    }JAVAINTERFACE_CSM;
    200          	    int i=((JAVAINTERFACE_CSM *)icsm)->bearer;
    201          	    int j=((JAVAINTERFACE_CSM *)icsm)->param_R1;
    202          	    if (i==2) continue;
    203          	    ws=AllocWS(64);
    204          	    switch(i)
    205          	    {
    206          	    case 1:
    207          	      wsprintf(ws,"Browser",j);
    208          	      break;
    209          	    case 2:
    210          	      wsprintf(ws,"Jam %d",j);
    211          	      break;
    212          	    case 3:
    213          	      switch(j)
    214          	      {
    215          	      case 2:
    216          		wsprintf(ws,"Phone Java");
    217          		break;
    218          	      case 3:
    219          		wsprintf(ws,"User Java");
    220          		break;
    221          	      default:
    222          		wsprintf(ws,"Unknown Java (%d)",j);
    223          		break;
    224          	      }
    225          	      break;
    226          	    default:
    227          	      wsprintf(ws,"Unknown %d(%d) bearer",i,j);
    228          	      break;
    229          	    }
    230          	    goto L_ADD;
    231          	  }
    232          #else
    233                    if (!strncmp_nocase(s,"Java",4))
   \                     ??GetNumberOfDialogs_9:
   \   00000138   3CA19FE5           LDR      R10,??GetNumberOfDialogs_0+0x10  ;; `?<Constant "Java">`
   \   0000013C   0800A0E1           MOV      R0,R8
   \   00000140   ........           BL       find_name
   \   00000144   00B0A0E1           MOV      R11,R0
   \   00000148   0420A0E3           MOV      R2,#+4
   \   0000014C   0A10A0E1           MOV      R1,R10
   \   00000150   ........           BL       strncmp_nocase
   \   00000154   000050E3           CMP      R0,#+0
   \   00000158   1A00001A           BNE      ??GetNumberOfDialogs_10
    234          	  {
    235          	    typedef struct
    236          	    {
    237          	      CSM_RAM csm;
    238          	      int bearer;
    239          	      int gui_id;
    240          	      int gui_id2;
    241          	    }JAVAINTERFACE_CSM;
    242          	    int i=((JAVAINTERFACE_CSM *)icsm)->bearer;
   \   0000015C   284098E5           LDR      R4,[R8, #+40]
    243          	    ws=AllocWS(64);
   \   00000160   4000A0E3           MOV      R0,#+64
   \   00000164   250100EF           SWI      +293
   \   00000168   0070A0E1           MOV      R7,R0
    244          	    switch(i)
   \   0000016C   010054E2           SUBS     R0,R4,#+1
   \   00000170   0600000A           BEQ      ??GetNumberOfDialogs_11
   \   00000174   0E0050E2           SUBS     R0,R0,#+14
   \   00000178   0700000A           BEQ      ??GetNumberOfDialogs_12
   \   0000017C   020050E2           SUBS     R0,R0,#+2
   \   00000180   0700000A           BEQ      ??GetNumberOfDialogs_13
   \   00000184   010050E2           SUBS     R0,R0,#+1
   \   00000188   0900000A           BEQ      ??GetNumberOfDialogs_14
   \   0000018C   0A0000EA           B        ??GetNumberOfDialogs_15
    245          	    {
    246          	    case 1:
    247          	      wsprintf(ws,"Browser");
   \                     ??GetNumberOfDialogs_11:
   \   00000190   E8109FE5           LDR      R1,??GetNumberOfDialogs_0+0x14  ;; `?<Constant "Browser">`
   \                     ??GetNumberOfDialogs_16:
   \   00000194   0700A0E1           MOV      R0,R7
   \   00000198   D2FFFFEA           B        ??GetNumberOfDialogs_6
    248          	      break;
    249          	    case 0xF:
    250                        wsprintf(ws,"User Java");
   \                     ??GetNumberOfDialogs_12:
   \   0000019C   E0109FE5           LDR      R1,??GetNumberOfDialogs_0+0x18  ;; `?<Constant "User Java">`
   \   000001A0   FBFFFFEA           B        ??GetNumberOfDialogs_16
    251          	      break;
    252                      case 0x11:
    253          #ifdef X75
    254                        wsprintf(ws,"Java: %t",GetLastJavaApplication());
    255          #else
    256                        wsprintf(ws,"Java");
   \                     ??GetNumberOfDialogs_13:
   \   000001A4   0A10A0E1           MOV      R1,R10
   \   000001A8   0700A0E1           MOV      R0,R7
   \   000001AC   240100EF           SWI      +292
   \   000001B0   1D0000EA           B        ??GetNumberOfDialogs_7
    257          #endif
    258          	      break; 
    259                      case 18:
    260                        wsprintf(ws,"E-mail client");
   \                     ??GetNumberOfDialogs_14:
   \   000001B4   CC109FE5           LDR      R1,??GetNumberOfDialogs_0+0x1C  ;; `?<Constant "E-mail client">`
   \   000001B8   F5FFFFEA           B        ??GetNumberOfDialogs_16
    261          	      break; 
    262                      default:
    263                        wsprintf(ws,"Unknown %d bearer",i);
   \                     ??GetNumberOfDialogs_15:
   \   000001BC   C8109FE5           LDR      R1,??GetNumberOfDialogs_0+0x20  ;; `?<Constant "Unknown %d bearer">`
   \   000001C0   0420A0E1           MOV      R2,R4
   \   000001C4   160000EA           B        ??GetNumberOfDialogs_17
    264                        break;
    265          	    }
    266          	    goto L_ADD;
    267          	  }
    268          #endif
    269          	  if (strncmp(s,"!SKIP!",6))
   \                     ??GetNumberOfDialogs_10:
   \   000001C8   C0109FE5           LDR      R1,??GetNumberOfDialogs_0+0x24  ;; `?<Constant "!SKIP!">`
   \   000001CC   0620A0E3           MOV      R2,#+6
   \   000001D0   0B00A0E1           MOV      R0,R11
   \   000001D4   150100EF           SWI      +277
   \   000001D8   000050E3           CMP      R0,#+0
   \   000001DC   1800000A           BEQ      ??GetNumberOfDialogs_8
    270          	  {
    271          	    ws=AllocWS(64);
   \   000001E0   4000A0E3           MOV      R0,#+64
   \   000001E4   250100EF           SWI      +293
   \   000001E8   0070A0E1           MOV      R7,R0
    272          	    i=0;
   \   000001EC   0000A0E3           MOV      R0,#+0
   \   000001F0   020000EA           B        ??GetNumberOfDialogs_18
    273          	    while((c=*s++)>=' ')
    274          	    {
    275          	      if (i<(sizeof(ss)-1)) ss[i++]=c;
   \                     ??GetNumberOfDialogs_19:
   \   000001F4   3F0050E3           CMP      R0,#+63
   \   000001F8   0020C135           STRBCC   R2,[R1, #+0]
   \   000001FC   01008032           ADDCC    R0,R0,#+1
    276          	    }
   \                     ??GetNumberOfDialogs_18:
   \   00000200   ........           LDRB     R2,[R11], #+1
   \   00000204   04108DE2           ADD      R1,SP,#+4
   \   00000208   011080E0           ADD      R1,R0,R1
   \   0000020C   200052E3           CMP      R2,#+32
   \   00000210   F7FFFFAA           BGE      ??GetNumberOfDialogs_19
    277          	    ss[i]=0;
   \   00000214   0000A0E3           MOV      R0,#+0
   \   00000218   0000C1E5           STRB     R0,[R1, #+0]
    278          	    wsprintf(ws,percent_t,ss);
   \   0000021C   ........           LDR      R1,??DataTable9  ;; percent_t
   \   00000220   04208DE2           ADD      R2,SP,#+4
   \                     ??GetNumberOfDialogs_17:
   \   00000224   0700A0E1           MOV      R0,R7
   \   00000228   240100EF           SWI      +292
    279          	  L_ADD:
    280          	    AddNL(ws,0);
   \                     ??GetNumberOfDialogs_7:
   \   0000022C   0010A0E3           MOV      R1,#+0
   \   00000230   0700A0E1           MOV      R0,R7
   \   00000234   ........           BL       AddNL
    281          	    nltop->p=icsm;
   \   00000238   000095E5           LDR      R0,[R5, #+0]
    282          	    count++;
   \   0000023C   0940A0E1           MOV      R4,R9
   \   00000240   088080E5           STR      R8,[R0, #+8]
    283          	  }
    284          	}
    285                }
    286              }
    287            }
    288            while((icsm=icsm->next));
   \                     ??GetNumberOfDialogs_8:
   \   00000244   008098E5           LDR      R8,[R8, #+0]
   \   00000248   000058E3           CMP      R8,#+0
   \   0000024C   9DFFFF1A           BNE      ??GetNumberOfDialogs_4
    289            sprintf(mmenu_hdr_txt,"XTask3.0 : %d dialogs",count);
   \   00000250   3C109FE5           LDR      R1,??GetNumberOfDialogs_0+0x28  ;; `?<Constant "XTask3.0 : %d dialogs">`
   \   00000254   3C009FE5           LDR      R0,??GetNumberOfDialogs_0+0x2C  ;; mmenu_hdr_txt
   \   00000258   0420A0E1           MOV      R2,R4
   \   0000025C   160000EF           SWI      +22
    290            return(count);
   \   00000260   0400A0E1           MOV      R0,R4
   \   00000264   44D08DE2           ADD      SP,SP,#+68
   \   00000268   F08FBDE8           POP      {R4-R11,PC}      ;; return
   \                     ??GetNumberOfDialogs_0:
   \   0000026C   CCCCAA55           DC32     0x55aacccc
   \   00000270   55AA3333           DC32     0x3333aa55
   \   00000274   ........           DC32     under_idle
   \   00000278   ........           DC32     `?<Constant "IDLE Screen">`
   \   0000027C   ........           DC32     `?<Constant "Java">`
   \   00000280   ........           DC32     `?<Constant "Browser">`
   \   00000284   ........           DC32     `?<Constant "User Java">`
   \   00000288   ........           DC32     `?<Constant "E-mail client">`
   \   0000028C   ........           DC32     `?<Constant "Unknown %d bearer">`
   \   00000290   ........           DC32     `?<Constant "!SKIP!">`
   \   00000294   ........           DC32     `?<Constant "XTask3.0 : %d dialogs">`
   \   00000298   ........           DC32     mmenu_hdr_txt
    291          }
    292          

   \                                 In segment CODE, align 4, keep-with-next
    293          NAMELIST *get_nlitem(int curitem)
    294          {
    295            NAMELIST *nl;
    296            nl=nltop;
   \                     get_nlitem:
   \   00000000   ........           LDR      R1,??DataTable7  ;; nltop
    297            int i=0;
   \   00000004   0020A0E3           MOV      R2,#+0
   \   00000008   001091E5           LDR      R1,[R1, #+0]
   \   0000000C   010000EA           B        ??get_nlitem_0
    298            while(nl)
    299            {
    300              if (i==curitem) break;
    301              i++;
    302              nl=nl->next;
   \                     ??get_nlitem_1:
   \   00000010   001091E5           LDR      R1,[R1, #+0]
   \   00000014   012082E2           ADD      R2,R2,#+1
   \                     ??get_nlitem_0:
   \   00000018   000051E3           CMP      R1,#+0
   \   0000001C   00005211           CMPNE    R2,R0
   \   00000020   FAFFFF1A           BNE      ??get_nlitem_1
    303            }
    304            return(nl);
   \   00000024   0100A0E1           MOV      R0,R1
   \   00000028   1EFF2FE1           BX       LR               ;; return
    305          }
    306          
    307          

   \                                 In segment CODE, align 4, keep-with-next
    308          void mm_menu_iconhndl(void *data, int curitem, void *unk)
    309          {
   \                     mm_menu_iconhndl:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
    310            NAMELIST *nl;
    311            WSHDR *ws;
    312            void *item=AllocMenuItem(data);
   \   0000000C   970100EF           SWI      +407
   \   00000010   0060A0E1           MOV      R6,R0
    313            nl=get_nlitem(curitem);
   \   00000014   0500A0E1           MOV      R0,R5
   \   00000018   ........           BL       get_nlitem
   \   0000001C   0070B0E1           MOVS     R7,R0
    314            if (nl)
   \   00000020   1C00000A           BEQ      ??mm_menu_iconhndl_0
    315            {
    316              if (nl->name)
   \   00000024   040097E5           LDR      R0,[R7, #+4]
   \   00000028   000050E3           CMP      R0,#+0
   \   0000002C   1400000A           BEQ      ??mm_menu_iconhndl_1
    317              {
    318                ws=AllocMenuWS(data,nl->name->wsbody[0]+2);
   \   00000030   000090E5           LDR      R0,[R0, #+0]
   \   00000034   B000D0E1           LDRH     R0,[R0, #+0]
   \   00000038   021080E2           ADD      R1,R0,#+2
   \   0000003C   0400A0E1           MOV      R0,R4
   \   00000040   980100EF           SWI      +408
    319                wstrcpy(ws,nl->name);
   \   00000044   041097E5           LDR      R1,[R7, #+4]
   \   00000048   0080A0E1           MOV      R8,R0
   \   0000004C   1F0100EF           SWI      +287
    320                if (nl->is_daemon)
   \   00000050   0C0097E5           LDR      R0,[R7, #+12]
   \   00000054   000050E3           CMP      R0,#+0
   \   00000058   1400000A           BEQ      ??mm_menu_iconhndl_2
    321                {
    322                  wsInsertChar(ws,0x0002,1);
   \   0000005C   0120A0E3           MOV      R2,#+1
   \   00000060   0210A0E3           MOV      R1,#+2
   \   00000064   0800A0E1           MOV      R0,R8
   \   00000068   1D0000EF           SWI      +29
    323                  wsInsertChar(ws,0xE008,1);
   \   0000006C   0120A0E3           MOV      R2,#+1
   \   00000070   0810A0E3           MOV      R1,#+8
   \   00000074   E01C81E3           ORR      R1,R1,#0xE000
   \   00000078   0800A0E1           MOV      R0,R8
   \   0000007C   1D0000EF           SWI      +29
   \   00000080   0A0000EA           B        ??mm_menu_iconhndl_2
    324                }
    325              }
    326              else
    327              {
    328                ws=AllocMenuWS(data,16);
   \                     ??mm_menu_iconhndl_1:
   \   00000084   1010A0E3           MOV      R1,#+16
   \   00000088   0400A0E1           MOV      R0,R4
   \   0000008C   980100EF           SWI      +408
    329                wsprintf(ws,"no name???");
   \   00000090   30109FE5           LDR      R1,??mm_menu_iconhndl_3  ;; `?<Constant "no name???">`
   \   00000094   030000EA           B        ??mm_menu_iconhndl_4
    330              }
    331            }
    332            else
    333            {
    334              ws=AllocMenuWS(data,16);
   \                     ??mm_menu_iconhndl_0:
   \   00000098   1010A0E3           MOV      R1,#+16
   \   0000009C   0400A0E1           MOV      R0,R4
   \   000000A0   980100EF           SWI      +408
    335              wsprintf(ws,"error!!!");
   \   000000A4   20109FE5           LDR      R1,??mm_menu_iconhndl_3+0x4  ;; `?<Constant "error!!!">`
   \                     ??mm_menu_iconhndl_4:
   \   000000A8   0080A0E1           MOV      R8,R0
   \   000000AC   240100EF           SWI      +292
    336            }
    337            SetMenuItemText(data,item,ws,curitem);
   \                     ??mm_menu_iconhndl_2:
   \   000000B0   0530A0E1           MOV      R3,R5
   \   000000B4   0820A0E1           MOV      R2,R8
   \   000000B8   0610A0E1           MOV      R1,R6
   \   000000BC   0400A0E1           MOV      R0,R4
   \   000000C0   9A0100EF           SWI      +410
    338          }
   \   000000C4   F081BDE8           POP      {R4-R8,PC}       ;; return
   \                     ??mm_menu_iconhndl_3:
   \   000000C8   ........           DC32     `?<Constant "no name???">`
   \   000000CC   ........           DC32     `?<Constant "error!!!">`
    339          

   \                                 In segment CODE, align 4, keep-with-next
    340          const char *bm_name(int bm)
    341          {
    342            switch(bm)
   \                     bm_name:
   \   00000000   080050E3           CMP      R0,#+8
   \   00000004   1700008A           BHI      ??bm_name_1
   \   00000008   011F8FE2           ADR      R1,??bm_name_0
   \   0000000C   0010D1E7           LDRB     R1,[R1, R0]
   \   00000010   01F18FE0           ADD      PC,PC,R1, LSL #+2
   \                     ??bm_name_0:
   \   00000014   02040608           DC8      +2,+4,+6,+8
   \   00000018   0A0C0E10           DC8      +10,+12,+14,+16
   \   0000001C   12000000           DC8      +18,+0,+0,+0
    343            {
    344            case 0: return BM1NAME;
   \                     ??bm_name_2:
   \   00000020   48009FE5           LDR      R0,??bm_name_3   ;; BM1NAME
   \   00000024   1EFF2FE1           BX       LR
    345            case 1: return BM2NAME;
   \                     ??bm_name_4:
   \   00000028   44009FE5           LDR      R0,??bm_name_3+0x4  ;; BM2NAME
   \   0000002C   1EFF2FE1           BX       LR
    346            case 2: return BM3NAME;
   \                     ??bm_name_5:
   \   00000030   40009FE5           LDR      R0,??bm_name_3+0x8  ;; BM3NAME
   \   00000034   1EFF2FE1           BX       LR
    347            case 3: return BM4NAME;
   \                     ??bm_name_6:
   \   00000038   3C009FE5           LDR      R0,??bm_name_3+0xC  ;; BM4NAME
   \   0000003C   1EFF2FE1           BX       LR
    348            case 4: return BM5NAME;
   \                     ??bm_name_7:
   \   00000040   38009FE5           LDR      R0,??bm_name_3+0x10  ;; BM5NAME
   \   00000044   1EFF2FE1           BX       LR
    349            case 5: return BM6NAME;
   \                     ??bm_name_8:
   \   00000048   34009FE5           LDR      R0,??bm_name_3+0x14  ;; BM6NAME
   \   0000004C   1EFF2FE1           BX       LR
    350            case 6: return BM7NAME;
   \                     ??bm_name_9:
   \   00000050   30009FE5           LDR      R0,??bm_name_3+0x18  ;; BM7NAME
   \   00000054   1EFF2FE1           BX       LR
    351            case 7: return BM8NAME;
   \                     ??bm_name_10:
   \   00000058   2C009FE5           LDR      R0,??bm_name_3+0x1C  ;; BM8NAME
   \   0000005C   1EFF2FE1           BX       LR
    352            case 8: return BM9NAME;
   \                     ??bm_name_11:
   \   00000060   28009FE5           LDR      R0,??bm_name_3+0x20  ;; BM9NAME
   \   00000064   1EFF2FE1           BX       LR
    353            }
    354            return(0);
   \                     ??bm_name_1:
   \   00000068   0000A0E3           MOV      R0,#+0
   \   0000006C   1EFF2FE1           BX       LR               ;; return
   \                     ??bm_name_3:
   \   00000070   ........           DC32     BM1NAME
   \   00000074   ........           DC32     BM2NAME
   \   00000078   ........           DC32     BM3NAME
   \   0000007C   ........           DC32     BM4NAME
   \   00000080   ........           DC32     BM5NAME
   \   00000084   ........           DC32     BM6NAME
   \   00000088   ........           DC32     BM7NAME
   \   0000008C   ........           DC32     BM8NAME
   \   00000090   ........           DC32     BM9NAME
    355          }
    356          

   \                                 In segment CODE, align 4, keep-with-next
    357          const char *bm_file(int bm)
    358          {
    359            switch(bm)
   \                     bm_file:
   \   00000000   080050E3           CMP      R0,#+8
   \   00000004   1700008A           BHI      ??bm_file_1
   \   00000008   011F8FE2           ADR      R1,??bm_file_0
   \   0000000C   0010D1E7           LDRB     R1,[R1, R0]
   \   00000010   01F18FE0           ADD      PC,PC,R1, LSL #+2
   \                     ??bm_file_0:
   \   00000014   02040608           DC8      +2,+4,+6,+8
   \   00000018   0A0C0E10           DC8      +10,+12,+14,+16
   \   0000001C   12000000           DC8      +18,+0,+0,+0
    360            {
    361            case 0: return BM1FILE;
   \                     ??bm_file_2:
   \   00000020   48009FE5           LDR      R0,??bm_file_3   ;; BM1FILE
   \   00000024   1EFF2FE1           BX       LR
    362            case 1: return BM2FILE;
   \                     ??bm_file_4:
   \   00000028   44009FE5           LDR      R0,??bm_file_3+0x4  ;; BM2FILE
   \   0000002C   1EFF2FE1           BX       LR
    363            case 2: return BM3FILE;
   \                     ??bm_file_5:
   \   00000030   40009FE5           LDR      R0,??bm_file_3+0x8  ;; BM3FILE
   \   00000034   1EFF2FE1           BX       LR
    364            case 3: return BM4FILE;
   \                     ??bm_file_6:
   \   00000038   3C009FE5           LDR      R0,??bm_file_3+0xC  ;; BM4FILE
   \   0000003C   1EFF2FE1           BX       LR
    365            case 4: return BM5FILE;
   \                     ??bm_file_7:
   \   00000040   38009FE5           LDR      R0,??bm_file_3+0x10  ;; BM5FILE
   \   00000044   1EFF2FE1           BX       LR
    366            case 5: return BM6FILE;
   \                     ??bm_file_8:
   \   00000048   34009FE5           LDR      R0,??bm_file_3+0x14  ;; BM6FILE
   \   0000004C   1EFF2FE1           BX       LR
    367            case 6: return BM7FILE;
   \                     ??bm_file_9:
   \   00000050   30009FE5           LDR      R0,??bm_file_3+0x18  ;; BM7FILE
   \   00000054   1EFF2FE1           BX       LR
    368            case 7: return BM8FILE;
   \                     ??bm_file_10:
   \   00000058   2C009FE5           LDR      R0,??bm_file_3+0x1C  ;; BM8FILE
   \   0000005C   1EFF2FE1           BX       LR
    369            case 8: return BM9FILE;
   \                     ??bm_file_11:
   \   00000060   28009FE5           LDR      R0,??bm_file_3+0x20  ;; BM9FILE
   \   00000064   1EFF2FE1           BX       LR
    370            }
    371            return(0);
   \                     ??bm_file_1:
   \   00000068   0000A0E3           MOV      R0,#+0
   \   0000006C   1EFF2FE1           BX       LR               ;; return
   \                     ??bm_file_3:
   \   00000070   ........           DC32     BM1FILE
   \   00000074   ........           DC32     BM2FILE
   \   00000078   ........           DC32     BM3FILE
   \   0000007C   ........           DC32     BM4FILE
   \   00000080   ........           DC32     BM5FILE
   \   00000084   ........           DC32     BM6FILE
   \   00000088   ........           DC32     BM7FILE
   \   0000008C   ........           DC32     BM8FILE
   \   00000090   ........           DC32     BM9FILE
    372          }
    373          

   \                                 In segment CODE, align 4, keep-with-next
    374          int RunBM(int bm)
    375          {
   \                     RunBM:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
    376            const char *s=bm_file(bm);
   \   00000004   ........           BL       bm_file
   \   00000008   0040B0E1           MOVS     R4,R0
    377            if (s)
   \   0000000C   1000000A           BEQ      ??RunBM_0
    378            {
    379              if (strlen(s))
   \   00000010   1B0000EF           SWI      +27
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   3080BD08           POPEQ    {R4,R5,PC}
    380              {
    381                WSHDR *ws;
    382                ws=AllocWS(150);
   \   0000001C   9600A0E3           MOV      R0,#+150
   \   00000020   250100EF           SWI      +293
   \   00000024   0050A0E1           MOV      R5,R0
    383                str_2ws(ws,s,128);
   \   00000028   8020A0E3           MOV      R2,#+128
   \   0000002C   0410A0E1           MOV      R1,R4
   \   00000030   6C0100EF           SWI      +364
    384                ExecuteFile(ws,0,0);
   \   00000034   0020A0E3           MOV      R2,#+0
   \   00000038   0010A0E3           MOV      R1,#+0
   \   0000003C   0500A0E1           MOV      R0,R5
   \   00000040   940000EF           SWI      +148
    385                FreeWS(ws);
   \   00000044   0500A0E1           MOV      R0,R5
   \   00000048   290100EF           SWI      +297
    386                return(1);
   \   0000004C   0100A0E3           MOV      R0,#+1
   \   00000050   3080BDE8           POP      {R4,R5,PC}
    387              }
    388            }
    389            return(0);
   \                     ??RunBM_0:
   \   00000054   0000A0E3           MOV      R0,#+0
   \   00000058   3080BDE8           POP      {R4,R5,PC}       ;; return
    390          }
    391          

   \                                 In segment DATA_C, align 4, align-sorted
    392          const HEADER_DESC bm_menuhdr={0,0,131,21,NULL,(int)"Bookmarks...",LGP_NULL};
   \                     bm_menuhdr:
   \   00000000   000000008300       DC16 0, 0, 131, 21
   \              1500        
   \   00000008   00000000....       DC32 0H, `?<Constant "Bookmarks...">`, 32767
   \              ....FF7F0000

   \                                 In segment DATA_C, align 4, align-sorted
    393          const int menusoftkeys[]={0,1,2};
   \                     menusoftkeys:
   \   00000000   000000000100       DC32 0, 1, 2
   \              000002000000

   \                                 In segment DATA_C, align 4, align-sorted
    394          const SOFTKEY_DESC menu_sk[]=
   \                     menu_sk:
   \   00000000   18000000           DC16 24, 0
   \   00000004   ........           DC32 `?<Constant "Config">`
   \   00000008   01000000           DC16 1, 0
   \   0000000C   ........           DC32 `?<Constant "Close">`
   \   00000010   3D000000           DC16 61, 0
   \   00000014   FBC0FF7F           DC32 2147467515
    395          {
    396            {0x0018,0x0000,(int)"Config"},
    397            {0x0001,0x0000,(int)"Close"},
    398            {0x003D,0x0000,(int)LGP_DOIT_PIC}
    399          };
    400          

   \                                 In segment DATA_C, align 4, align-sorted
    401          const SOFTKEYSTAB menu_skt=
   \                     menu_skt:
   \   00000000   ........0000       DC32 menu_sk, 0
   \              0000        
    402          {
    403            menu_sk,0
    404          };
    405          

   \                                 In segment CODE, align 4, keep-with-next
    406          void bm_menu_ghook(void *data, int cmd)
    407          {
   \                     bm_menu_ghook:
   \   00000000   00402DE9           PUSH     {LR}
    408            if (cmd==0x0A) DisableIDLETMR();
   \   00000004   0A0051E3           CMP      R1,#+10
   \   00000008   0080BD18           POPNE    {PC}
   \   0000000C   7F0100EF           SWI      +383
    409          }
   \   00000010   0080BDE8           POP      {PC}             ;; return
    410          int bm_menu_onkey(void *data, GUI_MSG *msg);
    411          void bm_menu_iconhndl(void *data, int curitem, void *unk);
    412          

   \                                 In segment DATA_C, align 4, align-sorted
    413          const MENU_DESC bm_menu=
   \                     bm_menu:
   \   00000000   08000000....       DC32 8, bm_menu_onkey, bm_menu_ghook, 0H, menusoftkeys, menu_skt, 16
   \              ............
   \              00000000....
   \              ............
   \              10000000    
   \   0000001C   ........0000       DC32 bm_menu_iconhndl, 0H, 0H, 0
   \              000000000000
   \              00000000    
    414          {
    415            8,bm_menu_onkey,bm_menu_ghook,NULL,
    416            menusoftkeys,
    417            &menu_skt,
    418            0x10,//0x11,
    419            bm_menu_iconhndl,
    420            NULL,   //Items
    421            NULL,   //Procs
    422            0   //n
    423          };
    424          

   \                                 In segment CODE, align 4, keep-with-next
    425          int bm_menu_onkey(void *data, GUI_MSG *msg)
    426          {
   \                     bm_menu_onkey:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0140A0E1           MOV      R4,R1
    427            int i;
    428            i=GetCurMenuItem(data);
   \   00000008   8F0100EF           SWI      +399
    429            if (msg->keys==0x18)
   \   0000000C   F210D4E1           LDRSH    R1,[R4, #+2]
   \   00000010   ........           LDR      R4,??DataTable13  ;; my_csm_id
   \   00000014   180051E3           CMP      R1,#+24
   \   00000018   0E00001A           BNE      ??bm_menu_onkey_0
    430            {
    431              //    GeneralFunc_F1(1);
    432          //    ShowMSG(1,(int)"Under construction!");
    433              extern const char *successed_config_filename;
    434              WSHDR *ws;
    435              ws=AllocWS(150);
   \   0000001C   9600A0E3           MOV      R0,#+150
   \   00000020   250100EF           SWI      +293
   \   00000024   0050A0E1           MOV      R5,R0
    436              str_2ws(ws,successed_config_filename,128);
   \   00000028   68009FE5           LDR      R0,??bm_menu_onkey_1  ;; successed_config_filename
   \   0000002C   8020A0E3           MOV      R2,#+128
   \   00000030   001090E5           LDR      R1,[R0, #+0]
   \   00000034   0500A0E1           MOV      R0,R5
   \   00000038   6C0100EF           SWI      +364
    437              ExecuteFile(ws,0,0);
   \   0000003C   0020A0E3           MOV      R2,#+0
   \   00000040   0010A0E3           MOV      R1,#+0
   \   00000044   0500A0E1           MOV      R0,R5
   \   00000048   940000EF           SWI      +148
    438              FreeWS(ws);
   \   0000004C   0500A0E1           MOV      R0,R5
   \   00000050   290100EF           SWI      +297
    439              GeneralFunc_flag1(((MAIN_CSM*)FindCSMbyID(my_csm_id))->gui_id,1);
   \   00000054   040000EA           B        ??bm_menu_onkey_2
    440              return(1);
    441            }
    442            if (msg->keys==0x3D)
   \                     ??bm_menu_onkey_0:
   \   00000058   3D0051E3           CMP      R1,#+61
   \   0000005C   0B00001A           BNE      ??bm_menu_onkey_3
    443            {
    444              if (RunBM(i))
   \   00000060   ........           BL       RunBM
   \   00000064   000050E3           CMP      R0,#+0
   \   00000068   0600000A           BEQ      ??bm_menu_onkey_4
    445              {
    446                GeneralFunc_flag1(((MAIN_CSM*)FindCSMbyID(my_csm_id))->gui_id,1);
   \                     ??bm_menu_onkey_2:
   \   0000006C   000094E5           LDR      R0,[R4, #+0]
   \   00000070   080100EF           SWI      +264
   \   00000074   280090E5           LDR      R0,[R0, #+40]
   \   00000078   0110A0E3           MOV      R1,#+1
   \   0000007C   3D0100EF           SWI      +317
    447                return(1);
   \   00000080   0100A0E3           MOV      R0,#+1
   \   00000084   3080BDE8           POP      {R4,R5,PC}
    448              }
    449              return(-1);
   \                     ??bm_menu_onkey_4:
   \   00000088   0000E0E3           MVN      R0,#+0
   \   0000008C   3080BDE8           POP      {R4,R5,PC}
    450            }
    451            return(0);
   \                     ??bm_menu_onkey_3:
   \   00000090   0000A0E3           MOV      R0,#+0
   \   00000094   3080BDE8           POP      {R4,R5,PC}       ;; return
   \                     ??bm_menu_onkey_1:
   \   00000098   ........           DC32     successed_config_filename
    452          }
    453          
    454          

   \                                 In segment CODE, align 4, keep-with-next
    455          void bm_menu_iconhndl(void *data, int curitem, void *unk)
    456          {
   \                     bm_menu_iconhndl:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
    457            const char *s;
    458            WSHDR *ws;
    459            void *item=AllocMenuItem(data);
   \   0000000C   970100EF           SWI      +407
   \   00000010   0060A0E1           MOV      R6,R0
    460          
    461            s=bm_name(curitem);
   \   00000014   0500A0E1           MOV      R0,R5
   \   00000018   ........           BL       bm_name
   \   0000001C   0070B0E1           MOVS     R7,R0
    462            if (s)
   \   00000020   1100000A           BEQ      ??bm_menu_iconhndl_0
    463            {
    464              if (strlen(s))
   \   00000024   1B0000EF           SWI      +27
   \   00000028   000050E3           CMP      R0,#+0
   \   0000002C   0900000A           BEQ      ??bm_menu_iconhndl_1
    465              {
    466                ws=AllocMenuWS(data,strlen(s));
   \   00000030   0700A0E1           MOV      R0,R7
   \   00000034   1B0000EF           SWI      +27
   \   00000038   0010A0E1           MOV      R1,R0
   \   0000003C   0400A0E1           MOV      R0,R4
   \   00000040   980100EF           SWI      +408
    467                wsprintf(ws,percent_t,s);
   \   00000044   ........           LDR      R1,??DataTable9  ;; percent_t
   \   00000048   0080A0E1           MOV      R8,R0
   \   0000004C   0720A0E1           MOV      R2,R7
   \   00000050   240100EF           SWI      +292
   \   00000054   0A0000EA           B        ??bm_menu_iconhndl_2
    468              }
    469              else
    470              {
    471                ws=AllocMenuWS(data,10);
   \                     ??bm_menu_iconhndl_1:
   \   00000058   0A10A0E3           MOV      R1,#+10
   \   0000005C   0400A0E1           MOV      R0,R4
   \   00000060   980100EF           SWI      +408
    472                wsprintf(ws,"Empty");
   \   00000064   30109FE5           LDR      R1,??bm_menu_iconhndl_3  ;; `?<Constant "Empty">`
   \   00000068   030000EA           B        ??bm_menu_iconhndl_4
    473              }
    474            }
    475            else
    476            {
    477              ws=AllocMenuWS(data,10);
   \                     ??bm_menu_iconhndl_0:
   \   0000006C   0A10A0E3           MOV      R1,#+10
   \   00000070   0400A0E1           MOV      R0,R4
   \   00000074   980100EF           SWI      +408
    478              wsprintf(ws,"error");
   \   00000078   20109FE5           LDR      R1,??bm_menu_iconhndl_3+0x4  ;; `?<Constant "error">`
   \                     ??bm_menu_iconhndl_4:
   \   0000007C   0080A0E1           MOV      R8,R0
   \   00000080   240100EF           SWI      +292
    479            }
    480          //  SetMenuItemIconArray(data,item,S_ICONS);
    481            SetMenuItemText(data,item,ws,curitem);
   \                     ??bm_menu_iconhndl_2:
   \   00000084   0530A0E1           MOV      R3,R5
   \   00000088   0820A0E1           MOV      R2,R8
   \   0000008C   0610A0E1           MOV      R1,R6
   \   00000090   0400A0E1           MOV      R0,R4
   \   00000094   9A0100EF           SWI      +410
    482          //  SetMenuItemIcon(data,curitem,GetIconIndex(t));
    483          }
   \   00000098   F081BDE8           POP      {R4-R8,PC}       ;; return
   \                     ??bm_menu_iconhndl_3:
   \   0000009C   ........           DC32     `?<Constant "Empty">`
   \   000000A0   ........           DC32     `?<Constant "error">`
    484          

   \                                 In segment CODE, align 4, keep-with-next
    485          void ShowBMmenu(void)
    486          {
   \                     ShowBMmenu:
   \   00000000   10402DE9           PUSH     {R4,LR}
    487            patch_header(&bm_menuhdr);
   \   00000004   4C409FE5           LDR      R4,??ShowBMmenu_0  ;; bm_menuhdr
   \   00000008   0000A0E3           MOV      R0,#+0
   \   0000000C   000084E5           STR      R0,[R4, #+0]
   \   00000010   888100EF           SWI      +33160
   \   00000014   010040E2           SUB      R0,R0,#+1
   \   00000018   B400C4E1           STRH     R0,[R4, #+4]
   \   0000001C   8A8100EF           SWI      +33162
    488            CreateMenu(0,0,&bm_menu,&bm_menuhdr,0,9,0,0);
   \   00000020   34209FE5           LDR      R2,??ShowBMmenu_0+0x4  ;; bm_menu
   \   00000024   010040E2           SUB      R0,R0,#+1
   \   00000028   B600C4E1           STRH     R0,[R4, #+6]
   \   0000002C   0000A0E3           MOV      R0,#+0
   \   00000030   01002DE9           PUSH     {R0}
   \   00000034   01002DE9           PUSH     {R0}
   \   00000038   0430A0E1           MOV      R3,R4
   \   0000003C   0010A0E3           MOV      R1,#+0
   \   00000040   0900A0E3           MOV      R0,#+9
   \   00000044   01002DE9           PUSH     {R0}
   \   00000048   0000A0E3           MOV      R0,#+0
   \   0000004C   01002DE9           PUSH     {R0}
   \   00000050   520100EF           SWI      +338
    489          }
   \   00000054   1F80BDE8           POP      {R0-R4,PC}       ;; return
   \                     ??ShowBMmenu_0:
   \   00000058   ........           DC32     bm_menuhdr
   \   0000005C   ........           DC32     bm_menu
    490          

   \                                 In segment CODE, align 4, keep-with-next
    491          int mm_menu_onkey(void *data, GUI_MSG *msg)
    492          {
   \                     mm_menu_onkey:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
    493            MAIN_CSM *csm=MenuGetUserPointer(data);
   \   0000000C   E00100EF           SWI      +480
    494            NAMELIST *nl=get_nlitem(GetCurMenuItem(data));
   \   00000010   0400A0E1           MOV      R0,R4
   \   00000014   8F0100EF           SWI      +399
   \   00000018   ........           BL       get_nlitem
    495            int i;
    496            if (msg->gbsmsg->msg==KEY_DOWN)
   \   0000001C   041095E5           LDR      R1,[R5, #+4]
   \   00000020   9330A0E3           MOV      R3,#+147
   \   00000024   F220D1E1           LDRSH    R2,[R1, #+2]
   \   00000028   403F83E3           ORR      R3,R3,#0x100
   \   0000002C   030052E1           CMP      R2,R3
   \   00000030   2B00001A           BNE      ??mm_menu_onkey_0
    497            {
    498              i=msg->gbsmsg->submess;
   \   00000034   044091E5           LDR      R4,[R1, #+4]
    499              {
    500                if (i=='0')
   \   00000038   300054E3           CMP      R4,#+48
   \   0000003C   0200001A           BNE      ??mm_menu_onkey_1
    501                {
    502                  ShowBMmenu();
   \   00000040   ........           BL       ShowBMmenu
    503                  return(-1);
   \   00000044   0000E0E3           MVN      R0,#+0
   \   00000048   3080BDE8           POP      {R4,R5,PC}
    504                }
    505                if ((i>='1')&&(i<='9'))
   \                     ??mm_menu_onkey_1:
   \   0000004C   310054E3           CMP      R4,#+49
   \   00000050   070000BA           BLT      ??mm_menu_onkey_2
   \   00000054   3A0054E3           CMP      R4,#+58
   \   00000058   050000AA           BGE      ??mm_menu_onkey_2
    506                {
    507                  if (RunBM(i-'1')) return 1;
   \   0000005C   310044E2           SUB      R0,R4,#+49
   \   00000060   ........           BL       RunBM
   \   00000064   000050E3           CMP      R0,#+0
   \   00000068   2300001A           BNE      ??mm_menu_onkey_3
    508          	return(-1);
   \   0000006C   0000E0E3           MVN      R0,#+0
   \   00000070   3080BDE8           POP      {R4,R5,PC}
    509                }
    510              }
    511              switch(i)
   \                     ??mm_menu_onkey_2:
   \   00000074   082090E5           LDR      R2,[R0, #+8]
   \   00000078   014054E2           SUBS     R4,R4,#+1
   \   0000007C   1A00000A           BEQ      ??mm_menu_onkey_4
   \   00000080   034054E2           SUBS     R4,R4,#+3
   \   00000084   1C00000A           BEQ      ??mm_menu_onkey_3
   \   00000088   164054E2           SUBS     R4,R4,#+22
   \   0000008C   1C00000A           BEQ      ??mm_menu_onkey_5
   \   00000090   094054E2           SUBS     R4,R4,#+9
   \   00000094   0200000A           BEQ      ??mm_menu_onkey_6
   \   00000098   074054E2           SUBS     R4,R4,#+7
   \   0000009C   0900000A           BEQ      ??mm_menu_onkey_7
   \   000000A0   060000EA           B        ??mm_menu_onkey_8
    512              {
    513              case '#':
    514                i=((CSM_RAM *)(nl->p))->id;
   \                     ??mm_menu_onkey_6:
   \   000000A4   0C4092E5           LDR      R4,[R2, #+12]
    515                if (i!=CSM_root()->idle_id) CloseCSM(i);
   \   000000A8   068100EF           SWI      +33030
   \   000000AC   040090E5           LDR      R0,[R0, #+4]
   \   000000B0   000054E1           CMP      R4,R0
   \   000000B4   0A00000A           BEQ      ??mm_menu_onkey_0
   \   000000B8   0400A0E1           MOV      R0,R4
   \   000000BC   FC0100EF           SWI      +508
    516                return 0;
   \                     ??mm_menu_onkey_8:
   \   000000C0   0000A0E3           MOV      R0,#+0
   \   000000C4   3080BDE8           POP      {R4,R5,PC}
    517              case '*':
    518                show_daemons=!show_daemons;
   \                     ??mm_menu_onkey_7:
   \   000000C8   ........           LDR      R0,??DataTable10  ;; show_daemons
   \   000000CC   001090E5           LDR      R1,[R0, #+0]
   \   000000D0   000051E3           CMP      R1,#+0
   \   000000D4   0110A003           MOVEQ    R1,#+1
   \   000000D8   0010A013           MOVNE    R1,#+0
   \   000000DC   001080E5           STR      R1,[R0, #+0]
    519                RefreshGUI();
   \   000000E0   960100EF           SWI      +406
    520                return 0;      
   \                     ??mm_menu_onkey_0:
   \   000000E4   0000A0E3           MOV      R0,#+0
   \   000000E8   3080BDE8           POP      {R4,R5,PC}
    521              case LEFT_SOFT:
    522                CSMtoTop(CSM_root()->idle_id,-1);
   \                     ??mm_menu_onkey_4:
   \   000000EC   068100EF           SWI      +33030
   \   000000F0   040090E5           LDR      R0,[R0, #+4]
   \   000000F4   0010E0E3           MVN      R1,#+0
   \   000000F8   ........           _BLF     CSMtoTop,??CSMtoTop??rA
    523                return(1); //пїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅ пїЅпїЅпїЅпїЅпїЅ GeneralFunc пїЅпїЅпїЅ пїЅпїЅпїЅ. GUI -> пїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅ GUI
   \                     ??mm_menu_onkey_3:
   \   000000FC   0100A0E3           MOV      R0,#+1
   \   00000100   3080BDE8           POP      {R4,R5,PC}
    524              case ENTER_BUTTON:
    525                if (!nl->is_daemon)
   \                     ??mm_menu_onkey_5:
   \   00000104   0C0090E5           LDR      R0,[R0, #+12]
   \   00000108   000050E3           CMP      R0,#+0
   \   0000010C   FAFFFF1A           BNE      ??mm_menu_onkey_3
    526                {
    527          	CSMtoTop(((CSM_RAM *)(nl->p))->id,-1);
   \   00000110   0C0092E5           LDR      R0,[R2, #+12]
   \   00000114   0010E0E3           MVN      R1,#+0
   \   00000118   ........           _BLF     CSMtoTop,??CSMtoTop??rA
    528                }
    529                return(1);
   \   0000011C   0100A0E3           MOV      R0,#+1
   \   00000120   3080BDE8           POP      {R4,R5,PC}
    530              case RIGHT_SOFT:
    531                return(1); //пїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅ пїЅпїЅпїЅпїЅпїЅ GeneralFunc пїЅпїЅпїЅ пїЅпїЅпїЅ. GUI -> пїЅпїЅпїЅпїЅпїЅпїЅпїЅпїЅ GUI
    532              }
    533            }
    534            return(0);
    535          }
    536          

   \                                 In segment DATA_C, align 4, align-sorted
    537          const HEADER_DESC mm_menuhdr={0,0,131,21,NULL,(int)mmenu_hdr_txt,LGP_NULL};
   \                     mm_menuhdr:
   \   00000000   000000008300       DC16 0, 0, 131, 21
   \              1500        
   \   00000008   00000000....       DC32 0H, mmenu_hdr_txt, 32767
   \              ....FF7F0000

   \                                 In segment DATA_C, align 4, align-sorted
    538          const SOFTKEY_DESC mm_menu_sk[]=
   \                     mm_menu_sk:
   \   00000000   18000000           DC16 24, 0
   \   00000004   ........           DC32 `?<Constant "Idle">`
   \   00000008   01000000           DC16 1, 0
   \   0000000C   ........           DC32 `?<Constant "Back">`
   \   00000010   3D000000           DC16 61, 0
   \   00000014   FBC0FF7F           DC32 2147467515
    539          {
    540            {0x0018,0x0000,(int)"Idle"},
    541            {0x0001,0x0000,(int)"Back"},
    542            {0x003D,0x0000,(int)LGP_DOIT_PIC}
    543          };
    544          

   \                                 In segment DATA_C, align 4, align-sorted
    545          const SOFTKEYSTAB mm_menu_skt=
   \                     mm_menu_skt:
   \   00000000   ........0000       DC32 mm_menu_sk, 0
   \              0000        
    546          {
    547            mm_menu_sk,0
    548          };
    549          

   \                                 In segment CODE, align 4, keep-with-next
    550          void mm_menu_ghook(void *data, int cmd)
    551          {
   \                     mm_menu_ghook:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    552            int i,j;
    553            if (cmd==9)
   \   00000008   090051E3           CMP      R1,#+9
   \   0000000C   0100001A           BNE      ??mm_menu_ghook_0
    554            {
    555              ClearNL();
   \   00000010   7040BDE8           POP      {R4-R6,LR}       ;; Pop
   \   00000014   ........           B        ClearNL          ;; tailcall
    556            }
    557            if (cmd==0x0A)
   \                     ??mm_menu_ghook_0:
   \   00000018   0A0051E3           CMP      R1,#+10
   \   0000001C   7080BD18           POPNE    {R4-R6,PC}
    558            {
    559              DisableIDLETMR();
   \   00000020   7F0100EF           SWI      +383
    560              i=GetCurMenuItem(data);
   \   00000024   0400A0E1           MOV      R0,R4
   \   00000028   8F0100EF           SWI      +399
   \   0000002C   0050A0E1           MOV      R5,R0
    561              Menu_SetItemCountDyn(data,j=GetNumberOfDialogs());
   \   00000030   ........           BL       GetNumberOfDialogs
   \   00000034   0060A0E1           MOV      R6,R0
   \   00000038   0610A0E1           MOV      R1,R6
   \   0000003C   0400A0E1           MOV      R0,R4
   \   00000040   E60100EF           SWI      +486
    562              if (i>=j) SetCursorToMenuItem(data,j-1);
   \   00000044   060055E1           CMP      R5,R6
   \   00000048   7080BDB8           POPLT    {R4-R6,PC}
   \   0000004C   011046E2           SUB      R1,R6,#+1
   \   00000050   0400A0E1           MOV      R0,R4
   \   00000054   C40100EF           SWI      +452
    563            }
    564          }
   \   00000058   7080BDE8           POP      {R4-R6,PC}       ;; return
    565          

   \                                 In segment DATA_C, align 4, align-sorted
    566          const MENU_DESC mm_menu=
   \                     mm_menu:
   \   00000000   08000000....       DC32 8, mm_menu_onkey, mm_menu_ghook, 0H, menusoftkeys, mm_menu_skt, 16
   \              ............
   \              00000000....
   \              ............
   \              10000000    
   \   0000001C   ........0000       DC32 mm_menu_iconhndl, 0H, 0H, 0
   \              000000000000
   \              00000000    
    567          {
    568            8,mm_menu_onkey,mm_menu_ghook,NULL,
    569            menusoftkeys,
    570            &mm_menu_skt,
    571            0x10,//0x11,
    572            mm_menu_iconhndl,
    573            NULL,   //Items
    574            NULL,   //Procs
    575            0   //n
    576          };
    577          

   \                                 In segment CODE, align 4, keep-with-next
    578          void maincsm_oncreate(CSM_RAM *data)
    579          {
   \                     maincsm_oncreate:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
    580            MAIN_CSM *csm=(MAIN_CSM *)data;
    581            csm->csm.state=0;
    582            csm->csm.unk1=0;
    583            int f;
    584            int sz=0;
    585            unsigned int ul;
    586            extern const char csmlist_fname[128];
    587            if ((f=fopen(csmlist_fname,A_ReadOnly+A_BIN,P_READ,&ul))!=-1)
   \   00000004   ........           LDR      R8,??DataTable11  ;; csm_text
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   BC009FE5           LDR      R0,??maincsm_oncreate_0  ;; csmlist_fname
   \   00000010   04D04DE2           SUB      SP,SP,#+4
   \   00000014   0050A0E3           MOV      R5,#+0
   \   00000018   105084E5           STR      R5,[R4, #+16]
   \   0000001C   145084E5           STR      R5,[R4, #+20]
   \   00000020   0060A0E3           MOV      R6,#+0
   \   00000024   0D30A0E1           MOV      R3,SP
   \   00000028   8020A0E3           MOV      R2,#+128
   \   0000002C   801CA0E3           MOV      R1,#+32768
   \   00000030   0A0000EF           SWI      +10
   \   00000034   0070A0E1           MOV      R7,R0
   \   00000038   010077E3           CMN      R7,#+1
   \   0000003C   0A00000A           BEQ      ??maincsm_oncreate_1
    588            {
    589              sz=fread(f,csm_text,32767,&ul);
   \   00000040   0D30A0E1           MOV      R3,SP
   \   00000044   FF20A0E3           MOV      R2,#+255
   \   00000048   7F2C82E3           ORR      R2,R2,#0x7F00
   \   0000004C   0810A0E1           MOV      R1,R8
   \   00000050   0B0000EF           SWI      +11
   \   00000054   0060A0E1           MOV      R6,R0
    590              fclose(f,&ul);
   \   00000058   0D10A0E1           MOV      R1,SP
   \   0000005C   0700A0E1           MOV      R0,R7
   \   00000060   0D0000EF           SWI      +13
    591            }
    592            if (sz>=0) csm_text[sz]=0;
   \   00000064   000056E3           CMP      R6,#+0
   \   00000068   0000004A           BMI      ??maincsm_oncreate_2
   \                     ??maincsm_oncreate_1:
   \   0000006C   0850C6E7           STRB     R5,[R6, +R8]
    593            patch_header(&mm_menuhdr);
   \                     ??maincsm_oncreate_2:
   \   00000070   5C609FE5           LDR      R6,??maincsm_oncreate_0+0x4  ;; mm_menuhdr
   \   00000074   005086E5           STR      R5,[R6, #+0]
   \   00000078   888100EF           SWI      +33160
   \   0000007C   010040E2           SUB      R0,R0,#+1
   \   00000080   B400C6E1           STRH     R0,[R6, #+4]
   \   00000084   8A8100EF           SWI      +33162
   \   00000088   010040E2           SUB      R0,R0,#+1
   \   0000008C   B600C6E1           STRH     R0,[R6, #+6]
    594            csm->gui_id=CreateMenu(0,0,&mm_menu,&mm_menuhdr,1,GetNumberOfDialogs(),csm,0);
   \   00000090   ........           BL       GetNumberOfDialogs
   \   00000094   3C209FE5           LDR      R2,??maincsm_oncreate_0+0x8  ;; mm_menu
   \   00000098   0010A0E3           MOV      R1,#+0
   \   0000009C   02002DE9           PUSH     {R1}
   \   000000A0   0630A0E1           MOV      R3,R6
   \   000000A4   0410A0E1           MOV      R1,R4
   \   000000A8   02002DE9           PUSH     {R1}
   \   000000AC   01002DE9           PUSH     {R0}
   \   000000B0   0100A0E3           MOV      R0,#+1
   \   000000B4   01002DE9           PUSH     {R0}
   \   000000B8   0510A0E1           MOV      R1,R5
   \   000000BC   0100A0E1           MOV      R0,R1
   \   000000C0   520100EF           SWI      +338
   \   000000C4   280084E5           STR      R0,[R4, #+40]
    595          }
   \   000000C8   14D08DE2           ADD      SP,SP,#+20
   \   000000CC   F081BDE8           POP      {R4-R8,PC}       ;; return
   \                     ??maincsm_oncreate_0:
   \   000000D0   ........           DC32     csmlist_fname
   \   000000D4   ........           DC32     mm_menuhdr
   \   000000D8   ........           DC32     mm_menu
    596          

   \                                 In segment CODE, align 4, keep-with-next
    597          void maincsm_onclose(CSM_RAM *csm)
    598          {
   \                     maincsm_onclose:
   \   00000000   00402DE9           PUSH     {LR}
    599            ClearNL();
   \   00000004   ........           BL       ClearNL
    600            my_csm_id=0;
   \   00000008   ........           LDR      R0,??DataTable13  ;; my_csm_id
   \   0000000C   0010A0E3           MOV      R1,#+0
   \   00000010   001080E5           STR      R1,[R0, #+0]
    601          }
   \   00000014   0080BDE8           POP      {PC}             ;; return
    602          

   \                                 In segment CODE, align 4, keep-with-next
    603          int maincsm_onmessage(CSM_RAM *data, GBS_MSG *msg)
    604          {
   \                     maincsm_onmessage:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
    605            MAIN_CSM *csm=(MAIN_CSM*)data;
    606            if (msg->msg==MSG_CSM_DESTROYED)
   \   0000000C   F200D5E1           LDRSH    R0,[R5, #+2]
   \   00000010   930050E3           CMP      R0,#+147
   \   00000014   0000001A           BNE      ??maincsm_onmessage_0
    607            {
    608              RefreshGUI();
   \   00000018   960100EF           SWI      +406
    609            }
    610            if (msg->msg==MSG_GUI_DESTROYED)
   \                     ??maincsm_onmessage_0:
   \   0000001C   F210D5E1           LDRSH    R1,[R5, #+2]
   \   00000020   0200E0E3           MVN      R0,#+2
   \   00000024   980051E3           CMP      R1,#+152
   \   00000028   0400001A           BNE      ??maincsm_onmessage_1
    611            {
    612              if ((int)msg->data0==csm->gui_id)
   \   0000002C   081095E5           LDR      R1,[R5, #+8]
   \   00000030   282094E5           LDR      R2,[R4, #+40]
   \   00000034   020051E1           CMP      R1,R2
   \   00000038   0300001A           BNE      ??maincsm_onmessage_2
    613              {
    614                csm->csm.state=-3;
   \   0000003C   100084E5           STR      R0,[R4, #+16]
    615              }
    616              //if (csm->show_csm==-1) RefreshGUI();
    617            }
    618            if (msg->msg==MSG_INCOMMING_CALL)
   \                     ??maincsm_onmessage_1:
   \   00000040   F210D5E1           LDRSH    R1,[R5, #+2]
   \   00000044   6F0051E3           CMP      R1,#+111
    619            {
    620              csm->csm.state=-3;
   \   00000048   10008405           STREQ    R0,[R4, #+16]
    621            }
    622            return(1);
   \                     ??maincsm_onmessage_2:
   \   0000004C   0100A0E3           MOV      R0,#+1
   \   00000050   3080BDE8           POP      {R4,R5,PC}       ;; return
    623          }
    624          

   \                                 In segment DATA_C, align 4, align-sorted
    625          const int minus11=-11;
   \                     minus11:
   \   00000000   F5FFFFFF           DC32 -11
    626          

   \                                 In segment DATA_C, align 4, align-sorted
    627          const CSM_DESC maincsm=
   \                     maincsm:
   \   00000000   ............       DC32 maincsm_onmessage, maincsm_oncreate, maincsm_onclose, 44, 1
   \              ............
   \              2C0000000100
   \              0000        
   \   00000014   ........           DC32 minus11
    628          {
    629            maincsm_onmessage,
    630            maincsm_oncreate,
    631          #ifdef NEWSGOLD
    632            0,
    633            0,
    634            0,
    635            0,
    636          #endif
    637            maincsm_onclose,
    638            sizeof(MAIN_CSM),
    639            1,
    640            &minus11
    641          };
    642          

   \                                 In segment CODE, align 4, keep-with-next
    643          void ShowMenu(void)
    644          {
   \                     ShowMenu:
   \   00000000   10402DE9           PUSH     {R4,LR}
    645            MAIN_CSM main_csm;
    646            InitConfig();
    647            if (!my_csm_id)
   \   00000004   ........           LDR      R4,??DataTable13  ;; my_csm_id
   \   00000008   2CD04DE2           SUB      SP,SP,#+44
   \   0000000C   ........           _BLF     InitConfig,??InitConfig??rA
   \   00000010   000094E5           LDR      R0,[R4, #+0]
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   0400001A           BNE      ??ShowMenu_0
    648            {
    649          //    main_csm.show_csm=-1;
    650              my_csm_id=CreateCSM(&maincsm,&main_csm,2);
   \   0000001C   ........           LDR      R0,??DataTable14  ;; maincsm
   \   00000020   0220A0E3           MOV      R2,#+2
   \   00000024   0D10A0E1           MOV      R1,SP
   \   00000028   070100EF           SWI      +263
   \   0000002C   000084E5           STR      R0,[R4, #+0]
    651            }
    652          }
   \                     ??ShowMenu_0:
   \   00000030   2CD08DE2           ADD      SP,SP,#+44       ;; stack cleaning
   \   00000034   1080BDE8           POP      {R4,PC}          ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable7:
   \   00000000   ........           DC32     nltop

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable9:
   \   00000000   ........           DC32     percent_t

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable10:
   \   00000000   ........           DC32     show_daemons

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable11:
   \   00000000   ........           DC32     csm_text

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable13:
   \   00000000   ........           DC32     my_csm_id

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable14:
   \   00000000   ........           DC32     maincsm

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Config">`:
   \   00000000   436F6E666967       DC8 "Config"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Close">`:
   \   00000000   436C6F736500       DC8 "Close"
   \   00000006   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Idle">`:
   \   00000000   49646C6500         DC8 "Idle"
   \   00000005   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Back">`:
   \   00000000   4261636B00         DC8 "Back"
   \   00000005   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "%08X ">`:
   \   00000000   253038582000       DC8 "%08X "
   \   00000006   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Unknown %08X!">`:
   \   00000000   556E6B6E6F77       DC8 "Unknown %08X!"
   \              6E2025303858
   \              2100        
   \   0000000E   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "IDLE Screen">`:
   \   00000000   49444C452053       DC8 "IDLE Screen"
   \              637265656E00

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Browser">`:
   \   00000000   42726F777365       DC8 "Browser"
   \              7200        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "User Java">`:
   \   00000000   55736572204A       DC8 "User Java"
   \              61766100    
   \   0000000A   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Java">`:
   \   00000000   4A61766100         DC8 "Java"
   \   00000005   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "E-mail client">`:
   \   00000000   452D6D61696C       DC8 "E-mail client"
   \              20636C69656E
   \              7400        
   \   0000000E   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Unknown %d bearer">`:
   \   00000000   556E6B6E6F77       DC8 "Unknown %d bearer"
   \              6E2025642062
   \              656172657200
   \   00000012   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "!SKIP!">`:
   \   00000000   21534B495021       DC8 "!SKIP!"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "XTask3.0 : %d dialogs">`:
   \   00000000   585461736B33       DC8 "XTask3.0 : %d dialogs"
   \              2E30203A2025
   \              64206469616C
   \              6F677300    
   \   00000016   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "no name???">`:
   \   00000000   6E6F206E616D       DC8 "no name???"
   \              653F3F3F00  
   \   0000000B   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "error!!!">`:
   \   00000000   6572726F7221       DC8 "error!!!"
   \              212100      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Empty">`:
   \   00000000   456D70747900       DC8 "Empty"
   \   00000006   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Bookmarks...">`:
   \   00000000   426F6F6B6D61       DC8 "Bookmarks..."
   \              726B732E2E2E
   \              00          
   \   0000000D   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "error">`:
   \   00000000   6572726F7200       DC8 "error"
   \   00000006   0000               DC8 0, 0

   Maximum stack usage in bytes:

     Function           CSTACK
     --------           ------
     AddNL                 16
     ClearNL               12
     GetNumberOfDialogs   104
     RunBM                 12
     ShowBMmenu            24
     ShowMenu              52
     bm_file                0
     bm_menu_ghook          4
     bm_menu_iconhndl      24
     bm_menu_onkey         12
     bm_name                0
     find_name             52
     get_nlitem             0
     maincsm_onclose        4
     maincsm_oncreate      44
     maincsm_onmessage     12
     mm_menu_ghook         16
     mm_menu_iconhndl      24
     mm_menu_onkey         12
     strncmp_nocase         4


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     mmenu_hdr_txt                     32
     show_daemons                       4
     my_csm_id                          4
     strncmp_nocase                    88
     nltop                              4
     csm_text                       32768
     percent_t                          3
     ClearNL                           72
     AddNL                             76
     find_name                         96
     u                                 40
     GetNumberOfDialogs               668
     get_nlitem                        44
     mm_menu_iconhndl                 208
     bm_name                          148
     bm_file                          148
     RunBM                             92
     bm_menuhdr                        20
     menusoftkeys                      12
     menu_sk                           24
     menu_skt                           8
     bm_menu_ghook                     20
     bm_menu                           44
     bm_menu_onkey                    156
     bm_menu_iconhndl                 164
     ShowBMmenu                        96
     mm_menu_onkey                    292
     mm_menuhdr                        20
     mm_menu_sk                        24
     mm_menu_skt                        8
     mm_menu_ghook                     92
     mm_menu                           44
     maincsm_oncreate                 220
     maincsm_onclose                   24
     maincsm_onmessage                 84
     minus11                            4
     maincsm                           24
     ShowMenu                          56
     ??DataTable7                       4
     ??DataTable9                       4
     ??DataTable10                      4
     ??DataTable11                      4
     ??DataTable13                      4
     ??DataTable14                      4
     ?<Constant "Config">               8
     ?<Constant "Close">                8
     ?<Constant "Idle">                 8
     ?<Constant "Back">                 8
     ?<Constant "%08X ">                8
     ?<Constant "Unknown %08X!">       16
     ?<Constant "IDLE Screen">         12
     ?<Constant "Browser">              8
     ?<Constant "User Java">           12
     ?<Constant "Java">                 8
     ?<Constant "E-mail client">       16
     ?<Constant "Unknown %d bearer">
                                       20
     ?<Constant "!SKIP!">               8
     ?<Constant "XTask3.0 : %d dialogs">
                                       24
     ?<Constant "no name???">          12
     ?<Constant "error!!!">            12
     ?<Constant "Empty">                8
     ?<Constant "Bookmarks...">        16
     ?<Constant "error">                8
      Others                          116

 
  2 972 bytes in segment CODE
    455 bytes in segment DATA_C
 32 852 bytes in segment DATA_Z
     12 bytes in segment INITTAB
 
  2 868 bytes of CODE  memory (+ 116 bytes shared)
    455 bytes of CONST memory
 32 852 bytes of DATA  memory

Errors: none
Warnings: none
