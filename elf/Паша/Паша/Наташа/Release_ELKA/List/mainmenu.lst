##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION    08/May/2008  18:55:40 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  D:\Pasha\elf\Паша\Паша\Наташа\mainmenu.c             #
#    Command line    =  D:\Pasha\elf\Паша\Паша\Наташа\mainmenu.c -D          #
#                       NEWSGOLD -D ELKA --preprocess                        #
#                       D:\Pasha\elf\Паша\Паша\Наташа\Release_ELKA\List\     #
#                       -lC D:\Pasha\elf\Паша\Паша\Наташа\Release_ELKA\List\ #
#                        -o D:\Pasha\elf\Паша\Паша\Наташа\Release_ELKA\Obj\  #
#                       -z9 --cpu_mode arm --endian little --cpu ARM926EJ-S  #
#                       --stack_align 4 --interwork -e --fpu None            #
#                       --dlib_config "D:\Pasha\Embedded Workbench 4.0       #
#                       Evaluation2\ARM\LIB\dl5tpainl8n.h" -I                #
#                       "D:\Pasha\Embedded Workbench 4.0                     #
#                       Evaluation2\ARM\INC\" --inline_threshold=2           #
#    List file       =  D:\Pasha\elf\Паша\Паша\Наташа\Release_ELKA\List\main #
#                       menu.lst                                             #
#    Object file     =  D:\Pasha\elf\Паша\Паша\Наташа\Release_ELKA\Obj\mainm #
#                       enu.r79                                              #
#                                                                            #
#                                                                            #
##############################################################################

D:\Pasha\elf\Паша\Паша\Наташа\mainmenu.c
      1          #include "../inc/swilib.h"
      2          #include "../inc/cfg_items.h"
      3          #include "../inc/pnglist.h"
      4          #include "NatICQ.h"
      5          #include "history.h"
      6          #include "mainmenu.h"
      7          #include "main.h"
      8          #include "conf_loader.h"
      9          #include "status_change.h"
     10          #include "language.h"
     11          #include "revision.h"
     12          #include "manage_cl.h"
     13          #include "rect_patcher.h"

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void patch_header(HEADER_DESC const *)
   \                     patch_header:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0000A0E3           MOV      R0,#+0
   \   0000000C   B000C4E1           STRH     R0,[R4, #+0]
   \   00000010   1800A0E3           MOV      R0,#+24
   \   00000014   B200C4E1           STRH     R0,[R4, #+2]
   \   00000018   888100EF           SWI      +33160
   \   0000001C   010040E2           SUB      R0,R0,#+1
   \   00000020   B400C4E1           STRH     R0,[R4, #+4]
   \   00000024   8A8100EF           SWI      +33162
   \   00000028   170080E2           ADD      R0,R0,#+23
   \   0000002C   B600C4E1           STRH     R0,[R4, #+6]
   \   00000030   1080BDE8           POP      {R4,PC}          ;; return
     14          #include "cl_work.h"
     15          
     16          //==============================================================================
     17          int MainMenu_ID;
     18          
     19          extern int CurrentStatus;
     20          extern int CurrentXStatus;
     21          extern DYNPNGICONLIST *XStatusesImgList;
     22          extern int *XStatusesIconArray;
     23          extern  int S_ICONS[];
     24          extern const SOFTKEYSTAB menu_skt;
     25          
     26          
     27          
     28          extern int Is_Vibra_Enabled;
     29          extern unsigned int Is_Sounds_Enabled; 
     30          extern int Is_Show_Offline;
     31          extern int Is_Show_Groups;
     32          
     33          

   \                                 In segment CODE, align 4, keep-with-next
     34          static void ChangeVibraMode(void)
     35          {
     36            Is_Vibra_Enabled=!(Is_Vibra_Enabled);
   \                     ChangeVibraMode:
   \   00000000   ........           LDR      R0,??DataTable8  ;; Is_Vibra_Enabled
   \   00000004   ........           B        ?Subroutine12
     37            SUBPROC((void*)WriteDefSettings);
     38            RefreshGUI();
     39          }

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine12:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   001090E5           LDR      R1,[R0, #+0]
   \   00000008   000051E3           CMP      R1,#+0
   \   0000000C   0110A003           MOVEQ    R1,#+1
   \   00000010   0010A013           MOVNE    R1,#+0
   \   00000014   001080E5           STR      R1,[R0, #+0]
   \   00000018   ........           LDR      R0,??DataTable6  ;; WriteDefSettings
   \   0000001C   710100EF           SWI      +369
   \                     ??Subroutine12_0:
   \   00000020   960100EF           SWI      +406
   \   00000024   0080BDE8           POP      {PC}             ;; return
     40            

   \                                 In segment CODE, align 4, keep-with-next
     41          static void ChangeSoundMode(void)
     42          {
     43            Is_Sounds_Enabled=!(Is_Sounds_Enabled);
   \                     ChangeSoundMode:
   \   00000000   ........           LDR      R0,??DataTable9  ;; Is_Sounds_Enabled
   \   00000004                      REQUIRE ?Subroutine12
   \   00000004                      ;; // Fall through to label ?Subroutine12
     44            SUBPROC((void*)WriteDefSettings);
     45            RefreshGUI();
     46          }
     47          

   \                                 In segment CODE, align 4, keep-with-next
     48          static void ChangeShowOfflineMode(void)
     49          {
     50            void RecountMenu(CLIST *req, int needfocus);
     51            Is_Show_Offline=!(Is_Show_Offline);
   \                     ChangeShowOfflineMode:
   \   00000000   ........           LDR      R0,??DataTable10  ;; Is_Show_Offline
   \   00000004   00402DE9           PUSH     {LR}
   \   00000008   001090E5           LDR      R1,[R0, #+0]
   \   0000000C   000051E3           CMP      R1,#+0
   \   00000010   0110A003           MOVEQ    R1,#+1
   \   00000014   0010A013           MOVNE    R1,#+0
   \   00000018   001080E5           STR      R1,[R0, #+0]
     52            SUBPROC((void*)WriteDefSettings);
   \   0000001C   ........           LDR      R0,??DataTable6  ;; WriteDefSettings
   \   00000020   710100EF           SWI      +369
     53            RecountMenu(NULL, 1);
   \   00000024   0110A0E3           MOV      R1,#+1
   \   00000028   0000A0E3           MOV      R0,#+0
   \   0000002C   ........           _BLF     RecountMenu,??RecountMenu??rA
     54            RefreshGUI();
   \   00000030   ........           B        ??Subroutine12_0
     55          }
     56          

   \                                 In segment CODE, align 4, keep-with-next
     57          static void ChangeShowGroupsMode(void)
     58          {
     59            void RecountMenu(CLIST *req, int needfocus);
     60            Is_Show_Groups=!(Is_Show_Groups);
   \                     ChangeShowGroupsMode:
   \   00000000   ........           LDR      R0,??DataTable11  ;; Is_Show_Groups
   \   00000004   00402DE9           PUSH     {LR}
   \   00000008   001090E5           LDR      R1,[R0, #+0]
   \   0000000C   000051E3           CMP      R1,#+0
   \   00000010   0110A003           MOVEQ    R1,#+1
   \   00000014   0010A013           MOVNE    R1,#+0
   \   00000018   001080E5           STR      R1,[R0, #+0]
     61            SUBPROC((void*)WriteDefSettings);
   \   0000001C   ........           LDR      R0,??DataTable6  ;; WriteDefSettings
   \   00000020   710100EF           SWI      +369
     62            ResortCL();
   \   00000024   ........           _BLF     ResortCL,??ResortCL??rA
     63            RecountMenu(NULL, 1);
   \   00000028   0110A0E3           MOV      R1,#+1
   \   0000002C   0000A0E3           MOV      R0,#+0
   \   00000030   ........           _BLF     RecountMenu,??RecountMenu??rA
     64            RefreshGUI();
   \   00000034   ........           B        ??Subroutine12_0
     65          }
     66          

   \                                 In segment CODE, align 4, keep-with-next
     67          static void EditConfig(void)
     68          {
   \                     EditConfig:
   \   00000000   10402DE9           PUSH     {R4,LR}
     69            extern const char *successed_config_filename;
     70            WSHDR *ws;
     71            ws=AllocWS(150);
   \   00000004   9600A0E3           MOV      R0,#+150
   \   00000008   250100EF           SWI      +293
   \   0000000C   0040A0E1           MOV      R4,R0
     72            str_2ws(ws,successed_config_filename,128);
   \   00000010   30009FE5           LDR      R0,??EditConfig_0  ;; successed_config_filename
   \   00000014   8020A0E3           MOV      R2,#+128
   \   00000018   001090E5           LDR      R1,[R0, #+0]
   \   0000001C   0400A0E1           MOV      R0,R4
   \   00000020   6C0100EF           SWI      +364
     73            ExecuteFile(ws,0,0);
   \   00000024   0020A0E3           MOV      R2,#+0
   \   00000028   0010A0E3           MOV      R1,#+0
   \   0000002C   0400A0E1           MOV      R0,R4
   \   00000030   940000EF           SWI      +148
     74            FreeWS(ws);
   \   00000034   0400A0E1           MOV      R0,R4
   \   00000038   290100EF           SWI      +297
     75            GeneralFuncF1(1);
   \   0000003C   0100A0E3           MOV      R0,#+1
   \   00000040   3B0100EF           SWI      +315
     76          }
   \   00000044   1080BDE8           POP      {R4,PC}          ;; return
   \                     ??EditConfig_0:
   \   00000048   ........           DC32     successed_config_filename
     77          

   \                                 In segment CODE, align 4, keep-with-next
     78          static void Disconnect(void)
     79          {
     80            extern volatile int disautorecconect;
     81            disautorecconect=1;
   \                     Disconnect:
   \   00000000   1C009FE5           LDR      R0,??Disconnect_0  ;; disautorecconect
   \   00000004   00402DE9           PUSH     {LR}
   \   00000008   0110A0E3           MOV      R1,#+1
   \   0000000C   001080E5           STR      R1,[R0, #+0]
     82            extern void end_socket(void);
     83            SUBPROC((void*)end_socket);
   \   00000010   10009FE5           LDR      R0,??Disconnect_0+0x4  ;; end_socket
   \   00000014   710100EF           SWI      +369
     84            GeneralFuncF1(1);
   \   00000018   0100A0E3           MOV      R0,#+1
   \   0000001C   3B0100EF           SWI      +315
     85          }
   \   00000020   0080BDE8           POP      {PC}             ;; return
   \                     ??Disconnect_0:
   \   00000024   ........           DC32     disautorecconect
   \   00000028   ........           DC32     end_socket
     86          

   \                                 In segment CODE, align 4, keep-with-next
     87          static void PingToServer(void)
     88          {
   \                     PingToServer:
   \   00000000   10402DE9           PUSH     {R4,LR}
     89            TPKT *p;
     90            p=malloc(sizeof(PKT)+sizeof(TTime));
   \   00000004   1000A0E3           MOV      R0,#+16
   \   00000008   140000EF           SWI      +20
   \   0000000C   0040A0E1           MOV      R4,R0
     91            GetDateTime(NULL,(TTime *)p->data);
   \   00000010   081084E2           ADD      R1,R4,#+8
   \   00000014   0000A0E3           MOV      R0,#+0
   \   00000018   B40000EF           SWI      +180
     92            p->pkt.uin=0;
   \   0000001C   0000A0E3           MOV      R0,#+0
   \   00000020   000084E5           STR      R0,[R4, #+0]
     93            p->pkt.type=T_ECHO;
   \   00000024   1200A0E3           MOV      R0,#+18
   \   00000028   B400C4E1           STRH     R0,[R4, #+4]
     94            p->pkt.data_len=sizeof(TTime);
   \   0000002C   0800A0E3           MOV      R0,#+8
   \   00000030   B600C4E1           STRH     R0,[R4, #+6]
     95            SUBPROC((void *)SendAnswer,0,p);
   \   00000034   0C009FE5           LDR      R0,??PingToServer_0  ;; SendAnswer
   \   00000038   0420A0E1           MOV      R2,R4
   \   0000003C   0010A0E3           MOV      R1,#+0
   \   00000040   710100EF           SWI      +369
     96          }
   \   00000044   1080BDE8           POP      {R4,PC}          ;; return
   \                     ??PingToServer_0:
   \   00000048   ........           DC32     SendAnswer
     97          

   \                                 In segment CODE, align 4, keep-with-next
     98          static void AboutDlg()
     99          {
    100            char s[256];
    101            snprintf(s,255,LG_COPYRIGHT,__SVN_REVISION__);
   \                     AboutDlg:
   \   00000000   2C209FE5           LDR      R2,??AboutDlg_0  ;; `?<Constant "NATICQ v2.0\\nRevision ...">`
   \   00000004   00402DE9           PUSH     {LR}
   \   00000008   40DF4DE2           SUB      SP,SP,#+256
   \   0000000C   0330A0E3           MOV      R3,#+3
   \   00000010   703E83E3           ORR      R3,R3,#0x700
   \   00000014   FF10A0E3           MOV      R1,#+255
   \   00000018   0D00A0E1           MOV      R0,SP
   \   0000001C   1B0100EF           SWI      +283
    102            ShowMSG(2, (int)s);
   \   00000020   0D10A0E1           MOV      R1,SP
   \   00000024   0200A0E3           MOV      R0,#+2
   \   00000028   480100EF           SWI      +328
    103          }
   \   0000002C   40DF8DE2           ADD      SP,SP,#+256
   \   00000030   0080BDE8           POP      {PC}             ;; return
   \                     ??AboutDlg_0:
   \   00000034   ........           DC32     `?<Constant "NATICQ v2.0\\nRevision ...">`
    104          
    105          static const HEADER_DESC menuhdr={0,0,0,0,NULL,(int)LG_MENU,LGP_NULL};
    106          
    107          static const int mmenusoftkeys[]={0,1,2};
    108          
    109          static const char * const menutexts[11]=
    110          {
    111            LG_MNUSTATUS,
    112            LG_MNUXSTATUS,
    113            LG_MANAGELIST,
    114            LG_MNUVIBRA,
    115            LG_MNUSOUND,
    116            LG_MNUSHOWOFF,
    117            LG_MNUSHOWGROUP,
    118            LG_MNUEDCFG,
    119            LG_MNUDISCONNECT,
    120            LG_MNUPING,
    121            LG_MNUABOUT
    122          };
    123          
    124          /*MENUITEM_DESC menuitems[7]=
    125          {
    126            {S_ICONS,    (int)LG_MNUSTATUS,  LGP_NULL,0,NULL,MENU_FLAG3,MENU_FLAG2},
    127            {NULL,       (int)LG_MNUADDCONT, LGP_NULL,0,NULL,MENU_FLAG3,MENU_FLAG2},
    128            {icon_array, (int)LG_MNUVIBRA,   LGP_NULL,0,NULL,MENU_FLAG3,MENU_FLAG2},
    129            {icon_array, (int)LG_MNUSOUND,   LGP_NULL,0,NULL,MENU_FLAG3,MENU_FLAG2},
    130            {NULL,       (int)LG_MNUEDCFG,   LGP_NULL,0,NULL,MENU_FLAG3,MENU_FLAG2},
    131            {NULL,       (int)LG_MNUPING ,   LGP_NULL,0,NULL,MENU_FLAG3,MENU_FLAG2},
    132            {S_ICONS,    (int)LG_MNUABOUT,   LGP_NULL,0,NULL,MENU_FLAG3,MENU_FLAG2},
    133          };*/
    134          

   \                                 In segment DATA_I, align 4, align-sorted
    135          static const void *menuprocs[11]=
   \                     menuprocs:
   \   00000000                      DS8 44
   \   0000002C                      REQUIRE `?<Initializer for menuprocs>`
    136          {
    137            (void *)DispStatusChangeMenu,
    138            (void *)DispXStatusChangeMenu,
    139            (void *)CreateManageCLMenu,
    140            (void *)ChangeVibraMode,
    141            (void *)ChangeSoundMode,
    142            (void *)ChangeShowOfflineMode,
    143            (void *)ChangeShowGroupsMode,
    144            (void *)EditConfig,
    145            (void *)Disconnect,
    146            (void *)PingToServer,
    147            (void *)AboutDlg,
    148          };
    149          
    150          static const SOFTKEY_DESC mmenu_sk[]=
    151          {
    152            {0x0018,0x0000,(int)LG_SELECT},
    153            {0x0001,0x0000,(int)LG_BACK},
    154            {0x003D,0x0000,(int)LGP_DOIT_PIC}
    155          };
    156          
    157          static const SOFTKEYSTAB mmenu_skt=
    158          {
    159            mmenu_sk,0
    160          };
    161          

   \                                 In segment CODE, align 4, keep-with-next
    162          void tmenu_ghook(void *data, int cmd)
    163          {
   \                     tmenu_ghook:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0140A0E1           MOV      R4,R1
    164            PNGTOP_DESC *pltop=PNG_TOP();
   \   00000008   B98100EF           SWI      +33209
    165            if (cmd==9)
   \   0000000C   090054E3           CMP      R4,#+9
    166            {
    167              pltop->dyn_pltop=NULL;
   \   00000010   0010A003           MOVEQ    R1,#+0
   \   00000014   08108005           STREQ    R1,[R0, #+8]
   \   00000018   1080BD08           POPEQ    {R4,PC}
    168            }
    169            if (cmd==0x0A)
   \   0000001C   0A0054E3           CMP      R4,#+10
   \   00000020   1080BD18           POPNE    {R4,PC}
    170            {
    171              pltop->dyn_pltop=XStatusesImgList;
   \   00000024   0C109FE5           LDR      R1,??tmenu_ghook_0  ;; XStatusesImgList
   \   00000028   001091E5           LDR      R1,[R1, #+0]
   \   0000002C   081080E5           STR      R1,[R0, #+8]
    172              DisableIDLETMR();
   \   00000030   7F0100EF           SWI      +383
    173            }
    174          }
   \   00000034   1080BDE8           POP      {R4,PC}          ;; return
   \                     ??tmenu_ghook_0:
   \   00000038   ........           DC32     XStatusesImgList

   \                                 In segment DATA_Z, align 4, align-sorted
    175          
    176          static int icon_array[2];
   \                     icon_array:
   \   00000000                      DS8 8
   \                     MainMenu_ID:
   \   00000008                      DS8 4
    177          

   \                                 In segment CODE, align 4, keep-with-next
    178          static void menuitemhandler(void *data, int curitem, void *unk)
    179          {
   \                     menuitemhandler:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
    180            WSHDR *ws;
    181            void *item=AllocMenuItem(data);
   \   0000000C   970100EF           SWI      +407
   \   00000010   0060A0E1           MOV      R6,R0
   \   00000014   00019FE5           LDR      R0,??menuitemhandler_1  ;; menutexts
   \   00000018   058190E7           LDR      R8,[R0, +R5, LSL #+2]
   \   0000001C   0800A0E1           MOV      R0,R8
    182            extern const char percent_t[];
    183            ws=AllocMenuWS(data,strlen(menutexts[curitem]));
   \   00000020   1B0000EF           SWI      +27
   \   00000024   0010A0E1           MOV      R1,R0
   \   00000028   0400A0E1           MOV      R0,R4
   \   0000002C   980100EF           SWI      +408
    184            wsprintf(ws,percent_t,menutexts[curitem]);
   \   00000030   E8109FE5           LDR      R1,??menuitemhandler_1+0x4  ;; percent_t
   \   00000034   0070A0E1           MOV      R7,R0
   \   00000038   0820A0E1           MOV      R2,R8
   \   0000003C   240100EF           SWI      +292
    185            switch(curitem)
   \   00000040   ........           LDR      R0,??DataTable12  ;; icon_array
   \   00000044   D8209FE5           LDR      R2,??menuitemhandler_1+0x8  ;; S_ICONS
   \   00000048   0510A0E1           MOV      R1,R5
   \   0000004C   0A0051E3           CMP      R1,#+10
   \   00000050   2B00008A           BHI      ??menuitemhandler_2
   \   00000054   013F8FE2           ADR      R3,??menuitemhandler_0
   \   00000058   0130D3E7           LDRB     R3,[R3, R1]
   \   0000005C   03F18FE0           ADD      PC,PC,R3, LSL #+2
   \                     ??menuitemhandler_0:
   \   00000060   02060C0E           DC8      +2,+6,+12,+14
   \   00000064   15171E20           DC8      +21,+23,+30,+32
   \   00000068   25222400           DC8      +37,+34,+36,+0
    186            {
    187            case 0:
    188              SetMenuItemIconArray(data,item,S_ICONS+CurrentStatus);
   \                     ??menuitemhandler_3:
   \   0000006C   B4009FE5           LDR      R0,??menuitemhandler_1+0xC  ;; CurrentStatus
   \   00000070   000090E5           LDR      R0,[R0, #+0]
   \   00000074   002182E0           ADD      R2,R2,R0, LSL #+2
   \   00000078   1E0000EA           B        ??menuitemhandler_4
    189              break;
    190            case 1:
    191              SetMenuItemIconArray(data,item,XStatusesIconArray+CurrentXStatus);
   \                     ??menuitemhandler_5:
   \   0000007C   A8009FE5           LDR      R0,??menuitemhandler_1+0x10  ;; CurrentXStatus
   \   00000080   A8109FE5           LDR      R1,??menuitemhandler_1+0x14  ;; XStatusesIconArray
   \   00000084   000090E5           LDR      R0,[R0, #+0]
   \   00000088   001091E5           LDR      R1,[R1, #+0]
   \   0000008C   002181E0           ADD      R2,R1,R0, LSL #+2
   \   00000090   180000EA           B        ??menuitemhandler_4
    192              break;
    193            case 2:
    194              SetMenuItemIconArray(data,item,S_ICONS+ICON_ADDCONTACT);
   \                     ??menuitemhandler_6:
   \   00000094   482082E2           ADD      R2,R2,#+72
   \   00000098   160000EA           B        ??menuitemhandler_4
    195              break;
    196            case 3:
    197              SetMenuItemIconArray(data,item,icon_array+(Is_Vibra_Enabled?0:1));
   \                     ??menuitemhandler_7:
   \   0000009C   ........           LDR      R1,??DataTable8  ;; Is_Vibra_Enabled
   \                     ??menuitemhandler_8:
   \   000000A0   001091E5           LDR      R1,[R1, #+0]
   \   000000A4   000051E3           CMP      R1,#+0
   \   000000A8   0010A013           MOVNE    R1,#+0
   \   000000AC   0110A003           MOVEQ    R1,#+1
   \   000000B0   012180E0           ADD      R2,R0,R1, LSL #+2
   \   000000B4   0F0000EA           B        ??menuitemhandler_4
    198              break;
    199            case 4:
    200              SetMenuItemIconArray(data,item,icon_array+(Is_Sounds_Enabled?0:1));
   \                     ??menuitemhandler_9:
   \   000000B8   ........           LDR      R1,??DataTable9  ;; Is_Sounds_Enabled
   \   000000BC   F7FFFFEA           B        ??menuitemhandler_8
    201              break;
    202            case 5:
    203              SetMenuItemIconArray(data,item,icon_array+(Is_Show_Offline?0:1));
   \                     ??menuitemhandler_10:
   \   000000C0   ........           LDR      R1,??DataTable10  ;; Is_Show_Offline
   \   000000C4   001091E5           LDR      R1,[R1, #+0]
   \   000000C8   000051E3           CMP      R1,#+0
   \   000000CC   0010A013           MOVNE    R1,#+0
   \   000000D0   0110A003           MOVEQ    R1,#+1
   \   000000D4   012180E0           ADD      R2,R0,R1, LSL #+2
   \   000000D8   060000EA           B        ??menuitemhandler_4
    204              break;
    205            case 6:
    206              SetMenuItemIconArray(data,item,icon_array+(Is_Show_Groups?0:1));
   \                     ??menuitemhandler_11:
   \   000000DC   ........           LDR      R1,??DataTable11  ;; Is_Show_Groups
   \   000000E0   EEFFFFEA           B        ??menuitemhandler_8
    207              break;    
    208            case 7:
    209              SetMenuItemIconArray(data,item,S_ICONS+ICON_SETTINGS);
   \                     ??menuitemhandler_12:
   \   000000E4   582082E2           ADD      R2,R2,#+88
   \   000000E8   020000EA           B        ??menuitemhandler_4
    210              break;
    211            case 8:
    212              SetMenuItemIconArray(data,item,S_ICONS+IS_OFFLINE);
    213              break;
    214            case 9:
    215              SetMenuItemIconArray(data,item,S_ICONS+ICON_PING);
   \                     ??menuitemhandler_13:
   \   000000EC   542082E2           ADD      R2,R2,#+84
   \   000000F0   000000EA           B        ??menuitemhandler_4
    216              break;
    217            case 10:
    218              SetMenuItemIconArray(data,item,S_ICONS+IS_UNKNOWN);
   \                     ??menuitemhandler_14:
   \   000000F4   382082E2           ADD      R2,R2,#+56
   \                     ??menuitemhandler_4:
   \   000000F8   0610A0E1           MOV      R1,R6
   \   000000FC   0400A0E1           MOV      R0,R4
   \   00000100   990100EF           SWI      +409
    219              break;
    220            }
    221            SetMenuItemText(data, item, ws, curitem);
   \                     ??menuitemhandler_2:
   \   00000104   0530A0E1           MOV      R3,R5
   \   00000108   0720A0E1           MOV      R2,R7
   \   0000010C   0610A0E1           MOV      R1,R6
   \   00000110   0400A0E1           MOV      R0,R4
   \   00000114   9A0100EF           SWI      +410
    222          }
   \   00000118   F081BDE8           POP      {R4-R8,PC}       ;; return
   \                     ??menuitemhandler_1:
   \   0000011C   ........           DC32     menutexts
   \   00000120   ........           DC32     percent_t
   \   00000124   ........           DC32     S_ICONS
   \   00000128   ........           DC32     CurrentStatus
   \   0000012C   ........           DC32     CurrentXStatus
   \   00000130   ........           DC32     XStatusesIconArray
    223          

   \                                 In segment CODE, align 4, keep-with-next
    224          static int tmenu_keyhook(void *data, GUI_MSG *msg)
    225          {
   \                     tmenu_keyhook:
   \   00000000   00402DE9           PUSH     {LR}
    226            if ((msg->keys==0x18)||(msg->keys==0x3D))
   \   00000004   F210D1E1           LDRSH    R1,[R1, #+2]
   \   00000008   180051E3           CMP      R1,#+24
   \   0000000C   3D005113           CMPNE    R1,#+61
   \   00000010   0300001A           BNE      ??tmenu_keyhook_0
    227            {
    228              ((void (*)(void))(menuprocs[GetCurMenuItem(data)]))();
   \   00000014   8F0100EF           SWI      +399
   \   00000018   0C109FE5           LDR      R1,??tmenu_keyhook_1  ;; menuprocs
   \   0000001C   000191E7           LDR      R0,[R1, +R0, LSL #+2]
   \   00000020   30FF2FE1           BLX      R0
    229            }
    230            return(0);
   \                     ??tmenu_keyhook_0:
   \   00000024   0000A0E3           MOV      R0,#+0
   \   00000028   0080BDE8           POP      {PC}             ;; return
   \                     ??tmenu_keyhook_1:
   \   0000002C   ........           DC32     menuprocs
    231          }

   \                                 In segment DATA_C, align 4, align-sorted
   \                     menuhdr:
   \   00000000   000000000000       DC16 0, 0, 0, 0
   \              0000        
   \   00000008   00000000....       DC32 0H, `?<Constant "\\314\\345\\355\\376">`, 2147483647
   \              ....FFFFFF7F
   \   00000014   08000000....       DC32 8, tmenu_keyhook, tmenu_ghook, 0H, mmenusoftkeys, mmenu_skt, 17
   \              ............
   \              00000000....
   \              ............
   \              11000000    
   \   00000030   ........0000       DC32 menuitemhandler, 0H, 0H, 11
   \              000000000000
   \              0B000000    

   \                                 In segment DATA_C, align 4, align-sorted
   \                     mmenusoftkeys:
   \   00000000   000000000100       DC32 0, 1, 2
   \              000002000000

   \                                 In segment DATA_C, align 4, align-sorted
   \                     menutexts:
   \   00000000   ........           DC32 `?<Constant "\\321\\362\\340\\362\\363\\361">`
   \   00000004   ........           DC32 `?<Constant "X-\\321\\362\\340\\362\\363\\361">`
   \   00000008   ........           DC32 `?<Constant "\\323\\357\\360\\340\\342\\353\\345\\355\\3`
   \   0000000C   ........           DC32 `?<Constant "\\320\\345\\346\\350\\354 \\342\\350\\341\\`
   \   00000010   ........           DC32 `?<Constant "\\320\\345\\346\\350\\354 \\347\\342\\363\\`
   \   00000014   ........           DC32 `?<Constant "\\316\\364\\364. \\352\\356\\355\\362\\340`
   \   00000018   ........           DC32 `?<Constant "\\303\\360\\363\\357\\357\\373">`
   \   0000001C   ........           DC32 `?<Constant "\\315\\340\\361\\362\\360\\356\\351\\352\\3`
   \   00000020   ........           DC32 `?<Constant "\\316\\341\\356\\360\\342\\340\\362\\374 \\`
   \   00000024   ........           DC32 `?<Constant "\\317\\350\\355\\343">`
   \   00000028   ........           DC32 `?<Constant "\\316\\341 \\375\\353\\374\\364\\345">`

   \                                 In segment DATA_C, align 4, align-sorted
   \                     mmenu_sk:
   \   00000000   18000000           DC16 24, 0
   \   00000004   ........           DC32 `?<Constant "\\302\\373\\341\\356\\360">`
   \   00000008   01000000           DC16 1, 0
   \   0000000C   ........           DC32 `?<Constant "\\315\\340\\347\\340\\344">`
   \   00000010   3D000000           DC16 61, 0
   \   00000014   FBC0FF7F           DC32 2147467515

   \                                 In segment DATA_C, align 4, align-sorted
   \                     mmenu_skt:
   \   00000000   ........0000       DC32 mmenu_sk, 0
   \              0000        
    232          
    233          
    234          static const MENU_DESC tmenu=
    235          {
    236            8,tmenu_keyhook,tmenu_ghook,NULL,
    237            mmenusoftkeys,
    238            &mmenu_skt,
    239            0x11,//MENU_FLAG,
    240            menuitemhandler,
    241            NULL,//menuitems,
    242            NULL,//menuprocs,
    243            11
    244          };
    245          

   \                                 In segment CODE, align 4, keep-with-next
    246          void ShowMainMenu()
    247          {
   \                     ShowMainMenu:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
    248            icon_array[0]=GetPicNByUnicodeSymbol(CBOX_CHECKED);
   \   00000004   ........           LDR      R4,??DataTable12  ;; icon_array
    249            icon_array[1]=GetPicNByUnicodeSymbol(CBOX_UNCHECKED);
    250            *((int **)(&menuhdr.icon))=S_ICONS+IS_ONLINE;
   \   00000008   60509FE5           LDR      R5,??ShowMainMenu_0  ;; menuhdr
   \   0000000C   1600A0E3           MOV      R0,#+22
   \   00000010   E10C80E3           ORR      R0,R0,#0xE100
   \   00000014   E40100EF           SWI      +484
   \   00000018   000084E5           STR      R0,[R4, #+0]
   \   0000001C   1700A0E3           MOV      R0,#+23
   \   00000020   E10C80E3           ORR      R0,R0,#0xE100
   \   00000024   E40100EF           SWI      +484
   \   00000028   040084E5           STR      R0,[R4, #+4]
   \   0000002C   40009FE5           LDR      R0,??ShowMainMenu_0+0x4  ;; S_ICONS + 44
   \   00000030   080085E5           STR      R0,[R5, #+8]
    251            patch_header(&menuhdr);
   \   00000034   0500A0E1           MOV      R0,R5
   \   00000038   ........           _BLF     patch_header,??patch_header??rA
    252            MainMenu_ID=CreateMenu(0,0,&tmenu,&menuhdr,0,11,0,0);
   \   0000003C   0000A0E3           MOV      R0,#+0
   \   00000040   01002DE9           PUSH     {R0}
   \   00000044   01002DE9           PUSH     {R0}
   \   00000048   0530A0E1           MOV      R3,R5
   \   0000004C   142085E2           ADD      R2,R5,#+20
   \   00000050   0010A0E3           MOV      R1,#+0
   \   00000054   0B00A0E3           MOV      R0,#+11
   \   00000058   01002DE9           PUSH     {R0}
   \   0000005C   0000A0E3           MOV      R0,#+0
   \   00000060   01002DE9           PUSH     {R0}
   \   00000064   520100EF           SWI      +338
   \   00000068   080084E5           STR      R0,[R4, #+8]
    253          }
   \   0000006C   3F80BDE8           POP      {R0-R5,PC}       ;; return
   \                     ??ShowMainMenu_0:
   \   00000070   ........           DC32     menuhdr
   \   00000074   ........           DC32     S_ICONS + 44

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable6:
   \   00000000   ........           DC32     WriteDefSettings

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable8:
   \   00000000   ........           DC32     Is_Vibra_Enabled

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable9:
   \   00000000   ........           DC32     Is_Sounds_Enabled

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable10:
   \   00000000   ........           DC32     Is_Show_Offline

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable11:
   \   00000000   ........           DC32     Is_Show_Groups

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable12:
   \   00000000   ........           DC32     icon_array

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for menuprocs>`:
   \   00000000   ............       DC32 DispStatusChangeMenu, DispXStatusChangeMenu, CreateManageCLMenu
   \              ............
   \   0000000C   ............       DC32 ChangeVibraMode, ChangeSoundMode, ChangeShowOfflineMode
   \              ............
   \   00000018   ............       DC32 ChangeShowGroupsMode, EditConfig, Disconnect, PingToServer
   \              ............
   \              ........    
   \   00000028   ........           DC32 AboutDlg

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\314\\345\\355\\376">`:
   \   00000000   CCE5EDFE00         DC8 "\314\345\355\376"
   \   00000005   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\321\\362\\340\\362\\363\\361">`:
   \   00000000   D1F2E0F2F3F1       DC8 "\321\362\340\362\363\361"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "X-\\321\\362\\340\\362\\363\\361">`:
   \   00000000   582DD1F2E0F2       DC8 "X-\321\362\340\362\363\361"
   \              F3F100      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\323\\357\\360\\340\\342\\353\\345\\355\\3`:
   \   00000000   D3EFF0E0E2EB       DC8 "\323\357\360\340\342\353\345\355\350\345 \361\357\350\361\352\356\354"
   \              E5EDE8E520F1
   \              EFE8F1EAEEEC
   \              00          
   \   00000013   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\320\\345\\346\\350\\354 \\342\\350\\341\\`:
   \   00000000   D0E5E6E8EC20       DC8 "\320\345\346\350\354 \342\350\341\360\373"
   \              E2E8E1F0FB00

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\320\\345\\346\\350\\354 \\347\\342\\363\\`:
   \   00000000   D0E5E6E8EC20       DC8 "\320\345\346\350\354 \347\342\363\352\340"
   \              E7E2F3EAE000

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\316\\364\\364. \\352\\356\\355\\362\\340`:
   \   00000000   CEF4F42E20EA       DC8 "\316\364\364. \352\356\355\362\340\352\362\373"
   \              EEEDF2E0EAF2
   \              FB00        
   \   0000000E   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\303\\360\\363\\357\\357\\373">`:
   \   00000000   C3F0F3EFEFFB       DC8 "\303\360\363\357\357\373"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\315\\340\\361\\362\\360\\356\\351\\352\\3`:
   \   00000000   CDE0F1F2F0EE       DC8 "\315\340\361\362\360\356\351\352\350"
   \              E9EAE800    
   \   0000000A   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\316\\341\\356\\360\\342\\340\\362\\374 \\`:
   \   00000000   CEE1EEF0E2E0       DC8 "\316\341\356\360\342\340\362\374 \361\342\377\347\374"
   \              F2FC20F1E2FF
   \              E7FC00      
   \   0000000F   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\317\\350\\355\\343">`:
   \   00000000   CFE8EDE300         DC8 "\317\350\355\343"
   \   00000005   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\316\\341 \\375\\353\\374\\364\\345">`:
   \   00000000   CEE120FDEBFC       DC8 "\316\341 \375\353\374\364\345"
   \              F4E500      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\302\\373\\341\\356\\360">`:
   \   00000000   C2FBE1EEF000       DC8 "\302\373\341\356\360"
   \   00000006   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\315\\340\\347\\340\\344">`:
   \   00000000   CDE0E7E0E400       DC8 "\315\340\347\340\344"
   \   00000006   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "NATICQ v2.0\\nRevision ...">`:
   \   00000000   4E4154494351       DC8 4EH, 41H, 54H, 49H, 43H, 51H, 20H, 76H
   \              2076        
   \   00000008   322E300A5265       DC8 32H, 2EH, 30H, 0AH, 52H, 65H, 76H, 69H
   \              7669        
   \   00000010   73696F6E2025       DC8 73H, 69H, 6FH, 6EH, 20H, 25H, 64H, 0AH
   \              640A        
   \   00000018   284329206279       DC8 28H, 43H, 29H, 20H, 62H, 79H, 20H, 52H
   \              2052        
   \   00000020   7374372F4342       DC8 73H, 74H, 37H, 2FH, 43H, 42H, 53H, 49H
   \              5349        
   \   00000028   450A4B72656E       DC8 45H, 0AH, 4BH, 72H, 65H, 6EH, 0AH, 4BH
   \              0A4B        
   \   00000030   696261620A53       DC8 69H, 62H, 61H, 62H, 0AH, 53H, 68H, 61H
   \              6861        
   \   00000038   646F770A5365       DC8 64H, 6FH, 77H, 0AH, 53H, 65H, 6BH, 6CH
   \              6B6C        
   \   00000040   746800             DC8 74H, 68H, 0
   \   00000043   00                 DC8 0

   Maximum stack usage in bytes:

     Function              CSTACK
     --------              ------
     AboutDlg                260
     ChangeShowGroupsMode      4
     ChangeShowOfflineMode     4
     ChangeSoundMode           4
     ChangeVibraMode           4
     Disconnect                4
     EditConfig                8
     PingToServer              8
     ShowMainMenu             28
     menuitemhandler          24
     patch_header              8
     tmenu_ghook               8
     tmenu_keyhook             4


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     patch_header                     52
     ChangeVibraMode                   8
     ?Subroutine12                    40
     ChangeSoundMode                   4
     ChangeShowOfflineMode            52
     ChangeShowGroupsMode             56
     EditConfig                       76
     Disconnect                       44
     PingToServer                     76
     AboutDlg                         56
     menuprocs                        44
     tmenu_ghook                      60
     icon_array                       12
     menuitemhandler                 308
     tmenu_keyhook                    48
     menuhdr                          64
     mmenusoftkeys                    12
     menutexts                        44
     mmenu_sk                         24
     mmenu_skt                         8
     ShowMainMenu                    120
     ??DataTable6                      4
     ??DataTable8                      4
     ??DataTable9                      4
     ??DataTable10                     4
     ??DataTable11                     4
     ??DataTable12                     4
     ?<Initializer for menuprocs>     44
     ?<Constant "\314\345\355\376">    8
     ?<Constant "\321\362\340\362\363\361">
                                       8
     ?<Constant "X-\321\362\340\362\363\361">
                                      12
     ?<Constant "\323\357\360\340\342\353\345\355\3
                                      20
     ?<Constant "\320\345\346\350\354 \342\350\341\
                                      12
     ?<Constant "\320\345\346\350\354 \347\342\363\
                                      12
     ?<Constant "\316\364\364. \352\356\355\362\340
                                      16
     ?<Constant "\303\360\363\357\357\373">
                                       8
     ?<Constant "\315\340\361\362\360\356\351\352\3
                                      12
     ?<Constant "\316\341\356\360\342\340\362\374 \
                                      16
     ?<Constant "\317\350\355\343">    8
     ?<Constant "\316\341 \375\353\374\364\345">
                                      12
     ?<Constant "\302\373\341\356\360">
                                       8
     ?<Constant "\315\340\347\340\344">
                                       8
     ?<Constant "NATICQ v2.0\nRevision ...">
                                      68
      Others                         108

 
 1 108 bytes in segment CODE
   380 bytes in segment DATA_C
    44 bytes in segment DATA_I
    44 bytes in segment DATA_ID
    12 bytes in segment DATA_Z
    24 bytes in segment INITTAB
 
 972 bytes of CODE  memory (+ 160 bytes shared)
 424 bytes of CONST memory
  56 bytes of DATA  memory

Errors: none
Warnings: none
