##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION    08/May/2008  18:55:13 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  D:\Pasha\elf\Паша\Паша\Наташа\cl_work.c              #
#    Command line    =  D:\Pasha\elf\Паша\Паша\Наташа\cl_work.c -D NEWSGOLD  #
#                       -D ELKA --preprocess D:\Pasha\elf\Паша\Паша\Наташа\R #
#                       elease_ELKA\List\ -lC D:\Pasha\elf\Паша\Паша\Наташа\ #
#                       Release_ELKA\List\ -o D:\Pasha\elf\Паша\Паша\Наташа\ #
#                       Release_ELKA\Obj\ -z9 --cpu_mode arm --endian        #
#                       little --cpu ARM926EJ-S --stack_align 4 --interwork  #
#                       -e --fpu None --dlib_config "D:\Pasha\Embedded       #
#                       Workbench 4.0 Evaluation2\ARM\LIB\dl5tpainl8n.h" -I  #
#                       "D:\Pasha\Embedded Workbench 4.0                     #
#                       Evaluation2\ARM\INC\" --inline_threshold=2           #
#    List file       =  D:\Pasha\elf\Паша\Паша\Наташа\Release_ELKA\List\cl_w #
#                       ork.lst                                              #
#    Object file     =  D:\Pasha\elf\Паша\Паша\Наташа\Release_ELKA\Obj\cl_wo #
#                       rk.r79                                               #
#                                                                            #
#                                                                            #
##############################################################################

D:\Pasha\elf\Паша\Паша\Наташа\cl_work.c
      1          #include "../inc/swilib.h"
      2          #include "NatICQ.h"
      3          #include "strings.h"
      4          #include "main.h"
      5          #include "cl_work.h"
      6          
      7          
      8          extern volatile unsigned int GROUP_CACHE; //Текущая группа для добавления
      9          extern volatile CLIST *cltop;
     10          extern int Is_Show_Groups;
     11          extern char ContactT9Key[32];
     12          extern int Is_Show_Offline;
     13          extern int IsActiveUp;
     14          
     15          extern const unsigned int UIN;
     16          extern const char TEMPLATES_PATH[];
     17          

   \                                 In segment CODE, align 4, keep-with-next
     18          void FreeXText(CLIST *t)
     19          {
   \                     FreeXText:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
     20            if (t->xtext) {mfree(t->xtext);t->xtext=NULL;}
   \   00000008   780094E5           LDR      R0,[R4, #+120]
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   1080BD08           POPEQ    {R4,PC}
   \   00000014   150000EF           SWI      +21
   \   00000018   0000A0E3           MOV      R0,#+0
   \   0000001C   780084E5           STR      R0,[R4, #+120]
     21          }
   \   00000020   1080BDE8           POP      {R4,PC}          ;; return
     22          
     23          //Уничтожить список

   \                                 In segment CODE, align 4, keep-with-next
     24          void FreeCLIST(void)
     25          {
     26            CLIST *cl=(CLIST*)cltop;
   \                     FreeCLIST:
   \   00000000   ........           LDR      R0,??DataTable13  ;; cltop
   \   00000004   10402DE9           PUSH     {R4,LR}
   \   00000008   004090E5           LDR      R4,[R0, #+0]
     27            cltop=0;
   \   0000000C   0010A0E3           MOV      R1,#+0
   \   00000010   001080E5           STR      R1,[R0, #+0]
   \   00000014   0F0000EA           B        ??FreeCLIST_0
     28            while(cl)
     29            {
     30              CLIST *p;
     31              if (cl->log) FreeLOGQ(&cl->log);
   \                     ??FreeCLIST_1:
   \   00000018   640094E5           LDR      R0,[R4, #+100]
   \   0000001C   000050E3           CMP      R0,#+0
   \   00000020   0100000A           BEQ      ??FreeCLIST_2
   \   00000024   640084E2           ADD      R0,R4,#+100
   \   00000028   ........           _BLF     FreeLOGQ,??FreeLOGQ??rA
     32              if (cl->answer) mfree(cl->answer);
   \                     ??FreeCLIST_2:
   \   0000002C   680094E5           LDR      R0,[R4, #+104]
   \   00000030   000050E3           CMP      R0,#+0
   \   00000034   0000000A           BEQ      ??FreeCLIST_3
   \   00000038   150000EF           SWI      +21
     33              if (cl->xtext) mfree(cl->xtext);
   \                     ??FreeCLIST_3:
   \   0000003C   780094E5           LDR      R0,[R4, #+120]
   \   00000040   000050E3           CMP      R0,#+0
   \   00000044   0000000A           BEQ      ??FreeCLIST_4
   \   00000048   150000EF           SWI      +21
     34              p=cl;
   \                     ??FreeCLIST_4:
   \   0000004C   0400A0E1           MOV      R0,R4
     35              cl=(CLIST*)(cl->next);
   \   00000050   004094E5           LDR      R4,[R4, #+0]
     36              mfree(p);
   \   00000054   150000EF           SWI      +21
     37            }
   \                     ??FreeCLIST_0:
   \   00000058   000054E3           CMP      R4,#+0
   \   0000005C   EDFFFF1A           BNE      ??FreeCLIST_1
     38          }
   \   00000060   1080BDE8           POP      {R4,PC}          ;; return
     39          
     40          //Прописать всех в offline

   \                                 In segment CODE, align 4, keep-with-next
     41          void FillAllOffline(void)
     42          {
     43            CLIST *cl=(CLIST*)cltop;
   \                     FillAllOffline:
   \   00000000   ........           LDR      R0,??DataTable13  ;; cltop
   \   00000004   30402DE9           PUSH     {R4,R5,LR}
   \   00000008   004090E5           LDR      R4,[R0, #+0]
   \   0000000C   060000EA           B        ??FillAllOffline_0
     44            while(cl)
     45            {
     46              if (!cl->isgroup)
     47              {
     48                LOGQ *lp=cl->log;
     49                while(lp)
     50                {
     51          	lp->ID|=0x18000;
     52          	lp=lp->next;
     53                }
     54              }
     55              if ((cl->state!=0xFFFF)&&
     56          	(!cl->isgroup))     //by BoBa 2.05.2007
     57              {
     58                CLIST *p=cl;
   \                     ??FillAllOffline_1:
   \   00000010   0450A0E1           MOV      R5,R4
     59                p->state=0xFFFF;
   \   00000014   B405C5E1           STRH     R0,[R5, #+84]
     60                FreeXText(p);
   \   00000018   0500A0E1           MOV      R0,R5
   \   0000001C   ........           BL       FreeXText
     61                cl=cl->next;
   \   00000020   004094E5           LDR      R4,[R4, #+0]
     62                ChangeContactPos(p);
   \   00000024   0500A0E1           MOV      R0,R5
   \   00000028   ........           BL       ChangeContactPos
     63                continue;
     64              }
   \                     ??FillAllOffline_0:
   \   0000002C   000054E3           CMP      R4,#+0
   \   00000030   3080BD08           POPEQ    {R4,R5,PC}
   \   00000034   081094E5           LDR      R1,[R4, #+8]
   \   00000038   000051E3           CMP      R1,#+0
   \   0000003C   0700001A           BNE      ??FillAllOffline_2
   \   00000040   640094E5           LDR      R0,[R4, #+100]
   \   00000044   030000EA           B        ??FillAllOffline_3
   \                     ??FillAllOffline_4:
   \   00000048   082090E5           LDR      R2,[R0, #+8]
   \   0000004C   602B82E3           ORR      R2,R2,#0x18000
   \   00000050   082080E5           STR      R2,[R0, #+8]
   \   00000054   000090E5           LDR      R0,[R0, #+0]
   \                     ??FillAllOffline_3:
   \   00000058   000050E3           CMP      R0,#+0
   \   0000005C   F9FFFF1A           BNE      ??FillAllOffline_4
   \                     ??FillAllOffline_2:
   \   00000060   B425D4E1           LDRH     R2,[R4, #+84]
   \   00000064   FF00A0E3           MOV      R0,#+255
   \   00000068   FF0C80E3           ORR      R0,R0,#0xFF00
   \   0000006C   000052E1           CMP      R2,R0
   \   00000070   0100000A           BEQ      ??FillAllOffline_5
   \   00000074   000051E3           CMP      R1,#+0
   \   00000078   E4FFFF0A           BEQ      ??FillAllOffline_1
     65              cl=(CLIST*)(cl->next);
   \                     ??FillAllOffline_5:
   \   0000007C   004094E5           LDR      R4,[R4, #+0]
   \   00000080   E9FFFFEA           B        ??FillAllOffline_0
     66            }
     67          }
     68          
     69          

   \                                 In segment CODE, align 4, keep-with-next
     70          CLIST *FindContactByUin(unsigned int uin)
     71          {
     72            CLIST *t;
     73            t=(CLIST *)cltop;
   \                     FindContactByUin:
   \   00000000   ........           LDR      R1,??DataTable13  ;; cltop
     74            while(t)
     75            {
     76              if ((t->uin==uin)&&(!t->isgroup)) break;
     77              t=t->next;
   \                     ??FindContactByUin_0:
   \   00000004   001091E5           LDR      R1,[R1, #+0]
   \   00000008   000051E3           CMP      R1,#+0
   \   0000000C   0400000A           BEQ      ??FindContactByUin_1
   \   00000010   0C2091E5           LDR      R2,[R1, #+12]
   \   00000014   000052E1           CMP      R2,R0
   \   00000018   08209105           LDREQ    R2,[R1, #+8]
   \   0000001C   00005203           CMPEQ    R2,#+0
   \   00000020   F7FFFF1A           BNE      ??FindContactByUin_0
     78            }
     79            return(t);
   \                     ??FindContactByUin_1:
   \   00000024   ........           B        ?Subroutine17
     80          }

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine17:
   \   00000000   0100A0E1           MOV      R0,R1
   \   00000004   1EFF2FE1           BX       LR               ;; return
     81          

   \                                 In segment CODE, align 4, keep-with-next
     82          CLIST *FindGroupByID(unsigned int grp)
     83          {
     84            CLIST *t;
     85            t=(CLIST *)cltop;
   \                     FindGroupByID:
   \   00000000   ........           LDR      R1,??DataTable13  ;; cltop
     86            while(t)
     87            {
     88              if ((t->group==grp)&&(t->isgroup)) break;
     89              t=t->next;
   \                     ??FindGroupByID_0:
   \   00000004   001091E5           LDR      R1,[R1, #+0]
   \   00000008   000051E3           CMP      R1,#+0
   \   0000000C   0500000A           BEQ      ??FindGroupByID_1
   \   00000010   102091E5           LDR      R2,[R1, #+16]
   \   00000014   000052E1           CMP      R2,R0
   \   00000018   F9FFFF1A           BNE      ??FindGroupByID_0
   \   0000001C   082091E5           LDR      R2,[R1, #+8]
   \   00000020   000052E3           CMP      R2,#+0
   \   00000024   F6FFFF0A           BEQ      ??FindGroupByID_0
     90            }
     91            return(t);
   \                     ??FindGroupByID_1:
   \   00000028                      REQUIRE ?Subroutine17
   \   00000028                      ;; // Fall through to label ?Subroutine17
     92          }
     93          
     94          //Ключи для поиска по T9

   \                                 In segment DATA_C, align 4, align-sorted
     95          static const char table_T9Key[256]=
   \                     table_T9Key:
   \   00000000   313131313131       DC8 31H, 31H, 31H, 31H, 31H, 31H, 31H, 31H
   \              3131        
   \   00000008   313131313131       DC8 31H, 31H, 31H, 31H, 31H, 31H, 31H, 31H
   \              3131        
   \   00000010   313131313131       DC8 31H, 31H, 31H, 31H, 31H, 31H, 31H, 31H
   \              3131        
   \   00000018   313131313131       DC8 31H, 31H, 31H, 31H, 31H, 31H, 31H, 31H
   \              3131        
   \   00000020   31303030312A       DC8 31H, 30H, 30H, 30H, 31H, 2AH, 2AH, 30H
   \              2A30        
   \   00000028   2A2A2A303030       DC8 2AH, 2AH, 2AH, 30H, 30H, 30H, 30H, 2AH
   \              302A        
   \   00000030   303132333435       DC8 30H, 31H, 32H, 33H, 34H, 35H, 36H, 37H
   \              3637        
   \   00000038   383930302A2A       DC8 38H, 39H, 30H, 30H, 2AH, 2AH, 2AH, 30H
   \              2A30        
   \   00000040   303232323333       DC8 30H, 32H, 32H, 32H, 33H, 33H, 33H, 34H
   \              3334        
   \   00000048   343435353536       DC8 34H, 34H, 35H, 35H, 35H, 36H, 36H, 36H
   \              3636        
   \   00000050   373737373838       DC8 37H, 37H, 37H, 37H, 38H, 38H, 38H, 39H
   \              3839        
   \   00000058   393939312A31       DC8 39H, 39H, 39H, 31H, 2AH, 31H, 31H, 30H
   \              3130        
   \   00000060   313232323333       DC8 31H, 32H, 32H, 32H, 33H, 33H, 33H, 34H
   \              3334        
   \   00000068   343435353536       DC8 34H, 34H, 35H, 35H, 35H, 36H, 36H, 36H
   \              3636        
   \   00000070   373737373838       DC8 37H, 37H, 37H, 37H, 38H, 38H, 38H, 39H
   \              3839        
   \   00000078   393939313131       DC8 39H, 39H, 39H, 31H, 31H, 31H, 2AH, 31H
   \              2A31        
   \   00000080   313131313131       DC8 31H, 31H, 31H, 31H, 31H, 31H, 31H, 31H
   \              3131        
   \   00000088   313131313131       DC8 31H, 31H, 31H, 31H, 31H, 31H, 31H, 31H
   \              3131        
   \   00000090   313131313131       DC8 31H, 31H, 31H, 31H, 31H, 31H, 31H, 31H
   \              3131        
   \   00000098   313131313131       DC8 31H, 31H, 31H, 31H, 31H, 31H, 31H, 31H
   \              3131        
   \   000000A0   313131313131       DC8 31H, 31H, 31H, 31H, 31H, 31H, 31H, 31H
   \              3131        
   \   000000A8   333131313131       DC8 33H, 31H, 31H, 31H, 31H, 31H, 31H, 31H
   \              3131        
   \   000000B0   313131313131       DC8 31H, 31H, 31H, 31H, 31H, 31H, 31H, 31H
   \              3131        
   \   000000B8   333131313131       DC8 33H, 31H, 31H, 31H, 31H, 31H, 31H, 31H
   \              3131        
   \   000000C0   323232323333       DC8 32H, 32H, 32H, 32H, 33H, 33H, 33H, 33H
   \              3333        
   \   000000C8   343434343535       DC8 34H, 34H, 34H, 34H, 35H, 35H, 35H, 36H
   \              3536        
   \   000000D0   363637373737       DC8 36H, 36H, 37H, 37H, 37H, 37H, 38H, 38H
   \              3838        
   \   000000D8   383838393939       DC8 38H, 38H, 38H, 39H, 39H, 39H, 39H, 39H
   \              3939        
   \   000000E0   323232323333       DC8 32H, 32H, 32H, 32H, 33H, 33H, 33H, 33H
   \              3333        
   \   000000E8   343434343535       DC8 34H, 34H, 34H, 34H, 35H, 35H, 35H, 36H
   \              3536        
   \   000000F0   363637373737       DC8 36H, 36H, 37H, 37H, 37H, 37H, 38H, 38H
   \              3838        
   \   000000F8   383838393939       DC8 38H, 38H, 38H, 39H, 39H, 39H, 39H, 39H
   \              3939        
     96          "11111111111111111111111111111111"
     97          "10001**0***0000*012345678900***0"
     98          "0222333444555666777788899991*110"
     99          "122233344455566677778889999111*1"
    100          "11111111111111111111111111111111"
    101          "11111111311111111111111131111111"
    102          "22223333444455566677778888899999"
    103          "22223333444455566677778888899999";
    104          
    105          

   \                                 In segment CODE, align 4, keep-with-next
    106          CLIST *FindContactByNS(int *i, int si, int act_flag, CLIST *search_contact)
    107          {
   \                     FindContactByNS:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    108            CLIST *t;
    109            t=(CLIST *)cltop;
   \   00000008   ........           LDR      R0,??DataTable13  ;; cltop
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   008090E5           LDR      R8,[R0, #+0]
   \   00000014   0260A0E1           MOV      R6,R2
   \   00000018   0370A0E1           MOV      R7,R3
    110            char *s;
    111            char *d;
    112            int c;
    113            int grp_id=0;
   \   0000001C   0090A0E3           MOV      R9,#+0
    114            int grp_dis=0;
   \   00000020   00A0A0E3           MOV      R10,#+0
   \   00000024   050000EA           B        ??FindContactByNS_0
    115            while(t)
    116            {
    117              if (t->isgroup)
    118              {
    119                grp_id=t->group;
    120                grp_dis=t->state;
    121              }
    122              if (act_flag<2)
    123              {
    124                if ((act_flag)&&(!t->isactive)) goto L_NOT9;
    125                if ((!act_flag)&&(t->isactive)) goto L_NOT9;
    126              }
    127              if ((si==IS_ANY)||(GetIconIndex(t)==si))
    128              {
    129                s=ContactT9Key;
    130                if ((!Is_Show_Groups)&&(t->isgroup)) goto L_NOT9;
    131                
    132                if ((!t->isgroup)&&(t->group==grp_id)&&(grp_dis)&&(!(*s))) goto L_NOT9;
    133                
    134                if (!Is_Show_Offline) // by Seklth 13.06.2007
    135                  if ((!t->isgroup)&&(!t->isactive)&&(t->state==0xFFFF)&&(t->uin!=UIN)&&(!(*s))) 
    136                    if (!t->isunread) goto L_NOT9;
    137                
    138                d=t->name;
    139                while(c=*s++)
    140                {
    141          	if (c!=table_T9Key[*d++]) goto L_NOT9;
    142                }
    143                if (search_contact==t) return t; //Нашли контакт по адресу
    144                if (!(*i)) return(t);
   \                     ??FindContactByNS_1:
   \   00000028   000094E5           LDR      R0,[R4, #+0]
   \   0000002C   000050E3           CMP      R0,#+0
   \   00000030   4A00000A           BEQ      ??FindContactByNS_2
    145                (*i)--;
   \   00000034   010040E2           SUB      R0,R0,#+1
   \   00000038   000084E5           STR      R0,[R4, #+0]
    146              }
    147            L_NOT9:
    148              t=t->next;
   \                     ??FindContactByNS_3:
   \   0000003C   008098E5           LDR      R8,[R8, #+0]
   \                     ??FindContactByNS_0:
   \   00000040   000058E3           CMP      R8,#+0
   \   00000044   4700000A           BEQ      ??FindContactByNS_4
   \   00000048   080098E5           LDR      R0,[R8, #+8]
   \   0000004C   000050E3           CMP      R0,#+0
   \   00000050   10909815           LDRNE    R9,[R8, #+16]
   \   00000054   B4A5D811           LDRHNE   R10,[R8, #+84]
   \   00000058   020056E3           CMP      R6,#+2
   \   0000005C   070000AA           BGE      ??FindContactByNS_5
   \   00000060   700098E5           LDR      R0,[R8, #+112]
   \   00000064   000056E3           CMP      R6,#+0
   \   00000068   0200000A           BEQ      ??FindContactByNS_6
   \   0000006C   000050E3           CMP      R0,#+0
   \   00000070   0200001A           BNE      ??FindContactByNS_5
   \   00000074   F0FFFFEA           B        ??FindContactByNS_3
   \                     ??FindContactByNS_6:
   \   00000078   000050E3           CMP      R0,#+0
   \   0000007C   EEFFFF1A           BNE      ??FindContactByNS_3
   \                     ??FindContactByNS_5:
   \   00000080   010075E3           CMN      R5,#+1
   \   00000084   0300000A           BEQ      ??FindContactByNS_7
   \   00000088   0800A0E1           MOV      R0,R8
   \   0000008C   ........           _BLF     GetIconIndex,??GetIconIndex??rA
   \   00000090   050050E1           CMP      R0,R5
   \   00000094   E8FFFF1A           BNE      ??FindContactByNS_3
   \                     ??FindContactByNS_7:
   \   00000098   ........           LDR      R3,??DataTable12  ;; Is_Show_Groups
   \   0000009C   CC209FE5           LDR      R2,??FindContactByNS_8  ;; ContactT9Key
   \   000000A0   003093E5           LDR      R3,[R3, #+0]
   \   000000A4   081098E5           LDR      R1,[R8, #+8]
   \   000000A8   0200A0E1           MOV      R0,R2
   \   000000AC   000053E3           CMP      R3,#+0
   \   000000B0   0100001A           BNE      ??FindContactByNS_9
   \   000000B4   000051E3           CMP      R1,#+0
   \   000000B8   DFFFFF1A           BNE      ??FindContactByNS_3
   \                     ??FindContactByNS_9:
   \   000000BC   0020D2E5           LDRB     R2,[R2, #+0]
   \   000000C0   000051E3           CMP      R1,#+0
   \   000000C4   10309805           LDREQ    R3,[R8, #+16]
   \   000000C8   09005301           CMPEQ    R3,R9
   \   000000CC   0300001A           BNE      ??FindContactByNS_10
   \   000000D0   00005AE3           CMP      R10,#+0
   \   000000D4   0100000A           BEQ      ??FindContactByNS_10
   \   000000D8   000052E3           CMP      R2,#+0
   \   000000DC   D6FFFF0A           BEQ      ??FindContactByNS_3
   \                     ??FindContactByNS_10:
   \   000000E0   8C309FE5           LDR      R3,??FindContactByNS_8+0x4  ;; Is_Show_Offline
   \   000000E4   003093E5           LDR      R3,[R3, #+0]
   \   000000E8   000053E3           CMP      R3,#+0
   \   000000EC   00005103           CMPEQ    R1,#+0
   \   000000F0   70109805           LDREQ    R1,[R8, #+112]
   \   000000F4   00005103           CMPEQ    R1,#+0
   \   000000F8   B415D801           LDRHEQ   R1,[R8, #+84]
   \   000000FC   FF30A003           MOVEQ    R3,#+255
   \   00000100   FF3C8303           ORREQ    R3,R3,#0xFF00
   \   00000104   03005101           CMPEQ    R1,R3
   \   00000108   0800001A           BNE      ??FindContactByNS_11
   \   0000010C   64309FE5           LDR      R3,??FindContactByNS_8+0x8  ;; UIN
   \   00000110   0C1098E5           LDR      R1,[R8, #+12]
   \   00000114   003093E5           LDR      R3,[R3, #+0]
   \   00000118   030051E1           CMP      R1,R3
   \   0000011C   0300000A           BEQ      ??FindContactByNS_11
   \   00000120   000052E3           CMP      R2,#+0
   \   00000124   58109805           LDREQ    R1,[R8, #+88]
   \   00000128   00005103           CMPEQ    R1,#+0
   \   0000012C   C2FFFF0A           BEQ      ??FindContactByNS_3
   \                     ??FindContactByNS_11:
   \   00000130   44C09FE5           LDR      R12,??FindContactByNS_8+0xC  ;; table_T9Key
   \   00000134   141088E2           ADD      R1,R8,#+20
   \   00000138   030000EA           B        ??FindContactByNS_12
   \                     ??FindContactByNS_13:
   \   0000013C   ........           LDRB     R3,[R1], #+1
   \   00000140   0C30D3E7           LDRB     R3,[R3, +R12]
   \   00000144   030052E1           CMP      R2,R3
   \   00000148   BBFFFF1A           BNE      ??FindContactByNS_3
   \                     ??FindContactByNS_12:
   \   0000014C   ........           LDRB     R2,[R0], #+1
   \   00000150   000052E3           CMP      R2,#+0
   \   00000154   F8FFFF1A           BNE      ??FindContactByNS_13
   \   00000158   080057E1           CMP      R7,R8
   \   0000015C   B1FFFF1A           BNE      ??FindContactByNS_1
   \                     ??FindContactByNS_2:
   \   00000160   0800A0E1           MOV      R0,R8
   \   00000164   F087BDE8           POP      {R4-R10,PC}
    149            }
    150            return(t);
   \                     ??FindContactByNS_4:
   \   00000168   0000A0E3           MOV      R0,#+0
   \   0000016C   F087BDE8           POP      {R4-R10,PC}      ;; return
   \                     ??FindContactByNS_8:
   \   00000170   ........           DC32     ContactT9Key
   \   00000174   ........           DC32     Is_Show_Offline
   \   00000178   ........           DC32     UIN
   \   0000017C   ........           DC32     table_T9Key
    151          }
    152          
    153          

   \                                 In segment CODE, align 4, keep-with-next
    154          int CountContacts(void)
    155          {
   \                     CountContacts:
   \   00000000   01402DE9           PUSH     {R0,LR}
    156            int l=-1;
   \   00000004   0010E0E3           MVN      R1,#+0
   \   00000008   00108DE5           STR      R1,[SP, #+0]
    157            FindContactByNS(&l,IS_ANY,2,NULL);
   \   0000000C   0030A0E3           MOV      R3,#+0
   \   00000010   0220A0E3           MOV      R2,#+2
   \   00000014   0D00A0E1           MOV      R0,SP
   \   00000018   ........           BL       FindContactByNS
    158            l=-1-l;
    159            return l;
   \   0000001C   00109DE5           LDR      R1,[SP, #+0]
   \   00000020   0000E0E3           MVN      R0,#+0
   \   00000024   010040E0           SUB      R0,R0,R1
   \   00000028   0280BDE8           POP      {R1,PC}          ;; return
    160          }
    161          

   \                                 In segment CODE, align 4, keep-with-next
    162          CLIST *FindContactByN(int i)
    163          {
   \                     FindContactByN:
   \   00000000   01402DE9           PUSH     {R0,LR}
    164            CLIST *t;
    165            int f=IsActiveUp;
    166            if (f)
   \   00000004   ........           LDR      R0,??DataTable7  ;; IsActiveUp
   \   00000008   000090E5           LDR      R0,[R0, #+0]
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   0B00000A           BEQ      ??FindContactByN_0
    167            {
    168              t=FindContactByNS(&i,IS_ANY,1,NULL); if ((!i)&&(t)) return (t);
   \   00000014   0030A0E3           MOV      R3,#+0
   \   00000018   0120A0E3           MOV      R2,#+1
   \   0000001C   001062E2           RSB      R1,R2,#+0
   \   00000020   0D00A0E1           MOV      R0,SP
   \   00000024   ........           BL       FindContactByNS
   \   00000028   00109DE5           LDR      R1,[SP, #+0]
   \   0000002C   000051E3           CMP      R1,#+0
   \   00000030   0100001A           BNE      ??FindContactByN_1
   \   00000034   000050E3           CMP      R0,#+0
   \   00000038   0280BD18           POPNE    {R1,PC}
    169              f=0;
   \                     ??FindContactByN_1:
   \   0000003C   0020A0E3           MOV      R2,#+0
   \   00000040   000000EA           B        ??FindContactByN_2
    170            }
    171            else f=2;
   \                     ??FindContactByN_0:
   \   00000044   0220A0E3           MOV      R2,#+2
    172            t=FindContactByNS(&i,IS_ANY,f,NULL);
   \                     ??FindContactByN_2:
   \   00000048   0030A0E3           MOV      R3,#+0
   \   0000004C   0310E0E1           MVN      R1,R3
   \   00000050   0D00A0E1           MOV      R0,SP
   \   00000054   ........           BL       FindContactByNS
   \   00000058   0280BDE8           POP      {R1,PC}
    173            return t;
    174          }
    175          

   \                                 In segment CODE, align 4, keep-with-next
    176          int FindContactByContact(CLIST *p)
    177          {
   \                     FindContactByContact:
   \   00000000   11402DE9           PUSH     {R0,R4,LR}
    178            int l=-1;
   \   00000004   0010E0E3           MVN      R1,#+0
   \   00000008   00108DE5           STR      R1,[SP, #+0]
   \   0000000C   0040A0E1           MOV      R4,R0
    179            //  CLIST *t;
    180            int f=IsActiveUp;
    181            if (f)
   \   00000010   ........           LDR      R0,??DataTable7  ;; IsActiveUp
   \   00000014   000090E5           LDR      R0,[R0, #+0]
   \   00000018   000050E3           CMP      R0,#+0
   \   0000001C   0B00000A           BEQ      ??FindContactByContact_0
    182            {
    183              if (FindContactByNS(&l,IS_ANY,1,p)) return -1-l;
   \   00000020   0430A0E1           MOV      R3,R4
   \   00000024   0120A0E3           MOV      R2,#+1
   \   00000028   0D00A0E1           MOV      R0,SP
   \   0000002C   ........           BL       FindContactByNS
   \   00000030   000050E3           CMP      R0,#+0
   \   00000034   0300000A           BEQ      ??FindContactByContact_1
   \                     ??FindContactByContact_2:
   \   00000038   00109DE5           LDR      R1,[SP, #+0]
   \   0000003C   0000E0E3           MVN      R0,#+0
   \   00000040   010040E0           SUB      R0,R0,R1
   \   00000044   1280BDE8           POP      {R1,R4,PC}       ;; return
    184              f=0;
   \                     ??FindContactByContact_1:
   \   00000048   0020A0E3           MOV      R2,#+0
   \   0000004C   000000EA           B        ??FindContactByContact_3
    185            }
    186            else f=2;
   \                     ??FindContactByContact_0:
   \   00000050   0220A0E3           MOV      R2,#+2
    187            FindContactByNS(&l,IS_ANY,f,p);
   \                     ??FindContactByContact_3:
   \   00000054   0430A0E1           MOV      R3,R4
   \   00000058   0010E0E3           MVN      R1,#+0
   \   0000005C   0D00A0E1           MOV      R0,SP
   \   00000060   ........           BL       FindContactByNS
   \   00000064   F3FFFFEA           B        ??FindContactByContact_2
    188            return -1-l;
    189          }
    190          

   \                                 In segment CODE, align 4, keep-with-next
    191          void SwapContacts(CLIST *first, CLIST *second)
    192          {
    193            CLIST *tp;
    194            if ((tp=second->next)) tp->prev=first;
   \                     SwapContacts:
   \   00000000   002091E5           LDR      R2,[R1, #+0]
   \   00000004   000052E3           CMP      R2,#+0
   \   00000008   04008215           STRNE    R0,[R2, #+4]
    195            if ((tp=first->prev)) tp->next=second;
   \   0000000C   042090E5           LDR      R2,[R0, #+4]
   \   00000010   000052E3           CMP      R2,#+0
   \   00000014   00108215           STRNE    R1,[R2, #+0]
    196            first->next=second->next;
   \   00000018   002091E5           LDR      R2,[R1, #+0]
   \   0000001C   002080E5           STR      R2,[R0, #+0]
    197            second->next=first;
   \   00000020   000081E5           STR      R0,[R1, #+0]
    198            second->prev=first->prev;
   \   00000024   042090E5           LDR      R2,[R0, #+4]
   \   00000028   042081E5           STR      R2,[R1, #+4]
    199            first->prev=second;
   \   0000002C   041080E5           STR      R1,[R0, #+4]
    200          }
   \   00000030   1EFF2FE1           BX       LR               ;; return
    201          

   \                                 In segment CODE, align 4, keep-with-next
    202          void ChangeContactPos(CLIST *p)
    203          {
   \                     ChangeContactPos:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    204            CLIST *t;
    205            if ((t=p->prev))
   \   00000008   045094E5           LDR      R5,[R4, #+4]
   \   0000000C   000055E3           CMP      R5,#+0
   \   00000010   0B00000A           BEQ      ??ChangeContactPos_0
   \   00000014   050000EA           B        ??ChangeContactPos_1
    206            {
    207              //Проверяем, не надо ли всплывать
    208              while(CompareContacts(t,p)>0)
    209              {
    210                //Всплываем вверх списка
    211                SwapContacts(t,p);
   \                     ??ChangeContactPos_2:
   \   00000018   0410A0E1           MOV      R1,R4
   \   0000001C   0500A0E1           MOV      R0,R5
   \   00000020   ........           BL       SwapContacts
    212                if (!(t=p->prev)) return; //Всплыли
   \   00000024   045094E5           LDR      R5,[R4, #+4]
   \   00000028   000055E3           CMP      R5,#+0
   \   0000002C   3080BD08           POPEQ    {R4,R5,PC}
    213              }
   \                     ??ChangeContactPos_1:
   \   00000030   0410A0E1           MOV      R1,R4
   \   00000034   0500A0E1           MOV      R0,R5
   \   00000038   ........           BL       CompareContacts
   \   0000003C   010050E3           CMP      R0,#+1
   \   00000040   F4FFFFAA           BGE      ??ChangeContactPos_2
    214            }
    215            if ((t=p->next))
   \                     ??ChangeContactPos_0:
   \   00000044   005094E5           LDR      R5,[R4, #+0]
   \   00000048   000055E3           CMP      R5,#+0
   \   0000004C   3080BD08           POPEQ    {R4,R5,PC}
    216            {
    217              //Проверяем, не надо ли углубляться
    218              while(CompareContacts(p,t)>0)
   \                     ??ChangeContactPos_3:
   \   00000050   0510A0E1           MOV      R1,R5
   \   00000054   0400A0E1           MOV      R0,R4
   \   00000058   ........           BL       CompareContacts
   \   0000005C   010050E3           CMP      R0,#+1
   \   00000060   3080BDB8           POPLT    {R4,R5,PC}
    219              {
    220                SwapContacts(p,t);
   \   00000064   0510A0E1           MOV      R1,R5
   \   00000068   0400A0E1           MOV      R0,R4
   \   0000006C   ........           BL       SwapContacts
    221                if (!(t=p->next)) return; //Углубились нах ;)
   \   00000070   005094E5           LDR      R5,[R4, #+0]
   \   00000074   000055E3           CMP      R5,#+0
   \   00000078   F4FFFF1A           BNE      ??ChangeContactPos_3
   \   0000007C   3080BDE8           POP      {R4,R5,PC}       ;; return
    222              }
    223            }
    224          }
    225          

   \                                 In segment CODE, align 4, keep-with-next
    226          int CompareContacts(CLIST *t, CLIST *p)
    227          {
   \                     CompareContacts:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    228            int c;
    229            if (Is_Show_Groups)
   \   00000008   ........           LDR      R0,??DataTable12  ;; Is_Show_Groups
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   000090E5           LDR      R0,[R0, #+0]
   \   00000014   000050E3           CMP      R0,#+0
    230            {
    231              if ((c=p->group-t->group))
   \   00000018   10009515           LDRNE    R0,[R5, #+16]
   \   0000001C   10109415           LDRNE    R1,[R4, #+16]
   \   00000020   01005010           SUBSNE   R0,R0,R1
    232              {
    233                return(c);
   \   00000024   7080BD18           POPNE    {R4-R6,PC}
    234              }
    235            }
    236            
    237            extern const int SORT_CLIST;
    238            int ip=GetIconIndex(p);
   \   00000028   0500A0E1           MOV      R0,R5
   \   0000002C   ........           _BLF     GetIconIndex,??GetIconIndex??rA
   \   00000030   0060A0E1           MOV      R6,R0
    239            int it=GetIconIndex(t);
   \   00000034   0400A0E1           MOV      R0,R4
   \   00000038   ........           _BLF     GetIconIndex,??GetIconIndex??rA
    240            switch (SORT_CLIST)
   \   0000003C   4C109FE5           LDR      R1,??CompareContacts_0  ;; SORT_CLIST
   \   00000040   001091E5           LDR      R1,[R1, #+0]
   \   00000044   000051E3           CMP      R1,#+0
   \   00000048   0200000A           BEQ      ??CompareContacts_1
   \   0000004C   011051E2           SUBS     R1,R1,#+1
   \   00000050   0800000A           BEQ      ??CompareContacts_2
   \   00000054   090000EA           B        ??CompareContacts_3
    241            {
    242            case 0: // by name
    243              if ((ip>IS_OFFLINE)&&(ip<IS_MSG)&&
    244          	(it>IS_OFFLINE)&&(it<IS_MSG)) break;
   \                     ??CompareContacts_1:
   \   00000058   000056E3           CMP      R6,#+0
   \   0000005C   0500000A           BEQ      ??CompareContacts_2
   \   00000060   0D0056E3           CMP      R6,#+13
   \   00000064   0300002A           BCS      ??CompareContacts_2
   \   00000068   000050E3           CMP      R0,#+0
   \   0000006C   0100000A           BEQ      ??CompareContacts_2
   \   00000070   0D0050E3           CMP      R0,#+13
   \   00000074   0100003A           BCC      ??CompareContacts_3
    245            case 1: // by status
    246              if ((c=ip-it))
   \                     ??CompareContacts_2:
   \   00000078   000056E0           SUBS     R0,R6,R0
   \   0000007C   7080BD18           POPNE    {R4-R6,PC}
    247              {
    248                return(c);
    249              }
    250              break;
    251            }
    252            
    253            return(strcmp_nocase(t->name,p->name));
   \                     ??CompareContacts_3:
   \   00000080   141085E2           ADD      R1,R5,#+20
   \   00000084   140084E2           ADD      R0,R4,#+20
   \   00000088   ........           _BLF     strcmp_nocase,??strcmp_nocase??rA
   \   0000008C   7080BDE8           POP      {R4-R6,PC}       ;; return
   \                     ??CompareContacts_0:
   \   00000090   ........           DC32     SORT_CLIST
    254          }
    255          
    256          

   \                                 In segment CODE, align 4, keep-with-next
    257          CLIST *AddContactOrGroup(CLIST **top, CLIST *p)
    258          {
   \                     AddContactOrGroup:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    259            CLIST *t;
    260            CLIST *pr;
    261            t=*top;
   \   00000008   006094E5           LDR      R6,[R4, #+0]
   \   0000000C   0150A0E1           MOV      R5,R1
    262            if (t)
   \   00000010   000056E3           CMP      R6,#+0
   \   00000014   0300001A           BNE      ??AddContactOrGroup_0
    263            {
    264              //Не первый
    265              while(CompareContacts(t,p)<0)
    266              {
    267                if (!(pr=t->next))
    268                {
    269          	//добавляем в конец
    270          	t->next=p;
    271          	p->prev=t;
    272          	return(p);
    273                }
    274                t=pr;
    275              }
    276              if ((pr=t->prev))
    277                pr->next=p;
    278              else
    279                *top=p;
    280              p->prev=pr;
    281              p->next=t;
    282              t->prev=p;
    283            }
    284            else
    285            {
    286              //Первый
    287              *top=p;
   \   00000018   005084E5           STR      R5,[R4, #+0]
    288            }
    289            return(p);
   \                     ??AddContactOrGroup_1:
   \   0000001C   0500A0E1           MOV      R0,R5
   \   00000020   7080BDE8           POP      {R4-R6,PC}       ;; return
   \                     ??AddContactOrGroup_2:
   \   00000024   0060A0E1           MOV      R6,R0
   \                     ??AddContactOrGroup_0:
   \   00000028   0510A0E1           MOV      R1,R5
   \   0000002C   0600A0E1           MOV      R0,R6
   \   00000030   ........           BL       CompareContacts
   \   00000034   000050E3           CMP      R0,#+0
   \   00000038   0500005A           BPL      ??AddContactOrGroup_3
   \   0000003C   000096E5           LDR      R0,[R6, #+0]
   \   00000040   000050E3           CMP      R0,#+0
   \   00000044   F6FFFF1A           BNE      ??AddContactOrGroup_2
   \   00000048   005086E5           STR      R5,[R6, #+0]
   \   0000004C   046085E5           STR      R6,[R5, #+4]
   \   00000050   F1FFFFEA           B        ??AddContactOrGroup_1
   \                     ??AddContactOrGroup_3:
   \   00000054   040096E5           LDR      R0,[R6, #+4]
   \   00000058   000050E3           CMP      R0,#+0
   \   0000005C   00508015           STRNE    R5,[R0, #+0]
   \   00000060   00508405           STREQ    R5,[R4, #+0]
   \   00000064   040085E5           STR      R0,[R5, #+4]
   \   00000068   006085E5           STR      R6,[R5, #+0]
   \   0000006C   045086E5           STR      R5,[R6, #+4]
   \   00000070   E9FFFFEA           B        ??AddContactOrGroup_1
    290          }
    291          

   \                                 In segment CODE, align 4, keep-with-next
    292          void ResortCL(void)
    293          {
   \                     ResortCL:
   \   00000000   71402DE9           PUSH     {R0,R4-R6,LR}
    294            CLIST *first=NULL;
    295            CLIST *cl=(CLIST *)cltop;
   \   00000004   ........           LDR      R4,??DataTable13  ;; cltop
   \   00000008   0050A0E3           MOV      R5,#+0
   \   0000000C   006094E5           LDR      R6,[R4, #+0]
   \   00000010   00508DE5           STR      R5,[SP, #+0]
   \   00000014   020000EA           B        ??ResortCL_0
    296            while(cl)
    297            {
    298              CLIST *pr=cl;
    299              cl=cl->next;
    300              pr->next=0;
    301              pr->prev=0;
    302              if (pr->isgroup)
    303              {
    304                pr->state=Is_Show_Groups?0xFFFF:0;
   \                     ??ResortCL_1:
   \   00000018   B405C1E1           STRH     R0,[R1, #+84]
    305              }
    306              AddContactOrGroup(&first,pr);    
   \                     ??ResortCL_2:
   \   0000001C   0D00A0E1           MOV      R0,SP
   \   00000020   ........           BL       AddContactOrGroup
   \                     ??ResortCL_0:
   \   00000024   000056E3           CMP      R6,#+0
   \   00000028   0D00000A           BEQ      ??ResortCL_3
   \   0000002C   0610A0E1           MOV      R1,R6
   \   00000030   006096E5           LDR      R6,[R6, #+0]
   \   00000034   005081E5           STR      R5,[R1, #+0]
   \   00000038   045081E5           STR      R5,[R1, #+4]
   \   0000003C   080091E5           LDR      R0,[R1, #+8]
   \   00000040   000050E3           CMP      R0,#+0
   \   00000044   F4FFFF0A           BEQ      ??ResortCL_2
   \   00000048   ........           LDR      R0,??DataTable12  ;; Is_Show_Groups
   \   0000004C   000090E5           LDR      R0,[R0, #+0]
   \   00000050   000050E3           CMP      R0,#+0
   \   00000054   EFFFFF0A           BEQ      ??ResortCL_1
   \   00000058   FF00A0E3           MOV      R0,#+255
   \   0000005C   FF0C80E3           ORR      R0,R0,#0xFF00
   \   00000060   ECFFFFEA           B        ??ResortCL_1
    307            }
    308            cltop=first;
   \                     ??ResortCL_3:
   \   00000064   00009DE5           LDR      R0,[SP, #+0]
   \   00000068   000084E5           STR      R0,[R4, #+0]
    309          }
   \   0000006C   7180BDE8           POP      {R0,R4-R6,PC}    ;; return
    310          

   \                                 In segment CODE, align 4, keep-with-next
    311          CLIST *AddContact(unsigned int uin, char *name, unsigned int group, int local)
    312          {
   \                     AddContact:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0260A0E1           MOV      R6,R2
   \   00000010   0370A0E1           MOV      R7,R3
    313            CLIST *p=malloc(sizeof(CLIST));
   \   00000014   8400A0E3           MOV      R0,#+132
   \   00000018   140000EF           SWI      +20
   \   0000001C   0080A0E1           MOV      R8,R0
    314            zeromem(p,sizeof(CLIST));
   \   00000020   8410A0E3           MOV      R1,#+132
   \   00000024   1D0100EF           SWI      +285
    315            p->uin=uin;
   \   00000028   0C4088E5           STR      R4,[R8, #+12]
    316            p->group=group;
   \   0000002C   106088E5           STR      R6,[R8, #+16]
    317            strncpy(p->name,name,sizeof(p->name)-1);
   \   00000030   3F20A0E3           MOV      R2,#+63
   \   00000034   0510A0E1           MOV      R1,R5
   \   00000038   140088E2           ADD      R0,R8,#+20
   \   0000003C   160100EF           SWI      +278
    318            p->state=0xFFFF;
   \   00000040   FF00A0E3           MOV      R0,#+255
   \   00000044   FF0C80E3           ORR      R0,R0,#0xFF00
   \   00000048   B405C8E1           STRH     R0,[R8, #+84]
    319            p->local=local;
    320            return AddContactOrGroup((CLIST **)&cltop,p);
   \   0000004C   ........           LDR      R0,??DataTable13  ;; cltop
   \   00000050   807088E5           STR      R7,[R8, #+128]
   \   00000054   0810A0E1           MOV      R1,R8
   \   00000058   F041BDE8           POP      {R4-R8,LR}       ;; Pop
   \   0000005C   ........           B        AddContactOrGroup  ;; tailcall
    321          }
    322          

   \                                 In segment CODE, align 4, keep-with-next
    323          CLIST *AddGroup(unsigned int grp, char *name)
    324          {
   \                     AddGroup:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
    325            CLIST *p=malloc(sizeof(CLIST));
   \   0000000C   8400A0E3           MOV      R0,#+132
   \   00000010   140000EF           SWI      +20
   \   00000014   0060A0E1           MOV      R6,R0
    326            zeromem(p,sizeof(CLIST));
   \   00000018   8410A0E3           MOV      R1,#+132
   \   0000001C   1D0100EF           SWI      +285
    327            //  p->uin=0;
    328            p->group=grp;
   \   00000020   104086E5           STR      R4,[R6, #+16]
    329            p->isgroup=1;
   \   00000024   0100A0E3           MOV      R0,#+1
   \   00000028   080086E5           STR      R0,[R6, #+8]
    330            strncpy(p->name,name,sizeof(p->name)-1);
   \   0000002C   3F20A0E3           MOV      R2,#+63
   \   00000030   0510A0E1           MOV      R1,R5
   \   00000034   140086E2           ADD      R0,R6,#+20
   \   00000038   160100EF           SWI      +278
    331            if (!Is_Show_Groups) p->state=0;//Открыть группу
   \   0000003C   ........           LDR      R0,??DataTable12  ;; Is_Show_Groups
    332            else
    333              p->state=0xFFFF;
    334            return AddContactOrGroup((CLIST **)&cltop,p);
   \   00000040   0610A0E1           MOV      R1,R6
   \   00000044   000090E5           LDR      R0,[R0, #+0]
   \   00000048   000050E3           CMP      R0,#+0
   \   0000004C   FF00A013           MOVNE    R0,#+255
   \   00000050   FF0C8013           ORRNE    R0,R0,#0xFF00
   \   00000054   B405C6E1           STRH     R0,[R6, #+84]
   \   00000058   ........           LDR      R0,??DataTable13  ;; cltop
   \   0000005C   ........           BL       AddContactOrGroup
   \   00000060   7080BDE8           POP      {R4-R6,PC}       ;; return
    335          }
    336          
    337          //by BoBa 19.11.2007

   \                                 In segment CODE, align 4, keep-with-next
    338          void LoadLocalCL(void){
    339           FSTATS stat;
    340           char fn[256];
    341           int f;
    342           unsigned int ul;
    343           int fsize;
    344           char *p,*s;
    345           char cn[64];
    346           unsigned int uin;
    347          
    348           strcpy(fn,TEMPLATES_PATH);
   \                     LoadLocalCL:
   \   00000000   84119FE5           LDR      R1,??LoadLocalCL_0  ;; TEMPLATES_PATH
   \   00000004   F0412DE9           PUSH     {R4-R8,LR}
   \   00000008   5BDF4DE2           SUB      SP,SP,#+364
   \   0000000C   04008DE2           ADD      R0,SP,#+4
    349           strcat(fn,"\\local.cl");
    350           if (GetFileStats(fn,&stat,&ul)==-1) return;
   \   00000010   0040E0E3           MVN      R4,#+0
   \   00000014   1A0000EF           SWI      +26
   \   00000018   70119FE5           LDR      R1,??LoadLocalCL_0+0x4  ;; `?<Constant "\\\\local.cl">`
   \   0000001C   04008DE2           ADD      R0,SP,#+4
   \   00000020   170000EF           SWI      +23
   \   00000024   0D20A0E1           MOV      R2,SP
   \   00000028   511F8DE2           ADD      R1,SP,#+324
   \   0000002C   04008DE2           ADD      R0,SP,#+4
   \   00000030   840000EF           SWI      +132
   \   00000034   040050E1           CMP      R0,R4
   \   00000038   3300000A           BEQ      ??LoadLocalCL_1
    351           if ((fsize=stat.size)<=0) return;
   \   0000003C   48719DE5           LDR      R7,[SP, #+328]
   \   00000040   010057E3           CMP      R7,#+1
   \   00000044   300000BA           BLT      ??LoadLocalCL_1
    352           if ((f=fopen(fn,A_ReadOnly+A_BIN,P_READ,&ul))==-1) return;
   \   00000048   0D30A0E1           MOV      R3,SP
   \   0000004C   8020A0E3           MOV      R2,#+128
   \   00000050   801CA0E3           MOV      R1,#+32768
   \   00000054   04008DE2           ADD      R0,SP,#+4
   \   00000058   0A0000EF           SWI      +10
   \   0000005C   0080A0E1           MOV      R8,R0
   \   00000060   040058E1           CMP      R8,R4
   \   00000064   2800000A           BEQ      ??LoadLocalCL_1
    353           s=p=malloc(fsize+1);
   \   00000068   010087E2           ADD      R0,R7,#+1
   \   0000006C   140000EF           SWI      +20
   \   00000070   0040A0E1           MOV      R4,R0
   \   00000074   0450A0E1           MOV      R5,R4
    354           s[fread(f,p,fsize,&ul)]=0;
   \   00000078   0060A0E3           MOV      R6,#+0
   \   0000007C   0D30A0E1           MOV      R3,SP
   \   00000080   0720A0E1           MOV      R2,R7
   \   00000084   0410A0E1           MOV      R1,R4
   \   00000088   0800A0E1           MOV      R0,R8
   \   0000008C   0B0000EF           SWI      +11
   \   00000090   0560C0E7           STRB     R6,[R0, +R5]
    355           fclose(f,&ul);
   \   00000094   0D10A0E1           MOV      R1,SP
   \   00000098   0800A0E1           MOV      R0,R8
   \   0000009C   0D0000EF           SWI      +13
   \   000000A0   140000EA           B        ??LoadLocalCL_2
    356           while(*p!=0){
    357            char cc;
    358            while((cc=*p)!=';'){    //нах имя группы
    359             if (cc==0) goto L_EOF;
    360             p++;
    361            }
    362            p++;
    363            uin=0;
    364            while((cc=*p)!=';'){   //uin
    365             if (cc==0) goto L_EOF;
    366             uin*=10;
    367             uin+=((*p++)-'0');
    368            }
    369            p++;
    370            char *c=cn;
    371            while((cc=*p)!=';'){   //nick
    372             if (cc==0) goto L_EOF;
    373             *c++=*p++;
    374            }
    375            *c=0;
    376            while(*p!=13 && *p!=10 && *p!=0) p++; //нах конец строки
   \                     ??LoadLocalCL_3:
   \   000000A4   014084E2           ADD      R4,R4,#+1
   \                     ??LoadLocalCL_4:
   \   000000A8   0000D4E5           LDRB     R0,[R4, #+0]
   \   000000AC   0D0050E3           CMP      R0,#+13
   \   000000B0   0A005013           CMPNE    R0,#+10
   \   000000B4   00005013           CMPNE    R0,#+0
   \   000000B8   F9FFFF1A           BNE      ??LoadLocalCL_3
    377            if (*p!=0) p++;
   \   000000BC   000050E3           CMP      R0,#+0
   \   000000C0   01408412           ADDNE    R4,R4,#+1
    378            if ((*p==13)||(*p==10)) p++;
   \   000000C4   0000D4E5           LDRB     R0,[R4, #+0]
   \   000000C8   0D0050E3           CMP      R0,#+13
   \   000000CC   0A005013           CMPNE    R0,#+10
   \   000000D0   01408402           ADDEQ    R4,R4,#+1
    379            if (!FindContactByUin(uin)) AddContact(uin, cn, 0, 1);
   \   000000D4   0700A0E1           MOV      R0,R7
   \   000000D8   ........           BL       FindContactByUin
   \   000000DC   000050E3           CMP      R0,#+0
   \   000000E0   0400001A           BNE      ??LoadLocalCL_2
   \   000000E4   0130A0E3           MOV      R3,#+1
   \   000000E8   0020A0E3           MOV      R2,#+0
   \   000000EC   411F8DE2           ADD      R1,SP,#+260
   \   000000F0   0700A0E1           MOV      R0,R7
   \   000000F4   ........           BL       AddContact
   \                     ??LoadLocalCL_2:
   \   000000F8   0000D4E5           LDRB     R0,[R4, #+0]
   \   000000FC   000050E3           CMP      R0,#+0
   \   00000100   0600001A           BNE      ??LoadLocalCL_5
    380           }
    381          L_EOF:
    382           mfree(s);
   \                     ??LoadLocalCL_6:
   \   00000104   0500A0E1           MOV      R0,R5
   \   00000108   150000EF           SWI      +21
    383          }
   \                     ??LoadLocalCL_1:
   \   0000010C   5BDF8DE2           ADD      SP,SP,#+364      ;; stack cleaning
   \   00000110   F081BDE8           POP      {R4-R8,PC}       ;; return
   \                     ??LoadLocalCL_7:
   \   00000114   000050E3           CMP      R0,#+0
   \   00000118   F9FFFF0A           BEQ      ??LoadLocalCL_6
   \   0000011C   014084E2           ADD      R4,R4,#+1
   \                     ??LoadLocalCL_5:
   \   00000120   0000D4E5           LDRB     R0,[R4, #+0]
   \   00000124   3B0050E3           CMP      R0,#+59
   \   00000128   F9FFFF1A           BNE      ??LoadLocalCL_7
   \   0000012C   014084E2           ADD      R4,R4,#+1
   \   00000130   0070A0E3           MOV      R7,#+0
   \   00000134   050000EA           B        ??LoadLocalCL_8
   \                     ??LoadLocalCL_9:
   \   00000138   000050E3           CMP      R0,#+0
   \   0000013C   F0FFFF0A           BEQ      ??LoadLocalCL_6
   \   00000140   ........           LDRB     R1,[R4], #+1
   \   00000144   0A00A0E3           MOV      R0,#+10
   \   00000148   301041E2           SUB      R1,R1,#+48
   \   0000014C   901727E0           MLA      R7,R0,R7,R1
   \                     ??LoadLocalCL_8:
   \   00000150   0000D4E5           LDRB     R0,[R4, #+0]
   \   00000154   3B0050E3           CMP      R0,#+59
   \   00000158   F6FFFF1A           BNE      ??LoadLocalCL_9
   \   0000015C   014084E2           ADD      R4,R4,#+1
   \   00000160   411F8DE2           ADD      R1,SP,#+260
   \   00000164   030000EA           B        ??LoadLocalCL_10
   \                     ??LoadLocalCL_11:
   \   00000168   000050E3           CMP      R0,#+0
   \   0000016C   E4FFFF0A           BEQ      ??LoadLocalCL_6
   \   00000170   ........           LDRB     R0,[R4], #+1
   \   00000174   ........           STRB     R0,[R1], #+1
   \                     ??LoadLocalCL_10:
   \   00000178   0000D4E5           LDRB     R0,[R4, #+0]
   \   0000017C   3B0050E3           CMP      R0,#+59
   \   00000180   F8FFFF1A           BNE      ??LoadLocalCL_11
   \   00000184   0060C1E5           STRB     R6,[R1, #+0]
   \   00000188   C6FFFFEA           B        ??LoadLocalCL_4
   \                     ??LoadLocalCL_0:
   \   0000018C   ........           DC32     TEMPLATES_PATH
   \   00000190   ........           DC32     `?<Constant "\\\\local.cl">`

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable7:
   \   00000000   ........           DC32     IsActiveUp

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable12:
   \   00000000   ........           DC32     Is_Show_Groups

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable13:
   \   00000000   ........           DC32     cltop

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\\\local.cl">`:
   \   00000000   5C6C6F63616C       DC8 "\\local.cl"
   \              2E636C00    
   \   0000000A   0000               DC8 0, 0

   Maximum stack usage in bytes:

     Function             CSTACK
     --------             ------
     AddContact              24
     AddContactOrGroup       16
     AddGroup                16
     ChangeContactPos        12
     CompareContacts         16
     CountContacts            8
     FillAllOffline          12
     FindContactByContact    12
     FindContactByN           8
     FindContactByNS         32
     FindContactByUin         0
     FindGroupByID            0
     FreeCLIST                8
     FreeXText                8
     LoadLocalCL            388
     ResortCL                20
     SwapContacts             0


   Segment part sizes:

     Function/Label           Bytes
     --------------           -----
     FreeXText                  36
     FreeCLIST                 100
     FillAllOffline            132
     FindContactByUin           40
     ?Subroutine17               8
     FindGroupByID              40
     table_T9Key               256
     FindContactByNS           384
     CountContacts              44
     FindContactByN             92
     FindContactByContact      104
     SwapContacts               52
     ChangeContactPos          128
     CompareContacts           148
     AddContactOrGroup         116
     ResortCL                  112
     AddContact                 96
     AddGroup                  100
     LoadLocalCL               404
     ??DataTable7                4
     ??DataTable12               4
     ??DataTable13               4
     ?<Constant "\\local.cl">   12
      Others                   104

 
 2 252 bytes in segment CODE
   268 bytes in segment DATA_C
 
 2 148 bytes of CODE  memory (+ 104 bytes shared)
   268 bytes of CONST memory

Errors: none
Warnings: none
