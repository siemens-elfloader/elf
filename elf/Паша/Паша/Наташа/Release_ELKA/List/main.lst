##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION    08/May/2008  18:55:32 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  D:\Pasha\elf\Паша\Паша\Наташа\main.c                 #
#    Command line    =  D:\Pasha\elf\Паша\Паша\Наташа\main.c -D NEWSGOLD -D  #
#                       ELKA --preprocess D:\Pasha\elf\Паша\Паша\Наташа\Rele #
#                       ase_ELKA\List\ -lC D:\Pasha\elf\Паша\Паша\Наташа\Rel #
#                       ease_ELKA\List\ -o D:\Pasha\elf\Паша\Паша\Наташа\Rel #
#                       ease_ELKA\Obj\ -z9 --cpu_mode arm --endian little    #
#                       --cpu ARM926EJ-S --stack_align 4 --interwork -e      #
#                       --fpu None --dlib_config "D:\Pasha\Embedded          #
#                       Workbench 4.0 Evaluation2\ARM\LIB\dl5tpainl8n.h" -I  #
#                       "D:\Pasha\Embedded Workbench 4.0                     #
#                       Evaluation2\ARM\INC\" --inline_threshold=2           #
#    List file       =  D:\Pasha\elf\Паша\Паша\Наташа\Release_ELKA\List\main #
#                       .lst                                                 #
#    Object file     =  D:\Pasha\elf\Паша\Паша\Наташа\Release_ELKA\Obj\main. #
#                       r79                                                  #
#                                                                            #
#                                                                            #
##############################################################################

D:\Pasha\elf\Паша\Паша\Наташа\main.c
      1          #include "../inc/swilib.h"
      2          #include "../inc/cfg_items.h"
      3          #include "../inc/pnglist.h"
      4          #include "NatICQ.h"
      5          #include "history.h"
      6          #include "conf_loader.h"
      7          #include "mainmenu.h"
      8          #include "main.h"
      9          #include "language.h"
     10          #include "../inc/xtask_ipc.h"
     11          #include "smiles.h"
     12          #include "naticq_ipc.h"
     13          #include "status_change.h"
     14          #include "strings.h"
     15          #include "manage_cl.h"
     16          #include "cl_work.h"
     17          #include "select_smile.h"
     18          #include "revision.h"
     19          
     20          #ifndef NEWSGOLD
     21          #define SEND_TIMER
     22          #endif
     23          
     24          extern volatile int total_smiles;
     25          extern volatile int total_xstatuses;
     26          extern volatile int xstatuses_load;
     27          extern volatile int pictures_max;
     28          extern volatile int pictures_loaded;
     29          
     30          #define USE_MLMENU
     31          
     32          #define TMR_SECOND 216
     33          
     34          //IPC
     35          const char ipc_my_name[32]=IPC_NATICQ_NAME;
     36          const char ipc_xtask_name[]=IPC_XTASK_NAME;
     37          IPC_REQ gipc;
     38          
     39          
     40          char elf_path[256];
     41          int maincsm_id;
     42          int maingui_id;
     43          

   \                                 In segment CODE, align 4, keep-with-next
     44          void SMART_REDRAW(void)
     45          {
   \                     SMART_REDRAW:
   \   00000000   10402DE9           PUSH     {R4,LR}
     46            int f;
     47            LockSched();
   \   00000004   460100EF           SWI      +326
     48            f=IsGuiOnTop(maingui_id);
   \   00000008   1C009FE5           LDR      R0,??SMART_REDRAW_0  ;; S_ICONS + 144
   \   0000000C   000090E5           LDR      R0,[R0, #+0]
   \   00000010   350100EF           SWI      +309
   \   00000014   0040A0E1           MOV      R4,R0
     49            UnlockSched();
   \   00000018   470100EF           SWI      +327
     50            if (f) REDRAW();
   \   0000001C   000054E3           CMP      R4,#+0
   \   00000020   1080BD08           POPEQ    {R4,PC}
   \   00000024   720100EF           SWI      +370
     51          }
   \   00000028   1080BDE8           POP      {R4,PC}          ;; return
   \                     ??SMART_REDRAW_0:
   \   0000002C   ........           DC32     S_ICONS + 144
     52          
     53          //По 10 секунд
     54          #define ACTIVE_TIME 360
     55          
     56          //Максимальное количество сообщений в логе
     57          #define MAXLOGMSG (20)
     58          
     59          // Строковые описания статусов
     60          
     61          const char S_OFFLINE[]="Offline";
     62          const char S_INVISIBLE[]="Invisible";
     63          const char S_AWAY[]="Away";
     64          const char S_NA[]="N/A";
     65          const char S_OCCUPIED[]="Occupied";
     66          const char S_DND[]="DND";
     67          const char S_ONLINE[]="Online";
     68          const char S_FFC[]="FFC";
     69          
     70          volatile int SENDMSGCOUNT;
     71          
     72          int IsActiveUp=0;
     73          
     74          int Is_Vibra_Enabled;
     75          unsigned int Is_Sounds_Enabled;
     76          int Is_Show_Offline;
     77          int Is_Show_Groups;
     78          
     79          int S_ICONS[TOTAL_ICONS+1];
     80          
     81          #define EOP -10
     82          int CurrentStatus;
     83          int CurrentXStatus;
     84          
     85          WSHDR *ews;
     86          
     87          extern const unsigned int UIN;
     88          extern const char PASS[];
     89          
     90          static const char * const icons_names[TOTAL_ICONS]=
     91          {
     92            "offline.png",
     93            "invisible.png",
     94            "away.png",
     95            "na.png",
     96            "occupied.png",
     97            "dnd.png",
     98            "depression.png",
     99            "evil.png",
    100            "home.png",
    101            "lunch.png",
    102            "work.png",
    103            "online.png",
    104            "ffc.png",
    105            "message.png",
    106            "unknown.png",
    107            "groupon.png",
    108            "groupoff.png",
    109            "null.png",
    110            "addcont.png",
    111            "head.png",
    112            "logo.png",
    113            "ping.png",
    114            "settings.png",
    115            "vis1.png",
    116            "vis2.png",
    117            "vis3.png",
    118            "vis4.png",
    119            "vis5.png"
    120          };
    121          
    122          extern const char ICON_PATH[];
    123          

   \                                 In segment CODE, align 4, keep-with-next
    124          void setup_ICONS(void)
    125          {
   \                     setup_ICONS:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
    126            int i=0;
   \   00000004   ........           LDR      R5,??DataTable1  ;; S_ICONS
   \   00000008   0040A0E3           MOV      R4,#+0
    127            do
    128            {
    129              if (!S_ICONS[i]) S_ICONS[i]=(int)MakeGlobalString(ICON_PATH,'\\',icons_names[i]);
   \                     ??setup_ICONS_0:
   \   0000000C   040195E7           LDR      R0,[R5, +R4, LSL #+2]
   \   00000010   000050E3           CMP      R0,#+0
   \   00000014   0500001A           BNE      ??setup_ICONS_1
   \   00000018   20009FE5           LDR      R0,??setup_ICONS_2  ;; icons_names
   \   0000001C   5C10A0E3           MOV      R1,#+92
   \   00000020   042190E7           LDR      R2,[R0, +R4, LSL #+2]
   \   00000024   18009FE5           LDR      R0,??setup_ICONS_2+0x4  ;; ICON_PATH
   \   00000028   ........           _BLF     MakeGlobalString,??MakeGlobalString??rA
   \   0000002C   040185E7           STR      R0,[R5, +R4, LSL #+2]
    130              i++;
   \                     ??setup_ICONS_1:
   \   00000030   014084E2           ADD      R4,R4,#+1
    131            }
    132            while(i<TOTAL_ICONS);
   \   00000034   1C0054E3           CMP      R4,#+28
   \   00000038   F3FFFF3A           BCC      ??setup_ICONS_0
    133            return;
   \   0000003C   3080BDE8           POP      {R4,R5,PC}       ;; return
   \                     ??setup_ICONS_2:
   \   00000040   ........           DC32     icons_names
   \   00000044   ........           DC32     ICON_PATH
    134          }
    135          

   \                                 In segment CODE, align 4, keep-with-next
    136          void free_ICONS(void)
    137          {
   \                     free_ICONS:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
    138            int i=0;
   \   00000004   ........           LDR      R5,??DataTable1  ;; S_ICONS
   \   00000008   0040A0E3           MOV      R4,#+0
    139            do
    140            {
    141              mfree((void*)S_ICONS[i]);
   \                     ??free_ICONS_0:
   \   0000000C   040195E7           LDR      R0,[R5, +R4, LSL #+2]
   \   00000010   150000EF           SWI      +21
    142              S_ICONS[i]=0;
   \   00000014   0000A0E3           MOV      R0,#+0
   \   00000018   040185E7           STR      R0,[R5, +R4, LSL #+2]
    143              i++;
   \   0000001C   014084E2           ADD      R4,R4,#+1
    144            }
    145            while(i<TOTAL_ICONS);
   \   00000020   1C0054E3           CMP      R4,#+28
   \   00000024   F8FFFF3A           BCC      ??free_ICONS_0
    146            return;
   \   00000028   3080BDE8           POP      {R4,R5,PC}       ;; return
    147          }
    148          
    149          extern const unsigned int IDLEICON_X;
    150          extern const unsigned int IDLEICON_Y;
    151          
    152          extern const unsigned int I_COLOR;
    153          extern const unsigned int TO_COLOR;
    154          extern const unsigned int X_COLOR;
    155          extern const unsigned int O_I_COLOR;
    156          extern const unsigned int O_TO_COLOR;
    157          extern const unsigned int O_X_COLOR;
    158          
    159          extern const unsigned int ED_FONT_SIZE;
    160          extern const unsigned int ED_H_FONT_SIZE;
    161          extern const unsigned int ED_X_FONT_SIZE;
    162          extern const unsigned int O_ED_FONT_SIZE;
    163          extern const unsigned int O_ED_H_FONT_SIZE;
    164          extern const unsigned int O_ED_X_FONT_SIZE;
    165          
    166          extern const unsigned int ACK_COLOR;
    167          extern const unsigned int UNACK_COLOR;
    168          
    169          extern const int ENA_AUTO_XTXT;
    170          extern const int NOT_LOG_SAME_XTXT;
    171          extern const int LOG_XTXT;
    172          
    173          extern const int HISTORY_BUFFER;
    174          
    175          const char percent_t[]="%t";
    176          const char percent_d[]="%d";
    177          const char empty_str[]="";
    178          const char I_str[]="I";
    179          const char x_status_change[]="X-Status change";
    180          
    181          char logmsg[256];
    182          
    183          //Illumination by BoBa 19.04.2007
    184          ///////////
    185          extern const unsigned int ILL_DISP_RECV;
    186          extern const unsigned int ILL_KEYS_RECV;
    187          extern const unsigned int ILL_DISP_SEND;
    188          extern const unsigned int ILL_KEYS_SEND;
    189          extern const unsigned int ILL_SEND_TMR;
    190          extern const unsigned int ILL_SEND_FADE;
    191          extern const unsigned int ILL_RECV_TMR;
    192          extern const unsigned int ILL_RECV_FADE;
    193          extern const unsigned int ILL_OFF_FADE;
    194          
    195          GBSTMR tmr_illumination;
    196          

   \                                 In segment CODE, align 4, keep-with-next
    197          void IlluminationOff(){
    198            SetIllumination(0,1,0,ILL_OFF_FADE);
   \                     IlluminationOff:
   \   00000000   30009FE5           LDR      R0,??IlluminationOff_0  ;; ILL_OFF_FADE
   \   00000004   10402DE9           PUSH     {R4,LR}
   \   00000008   004090E5           LDR      R4,[R0, #+0]
   \   0000000C   0020A0E3           MOV      R2,#+0
   \   00000010   0430A0E1           MOV      R3,R4
   \   00000014   0110A0E3           MOV      R1,#+1
   \   00000018   0000A0E3           MOV      R0,#+0
   \   0000001C   080000EF           SWI      +8
    199            SetIllumination(1,1,0,ILL_OFF_FADE);
   \   00000020   0430A0E1           MOV      R3,R4
   \   00000024   0020A0E3           MOV      R2,#+0
   \   00000028   0110A0E3           MOV      R1,#+1
   \   0000002C   0100A0E1           MOV      R0,R1
   \   00000030   080000EF           SWI      +8
    200          }
   \   00000034   1080BDE8           POP      {R4,PC}          ;; return
   \                     ??IlluminationOff_0:
   \   00000038   ........           DC32     ILL_OFF_FADE
    201          

   \                                 In segment CODE, align 4, keep-with-next
    202          void IlluminationOn(const int disp, const int key, const int tmr, const int fade){
   \                     IlluminationOn:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0260A0E1           MOV      R6,R2
   \   00000010   0370A0E1           MOV      R7,R3
    203            if(!tmr) return;
   \   00000014   000056E3           CMP      R6,#+0
   \   00000018   F083BD08           POPEQ    {R4-R9,PC}
    204            GBS_DelTimer(&tmr_illumination);
   \   0000001C   ........           LDR      R9,??DataTable23  ;; S_ICONS
   \   00000020   E28FA0E3           MOV      R8,#+904
   \   00000024   090088E0           ADD      R0,R8,R9
   \   00000028   8C0100EF           SWI      +396
    205            SetIllumination(0,1,disp,fade);
   \   0000002C   0730A0E1           MOV      R3,R7
   \   00000030   0428A0E1           MOV      R2,R4, LSL #+16
   \   00000034   2228A0E1           MOV      R2,R2, LSR #+16
   \   00000038   0110A0E3           MOV      R1,#+1
   \   0000003C   0000A0E3           MOV      R0,#+0
   \   00000040   080000EF           SWI      +8
    206            SetIllumination(1,1,key,fade);
   \   00000044   0730A0E1           MOV      R3,R7
   \   00000048   0528A0E1           MOV      R2,R5, LSL #+16
   \   0000004C   2228A0E1           MOV      R2,R2, LSR #+16
   \   00000050   0110A0E3           MOV      R1,#+1
   \   00000054   0100A0E3           MOV      R0,#+1
   \   00000058   080000EF           SWI      +8
    207            GBS_StartTimerProc(&tmr_illumination,tmr*216,IlluminationOff);
   \   0000005C   10209FE5           LDR      R2,??IlluminationOn_0  ;; IlluminationOff
   \   00000060   D800A0E3           MOV      R0,#+216
   \   00000064   900601E0           MUL      R1,R0,R6
   \   00000068   090088E0           ADD      R0,R8,R9
   \   0000006C   4D0000EF           SWI      +77
    208          }
   \   00000070   F083BDE8           POP      {R4-R9,PC}       ;; return
   \                     ??IlluminationOn_0:
   \   00000074   ........           DC32     IlluminationOff
    209          
    210          volatile int silenthide;    //by BoBa 25.06.07
    211          volatile int disautorecconect;	//by BoBa 10.07
    212          ///////////
    213          int Is_Vibra_Enabled;
    214          unsigned int Is_Sounds_Enabled;
    215          int Is_Show_Offline;
    216          int Is_Show_Groups;
    217          int CurrentStatus;
    218          int CurrentXStatus;
    219          int CurrentPrivateStatus;
    220          
    221          //===================================================================
    222          const char def_setting[]="%sdef_settings_%d";
    223          

   \                                 In segment CODE, align 4, keep-with-next
    224          void ReadDefSettings(void)
    225          {
    226            DEF_SETTINGS def_set;
    227            int f;
    228            unsigned int err;
    229            char str[128];
    230            snprintf(str,127,def_setting,elf_path,UIN);
   \                     ReadDefSettings:
   \   00000000   ........           LDR      R0,??DataTable6  ;; UIN
   \   00000004   ........           LDR      R2,??DataTable7  ;; def_setting
   \   00000008   30402DE9           PUSH     {R4,R5,LR}
   \   0000000C   ........           LDR      R4,??DataTable23  ;; S_ICONS
   \   00000010   88D04DE2           SUB      SP,SP,#+136
   \   00000014   000090E5           LDR      R0,[R0, #+0]
   \   00000018   5A3F84E2           ADD      R3,R4,#+360
   \   0000001C   01002DE9           PUSH     {R0}
   \   00000020   7F10A0E3           MOV      R1,#+127
   \   00000024   0C008DE2           ADD      R0,SP,#+12
   \   00000028   1B0100EF           SWI      +283
    231            if ((f=fopen(str,A_ReadOnly+A_BIN,P_READ,&err))!=-1)
   \   0000002C   08308DE2           ADD      R3,SP,#+8
   \   00000030   8020A0E3           MOV      R2,#+128
   \   00000034   801CA0E3           MOV      R1,#+32768
   \   00000038   0C008DE2           ADD      R0,SP,#+12
   \   0000003C   0A0000EF           SWI      +10
   \   00000040   0050A0E1           MOV      R5,R0
   \   00000044   010075E3           CMN      R5,#+1
   \   00000048   04D08DE2           ADD      SP,SP,#+4
   \   0000004C   1600000A           BEQ      ??ReadDefSettings_0
    232            {
    233              fread(f,&def_set,sizeof(DEF_SETTINGS),&err);
   \   00000050   04308DE2           ADD      R3,SP,#+4
   \   00000054   0320A0E3           MOV      R2,#+3
   \   00000058   0D10A0E1           MOV      R1,SP
   \   0000005C   0B0000EF           SWI      +11
    234              fclose(f,&err);
   \   00000060   04108DE2           ADD      R1,SP,#+4
   \   00000064   0500A0E1           MOV      R0,R5
   \   00000068   0D0000EF           SWI      +13
    235              Is_Vibra_Enabled=def_set.vibra_status;
   \   0000006C   0000DDE5           LDRB     R0,[SP, #+0]
   \   00000070   010000E2           AND      R0,R0,#0x1
   \   00000074   A80084E5           STR      R0,[R4, #+168]
    236              Is_Sounds_Enabled=def_set.sound_status;
   \   00000078   0000DDE5           LDRB     R0,[SP, #+0]
    237              Is_Show_Offline=def_set.off_contacts;
   \   0000007C   0010DDE5           LDRB     R1,[SP, #+0]
    238              Is_Show_Groups=def_set.show_groups;
   \   00000080   0020DDE5           LDRB     R2,[SP, #+0]
    239              CurrentStatus=def_set.def_status+1;
   \   00000084   0130DDE5           LDRB     R3,[SP, #+1]
    240              CurrentXStatus=def_set.def_xstatus;
   \   00000088   0250DDE5           LDRB     R5,[SP, #+2]
   \   0000008C   020000E2           AND      R0,R0,#0x2
   \   00000090   A000A0E1           LSR      R0,R0,#+1
   \   00000094   041001E2           AND      R1,R1,#0x4
   \   00000098   2111A0E1           LSR      R1,R1,#+2
   \   0000009C   082002E2           AND      R2,R2,#0x8
   \   000000A0   A221A0E1           LSR      R2,R2,#+3
   \   000000A4   013083E2           ADD      R3,R3,#+1
   \   000000A8   050000EA           B        ??ReadDefSettings_1
    241            }
    242            else
    243            {
    244              Is_Vibra_Enabled=0;
   \                     ??ReadDefSettings_0:
   \   000000AC   0000A0E3           MOV      R0,#+0
   \   000000B0   A80084E5           STR      R0,[R4, #+168]
    245              Is_Sounds_Enabled=0;
    246              Is_Show_Offline=0;
   \   000000B4   0010A0E3           MOV      R1,#+0
    247              Is_Show_Groups=1;
   \   000000B8   0120A0E3           MOV      R2,#+1
    248              CurrentStatus=IS_ONLINE;
   \   000000BC   0B30A0E3           MOV      R3,#+11
    249              CurrentXStatus=0;
   \   000000C0   0050A0E1           MOV      R5,R0
   \                     ??ReadDefSettings_1:
   \   000000C4   BC5084E5           STR      R5,[R4, #+188]
   \   000000C8   B83084E5           STR      R3,[R4, #+184]
   \   000000CC   B42084E5           STR      R2,[R4, #+180]
   \   000000D0   B01084E5           STR      R1,[R4, #+176]
   \   000000D4   AC0084E5           STR      R0,[R4, #+172]
    250            }
    251          }
   \   000000D8   ........           B        ?Subroutine98

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine98:
   \   00000000   88D08DE2           ADD      SP,SP,#+136
   \   00000004   3080BDE8           POP      {R4,R5,PC}       ;; return
    252          

   \                                 In segment CODE, align 4, keep-with-next
    253          void WriteDefSettings(void)
    254          {
    255            DEF_SETTINGS def_set;
    256            int f;
    257            unsigned int err;
    258            char str[128];
    259            snprintf(str,127,def_setting,elf_path,UIN);
   \                     WriteDefSettings:
   \   00000000   ........           LDR      R0,??DataTable6  ;; UIN
   \   00000004   ........           LDR      R2,??DataTable7  ;; def_setting
   \   00000008   30402DE9           PUSH     {R4,R5,LR}
   \   0000000C   ........           LDR      R4,??DataTable23  ;; S_ICONS
   \   00000010   88D04DE2           SUB      SP,SP,#+136
   \   00000014   000090E5           LDR      R0,[R0, #+0]
   \   00000018   5A3F84E2           ADD      R3,R4,#+360
   \   0000001C   01002DE9           PUSH     {R0}
   \   00000020   7F10A0E3           MOV      R1,#+127
   \   00000024   0C008DE2           ADD      R0,SP,#+12
   \   00000028   1B0100EF           SWI      +283
    260            if ((f=fopen(str,A_WriteOnly+A_BIN+A_Create+A_Truncate,P_WRITE,&err))!=-1)
   \   0000002C   08308DE2           ADD      R3,SP,#+8
   \   00000030   402FA0E3           MOV      R2,#+256
   \   00000034   0110A0E3           MOV      R1,#+1
   \   00000038   831C81E3           ORR      R1,R1,#0x8300
   \   0000003C   0C008DE2           ADD      R0,SP,#+12
   \   00000040   0A0000EF           SWI      +10
   \   00000044   0050A0E1           MOV      R5,R0
   \   00000048   010075E3           CMN      R5,#+1
   \   0000004C   04D08DE2           ADD      SP,SP,#+4
   \   00000050   1D00000A           BEQ      ??WriteDefSettings_0
    261            {
    262              def_set.vibra_status=Is_Vibra_Enabled;
    263              def_set.sound_status=Is_Sounds_Enabled;
    264              def_set.off_contacts=Is_Show_Offline;
    265              def_set.show_groups=Is_Show_Groups;
   \   00000054   0010DDE5           LDRB     R1,[SP, #+0]
   \   00000058   A82094E5           LDR      R2,[R4, #+168]
   \   0000005C   F01001E2           AND      R1,R1,#0xF0
   \   00000060   012002E2           AND      R2,R2,#0x1
   \   00000064   011082E1           ORR      R1,R2,R1
   \   00000068   AC2094E5           LDR      R2,[R4, #+172]
   \   0000006C   0230A0E3           MOV      R3,#+2
   \   00000070   822003E0           AND      R2,R3,R2, LSL #+1
   \   00000074   011082E1           ORR      R1,R2,R1
   \   00000078   B02094E5           LDR      R2,[R4, #+176]
   \   0000007C   0430A0E3           MOV      R3,#+4
   \   00000080   022103E0           AND      R2,R3,R2, LSL #+2
   \   00000084   011082E1           ORR      R1,R2,R1
   \   00000088   B42094E5           LDR      R2,[R4, #+180]
   \   0000008C   0830A0E3           MOV      R3,#+8
   \   00000090   822103E0           AND      R2,R3,R2, LSL #+3
   \   00000094   011082E1           ORR      R1,R2,R1
   \   00000098   0010CDE5           STRB     R1,[SP, #+0]
    266              def_set.def_status=CurrentStatus-1;
   \   0000009C   B81094E5           LDR      R1,[R4, #+184]
    267              def_set.def_xstatus=CurrentXStatus;
    268              fwrite(f,&def_set,sizeof(DEF_SETTINGS),&err);
   \   000000A0   04308DE2           ADD      R3,SP,#+4
   \   000000A4   011041E2           SUB      R1,R1,#+1
   \   000000A8   0110CDE5           STRB     R1,[SP, #+1]
   \   000000AC   BC1094E5           LDR      R1,[R4, #+188]
   \   000000B0   0320A0E3           MOV      R2,#+3
   \   000000B4   0210CDE5           STRB     R1,[SP, #+2]
   \   000000B8   0D10A0E1           MOV      R1,SP
   \   000000BC   0C0000EF           SWI      +12
    269              fclose(f,&err);
   \   000000C0   04108DE2           ADD      R1,SP,#+4
   \   000000C4   0500A0E1           MOV      R0,R5
   \   000000C8   0D0000EF           SWI      +13
    270            }
    271          }
   \                     ??WriteDefSettings_0:
   \   000000CC                      REQUIRE ?Subroutine98
   \   000000CC                      ;; // Fall through to label ?Subroutine98
    272          //by KreN 27.09.2007
    273          //===================================================================
    274          extern S_SMILES *s_top;
    275          extern DYNPNGICONLIST *SmilesImgList;
    276          extern DYNPNGICONLIST *XStatusesImgList;
    277          
    278          //=============================Проигрывание звука=======================
    279          extern const char sndStartup[];
    280          extern const char sndSrvMsg[];
    281          extern const char sndGlobal[];
    282          extern const char sndMsg[];
    283          extern const char sndMsgSent[];
    284          extern const unsigned int sndVolume;
    285          
    286          

   \                                 In segment CODE, align 4, keep-with-next
    287          void Play(const char *fname)
    288          {
   \                     Play:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   D0D04DE2           SUB      SP,SP,#+208
   \   00000008   0060A0E1           MOV      R6,R0
    289            if ((!IsCalling())&&Is_Sounds_Enabled)
   \   0000000C   6E0000EF           SWI      +110
   \   00000010   000050E3           CMP      R0,#+0
   \   00000014   4100001A           BNE      ??Play_0
   \   00000018   08019FE5           LDR      R0,??Play_1      ;; S_ICONS + 172
   \   0000001C   000090E5           LDR      R0,[R0, #+0]
   \   00000020   000050E3           CMP      R0,#+0
   \   00000024   3D00000A           BEQ      ??Play_0
    290            {
    291              FSTATS fstats;
    292              unsigned int err;
    293              if (GetFileStats(fname,&fstats,&err)!=-1)
   \   00000028   0D20A0E1           MOV      R2,SP
   \   0000002C   A8108DE2           ADD      R1,SP,#+168
   \   00000030   0600A0E1           MOV      R0,R6
   \   00000034   840000EF           SWI      +132
   \   00000038   010070E3           CMN      R0,#+1
   \   0000003C   3700000A           BEQ      ??Play_0
    294              {
    295                PLAYFILE_OPT _sfo1;
    296                WSHDR* sndPath=AllocWS(128);
   \   00000040   8000A0E3           MOV      R0,#+128
   \   00000044   250100EF           SWI      +293
   \   00000048   0040A0E1           MOV      R4,R0
    297                WSHDR* sndFName=AllocWS(128);
   \   0000004C   8000A0E3           MOV      R0,#+128
   \   00000050   250100EF           SWI      +293
   \   00000054   0050A0E1           MOV      R5,R0
    298                char s[128];
    299                const char *p=strrchr(fname,'\\')+1;
   \   00000058   5C10A0E3           MOV      R1,#+92
   \   0000005C   0600A0E1           MOV      R0,R6
   \   00000060   170100EF           SWI      +279
   \   00000064   017080E2           ADD      R7,R0,#+1
    300                str_2ws(sndFName,p,128);
   \   00000068   8020A0E3           MOV      R2,#+128
   \   0000006C   0710A0E1           MOV      R1,R7
   \   00000070   0500A0E1           MOV      R0,R5
   \   00000074   6C0100EF           SWI      +364
    301                strncpy(s,fname,p-fname);
   \   00000078   067047E0           SUB      R7,R7,R6
   \   0000007C   0720A0E1           MOV      R2,R7
   \   00000080   0610A0E1           MOV      R1,R6
   \   00000084   28008DE2           ADD      R0,SP,#+40
   \   00000088   160100EF           SWI      +278
    302                s[p-fname]='\0';
   \   0000008C   0060A0E3           MOV      R6,#+0
   \   00000090   28008DE2           ADD      R0,SP,#+40
   \   00000094   0060C7E7           STRB     R6,[R7, +R0]
    303                str_2ws(sndPath,s,128);
   \   00000098   8020A0E3           MOV      R2,#+128
   \   0000009C   28108DE2           ADD      R1,SP,#+40
   \   000000A0   0400A0E1           MOV      R0,R4
   \   000000A4   6C0100EF           SWI      +364
    304          
    305                zeromem(&_sfo1,sizeof(PLAYFILE_OPT));
   \   000000A8   2410A0E3           MOV      R1,#+36
   \   000000AC   04008DE2           ADD      R0,SP,#+4
   \   000000B0   1D0100EF           SWI      +285
    306                _sfo1.repeat_num=1;
    307                _sfo1.time_between_play=0;
    308                _sfo1.play_first=0;
    309                _sfo1.volume=sndVolume;
   \   000000B4   70209FE5           LDR      R2,??Play_1+0x4  ;; sndVolume
   \   000000B8   0100A0E3           MOV      R0,#+1
   \   000000BC   B400CDE1           STRH     R0,[SP, #+4]
   \   000000C0   08608DE5           STR      R6,[SP, #+8]
   \   000000C4   0C608DE5           STR      R6,[SP, #+12]
   \   000000C8   002092E5           LDR      R2,[R2, #+0]
    310          #ifdef NEWSGOLD
    311                _sfo1.unk6=1;
    312                _sfo1.unk7=1;
    313                _sfo1.unk9=2;
   \   000000CC   0210A0E3           MOV      R1,#+2
   \   000000D0   10208DE5           STR      R2,[SP, #+16]
   \   000000D4   18008DE5           STR      R0,[SP, #+24]
   \   000000D8   1C008DE5           STR      R0,[SP, #+28]
   \   000000DC   24108DE5           STR      R1,[SP, #+36]
    314                PlayFile(0x10, sndPath, sndFName, GBS_GetCurCepid(), MSG_PLAYFILE_REPORT, &_sfo1);
   \   000000E0   450100EF           SWI      +325
   \   000000E4   04108DE2           ADD      R1,SP,#+4
   \   000000E8   02002DE9           PUSH     {R1}
   \   000000EC   0030A0E1           MOV      R3,R0
   \   000000F0   0520A0E1           MOV      R2,R5
   \   000000F4   1000A0E3           MOV      R0,#+16
   \   000000F8   BC10A0E3           MOV      R1,#+188
   \   000000FC   701C81E3           ORR      R1,R1,#0x7000
   \   00000100   02002DE9           PUSH     {R1}
   \   00000104   0410A0E1           MOV      R1,R4
   \   00000108   4A0000EF           SWI      +74
    315          #else
    316          #ifdef X75
    317                _sfo1.unk4=0x80000000;
    318                _sfo1.unk5=1;
    319                PlayFile(0xC, sndPath, sndFName, 0,GBS_GetCurCepid(), MSG_PLAYFILE_REPORT, &_sfo1);
    320          #else
    321                _sfo1.unk5=1;
    322                PlayFile(0xC, sndPath, sndFName, GBS_GetCurCepid(), MSG_PLAYFILE_REPORT, &_sfo1);
    323          #endif
    324          #endif
    325                FreeWS(sndPath);
   \   0000010C   0400A0E1           MOV      R0,R4
   \   00000110   290100EF           SWI      +297
    326                FreeWS(sndFName);
   \   00000114   0500A0E1           MOV      R0,R5
   \   00000118   290100EF           SWI      +297
   \   0000011C   08D08DE2           ADD      SP,SP,#+8
    327              }
    328            }
    329          }
   \                     ??Play_0:
   \   00000120   D0D08DE2           ADD      SP,SP,#+208      ;; stack cleaning
   \   00000124   F080BDE8           POP      {R4-R7,PC}       ;; return
   \                     ??Play_1:
   \   00000128   ........           DC32     S_ICONS + 172
   \   0000012C   ........           DC32     sndVolume
    330          
    331          GBSTMR tmr_vibra;
    332          volatile int vibra_count;
    333          

   \                                 In segment CODE, align 4, keep-with-next
    334          void start_vibra(void)
    335          {
   \                     start_vibra:
   \   00000000   10402DE9           PUSH     {R4,LR}
    336            extern const int VIBR_TYPE;
    337            void stop_vibra(void);
    338            if((Is_Vibra_Enabled)&&(!IsCalling()))
   \   00000004   ........           LDR      R4,??DataTable23  ;; S_ICONS
   \   00000008   A80094E5           LDR      R0,[R4, #+168]
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   1080BD08           POPEQ    {R4,PC}
   \   00000014   6E0000EF           SWI      +110
   \   00000018   000050E3           CMP      R0,#+0
   \   0000001C   1080BD18           POPNE    {R4,PC}
    339            {
    340              extern const unsigned int vibraPower;
    341              SetVibration(vibraPower);
   \   00000020   34009FE5           LDR      R0,??start_vibra_0  ;; vibraPower
   \   00000024   000090E5           LDR      R0,[R0, #+0]
   \   00000028   7C0000EF           SWI      +124
    342              if(VIBR_TYPE)
   \   0000002C   ........           LDR      R1,??DataTable12  ;; VIBR_TYPE
   \   00000030   28209FE5           LDR      R2,??start_vibra_0+0x4  ;; stop_vibra
   \   00000034   001091E5           LDR      R1,[R1, #+0]
   \   00000038   E60FA0E3           MOV      R0,#+920
   \   0000003C   000051E3           CMP      R1,#+0
   \   00000040   0100000A           BEQ      ??start_vibra_1
    343                GBS_StartTimerProc(&tmr_vibra,TMR_SECOND>>2,stop_vibra);
   \   00000044   3610A0E3           MOV      R1,#+54
   \   00000048   000000EA           B        ??start_vibra_2
    344              else
    345                GBS_StartTimerProc(&tmr_vibra,TMR_SECOND>>1,stop_vibra);
   \                     ??start_vibra_1:
   \   0000004C   6C10A0E3           MOV      R1,#+108
   \                     ??start_vibra_2:
   \   00000050   040080E0           ADD      R0,R0,R4
   \   00000054   4D0000EF           SWI      +77
    346            }
    347          }
   \   00000058   1080BDE8           POP      {R4,PC}          ;; return
   \                     ??start_vibra_0:
   \   0000005C   ........           DC32     vibraPower
   \   00000060   ........           DC32     stop_vibra
    348          

   \                                 In segment CODE, align 4, keep-with-next
    349          void stop_vibra(void)
    350          {
   \                     stop_vibra:
   \   00000000   00402DE9           PUSH     {LR}
    351            extern const int VIBR_TYPE;
    352            SetVibration(0);
   \   00000004   0000A0E3           MOV      R0,#+0
   \   00000008   7C0000EF           SWI      +124
    353            if (--vibra_count)
   \   0000000C   ........           LDR      R0,??DataTable23  ;; S_ICONS
   \   00000010   C41090E5           LDR      R1,[R0, #+196]
   \   00000014   011051E2           SUBS     R1,R1,#+1
   \   00000018   C41080E5           STR      R1,[R0, #+196]
   \   0000001C   0080BD08           POPEQ    {PC}
    354            {
    355              if(VIBR_TYPE)
   \   00000020   ........           LDR      R1,??DataTable12  ;; VIBR_TYPE
   \   00000024   24209FE5           LDR      R2,??stop_vibra_0  ;; start_vibra
   \   00000028   001091E5           LDR      R1,[R1, #+0]
   \   0000002C   E63FA0E3           MOV      R3,#+920
   \   00000030   000051E3           CMP      R1,#+0
   \   00000034   0100000A           BEQ      ??stop_vibra_1
    356                GBS_StartTimerProc(&tmr_vibra,TMR_SECOND/40,start_vibra);
   \   00000038   0510A0E3           MOV      R1,#+5
   \   0000003C   000000EA           B        ??stop_vibra_2
    357              else
    358                GBS_StartTimerProc(&tmr_vibra,TMR_SECOND>>1,start_vibra);
   \                     ??stop_vibra_1:
   \   00000040   6C10A0E3           MOV      R1,#+108
   \                     ??stop_vibra_2:
   \   00000044   000083E0           ADD      R0,R3,R0
   \   00000048   4D0000EF           SWI      +77
    359            }
    360          }
   \   0000004C   0080BDE8           POP      {PC}             ;; return
   \                     ??stop_vibra_0:
   \   00000050   ........           DC32     start_vibra
    361          

   \                                 In segment CODE, align 4, keep-with-next
    362          void ChangeVibra(void)
    363          {
    364            if (!(Is_Vibra_Enabled=!(Is_Vibra_Enabled)))
   \                     ChangeVibra:
   \   00000000   ........           LDR      R0,??DataTable23  ;; S_ICONS
   \   00000004   00402DE9           PUSH     {LR}
   \   00000008   A81090E5           LDR      R1,[R0, #+168]
   \   0000000C   000051E3           CMP      R1,#+0
   \   00000010   0C109FE5           LDR      R1,??ChangeVibra_0  ;; `?<Constant "\\302\\350\\341\\360\\340 \\356\\362\\352\\`
   \   00000014   0120A003           MOVEQ    R2,#+1
   \   00000018   0020A013           MOVNE    R2,#+0
   \   0000001C   A82080E5           STR      R2,[R0, #+168]
   \   00000020   ........           B        ?Subroutine100
   \                     ??ChangeVibra_0:
   \   00000024   ........           DC32     `?<Constant "\\302\\350\\341\\360\\340 \\356\\362\\352\\`
    365              ShowMSG(1,(int)LG_MSGVIBRADIS);
    366            else
    367              ShowMSG(1,(int)LG_MSGVIBRAENA);
    368          }

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine100:
   \   00000000   000052E3           CMP      R2,#+0
   \   00000004   14108112           ADDNE    R1,R1,#+20
   \   00000008   0100A0E3           MOV      R0,#+1
   \   0000000C   480100EF           SWI      +328
   \   00000010   0080BDE8           POP      {PC}             ;; return
   \                     ??Subroutine100_0:
   \   00000014   ........           DC32     `?<Constant "\\307\\342\\363\\352\\350 \\356\\362\\352\\`
    369          

   \                                 In segment CODE, align 4, keep-with-next
    370          void ChangeSound(void)
    371          {
    372            if (!(Is_Sounds_Enabled=!(Is_Sounds_Enabled)))
   \                     ChangeSound:
   \   00000000   ........           LDR      R0,??DataTable23  ;; S_ICONS
   \   00000004   00402DE9           PUSH     {LR}
   \   00000008   AC1090E5           LDR      R1,[R0, #+172]
   \   0000000C   000051E3           CMP      R1,#+0
   \   00000010   ........           LDR      R1,??Subroutine100_0  ;; `?<Constant "\\307\\342\\363\\352\\350 \\356\\362\\352\\`
   \   00000014   0120A003           MOVEQ    R2,#+1
   \   00000018   0020A013           MOVNE    R2,#+0
   \   0000001C   AC2080E5           STR      R2,[R0, #+172]
   \   00000020                      REQUIRE ?Subroutine100
   \   00000020                      ;; // Fall through to label ?Subroutine100
    373              ShowMSG(1,(int)LG_MSGSNDDIS);
    374            else
    375              ShowMSG(1,(int)LG_MSGSNDENA);
    376          }
    377          
    378          //===================================================================
    379          //Templates
    380          char *templates_chars; //Собственно файл
    381          char **templates_lines; //Массив указателей на строки
    382          

   \                                 In segment CODE, align 4, keep-with-next
    383          void FreeTemplates(void)
    384          {
   \                     FreeTemplates:
   \   00000000   10402DE9           PUSH     {R4,LR}
    385            if (templates_lines) mfree(templates_lines);
   \   00000004   ........           LDR      R4,??DataTable23  ;; S_ICONS
   \   00000008   CC0094E5           LDR      R0,[R4, #+204]
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   0000000A           BEQ      ??FreeTemplates_0
   \   00000014   150000EF           SWI      +21
    386            if (templates_chars) mfree(templates_chars);
   \                     ??FreeTemplates_0:
   \   00000018   C80094E5           LDR      R0,[R4, #+200]
   \   0000001C   000050E3           CMP      R0,#+0
   \   00000020   0100000A           BEQ      ??FreeTemplates_1
   \   00000024   150000EF           SWI      +21
    387            templates_lines=NULL;
   \   00000028   0000A0E3           MOV      R0,#+0
   \                     ??FreeTemplates_1:
   \   0000002C   CC0084E5           STR      R0,[R4, #+204]
    388            templates_chars=NULL;
   \   00000030   C80084E5           STR      R0,[R4, #+200]
    389          }
   \   00000034   1080BDE8           POP      {R4,PC}          ;; return
    390          
    391          extern const char TEMPLATES_PATH[];
    392          

   \                                 In segment CODE, align 4, keep-with-next
    393          int LoadTemplates(unsigned int uin)
    394          {
   \                     LoadTemplates:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
    395            FSTATS stat;
    396            char fn[256];
    397            int f;
    398            unsigned int ul;
    399            int i;
    400            int fsize;
    401            char *p;
    402            char *pp;
    403            int c;
    404            FreeTemplates();
    405            strcpy(fn,TEMPLATES_PATH);
    406            i=strlen(fn);
    407            sprintf(fn+i,"\\%d.txt",uin);
   \   00000004   7C619FE5           LDR      R6,??LoadTemplates_0  ;; `?<Constant "\\\\%d.txt">`
   \   00000008   4BDF4DE2           SUB      SP,SP,#+300
   \   0000000C   0040A0E1           MOV      R4,R0
   \   00000010   ........           BL       FreeTemplates
   \   00000014   ........           LDR      R1,??DataTable16  ;; TEMPLATES_PATH
   \   00000018   2C008DE2           ADD      R0,SP,#+44
   \   0000001C   1A0000EF           SWI      +26
   \   00000020   2C008DE2           ADD      R0,SP,#+44
   \   00000024   1B0000EF           SWI      +27
   \   00000028   0070A0E1           MOV      R7,R0
   \   0000002C   2C008DE2           ADD      R0,SP,#+44
   \   00000030   005087E0           ADD      R5,R7,R0
   \   00000034   0420A0E1           MOV      R2,R4
   \   00000038   0610A0E1           MOV      R1,R6
   \   0000003C   0500A0E1           MOV      R0,R5
   \   00000040   160000EF           SWI      +22
    408            if (GetFileStats(fn,&stat,&ul)==-1) goto L1;
   \   00000044   0040E0E3           MVN      R4,#+0
   \   00000048   0D20A0E1           MOV      R2,SP
   \   0000004C   04108DE2           ADD      R1,SP,#+4
   \   00000050   2C008DE2           ADD      R0,SP,#+44
   \   00000054   840000EF           SWI      +132
   \   00000058   040050E1           CMP      R0,R4
   \   0000005C   0A00000A           BEQ      ??LoadTemplates_1
    409            if ((fsize=stat.size)<=0) goto L1;
   \   00000060   08709DE5           LDR      R7,[SP, #+8]
   \   00000064   010057E3           CMP      R7,#+1
   \   00000068   070000BA           BLT      ??LoadTemplates_1
    410            if ((f=fopen(fn,A_ReadOnly+A_BIN,P_READ,&ul))==-1)
   \   0000006C   0D30A0E1           MOV      R3,SP
   \   00000070   8020A0E3           MOV      R2,#+128
   \   00000074   801CA0E3           MOV      R1,#+32768
   \   00000078   2C008DE2           ADD      R0,SP,#+44
   \   0000007C   0A0000EF           SWI      +10
   \   00000080   0080A0E1           MOV      R8,R0
   \   00000084   040058E1           CMP      R8,R4
   \   00000088   1400001A           BNE      ??LoadTemplates_2
    411            {
    412            L1:
    413              strcpy(fn+i,"\\0.txt");
   \                     ??LoadTemplates_1:
   \   0000008C   081086E2           ADD      R1,R6,#+8
   \   00000090   0500A0E1           MOV      R0,R5
   \   00000094   1A0000EF           SWI      +26
    414              if (GetFileStats(fn,&stat,&ul)==-1) return 0;
   \   00000098   0D20A0E1           MOV      R2,SP
   \   0000009C   04108DE2           ADD      R1,SP,#+4
   \   000000A0   2C008DE2           ADD      R0,SP,#+44
   \   000000A4   840000EF           SWI      +132
   \   000000A8   040050E1           CMP      R0,R4
   \   000000AC   0200001A           BNE      ??LoadTemplates_3
   \                     ??LoadTemplates_4:
   \   000000B0   0000A0E3           MOV      R0,#+0
   \                     ??LoadTemplates_5:
   \   000000B4   4BDF8DE2           ADD      SP,SP,#+300      ;; stack cleaning
   \   000000B8   F087BDE8           POP      {R4-R10,PC}      ;; return
    415              if ((fsize=stat.size)<=0) return 0;
   \                     ??LoadTemplates_3:
   \   000000BC   08709DE5           LDR      R7,[SP, #+8]
   \   000000C0   010057E3           CMP      R7,#+1
   \   000000C4   F9FFFFBA           BLT      ??LoadTemplates_4
    416              f=fopen(fn,A_ReadOnly+A_BIN,P_READ,&ul);
   \   000000C8   0D30A0E1           MOV      R3,SP
   \   000000CC   8020A0E3           MOV      R2,#+128
   \   000000D0   801CA0E3           MOV      R1,#+32768
   \   000000D4   2C008DE2           ADD      R0,SP,#+44
   \   000000D8   0A0000EF           SWI      +10
   \   000000DC   0080A0E1           MOV      R8,R0
    417            }
    418            if (f==-1) return 0;
   \                     ??LoadTemplates_2:
   \   000000E0   040058E1           CMP      R8,R4
   \   000000E4   F1FFFF0A           BEQ      ??LoadTemplates_4
    419            p=templates_chars=malloc(fsize+1);
   \   000000E8   ........           LDR      R4,??DataTable23  ;; S_ICONS
   \   000000EC   010087E2           ADD      R0,R7,#+1
   \   000000F0   140000EF           SWI      +20
   \   000000F4   C80084E5           STR      R0,[R4, #+200]
   \   000000F8   0060A0E1           MOV      R6,R0
    420            p[fread(f,p,fsize,&ul)]=0;
   \   000000FC   0050A0E3           MOV      R5,#+0
   \   00000100   0D30A0E1           MOV      R3,SP
   \   00000104   0720A0E1           MOV      R2,R7
   \   00000108   0610A0E1           MOV      R1,R6
   \   0000010C   0800A0E1           MOV      R0,R8
   \   00000110   0B0000EF           SWI      +11
   \   00000114   0650C0E7           STRB     R5,[R0, +R6]
    421            fclose(f,&ul);
   \   00000118   0D10A0E1           MOV      R1,SP
   \   0000011C   0800A0E1           MOV      R0,R8
   \   00000120   0D0000EF           SWI      +13
    422            i=0;
   \   00000124   0070A0E3           MOV      R7,#+0
    423            pp=p;
   \   00000128   0680A0E1           MOV      R8,R6
   \   0000012C   020000EA           B        ??LoadTemplates_6
    424            for(;;)
    425            {
    426              c=*p;
    427              if (c<32)
    428              {
    429                if (pp&&(pp!=p))
    430                {
    431          	templates_lines=realloc(templates_lines,(i+1)*sizeof(char *));
    432          	templates_lines[i++]=pp;
    433                }
    434                pp=NULL;
    435                if (!c) break;
    436                *p=0;
    437              }
    438              else
    439              {
    440                if (pp==NULL) pp=p;
   \                     ??LoadTemplates_7:
   \   00000130   000058E3           CMP      R8,#+0
   \   00000134   0680A001           MOVEQ    R8,R6
    441              }
    442              p++;
   \                     ??LoadTemplates_8:
   \   00000138   016086E2           ADD      R6,R6,#+1
   \                     ??LoadTemplates_6:
   \   0000013C   0090D6E5           LDRB     R9,[R6, #+0]
   \   00000140   200059E3           CMP      R9,#+32
   \   00000144   F9FFFFAA           BGE      ??LoadTemplates_7
   \   00000148   000058E3           CMP      R8,#+0
   \   0000014C   06005811           CMPNE    R8,R6
   \   00000150   0600000A           BEQ      ??LoadTemplates_9
   \   00000154   CC0094E5           LDR      R0,[R4, #+204]
   \   00000158   01A087E2           ADD      R10,R7,#+1
   \   0000015C   0A11A0E1           LSL      R1,R10,#+2
   \   00000160   BA0000EF           SWI      +186
   \   00000164   CC0084E5           STR      R0,[R4, #+204]
   \   00000168   078180E7           STR      R8,[R0, +R7, LSL #+2]
   \   0000016C   0A70A0E1           MOV      R7,R10
   \                     ??LoadTemplates_9:
   \   00000170   0080A0E3           MOV      R8,#+0
   \   00000174   000059E3           CMP      R9,#+0
    443            }
    444            return i;
   \   00000178   0700A001           MOVEQ    R0,R7
   \   0000017C   CCFFFF0A           BEQ      ??LoadTemplates_5
   \   00000180   0050C6E5           STRB     R5,[R6, #+0]
   \   00000184   EBFFFFEA           B        ??LoadTemplates_8
   \                     ??LoadTemplates_0:
   \   00000188   ........           DC32     `?<Constant "\\\\%d.txt">`
    445          }
    446          
    447          
    448          //===================================================================
    449          
    450          typedef struct
    451          {
    452            CSM_RAM csm;
    453            int gui_id;
    454          }MAIN_CSM;
    455          
    456          typedef struct
    457          {
    458            GUI gui;
    459            WSHDR *ws1;
    460            WSHDR *ws2;
    461            int i1;
    462          }MAIN_GUI;
    463          
    464          
    465          
    466          int RXstate=EOP; //-sizeof(RXpkt)..-1 - receive header, 0..RXpkt.data_len - receive data
    467          

   \                                 In segment DATA_Z, align 4, align-sorted
    468          TPKT RXbuf;
   \                     RXbuf:
   \   00000000                      DS8 16392

   \                                 In segment DATA_Z, align 4, align-sorted
    469          TPKT TXbuf;
   \                     TXbuf:
   \   00000000                      DS8 16392
    470          
    471          int connect_state=0;
    472          
    473          int sock=-1;
    474          
    475          volatile unsigned long TOTALRECEIVED;
    476          volatile unsigned long TOTALSENDED;
    477          volatile unsigned long ALLTOTALRECEIVED;	//by BoBa 10.07
    478          volatile unsigned long ALLTOTALSENDED;
    479          
    480          volatile int sendq_l=0; //Длинна очереди для send
    481          volatile void *sendq_p=NULL; //указатель очереди
    482          
    483          volatile int is_gprs_online=1;
    484          
    485          GBSTMR reconnect_tmr;
    486          
    487          extern void kill_data(void *p,void (*func_p)(void *));
    488          

   \                                 In segment CODE, align 4, keep-with-next
    489          void ElfKiller(void)
    490          {
   \                     ElfKiller:
   \   00000000   00402DE9           PUSH     {LR}
    491            extern void *ELF_BEGIN;
    492            kill_data(&ELF_BEGIN,(void (*)(void *))mfree_adr());
   \   00000004   158000EF           SWI      +32789
   \   00000008   0010A0E1           MOV      R1,R0
   \   0000000C   04009FE5           LDR      R0,??ElfKiller_0  ;; ELF_BEGIN
   \   00000010   0040BDE8           POP      {LR}             ;; Pop
   \   00000014   ........           _BF      kill_data,??kill_data??rA  ;; tailcall
   \                     ??ElfKiller_0:
   \   00000018   ........           DC32     ELF_BEGIN
    493          }
    494          
    495          int total_unread;
    496          
    497          //===============================================================================================
    498          #pragma inline
    499          void patch_rect(RECT*rc,int x,int y, int x2, int y2)
    500          {
    501            rc->x=x;
    502            rc->y=y;
    503            rc->x2=x2;
    504            rc->y2=y2;
    505          }
    506          
    507          #pragma inline

   \                                 In segment CODE, align 4, keep-with-next
    508          void patch_header(const HEADER_DESC* head)
    509          {
   \                     patch_header:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    510            ((HEADER_DESC*)head)->rc.x=0;
   \   00000008   0000A0E3           MOV      R0,#+0
   \   0000000C   B000C4E1           STRH     R0,[R4, #+0]
    511            ((HEADER_DESC*)head)->rc.y=YDISP;
   \   00000010   1800A0E3           MOV      R0,#+24
   \   00000014   B200C4E1           STRH     R0,[R4, #+2]
    512            ((HEADER_DESC*)head)->rc.x2=ScreenW()-1;
   \   00000018   888100EF           SWI      +33160
   \   0000001C   010040E2           SUB      R0,R0,#+1
   \   00000020   B400C4E1           STRH     R0,[R4, #+4]
    513            ((HEADER_DESC*)head)->rc.y2=HeaderH()+YDISP-1;
   \   00000024   8A8100EF           SWI      +33162
   \   00000028   170080E2           ADD      R0,R0,#+23
   \   0000002C   B600C4E1           STRH     R0,[R4, #+6]
    514          }
   \   00000030   1080BDE8           POP      {R4,PC}          ;; return
    515          #pragma inline

   \                                 In segment CODE, align 4, keep-with-next
    516          void patch_input(const INPUTDIA_DESC* inp)
    517          {
   \                     patch_input:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    518            ((INPUTDIA_DESC*)inp)->rc.x=0;
   \   00000008   0000A0E3           MOV      R0,#+0
   \   0000000C   B801C4E1           STRH     R0,[R4, #+24]
    519            ((INPUTDIA_DESC*)inp)->rc.y=HeaderH()+1+YDISP;
   \   00000010   8A8100EF           SWI      +33162
   \   00000014   190080E2           ADD      R0,R0,#+25
   \   00000018   BA01C4E1           STRH     R0,[R4, #+26]
    520            ((INPUTDIA_DESC*)inp)->rc.x2=ScreenW()-1;
   \   0000001C   888100EF           SWI      +33160
   \   00000020   010040E2           SUB      R0,R0,#+1
   \   00000024   BC01C4E1           STRH     R0,[R4, #+28]
    521            ((INPUTDIA_DESC*)inp)->rc.y2=ScreenH()-SoftkeyH()-1;
   \   00000028   898100EF           SWI      +33161
   \   0000002C   0050A0E1           MOV      R5,R0
   \   00000030   8B8100EF           SWI      +33163
   \   00000034   000045E0           SUB      R0,R5,R0
   \   00000038   010040E2           SUB      R0,R0,#+1
   \   0000003C   BE01C4E1           STRH     R0,[R4, #+30]
    522          }
   \   00000040   3080BDE8           POP      {R4,R5,PC}       ;; return
    523          //===============================================================================================
    524          
    525          volatile CLIST *cltop;
    526          
    527          volatile unsigned int GROUP_CACHE; //Текущая группа для добавления
    528          
    529          volatile int contactlist_menu_id;
    530          
    531          GBSTMR tmr_active;
    532          
    533          volatile int edchat_id;
    534          
    535          //Применяется для добавления сообщений
    536          //CLIST *edcontact;
    537          //void *edgui_data;
    538          
    539          static int prev_clmenu_itemcount;
    540          
    541          char clm_hdr_text[48];
    542          static const char def_clm_hdr_text[] = LG_CLTITLE;
    543          static const char key_clm_hdr_text[] = LG_CLT9INP;
    544          
    545          static const HEADER_DESC contactlist_menuhdr = {0, 0, 0, 0, S_ICONS+ICON_HEAD, (int)clm_hdr_text, LGP_NULL};
    546          static const int menusoftkeys[] = {0,1,2};
    547          static const SOFTKEY_DESC menu_sk[] =
    548          {
    549            {0x0018, 0x0000, (int)LG_SELECT},
    550            {0x0001, 0x0000, (int)LG_CLOSE},
    551            {0x003D, 0x0000, (int)LGP_DOIT_PIC}
    552          };
    553          
    554          char clmenu_sk_r[16];
    555          static const char def_clmenu_sk_r[] = LG_CLOSE;
    556          static const char key_clmenu_sk_r[] = LG_CLEAR;
    557          
    558          static const SOFTKEY_DESC clmenu_sk[]=
    559          {
    560            {0x0018, 0x0000, (int)LG_OPTIONS},
    561            {0x0001, 0x0000, (int)clmenu_sk_r},
    562            {0x003D, 0x0000, (int)LGP_DOIT_PIC}
    563          };
    564          
    565          const SOFTKEYSTAB menu_skt =
    566          {
    567            menu_sk, 0
    568          };
    569          
    570          static const SOFTKEYSTAB clmenu_skt =
    571          {
    572            clmenu_sk, 0
    573          };
    574          
    575          void contactlist_menu_ghook(void *data, int cmd);
    576          int contactlist_menu_onkey(void *data, GUI_MSG *msg);
    577          void contactlist_menu_iconhndl(void *data, int curitem, void *unk);
    578          
    579          #ifdef USE_MLMENU
    580          static const ML_MENU_DESC contactlist_menu=
    581          {
    582            8,contactlist_menu_onkey,contactlist_menu_ghook,NULL,
    583            menusoftkeys,
    584            &clmenu_skt,
    585            0x11, //+0x400
    586            contactlist_menu_iconhndl,
    587            NULL,   //Items
    588            NULL,   //Procs
    589            0,   //n
    590            1 //Добавочных строк
    591          };
    592          #else
    593          static const MENU_DESC contactlist_menu=
    594          {
    595            8,contactlist_menu_onkey,contactlist_menu_ghook,NULL,
    596            menusoftkeys,
    597            &clmenu_skt,
    598            0x11, //+0x400
    599            contactlist_menu_iconhndl,
    600            NULL,   //Items
    601            NULL,   //Procs
    602            0   //n
    603          };
    604          #endif
    605          
    606          //GBSTMR tmr_ping;
    607          int tenseconds_to_ping;
    608          

   \                                 In segment CODE, align 4, keep-with-next
    609          LOGQ *NewLOGQ(const char *s)
    610          {
   \                     NewLOGQ:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    611            LOGQ *p=malloc(sizeof(LOGQ)+1+strlen(s));
   \   00000008   1B0000EF           SWI      +27
   \   0000000C   610080E2           ADD      R0,R0,#+97
   \   00000010   140000EF           SWI      +20
   \   00000014   0050A0E1           MOV      R5,R0
    612            zeromem(p,sizeof(LOGQ));
   \   00000018   6010A0E3           MOV      R1,#+96
   \   0000001C   1D0100EF           SWI      +285
    613            strcpy(p->text,s);
   \   00000020   0410A0E1           MOV      R1,R4
   \   00000024   600085E2           ADD      R0,R5,#+96
   \   00000028   1A0000EF           SWI      +26
    614            return p;
   \   0000002C   ........           B        ?Subroutine99
    615          }

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine99:
   \   00000000   0500A0E1           MOV      R0,R5
   \   00000004   3080BDE8           POP      {R4,R5,PC}       ;; return
    616          

   \                                 In segment CODE, align 4, keep-with-next
    617          LOGQ *LastLOGQ(LOGQ **pp)
    618          {
    619            LOGQ *q=*pp;
   \                     LastLOGQ:
   \   00000000   000090E5           LDR      R0,[R0, #+0]
    620            if (q)
   \   00000004   000050E3           CMP      R0,#+0
   \   00000008   1EFF2F01           BXEQ     LR
   \   0000000C   000000EA           B        ??LastLOGQ_0
    621            {
    622              while(q->next) q=q->next;
   \                     ??LastLOGQ_1:
   \   00000010   0100A0E1           MOV      R0,R1
   \                     ??LastLOGQ_0:
   \   00000014   001090E5           LDR      R1,[R0, #+0]
   \   00000018   000051E3           CMP      R1,#+0
   \   0000001C   FBFFFF1A           BNE      ??LastLOGQ_1
    623            }
    624            return(q);
   \   00000020   1EFF2FE1           BX       LR               ;; return
    625          }
    626          
    627          //Уничтожить лог

   \                                 In segment CODE, align 4, keep-with-next
    628          void FreeLOGQ(LOGQ **pp)
    629          {
   \                     FreeLOGQ:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0010A0E1           MOV      R1,R0
    630            LOGQ *p=*pp;
   \   00000008   000091E5           LDR      R0,[R1, #+0]
    631            *pp=NULL; //Сразу обрежем
   \   0000000C   0020A0E3           MOV      R2,#+0
   \   00000010   002081E5           STR      R2,[R1, #+0]
   \   00000014   020000EA           B        ??FreeLOGQ_0
    632            while(p)
    633            {
    634              LOGQ *np=p->next;
   \                     ??FreeLOGQ_1:
   \   00000018   004090E5           LDR      R4,[R0, #+0]
    635              mfree(p);
   \   0000001C   150000EF           SWI      +21
    636              p=np;
   \   00000020   0400A0E1           MOV      R0,R4
    637            }
   \                     ??FreeLOGQ_0:
   \   00000024   000050E3           CMP      R0,#+0
   \   00000028   FAFFFF1A           BNE      ??FreeLOGQ_1
    638          }
   \   0000002C   1080BDE8           POP      {R4,PC}          ;; return
    639          
    640          //Удалить элемент из лога

   \                                 In segment CODE, align 4, keep-with-next
    641          void RemoveLOGQ(LOGQ **queue, LOGQ *p)
    642          {
   \                     RemoveLOGQ:
   \   00000000   00402DE9           PUSH     {LR}
    643            LOGQ *q=(LOGQ *)queue;
   \   00000004   000000EA           B        ??RemoveLOGQ_0
    644            LOGQ *qp;
    645            while(qp=q->next)
    646            {
    647              if (qp==p)
    648              {
    649                q->next=p->next;
    650                break;
    651              }
    652              q=qp;
   \                     ??RemoveLOGQ_1:
   \   00000008   0200A0E1           MOV      R0,R2
   \                     ??RemoveLOGQ_0:
   \   0000000C   002090E5           LDR      R2,[R0, #+0]
   \   00000010   000052E3           CMP      R2,#+0
   \   00000014   0300000A           BEQ      ??RemoveLOGQ_2
   \   00000018   010052E1           CMP      R2,R1
   \   0000001C   F9FFFF1A           BNE      ??RemoveLOGQ_1
   \   00000020   002091E5           LDR      R2,[R1, #+0]
   \   00000024   002080E5           STR      R2,[R0, #+0]
    653            }
    654            mfree(p); //Если элемент вообще не в логе
   \                     ??RemoveLOGQ_2:
   \   00000028   0100A0E1           MOV      R0,R1
   \   0000002C   150000EF           SWI      +21
    655          }
   \   00000030   0080BDE8           POP      {PC}             ;; return
    656          
    657          //Добавить элемент в лог

   \                                 In segment CODE, align 4, keep-with-next
    658          int AddLOGQ(LOGQ **queue, LOGQ *p)
    659          {
    660            LOGQ *q=(LOGQ *)queue;
    661            LOGQ *qp;
    662            int i=0;
   \                     AddLOGQ:
   \   00000000   0020A0E3           MOV      R2,#+0
   \   00000004   000000EA           B        ??AddLOGQ_0
    663            while(qp=q->next) {q=qp;i++;}
   \                     ??AddLOGQ_1:
   \   00000008   0300A0E1           MOV      R0,R3
   \                     ??AddLOGQ_0:
   \   0000000C   003090E5           LDR      R3,[R0, #+0]
   \   00000010   012082E2           ADD      R2,R2,#+1
   \   00000014   000053E3           CMP      R3,#+0
   \   00000018   FAFFFF1A           BNE      ??AddLOGQ_1
    664            p->next=NULL;
   \   0000001C   003081E5           STR      R3,[R1, #+0]
    665            q->next=p;
   \   00000020   001080E5           STR      R1,[R0, #+0]
    666            return(i+1); //Теперь всего в логе элементов
   \   00000024   0200A0E1           MOV      R0,R2
   \   00000028   1EFF2FE1           BX       LR               ;; return
    667          }
    668          
    669          //Получаем последний полученный X-статус

   \                                 In segment CODE, align 4, keep-with-next
    670          char *GetLastXTextLOGQ(CLIST *t)
    671          {
    672            LOGQ *p = t->log;
   \                     GetLastXTextLOGQ:
   \   00000000   641090E5           LDR      R1,[R0, #+100]
    673            char *s = 0;
   \   00000004   0000A0E3           MOV      R0,#+0
    674            if(!p) return 0;
   \   00000008   000051E3           CMP      R1,#+0
   \   0000000C   0500001A           BNE      ??GetLastXTextLOGQ_0
   \   00000010   1EFF2FE1           BX       LR
    675            while(p->next)
    676            {
    677              if((p->type&0x0F)==3)
   \                     ??GetLastXTextLOGQ_1:
   \   00000014   0C3091E5           LDR      R3,[R1, #+12]
   \   00000018   0F3003E2           AND      R3,R3,#0xF
   \   0000001C   030053E3           CMP      R3,#+3
    678                s = p->text;
   \   00000020   60008102           ADDEQ    R0,R1,#+96
    679              p = p->next;
   \   00000024   0210A0E1           MOV      R1,R2
    680            }
   \                     ??GetLastXTextLOGQ_0:
   \   00000028   002091E5           LDR      R2,[R1, #+0]
   \   0000002C   000052E3           CMP      R2,#+0
   \   00000030   F7FFFF1A           BNE      ??GetLastXTextLOGQ_1
    681            if((p->type&0x0F)==3)
   \   00000034   0C2091E5           LDR      R2,[R1, #+12]
   \   00000038   0F2002E2           AND      R2,R2,#0xF
   \   0000003C   030052E3           CMP      R2,#+3
    682              s = p->text;
   \   00000040   60008102           ADDEQ    R0,R1,#+96
    683            return s;
   \   00000044   1EFF2FE1           BX       LR               ;; return
    684          }
    685          

   \                                 In segment CODE, align 4, keep-with-next
    686          int GetIconIndex(CLIST *t)
    687          {
    688            unsigned short s;
    689            if (t)
   \                     GetIconIndex:
   \   00000000   000050E3           CMP      R0,#+0
   \   00000004   3400000A           BEQ      ??GetIconIndex_0
    690            {
    691              s=t->state;
    692              if (t->isgroup) return(IS_GROUP);
   \   00000008   082090E5           LDR      R2,[R0, #+8]
   \   0000000C   B415D0E1           LDRH     R1,[R0, #+84]
   \   00000010   000052E3           CMP      R2,#+0
   \   00000014   0F00A013           MOVNE    R0,#+15
   \   00000018   1EFF2F11           BXNE     LR
    693              if (t->isunread)
   \   0000001C   580090E5           LDR      R0,[R0, #+88]
   \   00000020   000050E3           CMP      R0,#+0
    694                return(IS_MSG);
   \   00000024   0D00A013           MOVNE    R0,#+13
   \   00000028   1EFF2F11           BXNE     LR
    695              else
    696              {
    697                if (s==0xFFFF) return(IS_OFFLINE);
   \   0000002C   FF20A0E3           MOV      R2,#+255
   \   00000030   FF2C82E3           ORR      R2,R2,#0xFF00
   \   00000034   020051E1           CMP      R1,R2
   \   00000038   1EFF2F01           BXEQ     LR
    698                if ((s&0xF000)==0x2000) return (IS_LUNCH);
   \   0000003C   F02C01E2           AND      R2,R1,#0xF000
   \   00000040   800D52E3           CMP      R2,#+8192
   \   00000044   0900A003           MOVEQ    R0,#+9
   \   00000048   1EFF2F01           BXEQ     LR
    699                if ((s&0xF000)==0x3000) return (IS_EVIL);
   \   0000004C   C00D52E3           CMP      R2,#+12288
   \   00000050   0700A003           MOVEQ    R0,#+7
   \   00000054   1EFF2F01           BXEQ     LR
    700                if ((s&0xF000)==0x4000) return (IS_DEPRESSION);
   \   00000058   400C52E3           CMP      R2,#+16384
   \   0000005C   0600A003           MOVEQ    R0,#+6
   \   00000060   1EFF2F01           BXEQ     LR
    701                if ((s&0xF000)==0x5000) return (IS_HOME);
   \   00000064   500C52E3           CMP      R2,#+20480
   \   00000068   0800A003           MOVEQ    R0,#+8
   \   0000006C   1EFF2F01           BXEQ     LR
    702                if ((s&0xF000)==0x6000) return (IS_WORK);
   \   00000070   F00C01E2           AND      R0,R1,#0xF000
   \   00000074   600C50E3           CMP      R0,#+24576
   \   00000078   0A00A003           MOVEQ    R0,#+10
   \   0000007C   1EFF2F01           BXEQ     LR
    703                if (s & 0x0020) return(IS_FFC);
   \   00000080   200011E3           TST      R1,#0x20
   \   00000084   0100000A           BEQ      ??GetIconIndex_1
   \                     ??GetIconIndex_2:
   \   00000088   0C00A0E3           MOV      R0,#+12
   \   0000008C   1EFF2FE1           BX       LR
    704                if (s & 0x0001) return(IS_AWAY);
   \                     ??GetIconIndex_1:
   \   00000090   010011E3           TST      R1,#0x1
   \   00000094   0200A013           MOVNE    R0,#+2
   \   00000098   1EFF2F11           BXNE     LR
    705                if (s & 0x0005) return(IS_NA);
   \   0000009C   050011E3           TST      R1,#0x5
   \   000000A0   0300A013           MOVNE    R0,#+3
   \   000000A4   1EFF2F11           BXNE     LR
    706                if (s & 0x0011) return(IS_OCCUPIED);
   \   000000A8   110011E3           TST      R1,#0x11
   \   000000AC   0400A013           MOVNE    R0,#+4
   \   000000B0   1EFF2F11           BXNE     LR
    707                if (s & 0x0013) return(IS_DND);
   \   000000B4   130011E3           TST      R1,#0x13
   \   000000B8   0500A013           MOVNE    R0,#+5
   \   000000BC   1EFF2F11           BXNE     LR
    708                if (s & 0x0002) return(IS_FFC);
   \   000000C0   020011E3           TST      R1,#0x2
   \   000000C4   EFFFFF1A           BNE      ??GetIconIndex_2
    709                if (s & 0x0100) return(IS_INVISIBLE);
   \   000000C8   400F11E3           TST      R1,#0x100
   \   000000CC   0100A013           MOVNE    R0,#+1
   \   000000D0   1EFF2F11           BXNE     LR
    710              }
    711            }
    712            else
    713            {
    714              return(IS_UNKNOWN);
    715            }
    716            return(IS_ONLINE);
   \   000000D4   0B00A0E3           MOV      R0,#+11
   \   000000D8   1EFF2FE1           BX       LR
   \                     ??GetIconIndex_0:
   \   000000DC   0E00A0E3           MOV      R0,#+14
   \   000000E0   1EFF2FE1           BX       LR               ;; return
    717          }
    718          

   \                                 In segment CODE, align 4, keep-with-next
    719          LOGQ *FindContactLOGQByAck(TPKT *p)
    720          {
   \                     FindContactLOGQByAck:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    721            CLIST *t;
    722            LockSched();
   \   00000008   460100EF           SWI      +326
    723            t=FindContactByUin(p->pkt.uin);
   \   0000000C   000094E5           LDR      R0,[R4, #+0]
   \   00000010   ........           _BLF     FindContactByUin,??FindContactByUin??rA
   \   00000014   0050A0E1           MOV      R5,R0
    724            UnlockSched();
   \   00000018   470100EF           SWI      +327
    725            unsigned int id=*((unsigned short*)(p->data));
   \   0000001C   B840D4E1           LDRH     R4,[R4, #+8]
    726            LOGQ *q;
    727            if (!t) return NULL;
   \   00000020   000055E3           CMP      R5,#+0
   \   00000024   0000A003           MOVEQ    R0,#+0
   \   00000028   3080BD08           POPEQ    {R4,R5,PC}
    728            LockSched();
   \   0000002C   460100EF           SWI      +326
    729            q=t->log;
   \   00000030   645095E5           LDR      R5,[R5, #+100]
   \   00000034   000000EA           B        ??FindContactLOGQByAck_0
    730            while(q)
    731            {
    732              if (q->ID==id) break;
    733              q=q->next;
   \                     ??FindContactLOGQByAck_1:
   \   00000038   005095E5           LDR      R5,[R5, #+0]
   \                     ??FindContactLOGQByAck_0:
   \   0000003C   000055E3           CMP      R5,#+0
   \   00000040   08009515           LDRNE    R0,[R5, #+8]
   \   00000044   04005011           CMPNE    R0,R4
   \   00000048   FAFFFF1A           BNE      ??FindContactLOGQByAck_1
    734            }
    735            UnlockSched();
   \   0000004C   470100EF           SWI      +327
    736            return q;
   \   00000050                      REQUIRE ?Subroutine99
   \   00000050                      ;; // Fall through to label ?Subroutine99
    737          }
    738          
    739          
    740          char ContactT9Key[32];
    741          

   \                                 In segment CODE, align 4, keep-with-next
    742          void UpdateCLheader(void)
    743          {
   \                     UpdateCLheader:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
    744            if (strlen(ContactT9Key))
   \   00000004   58609FE5           LDR      R6,??UpdateCLheader_0  ;; key_clmenu_sk_r
   \   00000008   ........           LDR      R8,??DataTable23  ;; S_ICONS
   \   0000000C   FE4FA0E3           MOV      R4,#+1016
   \   00000010   F25FA0E3           MOV      R5,#+968
   \   00000014   9A7FA0E3           MOV      R7,#+616
   \   00000018   080087E0           ADD      R0,R7,R8
   \   0000001C   1B0000EF           SWI      +27
   \   00000020   000050E3           CMP      R0,#+0
   \   00000024   0700000A           BEQ      ??UpdateCLheader_1
    745            {
    746              strcpy(clm_hdr_text,key_clm_hdr_text);
   \   00000028   101086E2           ADD      R1,R6,#+16
   \   0000002C   080085E0           ADD      R0,R5,R8
   \   00000030   1A0000EF           SWI      +26
    747              strcat(clm_hdr_text,ContactT9Key);
   \   00000034   081087E0           ADD      R1,R7,R8
   \   00000038   080085E0           ADD      R0,R5,R8
   \   0000003C   170000EF           SWI      +23
    748              strcpy(clmenu_sk_r,key_clmenu_sk_r);
   \   00000040   0610A0E1           MOV      R1,R6
   \   00000044   030000EA           B        ??UpdateCLheader_2
    749            }
    750            else
    751            {
    752              strcpy(clm_hdr_text,def_clm_hdr_text);
   \                     ??UpdateCLheader_1:
   \   00000048   041086E2           ADD      R1,R6,#+4
   \   0000004C   080085E0           ADD      R0,R5,R8
   \   00000050   1A0000EF           SWI      +26
    753              strcpy(clmenu_sk_r,def_clmenu_sk_r);
   \   00000054   1C1086E2           ADD      R1,R6,#+28
   \                     ??UpdateCLheader_2:
   \   00000058   080084E0           ADD      R0,R4,R8
   \   0000005C   1A0000EF           SWI      +26
    754            }
    755          }
   \   00000060   F081BDE8           POP      {R4-R8,PC}       ;; return
   \                     ??UpdateCLheader_0:
   \   00000064   ........           DC32     key_clmenu_sk_r
    756          

   \                                 In segment CODE, align 4, keep-with-next
    757          void ClearContactT9Key(void)
    758          {
    759            zeromem(ContactT9Key,sizeof(ContactT9Key));
   \                     ClearContactT9Key:
   \   00000000   0C009FE5           LDR      R0,??ClearContactT9Key_0  ;; S_ICONS + 616
   \   00000004   00402DE9           PUSH     {LR}
   \   00000008   2010A0E3           MOV      R1,#+32
   \   0000000C   1D0100EF           SWI      +285
    760          }
   \   00000010   0080BDE8           POP      {PC}             ;; return
   \                     ??ClearContactT9Key_0:
   \   00000014   ........           DC32     S_ICONS + 616
    761          

   \                                 In segment CODE, align 4, keep-with-next
    762          void AddContactT9Key(int chr)
    763          {
   \                     AddContactT9Key:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
    764            int l=strlen(ContactT9Key);
   \   00000004   ........           LDR      R5,??DataTable23  ;; S_ICONS
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   9A0F85E2           ADD      R0,R5,#+616
   \   00000010   1B0000EF           SWI      +27
    765            if (l<(sizeof(ContactT9Key)-1))
   \   00000014   1F0050E3           CMP      R0,#+31
    766            {
    767              ContactT9Key[l]=chr;
   \   00000018   05008030           ADDCC    R0,R0,R5
   \   0000001C   6842C035           STRBCC   R4,[R0, #+616]
    768            }
    769          }
   \   00000020   3080BDE8           POP      {R4,R5,PC}       ;; return
    770          

   \                                 In segment CODE, align 4, keep-with-next
    771          void BackSpaceContactT9(void)
    772          {
   \                     BackSpaceContactT9:
   \   00000000   10402DE9           PUSH     {R4,LR}
    773            int l=strlen(ContactT9Key);
   \   00000004   ........           LDR      R4,??DataTable23  ;; S_ICONS
   \   00000008   9A0F84E2           ADD      R0,R4,#+616
   \   0000000C   1B0000EF           SWI      +27
    774            if (l)
   \   00000010   000050E3           CMP      R0,#+0
    775            {
    776              l--;
    777              ContactT9Key[l]=0;
   \   00000014   04008010           ADDNE    R0,R0,R4
   \   00000018   0010A013           MOVNE    R1,#+0
   \   0000001C   6712C015           STRBNE   R1,[R0, #+615]
    778            }
    779          }
   \   00000020   1080BDE8           POP      {R4,PC}          ;; return
    780          

   \                                 In segment CODE, align 4, keep-with-next
    781          void create_contactlist_menu(void)
    782          {
   \                     create_contactlist_menu:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
    783            int i;
    784            i=CountContacts();
    785            prev_clmenu_itemcount=i;
   \   00000004   ........           LDR      R5,??DataTable23  ;; S_ICONS
    786            UpdateCLheader();
    787            patch_header(&contactlist_menuhdr);
   \   00000008   38609FE5           LDR      R6,??create_contactlist_menu_0  ;; contactlist_menuhdr
   \   0000000C   ........           _BLF     CountContacts,??CountContacts??rA
   \   00000010   0040A0E1           MOV      R4,R0
   \   00000014   0C4185E5           STR      R4,[R5, #+268]
   \   00000018   ........           BL       UpdateCLheader
   \   0000001C   0600A0E1           MOV      R0,R6
   \   00000020   ........           _BLF     patch_header,??patch_header??rA
    788          #ifdef USE_MLMENU
    789            contactlist_menu_id=CreateMultiLinesMenu(0,0,&contactlist_menu,&contactlist_menuhdr,0,i);
   \   00000024   10002DE9           PUSH     {R4}
   \   00000028   0000A0E3           MOV      R0,#+0
   \   0000002C   01002DE9           PUSH     {R0}
   \   00000030   0630A0E1           MOV      R3,R6
   \   00000034   142086E2           ADD      R2,R6,#+20
   \   00000038   0010A0E3           MOV      R1,#+0
   \   0000003C   170200EF           SWI      +535
   \   00000040   040185E5           STR      R0,[R5, #+260]
    790          #else
    791            contactlist_menu_id=CreateMenu(0,0,&contactlist_menu,&contactlist_menuhdr,0,i,0,0);
    792          #endif
    793          }
   \   00000044   7380BDE8           POP      {R0,R1,R4-R6,PC}  ;; return
   \                     ??create_contactlist_menu_0:
   \   00000048   ........           DC32     contactlist_menuhdr
    794          

   \                                 In segment CODE, align 4, keep-with-next
    795          void contactlist_menu_ghook(void *data, int cmd)
    796          {
   \                     contactlist_menu_ghook:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0140A0E1           MOV      R4,R1
    797            PNGTOP_DESC *pltop=PNG_TOP();
   \   00000008   B98100EF           SWI      +33209
    798            if (cmd==9)
   \   0000000C   0010A0E3           MOV      R1,#+0
   \   00000010   090054E3           CMP      R4,#+9
    799            {
    800              pltop->dyn_pltop=NULL;
   \   00000014   08108005           STREQ    R1,[R0, #+8]
   \   00000018   1080BD08           POPEQ    {R4,PC}
    801            }
    802            if (cmd==0x0A)
   \   0000001C   0A0054E3           CMP      R4,#+10
   \   00000020   1080BD18           POPNE    {R4,PC}
    803            {
    804              silenthide=0;
   \   00000024   14209FE5           LDR      R2,??contactlist_menu_ghook_0  ;; S_ICONS + 160
   \   00000028   001082E5           STR      R1,[R2, #+0]
    805              pltop->dyn_pltop=XStatusesImgList;
   \   0000002C   10109FE5           LDR      R1,??contactlist_menu_ghook_0+0x4  ;; XStatusesImgList
   \   00000030   001091E5           LDR      R1,[R1, #+0]
   \   00000034   081080E5           STR      R1,[R0, #+8]
    806              DisableIDLETMR();
   \   00000038   7F0100EF           SWI      +383
    807            }
    808          }
   \   0000003C   1080BDE8           POP      {R4,PC}          ;; return
   \                     ??contactlist_menu_ghook_0:
   \   00000040   ........           DC32     S_ICONS + 160
   \   00000044   ........           DC32     XStatusesImgList
    809          

   \                                 In segment CODE, align 4, keep-with-next
    810          void RecountMenu(CLIST *req, int needfocus)
    811          {
   \                     RecountMenu:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
    812            int i;
    813            int j;
    814            void *data;
    815            UpdateCLheader();
    816            if (!contactlist_menu_id) return; //Нечего считать
   \   00000004   ........           LDR      R6,??DataTable23  ;; S_ICONS
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   ........           BL       UpdateCLheader
   \   00000014   040196E5           LDR      R0,[R6, #+260]
   \   00000018   000050E3           CMP      R0,#+0
   \   0000001C   F080BD08           POPEQ    {R4-R7,PC}
    817            data=FindGUIbyId(contactlist_menu_id,NULL);
   \   00000020   040196E5           LDR      R0,[R6, #+260]
   \   00000024   0010A0E3           MOV      R1,#+0
   \   00000028   090200EF           SWI      +521
   \   0000002C   0070A0E1           MOV      R7,R0
    818            if (req==NULL)
   \   00000030   000054E3           CMP      R4,#+0
   \   00000034   0200000A           BEQ      ??RecountMenu_0
    819            {
    820              j=0;
    821            }
    822            else
    823            {
    824              j=FindContactByContact(req);
   \   00000038   0400A0E1           MOV      R0,R4
   \   0000003C   ........           _BLF     FindContactByContact,??FindContactByContact??rA
   \   00000040   0040A0E1           MOV      R4,R0
    825            }
    826            i=CountContacts();
   \                     ??RecountMenu_0:
   \   00000044   ........           _BLF     CountContacts,??CountContacts??rA
    827            if (j>=i) j=i-1;
    828            if (j<0) j=0;
    829            if (i!=prev_clmenu_itemcount)
   \   00000048   0C1196E5           LDR      R1,[R6, #+268]
   \   0000004C   000054E1           CMP      R4,R0
   \   00000050   014040A2           SUBGE    R4,R0,#+1
   \   00000054   000054E3           CMP      R4,#+0
   \   00000058   0040A043           MOVMI    R4,#+0
   \   0000005C   010050E1           CMP      R0,R1
   \   00000060   0300000A           BEQ      ??RecountMenu_1
    830            {
    831              prev_clmenu_itemcount=i;
   \   00000064   0C0186E5           STR      R0,[R6, #+268]
    832              Menu_SetItemCountDyn(data,i);
   \   00000068   0010A0E1           MOV      R1,R0
   \   0000006C   0700A0E1           MOV      R0,R7
   \   00000070   E60100EF           SWI      +486
    833            }
    834            if(needfocus) SetCursorToMenuItem(data,j);
   \                     ??RecountMenu_1:
   \   00000074   000055E3           CMP      R5,#+0
   \   00000078   0200000A           BEQ      ??RecountMenu_2
   \   0000007C   0410A0E1           MOV      R1,R4
   \   00000080   0700A0E1           MOV      R0,R7
   \   00000084   C40100EF           SWI      +452
    835            if (IsGuiOnTop(contactlist_menu_id)) RefreshGUI();
   \                     ??RecountMenu_2:
   \   00000088   040196E5           LDR      R0,[R6, #+260]
   \   0000008C   350100EF           SWI      +309
   \   00000090   000050E3           CMP      R0,#+0
   \   00000094   F080BD08           POPEQ    {R4-R7,PC}
   \   00000098   960100EF           SWI      +406
   \   0000009C   F080BDE8           POP      {R4-R7,PC}       ;; return
    836          }
    837          

   \                                 In segment CODE, align 4, keep-with-next
    838          int contactlist_menu_onkey(void *data, GUI_MSG *msg)
    839          {
   \                     contactlist_menu_onkey:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000004   0140A0E1           MOV      R4,R1
    840            CLIST *t;
    841            int i;
    842            i=GetCurMenuItem(data);
   \   00000008   8F0100EF           SWI      +399
    843            t=FindContactByN(i);
   \   0000000C   ........           _BLF     FindContactByN,??FindContactByN??rA
   \   00000010   0080A0E1           MOV      R8,R0
    844            if (msg->keys==0x18)
   \   00000014   F200D4E1           LDRSH    R0,[R4, #+2]
   \   00000018   180050E3           CMP      R0,#+24
   \   0000001C   0100001A           BNE      ??contactlist_menu_onkey_0
    845            {
    846              ShowMainMenu();
   \   00000020   ........           _BLF     ShowMainMenu,??ShowMainMenu??rA
   \   00000024   280000EA           B        ??contactlist_menu_onkey_1
    847              return(-1);
    848            }
    849            if (msg->keys==0x3D)
   \                     ??contactlist_menu_onkey_0:
   \   00000028   ........           LDR      R5,??DataTable23  ;; S_ICONS
   \   0000002C   FF90A0E3           MOV      R9,#+255
   \   00000030   FF9C89E3           ORR      R9,R9,#0xFF00
   \   00000034   9A6FA0E3           MOV      R6,#+616
   \   00000038   3D0050E3           CMP      R0,#+61
   \   0000003C   2400001A           BNE      ??contactlist_menu_onkey_2
    850            {
    851              if (t)
   \   00000040   000058E3           CMP      R8,#+0
   \   00000044   2000000A           BEQ      ??contactlist_menu_onkey_1
    852              {
    853                if (t->isgroup)
   \   00000048   080098E5           LDR      R0,[R8, #+8]
   \   0000004C   000050E3           CMP      R0,#+0
   \   00000050   0600000A           BEQ      ??contactlist_menu_onkey_3
    854                {
    855          	t->state^=0xFFFF;
   \   00000054   B405D8E1           LDRH     R0,[R8, #+84]
    856          	RecountMenu(t, 1);
   \   00000058   0110A0E3           MOV      R1,#+1
   \   0000005C   000029E0           EOR      R0,R9,R0
   \   00000060   B405C8E1           STRH     R0,[R8, #+84]
   \                     ??contactlist_menu_onkey_4:
   \   00000064   0800A0E1           MOV      R0,R8
   \                     ??contactlist_menu_onkey_5:
   \   00000068   ........           BL       RecountMenu
   \   0000006C   160000EA           B        ??contactlist_menu_onkey_1
    857          	return(-1);
    858                }
    859                if (strlen(ContactT9Key))
   \                     ??contactlist_menu_onkey_3:
   \   00000070   050086E0           ADD      R0,R6,R5
   \   00000074   1B0000EF           SWI      +27
   \   00000078   000050E3           CMP      R0,#+0
   \   0000007C   0500000A           BEQ      ??contactlist_menu_onkey_6
    860                {
    861          	ClearContactT9Key();
   \   00000080   2010A0E3           MOV      R1,#+32
   \   00000084   050086E0           ADD      R0,R6,R5
   \   00000088   1D0100EF           SWI      +285
    862          	RecountMenu(NULL, 1);
   \   0000008C   0110A0E3           MOV      R1,#+1
   \   00000090   0000A0E3           MOV      R0,#+0
   \   00000094   ........           BL       RecountMenu
    863                }
    864                if(!t->isactive && HISTORY_BUFFER) GetHistory(t, 64<<HISTORY_BUFFER);
   \                     ??contactlist_menu_onkey_6:
   \   00000098   700098E5           LDR      R0,[R8, #+112]
   \   0000009C   000050E3           CMP      R0,#+0
   \   000000A0   0700001A           BNE      ??contactlist_menu_onkey_7
   \   000000A4   ........           LDR      R0,??DataTable24  ;; HISTORY_BUFFER
   \   000000A8   000090E5           LDR      R0,[R0, #+0]
   \   000000AC   000050E3           CMP      R0,#+0
   \   000000B0   0300000A           BEQ      ??contactlist_menu_onkey_7
   \   000000B4   4010A0E3           MOV      R1,#+64
   \   000000B8   1110A0E1           LSL      R1,R1,R0
   \   000000BC   0800A0E1           MOV      R0,R8
   \   000000C0   ........           _BLF     GetHistory,??GetHistory??rA
    865                CreateEditChat(t);
   \                     ??contactlist_menu_onkey_7:
   \   000000C4   0800A0E1           MOV      R0,R8
   \   000000C8   ........           BL       CreateEditChat
    866              }
    867              return(-1);
   \                     ??contactlist_menu_onkey_1:
   \   000000CC   0000E0E3           MVN      R0,#+0
   \   000000D0   F08FBDE8           POP      {R4-R11,PC}
    868            }
    869            if (msg->keys==1)
   \                     ??contactlist_menu_onkey_2:
   \   000000D4   010050E3           CMP      R0,#+1
   \   000000D8   0700001A           BNE      ??contactlist_menu_onkey_8
    870            {
    871              if (strlen(ContactT9Key))
   \   000000DC   050086E0           ADD      R0,R6,R5
   \   000000E0   1B0000EF           SWI      +27
   \   000000E4   000050E3           CMP      R0,#+0
   \   000000E8   0300000A           BEQ      ??contactlist_menu_onkey_8
    872              {
    873                BackSpaceContactT9();
   \   000000EC   ........           BL       BackSpaceContactT9
    874                RecountMenu(NULL, 1);
   \   000000F0   0110A0E3           MOV      R1,#+1
   \   000000F4   0000A0E3           MOV      R0,#+0
   \   000000F8   DAFFFFEA           B        ??contactlist_menu_onkey_5
    875                return(-1);
    876              }
    877            }
    878            if (msg->gbsmsg->msg==KEY_DOWN)
   \                     ??contactlist_menu_onkey_8:
   \   000000FC   041094E5           LDR      R1,[R4, #+4]
   \   00000100   0070A0E3           MOV      R7,#+0
   \   00000104   040091E5           LDR      R0,[R1, #+4]
   \   00000108   0140A0E3           MOV      R4,#+1
   \   0000010C   D52046E2           SUB      R2,R6,#+213
   \   00000110   020050E1           CMP      R0,R2
   \   00000114   3400001A           BNE      ??contactlist_menu_onkey_9
    879            {
    880              int key=msg->gbsmsg->submess;
   \   00000118   080091E5           LDR      R0,[R1, #+8]
    881              if (((key>='0')&&(key<='9'))||(key=='#')||(key=='*'))
   \   0000011C   300050E3           CMP      R0,#+48
   \   00000120   0F0000BA           BLT      ??contactlist_menu_onkey_10
   \   00000124   3A0050E3           CMP      R0,#+58
   \   00000128   100000BA           BLT      ??contactlist_menu_onkey_11
    882              {
    883                AddContactT9Key(key);
    884                RecountMenu(NULL, 1);
    885                return(-1);
    886              }
    887              if (key==GREEN_BUTTON)
    888              {
    889                IsActiveUp=!IsActiveUp;
    890                RecountMenu(NULL, 1);
    891                return(-1);
    892              }
    893              if (key==RIGHT_BUTTON)
   \   0000012C   082098E5           LDR      R2,[R8, #+8]
   \   00000130   3E0050E3           CMP      R0,#+62
   \   00000134   1A00001A           BNE      ??contactlist_menu_onkey_12
    894              {
    895                //Послать запрос текста XStatus
    896                if (t)
   \   00000138   000058E3           CMP      R8,#+0
   \   0000013C   2A00000A           BEQ      ??contactlist_menu_onkey_9
    897                {
    898          	if (!t->isgroup)
   \   00000140   000052E3           CMP      R2,#+0
   \   00000144   2800001A           BNE      ??contactlist_menu_onkey_9
    899          	{
    900          	  FreeXText(t);
   \   00000148   0800A0E1           MOV      R0,R8
   \   0000014C   ........           _BLF     FreeXText,??FreeXText??rA
    901                    t->req_xtext=0;
   \   00000150   7C7088E5           STR      R7,[R8, #+124]
    902                    RequestXText(t->uin);
   \   00000154   0C0098E5           LDR      R0,[R8, #+12]
   \   00000158   ........           BL       RequestXText
    903          	  RefreshGUI();
   \   0000015C   960100EF           SWI      +406
   \   00000160   D9FFFFEA           B        ??contactlist_menu_onkey_1
    904          	  return(-1);
    905          	}
    906                }
    907              }
   \                     ??contactlist_menu_onkey_10:
   \   00000164   230050E3           CMP      R0,#+35
   \   00000168   2A005013           CMPNE    R0,#+42
   \   0000016C   0300001A           BNE      ??contactlist_menu_onkey_13
   \                     ??contactlist_menu_onkey_11:
   \   00000170   ........           BL       AddContactT9Key
   \   00000174   0110A0E3           MOV      R1,#+1
   \   00000178   0700A0E1           MOV      R0,R7
   \   0000017C   B9FFFFEA           B        ??contactlist_menu_onkey_5
   \                     ??contactlist_menu_onkey_13:
   \   00000180   0B0050E3           CMP      R0,#+11
   \   00000184   1800001A           BNE      ??contactlist_menu_onkey_9
   \   00000188   980095E5           LDR      R0,[R5, #+152]
   \   0000018C   0110A0E3           MOV      R1,#+1
   \   00000190   000050E3           CMP      R0,#+0
   \   00000194   0040A013           MOVNE    R4,#+0
   \   00000198   984085E5           STR      R4,[R5, #+152]
   \   0000019C   0000A0E3           MOV      R0,#+0
   \   000001A0   B0FFFFEA           B        ??contactlist_menu_onkey_5
    908              if (key==LEFT_BUTTON)
   \                     ??contactlist_menu_onkey_12:
   \   000001A4   3D0050E3           CMP      R0,#+61
   \   000001A8   0F00001A           BNE      ??contactlist_menu_onkey_9
    909              {
    910                if (t && Is_Show_Groups) {//есть контакт и показываем группы?
   \   000001AC   000058E3           CMP      R8,#+0
   \   000001B0   B4009515           LDRNE    R0,[R5, #+180]
   \   000001B4   00005013           CMPNE    R0,#+0
   \   000001B8   C3FFFF0A           BEQ      ??contactlist_menu_onkey_1
    911                 if (!t->isgroup)
   \   000001BC   000052E3           CMP      R2,#+0
   \   000001C0   0300001A           BNE      ??contactlist_menu_onkey_14
    912                  t=FindGroupByID(t->group);
   \   000001C4   100098E5           LDR      R0,[R8, #+16]
   \   000001C8   ........           _BLF     FindGroupByID,??FindGroupByID??rA
   \   000001CC   0080B0E1           MOVS     R8,R0
    913                 if (t && !t->state) {//группа нашлась и она открыта?
   \   000001D0   BDFFFF0A           BEQ      ??contactlist_menu_onkey_1
   \                     ??contactlist_menu_onkey_14:
   \   000001D4   B405D8E1           LDRH     R0,[R8, #+84]
   \   000001D8   000050E3           CMP      R0,#+0
   \   000001DC   BAFFFF1A           BNE      ??contactlist_menu_onkey_1
    914                  t->state^=0xFFFF;
   \   000001E0   B495C8E1           STRH     R9,[R8, #+84]
    915                  RecountMenu(t, 1);
   \   000001E4   0110A0E3           MOV      R1,#+1
   \   000001E8   9DFFFFEA           B        ??contactlist_menu_onkey_4
    916                 }
    917                }
    918                return -1;
    919              }
    920            }
    921            if (msg->gbsmsg->msg==LONG_PRESS)
   \                     ??contactlist_menu_onkey_9:
   \   000001EC   040091E5           LDR      R0,[R1, #+4]
   \   000001F0   652F84E3           ORR      R2,R4,#0x194
   \   000001F4   020050E1           CMP      R0,R2
   \   000001F8   3000001A           BNE      ??contactlist_menu_onkey_15
    922            {
    923              if (msg->gbsmsg->submess=='#')
   \   000001FC   080091E5           LDR      R0,[R1, #+8]
   \   00000200   ........           LDR      R11,??DataTable27  ;; Canvas
   \   00000204   0980A0E3           MOV      R8,#+9
   \   00000208   428C88E3           ORR      R8,R8,#0x4200
   \   0000020C   B090A0E3           MOV      R9,#+176
   \   00000210   DE9C89E3           ORR      R9,R9,#0xDE00
   \   00000214   63AFA0E3           MOV      R10,#+396
   \   00000218   230050E3           CMP      R0,#+35
   \   0000021C   1400001A           BNE      ??contactlist_menu_onkey_16
    924              {
    925                ClearContactT9Key();
   \   00000220   2010A0E3           MOV      R1,#+32
   \   00000224   050086E0           ADD      R0,R6,R5
   \   00000228   1D0100EF           SWI      +285
    926                RecountMenu(NULL, 1);
   \   0000022C   0110A0E3           MOV      R1,#+1
   \   00000230   0700A0E1           MOV      R0,R7
   \   00000234   ........           BL       RecountMenu
    927                gipc.name_to=ipc_xtask_name;
   \   00000238   0B008AE0           ADD      R0,R10,R11
   \   0000023C   740085E5           STR      R0,[R5, #+116]
    928                gipc.name_from=ipc_my_name;
   \   00000240   5B0F8BE2           ADD      R0,R11,#+364
   \   00000244   780085E5           STR      R0,[R5, #+120]
    929                gipc.data=0;
   \   00000248   7C7085E5           STR      R7,[R5, #+124]
    930                GBS_SendMessage(MMI_CEPID,MSG_IPC,IPC_XTASK_IDLE,&gipc);
   \   0000024C   743085E2           ADD      R3,R5,#+116
   \   00000250   0420A0E1           MOV      R2,R4
   \   00000254   0910A0E1           MOV      R1,R9
   \   00000258   0800A0E1           MOV      R0,R8
   \   0000025C   000100EF           SWI      +256
    931                if (IsUnlocked())
   \   00000260   430000EF           SWI      +67
   \   00000264   000050E3           CMP      R0,#+0
   \   00000268   97FFFF0A           BEQ      ??contactlist_menu_onkey_1
    932                {
    933                  KbdLock();
   \   0000026C   A90000EF           SWI      +169
   \   00000270   95FFFFEA           B        ??contactlist_menu_onkey_1
    934                }
    935                return(-1);
    936              }
    937              if (msg->gbsmsg->submess=='*'){
   \                     ??contactlist_menu_onkey_16:
   \   00000274   2A0050E3           CMP      R0,#+42
   \   00000278   1000001A           BNE      ??contactlist_menu_onkey_15
    938                ClearContactT9Key();
   \   0000027C   2010A0E3           MOV      R1,#+32
   \   00000280   050086E0           ADD      R0,R6,R5
   \   00000284   1D0100EF           SWI      +285
    939                RecountMenu(NULL, 1);
   \   00000288   0110A0E3           MOV      R1,#+1
   \   0000028C   0700A0E1           MOV      R0,R7
   \   00000290   ........           BL       RecountMenu
    940                silenthide=1;
   \   00000294   A04085E5           STR      R4,[R5, #+160]
    941                gipc.name_to=ipc_xtask_name;
   \   00000298   0B008AE0           ADD      R0,R10,R11
   \   0000029C   740085E5           STR      R0,[R5, #+116]
    942                gipc.name_from=ipc_my_name;
   \   000002A0   5B0F8BE2           ADD      R0,R11,#+364
   \   000002A4   780085E5           STR      R0,[R5, #+120]
    943                gipc.data=0;
   \   000002A8   7C7085E5           STR      R7,[R5, #+124]
    944                GBS_SendMessage(MMI_CEPID,MSG_IPC,IPC_XTASK_IDLE,&gipc);
   \   000002AC   743085E2           ADD      R3,R5,#+116
   \   000002B0   0420A0E1           MOV      R2,R4
   \   000002B4   0910A0E1           MOV      R1,R9
   \   000002B8   0800A0E1           MOV      R0,R8
   \   000002BC   000100EF           SWI      +256
    945              }
    946            }
    947            return(0);
   \                     ??contactlist_menu_onkey_15:
   \   000002C0   0000A0E3           MOV      R0,#+0
   \   000002C4   F08FBDE8           POP      {R4-R11,PC}      ;; return
    948          }
    949          

   \                                 In segment CODE, align 4, keep-with-next
    950          void GetOnTotalContact(int group_id,int *_onlinetotal)
    951          {
    952            CLIST *t;
    953            t=(CLIST *)&cltop;
   \                     GetOnTotalContact:
   \   00000000   ........           LDR      R2,??DataTable26  ;; S_ICONS + 252
   \   00000004   30002DE9           PUSH     {R4,R5}
    954            int online=0,total=0;
   \   00000008   0030A0E3           MOV      R3,#+0
   \   0000000C   00C0A0E3           MOV      R12,#+0
   \   00000010   FF50A0E3           MOV      R5,#+255
   \   00000014   FF5C85E3           ORR      R5,R5,#0xFF00
   \   00000018   080000EA           B        ??GetOnTotalContact_0
    955            while((t=t->next))
    956            {
    957              if(t->group==group_id && !t->isgroup)
   \                     ??GetOnTotalContact_1:
   \   0000001C   104092E5           LDR      R4,[R2, #+16]
   \   00000020   000054E1           CMP      R4,R0
   \   00000024   08409205           LDREQ    R4,[R2, #+8]
   \   00000028   00005403           CMPEQ    R4,#+0
   \   0000002C   0300001A           BNE      ??GetOnTotalContact_0
    958              {
    959                total++;
    960                if (t->state!=0xFFFF) online++;
   \   00000030   B445D2E1           LDRH     R4,[R2, #+84]
   \   00000034   01C08CE2           ADD      R12,R12,#+1
   \   00000038   050054E1           CMP      R4,R5
   \   0000003C   01308312           ADDNE    R3,R3,#+1
    961              }
    962            }
   \                     ??GetOnTotalContact_0:
   \   00000040   002092E5           LDR      R2,[R2, #+0]
   \   00000044   000052E3           CMP      R2,#+0
   \   00000048   F3FFFF1A           BNE      ??GetOnTotalContact_1
    963            _onlinetotal[0]=online;
   \   0000004C   003081E5           STR      R3,[R1, #+0]
    964            _onlinetotal[1]=total;
   \   00000050   04C081E5           STR      R12,[R1, #+4]
    965          }
   \   00000054   3000BDE8           POP      {R4,R5}
   \   00000058   1EFF2FE1           BX       LR               ;; return
    966          
    967          

   \                                 In segment CODE, align 4, keep-with-next
    968          void contactlist_menu_iconhndl(void *data, int curitem, void *unk)
    969          {
   \                     contactlist_menu_iconhndl:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000004   9CDF4DE2           SUB      SP,SP,#+624
   \   00000008   0040A0E1           MOV      R4,R0
    970            CLIST *t;
    971          #ifdef USE_MLMENU
    972            void *item=AllocMLMenuItem(data);
    973          #else
    974            void *item=AllocMenuItem(data);
    975          #endif
    976            int icon;
    977          
    978            WSHDR *ws2;
    979          #ifdef USE_MLMENU
    980            WSHDR *ws4;
    981          #endif
    982            WSHDR ws1loc, *ws1;
    983            unsigned short num[128];
    984            ws1=CreateLocalWS(&ws1loc,num,128);
    985          #ifdef USE_MLMENU
    986            WSHDR ws3loc, *ws3;
    987            unsigned short num3[128];
    988            ws3=CreateLocalWS(&ws3loc,num3,128);
    989            char s[64];
    990          #endif
    991            t=FindContactByN(curitem);
    992            if (t)
   \   0000000C   ........           LDR      R11,??DataTable27  ;; Canvas
   \   00000010   0150A0E1           MOV      R5,R1
   \   00000014   190200EF           SWI      +537
   \   00000018   0060A0E1           MOV      R6,R0
   \   0000001C   8020A0E3           MOV      R2,#+128
   \   00000020   08108DE2           ADD      R1,SP,#+8
   \   00000024   920F8DE2           ADD      R0,SP,#+584
   \   00000028   270100EF           SWI      +295
   \   0000002C   0070A0E1           MOV      R7,R0
   \   00000030   8020A0E3           MOV      R2,#+128
   \   00000034   421F8DE2           ADD      R1,SP,#+264
   \   00000038   970F8DE2           ADD      R0,SP,#+604
   \   0000003C   270100EF           SWI      +295
   \   00000040   0080A0E1           MOV      R8,R0
   \   00000044   0500A0E1           MOV      R0,R5
   \   00000048   ........           _BLF     FindContactByN,??FindContactByN??rA
   \   0000004C   00A0B0E1           MOVS     R10,R0
   \   00000050   4D00000A           BEQ      ??contactlist_menu_iconhndl_0
    993            {
    994              icon=GetIconIndex(t);
   \   00000054   ........           BL       GetIconIndex
   \   00000058   0090A0E1           MOV      R9,R0
    995              if (icon!=IS_GROUP)
   \   0000005C   0F0059E3           CMP      R9,#+15
   \   00000060   3800000A           BEQ      ??contactlist_menu_iconhndl_1
    996              {
    997                wsprintf(ws1,percent_t,t->name);
   \   00000064   14208AE2           ADD      R2,R10,#+20
   \   00000068   08108BE2           ADD      R1,R11,#+8
   \   0000006C   0700A0E1           MOV      R0,R7
   \   00000070   240100EF           SWI      +292
    998                if (t->isactive)
   \   00000074   70009AE5           LDR      R0,[R10, #+112]
   \   00000078   000050E3           CMP      R0,#+0
   \   0000007C   0800000A           BEQ      ??contactlist_menu_iconhndl_2
    999                {
   1000                  wsInsertChar(ws1,0x0002,1);
   \   00000080   0120A0E3           MOV      R2,#+1
   \   00000084   0210A0E3           MOV      R1,#+2
   \   00000088   0700A0E1           MOV      R0,R7
   \   0000008C   1D0000EF           SWI      +29
   1001                  wsInsertChar(ws1,0xE008,1);
   \   00000090   0120A0E3           MOV      R2,#+1
   \   00000094   0810A0E3           MOV      R1,#+8
   \   00000098   E01C81E3           ORR      R1,R1,#0xE000
   \   0000009C   0700A0E1           MOV      R0,R7
   \   000000A0   1D0000EF           SWI      +29
   1002                }
   1003          #ifdef USE_MLMENU
   1004                if (t->xtext && t->xtext[0]!=0)
   \                     ??contactlist_menu_iconhndl_2:
   \   000000A4   78009AE5           LDR      R0,[R10, #+120]
   \   000000A8   000050E3           CMP      R0,#+0
   \   000000AC   0000D015           LDRBNE   R0,[R0, #+0]
   \   000000B0   00005013           CMPNE    R0,#+0
   \   000000B4   1000000A           BEQ      ??contactlist_menu_iconhndl_3
   1005                {
   1006          	int i;
   1007          	zeromem(s,64);
   \   000000B8   4010A0E3           MOV      R1,#+64
   \   000000BC   820F8DE2           ADD      R0,SP,#+520
   \   000000C0   1D0100EF           SWI      +285
   1008          	i=t->xtext[0];
   \   000000C4   78009AE5           LDR      R0,[R10, #+120]
   \   000000C8   0020D0E5           LDRB     R2,[R0, #+0]
   1009          	if (i>63) i=63;
   1010          	strncpy(s,t->xtext+1,i);
   \   000000CC   011080E2           ADD      R1,R0,#+1
   \   000000D0   820F8DE2           ADD      R0,SP,#+520
   \   000000D4   400052E3           CMP      R2,#+64
   \   000000D8   3F20A0A3           MOVGE    R2,#+63
   \   000000DC   160100EF           SWI      +278
   1011          	wsprintf(ws3,"%c%t",0xE012,s);
   \   000000E0   823F8DE2           ADD      R3,SP,#+520
   \   000000E4   1220A0E3           MOV      R2,#+18
   \   000000E8   E02C82E3           ORR      R2,R2,#0xE000
   \   000000EC   10108BE2           ADD      R1,R11,#+16
   \   000000F0   0800A0E1           MOV      R0,R8
   \   000000F4   240100EF           SWI      +292
   \   000000F8   030000EA           B        ??contactlist_menu_iconhndl_4
   1012                }
   1013                else
   1014          	wsprintf(ws3,percent_d,t->uin);
   \                     ??contactlist_menu_iconhndl_3:
   \   000000FC   0C209AE5           LDR      R2,[R10, #+12]
   \   00000100   0B108BE2           ADD      R1,R11,#+11
   \   00000104   0800A0E1           MOV      R0,R8
   \   00000108   240100EF           SWI      +292
   1015                if ((t->xstate<total_xstatuses)&&(t->xstate))
   \                     ??contactlist_menu_iconhndl_4:
   \   0000010C   B605DAE1           LDRH     R0,[R10, #+86]
   \   00000110   EC209FE5           LDR      R2,??contactlist_menu_iconhndl_5  ;; total_xstatuses
   \   00000114   0010A0E1           MOV      R1,R0
   \   00000118   002092E5           LDR      R2,[R2, #+0]
   \   0000011C   020051E1           CMP      R1,R2
   \   00000120   1C0000AA           BGE      ??contactlist_menu_iconhndl_6
   \   00000124   000050E3           CMP      R0,#+0
   \   00000128   1A00000A           BEQ      ??contactlist_menu_iconhndl_6
   1016                {
   1017          	wsInsertChar(ws3,FIRST_UCS2_BITMAP+t->xstate,1);
   \   0000012C   0120A0E3           MOV      R2,#+1
   \   00000130   2A00A0E3           MOV      R0,#+42
   \   00000134   E10C80E3           ORR      R0,R0,#0xE100
   \   00000138   011080E0           ADD      R1,R0,R1
   \   0000013C   0800A0E1           MOV      R0,R8
   \   00000140   1D0000EF           SWI      +29
   \   00000144   130000EA           B        ??contactlist_menu_iconhndl_6
   1018                }
   1019          #endif
   1020              }
   1021              else
   1022              {
   1023                int onlinetotal[2];
   1024                GetOnTotalContact(t->group,onlinetotal);
   \                     ??contactlist_menu_iconhndl_1:
   \   00000148   10009AE5           LDR      R0,[R10, #+16]
   \   0000014C   0D10A0E1           MOV      R1,SP
   \   00000150   ........           BL       GetOnTotalContact
   1025          #ifdef USE_MLMENU
   1026                wsprintf(ws1,percent_t,t->name);
   \   00000154   14208AE2           ADD      R2,R10,#+20
   \   00000158   08108BE2           ADD      R1,R11,#+8
   \   0000015C   0700A0E1           MOV      R0,R7
   \   00000160   240100EF           SWI      +292
   1027                wsprintf(ws3,"(%d/%d)",onlinetotal[0],onlinetotal[1]);
   \   00000164   04309DE5           LDR      R3,[SP, #+4]
   \   00000168   00209DE5           LDR      R2,[SP, #+0]
   \   0000016C   18108BE2           ADD      R1,R11,#+24
   \   00000170   0800A0E1           MOV      R0,R8
   \   00000174   240100EF           SWI      +292
   1028          #else
   1029                wsprintf(ws1,"%t%c%c(%d/%d)",t->name,0xE01D,0xE012,onlinetotal[0],onlinetotal[1]);
   1030          #endif
   1031                if (t->state) icon++; //Модификация иконки группы
   \   00000178   B405DAE1           LDRH     R0,[R10, #+84]
   \   0000017C   000050E3           CMP      R0,#+0
   \   00000180   0400000A           BEQ      ??contactlist_menu_iconhndl_6
   \   00000184   019089E2           ADD      R9,R9,#+1
   \   00000188   020000EA           B        ??contactlist_menu_iconhndl_6
   1032              }
   1033            }
   1034            else
   1035            {
   1036              wsprintf(ws1, LG_CLERROR);
   \                     ??contactlist_menu_iconhndl_0:
   \   0000018C   20108BE2           ADD      R1,R11,#+32
   \   00000190   0700A0E1           MOV      R0,R7
   \   00000194   240100EF           SWI      +292
   1037            }
   1038            ws2=AllocMenuWS(data,ws1->wsbody[0]);
   \                     ??contactlist_menu_iconhndl_6:
   \   00000198   000097E5           LDR      R0,[R7, #+0]
   \   0000019C   B010D0E1           LDRH     R1,[R0, #+0]
   \   000001A0   0400A0E1           MOV      R0,R4
   \   000001A4   980100EF           SWI      +408
   \   000001A8   00A0A0E1           MOV      R10,R0
   1039            wstrcpy(ws2,ws1);
   \   000001AC   0710A0E1           MOV      R1,R7
   \   000001B0   1F0100EF           SWI      +287
   1040          
   1041            SetMenuItemIconArray(data, item, S_ICONS+icon);
   \   000001B4   ........           LDR      R0,??DataTable28  ;; S_ICONS
   \   000001B8   0610A0E1           MOV      R1,R6
   \   000001BC   092180E0           ADD      R2,R0,R9, LSL #+2
   \   000001C0   0400A0E1           MOV      R0,R4
   \   000001C4   990100EF           SWI      +409
   1042          #ifdef USE_MLMENU
   1043            ws4=AllocMenuWS(data,ws3->wsbody[0]);
   \   000001C8   000098E5           LDR      R0,[R8, #+0]
   \   000001CC   B010D0E1           LDRH     R1,[R0, #+0]
   \   000001D0   0400A0E1           MOV      R0,R4
   \   000001D4   980100EF           SWI      +408
   \   000001D8   0070A0E1           MOV      R7,R0
   1044            wstrcpy(ws4,ws3);
   \   000001DC   0810A0E1           MOV      R1,R8
   \   000001E0   1F0100EF           SWI      +287
   1045            SetMLMenuItemText(data, item, ws2, ws4, curitem);
   \   000001E4   20002DE9           PUSH     {R5}
   \   000001E8   0730A0E1           MOV      R3,R7
   \   000001EC   0A20A0E1           MOV      R2,R10
   \   000001F0   0610A0E1           MOV      R1,R6
   \   000001F4   0400A0E1           MOV      R0,R4
   \   000001F8   180200EF           SWI      +536
   1046          #else
   1047            SetMenuItemText(data, item, ws2, curitem);
   1048          #endif
   1049          }
   \   000001FC   9DDF8DE2           ADD      SP,SP,#+628
   \   00000200   F08FBDE8           POP      {R4-R11,PC}      ;; return
   \                     ??contactlist_menu_iconhndl_5:
   \   00000204   ........           DC32     total_xstatuses
   1050          
   1051          //===============================================================================================
   1052          int DNR_ID=0;
   1053          int DNR_TRIES=3;
   1054          
   1055          extern const char NATICQ_HOST[];
   1056          extern const unsigned int NATICQ_PORT;
   1057          extern const unsigned int RECONNECT_TIME;
   1058          char hostname[128];
   1059          int host_counter = 0;
   1060          
   1061          //---------------------------------------------------------------------------

   \                                 In segment CODE, align 4, keep-with-next
   1062          const char *GetHost(int cnt, const char *str, char *buf)
   1063          {
   1064            const char *tmp = str, *begin, *end;
   \                     GetHost:
   \   00000000   0130A0E1           MOV      R3,R1
   1065            if(cnt)
   \   00000004   000050E3           CMP      R0,#+0
   \   00000008   0100001A           BNE      ??GetHost_0
   \   0000000C   180000EA           B        ??GetHost_1
   1066            {
   1067              for(;cnt;cnt--)
   1068              {
   1069                for(;*str!=';' && *str!=' ' && *str!='\x0D' && *str!='\x0A' && *str; str++);
   \                     ??GetHost_2:
   \   00000010   011081E2           ADD      R1,R1,#+1
   \                     ??GetHost_0:
   \   00000014   00C0D1E5           LDRB     R12,[R1, #+0]
   \   00000018   3B005CE3           CMP      R12,#+59
   \   0000001C   20005C13           CMPNE    R12,#+32
   \   00000020   0D005C13           CMPNE    R12,#+13
   \   00000024   0A005C13           CMPNE    R12,#+10
   \   00000028   00005C13           CMPNE    R12,#+0
   \   0000002C   F7FFFF1A           BNE      ??GetHost_2
   1070                if(!*str) str = tmp;
   \   00000030   00005CE3           CMP      R12,#+0
   \   00000034   0200001A           BNE      ??GetHost_3
   \   00000038   0310A0E1           MOV      R1,R3
   \   0000003C   000000EA           B        ??GetHost_3
   1071                for(;(*str==';' || *str==' ' || *str=='\x0D' || *str=='\x0A') && *str; str++);
   \                     ??GetHost_4:
   \   00000040   011081E2           ADD      R1,R1,#+1
   \                     ??GetHost_3:
   \   00000044   00C0D1E5           LDRB     R12,[R1, #+0]
   \   00000048   3B005CE3           CMP      R12,#+59
   \   0000004C   20005C13           CMPNE    R12,#+32
   \   00000050   0D005C13           CMPNE    R12,#+13
   \   00000054   0A005C13           CMPNE    R12,#+10
   \   00000058   0100001A           BNE      ??GetHost_5
   \   0000005C   00005CE3           CMP      R12,#+0
   \   00000060   F6FFFF1A           BNE      ??GetHost_4
   1072                if(!*str) str = tmp;
   \                     ??GetHost_5:
   \   00000064   00005CE3           CMP      R12,#+0
   \   00000068   0310A001           MOVEQ    R1,R3
   1073              }
   \   0000006C   010050E2           SUBS     R0,R0,#+1
   \   00000070   E7FFFF1A           BNE      ??GetHost_0
   1074            }
   1075            tmp = buf;
   \                     ??GetHost_1:
   \   00000074   0200A0E1           MOV      R0,R2
   1076            begin = str;
   \   00000078   0130A0E1           MOV      R3,R1
   \   0000007C   000000EA           B        ??GetHost_6
   1077            for(;*str!=';' && *str!=':' && *str!=' ' && *str!='\x0D' && *str!='\x0A' && *str; str++);
   \                     ??GetHost_7:
   \   00000080   011081E2           ADD      R1,R1,#+1
   \                     ??GetHost_6:
   \   00000084   00C0D1E5           LDRB     R12,[R1, #+0]
   \   00000088   3B005CE3           CMP      R12,#+59
   \   0000008C   3A005C13           CMPNE    R12,#+58
   \   00000090   20005C13           CMPNE    R12,#+32
   \   00000094   0D005C13           CMPNE    R12,#+13
   \   00000098   0A005C13           CMPNE    R12,#+10
   \   0000009C   00005C13           CMPNE    R12,#+0
   \   000000A0   F6FFFF1A           BNE      ??GetHost_7
   1078            end = str;
   1079            for(;begin<end; *buf = *begin, begin++, buf++);
   \                     ??GetHost_8:
   \   000000A4   010053E1           CMP      R3,R1
   \   000000A8   ........           LDRBCC   R12,[R3], #+1
   \   000000AC   ........           STRBCC   R12,[R2], #+1
   \   000000B0   FBFFFF3A           BCC      ??GetHost_8
   1080            *buf = 0;
   \   000000B4   0010A0E3           MOV      R1,#+0
   \   000000B8   0010C2E5           STRB     R1,[R2, #+0]
   1081            return tmp;
   \   000000BC   1EFF2FE1           BX       LR               ;; return
   1082          }
   1083          //---------------------------------------------------------------------------

   \                                 In segment CODE, align 4, keep-with-next
   1084          int atoi(char *attr)
   1085          {
   \                     atoi:
   \   00000000   10002DE9           PUSH     {R4}
   1086            int ret=0;
   \   00000004   0010A0E3           MOV      R1,#+0
   1087            int neg=1;
   \   00000008   0120A0E3           MOV      R2,#+1
   1088            for (int k=0; ; k++)
   \   0000000C   0030A0E3           MOV      R3,#+0
   \   00000010   060000EA           B        ??atoi_0
   1089            {
   1090              if ( attr[k]>0x2F && attr[k]<0x3A) {ret=ret*10+attr[k]-0x30;} else { if ( attr[k]=='-') {neg=-1;} else {return(ret*neg);}}
   \                     ??atoi_1:
   \   00000014   04C0A0E1           MOV      R12,R4
   \   00000018   3A005CE3           CMP      R12,#+58
   \   0000001C   0600002A           BCS      ??atoi_2
   \   00000020   0A40A0E3           MOV      R4,#+10
   \   00000024   94C121E0           MLA      R1,R4,R1,R12
   \   00000028   301041E2           SUB      R1,R1,#+48
   \                     ??atoi_3:
   \   0000002C   013083E2           ADD      R3,R3,#+1
   \                     ??atoi_0:
   \   00000030   0040D3E7           LDRB     R4,[R3, +R0]
   \   00000034   300054E3           CMP      R4,#+48
   \   00000038   F5FFFF2A           BCS      ??atoi_1
   \                     ??atoi_2:
   \   0000003C   2D0054E3           CMP      R4,#+45
   \   00000040   0020E003           MVNEQ    R2,#+0
   \   00000044   F8FFFF0A           BEQ      ??atoi_3
   \   00000048   1000BDE8           POP      {R4}
   \   0000004C   920100E0           MUL      R0,R2,R1
   \   00000050   1EFF2FE1           BX       LR               ;; return
   1091            }
   1092          }
   1093          //---------------------------------------------------------------------------

   \                                 In segment CODE, align 4, keep-with-next
   1094          int GetPort(int cnt, const char *str)
   1095          {
   \                     GetPort:
   \   00000000   13402DE9           PUSH     {R0,R1,R4,LR}
   1096            const char *tmp = str;
   \   00000004   01C0A0E1           MOV      R12,R1
   1097            char numbuf[6], numcnt = 0;
   \   00000008   0020A0E3           MOV      R2,#+0
   \   0000000C   0030A0E3           MOV      R3,#+0
   1098            if(cnt)
   \   00000010   000050E3           CMP      R0,#+0
   \   00000014   0100001A           BNE      ??GetPort_0
   \   00000018   180000EA           B        ??GetPort_1
   1099            {
   1100              for(;cnt;cnt--)
   1101              {
   1102                for(;*str!=';' && *str!=' ' && *str!='\x0D' && *str!='\x0A' && *str; str++);
   \                     ??GetPort_2:
   \   0000001C   011081E2           ADD      R1,R1,#+1
   \                     ??GetPort_0:
   \   00000020   0040D1E5           LDRB     R4,[R1, #+0]
   \   00000024   3B0054E3           CMP      R4,#+59
   \   00000028   20005413           CMPNE    R4,#+32
   \   0000002C   0D005413           CMPNE    R4,#+13
   \   00000030   0A005413           CMPNE    R4,#+10
   \   00000034   00005413           CMPNE    R4,#+0
   \   00000038   F7FFFF1A           BNE      ??GetPort_2
   1103                if(!*str) str = tmp;
   \   0000003C   000054E3           CMP      R4,#+0
   \   00000040   0200001A           BNE      ??GetPort_3
   \   00000044   0C10A0E1           MOV      R1,R12
   \   00000048   000000EA           B        ??GetPort_3
   1104                for(;(*str==';' || *str==' ' || *str=='\x0D' || *str=='\x0A') && *str; str++);
   \                     ??GetPort_4:
   \   0000004C   011081E2           ADD      R1,R1,#+1
   \                     ??GetPort_3:
   \   00000050   0040D1E5           LDRB     R4,[R1, #+0]
   \   00000054   3B0054E3           CMP      R4,#+59
   \   00000058   20005413           CMPNE    R4,#+32
   \   0000005C   0D005413           CMPNE    R4,#+13
   \   00000060   0A005413           CMPNE    R4,#+10
   \   00000064   0100001A           BNE      ??GetPort_5
   \   00000068   000054E3           CMP      R4,#+0
   \   0000006C   F6FFFF1A           BNE      ??GetPort_4
   1105                if(!*str) str = tmp;
   \                     ??GetPort_5:
   \   00000070   000054E3           CMP      R4,#+0
   \   00000074   0C10A001           MOVEQ    R1,R12
   1106              }
   \   00000078   010050E2           SUBS     R0,R0,#+1
   \   0000007C   E7FFFF1A           BNE      ??GetPort_0
   1107            }
   1108            for(;*str!=';' && *str!=':' && *str!=' ' && *str!='\x0D' && *str!='\x0A' && *str; str++);
   \                     ??GetPort_1:
   \   00000080   0000D1E5           LDRB     R0,[R1, #+0]
   \   00000084   3B0050E3           CMP      R0,#+59
   \   00000088   3A005013           CMPNE    R0,#+58
   \   0000008C   20005013           CMPNE    R0,#+32
   \   00000090   0D005013           CMPNE    R0,#+13
   \   00000094   0A005013           CMPNE    R0,#+10
   \   00000098   00005013           CMPNE    R0,#+0
   \   0000009C   01108112           ADDNE    R1,R1,#+1
   \   000000A0   F6FFFF1A           BNE      ??GetPort_1
   1109            if(*str!=':') return NATICQ_PORT;
   \   000000A4   ........           LDRB     R0,[R1], #+1
   \   000000A8   3A0050E3           CMP      R0,#+58
   \   000000AC   58009F15           LDRNE    R0,??GetPort_6   ;; NATICQ_PORT
   \   000000B0   00009015           LDRNE    R0,[R0, #+0]
   \   000000B4   1680BD18           POPNE    {R1,R2,R4,PC}
   1110            str++;
   1111            numbuf[5] = 0;
   \   000000B8   0520CDE5           STRB     R2,[SP, #+5]
   \   000000BC   030000EA           B        ??GetPort_7
   1112            for(;*str!=';' && *str!=' ' && *str!='\x0D' && *str!='\x0A' && *str && numcnt<5; numbuf[numcnt] = *str, str++, numcnt++);
   \                     ??GetPort_8:
   \   000000C0   ........           LDRB     R4,[R1], #+1
   \   000000C4   013083E2           ADD      R3,R3,#+1
   \   000000C8   FF3003E2           AND      R3,R3,#0xFF
   \   000000CC   0040C0E5           STRB     R4,[R0, #+0]
   \                     ??GetPort_7:
   \   000000D0   0D40A0E1           MOV      R4,SP
   \   000000D4   040083E0           ADD      R0,R3,R4
   \   000000D8   0040D1E5           LDRB     R4,[R1, #+0]
   \   000000DC   3B0054E3           CMP      R4,#+59
   \   000000E0   20005413           CMPNE    R4,#+32
   \   000000E4   0D005413           CMPNE    R4,#+13
   \   000000E8   0A005413           CMPNE    R4,#+10
   \   000000EC   00005413           CMPNE    R4,#+0
   \   000000F0   0100000A           BEQ      ??GetPort_9
   \   000000F4   050053E3           CMP      R3,#+5
   \   000000F8   F0FFFF3A           BCC      ??GetPort_8
   1113            numbuf[numcnt] = 0;
   \                     ??GetPort_9:
   \   000000FC   0020C0E5           STRB     R2,[R0, #+0]
   1114            return atoi(numbuf);
   \   00000100   0D00A0E1           MOV      R0,SP
   \   00000104   ........           BL       atoi
   \   00000108   1680BDE8           POP      {R1,R2,R4,PC}    ;; return
   \                     ??GetPort_6:
   \   0000010C   ........           DC32     NATICQ_PORT
   1115          
   1116          }
   1117          //---------------------------------------------------------------------------

   \                                 In segment CODE, align 4, keep-with-next
   1118          int GetHostsCount(const char *str)
   1119          {
   1120            char cnt = 1;
   \                     GetHostsCount:
   \   00000000   0110A0E3           MOV      R1,#+1
   \   00000004   000000EA           B        ??GetHostsCount_0
   1121            for(;cnt;cnt++)
   1122            {
   1123              for(;*str!=';' && *str!=' ' && *str!='\x0D' && *str!='\x0A' && *str; str++);
   \                     ??GetHostsCount_1:
   \   00000008   010080E2           ADD      R0,R0,#+1
   \                     ??GetHostsCount_0:
   \   0000000C   0020D0E5           LDRB     R2,[R0, #+0]
   \   00000010   3B0052E3           CMP      R2,#+59
   \   00000014   20005213           CMPNE    R2,#+32
   \   00000018   0D005213           CMPNE    R2,#+13
   \   0000001C   0A005213           CMPNE    R2,#+10
   \   00000020   00005213           CMPNE    R2,#+0
   \   00000024   F7FFFF1A           BNE      ??GetHostsCount_1
   1124              if(!*str) return cnt;
   \   00000028   000052E3           CMP      R2,#+0
   \   0000002C   0100001A           BNE      ??GetHostsCount_2
   \                     ??GetHostsCount_3:
   \   00000030   ........           B        ?Subroutine103
   1125              for(;(*str==';' || *str==' ' || *str=='\x0D' || *str=='\x0A') && *str; str++);
   \                     ??GetHostsCount_4:
   \   00000034   010080E2           ADD      R0,R0,#+1
   \                     ??GetHostsCount_2:
   \   00000038   0020D0E5           LDRB     R2,[R0, #+0]
   \   0000003C   3B0052E3           CMP      R2,#+59
   \   00000040   20005213           CMPNE    R2,#+32
   \   00000044   0D005213           CMPNE    R2,#+13
   \   00000048   0A005213           CMPNE    R2,#+10
   \   0000004C   0100001A           BNE      ??GetHostsCount_5
   \   00000050   000052E3           CMP      R2,#+0
   \   00000054   F6FFFF1A           BNE      ??GetHostsCount_4
   1126              if(!*str) return cnt;
   \                     ??GetHostsCount_5:
   \   00000058   000052E3           CMP      R2,#+0
   \   0000005C   F3FFFF0A           BEQ      ??GetHostsCount_3
   1127            }
   \   00000060   011081E2           ADD      R1,R1,#+1
   \   00000064   FF1011E2           ANDS     R1,R1,#0xFF
   \   00000068   E7FFFF1A           BNE      ??GetHostsCount_0
   1128            return 0;
   \   0000006C   ........           B        ?Subroutine102
   1129          
   1130          }

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine102:
   \   00000000   0000A0E3           MOV      R0,#+0
   \   00000004   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine103:
   \   00000000   0100A0E1           MOV      R0,R1
   \   00000004   1EFF2FE1           BX       LR
   1131          //---------------------------------------------------------------------------
   1132          

   \                                 In segment CODE, align 4, keep-with-next
   1133          void create_connect(void)
   1134          {
   \                     create_connect:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   1135            char hostbuf[128];
   1136            int hostport;
   1137            int ***p_res=NULL;
   1138            void do_reconnect(void);
   1139            SOCK_ADDR sa;
   1140            //Устанавливаем соединение
   1141            connect_state = 0;
   \   00000004   ........           LDR      R5,??DataTable41  ;; S_ICONS
   1142            int err;
   1143            unsigned int ip;
   1144            GBS_DelTimer(&reconnect_tmr);
   1145            if (!IsGPRSEnabled())
   \   00000008   6C829FE5           LDR      R8,??create_connect_0  ;; `?<Constant "Waiting for GPRS up...">`
   \   0000000C   94D04DE2           SUB      SP,SP,#+148
   \   00000010   0040A0E3           MOV      R4,#+0
   \   00000014   00408DE5           STR      R4,[SP, #+0]
   \   00000018   D44085E5           STR      R4,[R5, #+212]
   \   0000001C   EA6FA0E3           MOV      R6,#+936
   \   00000020   050086E0           ADD      R0,R6,R5
   \   00000024   8C0100EF           SWI      +396
   \   00000028   A27FA0E3           MOV      R7,#+648
   \   0000002C   A70000EF           SWI      +167
   \   00000030   000050E3           CMP      R0,#+0
   \   00000034   0500001A           BNE      ??create_connect_1
   1146            {
   1147              is_gprs_online=0;
   \   00000038   F44085E5           STR      R4,[R5, #+244]
   1148              strcpy(logmsg,LG_GRWAITFORGPRS);
   \   0000003C   0810A0E1           MOV      R1,R8
   \   00000040   050087E0           ADD      R0,R7,R5
   \   00000044   1A0000EF           SWI      +26
   1149              SMART_REDRAW();
   \                     ??create_connect_2:
   \   00000048   ........           BL       SMART_REDRAW
   1150              return;
   \   0000004C   880000EA           B        ??create_connect_3
   1151            }
   1152            DNR_ID=0;
   1153            *socklasterr()=0;
   1154          
   1155            if(host_counter > GetHostsCount(NATICQ_HOST)-1) host_counter = 0;
   \                     ??create_connect_1:
   \   00000050   28929FE5           LDR      R9,??create_connect_0+0x4  ;; NATICQ_HOST
   1156            GetHost(host_counter, NATICQ_HOST, hostbuf);
   1157            hostport = GetPort(host_counter, NATICQ_HOST);
   1158            host_counter++;
   1159          
   1160            sprintf(hostname, "%s:%d", hostbuf, hostport);
   1161          
   1162            SMART_REDRAW();
   1163          
   1164            ip=str2ip(hostbuf);
   1165            if (ip!=0xFFFFFFFF)
   \   00000054   ........           LDR      R10,??DataTable30  ;; do_reconnect
   \   00000058   144185E5           STR      R4,[R5, #+276]
   \   0000005C   7C8100EF           SWI      +33148
   \   00000060   004080E5           STR      R4,[R0, #+0]
   \   00000064   0900A0E1           MOV      R0,R9
   \   00000068   ........           BL       GetHostsCount
   \   0000006C   1C1195E5           LDR      R1,[R5, #+284]
   \   00000070   010040E2           SUB      R0,R0,#+1
   \   00000074   010050E1           CMP      R0,R1
   \   00000078   1C4185B5           STRLT    R4,[R5, #+284]
   \   0000007C   1C0195E5           LDR      R0,[R5, #+284]
   \   00000080   14208DE2           ADD      R2,SP,#+20
   \   00000084   0910A0E1           MOV      R1,R9
   \   00000088   ........           BL       GetHost
   \   0000008C   1C0195E5           LDR      R0,[R5, #+284]
   \   00000090   0910A0E1           MOV      R1,R9
   \   00000094   ........           BL       GetPort
   \   00000098   0090A0E1           MOV      R9,R0
   \   0000009C   1C0195E5           LDR      R0,[R5, #+284]
   \   000000A0   0930A0E1           MOV      R3,R9
   \   000000A4   010080E2           ADD      R0,R0,#+1
   \   000000A8   1C0185E5           STR      R0,[R5, #+284]
   \   000000AC   14208DE2           ADD      R2,SP,#+20
   \   000000B0   181088E2           ADD      R1,R8,#+24
   \   000000B4   600086E2           ADD      R0,R6,#+96
   \   000000B8   050080E0           ADD      R0,R0,R5
   \   000000BC   160000EF           SWI      +22
   \   000000C0   ........           BL       SMART_REDRAW
   \   000000C4   14008DE2           ADD      R0,SP,#+20
   \   000000C8   B70100EF           SWI      +439
   \   000000CC   04B0E0E1           MVN      R11,R4
   \   000000D0   0B0050E1           CMP      R0,R11
   \   000000D4   0500000A           BEQ      ??create_connect_4
   1166            {
   1167              sa.ip=ip;
   \   000000D8   08008DE5           STR      R0,[SP, #+8]
   1168              strcpy(logmsg,"\nConnect by IP!");
   \   000000DC   201088E2           ADD      R1,R8,#+32
   \   000000E0   050087E0           ADD      R0,R7,R5
   \   000000E4   1A0000EF           SWI      +26
   1169              SMART_REDRAW();
   \   000000E8   ........           BL       SMART_REDRAW
   1170              goto L_CONNECT;
   \   000000EC   300000EA           B        ??create_connect_5
   1171            }
   1172            strcpy(logmsg,LG_GRSENDDNR);
   \                     ??create_connect_4:
   \   000000F0   301088E2           ADD      R1,R8,#+48
   \   000000F4   050087E0           ADD      R0,R7,R5
   \   000000F8   1A0000EF           SWI      +26
   1173            SMART_REDRAW();
   \   000000FC   ........           BL       SMART_REDRAW
   1174            err=async_gethostbyname(hostbuf,&p_res,&DNR_ID); //03461351 3<70<19<81
   \   00000100   452F85E2           ADD      R2,R5,#+276
   \   00000104   0D10A0E1           MOV      R1,SP
   \   00000108   14008DE2           ADD      R0,SP,#+20
   \   0000010C   B60100EF           SWI      +438
   \   00000110   0030B0E1           MOVS     R3,R0
   1175            if (err)
   \   00000114   1600000A           BEQ      ??create_connect_6
   1176            {
   1177              if ((err==0xC9)||(err==0xD6))
   \   00000118   C90053E3           CMP      R3,#+201
   \   0000011C   D6005313           CMPNE    R3,#+214
   \   00000120   0600001A           BNE      ??create_connect_7
   1178              {
   1179                if (DNR_ID)
   \   00000124   140195E5           LDR      R0,[R5, #+276]
   \   00000128   000050E3           CMP      R0,#+0
   \   0000012C   1000000A           BEQ      ??create_connect_6
   1180                {
   1181                  host_counter--;
   \   00000130   1C0195E5           LDR      R0,[R5, #+284]
   \   00000134   010040E2           SUB      R0,R0,#+1
   \   00000138   1C0185E5           STR      R0,[R5, #+284]
   1182          	return; //Ждем готовности DNR
   \   0000013C   4C0000EA           B        ??create_connect_3
   1183                }
   1184              }
   1185              else
   1186              {
   1187                snprintf(logmsg,255,LG_GRDNRERROR,err);
   \                     ??create_connect_7:
   \   00000140   3C2088E2           ADD      R2,R8,#+60
   \   00000144   FF10A0E3           MOV      R1,#+255
   \   00000148   050087E0           ADD      R0,R7,R5
   \   0000014C   1B0100EF           SWI      +283
   1188                SMART_REDRAW();
   \   00000150   ........           BL       SMART_REDRAW
   1189                GBS_StartTimerProc(&reconnect_tmr,TMR_SECOND*RECONNECT_TIME,do_reconnect);
   \                     ??create_connect_8:
   \   00000154   ........           LDR      R0,??DataTable31  ;; RECONNECT_TIME
   \   00000158   0A20A0E1           MOV      R2,R10
   \   0000015C   000090E5           LDR      R0,[R0, #+0]
   \   00000160   D830A0E3           MOV      R3,#+216
   \   00000164   930001E0           MUL      R1,R3,R0
   \   00000168   050086E0           ADD      R0,R6,R5
   \   0000016C   4D0000EF           SWI      +77
   1190                return;
   \   00000170   3F0000EA           B        ??create_connect_3
   1191              }
   1192            }
   1193            if (p_res)
   \                     ??create_connect_6:
   \   00000174   00009DE5           LDR      R0,[SP, #+0]
   \   00000178   000050E3           CMP      R0,#+0
   \   0000017C   3400000A           BEQ      ??create_connect_9
   1194            {
   1195              if (p_res[3])
   \   00000180   0C0090E5           LDR      R0,[R0, #+12]
   \   00000184   000050E3           CMP      R0,#+0
   \   00000188   3900000A           BEQ      ??create_connect_3
   1196              {
   1197                strcpy(logmsg,LG_GRDNROK);
   \   0000018C   4C1088E2           ADD      R1,R8,#+76
   \   00000190   050087E0           ADD      R0,R7,R5
   \   00000194   1A0000EF           SWI      +26
   1198                SMART_REDRAW();
   \   00000198   ........           BL       SMART_REDRAW
   1199                DNR_TRIES=0;
   \   0000019C   184185E5           STR      R4,[R5, #+280]
   1200                sa.ip=p_res[3][0][0];
   \   000001A0   00109DE5           LDR      R1,[SP, #+0]
   \   000001A4   0C1091E5           LDR      R1,[R1, #+12]
   \   000001A8   001091E5           LDR      R1,[R1, #+0]
   \   000001AC   001091E5           LDR      R1,[R1, #+0]
   \   000001B0   08108DE5           STR      R1,[SP, #+8]
   1201              L_CONNECT:
   1202                sock=socket(1,1,0);
   \                     ??create_connect_5:
   \   000001B4   0020A0E3           MOV      R2,#+0
   \   000001B8   0110A0E3           MOV      R1,#+1
   \   000001BC   0100A0E1           MOV      R0,R1
   \   000001C0   730100EF           SWI      +371
   \   000001C4   D80085E5           STR      R0,[R5, #+216]
   1203                if (sock!=-1)
   \   000001C8   0B0050E1           CMP      R0,R11
   \   000001CC   1700000A           BEQ      ??create_connect_10
   1204                {
   1205          	sa.family=1;
   \   000001D0   0170A0E3           MOV      R7,#+1
   \   000001D4   B470CDE1           STRH     R7,[SP, #+4]
   1206          	sa.port=htons(hostport);
   \   000001D8   0908A0E1           MOV      R0,R9, LSL #+16
   \   000001DC   2008A0E1           MOV      R0,R0, LSR #+16
   \   000001E0   7A0100EF           SWI      +378
   \   000001E4   B600CDE1           STRH     R0,[SP, #+6]
   1207          	//    sa.ip=htonl(IP_ADDR(82,207,89,182));
   1208          	if (connect(sock,&sa,sizeof(sa))!=-1)
   \   000001E8   D80095E5           LDR      R0,[R5, #+216]
   \   000001EC   1020A0E3           MOV      R2,#+16
   \   000001F0   04108DE2           ADD      R1,SP,#+4
   \   000001F4   740100EF           SWI      +372
   \   000001F8   0B0050E1           CMP      R0,R11
   1209          	{
   1210          	  connect_state=1;
   \   000001FC   D4708515           STRNE    R7,[R5, #+212]
   1211          	  TOTALRECEIVED=0;
   \   00000200   DC408515           STRNE    R4,[R5, #+220]
   1212          	  TOTALSENDED=0;
   \   00000204   E0408515           STRNE    R4,[R5, #+224]
   1213          	  SMART_REDRAW();
   \   00000208   8EFFFF1A           BNE      ??create_connect_2
   1214          	}
   1215          	else
   1216          	{
   1217          	  closesocket(sock);
   \   0000020C   D80095E5           LDR      R0,[R5, #+216]
   \   00000210   760100EF           SWI      +374
   1218          	  sock=-1;
   \   00000214   D8B085E5           STR      R11,[R5, #+216]
   1219          	  LockSched();
   \   00000218   460100EF           SWI      +326
   1220          	  ShowMSG(1,(int)LG_MSGCANTCONN);
   \   0000021C   641088E2           ADD      R1,R8,#+100
   \   00000220   0100A0E3           MOV      R0,#+1
   \   00000224   480100EF           SWI      +328
   1221          	  UnlockSched();
   \   00000228   470100EF           SWI      +327
   1222          	  GBS_StartTimerProc(&reconnect_tmr,TMR_SECOND*RECONNECT_TIME,do_reconnect);
   \   0000022C   C8FFFFEA           B        ??create_connect_8
   1223          	}
   1224                }
   1225                else
   1226                {
   1227          	LockSched();
   \                     ??create_connect_10:
   \   00000230   460100EF           SWI      +326
   1228          	ShowMSG(1,(int)LG_MSGCANTCRSC);
   \   00000234   801088E2           ADD      R1,R8,#+128
   \   00000238   0100A0E3           MOV      R0,#+1
   \   0000023C   480100EF           SWI      +328
   1229          	UnlockSched();
   \   00000240   470100EF           SWI      +327
   1230          	//Не осилили создания сокета, закрываем GPRS-сессию
   1231          	GPRS_OnOff(0,1);
   \   00000244   0110A0E3           MOV      R1,#+1
   \   00000248   0000A0E3           MOV      R0,#+0
   \   0000024C   8E0100EF           SWI      +398
   \   00000250   070000EA           B        ??create_connect_3
   1232                }
   1233              }
   1234            }
   1235            else
   1236            {
   1237              DNR_TRIES--;
   \                     ??create_connect_9:
   \   00000254   180195E5           LDR      R0,[R5, #+280]
   \   00000258   010040E2           SUB      R0,R0,#+1
   \   0000025C   180185E5           STR      R0,[R5, #+280]
   1238              LockSched();
   \   00000260   460100EF           SWI      +326
   1239              ShowMSG(1,(int)LG_MSGHOSTNFND);
   \   00000264   AC1088E2           ADD      R1,R8,#+172
   \   00000268   0100A0E3           MOV      R0,#+1
   \   0000026C   480100EF           SWI      +328
   1240              UnlockSched();
   \   00000270   470100EF           SWI      +327
   \                     ??create_connect_3:
   \   00000274   94D08DE2           ADD      SP,SP,#+148      ;; stack cleaning
   \   00000278   F08FBDE8           POP      {R4-R11,PC}      ;; return
   \                     ??create_connect_0:
   \   0000027C   ........           DC32     `?<Constant "Waiting for GPRS up...">`
   \   00000280   ........           DC32     NATICQ_HOST
   1241            }
   1242          }
   1243          
   1244          #ifdef SEND_TIMER
   1245          GBSTMR send_tmr;
   1246          #endif
   1247          

   \                                 In segment CODE, align 4, keep-with-next
   1248          void ClearSendQ(void)
   1249          {
   \                     ClearSendQ:
   \   00000000   10402DE9           PUSH     {R4,LR}
   1250            mfree((void *)sendq_p);
   \   00000004   ........           LDR      R4,??DataTable41  ;; S_ICONS
   \   00000008   F00094E5           LDR      R0,[R4, #+240]
   \   0000000C   150000EF           SWI      +21
   1251            sendq_p=NULL;
   \   00000010   0000A0E3           MOV      R0,#+0
   \   00000014   F00084E5           STR      R0,[R4, #+240]
   1252            sendq_l=NULL;
   \   00000018   EC0084E5           STR      R0,[R4, #+236]
   1253          #ifdef SEND_TIMER
   1254            GBS_DelTimer(&send_tmr);
   1255          #endif
   1256          }
   \   0000001C   1080BDE8           POP      {R4,PC}          ;; return
   1257          

   \                                 In segment CODE, align 4, keep-with-next
   1258          void end_socket(void)
   1259          {
   \                     end_socket:
   \   00000000   10402DE9           PUSH     {R4,LR}
   1260            if (sock>=0)
   \   00000004   ........           LDR      R4,??DataTable41  ;; S_ICONS
   \   00000008   D80094E5           LDR      R0,[R4, #+216]
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   1080BD48           POPMI    {R4,PC}
   1261            {
   1262              shutdown(sock,2);
   \   00000014   0210A0E3           MOV      R1,#+2
   \   00000018   770100EF           SWI      +375
   1263              closesocket(sock);
   \   0000001C   D80094E5           LDR      R0,[R4, #+216]
   \   00000020   760100EF           SWI      +374
   1264            }
   1265          #ifdef SEND_TIMER
   1266            GBS_DelTimer(&send_tmr);
   1267          #endif
   1268          }
   \   00000024   1080BDE8           POP      {R4,PC}          ;; return
   1269          
   1270          #ifdef SEND_TIMER
   1271          static void resend(void)
   1272          {
   1273            void SendAnswer(int dummy, TPKT *p);
   1274            SUBPROC((void*)SendAnswer,0,0);
   1275          }
   1276          #endif
   1277          

   \                                 In segment CODE, align 4, keep-with-next
   1278          void SendAnswer(int dummy, TPKT *p)
   1279          {
   \                     SendAnswer:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   1280            int i;
   1281            int j;
   1282            if (connect_state<2)
   \   00000004   ........           LDR      R4,??DataTable41  ;; S_ICONS
   \   00000008   0160A0E1           MOV      R6,R1
   \   0000000C   D40094E5           LDR      R0,[R4, #+212]
   \   00000010   020050E3           CMP      R0,#+2
   \   00000014   020000AA           BGE      ??SendAnswer_0
   1283            {
   1284              mfree(p);
   \   00000018   0600A0E1           MOV      R0,R6
   \   0000001C   150000EF           SWI      +21
   1285              return;
   \   00000020   F083BDE8           POP      {R4-R9,PC}
   1286            }
   1287            if (p)
   \                     ??SendAnswer_0:
   \   00000024   000056E3           CMP      R6,#+0
   \   00000028   2600000A           BEQ      ??SendAnswer_1
   1288            {
   1289              j=sizeof(PKT)+p->pkt.data_len; //Размер пакета
   \   0000002C   B600D6E1           LDRH     R0,[R6, #+6]
   \   00000030   085080E2           ADD      R5,R0,#+8
   1290              TOTALSENDED+=j;
   \   00000034   E00094E5           LDR      R0,[R4, #+224]
   \   00000038   000085E0           ADD      R0,R5,R0
   \   0000003C   E00084E5           STR      R0,[R4, #+224]
   1291              ALLTOTALSENDED+=j;			//by BoBa 10.07
   \   00000040   E80094E5           LDR      R0,[R4, #+232]
   \   00000044   000085E0           ADD      R0,R5,R0
   \   00000048   E80084E5           STR      R0,[R4, #+232]
   1292              //Проверяем, не надо ли добавить в очередь
   1293              if (sendq_p)
   \   0000004C   F00094E5           LDR      R0,[R4, #+240]
   \   00000050   000050E3           CMP      R0,#+0
   \   00000054   0F00000A           BEQ      ??SendAnswer_2
   1294              {
   1295                //Есть очередь, добавляем в нее
   1296                sendq_p=realloc((void *)sendq_p,sendq_l+j);
   \   00000058   EC1094E5           LDR      R1,[R4, #+236]
   \   0000005C   011085E0           ADD      R1,R5,R1
   \   00000060   BA0000EF           SWI      +186
   \   00000064   F00084E5           STR      R0,[R4, #+240]
   1297                memcpy((char *)sendq_p+sendq_l,p,j);
   \   00000068   EC0094E5           LDR      R0,[R4, #+236]
   \   0000006C   F03094E5           LDR      R3,[R4, #+240]
   \   00000070   0520A0E1           MOV      R2,R5
   \   00000074   0610A0E1           MOV      R1,R6
   \   00000078   030080E0           ADD      R0,R0,R3
   \   0000007C   1E0100EF           SWI      +286
   1298                mfree(p);
   \   00000080   0600A0E1           MOV      R0,R6
   \   00000084   150000EF           SWI      +21
   1299                sendq_l+=j;
   \   00000088   EC0094E5           LDR      R0,[R4, #+236]
   \   0000008C   000085E0           ADD      R0,R5,R0
   \   00000090   EC0084E5           STR      R0,[R4, #+236]
   1300                return;
   \   00000094   F083BDE8           POP      {R4-R9,PC}
   1301              }
   1302              sendq_p=p;
   \                     ??SendAnswer_2:
   \   00000098   F06084E5           STR      R6,[R4, #+240]
   1303              sendq_l=j;
   \   0000009C   EC5084E5           STR      R5,[R4, #+236]
   \   000000A0   080000EA           B        ??SendAnswer_1
   1304            }
   1305            //Отправляем уже существующее в очереди
   1306            while((i=sendq_l)!=0)
   1307            {
   1308              if (i>0x400) i=0x400;
   1309              j=send(sock,(void *)sendq_p,i,0);
   1310              snprintf(logmsg,255,"send res %d",j);
   1311              SMART_REDRAW();
   1312              if (j<0)
   1313              {
   1314                j=*socklasterr();
   1315                if ((j==0xC9)||(j==0xD6))
   1316                {
   1317          	//Передали что хотели
   1318          	strcpy(logmsg,"Send delayed...");
   1319          	return; //Видимо, надо ждать сообщения ENIP_BUFFER_FREE
   1320                }
   1321                else
   1322                {
   1323          	//Ошибка
   1324          	LockSched();
   1325          	ShowMSG(1,(int)"Send error!");
   1326          	UnlockSched();
   1327          	end_socket();
   1328          	return;
   1329                }
   1330              }
   1331              memcpy((void *)sendq_p,(char *)sendq_p+j,sendq_l-=j); //Удалили переданное
   \                     ??SendAnswer_3:
   \   000000A4   EC0094E5           LDR      R0,[R4, #+236]
   \   000000A8   052040E0           SUB      R2,R0,R5
   \   000000AC   EC2084E5           STR      R2,[R4, #+236]
   \   000000B0   F00094E5           LDR      R0,[R4, #+240]
   \   000000B4   001085E0           ADD      R1,R5,R0
   \   000000B8   1E0100EF           SWI      +286
   1332              if (j<i)
   \   000000BC   060055E1           CMP      R5,R6
   \   000000C0   F083BDB8           POPLT    {R4-R9,PC}
   1333              {
   1334                //Передали меньше чем заказывали
   1335          #ifdef SEND_TIMER
   1336                GBS_StartTimerProc(&send_tmr,216*5,resend);
   1337          #endif
   1338                return; //Ждем сообщения ENIP_BUFFER_FREE1
   1339              }
   1340              tenseconds_to_ping=0; //Чего-то послали, можно начинать отсчет времени до пинга заново
   \   000000C4   107184E5           STR      R7,[R4, #+272]
   \                     ??SendAnswer_1:
   \   000000C8   EC6094E5           LDR      R6,[R4, #+236]
   \   000000CC   F01094E5           LDR      R1,[R4, #+240]
   \   000000D0   0070A0E3           MOV      R7,#+0
   \   000000D4   000056E3           CMP      R6,#+0
   \   000000D8   2200000A           BEQ      ??SendAnswer_4
   \   000000DC   94909FE5           LDR      R9,??SendAnswer_5  ;; `?<Constant "send res %d">`
   \   000000E0   0100A0E3           MOV      R0,#+1
   \   000000E4   400E80E3           ORR      R0,R0,#0x400
   \   000000E8   000056E1           CMP      R6,R0
   \   000000EC   D80094E5           LDR      R0,[R4, #+216]
   \   000000F0   406EA0A3           MOVGE    R6,#+1024
   \   000000F4   0030A0E3           MOV      R3,#+0
   \   000000F8   0620A0E1           MOV      R2,R6
   \   000000FC   790100EF           SWI      +377
   \   00000100   0050A0E1           MOV      R5,R0
   \   00000104   A28FA0E3           MOV      R8,#+648
   \   00000108   0530A0E1           MOV      R3,R5
   \   0000010C   0920A0E1           MOV      R2,R9
   \   00000110   FF10A0E3           MOV      R1,#+255
   \   00000114   040088E0           ADD      R0,R8,R4
   \   00000118   1B0100EF           SWI      +283
   \   0000011C   ........           BL       SMART_REDRAW
   \   00000120   000055E3           CMP      R5,#+0
   \   00000124   DEFFFF5A           BPL      ??SendAnswer_3
   \   00000128   7C8100EF           SWI      +33148
   \   0000012C   005090E5           LDR      R5,[R0, #+0]
   \   00000130   C90055E3           CMP      R5,#+201
   \   00000134   D6005513           CMPNE    R5,#+214
   \   00000138   0300001A           BNE      ??SendAnswer_6
   \   0000013C   0C1089E2           ADD      R1,R9,#+12
   \   00000140   040088E0           ADD      R0,R8,R4
   \   00000144   1A0000EF           SWI      +26
   \   00000148   F083BDE8           POP      {R4-R9,PC}
   \                     ??SendAnswer_6:
   \   0000014C   460100EF           SWI      +326
   \   00000150   1C1089E2           ADD      R1,R9,#+28
   \   00000154   0100A0E3           MOV      R0,#+1
   \   00000158   480100EF           SWI      +328
   \   0000015C   470100EF           SWI      +327
   \   00000160   ........           BL       end_socket
   \   00000164   F083BDE8           POP      {R4-R9,PC}
   1341            }
   1342            mfree((void *)sendq_p);
   \                     ??SendAnswer_4:
   \   00000168   0100A0E1           MOV      R0,R1
   \   0000016C   150000EF           SWI      +21
   1343            sendq_p=NULL;
   \   00000170   F07084E5           STR      R7,[R4, #+240]
   1344          }
   \   00000174   F083BDE8           POP      {R4-R9,PC}       ;; return
   \                     ??SendAnswer_5:
   \   00000178   ........           DC32     `?<Constant "send res %d">`
   1345          

   \                                 In segment CODE, align 4, keep-with-next
   1346          void send_login(int dummy, TPKT *p)
   1347          {
   \                     send_login:
   \   00000000   FF402DE9           PUSH     {R0-R7,LR}
   1348            connect_state=2;
   \   00000004   ........           LDR      R6,??DataTable41  ;; S_ICONS
   1349            char rev[16];
   1350            //Кто будет менять в этом месте идентификатор клиента, буду банить на уровне сервера!!!
   1351            //А Вова будет банить на форуме!
   1352            snprintf(rev,9,"Sie_%04d",__SVN_REVISION__);
   \   00000008   7C209FE5           LDR      R2,??send_login_0  ;; `?<Constant "Sie_%04d">`
   \   0000000C   0040A0E1           MOV      R4,R0
   \   00000010   0150A0E1           MOV      R5,R1
   \   00000014   0200A0E3           MOV      R0,#+2
   \   00000018   D40086E5           STR      R0,[R6, #+212]
   \   0000001C   0330A0E3           MOV      R3,#+3
   \   00000020   703E83E3           ORR      R3,R3,#0x700
   \   00000024   0910A0E3           MOV      R1,#+9
   \   00000028   0D00A0E1           MOV      R0,SP
   \   0000002C   1B0100EF           SWI      +283
   1353          
   1354            TPKT *p2=malloc(sizeof(PKT)+8);
   \   00000030   1000A0E3           MOV      R0,#+16
   \   00000034   140000EF           SWI      +20
   \   00000038   0070A0E1           MOV      R7,R0
   1355            p2->pkt.uin=UIN;
   \   0000003C   ........           LDR      R0,??DataTable37  ;; UIN
   1356            p2->pkt.type=T_SETCLIENT_ID;
   1357            p2->pkt.data_len=8;
   1358            memcpy(p2->data,rev,8);
   \   00000040   0820A0E3           MOV      R2,#+8
   \   00000044   000090E5           LDR      R0,[R0, #+0]
   \   00000048   0D10A0E1           MOV      R1,SP
   \   0000004C   000087E5           STR      R0,[R7, #+0]
   \   00000050   2000A0E3           MOV      R0,#+32
   \   00000054   B400C7E1           STRH     R0,[R7, #+4]
   \   00000058   0800A0E3           MOV      R0,#+8
   \   0000005C   B600C7E1           STRH     R0,[R7, #+6]
   \   00000060   080087E2           ADD      R0,R7,#+8
   \   00000064   1E0100EF           SWI      +286
   1359            SendAnswer(0,p2);
   \   00000068   0710A0E1           MOV      R1,R7
   \   0000006C   0000A0E3           MOV      R0,#+0
   \   00000070   ........           BL       SendAnswer
   1360            SendAnswer(dummy,p);
   \   00000074   0510A0E1           MOV      R1,R5
   \   00000078   0400A0E1           MOV      R0,R4
   \   0000007C   ........           BL       SendAnswer
   1361            RXstate=-(int)sizeof(PKT);
   \   00000080   0700E0E3           MVN      R0,#+7
   \   00000084   D00086E5           STR      R0,[R6, #+208]
   1362          }
   \   00000088   FF80BDE8           POP      {R0-R7,PC}       ;; return
   \                     ??send_login_0:
   \   0000008C   ........           DC32     `?<Constant "Sie_%04d">`
   1363          

   \                                 In segment CODE, align 4, keep-with-next
   1364          void do_ping(void)
   1365          {
   \                     do_ping:
   \   00000000   00402DE9           PUSH     {LR}
   1366            TPKT *pingp=malloc(sizeof(PKT));
   \   00000004   0800A0E3           MOV      R0,#+8
   \   00000008   140000EF           SWI      +20
   1367            pingp->pkt.uin=UIN;
   \   0000000C   ........           LDR      R1,??DataTable37  ;; UIN
   \   00000010   001091E5           LDR      R1,[R1, #+0]
   \   00000014   001080E5           STR      R1,[R0, #+0]
   1368            pingp->pkt.type=0;
   \   00000018   0010A0E3           MOV      R1,#+0
   \   0000001C   B410C0E1           STRH     R1,[R0, #+4]
   1369            pingp->pkt.data_len=0;
   \   00000020   B610C0E1           STRH     R1,[R0, #+6]
   1370            SendAnswer(0,pingp);
   \   00000024   0010A0E1           MOV      R1,R0
   \   00000028   0000A0E3           MOV      R0,#+0
   \   0000002C   0040BDE8           POP      {LR}             ;; Pop
   \   00000030   ........           B        SendAnswer       ;; tailcall
   1371          }
   1372          

   \                                 In segment CODE, align 4, keep-with-next
   1373          void SendMSGACK(int i)
   1374          {
   \                     SendMSGACK:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   1375            TPKT *ackp=malloc(sizeof(PKT));
   \   00000008   0800A0E3           MOV      R0,#+8
   \   0000000C   140000EF           SWI      +20
   1376            ackp->pkt.uin=i;
   \   00000010   004080E5           STR      R4,[R0, #+0]
   1377            ackp->pkt.type=T_MSGACK;
   \   00000014   1710A0E3           MOV      R1,#+23
   \   00000018   B410C0E1           STRH     R1,[R0, #+4]
   1378            ackp->pkt.data_len=0;
   \   0000001C   0010A0E3           MOV      R1,#+0
   \   00000020   B610C0E1           STRH     R1,[R0, #+6]
   1379            SendAnswer(0,ackp);
   \   00000024   0010A0E1           MOV      R1,R0
   \   00000028   0000A0E3           MOV      R0,#+0
   \   0000002C   1040BDE8           POP      {R4,LR}          ;; Pop
   \   00000030   ........           B        SendAnswer       ;; tailcall
   1380          }
   1381          

   \                                 In segment CODE, align 4, keep-with-next
   1382          void RequestXText(unsigned int uin)
   1383          {
   \                     RequestXText:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   1384            TPKT *p=malloc(sizeof(PKT));
   \   00000008   0800A0E3           MOV      R0,#+8
   \   0000000C   140000EF           SWI      +20
   1385            p->pkt.uin=uin;
   \   00000010   004080E5           STR      R4,[R0, #+0]
   1386            p->pkt.type=T_XTEXT_REQ;
   \   00000014   1810A0E3           MOV      R1,#+24
   \   00000018   B410C0E1           STRH     R1,[R0, #+4]
   1387            p->pkt.data_len=0;
   \   0000001C   0010A0E3           MOV      R1,#+0
   \   00000020   B610C0E1           STRH     R1,[R0, #+6]
   1388            SUBPROC((void *)SendAnswer,0,p);
   \   00000024   0020A0E1           MOV      R2,R0
   \   00000028   ........           LDR      R0,??DataTable68  ;; SendAnswer
   \   0000002C   710100EF           SWI      +369
   1389          }
   \   00000030   1080BDE8           POP      {R4,PC}          ;; return
   1390          

   \                                 In segment CODE, align 4, keep-with-next
   1391          void get_answer(void)
   1392          {
   \                     get_answer:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   1393            void *p;
   1394            int i=RXstate;
   \   00000004   ........           LDR      R5,??DataTable41  ;; S_ICONS
   \   00000008   41DE4DE2           SUB      SP,SP,#+1040
   1395            int j;
   1396            int n;
   1397            char rb[1024];
   1398            char *rp=rb;
   1399            if (connect_state<2) return;
   \   0000000C   D40095E5           LDR      R0,[R5, #+212]
   \   00000010   D09095E5           LDR      R9,[R5, #+208]
   \   00000014   10608DE2           ADD      R6,SP,#+16
   \   00000018   020050E3           CMP      R0,#+2
   \   0000001C   F30000BA           BLT      ??get_answer_1
   \   00000020   0A0079E3           CMN      R9,#+10
   \   00000024   F100000A           BEQ      ??get_answer_1
   1400            if (i==EOP) return;
   1401            j=recv(sock,rb,sizeof(rb),0);
   \   00000028   D80095E5           LDR      R0,[R5, #+216]
   \   0000002C   C8839FE5           LDR      R8,??get_answer_2+0x4  ;; RXbuf
   \   00000030   0030A0E3           MOV      R3,#+0
   \   00000034   402EA0E3           MOV      R2,#+1024
   \   00000038   10108DE2           ADD      R1,SP,#+16
   \   0000003C   780100EF           SWI      +376
   \   00000040   0070A0E1           MOV      R7,R0
   \   00000044   09A0A0E3           MOV      R10,#+9
   \   00000048   42AC8AE3           ORR      R10,R10,#0x4200
   \   0000004C   0E0000EA           B        ??get_answer_3
   1402            while(j>0)
   1403            {
   1404              if (i<0)
   1405              {
   1406                //Принимаем заголовок
   1407                n=-i; //Требуемое количество байт
   1408                if (j<n) n=j; //полученное<требуемое?
   1409                memcpy(RXbuf.data+i,rp,n); //Копируем
   1410                i+=n;
   1411                j-=n;
   1412                rp+=n;
   1413              }
   1414              if (i>=0)
   1415              {
   1416                //Принимаем тельце ;)
   1417                n=RXbuf.pkt.data_len; //Всего в тельце
   1418                if (n>16383)
   1419                {
   1420          	//Слишком много
   1421          	strcpy(logmsg,LG_GRBADPACKET);
   1422          	end_socket();
   1423          	RXstate=EOP;
   1424          	return;
   1425                }
   1426                n-=i; //Количество требуемых байт (общая длинна тельца-текущая позиция)
   1427                if (n>0)
   1428                {
   1429          	if (j<n) n=j; //полученное<требуемое?
   1430          	memcpy(RXbuf.data+i,rp,n);
   1431          	i+=n;
   1432          	j-=n;
   1433          	rp+=n;
   1434                }
   1435                if (RXbuf.pkt.data_len==i)
   1436                {
   1437          	//Пакет полностью получен
   1438          	TOTALRECEIVED+=(i+8);
   1439          	ALLTOTALRECEIVED+=(i+8);			//by BoBa 10.07
   1440          	//Пакет удачно принят, можно разбирать...
   1441          	RXbuf.data[i]=0; //Конец строки
   1442          	switch(RXbuf.pkt.type)
   1443          	{
   1444          	case T_LOGIN:
   1445          	  //Удачно залогинились
   1446          	  //Посылаем в MMI
   1447          	  n=i+sizeof(PKT)+1;
   1448          	  p=malloc(n);
   1449          	  memcpy(p,&RXbuf,n);
   1450          	  GBS_SendMessage(MMI_CEPID,MSG_HELPER_TRANSLATOR,0,p,sock);
   1451          	  Play(sndStartup);
   1452          	  //        GBS_StartTimerProc(&tmr_ping,120*TMR_SECOND,call_ping);
   1453          	  snprintf(logmsg,255,LG_GRLOGINMSG,RXbuf.data);
   1454          	  connect_state=3;
   1455                    host_counter--; //Если уж законнектились, будем сидеть на этом сервере
   1456          	  SMART_REDRAW();
   1457          	  break;
   1458          	case T_XTEXT_ACK:
   1459          	case T_GROUPID:
   1460          	case T_GROUPFOLLOW:
   1461          	case T_CLENTRY:
   1462          	  //Посылаем в MMI
   1463          	  n=i+sizeof(PKT)+1;
   1464          	  p=malloc(n);
   1465          	  memcpy(p,&RXbuf,n);
   1466          	  GBS_SendMessage(MMI_CEPID,MSG_HELPER_TRANSLATOR,0,p,sock);
   1467          	  //snprintf(logmsg,255,"CL: %s",RXbuf.data);
   1468          	  break;
   1469          	case T_STATUSCHANGE:
   1470          	  n=i+sizeof(PKT);
   1471          	  p=malloc(n);
   1472          	  memcpy(p,&RXbuf,n);
   1473          	  snprintf(logmsg,255,LG_GRSTATUSCHNG,RXbuf.pkt.uin,*((unsigned short *)(RXbuf.data)));
   1474          	  GBS_SendMessage(MMI_CEPID,MSG_HELPER_TRANSLATOR,0,p,sock);
   1475          	  break;
   1476          	case T_ERROR:
   1477          	  snprintf(logmsg,255,LG_GRERROR,RXbuf.data);
   1478          	  SMART_REDRAW();
   1479          	  break;
   1480          	case T_RECVMSG:
   1481          	  n=i+sizeof(PKT)+1;
   1482          	  p=malloc(n);
   1483          	  memcpy(p,&RXbuf,n);
   1484          	  {
   1485          	    char *s=p;
   1486          	    s+=sizeof(PKT);
   1487          	    int c;
   1488          	    while((c=*s))
   1489          	    {
   1490          	      if (c<3) *s=' ';
   1491          	      s++;
   1492          	    }
   1493          	  }
   1494          	  snprintf(logmsg,255,LG_GRRECVMSG,RXbuf.pkt.uin,RXbuf.data);
   1495          	  SendMSGACK(TOTALRECEIVED);
   1496          	  GBS_SendMessage(MMI_CEPID,MSG_HELPER_TRANSLATOR,0,p,sock);
   1497          	  SMART_REDRAW();
   1498          	  Play(sndMsg);
   1499          	  break;
   1500          	case T_SSLRESP:
   1501          	  LockSched();
   1502          	  ShowMSG(1,(int)RXbuf.data);
   1503          	  UnlockSched();
   1504          	  break;
   1505          	case T_SRV_ACK:
   1506          	  if (FindContactLOGQByAck(&RXbuf)) Play(sndMsgSent);
   1507          	case T_CLIENT_ACK:
   1508          	  p=malloc(sizeof(PKT)+2);
   1509          	  memcpy(p,&RXbuf,sizeof(PKT)+2);
   1510          	  GBS_SendMessage(MMI_CEPID,MSG_HELPER_TRANSLATOR,0,p,sock);
   1511          	  break;
   1512          	case T_ECHORET:
   1513          	  {
   1514          	    TDate d;
   1515          	    TTime t;
   1516          	    TTime *pt=(TTime *)(RXbuf.data);
   1517          	    int s1;
   1518          	    int s2;
   1519          	    GetDateTime(&d,&t);
   1520          	    s1=t.hour*3600+t.min*60+t.sec;
   1521          	    s2=pt->hour*3600+pt->min*60+pt->sec;
   1522          	    s1-=s2;
   1523          	    if (s1<0) s1+=86400;
   1524          	    snprintf(logmsg,255,"Ping %d-%d seconds!",s1,s1+1);
   1525          	    LockSched();
   1526          	    ShowMSG(1,(int)logmsg);
   1527          	    UnlockSched();
   1528          	  }
   1529          	  break;
   1530                  case T_LASTPRIVACY:
   1531                    n=i+sizeof(PKT);
   \                     ??get_answer_4:
   \   00000050   0040A0E1           MOV      R4,R0
   1532                    p=malloc(n);
   \                     ??get_answer_5:
   \   00000054   140000EF           SWI      +20
   \   00000058   00B0A0E1           MOV      R11,R0
   1533                    memcpy(p,&RXbuf,n);
   \   0000005C   0420A0E1           MOV      R2,R4
   \                     ??get_answer_6:
   \   00000060   0810A0E1           MOV      R1,R8
   \   00000064   1E0100EF           SWI      +286
   1534          	  GBS_SendMessage(MMI_CEPID,MSG_HELPER_TRANSLATOR,0,p,sock);
   \   00000068   D80095E5           LDR      R0,[R5, #+216]
   \   0000006C   0B30A0E1           MOV      R3,R11
   \   00000070   01002DE9           PUSH     {R0}
   \   00000074   0020A0E3           MOV      R2,#+0
   \   00000078   0910A0E1           MOV      R1,R9
   \   0000007C   0A00A0E1           MOV      R0,R10
   \   00000080   000100EF           SWI      +256
   \                     ??get_answer_7:
   \   00000084   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   1535          	  break;
   1536          	}
   1537          	i=-(int)sizeof(PKT); //А может еще есть данные
   \                     ??get_answer_8:
   \   00000088   0790E0E3           MVN      R9,#+7
   \                     ??get_answer_3:
   \   0000008C   010057E3           CMP      R7,#+1
   \   00000090   D50000BA           BLT      ??get_answer_9
   \   00000094   000059E3           CMP      R9,#+0
   \   00000098   0A00005A           BPL      ??get_answer_10
   \   0000009C   004069E2           RSB      R4,R9,#+0
   \   000000A0   040057E1           CMP      R7,R4
   \   000000A4   0740A0B1           MOVLT    R4,R7
   \   000000A8   0420A0E1           MOV      R2,R4
   \   000000AC   0610A0E1           MOV      R1,R6
   \   000000B0   080089E0           ADD      R0,R9,R8
   \   000000B4   080080E2           ADD      R0,R0,#+8
   \   000000B8   1E0100EF           SWI      +286
   \   000000BC   099084E0           ADD      R9,R4,R9
   \   000000C0   047047E0           SUB      R7,R7,R4
   \   000000C4   066084E0           ADD      R6,R4,R6
   \                     ??get_answer_10:
   \   000000C8   000059E3           CMP      R9,#+0
   \   000000CC   EEFFFF4A           BMI      ??get_answer_3
   \   000000D0   B640D8E1           LDRH     R4,[R8, #+6]
   \   000000D4   400C54E3           CMP      R4,#+16384
   \   000000D8   060000BA           BLT      ??get_answer_11
   \   000000DC   1C139FE5           LDR      R1,??get_answer_2+0x8  ;; `?<Constant "Bad packet">`
   \   000000E0   A20F85E2           ADD      R0,R5,#+648
   \   000000E4   1A0000EF           SWI      +26
   \   000000E8   ........           BL       end_socket
   \   000000EC   0900E0E3           MVN      R0,#+9
   \   000000F0   D00085E5           STR      R0,[R5, #+208]
   \   000000F4   BD0000EA           B        ??get_answer_1
   \                     ??get_answer_11:
   \   000000F8   094044E0           SUB      R4,R4,R9
   \   000000FC   010054E3           CMP      R4,#+1
   \   00000100   090000BA           BLT      ??get_answer_12
   \   00000104   040057E1           CMP      R7,R4
   \   00000108   0740A0B1           MOVLT    R4,R7
   \   0000010C   0420A0E1           MOV      R2,R4
   \   00000110   0610A0E1           MOV      R1,R6
   \   00000114   080089E0           ADD      R0,R9,R8
   \   00000118   080080E2           ADD      R0,R0,#+8
   \   0000011C   1E0100EF           SWI      +286
   \   00000120   099084E0           ADD      R9,R4,R9
   \   00000124   047047E0           SUB      R7,R7,R4
   \   00000128   066084E0           ADD      R6,R4,R6
   \                     ??get_answer_12:
   \   0000012C   B600D8E1           LDRH     R0,[R8, #+6]
   \   00000130   090050E1           CMP      R0,R9
   \   00000134   D4FFFF1A           BNE      ??get_answer_3
   \   00000138   DC1095E5           LDR      R1,[R5, #+220]
   \   0000013C   080089E2           ADD      R0,R9,#+8
   \   00000140   011080E0           ADD      R1,R0,R1
   \   00000144   DC1085E5           STR      R1,[R5, #+220]
   \   00000148   E41095E5           LDR      R1,[R5, #+228]
   \   0000014C   0020A0E3           MOV      R2,#+0
   \   00000150   011080E0           ADD      R1,R0,R1
   \   00000154   E41085E5           STR      R1,[R5, #+228]
   \   00000158   081089E0           ADD      R1,R9,R8
   \   0000015C   0820C1E5           STRB     R2,[R1, #+8]
   \   00000160   B410D8E1           LDRH     R1,[R8, #+4]
   \   00000164   094089E2           ADD      R4,R9,#+9
   \   00000168   AE90A0E3           MOV      R9,#+174
   \   0000016C   DE9C89E3           ORR      R9,R9,#0xDE00
   \   00000170   031041E2           SUB      R1,R1,#+3
   \   00000174   1C0051E3           CMP      R1,#+28
   \   00000178   C2FFFF8A           BHI      ??get_answer_8
   \   0000017C   012F8FE2           ADR      R2,??get_answer_0
   \   00000180   D12092E1           LDRSB    R2,[R2, R1]
   \   00000184   02F18FE0           ADD      PC,PC,R2, LSL #+2
   \                     ??get_answer_0:
   \   00000188   4107BF3A           DC8      +65,+7,+191,+58
   \   0000018C   22BF24BF           DC8      +34,+191,+36,+191
   \   00000190   BFBF64BF           DC8      +191,+191,+100,+191
   \   00000194   BF6A70BF           DC8      +191,+106,+112,+191
   \   00000198   752222BF           DC8      +117,+34,+34,+191
   \   0000019C   BFBF22BF           DC8      +191,+191,+34,+191
   \   000001A0   BFBFBFBF           DC8      +191,+191,+191,+191
   \   000001A4   B1000000           DC8      +177,+0,+0,+0
   \                     ??get_answer_13:
   \   000001A8   0400A0E1           MOV      R0,R4
   \   000001AC   140000EF           SWI      +20
   \   000001B0   00B0A0E1           MOV      R11,R0
   \   000001B4   0420A0E1           MOV      R2,R4
   \   000001B8   0810A0E1           MOV      R1,R8
   \   000001BC   1E0100EF           SWI      +286
   \   000001C0   D80095E5           LDR      R0,[R5, #+216]
   \   000001C4   0B30A0E1           MOV      R3,R11
   \   000001C8   01002DE9           PUSH     {R0}
   \   000001CC   0020A0E3           MOV      R2,#+0
   \   000001D0   0910A0E1           MOV      R1,R9
   \   000001D4   0A00A0E1           MOV      R0,R10
   \   000001D8   000100EF           SWI      +256
   \   000001DC   20029FE5           LDR      R0,??get_answer_2+0xC  ;; sndStartup
   \   000001E0   ........           BL       Play
   \   000001E4   083088E2           ADD      R3,R8,#+8
   \   000001E8   822F8FE2           ADR      R2,??get_answer_2  ;; "%s"
   \   000001EC   FF10A0E3           MOV      R1,#+255
   \   000001F0   A20F85E2           ADD      R0,R5,#+648
   \   000001F4   1B0100EF           SWI      +283
   \   000001F8   0300A0E3           MOV      R0,#+3
   \   000001FC   D40085E5           STR      R0,[R5, #+212]
   \   00000200   1C0195E5           LDR      R0,[R5, #+284]
   \   00000204   010040E2           SUB      R0,R0,#+1
   \   00000208   1C0185E5           STR      R0,[R5, #+284]
   \   0000020C   ........           BL       SMART_REDRAW
   \   00000210   9BFFFFEA           B        ??get_answer_7
   \                     ??get_answer_14:
   \   00000214   0400A0E1           MOV      R0,R4
   \   00000218   8DFFFFEA           B        ??get_answer_5
   \                     ??get_answer_15:
   \   0000021C   0040A0E1           MOV      R4,R0
   \   00000220   140000EF           SWI      +20
   \   00000224   00B0A0E1           MOV      R11,R0
   \   00000228   0420A0E1           MOV      R2,R4
   \   0000022C   0810A0E1           MOV      R1,R8
   \   00000230   1E0100EF           SWI      +286
   \   00000234   B800D8E1           LDRH     R0,[R8, #+8]
   \   00000238   C8219FE5           LDR      R2,??get_answer_2+0x10  ;; `?<Constant "Bad packet">` + 12
   \   0000023C   FF10A0E3           MOV      R1,#+255
   \   00000240   01002DE9           PUSH     {R0}
   \   00000244   003098E5           LDR      R3,[R8, #+0]
   \   00000248   A20F85E2           ADD      R0,R5,#+648
   \   0000024C   1B0100EF           SWI      +283
   \   00000250   D80095E5           LDR      R0,[R5, #+216]
   \   00000254   0B30A0E1           MOV      R3,R11
   \   00000258   01002DE9           PUSH     {R0}
   \   0000025C   0020A0E3           MOV      R2,#+0
   \   00000260   0910A0E1           MOV      R1,R9
   \   00000264   0A00A0E1           MOV      R0,R10
   \   00000268   000100EF           SWI      +256
   \                     ??get_answer_16:
   \   0000026C   08D08DE2           ADD      SP,SP,#+8        ;; stack cleaning
   \   00000270   84FFFFEA           B        ??get_answer_8
   \                     ??get_answer_17:
   \   00000274   90219FE5           LDR      R2,??get_answer_2+0x14  ;; `?<Constant "Bad packet">` + 24
   \   00000278   083088E2           ADD      R3,R8,#+8
   \   0000027C   FF10A0E3           MOV      R1,#+255
   \   00000280   A20F85E2           ADD      R0,R5,#+648
   \   00000284   1B0100EF           SWI      +283
   \   00000288   ........           BL       SMART_REDRAW
   \   0000028C   7DFFFFEA           B        ??get_answer_8
   \                     ??get_answer_18:
   \   00000290   0400A0E1           MOV      R0,R4
   \   00000294   140000EF           SWI      +20
   \   00000298   00B0A0E1           MOV      R11,R0
   \   0000029C   0420A0E1           MOV      R2,R4
   \   000002A0   0810A0E1           MOV      R1,R8
   \   000002A4   1E0100EF           SWI      +286
   \   000002A8   08008BE2           ADD      R0,R11,#+8
   \   000002AC   030000EA           B        ??get_answer_19
   \                     ??get_answer_20:
   \   000002B0   030051E3           CMP      R1,#+3
   \   000002B4   2010A0B3           MOVLT    R1,#+32
   \   000002B8   0010C0B5           STRBLT   R1,[R0, #+0]
   \   000002BC   010080E2           ADD      R0,R0,#+1
   \                     ??get_answer_19:
   \   000002C0   0010D0E5           LDRB     R1,[R0, #+0]
   \   000002C4   000051E3           CMP      R1,#+0
   \   000002C8   F8FFFF1A           BNE      ??get_answer_20
   \   000002CC   3C219FE5           LDR      R2,??get_answer_2+0x18  ;; `?<Constant "Bad packet">` + 32
   \   000002D0   080088E2           ADD      R0,R8,#+8
   \   000002D4   01002DE9           PUSH     {R0}
   \   000002D8   003098E5           LDR      R3,[R8, #+0]
   \   000002DC   FF10A0E3           MOV      R1,#+255
   \   000002E0   A20F85E2           ADD      R0,R5,#+648
   \   000002E4   1B0100EF           SWI      +283
   \   000002E8   DC0095E5           LDR      R0,[R5, #+220]
   \   000002EC   ........           BL       SendMSGACK
   \   000002F0   D80095E5           LDR      R0,[R5, #+216]
   \   000002F4   0B30A0E1           MOV      R3,R11
   \   000002F8   01002DE9           PUSH     {R0}
   \   000002FC   0020A0E3           MOV      R2,#+0
   \   00000300   0910A0E1           MOV      R1,R9
   \   00000304   0A00A0E1           MOV      R0,R10
   \   00000308   000100EF           SWI      +256
   \   0000030C   ........           BL       SMART_REDRAW
   \   00000310   FC009FE5           LDR      R0,??get_answer_2+0x1C  ;; sndMsg
   \   00000314   ........           BL       Play
   \   00000318   D3FFFFEA           B        ??get_answer_16
   \                     ??get_answer_21:
   \   0000031C   460100EF           SWI      +326
   \   00000320   081088E2           ADD      R1,R8,#+8
   \   00000324   0100A0E3           MOV      R0,#+1
   \   00000328   480100EF           SWI      +328
   \   0000032C   470100EF           SWI      +327
   \   00000330   54FFFFEA           B        ??get_answer_8
   \                     ??get_answer_22:
   \   00000334   0800A0E1           MOV      R0,R8
   \   00000338   ........           BL       FindContactLOGQByAck
   \   0000033C   000050E3           CMP      R0,#+0
   \   00000340   0100000A           BEQ      ??get_answer_23
   \   00000344   CC009FE5           LDR      R0,??get_answer_2+0x20  ;; sndMsgSent
   \   00000348   ........           BL       Play
   \                     ??get_answer_23:
   \   0000034C   0A00A0E3           MOV      R0,#+10
   \   00000350   140000EF           SWI      +20
   \   00000354   00B0A0E1           MOV      R11,R0
   \   00000358   0A20A0E3           MOV      R2,#+10
   \   0000035C   3FFFFFEA           B        ??get_answer_6
   \                     ??get_answer_24:
   \   00000360   0D10A0E1           MOV      R1,SP
   \   00000364   08008DE2           ADD      R0,SP,#+8
   \   00000368   B40000EF           SWI      +180
   \   0000036C   0000DDE5           LDRB     R0,[SP, #+0]
   \   00000370   0120DDE5           LDRB     R2,[SP, #+1]
   \   00000374   E11EA0E3           MOV      R1,#+3600
   \   00000378   3C30A0E3           MOV      R3,#+60
   \   0000037C   930202E0           MUL      R2,R3,R2
   \   00000380   912020E0           MLA      R0,R1,R0,R2
   \   00000384   0210DDE5           LDRB     R1,[SP, #+2]
   \   00000388   E12EA0E3           MOV      R2,#+3600
   \   0000038C   000081E0           ADD      R0,R1,R0
   \   00000390   0810D8E5           LDRB     R1,[R8, #+8]
   \   00000394   920101E0           MUL      R1,R2,R1
   \   00000398   7C209FE5           LDR      R2,??get_answer_2+0x24  ;; `?<Constant "Bad packet">` + 44
   \   0000039C   010040E0           SUB      R0,R0,R1
   \   000003A0   0910D8E5           LDRB     R1,[R8, #+9]
   \   000003A4   930101E0           MUL      R1,R3,R1
   \   000003A8   010040E0           SUB      R0,R0,R1
   \   000003AC   0A10D8E5           LDRB     R1,[R8, #+10]
   \   000003B0   013050E0           SUBS     R3,R0,R1
   \   000003B4   500BA043           MOVMI    R0,#+81920
   \   000003B8   460D8043           ORRMI    R0,R0,#0x1180
   \   000003BC   03308040           ADDMI    R3,R0,R3
   \   000003C0   010083E2           ADD      R0,R3,#+1
   \   000003C4   01002DE9           PUSH     {R0}
   \   000003C8   FF10A0E3           MOV      R1,#+255
   \   000003CC   A20F85E2           ADD      R0,R5,#+648
   \   000003D0   1B0100EF           SWI      +283
   \   000003D4   460100EF           SWI      +326
   \   000003D8   A21F85E2           ADD      R1,R5,#+648
   \   000003DC   0100A0E3           MOV      R0,#+1
   \   000003E0   480100EF           SWI      +328
   \   000003E4   470100EF           SWI      +327
   \   000003E8   25FFFFEA           B        ??get_answer_7
   1538                }
   1539              }
   1540            }
   1541            RXstate=i;
   \                     ??get_answer_9:
   \   000003EC   D09085E5           STR      R9,[R5, #+208]
   1542            //  GBS_StartTimerProc(&tmr_dorecv,3000,dorecv);
   1543            //  SMART_REDRAW();
   1544          }
   \                     ??get_answer_1:
   \   000003F0   41DE8DE2           ADD      SP,SP,#+1040     ;; stack cleaning
   \   000003F4   F08FBDE8           POP      {R4-R11,PC}      ;; return
   \                     ??get_answer_2:
   \   000003F8   25730000           DC8      "%s",+0
   \   000003FC   ........           DC32     RXbuf
   \   00000400   ........           DC32     `?<Constant "Bad packet">`
   \   00000404   ........           DC32     sndStartup
   \   00000408   ........           DC32     `?<Constant "Bad packet">` + 12
   \   0000040C   ........           DC32     `?<Constant "Bad packet">` + 24
   \   00000410   ........           DC32     `?<Constant "Bad packet">` + 32
   \   00000414   ........           DC32     sndMsg
   \   00000418   ........           DC32     sndMsgSent
   \   0000041C   ........           DC32     `?<Constant "Bad packet">` + 44
   1545          

   \                                 In segment CODE, align 4, keep-with-next
   1546          void AddStringToLog(CLIST *t, int code, char *s, const char *name, unsigned int IDforACK)
   1547          {
   \                     AddStringToLog:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   \   00000004   90D04DE2           SUB      SP,SP,#+144
   \   00000008   AC809DE5           LDR      R8,[SP, #+172]
   \   0000000C   0040A0E1           MOV      R4,R0
   \   00000010   0150A0E1           MOV      R5,R1
   \   00000014   0270A0E1           MOV      R7,R2
   \   00000018   0360A0E1           MOV      R6,R3
   1548            char hs[128], *lastX;
   1549            TTime tt;
   1550            TDate d;
   1551            GetDateTime(&d,&tt);
   \   0000001C   0D10A0E1           MOV      R1,SP
   \   00000020   08008DE2           ADD      R0,SP,#+8
   \   00000024   B40000EF           SWI      +180
   1552            int i;
   1553          
   1554            if (code==3 && NOT_LOG_SAME_XTXT)
   \   00000028   030055E3           CMP      R5,#+3
   \   0000002C   1600001A           BNE      ??AddStringToLog_0
   \   00000030   B8019FE5           LDR      R0,??AddStringToLog_1  ;; NOT_LOG_SAME_XTXT
   \   00000034   000090E5           LDR      R0,[R0, #+0]
   \   00000038   000050E3           CMP      R0,#+0
   \   0000003C   1200000A           BEQ      ??AddStringToLog_0
   1555            {
   1556              if(!t->isactive && HISTORY_BUFFER) GetHistory(t, 64<<HISTORY_BUFFER);
   \   00000040   700094E5           LDR      R0,[R4, #+112]
   \   00000044   000050E3           CMP      R0,#+0
   \   00000048   0700001A           BNE      ??AddStringToLog_2
   \   0000004C   ........           LDR      R0,??DataTable40  ;; HISTORY_BUFFER
   \   00000050   000090E5           LDR      R0,[R0, #+0]
   \   00000054   000050E3           CMP      R0,#+0
   \   00000058   0300000A           BEQ      ??AddStringToLog_2
   \   0000005C   4010A0E3           MOV      R1,#+64
   \   00000060   1110A0E1           LSL      R1,R1,R0
   \   00000064   0400A0E1           MOV      R0,R4
   \   00000068   ........           _BLF     GetHistory,??GetHistory??rA
   1557              lastX = GetLastXTextLOGQ(t);
   \                     ??AddStringToLog_2:
   \   0000006C   0400A0E1           MOV      R0,R4
   \   00000070   ........           BL       GetLastXTextLOGQ
   1558              if(lastX)
   \   00000074   000050E3           CMP      R0,#+0
   \   00000078   0300000A           BEQ      ??AddStringToLog_0
   1559                if(strcmp(lastX, s) == 0) return;
   \   0000007C   0710A0E1           MOV      R1,R7
   \   00000080   190000EF           SWI      +25
   \   00000084   000050E3           CMP      R0,#+0
   \   00000088   5600000A           BEQ      ??AddStringToLog_3
   1560            }
   1561          
   1562            snprintf(hs,127,"%02d:%02d %02d-%02d %s:\r\n",tt.hour,tt.min,d.day,d.month,name);
   \                     ??AddStringToLog_0:
   \   0000008C   60919FE5           LDR      R9,??AddStringToLog_1+0x4  ;; `?<Constant "%02d:%02d %02d-%02d %...">`
   \   00000090   0600A0E1           MOV      R0,R6
   \   00000094   01002DE9           PUSH     {R0}
   \   00000098   1000DDE5           LDRB     R0,[SP, #+16]
   \   0000009C   0920A0E1           MOV      R2,R9
   \   000000A0   7F10A0E3           MOV      R1,#+127
   \   000000A4   01002DE9           PUSH     {R0}
   \   000000A8   1500DDE5           LDRB     R0,[SP, #+21]
   \   000000AC   01002DE9           PUSH     {R0}
   \   000000B0   0D00DDE5           LDRB     R0,[SP, #+13]
   \   000000B4   01002DE9           PUSH     {R0}
   \   000000B8   1030DDE5           LDRB     R3,[SP, #+16]
   \   000000BC   20008DE2           ADD      R0,SP,#+32
   \   000000C0   1B0100EF           SWI      +283
   1563            if(code != 3 || LOG_XTXT) //Нужно сохранять иксстатус
   \   000000C4   030055E3           CMP      R5,#+3
   \   000000C8   28019F05           LDREQ    R0,??AddStringToLog_1+0x8  ;; LOG_XTXT
   \   000000CC   10D08DE2           ADD      SP,SP,#+16
   \   000000D0   00009005           LDREQ    R0,[R0, #+0]
   \   000000D4   00005003           CMPEQ    R0,#+0
   \   000000D8   0400000A           BEQ      ??AddStringToLog_4
   1564              Add2History(t, hs, s, code); // Запись хистори
   \   000000DC   0530A0E1           MOV      R3,R5
   \   000000E0   0720A0E1           MOV      R2,R7
   \   000000E4   10108DE2           ADD      R1,SP,#+16
   \   000000E8   0400A0E1           MOV      R0,R4
   \   000000EC   ........           _BLF     Add2History,??Add2History??rA
   1565            LOGQ *p=NewLOGQ(s);
   \                     ??AddStringToLog_4:
   \   000000F0   0700A0E1           MOV      R0,R7
   \   000000F4   ........           BL       NewLOGQ
   \   000000F8   0070A0E1           MOV      R7,R0
   1566            snprintf(p->hdr,79,"%02d:%02d %02d-%02d %s:",tt.hour,tt.min,d.day,d.month,name);
   \   000000FC   40002DE9           PUSH     {R6}
   \   00000100   1000DDE5           LDRB     R0,[SP, #+16]
   \   00000104   1C2089E2           ADD      R2,R9,#+28
   \   00000108   4F10A0E3           MOV      R1,#+79
   \   0000010C   01002DE9           PUSH     {R0}
   \   00000110   1500DDE5           LDRB     R0,[SP, #+21]
   \   00000114   01002DE9           PUSH     {R0}
   \   00000118   0D00DDE5           LDRB     R0,[SP, #+13]
   \   0000011C   01002DE9           PUSH     {R0}
   \   00000120   1030DDE5           LDRB     R3,[SP, #+16]
   \   00000124   100087E2           ADD      R0,R7,#+16
   \   00000128   1B0100EF           SWI      +283
   1567            p->type=code;
   \   0000012C   0C5087E5           STR      R5,[R7, #+12]
   1568            p->ID=IDforACK;  //0-32767
   \   00000130   088087E5           STR      R8,[R7, #+8]
   1569            i=AddLOGQ(&t->log,p);
   \   00000134   0710A0E1           MOV      R1,R7
   \   00000138   640084E2           ADD      R0,R4,#+100
   \   0000013C   ........           BL       AddLOGQ
   \   00000140   0060A0E1           MOV      R6,R0
   \   00000144   10D08DE2           ADD      SP,SP,#+16
   \   00000148   060000EA           B        ??AddStringToLog_5
   1570            while(i>MAXLOGMSG)
   1571            {
   1572              if (t->log==t->last_log) t->last_log=t->last_log->next;
   \                     ??AddStringToLog_6:
   \   0000014C   641094E5           LDR      R1,[R4, #+100]
   1573              RemoveLOGQ(&t->log,t->log);
   1574              i--;
   \   00000150   016046E2           SUB      R6,R6,#+1
   \   00000154   000051E1           CMP      R1,R0
   \   00000158   00009005           LDREQ    R0,[R0, #+0]
   \   0000015C   6C008405           STREQ    R0,[R4, #+108]
   \   00000160   640084E2           ADD      R0,R4,#+100
   \   00000164   ........           BL       RemoveLOGQ
   1575            }
   \                     ??AddStringToLog_5:
   \   00000168   6C0094E5           LDR      R0,[R4, #+108]
   \   0000016C   150056E3           CMP      R6,#+21
   \   00000170   F5FFFFAA           BGE      ??AddStringToLog_6
   1576            t->msg_count=i;
   \   00000174   746084E5           STR      R6,[R4, #+116]
   1577            if (!t->last_log) t->last_log=p;
   1578            if (code==3)
   \   00000178   ........           LDR      R6,??DataTable41  ;; S_ICONS
   \   0000017C   000050E3           CMP      R0,#+0
   \   00000180   6C708405           STREQ    R7,[R4, #+108]
   \   00000184   030055E3           CMP      R5,#+3
   \   00000188   0D00001A           BNE      ??AddStringToLog_7
   1579            {
   1580              if (edchat_id)
   \   0000018C   080196E5           LDR      R0,[R6, #+264]
   \   00000190   000050E3           CMP      R0,#+0
   \   00000194   1100000A           BEQ      ??AddStringToLog_8
   1581              {
   1582                void *data=FindGUIbyId(edchat_id,NULL);
   \   00000198   080196E5           LDR      R0,[R6, #+264]
   \   0000019C   0010A0E3           MOV      R1,#+0
   \   000001A0   090200EF           SWI      +521
   1583                if (data)
   \   000001A4   000050E3           CMP      R0,#+0
   \   000001A8   0C00000A           BEQ      ??AddStringToLog_8
   1584                {
   1585          	EDCHAT_STRUCT *ed_struct;
   1586          	ed_struct=EDIT_GetUserPointer(data);
   \   000001AC   DF0100EF           SWI      +479
   1587          	if (ed_struct)
   \   000001B0   000050E3           CMP      R0,#+0
   \   000001B4   0900000A           BEQ      ??AddStringToLog_8
   1588          	{
   1589          	  if (ed_struct->ed_contact==t)
   \   000001B8   000090E5           LDR      R0,[R0, #+0]
   \   000001BC   040050E1           CMP      R0,R4
   \   000001C0   0600001A           BNE      ??AddStringToLog_8
   1590          	  {
   1591          	    goto L_INC;
   1592          	  }
   1593          	}
   1594                }
   1595              }
   1596              goto L_NOINC;
   1597            }
   1598          L_INC:
   1599            if (!t->isunread) total_unread++;
   \                     ??AddStringToLog_7:
   \   000001C4   580094E5           LDR      R0,[R4, #+88]
   \   000001C8   000050E3           CMP      R0,#+0
   \   000001CC   F8009605           LDREQ    R0,[R6, #+248]
   \   000001D0   01008002           ADDEQ    R0,R0,#+1
   \   000001D4   F8008605           STREQ    R0,[R6, #+248]
   1600            t->isunread=1;
   \   000001D8   0100A0E3           MOV      R0,#+1
   \   000001DC   580084E5           STR      R0,[R4, #+88]
   1601          L_NOINC:
   1602            ChangeContactPos(t);
   \                     ??AddStringToLog_8:
   \   000001E0   0400A0E1           MOV      R0,R4
   \   000001E4   ........           _BLF     ChangeContactPos,??ChangeContactPos??rA
   1603          }
   \                     ??AddStringToLog_3:
   \   000001E8   90D08DE2           ADD      SP,SP,#+144      ;; stack cleaning
   \   000001EC   F083BDE8           POP      {R4-R9,PC}       ;; return
   \                     ??AddStringToLog_1:
   \   000001F0   ........           DC32     NOT_LOG_SAME_XTXT
   \   000001F4   ........           DC32     `?<Constant "%02d:%02d %02d-%02d %...">`
   \   000001F8   ........           DC32     LOG_XTXT
   1604          
   1605          void ParseAnswer(WSHDR *ws, const char *s);
   1606          
   1607          int time_to_stop_t9;
   1608          

   \                                 In segment CODE, align 4, keep-with-next
   1609          void ParseXStatusText(WSHDR *ws, const char *s, int color)
   1610          {
   \                     ParseXStatusText:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0260A0E1           MOV      R6,R2
   1611            int c;
   1612            int flag=0;
   \   00000010   0070A0E3           MOV      R7,#+0
   1613            CutWSTR(ws,0);
   \   00000014   0010A0E3           MOV      R1,#+0
   \   00000018   260100EF           SWI      +294
   1614            if (strlen(s)==1) return;
   \   0000001C   0500A0E1           MOV      R0,R5
   \   00000020   1B0000EF           SWI      +27
   \   00000024   010050E3           CMP      R0,#+1
   \   00000028   F080BD08           POPEQ    {R4-R7,PC}
   1615            wsAppendChar(ws,0xE008);
   \   0000002C   0810A0E3           MOV      R1,#+8
   \   00000030   E01C81E3           ORR      R1,R1,#0xE000
   \   00000034   0400A0E1           MOV      R0,R4
   \   00000038   1C0000EF           SWI      +28
   1616            wsAppendChar(ws,color);
   \   0000003C   0610A0E1           MOV      R1,R6
   \   00000040   0400A0E1           MOV      R0,R4
   \   00000044   1C0000EF           SWI      +28
   1617            wsAppendChar(ws,0xE013);
   \   00000048   1310A0E3           MOV      R1,#+19
   \   0000004C   E01C81E3           ORR      R1,R1,#0xE000
   \   00000050   0A0000EA           B        ??ParseXStatusText_0
   1618            while((c=*s++))
   1619            {
   1620              if (c==13)
   \                     ??ParseXStatusText_1:
   \   00000054   0D0050E3           CMP      R0,#+13
   1621              {
   1622                if (!flag)
   \   00000058   00005703           CMPEQ    R7,#+0
   \   0000005C   0500001A           BNE      ??ParseXStatusText_2
   1623                {
   1624                  flag=1;
   \   00000060   0170A0E3           MOV      R7,#+1
   1625                  wsAppendChar(ws,0xE012);
   \   00000064   1210A0E3           MOV      R1,#+18
   \   00000068   E01C81E3           ORR      R1,R1,#0xE000
   \   0000006C   0400A0E1           MOV      R0,R4
   \   00000070   1C0000EF           SWI      +28
   1626                  c=' ';
   \   00000074   2000A0E3           MOV      R0,#+32
   1627                }
   1628              }
   1629              wsAppendChar(ws,char8to16(c));
   \                     ??ParseXStatusText_2:
   \   00000078   ........           _BLF     char8to16,??char8to16??rA
   \   0000007C   0010A0E1           MOV      R1,R0
   \                     ??ParseXStatusText_0:
   \   00000080   0400A0E1           MOV      R0,R4
   \   00000084   1C0000EF           SWI      +28
   1630            }
   \   00000088   ........           LDRB     R0,[R5], #+1
   \   0000008C   000050E3           CMP      R0,#+0
   \   00000090   EFFFFF1A           BNE      ??ParseXStatusText_1
   \   00000094   F080BDE8           POP      {R4-R7,PC}       ;; return
   1631          }
   1632          //Добавление итемов в чат при получении нового сообщения

   \                                 In segment CODE, align 4, keep-with-next
   1633          void AddMsgToChat(void *data)
   1634          {
   \                     AddMsgToChat:
   \   00000000   F14F2DE9           PUSH     {R0,R4-R11,LR}
   \   00000004   40D04DE2           SUB      SP,SP,#+64
   1635            LOGQ *p;
   1636            EDITCONTROL ec;
   1637            EDITC_OPTIONS ec_options;
   1638            EDCHAT_STRUCT *ed_struct;
   1639            int j;
   1640            int color, font, type;
   1641            int zc;
   1642            if (!data) return;
   \   00000008   000050E3           CMP      R0,#+0
   \   0000000C   C100000A           BEQ      ??AddMsgToChat_0
   1643            ed_struct=EDIT_GetUserPointer(data);
   \   00000010   DF0100EF           SWI      +479
   \   00000014   0060B0E1           MOVS     R6,R0
   1644            if (!ed_struct) return;
   1645            if (!ed_struct->ed_contact->isunread) return;
   \   00000018   00009615           LDRNE    R0,[R6, #+0]
   \   0000001C   58109015           LDRNE    R1,[R0, #+88]
   \   00000020   00005113           CMPNE    R1,#+0
   \   00000024   BB00000A           BEQ      ??AddMsgToChat_0
   1646          
   1647          
   1648            p=ed_struct->ed_contact->last_log;
   \   00000028   6C7090E5           LDR      R7,[R0, #+108]
   1649            if (p)
   \   0000002C   ........           LDR      R8,??DataTable77  ;; S_ICONS
   \   00000030   000057E3           CMP      R7,#+0
   \   00000034   A800000A           BEQ      ??AddMsgToChat_1
   1650            {
   1651              while(p)
   1652              {
   1653                font = ED_H_FONT_SIZE;
   1654                if ((zc=p->acked&3))
   \                     ??AddMsgToChat_2:
   \   00000038   ........           LDR      R2,??DataTable43  ;; ED_X_FONT_SIZE
   \   0000003C   ........           LDR      R0,??DataTable64  ;; ED_H_FONT_SIZE
   \   00000040   002092E5           LDR      R2,[R2, #+0]
   \   00000044   ........           LDR      R1,??DataTable45  ;; X_COLOR
   \   00000048   00A090E5           LDR      R10,[R0, #+0]
   \   0000004C   040097E5           LDR      R0,[R7, #+4]
   \   00000050   00208DE5           STR      R2,[SP, #+0]
   \   00000054   004091E5           LDR      R4,[R1, #+0]
   \   00000058   ........           LDR      R1,??DataTable46  ;; O_ED_X_FONT_SIZE
   \   0000005C   030010E2           ANDS     R0,R0,#0x3
   \   00000060   009091E5           LDR      R9,[R1, #+0]
   \   00000064   ........           LDR      R1,??DataTable47  ;; O_X_COLOR
   \   00000068   005091E5           LDR      R5,[R1, #+0]
   \   0000006C   ........           LDR      R1,??DataTable62  ;; I_COLOR
   \   00000070   00B091E5           LDR      R11,[R1, #+0]
   \   00000074   0300000A           BEQ      ??AddMsgToChat_3
   1655                {
   1656          	if (zc==1)
   \   00000078   010050E3           CMP      R0,#+1
   \   0000007C   1E00001A           BNE      ??AddMsgToChat_4
   1657          	  color=ACK_COLOR; //Зеленый
   \   00000080   ........           LDR      R0,??DataTable58  ;; ACK_COLOR
   \   00000084   1B0000EA           B        ??AddMsgToChat_5
   1658          	else
   1659          	  color=I_COLOR;
   1660                }
   1661                else
   1662                {
   1663          	if (p->ID==0xFFFFFFFF)
   \                     ??AddMsgToChat_3:
   \   00000088   080097E5           LDR      R0,[R7, #+8]
   \   0000008C   010070E3           CMN      R0,#+1
   \   00000090   1700001A           BNE      ??AddMsgToChat_6
   1664                  {
   1665                    type = p->type&0x0F;
   \   00000094   0C0097E5           LDR      R0,[R7, #+12]
   \   00000098   0F1000E2           AND      R1,R0,#0xF
   1666                    if(p->type&0x10)
   \   0000009C   100010E3           TST      R0,#0x10
   \   000000A0   0B00000A           BEQ      ??AddMsgToChat_7
   1667                    {
   1668                      color = (type==1)?O_I_COLOR:((type==3)?O_X_COLOR:O_TO_COLOR);
   \   000000A4   010051E3           CMP      R1,#+1
   \   000000A8   ........           LDREQ    R0,??DataTable60  ;; O_I_COLOR
   \   000000AC   0400000A           BEQ      ??AddMsgToChat_8
   \   000000B0   030051E3           CMP      R1,#+3
   \   000000B4   05B0A001           MOVEQ    R11,R5
   \   000000B8   09A0A001           MOVEQ    R10,R9
   \   000000BC   0E00000A           BEQ      ??AddMsgToChat_4
   \   000000C0   ........           LDR      R0,??DataTable59  ;; O_TO_COLOR
   \                     ??AddMsgToChat_8:
   \   000000C4   00B090E5           LDR      R11,[R0, #+0]
   \   000000C8   ........           LDR      R0,??DataTable65  ;; O_ED_H_FONT_SIZE
   \   000000CC   00A090E5           LDR      R10,[R0, #+0]
   \   000000D0   090000EA           B        ??AddMsgToChat_4
   1669                      font = (type==3)?O_ED_X_FONT_SIZE:O_ED_H_FONT_SIZE;
   1670                    }
   1671                    else
   1672                    {
   1673                      color = (type==1)?I_COLOR:((type==3)?X_COLOR:TO_COLOR);
   \                     ??AddMsgToChat_7:
   \   000000D4   010051E3           CMP      R1,#+1
   \   000000D8   0700000A           BEQ      ??AddMsgToChat_4
   \   000000DC   030051E3           CMP      R1,#+3
   \   000000E0   04B0A001           MOVEQ    R11,R4
   \   000000E4   02A0A001           MOVEQ    R10,R2
   \   000000E8   0300000A           BEQ      ??AddMsgToChat_4
   \   000000EC   ........           LDR      R0,??DataTable61  ;; TO_COLOR
   \   000000F0   000000EA           B        ??AddMsgToChat_5
   1674                      font = (type==3)?ED_X_FONT_SIZE:ED_H_FONT_SIZE;
   1675                    }
   1676                  }
   1677                  else
   1678          	  color=UNACK_COLOR; //Серый
   \                     ??AddMsgToChat_6:
   \   000000F4   ........           LDR      R0,??DataTable63  ;; UNACK_COLOR
   \                     ??AddMsgToChat_5:
   \   000000F8   00B090E5           LDR      R11,[R0, #+0]
   1679                }
   1680                PrepareEditControl(&ec);
   \                     ??AddMsgToChat_4:
   \   000000FC   14008DE2           ADD      R0,SP,#+20
   \   00000100   640100EF           SWI      +356
   1681                if ((p->type&0x0F)!=3)
   \   00000104   0C0097E5           LDR      R0,[R7, #+12]
   \   00000108   0F0000E2           AND      R0,R0,#0xF
   \   0000010C   030050E3           CMP      R0,#+3
   \   00000110   0800000A           BEQ      ??AddMsgToChat_9
   1682                {
   1683                  ascii2ws(ews,p->hdr);
   \   00000114   9C0098E5           LDR      R0,[R8, #+156]
   \   00000118   101087E2           ADD      R1,R7,#+16
   \   0000011C   ........           _BLF     ascii2ws,??ascii2ws??rA
   1684                  ConstructEditControl(&ec,ECT_HEADER,ECF_APPEND_EOL,ews,ews->wsbody[0]);
   \   00000120   9C3098E5           LDR      R3,[R8, #+156]
   \   00000124   4020A0E3           MOV      R2,#+64
   \   00000128   000093E5           LDR      R0,[R3, #+0]
   \   0000012C   B000D0E1           LDRH     R0,[R0, #+0]
   \   00000130   01002DE9           PUSH     {R0}
   \   00000134   030000EA           B        ??AddMsgToChat_10
   1685                }
   1686                else
   1687                  ConstructEditControl(&ec,ECT_HEADER,ECF_DELSTR,ews,0);
   \                     ??AddMsgToChat_9:
   \   00000138   0000A0E3           MOV      R0,#+0
   \   0000013C   01002DE9           PUSH     {R0}
   \   00000140   9C3098E5           LDR      R3,[R8, #+156]
   \   00000144   2020A0E3           MOV      R2,#+32
   \                     ??AddMsgToChat_10:
   \   00000148   0110A0E3           MOV      R1,#+1
   \   0000014C   18008DE2           ADD      R0,SP,#+24
   \   00000150   650100EF           SWI      +357
   \   00000154   04D08DE2           ADD      SP,SP,#+4
   1688                PrepareEditCOptions(&ec_options);
   \   00000158   04008DE2           ADD      R0,SP,#+4
   \   0000015C   C80100EF           SWI      +456
   1689                SetPenColorToEditCOptions(&ec_options,color);
   \   00000160   0B10A0E1           MOV      R1,R11
   \   00000164   04008DE2           ADD      R0,SP,#+4
   \   00000168   CC0100EF           SWI      +460
   1690                SetFontToEditCOptions(&ec_options,font);
   \   0000016C   0A10A0E1           MOV      R1,R10
   \   00000170   04008DE2           ADD      R0,SP,#+4
   \   00000174   CA0100EF           SWI      +458
   1691                CopyOptionsToEditControl(&ec,&ec_options);
   \   00000178   04108DE2           ADD      R1,SP,#+4
   \   0000017C   14008DE2           ADD      R0,SP,#+20
   \   00000180   CE0100EF           SWI      +462
   1692                //AddEditControlToEditQend(eq,&ec,ma);
   1693                EDIT_InsertEditControl(data,ed_struct->ed_answer-1,&ec);
   \   00000184   080096E5           LDR      R0,[R6, #+8]
   \   00000188   14208DE2           ADD      R2,SP,#+20
   \   0000018C   011040E2           SUB      R1,R0,#+1
   \   00000190   40009DE5           LDR      R0,[SP, #+64]
   \   00000194   D20100EF           SWI      +466
   1694                ed_struct->ed_answer++;
   \   00000198   080096E5           LDR      R0,[R6, #+8]
   \   0000019C   010080E2           ADD      R0,R0,#+1
   \   000001A0   080086E5           STR      R0,[R6, #+8]
   1695                if ((p->type&0x0F)!=3)
   \   000001A4   0C0097E5           LDR      R0,[R7, #+12]
   \   000001A8   0F1000E2           AND      R1,R0,#0xF
   \   000001AC   030051E3           CMP      R1,#+3
   \   000001B0   0300000A           BEQ      ??AddMsgToChat_11
   1696                {
   1697                  ParseAnswer(ews,p->text);
   \   000001B4   9C0098E5           LDR      R0,[R8, #+156]
   \   000001B8   601087E2           ADD      R1,R7,#+96
   \   000001BC   ........           BL       ParseAnswer
   \   000001C0   050000EA           B        ??AddMsgToChat_12
   1698                }
   1699                else
   1700                {
   1701                  ParseXStatusText(ews, p->text, (p->type&0x10)?O_X_COLOR:X_COLOR);
   \                     ??AddMsgToChat_11:
   \   000001C4   100010E3           TST      R0,#0x10
   \   000001C8   9C0098E5           LDR      R0,[R8, #+156]
   \   000001CC   0520A011           MOVNE    R2,R5
   \   000001D0   0420A001           MOVEQ    R2,R4
   \   000001D4   601087E2           ADD      R1,R7,#+96
   \   000001D8   ........           BL       ParseXStatusText
   1702                }
   1703                PrepareEditControl(&ec);
   \                     ??AddMsgToChat_12:
   \   000001DC   14008DE2           ADD      R0,SP,#+20
   \   000001E0   640100EF           SWI      +356
   1704                ConstructEditControl(&ec,
   1705                                     ECT_NORMAL_TEXT,
   1706                                     ews->wsbody[0] ? ECF_APPEND_EOL|ECF_DISABLE_T9 : ECF_DELSTR,
   1707                                     ews,ews->wsbody[0]);
   \   000001E4   9C3098E5           LDR      R3,[R8, #+156]
   \   000001E8   000093E5           LDR      R0,[R3, #+0]
   \   000001EC   B010D0E1           LDRH     R1,[R0, #+0]
   \   000001F0   000051E3           CMP      R1,#+0
   \   000001F4   0100A0E1           MOV      R0,R1
   \   000001F8   01002DE9           PUSH     {R0}
   \   000001FC   812DA013           MOVNE    R2,#+8256
   \   00000200   2020A003           MOVEQ    R2,#+32
   \   00000204   0310A0E3           MOV      R1,#+3
   \   00000208   18008DE2           ADD      R0,SP,#+24
   \   0000020C   650100EF           SWI      +357
   1708                PrepareEditCOptions(&ec_options);
   \   00000210   08008DE2           ADD      R0,SP,#+8
   \   00000214   C80100EF           SWI      +456
   1709          //#ifdef M75
   1710                if ((p->type&0x0F)!=3)
   \   00000218   0C0097E5           LDR      R0,[R7, #+12]
   \   0000021C   04D08DE2           ADD      SP,SP,#+4
   \   00000220   0F1000E2           AND      R1,R0,#0xF
   \   00000224   030051E3           CMP      R1,#+3
   \   00000228   0400000A           BEQ      ??AddMsgToChat_13
   1711                {
   1712                  SetFontToEditCOptions(&ec_options,(p->type&0x10)?O_ED_FONT_SIZE:ED_FONT_SIZE);
   \   0000022C   100010E3           TST      R0,#0x10
   \   00000230   ........           LDRNE    R0,??DataTable55  ;; O_ED_FONT_SIZE
   \   00000234   ........           LDREQ    R0,??DataTable56  ;; ED_FONT_SIZE
   \   00000238   001090E5           LDR      R1,[R0, #+0]
   \   0000023C   080000EA           B        ??AddMsgToChat_14
   1713                }
   1714                else
   1715                {
   1716                  SetPenColorToEditCOptions(&ec_options,(p->type&0x10)?O_X_COLOR:X_COLOR);
   \                     ??AddMsgToChat_13:
   \   00000240   100010E3           TST      R0,#0x10
   \   00000244   0510A011           MOVNE    R1,R5
   \   00000248   0410A001           MOVEQ    R1,R4
   \   0000024C   04008DE2           ADD      R0,SP,#+4
   \   00000250   CC0100EF           SWI      +460
   1717                  SetFontToEditCOptions(&ec_options,(p->type&0x10)?O_ED_X_FONT_SIZE:ED_X_FONT_SIZE);
   \   00000254   0C0097E5           LDR      R0,[R7, #+12]
   \   00000258   100010E3           TST      R0,#0x10
   \   0000025C   00109D05           LDREQ    R1,[SP, #+0]
   \   00000260   0910A011           MOVNE    R1,R9
   \                     ??AddMsgToChat_14:
   \   00000264   04008DE2           ADD      R0,SP,#+4
   \   00000268   CA0100EF           SWI      +458
   1718                }
   1719          //#else
   1720          //      SetFontToEditCOptions(&ec_options,(p->type&0x10)?O_ED_FONT_SIZE:ED_FONT_SIZE);
   1721          //#endif
   1722                CopyOptionsToEditControl(&ec,&ec_options);
   \   0000026C   04108DE2           ADD      R1,SP,#+4
   \   00000270   14008DE2           ADD      R0,SP,#+20
   \   00000274   CE0100EF           SWI      +462
   1723                EDIT_InsertEditControl(data,ed_struct->ed_answer-1,&ec);
   \   00000278   080096E5           LDR      R0,[R6, #+8]
   \   0000027C   14208DE2           ADD      R2,SP,#+20
   \   00000280   011040E2           SUB      R1,R0,#+1
   \   00000284   40009DE5           LDR      R0,[SP, #+64]
   \   00000288   D20100EF           SWI      +466
   1724                ed_struct->ed_answer++;
   \   0000028C   080096E5           LDR      R0,[R6, #+8]
   \   00000290   010080E2           ADD      R0,R0,#+1
   \   00000294   080086E5           STR      R0,[R6, #+8]
   1725                p=p->next;
   \   00000298   007097E5           LDR      R7,[R7, #+0]
   1726              }
   \   0000029C   000057E3           CMP      R7,#+0
   \   000002A0   64FFFF1A           BNE      ??AddMsgToChat_2
   1727              j=((ed_struct->ed_contact->msg_count+1)*2); //Ожидаемый ed_answer
   \   000002A4   000096E5           LDR      R0,[R6, #+0]
   \   000002A8   740090E5           LDR      R0,[R0, #+116]
   \   000002AC   010080E2           ADD      R0,R0,#+1
   \   000002B0   8040A0E1           LSL      R4,R0,#+1
   \   000002B4   050000EA           B        ??AddMsgToChat_15
   1728              while(j<ed_struct->ed_answer)
   1729              {
   1730                EDIT_RemoveEditControl(ed_struct->ed_chatgui,1);
   \                     ??AddMsgToChat_16:
   \   000002B8   040096E5           LDR      R0,[R6, #+4]
   \   000002BC   0110A0E3           MOV      R1,#+1
   \   000002C0   D10100EF           SWI      +465
   1731                ed_struct->ed_answer--;
   \   000002C4   080096E5           LDR      R0,[R6, #+8]
   \   000002C8   010040E2           SUB      R0,R0,#+1
   \   000002CC   080086E5           STR      R0,[R6, #+8]
   1732              }
   \                     ??AddMsgToChat_15:
   \   000002D0   080096E5           LDR      R0,[R6, #+8]
   \   000002D4   000054E1           CMP      R4,R0
   \   000002D8   F6FFFFBA           BLT      ??AddMsgToChat_16
   1733            }
   1734            ed_struct->ed_contact->last_log=NULL;
   \                     ??AddMsgToChat_1:
   \   000002DC   000096E5           LDR      R0,[R6, #+0]
   \   000002E0   0040A0E3           MOV      R4,#+0
   \   000002E4   6C4080E5           STR      R4,[R0, #+108]
   1735            if (IsGuiOnTop(edchat_id))
   \   000002E8   080198E5           LDR      R0,[R8, #+264]
   \   000002EC   350100EF           SWI      +309
   \   000002F0   000050E3           CMP      R0,#+0
   1736              total_unread--;
   \   000002F4   F8009815           LDRNE    R0,[R8, #+248]
   \   000002F8   01004012           SUBNE    R0,R0,#+1
   1737            else
   1738              ed_struct->requested_decrement_total_unread++;
   \   000002FC   0C009605           LDREQ    R0,[R6, #+12]
   \   00000300   F8008815           STRNE    R0,[R8, #+248]
   \   00000304   01008002           ADDEQ    R0,R0,#+1
   \   00000308   0C008605           STREQ    R0,[R6, #+12]
   1739            ed_struct->ed_contact->isunread=0;
   \   0000030C   000096E5           LDR      R0,[R6, #+0]
   \   00000310   584080E5           STR      R4,[R0, #+88]
   1740            ChangeContactPos(ed_struct->ed_contact);
   \   00000314   ........           _BLF     ChangeContactPos,??ChangeContactPos??rA
   1741            //  EDIT_SetFocus(data,ed_struct->ed_answer);
   1742          }
   \                     ??AddMsgToChat_0:
   \   00000318   44D08DE2           ADD      SP,SP,#+68       ;; stack cleaning
   \   0000031C   F08FBDE8           POP      {R4-R11,PC}      ;; return
   1743          
   1744          //Рисуем подтверждения непосредственно

   \                                 In segment CODE, align 4, keep-with-next
   1745          void DrawAck(void *data)
   1746          {
   \                     DrawAck:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   3CD04DE2           SUB      SP,SP,#+60
   \   00000008   0040B0E1           MOVS     R4,R0
   1747            LOGQ *p;
   1748            EDITCONTROL ec;
   1749            EDITC_OPTIONS ec_options;
   1750            EDCHAT_STRUCT *ed_struct;
   1751            int j;
   1752            int color;
   1753            int dorefresh=0;
   \   0000000C   0070A0E3           MOV      R7,#+0
   1754            if (!data) return;
   \   00000010   4C00000A           BEQ      ??DrawAck_0
   1755            ed_struct=EDIT_GetUserPointer(data);
   \   00000014   DF0100EF           SWI      +479
   1756            if (!ed_struct) return;
   \   00000018   000050E3           CMP      R0,#+0
   \   0000001C   4900000A           BEQ      ??DrawAck_0
   1757            p=ed_struct->ed_contact->log;
   \   00000020   001090E5           LDR      R1,[R0, #+0]
   1758            j=ed_struct->ed_answer;
   1759            j-=(ed_struct->ed_contact->msg_count*2)+1; //Номер собственно хедера верхнего итема
   \   00000024   080090E5           LDR      R0,[R0, #+8]
   \   00000028   645091E5           LDR      R5,[R1, #+100]
   \   0000002C   741091E5           LDR      R1,[R1, #+116]
   \   00000030   810040E0           SUB      R0,R0,R1, LSL #+1
   \   00000034   016040E2           SUB      R6,R0,#+1
   \   00000038   0F0000EA           B        ??DrawAck_1
   1760            while(p)
   1761            {
   1762              if (j>=1) //Пока возможно лишнее
   1763              {
   1764                if (!(p->acked&4))
   1765                {
   1766          	ExtractEditControl(data,j,&ec);
   1767          	PrepareEditCOptions(&ec_options);
   1768          	if (p->acked)
   1769          	{
   1770          	  if (p->acked==1)
   1771          	    color=ACK_COLOR; //Зеленый
   1772          	  else
   1773          	    color=I_COLOR;
   1774          	}
   1775          	else
   1776          	{
   1777          	  if (p->ID==0xFFFFFFFF)
   1778          	    color=(p->type&0x10)?(((p->type&0x0F)==1)?O_I_COLOR:O_TO_COLOR):(((p->type&0x0F)==1)?I_COLOR:TO_COLOR);
   1779          	  else
   1780          	    color=UNACK_COLOR; //Серый
   1781          	}
   1782          	SetPenColorToEditCOptions(&ec_options,color/*p->type==1?I_COLOR:TO_COLOR*/);
   1783          	SetFontToEditCOptions(&ec_options,(p->type&0x10)?O_ED_H_FONT_SIZE:ED_H_FONT_SIZE);
   \                     ??DrawAck_2:
   \   0000003C   001090E5           LDR      R1,[R0, #+0]
   \   00000040   0D00A0E1           MOV      R0,SP
   \   00000044   CA0100EF           SWI      +458
   1784          	CopyOptionsToEditControl(&ec,&ec_options);
   \   00000048   0D10A0E1           MOV      R1,SP
   \   0000004C   10008DE2           ADD      R0,SP,#+16
   \   00000050   CE0100EF           SWI      +462
   1785          	StoreEditControl(data,j,&ec);
   \   00000054   10208DE2           ADD      R2,SP,#+16
   \   00000058   0610A0E1           MOV      R1,R6
   \   0000005C   0400A0E1           MOV      R0,R4
   \   00000060   6A0100EF           SWI      +362
   1786          	p->acked|=4; //Обработали
   \   00000064   040095E5           LDR      R0,[R5, #+4]
   1787          	dorefresh=1;
   \   00000068   0170A0E3           MOV      R7,#+1
   \   0000006C   040080E3           ORR      R0,R0,#0x4
   \   00000070   040085E5           STR      R0,[R5, #+4]
   1788                }
   1789              }
   1790              j+=2;
   1791              p=p->next;
   \                     ??DrawAck_3:
   \   00000074   005095E5           LDR      R5,[R5, #+0]
   \   00000078   026086E2           ADD      R6,R6,#+2
   \                     ??DrawAck_1:
   \   0000007C   000055E3           CMP      R5,#+0
   \   00000080   2900000A           BEQ      ??DrawAck_4
   \   00000084   010056E3           CMP      R6,#+1
   \   00000088   F9FFFFBA           BLT      ??DrawAck_3
   \   0000008C   040095E5           LDR      R0,[R5, #+4]
   \   00000090   040010E3           TST      R0,#0x4
   \   00000094   F6FFFF1A           BNE      ??DrawAck_3
   \   00000098   10208DE2           ADD      R2,SP,#+16
   \   0000009C   0610A0E1           MOV      R1,R6
   \   000000A0   0400A0E1           MOV      R0,R4
   \   000000A4   690100EF           SWI      +361
   \   000000A8   0D00A0E1           MOV      R0,SP
   \   000000AC   C80100EF           SWI      +456
   \   000000B0   040095E5           LDR      R0,[R5, #+4]
   \   000000B4   000050E3           CMP      R0,#+0
   \   000000B8   0300000A           BEQ      ??DrawAck_5
   \   000000BC   010050E3           CMP      R0,#+1
   \   000000C0   ........           LDRNE    R0,??DataTable62  ;; I_COLOR
   \   000000C4   ........           LDREQ    R0,??DataTable58  ;; ACK_COLOR
   \   000000C8   0F0000EA           B        ??DrawAck_6
   \                     ??DrawAck_5:
   \   000000CC   080095E5           LDR      R0,[R5, #+8]
   \   000000D0   010070E3           CMN      R0,#+1
   \   000000D4   0B00001A           BNE      ??DrawAck_7
   \   000000D8   0C0095E5           LDR      R0,[R5, #+12]
   \   000000DC   100010E3           TST      R0,#0x10
   \   000000E0   0F0000E2           AND      R0,R0,#0xF
   \   000000E4   0300000A           BEQ      ??DrawAck_8
   \   000000E8   010050E3           CMP      R0,#+1
   \   000000EC   ........           LDRNE    R0,??DataTable59  ;; O_TO_COLOR
   \   000000F0   ........           LDREQ    R0,??DataTable60  ;; O_I_COLOR
   \   000000F4   040000EA           B        ??DrawAck_6
   \                     ??DrawAck_8:
   \   000000F8   010050E3           CMP      R0,#+1
   \   000000FC   ........           LDRNE    R0,??DataTable61  ;; TO_COLOR
   \   00000100   ........           LDREQ    R0,??DataTable62  ;; I_COLOR
   \   00000104   000000EA           B        ??DrawAck_6
   \                     ??DrawAck_7:
   \   00000108   ........           LDR      R0,??DataTable63  ;; UNACK_COLOR
   \                     ??DrawAck_6:
   \   0000010C   001090E5           LDR      R1,[R0, #+0]
   \   00000110   0D00A0E1           MOV      R0,SP
   \   00000114   CC0100EF           SWI      +460
   \   00000118   0C0095E5           LDR      R0,[R5, #+12]
   \   0000011C   100010E3           TST      R0,#0x10
   \   00000120   ........           LDREQ    R0,??DataTable64  ;; ED_H_FONT_SIZE
   \   00000124   ........           LDRNE    R0,??DataTable65  ;; O_ED_H_FONT_SIZE
   \   00000128   C3FFFFEA           B        ??DrawAck_2
   1792            }
   1793            if (IsGuiOnTop(edchat_id)&&dorefresh) RefreshGUI();
   \                     ??DrawAck_4:
   \   0000012C   1C009FE5           LDR      R0,??DrawAck_9   ;; S_ICONS + 264
   \   00000130   000090E5           LDR      R0,[R0, #+0]
   \   00000134   350100EF           SWI      +309
   \   00000138   000050E3           CMP      R0,#+0
   \   0000013C   00005713           CMPNE    R7,#+0
   \   00000140   0000000A           BEQ      ??DrawAck_0
   \   00000144   960100EF           SWI      +406
   \                     ??DrawAck_0:
   \   00000148   3CD08DE2           ADD      SP,SP,#+60       ;; stack cleaning
   \   0000014C   F080BDE8           POP      {R4-R7,PC}       ;; return
   \                     ??DrawAck_9:
   \   00000150   ........           DC32     S_ICONS + 264
   1794          }
   1795          

   \                                 In segment CODE, align 4, keep-with-next
   1796          void ask_my_info(void)
   1797          {
   1798            /*  TPKT *p;
   1799            CLIST *t;
   1800            p=malloc(sizeof(PKT));
   1801            p->pkt.uin=UIN;
   1802            p->pkt.type=T_REQINFOSHORT;
   1803            p->pkt.data_len=0;
   1804            //  AddStringToLog(t,0x01,"Request info...",I_str);
   1805            SUBPROC((void *)SendAnswer,0,p);*/
   1806          }
   \                     ask_my_info:
   \   00000000   1EFF2FE1           BX       LR               ;; return
   1807          

   \                                 In segment CODE, align 4, keep-with-next
   1808          void set_my_status(void)
   1809          {
   \                     set_my_status:
   \   00000000   00402DE9           PUSH     {LR}
   1810            TPKT *p;
   1811            p=malloc(sizeof(PKT)+1);
   \   00000004   0900A0E3           MOV      R0,#+9
   \   00000008   140000EF           SWI      +20
   1812            p->pkt.uin=0;               // Никому; поле нужно проигнорировать на сервере
   \   0000000C   0010A0E3           MOV      R1,#+0
   \   00000010   001080E5           STR      R1,[R0, #+0]
   1813            p->pkt.type=T_MY_STATUS_CH; // Тип пакета: изменение статуса
   \   00000014   0F10A0E3           MOV      R1,#+15
   \   00000018   B410C0E1           STRH     R1,[R0, #+4]
   1814            p->pkt.data_len=1;          // Длина пакета: 1 байт
   \   0000001C   0110A0E3           MOV      R1,#+1
   \   00000020   B610C0E1           STRH     R1,[R0, #+6]
   1815            p->data[0]=CurrentStatus;
   \   00000024   18109FE5           LDR      R1,??set_my_status_0  ;; S_ICONS + 184
   1816            SUBPROC((void *)SendAnswer,0,p);
   \   00000028   0020A0E1           MOV      R2,R0
   \   0000002C   001091E5           LDR      R1,[R1, #+0]
   \   00000030   0810C0E5           STRB     R1,[R0, #+8]
   \   00000034   ........           LDR      R0,??DataTable68  ;; SendAnswer
   \   00000038   0010A0E3           MOV      R1,#+0
   \   0000003C   710100EF           SWI      +369
   1817          }
   \   00000040   0080BDE8           POP      {PC}             ;; return
   \                     ??set_my_status_0:
   \   00000044   ........           DC32     S_ICONS + 184
   1818          

   \                                 In segment CODE, align 4, keep-with-next
   1819          void set_my_xstatus(void)
   1820          {
   \                     set_my_xstatus:
   \   00000000   F7412DE9           PUSH     {R0-R2,R4-R8,LR}
   1821            TPKT *p;
   1822            char *s1;
   1823            char *s2;
   1824            int l1;
   1825            int l2;
   1826            p=malloc(sizeof(PKT)+1);
   1827            p->pkt.uin=0;               // Никому; поле нужно проигнорировать на сервере
   1828            p->pkt.type=T_MY_XSTATUS_CH; // Тип пакета: изменение статуса
   1829            p->pkt.data_len=1;          // Длина пакета: 1 байт
   1830            p->data[0]=CurrentXStatus;
   \   00000004   ........           LDR      R6,??DataTable77  ;; S_ICONS
   1831            SUBPROC((void *)SendAnswer,0,p);
   \   00000008   ........           LDR      R7,??DataTable68  ;; SendAnswer
   \   0000000C   0900A0E3           MOV      R0,#+9
   \   00000010   140000EF           SWI      +20
   \   00000014   0040A0E1           MOV      R4,R0
   \   00000018   0050A0E3           MOV      R5,#+0
   \   0000001C   005084E5           STR      R5,[R4, #+0]
   \   00000020   1600A0E3           MOV      R0,#+22
   \   00000024   B400C4E1           STRH     R0,[R4, #+4]
   \   00000028   0100A0E3           MOV      R0,#+1
   \   0000002C   B600C4E1           STRH     R0,[R4, #+6]
   \   00000030   BC0096E5           LDR      R0,[R6, #+188]
   \   00000034   0420A0E1           MOV      R2,R4
   \   00000038   0800C4E5           STRB     R0,[R4, #+8]
   \   0000003C   0010A0E3           MOV      R1,#+0
   \   00000040   0700A0E1           MOV      R0,R7
   \   00000044   710100EF           SWI      +369
   1832            s1=GetXStatusStr(CurrentXStatus*3+1,&l1);
   \   00000048   BC0096E5           LDR      R0,[R6, #+188]
   \   0000004C   0320A0E3           MOV      R2,#+3
   \   00000050   920000E0           MUL      R0,R2,R0
   \   00000054   0D10A0E1           MOV      R1,SP
   \   00000058   010080E2           ADD      R0,R0,#+1
   \   0000005C   ........           _BLF     GetXStatusStr,??GetXStatusStr??rA
   \   00000060   0080A0E1           MOV      R8,R0
   1833            s2=GetXStatusStr(CurrentXStatus*3+2,&l2);
   \   00000064   BC0096E5           LDR      R0,[R6, #+188]
   \   00000068   0320A0E3           MOV      R2,#+3
   \   0000006C   920000E0           MUL      R0,R2,R0
   \   00000070   04108DE2           ADD      R1,SP,#+4
   \   00000074   020080E2           ADD      R0,R0,#+2
   \   00000078   ........           _BLF     GetXStatusStr,??GetXStatusStr??rA
   \   0000007C   0060A0E1           MOV      R6,R0
   1834            if ((!s1)||(!s2)) return;
   \   00000080   000058E3           CMP      R8,#+0
   \   00000084   00005613           CMPNE    R6,#+0
   \   00000088   F781BD08           POPEQ    {R0-R2,R4-R8,PC}
   1835            p=malloc(sizeof(PKT)+l1+l2+1);
   \   0000008C   00009DE5           LDR      R0,[SP, #+0]
   \   00000090   04109DE5           LDR      R1,[SP, #+4]
   \   00000094   000081E0           ADD      R0,R1,R0
   \   00000098   090080E2           ADD      R0,R0,#+9
   \   0000009C   140000EF           SWI      +20
   \   000000A0   0040A0E1           MOV      R4,R0
   1836            p->pkt.uin=0;
   \   000000A4   005084E5           STR      R5,[R4, #+0]
   1837            p->pkt.type=T_XTEXT_SET;
   \   000000A8   1A00A0E3           MOV      R0,#+26
   \   000000AC   B400C4E1           STRH     R0,[R4, #+4]
   1838            p->pkt.data_len=l1+l2+1;
   \   000000B0   00009DE5           LDR      R0,[SP, #+0]
   \   000000B4   04109DE5           LDR      R1,[SP, #+4]
   \   000000B8   000081E0           ADD      R0,R1,R0
   \   000000BC   010080E2           ADD      R0,R0,#+1
   \   000000C0   B600C4E1           STRH     R0,[R4, #+6]
   1839            strncpy(p->data+0,s1,l1);
   \   000000C4   00209DE5           LDR      R2,[SP, #+0]
   \   000000C8   0810A0E1           MOV      R1,R8
   \   000000CC   080084E2           ADD      R0,R4,#+8
   \   000000D0   160100EF           SWI      +278
   1840            p->data[l1]=0;
   \   000000D4   00009DE5           LDR      R0,[SP, #+0]
   1841            strncpy(p->data+l1+1,s2,l2);
   \   000000D8   0610A0E1           MOV      R1,R6
   \   000000DC   040080E0           ADD      R0,R0,R4
   \   000000E0   0850C0E5           STRB     R5,[R0, #+8]
   \   000000E4   00009DE5           LDR      R0,[SP, #+0]
   \   000000E8   04209DE5           LDR      R2,[SP, #+4]
   \   000000EC   040080E0           ADD      R0,R0,R4
   \   000000F0   090080E2           ADD      R0,R0,#+9
   \   000000F4   160100EF           SWI      +278
   1842            SUBPROC((void *)SendAnswer,0,p);
   \   000000F8   0420A0E1           MOV      R2,R4
   \   000000FC   0010A0E3           MOV      R1,#+0
   \   00000100   0700A0E1           MOV      R0,R7
   \   00000104   710100EF           SWI      +369
   1843          }
   \   00000108   F781BDE8           POP      {R0-R2,R4-R8,PC}  ;; return
   1844          

   \                                 In segment CODE, align 4, keep-with-next
   1845          void to_develop(void)
   1846          {
   1847            if (silenthide) return;
   \                     to_develop:
   \   00000000   ........           LDR      R0,??DataTable77  ;; S_ICONS
   \   00000004   00402DE9           PUSH     {LR}
   \   00000008   A01090E5           LDR      R1,[R0, #+160]
   \   0000000C   000051E3           CMP      R1,#+0
   \   00000010   0080BD18           POPNE    {PC}
   1848            gipc.name_to=ipc_xtask_name;
   \   00000014   ........           LDR      R1,??DataTable95  ;; Canvas
   1849            gipc.name_from=ipc_my_name;
   1850            gipc.data=(void *)maincsm_id;
   1851            GBS_SendMessage(MMI_CEPID,MSG_IPC,IPC_XTASK_SHOW_CSM,&gipc);
   \   00000018   743080E2           ADD      R3,R0,#+116
   \   0000001C   632F81E2           ADD      R2,R1,#+396
   \   00000020   5B1F81E2           ADD      R1,R1,#+364
   \   00000024   781080E5           STR      R1,[R0, #+120]
   \   00000028   8C1090E5           LDR      R1,[R0, #+140]
   \   0000002C   742080E5           STR      R2,[R0, #+116]
   \   00000030   7C1080E5           STR      R1,[R0, #+124]
   \   00000034   0220A0E3           MOV      R2,#+2
   \   00000038   B010A0E3           MOV      R1,#+176
   \   0000003C   DE1C81E3           ORR      R1,R1,#0xDE00
   \   00000040   0900A0E3           MOV      R0,#+9
   \   00000044   420C80E3           ORR      R0,R0,#0x4200
   \   00000048   000100EF           SWI      +256
   1852          }
   \   0000004C   0080BDE8           POP      {PC}             ;; return
   1853          

   \                                 In segment CODE, align 4, keep-with-next
   1854          void ReqAddMsgToChat(CLIST *t)
   1855          {
   \                     ReqAddMsgToChat:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   1856            if (edchat_id)
   \   00000004   ........           LDR      R5,??DataTable77  ;; S_ICONS
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   080195E5           LDR      R0,[R5, #+264]
   \   00000010   000050E3           CMP      R0,#+0
   \   00000014   7080BD08           POPEQ    {R4-R6,PC}
   1857            {
   1858              void *data=FindGUIbyId(edchat_id,NULL);
   \   00000018   080195E5           LDR      R0,[R5, #+264]
   \   0000001C   0010A0E3           MOV      R1,#+0
   \   00000020   090200EF           SWI      +521
   \   00000024   0060A0E1           MOV      R6,R0
   1859              {
   1860                EDCHAT_STRUCT *ed_struct;
   1861                ed_struct=EDIT_GetUserPointer(data);
   \   00000028   DF0100EF           SWI      +479
   1862                if (ed_struct)
   \   0000002C   000050E3           CMP      R0,#+0
   \   00000030   7080BD08           POPEQ    {R4-R6,PC}
   1863                {
   1864                  if (ed_struct->ed_contact==t)
   \   00000034   000090E5           LDR      R0,[R0, #+0]
   \   00000038   040050E1           CMP      R0,R4
   \   0000003C   7080BD18           POPNE    {R4-R6,PC}
   1865                  {
   1866                    if (EDIT_IsBusy(data))
   \   00000040   0600A0E1           MOV      R0,R6
   \   00000044   1C0200EF           SWI      +540
   \   00000048   000050E3           CMP      R0,#+0
   1867                    {
   1868                      t->req_add=1;
   \   0000004C   0100A013           MOVNE    R0,#+1
   \   00000050   5C008415           STRNE    R0,[R4, #+92]
   1869                      time_to_stop_t9=3;
   \   00000054   0300A013           MOVNE    R0,#+3
   \   00000058   20018515           STRNE    R0,[R5, #+288]
   \   0000005C   7080BD18           POPNE    {R4-R6,PC}
   1870                    }
   1871                    else
   1872                    {
   1873                      AddMsgToChat(data);
   \   00000060   0600A0E1           MOV      R0,R6
   \   00000064   ........           BL       AddMsgToChat
   1874                      DirectRedrawGUI_ID(edchat_id);
   \   00000068   080195E5           LDR      R0,[R5, #+264]
   \   0000006C   400100EF           SWI      +320
   1875          	  }
   1876          	}
   1877                }
   1878              }
   1879            }
   1880          }
   \   00000070   7080BDE8           POP      {R4-R6,PC}       ;; return
   1881          

   \                                 In segment CODE, align 4, keep-with-next
   1882          ProcessPacket(TPKT *p)
   1883          {
   \                     ProcessPacket:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   \   00000004   40DF4DE2           SUB      SP,SP,#+256
   1884            extern const int VIBR_TYPE, VIBR_ON_CONNECT;
   1885            CLIST *t;
   1886            LOGQ *q;
   1887            char s[256];
   1888            switch(p->pkt.type)
   \   00000008   ........           LDR      R7,??DataTable95  ;; Canvas
   \   0000000C   ........           LDR      R6,??DataTable77  ;; S_ICONS
   \   00000010   0040A0E1           MOV      R4,R0
   \   00000014   B410D4E1           LDRH     R1,[R4, #+4]
   \   00000018   000094E5           LDR      R0,[R4, #+0]
   \   0000001C   01A0A0E3           MOV      R10,#+1
   \   00000020   0080A0E3           MOV      R8,#+0
   \   00000024   031041E2           SUB      R1,R1,#+3
   \   00000028   1C0051E3           CMP      R1,#+28
   \   0000002C   B001008A           BHI      ??ProcessPacket_1
   \   00000030   022F8FE2           ADR      R2,??ProcessPacket_0
   \   00000034   8110A0E1           MOV      R1,R1, LSL #+1
   \   00000038   B12092E1           LDRH     R2,[R2, R1]
   \   0000003C   02F18FE0           ADD      PC,PC,R2, LSL #+2
   \                     ??ProcessPacket_0:
   \   00000040   A0000E00AC01       DC16     +160,+14,+428,+428
   \              AC01        
   \   00000048   1100AC014B00       DC16     +17,+428,+75,+428
   \              AC01        
   \   00000050   AC01AC01AC01       DC16     +428,+428,+428,+428
   \              AC01        
   \   00000058   AC010C010C01       DC16     +428,+268,+268,+428
   \              AC01        
   \   00000060   AC013B004900       DC16     +428,+59,+73,+428
   \              AC01        
   \   00000068   AC01AC013C01       DC16     +428,+428,+316,+428
   \              AC01        
   \   00000070   AC01AC01AC01       DC16     +428,+428,+428,+428
   \              AC01        
   \   00000078   AA010000           DC16     +426,+0
   1889            {
   1890            case T_LOGIN:
   1891              set_my_status();
   \                     ??ProcessPacket_2:
   \   0000007C   ........           BL       set_my_status
   1892              set_my_xstatus();
   \   00000080   ........           BL       set_my_xstatus
   \   00000084   9A0100EA           B        ??ProcessPacket_1
   1893              break;
   1894            case T_CLENTRY:
   1895              if (p->pkt.uin)
   \                     ??ProcessPacket_3:
   \   00000088   000050E3           CMP      R0,#+0
   \   0000008C   1800000A           BEQ      ??ProcessPacket_4
   1896              {
   1897                if ((t=FindContactByUin(p->pkt.uin)))
   \   00000090   ........           _BLF     FindContactByUin,??FindContactByUin??rA
   \   00000094   0050B0E1           MOVS     R5,R0
   \   00000098   0E00000A           BEQ      ??ProcessPacket_5
   1898                {
   1899          	//        t->state=0xFFFF;
   1900                  if (!t->local) strncpy(t->name,p->data,63);
   \   0000009C   800095E5           LDR      R0,[R5, #+128]
   \   000000A0   000050E3           CMP      R0,#+0
   \   000000A4   0300001A           BNE      ??ProcessPacket_6
   \   000000A8   3F20A0E3           MOV      R2,#+63
   \   000000AC   081084E2           ADD      R1,R4,#+8
   \   000000B0   140085E2           ADD      R0,R5,#+20
   \   000000B4   160100EF           SWI      +278
   1901          	t->group=GROUP_CACHE;
   \                     ??ProcessPacket_6:
   \   000000B8   000196E5           LDR      R0,[R6, #+256]
   \   000000BC   100085E5           STR      R0,[R5, #+16]
   1902          	ChangeContactPos(t);
   \                     ??ProcessPacket_7:
   \   000000C0   0500A0E1           MOV      R0,R5
   \   000000C4   ........           _BLF     ChangeContactPos,??ChangeContactPos??rA
   1903          	RecountMenu(t, 1);
   \   000000C8   0110A0E3           MOV      R1,#+1
   \   000000CC   0500A0E1           MOV      R0,R5
   \                     ??ProcessPacket_8:
   \   000000D0   ........           BL       RecountMenu
   \   000000D4   860100EA           B        ??ProcessPacket_1
   1904                }
   1905                else
   1906                {
   1907                  RecountMenu(AddContact(p->pkt.uin,p->data, GROUP_CACHE, 0),1);
   \                     ??ProcessPacket_5:
   \   000000D8   002196E5           LDR      R2,[R6, #+256]
   \   000000DC   000094E5           LDR      R0,[R4, #+0]
   \   000000E0   0030A0E3           MOV      R3,#+0
   \   000000E4   081084E2           ADD      R1,R4,#+8
   \   000000E8   ........           _BLF     AddContact,??AddContact??rA
   \   000000EC   0A10A0E1           MOV      R1,R10
   \   000000F0   F6FFFFEA           B        ??ProcessPacket_8
   1908                }
   1909              }
   1910              else
   1911              {
   1912                if(VIBR_ON_CONNECT)
   \                     ??ProcessPacket_4:
   \   000000F4   ........           LDR      R0,??DataTable74  ;; VIBR_ON_CONNECT
   \   000000F8   000090E5           LDR      R0,[R0, #+0]
   \   000000FC   000050E3           CMP      R0,#+0
   \   00000100   0100000A           BEQ      ??ProcessPacket_9
   1913                {
   1914                  vibra_count=1;
   \   00000104   C4A086E5           STR      R10,[R6, #+196]
   1915                  start_vibra();
   \   00000108   ........           BL       start_vibra
   1916                }
   1917                GROUP_CACHE=0;
   \                     ??ProcessPacket_9:
   \   0000010C   008186E5           STR      R8,[R6, #+256]
   1918                ask_my_info();
   1919                if (contactlist_menu_id)
   \   00000110   040196E5           LDR      R0,[R6, #+260]
   \   00000114   000050E3           CMP      R0,#+0
   \   00000118   0200000A           BEQ      ??ProcessPacket_10
   1920                {
   1921          	RecountMenu(NULL, 1);
   \   0000011C   0110A0E3           MOV      R1,#+1
   \   00000120   0800A0E1           MOV      R0,R8
   \                     ??ProcessPacket_11:
   \   00000124   E9FFFFEA           B        ??ProcessPacket_8
   1922                }
   1923                else
   1924                  create_contactlist_menu();
   \                     ??ProcessPacket_10:
   \   00000128   ........           BL       create_contactlist_menu
   \   0000012C   700100EA           B        ??ProcessPacket_1
   1925              }
   1926              break;
   1927            case T_GROUPID:
   1928              if (t=FindGroupByID(GROUP_CACHE=p->pkt.uin))
   \                     ??ProcessPacket_12:
   \   00000130   000186E5           STR      R0,[R6, #+256]
   \   00000134   ........           _BLF     FindGroupByID,??FindGroupByID??rA
   \   00000138   0050B0E1           MOVS     R5,R0
   \   0000013C   0400000A           BEQ      ??ProcessPacket_13
   1929              {
   1930                strncpy(t->name,p->data,63);
   \   00000140   3F20A0E3           MOV      R2,#+63
   \   00000144   081084E2           ADD      R1,R4,#+8
   \   00000148   140085E2           ADD      R0,R5,#+20
   \   0000014C   160100EF           SWI      +278
   1931                ChangeContactPos(t);
   \   00000150   DAFFFFEA           B        ??ProcessPacket_7
   1932                RecountMenu(t, 1);
   1933              }
   1934              else
   1935              {
   1936                RecountMenu(AddGroup(p->pkt.uin,p->data), 1);
   \                     ??ProcessPacket_13:
   \   00000154   000094E5           LDR      R0,[R4, #+0]
   \   00000158   081084E2           ADD      R1,R4,#+8
   \   0000015C   ........           _BLF     AddGroup,??AddGroup??rA
   \   00000160   0110A0E3           MOV      R1,#+1
   \   00000164   D9FFFFEA           B        ??ProcessPacket_8
   1937              }
   1938              break;
   1939            case T_GROUPFOLLOW:
   1940              GROUP_CACHE=p->pkt.uin;
   \                     ??ProcessPacket_14:
   \   00000168   000186E5           STR      R0,[R6, #+256]
   \   0000016C   600100EA           B        ??ProcessPacket_1
   1941              break;
   1942            case T_STATUSCHANGE:
   1943              t=FindContactByUin(p->pkt.uin);
   \                     ??ProcessPacket_15:
   \   00000170   ........           _BLF     FindContactByUin,??FindContactByUin??rA
   \   00000174   0050B0E1           MOVS     R5,R0
   1944              if (t)
   \   00000178   4200000A           BEQ      ??ProcessPacket_16
   1945              {
   1946                int i=t->state;
   1947                CLIST *oldt=NULL;
   \   0000017C   0A00D4E5           LDRB     R0,[R4, #+10]
   \   00000180   B615D5E1           LDRH     R1,[R5, #+86]
   \   00000184   B475D5E1           LDRH     R7,[R5, #+84]
   \   00000188   0090A0E3           MOV      R9,#+0
   \   0000018C   000051E1           CMP      R1,R0
   \   00000190   1C00000A           BEQ      ??ProcessPacket_17
   1948                if (t->xstate!=p->data[2])  // Если картинка икс статуса сменилась
   1949                {
   1950                  t->xstate=p->data[2];
   \   00000194   B605C5E1           STRH     R0,[R5, #+86]
   1951                  FreeXText(t);
   \   00000198   0500A0E1           MOV      R0,R5
   \   0000019C   ........           _BLF     FreeXText,??FreeXText??rA
   1952                  if (t->xstate && ENA_AUTO_XTXT)   // Если установлен икс статус и можно запрашивать по смене икс статуса :)
   \   000001A0   B605D5E1           LDRH     R0,[R5, #+86]
   \   000001A4   000050E3           CMP      R0,#+0
   \   000001A8   58059F15           LDRNE    R0,??ProcessPacket_18+0x4  ;; ENA_AUTO_XTXT
   \   000001AC   00009015           LDRNE    R0,[R0, #+0]
   \   000001B0   00005013           CMPNE    R0,#+0
   \   000001B4   1200000A           BEQ      ??ProcessPacket_19
   1953                  {
   1954                    t->req_xtext=1;
   \   000001B8   7CA085E5           STR      R10,[R5, #+124]
   1955                    if (edchat_id)   // Если открыт чат
   \   000001BC   080196E5           LDR      R0,[R6, #+264]
   \   000001C0   000050E3           CMP      R0,#+0
   \   000001C4   0F00000A           BEQ      ??ProcessPacket_17
   1956                    {
   1957                      void *data=FindGUIbyId(edchat_id,NULL);
   \   000001C8   080196E5           LDR      R0,[R6, #+264]
   \   000001CC   0010A0E3           MOV      R1,#+0
   \   000001D0   090200EF           SWI      +521
   1958                      if (data)
   \   000001D4   000050E3           CMP      R0,#+0
   \   000001D8   0A00000A           BEQ      ??ProcessPacket_17
   1959                      {
   1960                        EDCHAT_STRUCT *ed_struct=EDIT_GetUserPointer(data);
   \   000001DC   DF0100EF           SWI      +479
   1961                        if (ed_struct)
   \   000001E0   000050E3           CMP      R0,#+0
   \   000001E4   0700000A           BEQ      ??ProcessPacket_17
   1962                        {
   1963                          if (ed_struct->ed_contact==t)   // Если наш чат то запрашиваем текст статуса
   \   000001E8   000090E5           LDR      R0,[R0, #+0]
   \   000001EC   050050E1           CMP      R0,R5
   \   000001F0   0400001A           BNE      ??ProcessPacket_17
   1964                          {
   1965                            t->req_xtext=0;
   \   000001F4   7C8085E5           STR      R8,[R5, #+124]
   1966                            RequestXText(t->uin);
   \   000001F8   0C0095E5           LDR      R0,[R5, #+12]
   \   000001FC   ........           BL       RequestXText
   \   00000200   000000EA           B        ??ProcessPacket_17
   1967                          }
   1968                        }
   1969          	    }
   1970          	  }
   1971          	}
   1972                  else  // Если икс статус не установлен то на всякий случай снимаем флаг получения текста
   1973                  {
   1974                    t->req_xtext=0;
   \                     ??ProcessPacket_19:
   \   00000204   7C8085E5           STR      R8,[R5, #+124]
   1975                  }
   1976                }
   1977                if (contactlist_menu_id)
   \                     ??ProcessPacket_17:
   \   00000208   040196E5           LDR      R0,[R6, #+260]
   \   0000020C   000050E3           CMP      R0,#+0
   \   00000210   0500000A           BEQ      ??ProcessPacket_20
   1978                {
   1979          	oldt=FindContactByN(GetCurMenuItem(FindGUIbyId(contactlist_menu_id,NULL)));
   \   00000214   040196E5           LDR      R0,[R6, #+260]
   \   00000218   0010A0E3           MOV      R1,#+0
   \   0000021C   090200EF           SWI      +521
   \   00000220   8F0100EF           SWI      +399
   \   00000224   ........           _BLF     FindContactByN,??FindContactByN??rA
   \   00000228   0090A0E1           MOV      R9,R0
   1980                }
   1981                t->state=*((unsigned short *)(p->data));
   \                     ??ProcessPacket_20:
   \   0000022C   B800D4E1           LDRH     R0,[R4, #+8]
   \   00000230   B405C5E1           STRH     R0,[R5, #+84]
   1982                LogStatusChange(t);
   \   00000234   0500A0E1           MOV      R0,R5
   \   00000238   ........           _BLF     LogStatusChange,??LogStatusChange??rA
   1983                ChangeContactPos(t);
   \   0000023C   0500A0E1           MOV      R0,R5
   \   00000240   ........           _BLF     ChangeContactPos,??ChangeContactPos??rA
   1984                RecountMenu(oldt, 1);
   \   00000244   0110A0E3           MOV      R1,#+1
   \   00000248   0900A0E1           MOV      R0,R9
   \   0000024C   ........           BL       RecountMenu
   1985                if ((t->state!=0xFFFF)&&(i==0xFFFF))//Звук
   \   00000250   B405D5E1           LDRH     R0,[R5, #+84]
   \   00000254   FF10A0E3           MOV      R1,#+255
   \   00000258   FF1C81E3           ORR      R1,R1,#0xFF00
   \   0000025C   010050E1           CMP      R0,R1
   \   00000260   0200000A           BEQ      ??ProcessPacket_21
   \   00000264   010057E1           CMP      R7,R1
   1986                {
   1987          	Play(sndGlobal);
   \   00000268   9C049F05           LDREQ    R0,??ProcessPacket_18+0x8  ;; sndGlobal
   \   0000026C   0400000A           BEQ      ??ProcessPacket_22
   1988                }
   1989                if ((i!=0xFFFF)&&(t->state==0xFFFF))//Звук
   \                     ??ProcessPacket_21:
   \   00000270   010057E1           CMP      R7,R1
   \   00000274   0300000A           BEQ      ??ProcessPacket_16
   \   00000278   010050E1           CMP      R0,R1
   \   0000027C   0100001A           BNE      ??ProcessPacket_16
   1990                {
   1991          	Play(sndSrvMsg);
   \   00000280   88049FE5           LDR      R0,??ProcessPacket_18+0xC  ;; sndSrvMsg
   \                     ??ProcessPacket_22:
   \   00000284   ........           BL       Play
   1992                }
   1993              }
   1994              if (edchat_id)
   \                     ??ProcessPacket_16:
   \   00000288   080196E5           LDR      R0,[R6, #+264]
   \   0000028C   000050E3           CMP      R0,#+0
   \   00000290   1701000A           BEQ      ??ProcessPacket_1
   1995              {
   1996                void *data=FindGUIbyId(edchat_id,NULL);
   \   00000294   080196E5           LDR      R0,[R6, #+264]
   \   00000298   0010A0E3           MOV      R1,#+0
   \   0000029C   090200EF           SWI      +521
   1997                {
   1998          	EDCHAT_STRUCT *ed_struct;
   1999          	ed_struct=EDIT_GetUserPointer(data);
   \   000002A0   DF0100EF           SWI      +479
   2000          	if (ed_struct)
   \   000002A4   000050E3           CMP      R0,#+0
   \   000002A8   1101000A           BEQ      ??ProcessPacket_1
   2001          	{
   2002          	  if (ed_struct->ed_contact==t)
   \   000002AC   000090E5           LDR      R0,[R0, #+0]
   \   000002B0   050050E1           CMP      R0,R5
   \   000002B4   0E01001A           BNE      ??ProcessPacket_1
   2003          	  {
   2004          	    DirectRedrawGUI_ID(edchat_id);
   \   000002B8   080196E5           LDR      R0,[R6, #+264]
   \   000002BC   400100EF           SWI      +320
   \   000002C0   0B0100EA           B        ??ProcessPacket_1
   2005          	  }
   2006          	}
   2007                }
   2008              }
   2009              break;
   2010            case T_RECVMSG:
   2011              t=FindContactByUin(p->pkt.uin);
   \                     ??ProcessPacket_23:
   \   000002C4   ........           _BLF     FindContactByUin,??FindContactByUin??rA
   \   000002C8   0050B0E1           MOVS     R5,R0
   2012              if (!t)
   \   000002CC   0900001A           BNE      ??ProcessPacket_24
   2013              {
   2014                sprintf(s,percent_d,p->pkt.uin);
   \   000002D0   002094E5           LDR      R2,[R4, #+0]
   \   000002D4   0B1087E2           ADD      R1,R7,#+11
   \   000002D8   0D00A0E1           MOV      R0,SP
   \   000002DC   160000EF           SWI      +22
   2015                t=AddContact(p->pkt.uin,s,GROUP_CACHE,0);
   \   000002E0   002196E5           LDR      R2,[R6, #+256]
   \   000002E4   000094E5           LDR      R0,[R4, #+0]
   \   000002E8   0030A0E3           MOV      R3,#+0
   \   000002EC   0D10A0E1           MOV      R1,SP
   \   000002F0   ........           _BLF     AddContact,??AddContact??rA
   \   000002F4   0050A0E1           MOV      R5,R0
   2016              }
   2017              if(!t->isactive && HISTORY_BUFFER) GetHistory(t, 64<<HISTORY_BUFFER);
   \                     ??ProcessPacket_24:
   \   000002F8   700095E5           LDR      R0,[R5, #+112]
   \   000002FC   000050E3           CMP      R0,#+0
   \   00000300   0700001A           BNE      ??ProcessPacket_25
   \   00000304   ........           LDR      R0,??DataTable75  ;; HISTORY_BUFFER
   \   00000308   000090E5           LDR      R0,[R0, #+0]
   \   0000030C   000050E3           CMP      R0,#+0
   \   00000310   0300000A           BEQ      ??ProcessPacket_25
   \   00000314   4010A0E3           MOV      R1,#+64
   \   00000318   1110A0E1           LSL      R1,R1,R0
   \   0000031C   0500A0E1           MOV      R0,R5
   \   00000320   ........           _BLF     GetHistory,??GetHistory??rA
   2018              t->isactive=ACTIVE_TIME;
   \                     ??ProcessPacket_25:
   \   00000324   5A0FA0E3           MOV      R0,#+360
   \   00000328   700085E5           STR      R0,[R5, #+112]
   2019          
   2020              //    ChangeContactPos(t);
   2021              if(VIBR_TYPE)
   \   0000032C   ........           LDR      R0,??DataTable76  ;; VIBR_TYPE
   \   00000330   000090E5           LDR      R0,[R0, #+0]
   \   00000334   000050E3           CMP      R0,#+0
   2022                vibra_count=2;
   \   00000338   0200A013           MOVNE    R0,#+2
   \   0000033C   C4008615           STRNE    R0,[R6, #+196]
   2023              else
   2024                vibra_count=1;
   \   00000340   C4A08605           STREQ    R10,[R6, #+196]
   2025              start_vibra();
   \   00000344   ........           BL       start_vibra
   2026              IlluminationOn(ILL_DISP_RECV,ILL_KEYS_RECV,ILL_RECV_TMR,ILL_RECV_FADE); //Illumination by BoBa 19.04.2007
   \   00000348   C4039FE5           LDR      R0,??ProcessPacket_18+0x10  ;; ILL_RECV_FADE
   \   0000034C   003090E5           LDR      R3,[R0, #+0]
   \   00000350   C0039FE5           LDR      R0,??ProcessPacket_18+0x14  ;; ILL_RECV_TMR
   \   00000354   002090E5           LDR      R2,[R0, #+0]
   \   00000358   BC039FE5           LDR      R0,??ProcessPacket_18+0x18  ;; ILL_KEYS_RECV
   \   0000035C   001090E5           LDR      R1,[R0, #+0]
   \   00000360   B8039FE5           LDR      R0,??ProcessPacket_18+0x1C  ;; ILL_DISP_RECV
   \   00000364   000090E5           LDR      R0,[R0, #+0]
   \   00000368   ........           BL       IlluminationOn
   2027              if (t->name[0]=='#')
   \   0000036C   1400D5E5           LDRB     R0,[R5, #+20]
   \   00000370   230050E3           CMP      R0,#+35
   \   00000374   1100001A           BNE      ??ProcessPacket_26
   2028              {
   2029                //Если это конференция, патчим имя
   2030                char *s=strchr(p->data,'>');
   \   00000378   3E10A0E3           MOV      R1,#+62
   \   0000037C   080084E2           ADD      R0,R4,#+8
   \   00000380   180000EF           SWI      +24
   2031                //Если нашли символ > и после него пробел и ник короче 16 символов
   2032                if (s)
   \   00000384   000050E3           CMP      R0,#+0
   \   00000388   0C00000A           BEQ      ??ProcessPacket_26
   2033                {
   2034          	if ((s[1]==' ')&&((s-p->data)<16))
   \   0000038C   0110D0E5           LDRB     R1,[R0, #+1]
   \   00000390   200051E3           CMP      R1,#+32
   \   00000394   0900001A           BNE      ??ProcessPacket_26
   \   00000398   081084E2           ADD      R1,R4,#+8
   \   0000039C   011040E0           SUB      R1,R0,R1
   \   000003A0   100051E3           CMP      R1,#+16
   \   000003A4   050000AA           BGE      ??ProcessPacket_26
   2035          	{
   2036          	  *s=0; //Режем строку
   \   000003A8   0080C0E5           STRB     R8,[R0, #+0]
   2037          	  AddStringToLog(t,0x02,s+2,p->data,0xFFFFFFFF); //Добавляем имя из текста сообщения
   \   000003AC   0810E0E1           MVN      R1,R8
   \   000003B0   02002DE9           PUSH     {R1}
   \   000003B4   083084E2           ADD      R3,R4,#+8
   \   000003B8   022080E2           ADD      R2,R0,#+2
   \   000003BC   030000EA           B        ??ProcessPacket_27
   2038          	  goto L1;
   2039          	}
   2040                }
   2041              }
   2042              AddStringToLog(t,0x02,p->data,t->name,0xFFFFFFFF);
   \                     ??ProcessPacket_26:
   \   000003C0   0800E0E1           MVN      R0,R8
   \   000003C4   01002DE9           PUSH     {R0}
   \   000003C8   143085E2           ADD      R3,R5,#+20
   \   000003CC   082084E2           ADD      R2,R4,#+8
   \                     ??ProcessPacket_27:
   \   000003D0   0210A0E3           MOV      R1,#+2
   \   000003D4   0500A0E1           MOV      R0,R5
   \   000003D8   ........           BL       AddStringToLog
   \   000003DC   04D08DE2           ADD      SP,SP,#+4
   2043              L1:
   2044              //Разворачиваем группу, в которой пришло сообщение
   2045              {
   2046                CLIST *g=FindGroupByID(t->group);
   \   000003E0   100095E5           LDR      R0,[R5, #+16]
   \   000003E4   ........           _BLF     FindGroupByID,??FindGroupByID??rA
   2047                if (g)
   \   000003E8   000050E3           CMP      R0,#+0
   2048                {
   2049          	if (g->state)
   \   000003EC   B415D011           LDRHNE   R1,[R0, #+84]
   \   000003F0   00005113           CMPNE    R1,#+0
   2050          	{
   2051          	  g->state=0;
   \   000003F4   B485C011           STRHNE   R8,[R0, #+84]
   2052          	}
   2053                }
   2054              }
   2055              ReqAddMsgToChat(t);
   \   000003F8   0500A0E1           MOV      R0,R5
   \   000003FC   ........           BL       ReqAddMsgToChat
   2056              RecountMenu(t, 1);
   \   00000400   0110A0E3           MOV      R1,#+1
   \   00000404   0500A0E1           MOV      R0,R5
   \   00000408   ........           BL       RecountMenu
   2057              extern const int DEVELOP_IF;
   2058              switch (DEVELOP_IF)
   \   0000040C   10039FE5           LDR      R0,??ProcessPacket_18+0x20  ;; DEVELOP_IF
   \   00000410   000090E5           LDR      R0,[R0, #+0]
   \   00000414   000050E3           CMP      R0,#+0
   \   00000418   0200000A           BEQ      ??ProcessPacket_28
   \   0000041C   010050E2           SUBS     R0,R0,#+1
   \   00000420   0900000A           BEQ      ??ProcessPacket_29
   \   00000424   B20000EA           B        ??ProcessPacket_1
   2059              {
   2060              case 0:
   2061                if ((((CSM_RAM *)(CSM_root()->csm_q->csm.last))->id!=maincsm_id)) to_develop();
   \                     ??ProcessPacket_28:
   \   00000428   068100EF           SWI      +33030
   \   0000042C   080090E5           LDR      R0,[R0, #+8]
   \   00000430   8C1096E5           LDR      R1,[R6, #+140]
   \   00000434   0C0090E5           LDR      R0,[R0, #+12]
   \   00000438   0C0090E5           LDR      R0,[R0, #+12]
   \   0000043C   010050E1           CMP      R0,R1
   \                     ??ProcessPacket_30:
   \   00000440   AB00000A           BEQ      ??ProcessPacket_1
   \   00000444   ........           BL       to_develop
   \   00000448   A90000EA           B        ??ProcessPacket_1
   2062                break;
   2063              case 1:
   2064                if ((((CSM_RAM *)(CSM_root()->csm_q->csm.last))->id!=maincsm_id)&&(IsUnlocked())) to_develop();
   \                     ??ProcessPacket_29:
   \   0000044C   068100EF           SWI      +33030
   \   00000450   080090E5           LDR      R0,[R0, #+8]
   \   00000454   8C1096E5           LDR      R1,[R6, #+140]
   \   00000458   0C0090E5           LDR      R0,[R0, #+12]
   \   0000045C   0C0090E5           LDR      R0,[R0, #+12]
   \   00000460   010050E1           CMP      R0,R1
   \   00000464   A200000A           BEQ      ??ProcessPacket_1
   \   00000468   430000EF           SWI      +67
   \   0000046C   000050E3           CMP      R0,#+0
   \   00000470   F2FFFFEA           B        ??ProcessPacket_30
   2065                break;
   2066              case 2:
   2067                break;
   2068              }
   2069              break;
   2070            case T_SRV_ACK:
   2071            case T_CLIENT_ACK:
   2072              q=FindContactLOGQByAck(p);
   \                     ??ProcessPacket_31:
   \   00000474   0400A0E1           MOV      R0,R4
   \   00000478   ........           BL       FindContactLOGQByAck
   2073          /*    if ((
   2074          	IsGuiOnTop(contactlist_menu_id)||
   2075          	  IsGuiOnTop(edchat_id)
   2076          	    )&&(q))
   2077              {
   2078                DrawRoundedFrame(ScreenW()-8,YDISP,ScreenW()-1,YDISP+7,0,0,0,
   2079          		       GetPaletteAdrByColorIndex(0),
   2080          		       GetPaletteAdrByColorIndex(p->pkt.type==T_SRV_ACK?3:4));
   2081              }*/
   2082              if (q)
   \   0000047C   000050E3           CMP      R0,#+0
   \   00000480   9B00000A           BEQ      ??ProcessPacket_1
   2083              {
   2084                q->acked=p->pkt.type==T_SRV_ACK?1:2;
   \   00000484   B410D4E1           LDRH     R1,[R4, #+4]
   \   00000488   100051E3           CMP      R1,#+16
   \   0000048C   0110A003           MOVEQ    R1,#+1
   \   00000490   0210A013           MOVNE    R1,#+2
   \   00000494   041080E5           STR      R1,[R0, #+4]
   2085                t=FindContactByUin(p->pkt.uin);
   \   00000498   000094E5           LDR      R0,[R4, #+0]
   \   0000049C   ........           _BLF     FindContactByUin,??FindContactByUin??rA
   \   000004A0   0050A0E1           MOV      R5,R0
   2086                if (edchat_id)
   \   000004A4   080196E5           LDR      R0,[R6, #+264]
   \   000004A8   000050E3           CMP      R0,#+0
   \   000004AC   9000000A           BEQ      ??ProcessPacket_1
   2087                {
   2088          	void *data=FindGUIbyId(edchat_id,NULL);
   \   000004B0   080196E5           LDR      R0,[R6, #+264]
   \   000004B4   0010A0E3           MOV      R1,#+0
   \   000004B8   090200EF           SWI      +521
   \   000004BC   0070B0E1           MOVS     R7,R0
   2089          	if (data)
   \   000004C0   8B00000A           BEQ      ??ProcessPacket_1
   2090          	{
   2091          	  EDCHAT_STRUCT *ed_struct;
   2092          	  ed_struct=EDIT_GetUserPointer(data);
   \   000004C4   DF0100EF           SWI      +479
   2093          	  if (ed_struct)
   \   000004C8   000050E3           CMP      R0,#+0
   \   000004CC   8800000A           BEQ      ??ProcessPacket_1
   2094          	  {
   2095          	    if (ed_struct->ed_contact==t)
   \   000004D0   000090E5           LDR      R0,[R0, #+0]
   \   000004D4   050050E1           CMP      R0,R5
   \   000004D8   8500001A           BNE      ??ProcessPacket_1
   2096          	    {
   2097          	      if (EDIT_IsBusy(data))
   \   000004DC   0700A0E1           MOV      R0,R7
   \   000004E0   1C0200EF           SWI      +540
   \   000004E4   000050E3           CMP      R0,#+0
   2098          	      {
   2099          		t->req_drawack=1;
   \   000004E8   60A08515           STRNE    R10,[R5, #+96]
   2100          		time_to_stop_t9=3;
   \   000004EC   0300A013           MOVNE    R0,#+3
   \   000004F0   20018615           STRNE    R0,[R6, #+288]
   \   000004F4   7E00001A           BNE      ??ProcessPacket_1
   2101          	      }
   2102          	      else {
   2103          		DrawAck(data);
   \   000004F8   0700A0E1           MOV      R0,R7
   \   000004FC   ........           BL       DrawAck
   2104                          if (p->pkt.type==T_SRV_ACK)
   \   00000500   B400D4E1           LDRH     R0,[R4, #+4]
   \   00000504   100050E3           CMP      R0,#+16
   \   00000508   7900001A           BNE      ??ProcessPacket_1
   2105                            IlluminationOn(ILL_DISP_SEND,ILL_KEYS_SEND,ILL_SEND_TMR,ILL_RECV_FADE); //Illumination by BoBa 19.04.2007
   \   0000050C   00029FE5           LDR      R0,??ProcessPacket_18+0x10  ;; ILL_RECV_FADE
   \   00000510   003090E5           LDR      R3,[R0, #+0]
   \   00000514   0C029FE5           LDR      R0,??ProcessPacket_18+0x24  ;; ILL_SEND_TMR
   \   00000518   002090E5           LDR      R2,[R0, #+0]
   \   0000051C   08029FE5           LDR      R0,??ProcessPacket_18+0x28  ;; ILL_KEYS_SEND
   \   00000520   001090E5           LDR      R1,[R0, #+0]
   \   00000524   04029FE5           LDR      R0,??ProcessPacket_18+0x2C  ;; ILL_DISP_SEND
   \   00000528   000090E5           LDR      R0,[R0, #+0]
   \   0000052C   ........           BL       IlluminationOn
   \   00000530   6F0000EA           B        ??ProcessPacket_1
   2106                        }
   2107          	    }
   2108          	  }
   2109          	}
   2110                }
   2111              }
   2112              break;
   2113            case T_XTEXT_ACK:
   2114              t=FindContactByUin(p->pkt.uin);
   \                     ??ProcessPacket_32:
   \   00000534   ........           _BLF     FindContactByUin,??FindContactByUin??rA
   \   00000538   0050B0E1           MOVS     R5,R0
   2115              if (t)
   \   0000053C   6C00000A           BEQ      ??ProcessPacket_1
   2116              {
   2117                int i;
   2118                int j;
   2119                FreeXText(t);
   \   00000540   ........           _BLF     FreeXText,??FreeXText??rA
   2120                i=p->pkt.data_len;
   \   00000544   B680D4E1           LDRH     R8,[R4, #+6]
   2121                memcpy(t->xtext=malloc(i),p->data,i);
   \   00000548   0800A0E1           MOV      R0,R8
   \   0000054C   140000EF           SWI      +20
   \   00000550   780085E5           STR      R0,[R5, #+120]
   \   00000554   0820A0E1           MOV      R2,R8
   \   00000558   081084E2           ADD      R1,R4,#+8
   \   0000055C   1E0100EF           SWI      +286
   2122                zeromem(s,256);
   \   00000560   401FA0E3           MOV      R1,#+256
   \   00000564   0D00A0E1           MOV      R0,SP
   \   00000568   1D0100EF           SWI      +285
   2123                strcpy(s,t->name);
   \   0000056C   141085E2           ADD      R1,R5,#+20
   \   00000570   0D00A0E1           MOV      R0,SP
   \   00000574   1A0000EF           SWI      +26
   2124                strcat(s,":\n");
   \   00000578   611F8FE2           ADR      R1,??ProcessPacket_18  ;; ":\n"
   \   0000057C   0D00A0E1           MOV      R0,SP
   \   00000580   170000EF           SWI      +23
   2125                i=strlen(s);
   \   00000584   0D00A0E1           MOV      R0,SP
   \   00000588   1B0000EF           SWI      +27
   2126                j=p->data[0];
   \   0000058C   0880D4E5           LDRB     R8,[R4, #+8]
   \   00000590   0090A0E1           MOV      R9,R0
   2127                if (j>(255-i)) j=255-i;
   \   00000594   FF0069E2           RSB      R0,R9,#+255
   \   00000598   080050E1           CMP      R0,R8
   \   0000059C   0080A0B1           MOVLT    R8,R0
   2128                strncpy(s+i,p->data+1,j);
   \   000005A0   0820A0E1           MOV      R2,R8
   \   000005A4   091084E2           ADD      R1,R4,#+9
   \   000005A8   0D00A0E1           MOV      R0,SP
   \   000005AC   000089E0           ADD      R0,R9,R0
   \   000005B0   160100EF           SWI      +278
   2129                i+=j;
   \   000005B4   090088E0           ADD      R0,R8,R9
   2130                if (i<255)
   \   000005B8   FF0050E3           CMP      R0,#+255
   \   000005BC   100000AA           BGE      ??ProcessPacket_33
   2131                {
   2132          	s[i]='\n';
   \   000005C0   0D10A0E1           MOV      R1,SP
   \   000005C4   0A20A0E3           MOV      R2,#+10
   \   000005C8   0120C0E7           STRB     R2,[R0, +R1]
   2133          	i++;
   \   000005CC   0810D4E5           LDRB     R1,[R4, #+8]
   \   000005D0   B620D4E1           LDRH     R2,[R4, #+6]
   \   000005D4   010080E2           ADD      R0,R0,#+1
   2134          	j=p->pkt.data_len-p->data[0]-1;
   2135          	if (j>(255-i)) j=255-i;
   2136          	strncpy(s+i,p->data+p->data[0]+1,j);
   \   000005D8   0D30A0E1           MOV      R3,SP
   \   000005DC   012042E0           SUB      R2,R2,R1
   \   000005E0   018042E2           SUB      R8,R2,#+1
   \   000005E4   FF2060E2           RSB      R2,R0,#+255
   \   000005E8   080052E1           CMP      R2,R8
   \   000005EC   0280A0B1           MOVLT    R8,R2
   \   000005F0   0820A0E1           MOV      R2,R8
   \   000005F4   041081E0           ADD      R1,R1,R4
   \   000005F8   091081E2           ADD      R1,R1,#+9
   \   000005FC   030080E0           ADD      R0,R0,R3
   \   00000600   160100EF           SWI      +278
   2137                }
   2138          //      if (IsGuiOnTop(contactlist_menu_id)) RefreshGUI();
   2139                if (!edchat_id &&           // Только если редактор не наверху
   2140                    strlen(p->data))       // и x-status не пустой
   \                     ??ProcessPacket_33:
   \   00000604   080196E5           LDR      R0,[R6, #+264]
   \   00000608   000050E3           CMP      R0,#+0
   \   0000060C   0600001A           BNE      ??ProcessPacket_34
   \   00000610   080084E2           ADD      R0,R4,#+8
   \   00000614   1B0000EF           SWI      +27
   \   00000618   000050E3           CMP      R0,#+0
   \   0000061C   0200000A           BEQ      ??ProcessPacket_34
   2141                    ShowMSG(0,(int)s);
   \   00000620   0D10A0E1           MOV      R1,SP
   \   00000624   0000A0E3           MOV      R0,#+0
   \   00000628   480100EF           SWI      +328
   2142          
   2143                zeromem(s,256);
   \                     ??ProcessPacket_34:
   \   0000062C   401FA0E3           MOV      R1,#+256
   \   00000630   0D00A0E1           MOV      R0,SP
   \   00000634   1D0100EF           SWI      +285
   2144                i=0;
   2145                j=p->data[0];
   \   00000638   0860D4E5           LDRB     R6,[R4, #+8]
   2146                if (j>(255-i)) j=255-i;
   2147                strncpy(s,p->data+1,j);
   \   0000063C   091084E2           ADD      R1,R4,#+9
   \   00000640   0D00A0E1           MOV      R0,SP
   \   00000644   400F56E3           CMP      R6,#+256
   \   00000648   FF60A0A3           MOVGE    R6,#+255
   \   0000064C   0620A0E1           MOV      R2,R6
   \   00000650   160100EF           SWI      +278
   2148                i+=j;
   2149                if (i<255)
   \   00000654   FF0056E3           CMP      R6,#+255
   \   00000658   100000AA           BGE      ??ProcessPacket_35
   2150                {
   2151          	s[i++]=13;
   \   0000065C   0D10A0E1           MOV      R1,SP
   \   00000660   0D20A0E3           MOV      R2,#+13
   \   00000664   0120C6E7           STRB     R2,[R6, +R1]
   \   00000668   0810D4E5           LDRB     R1,[R4, #+8]
   \   0000066C   B620D4E1           LDRH     R2,[R4, #+6]
   \   00000670   010086E2           ADD      R0,R6,#+1
   2152          	j=p->pkt.data_len-p->data[0]-1;
   2153          	if (j>(255-i)) j=255-i;
   2154          	strncpy(s+i,p->data+p->data[0]+1,j);
   \   00000674   0D30A0E1           MOV      R3,SP
   \   00000678   012042E0           SUB      R2,R2,R1
   \   0000067C   016042E2           SUB      R6,R2,#+1
   \   00000680   FF2060E2           RSB      R2,R0,#+255
   \   00000684   060052E1           CMP      R2,R6
   \   00000688   0260A0B1           MOVLT    R6,R2
   \   0000068C   0620A0E1           MOV      R2,R6
   \   00000690   041081E0           ADD      R1,R1,R4
   \   00000694   091081E2           ADD      R1,R1,#+9
   \   00000698   030080E0           ADD      R0,R0,R3
   \   0000069C   160100EF           SWI      +278
   2155                }
   2156                AddStringToLog(t,0x03,s,x_status_change,0xFFFFFFFF);
   \                     ??ProcessPacket_35:
   \   000006A0   00006AE2           RSB      R0,R10,#+0
   \   000006A4   01002DE9           PUSH     {R0}
   \   000006A8   653F87E2           ADD      R3,R7,#+404
   \   000006AC   04208DE2           ADD      R2,SP,#+4
   \   000006B0   0310A0E3           MOV      R1,#+3
   \   000006B4   0500A0E1           MOV      R0,R5
   \   000006B8   ........           BL       AddStringToLog
   2157                ReqAddMsgToChat(t);
   \   000006BC   0500A0E1           MOV      R0,R5
   \   000006C0   ........           BL       ReqAddMsgToChat
   2158                if (strlen(p->data))       // Если x-status не пустой
   \   000006C4   080084E2           ADD      R0,R4,#+8
   \   000006C8   1B0000EF           SWI      +27
   \   000006CC   000050E3           CMP      R0,#+0
   \   000006D0   04D08DE2           ADD      SP,SP,#+4
   2159                  RecountMenu(t, 1);
   \   000006D4   0110A013           MOVNE    R1,#+1
   \   000006D8   0500A011           MOVNE    R0,R5
   \   000006DC   7BFEFF1A           BNE      ??ProcessPacket_8
   2160                else
   2161                  RecountMenu(NULL, 0);
   \   000006E0   0010A0E3           MOV      R1,#+0
   \   000006E4   0000A0E3           MOV      R0,#+0
   \   000006E8   78FEFFEA           B        ??ProcessPacket_8
   2162              }
   2163              break;
   2164            case T_LASTPRIVACY:
   2165              CurrentPrivateStatus=p->data[0];
   \                     ??ProcessPacket_36:
   \   000006EC   0800D4E5           LDRB     R0,[R4, #+8]
   \   000006F0   C00086E5           STR      R0,[R6, #+192]
   2166              break;
   2167            }
   2168            mfree(p);
   \                     ??ProcessPacket_1:
   \   000006F4   0400A0E1           MOV      R0,R4
   \   000006F8   150000EF           SWI      +21
   2169          }
   \   000006FC   40DF8DE2           ADD      SP,SP,#+256
   \   00000700   F087BDE8           POP      {R4-R10,PC}      ;; return
   \                     ??ProcessPacket_18:
   \   00000704   3A0A0000           DC8      ":\n",+0
   \   00000708   ........           DC32     ENA_AUTO_XTXT
   \   0000070C   ........           DC32     sndGlobal
   \   00000710   ........           DC32     sndSrvMsg
   \   00000714   ........           DC32     ILL_RECV_FADE
   \   00000718   ........           DC32     ILL_RECV_TMR
   \   0000071C   ........           DC32     ILL_KEYS_RECV
   \   00000720   ........           DC32     ILL_DISP_RECV
   \   00000724   ........           DC32     DEVELOP_IF
   \   00000728   ........           DC32     ILL_SEND_TMR
   \   0000072C   ........           DC32     ILL_KEYS_SEND
   \   00000730   ........           DC32     ILL_DISP_SEND
   2170          
   2171          
   2172          IPC_REQ tmr_gipc;

   \                                 In segment CODE, align 4, keep-with-next
   2173          void process_active_timer(void)
   2174          {
   \                     process_active_timer:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   2175            if (connect_state>2)
   \   00000004   ........           LDR      R5,??DataTable77  ;; S_ICONS
   \   00000008   0040A0E3           MOV      R4,#+0
   \   0000000C   D40095E5           LDR      R0,[R5, #+212]
   \   00000010   030050E3           CMP      R0,#+3
   2176            {
   2177              if (++tenseconds_to_ping>12)
   \   00000014   100195A5           LDRGE    R0,[R5, #+272]
   \   00000018   010080A2           ADDGE    R0,R0,#+1
   \   0000001C   100185A5           STRGE    R0,[R5, #+272]
   \   00000020   0D0050A3           CMPGE    R0,#+13
   \   00000024   020000BA           BLT      ??process_active_timer_0
   2178              {
   2179                tenseconds_to_ping=0;
   2180                SUBPROC((void *)do_ping);
   \   00000028   50009FE5           LDR      R0,??process_active_timer_1  ;; do_ping
   \   0000002C   104185E5           STR      R4,[R5, #+272]
   \   00000030   710100EF           SWI      +369
   2181              }
   2182            }
   2183            tmr_gipc.name_to=ipc_my_name;
   \                     ??process_active_timer_0:
   \   00000034   ........           LDR      R1,??DataTable95  ;; Canvas
   \   00000038   5B0FA0E3           MOV      R0,#+364
   \   0000003C   012080E0           ADD      R2,R0,R1
   \   00000040   802085E5           STR      R2,[R5, #+128]
   2184            tmr_gipc.name_from=ipc_my_name;
   \   00000044   010080E0           ADD      R0,R0,R1
   \   00000048   840085E5           STR      R0,[R5, #+132]
   2185            tmr_gipc.data=NULL;
   \   0000004C   884085E5           STR      R4,[R5, #+136]
   2186            GBS_SendMessage(MMI_CEPID,MSG_IPC,IPC_TENSECONDS,&tmr_gipc);
   \   00000050   803085E2           ADD      R3,R5,#+128
   \   00000054   0420A0E3           MOV      R2,#+4
   \   00000058   B010A0E3           MOV      R1,#+176
   \   0000005C   DE1C81E3           ORR      R1,R1,#0xDE00
   \   00000060   0900A0E3           MOV      R0,#+9
   \   00000064   420C80E3           ORR      R0,R0,#0x4200
   \   00000068   000100EF           SWI      +256
   2187            GBS_StartTimerProc(&tmr_active,TMR_SECOND*10,process_active_timer);
   \   0000006C   ........           LDR      R2,??DataTable86  ;; process_active_timer
   \   00000070   871EA0E3           MOV      R1,#+2160
   \   00000074   EE0F85E2           ADD      R0,R5,#+952
   \   00000078   4D0000EF           SWI      +77
   2188          }
   \   0000007C   3080BDE8           POP      {R4,R5,PC}       ;; return
   \                     ??process_active_timer_1:
   \   00000080   ........           DC32     do_ping
   2189          
   2190          //===============================================================================================
   2191          
   2192          

   \                                 In segment CODE, align 4, keep-with-next
   2193          void method0(MAIN_GUI *data)
   2194          {
   \                     method0:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000004   14D04DE2           SUB      SP,SP,#+20
   2195            int scr_w=ScreenW();
   2196            int scr_h=ScreenH();
   2197            int pos_status;
   2198            int pm = pictures_max, pl = pictures_loaded;
   2199          /*  DrawRoundedFrame(0,YDISP,scr_w-1,scr_h-1,0,0,0,
   2200          		   GetPaletteAdrByColorIndex(0),
   2201          		   GetPaletteAdrByColorIndex(20));*/
   2202          
   2203            DrawRectangle(0,YDISP,scr_w-1,scr_h-1,0,
   2204          		   GetPaletteAdrByColorIndex(1),
   2205          		   GetPaletteAdrByColorIndex(1));
   2206            DrawImg(0,0,S_ICONS[ICON_LOGO]);
   2207            unsigned long RX=ALLTOTALRECEIVED; unsigned long TX=ALLTOTALSENDED;			//by BoBa 10.07
   2208            wsprintf(data->ws1,LG_GRSTATESTRING,connect_state,RXstate,RX,TX,sendq_l,hostname,logmsg);
   \   00000008   ........           LDR      R7,??DataTable95  ;; Canvas
   \   0000000C   0040A0E1           MOV      R4,R0
   \   00000010   888100EF           SWI      +33160
   \   00000014   04008DE5           STR      R0,[SP, #+4]
   \   00000018   898100EF           SWI      +33161
   \   0000001C   ........           LDR      R1,??Subroutine104_0  ;; pictures_max
   \   00000020   0050A0E1           MOV      R5,R0
   \   00000024   001091E5           LDR      R1,[R1, #+0]
   \   00000028   0100A0E3           MOV      R0,#+1
   \   0000002C   08108DE5           STR      R1,[SP, #+8]
   \   00000030   ........           LDR      R1,??Subroutine104_0+0x4  ;; pictures_loaded
   \   00000034   001091E5           LDR      R1,[R1, #+0]
   \   00000038   0C108DE5           STR      R1,[SP, #+12]
   \   0000003C   2E0100EF           SWI      +302
   \   00000040   0060A0E1           MOV      R6,R0
   \   00000044   0100A0E3           MOV      R0,#+1
   \   00000048   2E0100EF           SWI      +302
   \   0000004C   04209DE5           LDR      R2,[SP, #+4]
   \   00000050   013045E2           SUB      R3,R5,#+1
   \   00000054   012042E2           SUB      R2,R2,#+1
   \   00000058   00208DE5           STR      R2,[SP, #+0]
   \   0000005C   40002DE9           PUSH     {R6}
   \   00000060   ........           LDR      R6,??DataTable96  ;; S_ICONS
   \   00000064   01002DE9           PUSH     {R0}
   \   00000068   1810A0E3           MOV      R1,#+24
   \   0000006C   0000A0E3           MOV      R0,#+0
   \   00000070   01002DE9           PUSH     {R0}
   \   00000074   B40100EF           SWI      +436
   \   00000078   502096E5           LDR      R2,[R6, #+80]
   \   0000007C   0010A0E3           MOV      R1,#+0
   \   00000080   0000A0E3           MOV      R0,#+0
   \   00000084   230000EF           SWI      +35
   \   00000088   E40096E5           LDR      R0,[R6, #+228]
   \   0000008C   E81096E5           LDR      R1,[R6, #+232]
   \   00000090   A22F86E2           ADD      R2,R6,#+648
   \   00000094   04002DE9           PUSH     {R2}
   \   00000098   0820A0E3           MOV      R2,#+8
   \   0000009C   402E82E3           ORR      R2,R2,#0x400
   \   000000A0   062082E0           ADD      R2,R2,R6
   \   000000A4   04002DE9           PUSH     {R2}
   \   000000A8   EC2096E5           LDR      R2,[R6, #+236]
   \   000000AC   04002DE9           PUSH     {R2}
   \   000000B0   02002DE9           PUSH     {R1}
   \   000000B4   01002DE9           PUSH     {R0}
   \   000000B8   D03096E5           LDR      R3,[R6, #+208]
   \   000000BC   D42096E5           LDR      R2,[R6, #+212]
   \   000000C0   340094E5           LDR      R0,[R4, #+52]
   \   000000C4   281087E2           ADD      R1,R7,#+40
   \   000000C8   240100EF           SWI      +292
   2209          
   2210            if(pm != pl)
   \   000000CC   28009DE5           LDR      R0,[SP, #+40]
   \   000000D0   2C109DE5           LDR      R1,[SP, #+44]
   \   000000D4   20D08DE2           ADD      SP,SP,#+32
   \   000000D8   010050E1           CMP      R0,R1
   \   000000DC   3600000A           BEQ      ??method0_0
   2211            {
   2212               DrawRectangle(0,scr_h-4-2*GetFontYSIZE(FONT_SMALL_BOLD),scr_w-1,scr_h-4-GetFontYSIZE(FONT_MEDIUM_BOLD)-2,0,
   2213                               GetPaletteAdrByColorIndex(0),
   2214                               GetPaletteAdrByColorIndex(0));
   \   000000E0   0000A0E3           MOV      R0,#+0
   \   000000E4   2E0100EF           SWI      +302
   \   000000E8   0080A0E1           MOV      R8,R0
   \   000000EC   0000A0E3           MOV      R0,#+0
   \   000000F0   2E0100EF           SWI      +302
   \   000000F4   0090A0E1           MOV      R9,R0
   \   000000F8   0500A0E3           MOV      R0,#+5
   \   000000FC   C50100EF           SWI      +453
   \   00000100   00A0A0E1           MOV      R10,R0
   \   00000104   0900A0E3           MOV      R0,#+9
   \   00000108   C50100EF           SWI      +453
   \   0000010C   00012DE9           PUSH     {R8}
   \   00000110   00022DE9           PUSH     {R9}
   \   00000114   0010A0E3           MOV      R1,#+0
   \   00000118   02002DE9           PUSH     {R1}
   \   0000011C   0C209DE5           LDR      R2,[SP, #+12]
   \   00000120   04B045E2           SUB      R11,R5,#+4
   \   00000124   0A104BE0           SUB      R1,R11,R10
   \   00000128   023041E2           SUB      R3,R1,#+2
   \   0000012C   80104BE0           SUB      R1,R11,R0, LSL #+1
   \   00000130   0000A0E3           MOV      R0,#+0
   \   00000134   B40100EF           SWI      +436
   2215              pos_status = ((scr_w-1) * pl) / pm;
   2216              DrawRectangle(1,scr_h-4-2*GetFontYSIZE(FONT_SMALL_BOLD)+1,pos_status,scr_h-4-GetFontYSIZE(FONT_MEDIUM_BOLD)-3,0,
   2217                               GetPaletteAdrByColorIndex(14),
   2218                               GetPaletteAdrByColorIndex(14));  
   \   00000138   0E00A0E3           MOV      R0,#+14
   \   0000013C   2E0100EF           SWI      +302
   \   00000140   0080A0E1           MOV      R8,R0
   \   00000144   0E00A0E3           MOV      R0,#+14
   \   00000148   2E0100EF           SWI      +302
   \   0000014C   0090A0E1           MOV      R9,R0
   \   00000150   0500A0E3           MOV      R0,#+5
   \   00000154   C50100EF           SWI      +453
   \   00000158   1C008DE5           STR      R0,[SP, #+28]
   \   0000015C   0900A0E3           MOV      R0,#+9
   \   00000160   C50100EF           SWI      +453
   \   00000164   00A0A0E1           MOV      R10,R0
   \   00000168   00012DE9           PUSH     {R8}
   \   0000016C   00022DE9           PUSH     {R9}
   \   00000170   0000A0E3           MOV      R0,#+0
   \   00000174   01002DE9           PUSH     {R0}
   \   00000178   24109DE5           LDR      R1,[SP, #+36]
   \   0000017C   28009DE5           LDR      R0,[SP, #+40]
   \   00000180   00004BE0           SUB      R0,R11,R0
   \   00000184   033040E2           SUB      R3,R0,#+3
   \   00000188   18009DE5           LDR      R0,[SP, #+24]
   \   0000018C   910000E0           MUL      R0,R1,R0
   \   00000190   20109DE5           LDR      R1,[SP, #+32]
   \   00000194   ........           _BLF     ??div32_a,??rA??div32_a
   \   00000198   0120A0E1           MOV      R2,R1
   \   0000019C   8A004BE0           SUB      R0,R11,R10, LSL #+1
   \   000001A0   011080E2           ADD      R1,R0,#+1
   \   000001A4   0100A0E3           MOV      R0,#+1
   \   000001A8   B40100EF           SWI      +436
   2219              wstrcatprintf(data->ws1,"\nLoading images...");
   \   000001AC   340094E5           LDR      R0,[R4, #+52]
   \   000001B0   601087E2           ADD      R1,R7,#+96
   \   000001B4   160200EF           SWI      +534
   \   000001B8   18D08DE2           ADD      SP,SP,#+24
   2220            }
   2221            /*  if (total_smiles)
   2222            {
   2223              wstrcatprintf(data->ws1,"\nLoaded %d smiles",total_smiles);
   2224            }
   2225            if (xstatuses_load)
   2226            {
   2227              wstrcatprintf(data->ws1,"\nLoaded %d/%d xstatus",total_xstatuses, xstatuses_max);
   2228            }*/
   2229            DrawString(data->ws1,3,3+YDISP,scr_w-4,scr_h-4-GetFontYSIZE(FONT_MEDIUM_BOLD),
   2230          	     FONT_SMALL,0,GetPaletteAdrByColorIndex(0),GetPaletteAdrByColorIndex(23));
   \                     ??method0_0:
   \   000001BC   1700A0E3           MOV      R0,#+23
   \   000001C0   2E0100EF           SWI      +302
   \   000001C4   0080A0E1           MOV      R8,R0
   \   000001C8   0000A0E3           MOV      R0,#+0
   \   000001CC   2E0100EF           SWI      +302
   \   000001D0   0090A0E1           MOV      R9,R0
   \   000001D4   0500A0E3           MOV      R0,#+5
   \   000001D8   C50100EF           SWI      +453
   \   000001DC   04109DE5           LDR      R1,[SP, #+4]
   \   000001E0   00012DE9           PUSH     {R8}
   \   000001E4   04A041E2           SUB      R10,R1,#+4
   \   000001E8   00022DE9           PUSH     {R9}
   \   000001EC   0010A0E3           MOV      R1,#+0
   \   000001F0   02002DE9           PUSH     {R1}
   \   000001F4   04B045E2           SUB      R11,R5,#+4
   \   000001F8   00004BE0           SUB      R0,R11,R0
   \   000001FC   0A30A0E1           MOV      R3,R10
   \   00000200   0810A0E3           MOV      R1,#+8
   \   00000204   02002DE9           PUSH     {R1}
   \   00000208   01002DE9           PUSH     {R0}
   \   0000020C   340094E5           LDR      R0,[R4, #+52]
   \   00000210   1B20A0E3           MOV      R2,#+27
   \   00000214   0310A0E3           MOV      R1,#+3
   \   00000218   4C0100EF           SWI      +332
   2231            wsprintf(data->ws2,percent_t,cltop?LG_GRSKEYCLIST:empty_str);
   \   0000021C   FC0096E5           LDR      R0,[R6, #+252]
   \   00000220   14D08DE2           ADD      SP,SP,#+20
   \   00000224   000050E3           CMP      R0,#+0
   \   00000228   380094E5           LDR      R0,[R4, #+56]
   \   0000022C   74208712           ADDNE    R2,R7,#+116
   \   00000230   0E208702           ADDEQ    R2,R7,#+14
   \   00000234   081087E2           ADD      R1,R7,#+8
   \   00000238   240100EF           SWI      +292
   2232            DrawString(data->ws2,(scr_w >> 1),scr_h-4-GetFontYSIZE(FONT_MEDIUM_BOLD),
   2233          	     scr_w-4,scr_h-4,FONT_MEDIUM_BOLD,TEXT_ALIGNRIGHT,GetPaletteAdrByColorIndex(0),GetPaletteAdrByColorIndex(23));
   \   0000023C   1700A0E3           MOV      R0,#+23
   \   00000240   2E0100EF           SWI      +302
   \   00000244   0060A0E1           MOV      R6,R0
   \   00000248   0000A0E3           MOV      R0,#+0
   \   0000024C   2E0100EF           SWI      +302
   \   00000250   0080A0E1           MOV      R8,R0
   \   00000254   0500A0E3           MOV      R0,#+5
   \   00000258   C50100EF           SWI      +453
   \   0000025C   04109DE5           LDR      R1,[SP, #+4]
   \   00000260   40002DE9           PUSH     {R6}
   \   00000264   C150A0E1           ASR      R5,R1,#+1
   \   00000268   00012DE9           PUSH     {R8}
   \   0000026C   0410A0E3           MOV      R1,#+4
   \   00000270   02002DE9           PUSH     {R1}
   \   00000274   0A30A0E1           MOV      R3,R10
   \   00000278   00204BE0           SUB      R2,R11,R0
   \   0000027C   0510A0E3           MOV      R1,#+5
   \   00000280   02002DE9           PUSH     {R1}
   \   00000284   0B10A0E1           MOV      R1,R11
   \   00000288   02002DE9           PUSH     {R1}
   \   0000028C   380094E5           LDR      R0,[R4, #+56]
   \   00000290   0510A0E1           MOV      R1,R5
   \   00000294   4C0100EF           SWI      +332
   2234            wsprintf(data->ws2,percent_t,LG_GRSKEYEXIT);
   \   00000298   380094E5           LDR      R0,[R4, #+56]
   \   0000029C   7C2087E2           ADD      R2,R7,#+124
   \   000002A0   081087E2           ADD      R1,R7,#+8
   \   000002A4   240100EF           SWI      +292
   2235            DrawString(data->ws2,3,scr_h-4-GetFontYSIZE(FONT_MEDIUM_BOLD),
   2236          	     scr_w>>1,scr_h-4,FONT_MEDIUM_BOLD,TEXT_ALIGNLEFT,GetPaletteAdrByColorIndex(0),GetPaletteAdrByColorIndex(23));
   \   000002A8   1700A0E3           MOV      R0,#+23
   \   000002AC   2E0100EF           SWI      +302
   \   000002B0   0060A0E1           MOV      R6,R0
   \   000002B4   0000A0E3           MOV      R0,#+0
   \   000002B8   2E0100EF           SWI      +302
   \   000002BC   0070A0E1           MOV      R7,R0
   \   000002C0   0500A0E3           MOV      R0,#+5
   \   000002C4   C50100EF           SWI      +453
   \   000002C8   40002DE9           PUSH     {R6}
   \   000002CC   80002DE9           PUSH     {R7}
   \   000002D0   0110A0E3           MOV      R1,#+1
   \   000002D4   02002DE9           PUSH     {R1}
   \   000002D8   0530A0E1           MOV      R3,R5
   \   000002DC   00204BE0           SUB      R2,R11,R0
   \   000002E0   0510A0E3           MOV      R1,#+5
   \   000002E4   02002DE9           PUSH     {R1}
   \   000002E8   0B10A0E1           MOV      R1,R11
   \   000002EC   02002DE9           PUSH     {R1}
   \   000002F0   380094E5           LDR      R0,[R4, #+56]
   \   000002F4   0310A0E3           MOV      R1,#+3
   \   000002F8   4C0100EF           SWI      +332
   \   000002FC   28D08DE2           ADD      SP,SP,#+40
   2237          }
   \   00000300                      REQUIRE ?Subroutine104
   \   00000300                      ;; // Fall through to label ?Subroutine104

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine104:
   \   00000000   14D08DE2           ADD      SP,SP,#+20
   \   00000004   F08FBDE8           POP      {R4-R11,PC}      ;; return
   \                     ??Subroutine104_0:
   \   00000008   ........           DC32     pictures_max
   \   0000000C   ........           DC32     pictures_loaded
   2238          

   \                                 In segment CODE, align 4, keep-with-next
   2239          void method1(MAIN_GUI *data,void *(*malloc_adr)(int))
   2240          {
   \                     method1:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   2241            data->ws1=AllocWS(256);
   \   00000008   400FA0E3           MOV      R0,#+256
   \   0000000C   250100EF           SWI      +293
   \   00000010   340084E5           STR      R0,[R4, #+52]
   2242            data->ws2=AllocWS(256);
   \   00000014   400FA0E3           MOV      R0,#+256
   \   00000018   250100EF           SWI      +293
   \   0000001C   380084E5           STR      R0,[R4, #+56]
   2243            data->gui.state=1;
   \   00000020   0100A0E3           MOV      R0,#+1
   \   00000024   ........           B        ?Subroutine97
   2244          }

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine97:
   \   00000000   0C00C4E5           STRB     R0,[R4, #+12]
   \   00000004   1080BDE8           POP      {R4,PC}          ;; return
   2245          

   \                                 In segment CODE, align 4, keep-with-next
   2246          void method2(MAIN_GUI *data,void (*mfree_adr)(void *))
   2247          {
   \                     method2:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   2248            FreeWS(data->ws1);
   \   00000008   340094E5           LDR      R0,[R4, #+52]
   \   0000000C   290100EF           SWI      +297
   2249            FreeWS(data->ws2);
   \   00000010   380094E5           LDR      R0,[R4, #+56]
   \   00000014   290100EF           SWI      +297
   2250            data->gui.state=0;
   \   00000018   0000A0E3           MOV      R0,#+0
   \   0000001C                      REQUIRE ?Subroutine97
   \   0000001C                      ;; // Fall through to label ?Subroutine97
   2251          }
   2252          

   \                                 In segment CODE, align 4, keep-with-next
   2253          void method3(MAIN_GUI *data,void *(*malloc_adr)(int),void (*mfree_adr)(void *))
   2254          {
   \                     method3:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   2255            DisableIDLETMR();
   \   00000008   7F0100EF           SWI      +383
   2256            data->gui.state=2;
   \   0000000C   0200A0E3           MOV      R0,#+2
   \   00000010   ........           B        ?Subroutine97
   2257          }
   2258          

   \                                 In segment CODE, align 4, keep-with-next
   2259          void method4(MAIN_GUI *data,void (*mfree_adr)(void *))
   2260          {
   2261            if (data->gui.state!=2)
   \                     method4:
   \   00000000   0C10D0E5           LDRB     R1,[R0, #+12]
   \   00000004   020051E3           CMP      R1,#+2
   2262              return;
   2263            data->gui.state=1;
   \   00000008   0110A003           MOVEQ    R1,#+1
   \   0000000C   0C10C005           STRBEQ   R1,[R0, #+12]
   2264          }
   \   00000010   1EFF2FE1           BX       LR               ;; return
   2265          

   \                                 In segment CODE, align 4, keep-with-next
   2266          int method5(MAIN_GUI *data,GUI_MSG *msg)
   2267          {
   \                     method5:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0140A0E1           MOV      R4,R1
   2268            DirectRedrawGUI();
   \   00000008   3F0100EF           SWI      +319
   2269            if (msg->gbsmsg->msg==KEY_DOWN)
   \   0000000C   040094E5           LDR      R0,[R4, #+4]
   \   00000010   9320A0E3           MOV      R2,#+147
   \   00000014   041090E5           LDR      R1,[R0, #+4]
   \   00000018   402F82E3           ORR      R2,R2,#0x100
   \   0000001C   020051E1           CMP      R1,R2
   \   00000020   1000001A           BNE      ??method5_0
   2270            {
   2271              switch(msg->gbsmsg->submess)
   \   00000024   080090E5           LDR      R0,[R0, #+8]
   \   00000028   ........           LDR      R4,??DataTable118  ;; S_ICONS
   \   0000002C   010050E2           SUBS     R0,R0,#+1
   \   00000030   0600000A           BEQ      ??method5_1
   \   00000034   030050E2           SUBS     R0,R0,#+3
   \   00000038   0600000A           BEQ      ??method5_2
   \   0000003C   070050E2           SUBS     R0,R0,#+7
   \   00000040   0A00000A           BEQ      ??method5_3
   \   00000044   250050E2           SUBS     R0,R0,#+37
   \   00000048   1600000A           BEQ      ??method5_4
   \   0000004C   050000EA           B        ??method5_0
   2272              {
   2273              case LEFT_SOFT:
   2274                return(1); //Происходит вызов GeneralFunc для тек. GUI -> закрытие GUI
   \                     ??method5_1:
   \   00000050   0100A0E3           MOV      R0,#+1
   \   00000054   1080BDE8           POP      {R4,PC}
   2275              case RIGHT_SOFT:
   2276                //      if (cltop) remake_clmenu();
   2277                if (cltop) create_contactlist_menu();
   \                     ??method5_2:
   \   00000058   FC0094E5           LDR      R0,[R4, #+252]
   \   0000005C   000050E3           CMP      R0,#+0
   \   00000060   1080BD08           POPEQ    {R4,PC}
   \   00000064   ........           BL       create_contactlist_menu
   2278                break;
   2279              case GREEN_BUTTON:
   2280                disautorecconect=0;
   2281                if ((connect_state==0)&&(sock==-1))
   2282                {
   2283                  GBS_DelTimer(&reconnect_tmr);
   2284          	DNR_TRIES=3;
   2285                  SUBPROC((void *)create_connect);
   2286                }
   2287                break;
   2288              case '0':
   2289                SUBPROC((void*)end_socket);
   2290                GBS_DelTimer(&reconnect_tmr);
   2291                DNR_TRIES=3;
   2292                SUBPROC((void *)create_connect);
   2293                break;
   2294              }
   2295            }
   2296            return(0);
   \                     ??method5_0:
   \   00000068   0000A0E3           MOV      R0,#+0
   \   0000006C   1080BDE8           POP      {R4,PC}          ;; return
   \                     ??method5_3:
   \   00000070   0000A0E3           MOV      R0,#+0
   \   00000074   A40084E5           STR      R0,[R4, #+164]
   \   00000078   D40094E5           LDR      R0,[R4, #+212]
   \   0000007C   000050E3           CMP      R0,#+0
   \   00000080   D8009405           LDREQ    R0,[R4, #+216]
   \   00000084   01007003           CMNEQ    R0,#+1
   \   00000088   F6FFFF1A           BNE      ??method5_0
   \                     ??method5_5:
   \   0000008C   EA0F84E2           ADD      R0,R4,#+936
   \   00000090   8C0100EF           SWI      +396
   \   00000094   0300A0E3           MOV      R0,#+3
   \   00000098   180184E5           STR      R0,[R4, #+280]
   \   0000009C   ........           LDR      R0,??DataTable102  ;; create_connect
   \   000000A0   710100EF           SWI      +369
   \   000000A4   EFFFFFEA           B        ??method5_0
   \                     ??method5_4:
   \   000000A8   ........           LDR      R0,??DataTable106  ;; end_socket
   \   000000AC   710100EF           SWI      +369
   \   000000B0   F5FFFFEA           B        ??method5_5
   2297          }
   2298          

   \                                 In segment CODE, align 4, keep-with-next
   2299          int method8(void){return(0);}
   \                     method8:
   \   00000000                      REQUIRE ?Subroutine102
   \   00000000                      ;; // Fall through to label ?Subroutine102
   2300          

   \                                 In segment CODE, align 4, keep-with-next
   2301          int method9(void){return(0);}
   \                     method9:
   \   00000000   ........           B        ?Subroutine102

   \                                 In segment DATA_C, align 4, align-sorted
   2302          
   2303          const void * const gui_methods[11]={
   2304            (void *)method0,  //Redraw
   2305            (void *)method1,  //Create
   2306            (void *)method2,  //Close
   2307            (void *)method3,  //Focus
   2308            (void *)method4,  //Unfocus
   2309            (void *)method5,  //OnKey
   2310            0,
   2311            (void *)kill_data, //method7, //Destroy
   2312            (void *)method8,
   2313            (void *)method9,
   2314            0
   2315          };
   2316          
   2317          const RECT Canvas={0,0,0,0};
   \                     Canvas:
   \   00000000   000000000000       DC16 0, 0, 0, 0
   \              0000        
   \                     percent_t:
   \   00000008   257400             DC8 "%t"
   \                     percent_d:
   \   0000000B   256400             DC8 "%d"
   \                     empty_str:
   \   0000000E   00                 DC8 ""
   \   0000000F   00                 DC8 0
   \   00000010   2563257400         DC8 "%c%t"
   \   00000015   000000             DC8 0, 0, 0
   \   00000018   2825642F2564       DC8 "(%d/%d)"
   \              2900        
   \   00000020   EEF8E8E1EAE0       DC8 "\356\370\350\341\352\340"
   \              00          
   \   00000027   00                 DC8 0
   \   00000028   53746174653A       DC8 53H, 74H, 61H, 74H, 65H, 3AH, 20H, 25H
   \              2025        
   \   00000030   642C20525873       DC8 64H, 2CH, 20H, 52H, 58H, 73H, 74H, 61H
   \              7461        
   \   00000038   74653A202564       DC8 74H, 65H, 3AH, 20H, 25H, 64H, 0AH, 52H
   \              0A52        
   \   00000040   783A2564622C       DC8 78H, 3AH, 25H, 64H, 62H, 2CH, 54H, 78H
   \              5478        
   \   00000048   3A2564620A51       DC8 3AH, 25H, 64H, 62H, 0AH, 51H, 75H, 65H
   \              7565        
   \   00000050   75653A202564       DC8 75H, 65H, 3AH, 20H, 25H, 64H, 62H, 0AH
   \              620A        
   \   00000058   25730A257400       DC8 25H, 73H, 0AH, 25H, 74H, 0
   \   0000005E   0000               DC8 0, 0
   \   00000060   0A4C6F616469       DC8 "\012Loading images..."
   \              6E6720696D61
   \              6765732E2E2E
   \              00          
   \   00000073   00                 DC8 0
   \   00000074   434C69737400       DC8 "CList"
   \   0000007A   0000               DC8 0, 0
   \   0000007C   4578697400         DC8 "Exit"
   \   00000081   000000             DC8 0, 0, 0
   \   00000084   4E6174494351       DC8 "NatICQ config updated!"
   \              20636F6E6669
   \              672075706461
   \              7465642100  
   \   0000009B   00                 DC8 0
   \   0000009C   475052532075       DC8 "GPRS up, wait 10 sec..."
   \              702C20776169
   \              742031302073
   \              65632E2E2E00
   \   000000B4   54727920746F       DC8 "Try to login..."
   \              206C6F67696E
   \              2E2E2E00    
   \   000000C4   CDE520E220F1       DC8 "\315\345 \342 \361\357\350\361\352\345"
   \              EFE8F1EAE500
   \   000000D0   CDE5E2E5F0ED       DC8 "\315\345\342\345\360\355\356\345 \361\356\356\341\371\345\355\350\345 ENIP_SOCK_CONNECTED!"
   \              EEE520F1EEEE
   \              E1F9E5EDE8E5
   \              20454E49505F
   \              534F434B5F43
   \              4F4E4E454354
   \              45442100    
   \   000000F8   CDE5E2E5F0ED       DC8 "\315\345\342\345\360\355\356\345 \361\356\356\341\371\345\355\350\345 ENIP_DATA_READ"
   \              EEE520F1EEEE
   \              E1F9E5EDE8E5
   \              20454E49505F
   \              444154415F52
   \              45414400    
   \   0000011A   0000               DC8 0, 0
   \   0000011C   446973636F6E       DC8 "Disconnected, %d bytes not sended!"
   \              6E6563746564
   \              2C2025642062
   \              79746573206E
   \              6F742073656E
   \              6465642100  
   \   0000013F   00                 DC8 0
   \   00000140   25730A526563       DC8 "%s\012Reconect after %d second..."
   \              6F6E65637420
   \              616674657220
   \              256420736563
   \              6F6E642E2E2E
   \              00          
   \   0000015F   00                 DC8 0
   \   00000160   4C6F6F706261       DC8 "Loopback"
   \              636B00      
   \   00000169   000000             DC8 0, 0, 0
   \                     ipc_my_name:
   \   0000016C   4E6174494351       DC8 "NatICQ"
   \              00          
   \   00000173   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000183   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000      
   \                     ipc_xtask_name:
   \   0000018C   585461736B00       DC8 "XTask"
   \   00000192   0000               DC8 0, 0
   \                     x_status_change:
   \   00000194   582D53746174       DC8 "X-Status change"
   \              757320636861
   \              6E676500    
   \                     gui_methods:
   \   000001A4   ............       DC32 method0, method1, method2, method3, method4, method5, 0H
   \              ............
   \              ............
   \              ............
   \              00000000    
   \   000001C0   ............       DC32 kill_data, method8, method9, 0H
   \              ............
   \              00000000    

   \                                 In segment DATA_C, align 4, align-sorted
   \                     S_OFFLINE:
   \   00000000   4F66666C696E       DC8 "Offline"
   \              6500        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     S_INVISIBLE:
   \   00000000   496E76697369       DC8 "Invisible"
   \              626C6500    
   \   0000000A   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     S_AWAY:
   \   00000000   4177617900         DC8 "Away"
   \   00000005   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     S_NA:
   \   00000000   4E2F4100           DC8 "N/A"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     S_OCCUPIED:
   \   00000000   4F6363757069       DC8 "Occupied"
   \              656400      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     S_DND:
   \   00000000   444E4400           DC8 "DND"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     S_ONLINE:
   \   00000000   4F6E6C696E65       DC8 "Online"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     S_FFC:
   \   00000000   46464300           DC8 "FFC"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     icons_names:
   \   00000000   ............       DC32 `?<Constant "offline.png">`, `?<Constant "invisible.png">`
   \              ....        
   \   00000008   ............       DC32 `?<Constant "away.png">`, `?<Constant "na.png">`
   \              ....        
   \   00000010   ............       DC32 `?<Constant "occupied.png">`, `?<Constant "dnd.png">`
   \              ....        
   \   00000018   ............       DC32 `?<Constant "depression.png">`, `?<Constant "evil.png">`
   \              ....        
   \   00000020   ............       DC32 `?<Constant "home.png">`, `?<Constant "lunch.png">`
   \              ....        
   \   00000028   ............       DC32 `?<Constant "work.png">`, `?<Constant "online.png">`
   \              ....        
   \   00000030   ............       DC32 `?<Constant "ffc.png">`, `?<Constant "message.png">`
   \              ....        
   \   00000038   ............       DC32 `?<Constant "unknown.png">`, `?<Constant "groupon.png">`
   \              ....        
   \   00000040   ............       DC32 `?<Constant "groupoff.png">`, `?<Constant "null.png">`
   \              ....        
   \   00000048   ............       DC32 `?<Constant "addcont.png">`, `?<Constant "head.png">`
   \              ....        
   \   00000050   ............       DC32 `?<Constant "logo.png">`, `?<Constant "ping.png">`
   \              ....        
   \   00000058   ............       DC32 `?<Constant "settings.png">`, `?<Constant "vis1.png">`
   \              ....        
   \   00000060   ............       DC32 `?<Constant "vis2.png">`, `?<Constant "vis3.png">`
   \              ....        
   \   00000068   ............       DC32 `?<Constant "vis4.png">`, `?<Constant "vis5.png">`
   \              ....        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\302\\373 \\340\\342\\362\\356\\360\\350\\`:
   \   00000000   C2FB20E0E2F2       DC8 "\302\373 \340\342\362\356\360\350\347\356\342\340\355\373"
   \              EEF0E8E7EEE2
   \              E0EDFB00    
   \                     I_str:
   \   00000010   4900               DC8 "I"
   \   00000012   0000               DC8 0, 0
   \   00000014   25735C746D70       DC8 "%s\\tmp%u.url"
   \              25752E75726C
   \              00          
   \   00000021   000000             DC8 0, 0, 0
   \   00000024   526571756573       DC8 "Request info..."
   \              7420696E666F
   \              2E2E2E00    

   \                                 In segment DATA_C, align 4, align-sorted
   \                     def_setting:
   \   00000000   25736465665F       DC8 "%sdef_settings_%d"
   \              73657474696E
   \              67735F256400
   \   00000012   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     key_clmenu_sk_r:
   \   00000000   3C4300             DC8 "<C"
   \   00000003   00                 DC8 0
   \   00000004   CAEEEDF2E0EA       DC8 "\312\356\355\362\340\352\362\373..."
   \              F2FB2E2E2E00
   \   00000010   C2E2EEE42054       DC8 "\302\342\356\344 T9: "
   \              393A2000    
   \   0000001A   0000               DC8 0, 0
   \   0000001C   C7E0EAF0FBF2       DC8 "\307\340\352\360\373\362\374"
   \              FC00        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     contactlist_menuhdr:
   \   00000000   000000000000       DC16 0, 0, 0, 0
   \              0000        
   \   00000008   ............       DC32 S_ICONS + 4CH, clm_hdr_text, 2147483647
   \              ....FFFFFF7F
   \   00000014   08000000....       DC32 8, contactlist_menu_onkey, contactlist_menu_ghook, 0H
   \              ............
   \              00000000    
   \   00000024   ............       DC32 menusoftkeys, clmenu_skt, 17, contactlist_menu_iconhndl, 0H, 0H, 0
   \              ....11000000
   \              ........0000
   \              000000000000
   \              00000000    
   \   00000040   01000000           DC32 1

   \                                 In segment DATA_C, align 4, align-sorted
   \                     menusoftkeys:
   \   00000000   000000000100       DC32 0, 1, 2
   \              000002000000

   \                                 In segment DATA_C, align 4, align-sorted
   \                     menu_sk:
   \   00000000   18000000           DC16 24, 0
   \   00000004   ........           DC32 `?<Constant "\\302\\373\\341\\356\\360">`
   \   00000008   01000000           DC16 1, 0
   \   0000000C   ........           DC32 `?<Constant "\\307\\340\\352\\360\\373\\362\\374">`
   \   00000010   3D000000           DC16 61, 0
   \   00000014   FBC0FF7F           DC32 2147467515

   \                                 In segment DATA_C, align 4, align-sorted
   \                     clmenu_sk:
   \   00000000   18000000           DC16 24, 0
   \   00000004   ........           DC32 `?<Constant "\\316\\357\\366\\350\\350">`
   \   00000008   01000000           DC16 1, 0
   \   0000000C   ........           DC32 clmenu_sk_r
   \   00000010   3D000000           DC16 61, 0
   \   00000014   FBC0FF7F           DC32 2147467515

   \                                 In segment DATA_C, align 4, align-sorted
   \                     menu_skt:
   \   00000000   ........0000       DC32 menu_sk, 0
   \              0000        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     clmenu_skt:
   \   00000000   ........0000       DC32 clmenu_sk, 0
   \              0000        
   2318          

   \                                 In segment CODE, align 4, keep-with-next
   2319          void maincsm_oncreate(CSM_RAM *data)
   2320          {
   \                     maincsm_oncreate:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0050A0E1           MOV      R5,R0
   2321            MAIN_GUI *main_gui=malloc(sizeof(MAIN_GUI));
   \   00000008   4000A0E3           MOV      R0,#+64
   2322            MAIN_CSM*csm=(MAIN_CSM*)data;
   2323            zeromem(main_gui,sizeof(MAIN_GUI));
   2324            patch_rect((RECT*)&Canvas,0,0,ScreenW()-1,ScreenH()-1);
   \   0000000C   0070A0E3           MOV      R7,#+0
   \   00000010   140000EF           SWI      +20
   \   00000014   0060A0E1           MOV      R6,R0
   \   00000018   4010A0E3           MOV      R1,#+64
   \   0000001C   1D0100EF           SWI      +285
   \   00000020   898100EF           SWI      +33161
   \   00000024   0040A0E1           MOV      R4,R0
   \   00000028   888100EF           SWI      +33160
   \   0000002C   011044E2           SUB      R1,R4,#+1
   \   00000030   B8409FE5           LDR      R4,??maincsm_oncreate_0  ;; Canvas
   \   00000034   010040E2           SUB      R0,R0,#+1
   \   00000038   007084E5           STR      R7,[R4, #+0]
   \   0000003C   B400C4E1           STRH     R0,[R4, #+4]
   \   00000040   B610C4E1           STRH     R1,[R4, #+6]
   2325            main_gui->gui.canvas=(void *)(&Canvas);
   \   00000044   004086E5           STR      R4,[R6, #+0]
   2326          //  main_gui->gui.flag30=2;
   2327            main_gui->gui.methods=(void *)gui_methods;
   \   00000048   690F84E2           ADD      R0,R4,#+420
   \   0000004C   040086E5           STR      R0,[R6, #+4]
   2328            main_gui->gui.item_ll.data_mfree=(void (*)(void *))mfree_adr();
   \   00000050   158000EF           SWI      +32789
   \   00000054   200086E5           STR      R0,[R6, #+32]
   2329            csm->csm.state=0;
   \   00000058   107085E5           STR      R7,[R5, #+16]
   2330            csm->csm.unk1=0;
   \   0000005C   147085E5           STR      R7,[R5, #+20]
   2331            maingui_id=csm->gui_id=CreateGUI(main_gui);
   \   00000060   0600A0E1           MOV      R0,R6
   \   00000064   370100EF           SWI      +311
   \   00000068   280085E5           STR      R0,[R5, #+40]
   \   0000006C   ........           LDR      R5,??DataTable118  ;; S_ICONS
   \   00000070   900085E5           STR      R0,[R5, #+144]
   2332            ews=AllocWS(16384);
   \   00000074   400CA0E3           MOV      R0,#+16384
   \   00000078   250100EF           SWI      +293
   2333            //  MutexCreate(&contactlist_mtx);
   2334            DNR_TRIES=3;
   2335            //  SUBPROC((void *)InitSmiles);
   2336            //  SUBPROC((void *)create_connect);
   2337            GBS_StartTimerProc(&tmr_active,TMR_SECOND*10,process_active_timer);
   \   0000007C   ........           LDR      R2,??DataTable86  ;; process_active_timer
   \   00000080   9C0085E5           STR      R0,[R5, #+156]
   \   00000084   0300A0E3           MOV      R0,#+3
   \   00000088   180185E5           STR      R0,[R5, #+280]
   \   0000008C   871EA0E3           MOV      R1,#+2160
   \   00000090   EE0F85E2           ADD      R0,R5,#+952
   \   00000094   4D0000EF           SWI      +77
   2338            sprintf((char *)ipc_my_name+6,percent_d,UIN);
   \   00000098   ........           LDR      R0,??DataTable113  ;; UIN
   \   0000009C   0B1084E2           ADD      R1,R4,#+11
   \   000000A0   002090E5           LDR      R2,[R0, #+0]
   \   000000A4   7200A0E3           MOV      R0,#+114
   \   000000A8   400F80E3           ORR      R0,R0,#0x100
   \   000000AC   040080E0           ADD      R0,R0,R4
   \   000000B0   160000EF           SWI      +22
   2339            gipc.name_to=ipc_my_name;
   \   000000B4   5B0FA0E3           MOV      R0,#+364
   \   000000B8   041080E0           ADD      R1,R0,R4
   \   000000BC   741085E5           STR      R1,[R5, #+116]
   2340            gipc.name_from=ipc_my_name;
   \   000000C0   040080E0           ADD      R0,R0,R4
   \   000000C4   780085E5           STR      R0,[R5, #+120]
   2341            gipc.data=(void *)-1;
   \   000000C8   0700E0E1           MVN      R0,R7
   \   000000CC   7C0085E5           STR      R0,[R5, #+124]
   2342            GBS_SendMessage(MMI_CEPID,MSG_IPC,IPC_CHECK_DOUBLERUN,&gipc);
   \   000000D0   743085E2           ADD      R3,R5,#+116
   \   000000D4   0120A0E3           MOV      R2,#+1
   \   000000D8   B010A0E3           MOV      R1,#+176
   \   000000DC   DE1C81E3           ORR      R1,R1,#0xDE00
   \   000000E0   0900A0E3           MOV      R0,#+9
   \   000000E4   420C80E3           ORR      R0,R0,#0x4200
   \   000000E8   000100EF           SWI      +256
   2343          }
   \   000000EC   F080BDE8           POP      {R4-R7,PC}       ;; return
   \                     ??maincsm_oncreate_0:
   \   000000F0   ........           DC32     Canvas
   2344          

   \                                 In segment CODE, align 4, keep-with-next
   2345          void maincsm_onclose(CSM_RAM *csm)
   2346          {
   \                     maincsm_onclose:
   \   00000000   10402DE9           PUSH     {R4,LR}
   2347            WriteDefSettings();
   2348            //  SaveConfigData(successed_config_filename);
   2349          /*
   2350            #pragma segment="CONFIG_C"
   2351            unsigned int ul;
   2352            int f;
   2353            extern const CFG_HDR cfghdr0; //first var in CONFIG
   2354            void *cfg=(void*)&cfghdr0;
   2355            unsigned int len=(int)__segment_end("CONFIG_C")-(int)__segment_begin("CONFIG_C");
   2356          
   2357            if ((f=fopen("4:\\ZBin\\etc\\NATICQ.bcfg",A_ReadWrite+A_Create+A_Truncate,P_READ+P_WRITE,&ul))==-1){
   2358             f=fopen("0:\\ZBin\\etc\\NATICQ.bcfg",A_ReadWrite+A_Create+A_Truncate,P_READ+P_WRITE,&ul);
   2359            }
   2360            fwrite(f,cfg,len,&ul);
   2361            fclose(f,&ul);
   2362          */
   2363          
   2364            //  GBS_DelTimer(&tmr_dorecv);
   2365            GBS_DelTimer(&tmr_active);
   \   00000004   ........           LDR      R4,??DataTable118  ;; S_ICONS
   \   00000008   ........           BL       WriteDefSettings
   \   0000000C   EE0F84E2           ADD      R0,R4,#+952
   \   00000010   8C0100EF           SWI      +396
   2366          //  GBS_DelTimer(&tmr_ping);
   2367            GBS_DelTimer(&tmr_vibra);
   \   00000014   E60F84E2           ADD      R0,R4,#+920
   \   00000018   8C0100EF           SWI      +396
   2368            GBS_DelTimer(&reconnect_tmr);
   \   0000001C   EA0F84E2           ADD      R0,R4,#+936
   \   00000020   8C0100EF           SWI      +396
   2369            GBS_DelTimer(&tmr_illumination);
   \   00000024   E20F84E2           ADD      R0,R4,#+904
   \   00000028   8C0100EF           SWI      +396
   2370            SetVibration(0);
   \   0000002C   0000A0E3           MOV      R0,#+0
   \   00000030   7C0000EF           SWI      +124
   2371            FreeTemplates();
   \   00000034   ........           BL       FreeTemplates
   2372            FreeCLIST();
   \   00000038   ........           _BLF     FreeCLIST,??FreeCLIST??rA
   2373            free_ICONS();
   \   0000003C   ........           BL       free_ICONS
   2374            //  FreeSmiles();
   2375            FreeWS(ews);
   \   00000040   9C0094E5           LDR      R0,[R4, #+156]
   \   00000044   290100EF           SWI      +297
   2376            FreeXStatusText();
   \   00000048   ........           _BLF     FreeXStatusText,??FreeXStatusText??rA
   2377            //  MutexDestroy(&contactlist_mtx);
   2378            SUBPROC((void *)FreeSmiles);
   \   0000004C   24009FE5           LDR      R0,??maincsm_onclose_0  ;; FreeSmiles
   \   00000050   710100EF           SWI      +369
   2379            SUBPROC((void *)FreeXStatusesImg);
   \   00000054   20009FE5           LDR      R0,??maincsm_onclose_0+0x4  ;; FreeXStatusesImg
   \   00000058   710100EF           SWI      +369
   2380            SUBPROC((void *)end_socket);
   \   0000005C   ........           LDR      R0,??DataTable106  ;; end_socket
   \   00000060   710100EF           SWI      +369
   2381            SUBPROC((void *)ClearSendQ);
   \   00000064   ........           LDR      R0,??DataTable107  ;; ClearSendQ
   \   00000068   710100EF           SWI      +369
   2382            SUBPROC((void *)ElfKiller);
   \   0000006C   ........           LDR      R0,??DataTable115  ;; ElfKiller
   \   00000070   710100EF           SWI      +369
   2383          }
   \   00000074   1080BDE8           POP      {R4,PC}          ;; return
   \                     ??maincsm_onclose_0:
   \   00000078   ........           DC32     FreeSmiles
   \   0000007C   ........           DC32     FreeXStatusesImg
   2384          

   \                                 In segment CODE, align 4, keep-with-next
   2385          void do_reconnect(void)
   2386          {
   2387            if (is_gprs_online)
   \                     do_reconnect:
   \   00000000   ........           LDR      R0,??DataTable118  ;; S_ICONS
   \   00000004   00402DE9           PUSH     {LR}
   \   00000008   F41090E5           LDR      R1,[R0, #+244]
   \   0000000C   000051E3           CMP      R1,#+0
   \   00000010   0080BD08           POPEQ    {PC}
   2388            {
   2389              DNR_TRIES=3;
   \   00000014   0310A0E3           MOV      R1,#+3
   \   00000018   181180E5           STR      R1,[R0, #+280]
   2390              SUBPROC((void*)create_connect);
   \   0000001C   ........           LDR      R0,??DataTable102  ;; create_connect
   \   00000020   710100EF           SWI      +369
   2391            }
   2392          }
   \   00000024   0080BDE8           POP      {PC}             ;; return
   2393          

   \                                 In segment CODE, align 4, keep-with-next
   2394          void CheckDoubleRun(void)
   2395          {
   \                     CheckDoubleRun:
   \   00000000   10402DE9           PUSH     {R4,LR}
   2396            int csm_id;
   2397            if ((csm_id=(int)(gipc.data))!=-1)
   \   00000004   ........           LDR      R4,??DataTable118  ;; S_ICONS
   \   00000008   7C0094E5           LDR      R0,[R4, #+124]
   \   0000000C   010070E3           CMN      R0,#+1
   \   00000010   1100000A           BEQ      ??CheckDoubleRun_0
   2398            {
   2399              gipc.name_to=ipc_xtask_name;
   \   00000014   ........           LDR      R1,??DataTable95  ;; Canvas
   2400              gipc.name_from=ipc_my_name;
   2401              gipc.data=(void *)csm_id;
   \   00000018   7C0084E5           STR      R0,[R4, #+124]
   \   0000001C   632F81E2           ADD      R2,R1,#+396
   \   00000020   742084E5           STR      R2,[R4, #+116]
   \   00000024   5B1F81E2           ADD      R1,R1,#+364
   \   00000028   781084E5           STR      R1,[R4, #+120]
   2402              GBS_SendMessage(MMI_CEPID,MSG_IPC,IPC_XTASK_SHOW_CSM,&gipc);
   \   0000002C   743084E2           ADD      R3,R4,#+116
   \   00000030   0220A0E3           MOV      R2,#+2
   \   00000034   B010A0E3           MOV      R1,#+176
   \   00000038   DE1C81E3           ORR      R1,R1,#0xDE00
   \   0000003C   0900A0E3           MOV      R0,#+9
   \   00000040   420C80E3           ORR      R0,R0,#0x4200
   \   00000044   000100EF           SWI      +256
   2403              LockSched();
   \   00000048   460100EF           SWI      +326
   2404              CloseCSM(maincsm_id);
   \   0000004C   8C0094E5           LDR      R0,[R4, #+140]
   \   00000050   FC0100EF           SWI      +508
   2405              //ShowMSG(1,(int)LG_ALREADY_STARTED);
   2406              UnlockSched();
   \   00000054   470100EF           SWI      +327
   \   00000058   1080BDE8           POP      {R4,PC}
   2407            }
   2408            else
   2409            {
   2410              InitXStatusesImg();
   \                     ??CheckDoubleRun_0:
   \   0000005C   ........           _BLF     InitXStatusesImg,??InitXStatusesImg??rA
   2411              //InitSmiles(); Это вызовется из InitXStatusesImg
   2412              create_connect();
   \   00000060   ........           BL       create_connect
   2413            }
   2414          }
   \   00000064   1080BDE8           POP      {R4,PC}          ;; return
   2415          

   \                                 In segment CODE, align 4, keep-with-next
   2416          int maincsm_onmessage(CSM_RAM *data,GBS_MSG *msg)
   2417          {
   \                     maincsm_onmessage:
   \   00000000   F14F2DE9           PUSH     {R0,R4-R11,LR}
   \   00000004   10D04DE2           SUB      SP,SP,#+16
   \   00000008   ........           LDR      R5,??DataTable96  ;; S_ICONS
   \   0000000C   ........           LDR      R7,??DataTable97  ;; Canvas
   \   00000010   0140A0E1           MOV      R4,R1
   \   00000014   040094E5           LDR      R0,[R4, #+4]
   \   00000018   0060A0E3           MOV      R6,#+0
   \   0000001C   B010A0E3           MOV      R1,#+176
   \   00000020   DE1C81E3           ORR      R1,R1,#0xDE00
   \   00000024   010050E1           CMP      R0,R1
   \   00000028   6700001A           BNE      ??maincsm_onmessage_2
   2418            extern const int VIBR_ON_CONNECT;
   2419          
   2420            //  char ss[100];
   2421            MAIN_CSM *csm=(MAIN_CSM*)data;
   2422            {
   2423              //IPC
   2424              if (msg->msg==MSG_IPC)
   2425              {
   2426                IPC_REQ *ipc;
   2427                if ((ipc=(IPC_REQ*)msg->data0))
   \   0000002C   0C8094E5           LDR      R8,[R4, #+12]
   \   00000030   000058E3           CMP      R8,#+0
   \   00000034   6400000A           BEQ      ??maincsm_onmessage_2
   2428                {
   2429          	if (strcmp_nocase(ipc->name_to,ipc_my_name)==0)
   \   00000038   000098E5           LDR      R0,[R8, #+0]
   \   0000003C   5B9FA0E3           MOV      R9,#+364
   \   00000040   071089E0           ADD      R1,R9,R7
   \   00000044   ........           _BLF     strcmp_nocase,??strcmp_nocase??rA
   \   00000048   000050E3           CMP      R0,#+0
   \   0000004C   5E00001A           BNE      ??maincsm_onmessage_2
   2430          	{
   2431          	  switch (msg->submess)
   \   00000050   081094E5           LDR      R1,[R4, #+8]
   \   00000054   040098E5           LDR      R0,[R8, #+4]
   \   00000058   011041E2           SUB      R1,R1,#+1
   \   0000005C   040051E3           CMP      R1,#+4
   \   00000060   5900008A           BHI      ??maincsm_onmessage_2
   \   00000064   012F8FE2           ADR      R2,??maincsm_onmessage_0
   \   00000068   0120D2E7           LDRB     R2,[R2, R1]
   \   0000006C   02F18FE0           ADD      PC,PC,R2, LSL #+2
   \                     ??maincsm_onmessage_0:
   \   00000070   010A1116           DC8      +1,+10,+17,+22
   \   00000074   3D000000           DC8      +61,+0,+0,+0
   2432          	  {
   2433          	  case IPC_CHECK_DOUBLERUN:
   2434          	    //Если приняли свое собственное сообщение, значит запускаем чекер
   2435          	    if (ipc->name_from==ipc_my_name) SUBPROC((void *)CheckDoubleRun);
   \                     ??maincsm_onmessage_3:
   \   00000078   071089E0           ADD      R1,R9,R7
   \   0000007C   010050E1           CMP      R0,R1
   \   00000080   0200001A           BNE      ??maincsm_onmessage_4
   \   00000084   70059FE5           LDR      R0,??maincsm_onmessage_5  ;; CheckDoubleRun
   \   00000088   710100EF           SWI      +369
   \   0000008C   4E0000EA           B        ??maincsm_onmessage_2
   2436                      else ipc->data=(void *)maincsm_id;
   \                     ??maincsm_onmessage_4:
   \   00000090   8C0095E5           LDR      R0,[R5, #+140]
   \   00000094   080088E5           STR      R0,[R8, #+8]
   \   00000098   4B0000EA           B        ??maincsm_onmessage_2
   2437          	    break;
   2438          	  case IPC_SMILE_PROCESSED:
   2439          	    //Только собственные смайлы ;)
   2440          	    if (ipc->name_from==ipc_my_name) SUBPROC((void *)ProcessNextSmile);
   \                     ??maincsm_onmessage_6:
   \   0000009C   071089E0           ADD      R1,R9,R7
   \   000000A0   010050E1           CMP      R0,R1
   \   000000A4   0100001A           BNE      ??maincsm_onmessage_7
   \   000000A8   50059FE5           LDR      R0,??maincsm_onmessage_5+0x4  ;; ProcessNextSmile
   \                     ??maincsm_onmessage_8:
   \   000000AC   710100EF           SWI      +369
   2441          	    SMART_REDRAW();
   \                     ??maincsm_onmessage_7:
   \   000000B0   ........           BL       SMART_REDRAW
   \   000000B4   440000EA           B        ??maincsm_onmessage_2
   2442          	    break;
   2443          	  case IPC_XSTATUSIMG_PROCESSED:
   2444          	    //Только собственные иксстатусы ;)
   2445          	    if (ipc->name_from==ipc_my_name) SUBPROC((void *)ProcessNextXStatImg);
   \                     ??maincsm_onmessage_9:
   \   000000B8   071089E0           ADD      R1,R9,R7
   \   000000BC   010050E1           CMP      R0,R1
   \   000000C0   FAFFFF1A           BNE      ??maincsm_onmessage_7
   \   000000C4   38059FE5           LDR      R0,??maincsm_onmessage_5+0x8  ;; ProcessNextXStatImg
   \   000000C8   F7FFFFEA           B        ??maincsm_onmessage_8
   2446          	    SMART_REDRAW();
   2447          	    break;
   2448          	  case IPC_TENSECONDS:
   2449          	    //Только свое сообщение
   2450          	    if (ipc->name_from==ipc_my_name)
   \                     ??maincsm_onmessage_10:
   \   000000CC   071089E0           ADD      R1,R9,R7
   \   000000D0   010050E1           CMP      R0,R1
   \   000000D4   3C00001A           BNE      ??maincsm_onmessage_2
   2451          	    {
   2452          	      CLIST *t=(CLIST *)cltop;
   \   000000D8   FC0095E5           LDR      R0,[R5, #+252]
   2453          	      int f=0;
   \   000000DC   0010A0E3           MOV      R1,#+0
   \   000000E0   060000EA           B        ??maincsm_onmessage_11
   2454          	      while(t)
   2455          	      {
   2456          		if (t->isactive)
   \                     ??maincsm_onmessage_12:
   \   000000E4   702090E5           LDR      R2,[R0, #+112]
   \   000000E8   000052E3           CMP      R2,#+0
   \   000000EC   0200000A           BEQ      ??maincsm_onmessage_13
   2457          		{
   2458          		  if (!(--(t->isactive))) f=1; //Если дошли до 0 хотя бы один раз - надо перерисовать меню
   \   000000F0   012052E2           SUBS     R2,R2,#+1
   \   000000F4   702080E5           STR      R2,[R0, #+112]
   \   000000F8   0110A003           MOVEQ    R1,#+1
   2459          		}
   2460          		t=(CLIST *)(t->next);
   \                     ??maincsm_onmessage_13:
   \   000000FC   000090E5           LDR      R0,[R0, #+0]
   2461          	      }
   \                     ??maincsm_onmessage_11:
   \   00000100   000050E3           CMP      R0,#+0
   \   00000104   F6FFFF1A           BNE      ??maincsm_onmessage_12
   2462          	      if (f)
   \   00000108   000051E3           CMP      R1,#+0
   \   0000010C   0900000A           BEQ      ??maincsm_onmessage_14
   2463          	      {
   2464          		CLIST *oldt=NULL;
   2465          		if (contactlist_menu_id)
   \   00000110   041195E5           LDR      R1,[R5, #+260]
   \   00000114   000051E3           CMP      R1,#+0
   \   00000118   0400000A           BEQ      ??maincsm_onmessage_15
   2466          		{
   2467          		  oldt=FindContactByN(GetCurMenuItem(FindGUIbyId(contactlist_menu_id,NULL)));
   \   0000011C   040195E5           LDR      R0,[R5, #+260]
   \   00000120   0010A0E3           MOV      R1,#+0
   \   00000124   090200EF           SWI      +521
   \   00000128   8F0100EF           SWI      +399
   \   0000012C   ........           _BLF     FindContactByN,??FindContactByN??rA
   2468          		}
   2469          		RecountMenu(oldt, 1);
   \                     ??maincsm_onmessage_15:
   \   00000130   0110A0E3           MOV      R1,#+1
   \   00000134   ........           BL       RecountMenu
   2470          	      }
   2471          	      if (time_to_stop_t9)
   \                     ??maincsm_onmessage_14:
   \   00000138   200195E5           LDR      R0,[R5, #+288]
   \   0000013C   000050E3           CMP      R0,#+0
   \   00000140   2100000A           BEQ      ??maincsm_onmessage_2
   2472          	      {
   2473          		if (!(--time_to_stop_t9))
   \   00000144   010050E2           SUBS     R0,R0,#+1
   \   00000148   200185E5           STR      R0,[R5, #+288]
   \   0000014C   1E00001A           BNE      ??maincsm_onmessage_2
   2474          		{
   2475          		  if (IsGuiOnTop(edchat_id)) RefreshGUI();
   \   00000150   080195E5           LDR      R0,[R5, #+264]
   \   00000154   350100EF           SWI      +309
   \   00000158   000050E3           CMP      R0,#+0
   \   0000015C   1A00000A           BEQ      ??maincsm_onmessage_2
   \   00000160   960100EF           SWI      +406
   \   00000164   180000EA           B        ??maincsm_onmessage_2
   2476          		}
   2477          	      }
   2478          	    }
   2479          	    break;
   2480               	  case IPC_SENDMSG: ;                                   //IPC_SENDMSG by BoBa 26.06.07
   2481                      int l=strlen(((IPCMsg *)(ipc->data))->msg);
   \                     ??maincsm_onmessage_16:
   \   00000168   080098E5           LDR      R0,[R8, #+8]
   \   0000016C   040090E5           LDR      R0,[R0, #+4]
   \   00000170   1B0000EF           SWI      +27
   \   00000174   0090A0E1           MOV      R9,R0
   2482                      TPKT *msg=malloc(sizeof(PKT)+l);
   \   00000178   080089E2           ADD      R0,R9,#+8
   \   0000017C   140000EF           SWI      +20
   \   00000180   00A0A0E1           MOV      R10,R0
   2483                      msg->pkt.uin=((IPCMsg *)(ipc->data))->uin;
   \   00000184   080098E5           LDR      R0,[R8, #+8]
   2484                      msg->pkt.type=T_SENDMSG;
   2485                      msg->pkt.data_len=l;
   2486                      memcpy(msg->data,((IPCMsg *)(ipc->data))->msg,l);
   \   00000188   0920A0E1           MOV      R2,R9
   \   0000018C   000090E5           LDR      R0,[R0, #+0]
   \   00000190   00008AE5           STR      R0,[R10, #+0]
   \   00000194   0200A0E3           MOV      R0,#+2
   \   00000198   B400CAE1           STRH     R0,[R10, #+4]
   \   0000019C   B690CAE1           STRH     R9,[R10, #+6]
   \   000001A0   080098E5           LDR      R0,[R8, #+8]
   \   000001A4   041090E5           LDR      R1,[R0, #+4]
   \   000001A8   08008AE2           ADD      R0,R10,#+8
   \   000001AC   1E0100EF           SWI      +286
   2487                      //slientsend=1;
   2488          	    SENDMSGCOUNT++; //Номер сообщения
   \   000001B0   940095E5           LDR      R0,[R5, #+148]
   2489                      SUBPROC((void *)SendAnswer,0,msg);
   \   000001B4   0A20A0E1           MOV      R2,R10
   \   000001B8   010080E2           ADD      R0,R0,#+1
   \   000001BC   940085E5           STR      R0,[R5, #+148]
   \   000001C0   ........           LDR      R0,??DataTable105  ;; SendAnswer
   \   000001C4   0010A0E3           MOV      R1,#+0
   \   000001C8   710100EF           SWI      +369
   2490                      break;
   2491          	  }
   2492          	}
   2493                }
   2494              }
   2495              //Нарисуем иконочку моего статуса
   2496          #define idlegui_id (((int *)icsm)[DISPLACE_OF_IDLEGUI_ID/4])
   2497              CSM_RAM *icsm=FindCSMbyID(CSM_root()->idle_id);
   \                     ??maincsm_onmessage_2:
   \   000001CC   068100EF           SWI      +33030
   \   000001D0   040090E5           LDR      R0,[R0, #+4]
   \   000001D4   080100EF           SWI      +264
   2498              if (IsGuiOnTop(idlegui_id)/*&&IsUnlocked()*/) //Если IdleGui на самом верху
   \   000001D8   2C0090E5           LDR      R0,[R0, #+44]
   \   000001DC   350100EF           SWI      +309
   \   000001E0   000050E3           CMP      R0,#+0
   \   000001E4   2D00000A           BEQ      ??maincsm_onmessage_17
   2499              {
   2500                GUI *igui=GetTopGUI();
   2501                if (igui) //И он существует
   \   000001E8   4D0100EF           SWI      +333
   \   000001EC   000050E3           CMP      R0,#+0
   \   000001F0   2A00000A           BEQ      ??maincsm_onmessage_17
   2502                {
   2503          	void *canvasdata=BuildCanvas();
   \   000001F4   F18000EF           SWI      +33009
   \   000001F8   0080A0E1           MOV      R8,R0
   2504          	int icn;
   2505          	if (total_unread)
   \   000001FC   F80095E5           LDR      R0,[R5, #+248]
   \   00000200   000050E3           CMP      R0,#+0
   2506          	  icn=IS_MSG;
   \   00000204   0D90A013           MOVNE    R9,#+13
   \   00000208   0A00001A           BNE      ??maincsm_onmessage_18
   2507          	else
   2508          	{
   2509          	  switch(connect_state)
   \   0000020C   D40095E5           LDR      R0,[R5, #+212]
   \   00000210   000050E3           CMP      R0,#+0
   \   00000214   0200000A           BEQ      ??maincsm_onmessage_19
   \   00000218   030050E2           SUBS     R0,R0,#+3
   \   0000021C   0200000A           BEQ      ??maincsm_onmessage_20
   \   00000220   030000EA           B        ??maincsm_onmessage_21
   2510          	  {
   2511          	  case 0:
   2512          	    icn=IS_OFFLINE; break;
   \                     ??maincsm_onmessage_19:
   \   00000224   0090A0E3           MOV      R9,#+0
   \   00000228   020000EA           B        ??maincsm_onmessage_18
   2513          	  case 3:
   2514          	    icn=CurrentStatus; //IS_ONLINE;
   \                     ??maincsm_onmessage_20:
   \   0000022C   B89095E5           LDR      R9,[R5, #+184]
   \   00000230   000000EA           B        ??maincsm_onmessage_18
   2515          	    break;
   2516          	  default:
   2517          	    icn=IS_UNKNOWN; break;
   \                     ??maincsm_onmessage_21:
   \   00000234   0E90A0E3           MOV      R9,#+14
   \                     ??maincsm_onmessage_18:
   \   00000238   090195E7           LDR      R0,[R5, +R9, LSL #+2]
   2518          	  }
   2519          	}
   2520          	//Тут трохи поменял
   2521          	// by Rainmaker: Рисуем канву только для иконки и выводим в своих координатах
   2522          	DrawCanvas(canvasdata,IDLEICON_X,IDLEICON_Y,IDLEICON_X+GetImgWidth((int)S_ICONS[icn])-1,
   2523          		   IDLEICON_Y+GetImgHeight((int)S_ICONS[icn])-1,1);
   \   0000023C   210000EF           SWI      +33
   \   00000240   0C008DE5           STR      R0,[SP, #+12]
   \   00000244   090195E7           LDR      R0,[R5, +R9, LSL #+2]
   \   00000248   220000EF           SWI      +34
   \   0000024C   B4139FE5           LDR      R1,??maincsm_onmessage_5+0xC  ;; IDLEICON_X
   \   00000250   00A091E5           LDR      R10,[R1, #+0]
   \   00000254   B0139FE5           LDR      R1,??maincsm_onmessage_5+0x10  ;; IDLEICON_Y
   \   00000258   0A0080E0           ADD      R0,R0,R10
   \   0000025C   00B091E5           LDR      R11,[R1, #+0]
   \   00000260   0110A0E3           MOV      R1,#+1
   \   00000264   02002DE9           PUSH     {R1}
   \   00000268   10109DE5           LDR      R1,[SP, #+16]
   \   0000026C   013040E2           SUB      R3,R0,#+1
   \   00000270   0B20A0E1           MOV      R2,R11
   \   00000274   0B1081E0           ADD      R1,R1,R11
   \   00000278   011041E2           SUB      R1,R1,#+1
   \   0000027C   02002DE9           PUSH     {R1}
   \   00000280   0800A0E1           MOV      R0,R8
   \   00000284   0A10A0E1           MOV      R1,R10
   \   00000288   250000EF           SWI      +37
   2524          	DrawImg(IDLEICON_X,IDLEICON_Y,S_ICONS[icn]);
   \   0000028C   092195E7           LDR      R2,[R5, +R9, LSL #+2]
   \   00000290   0B10A0E1           MOV      R1,R11
   \   00000294   0A00A0E1           MOV      R0,R10
   \   00000298   230000EF           SWI      +35
   \   0000029C   08D08DE2           ADD      SP,SP,#+8
   2525                }
   2526              }
   2527            }
   2528            if (msg->msg==MSG_RECONFIGURE_REQ)
   \                     ??maincsm_onmessage_17:
   \   000002A0   040094E5           LDR      R0,[R4, #+4]
   \   000002A4   AF10A0E3           MOV      R1,#+175
   \   000002A8   DE1C81E3           ORR      R1,R1,#0xDE00
   \   000002AC   010050E1           CMP      R0,R1
   \   000002B0   0F00001A           BNE      ??maincsm_onmessage_22
   2529            {
   2530              extern const char *successed_config_filename;
   2531              if (strcmp_nocase(successed_config_filename,(char *)msg->data0)==0)
   \   000002B4   ........           LDR      R0,??DataTable114  ;; successed_config_filename
   \   000002B8   0C1094E5           LDR      R1,[R4, #+12]
   \   000002BC   000090E5           LDR      R0,[R0, #+0]
   \   000002C0   ........           _BLF     strcmp_nocase,??strcmp_nocase??rA
   \   000002C4   000050E3           CMP      R0,#+0
   \   000002C8   0900001A           BNE      ??maincsm_onmessage_22
   2532              {
   2533                ShowMSG(1,(int)"NatICQ config updated!");
   \   000002CC   841087E2           ADD      R1,R7,#+132
   \   000002D0   0100A0E3           MOV      R0,#+1
   \   000002D4   480100EF           SWI      +328
   2534                InitConfig();
   \   000002D8   ........           _BLF     InitConfig,??InitConfig??rA
   2535                free_ICONS();
   \   000002DC   ........           BL       free_ICONS
   2536                setup_ICONS();
   \   000002E0   ........           BL       setup_ICONS
   2537                ResortCL();
   \   000002E4   ........           _BLF     ResortCL,??ResortCL??rA
   2538                RecountMenu(NULL, 1);
   \   000002E8   0110A0E3           MOV      R1,#+1
   \   000002EC   0000A0E3           MOV      R0,#+0
   \   000002F0   ........           BL       RecountMenu
   2539                //      InitSmiles();
   2540              }
   2541            }
   2542            if (msg->msg==MSG_GUI_DESTROYED)
   \                     ??maincsm_onmessage_22:
   \   000002F4   040094E5           LDR      R0,[R4, #+4]
   \   000002F8   0E10A0E3           MOV      R1,#+14
   \   000002FC   641C81E3           ORR      R1,R1,#0x6400
   \   00000300   010050E1           CMP      R0,R1
   \   00000304   0E00001A           BNE      ??maincsm_onmessage_23
   2543            {
   2544              if ((int)msg->data0==csm->gui_id)
   \   00000308   10109DE5           LDR      R1,[SP, #+16]
   \   0000030C   0C0094E5           LDR      R0,[R4, #+12]
   \   00000310   281091E5           LDR      R1,[R1, #+40]
   \   00000314   010050E1           CMP      R0,R1
   2545              {
   2546                csm->csm.state=-3;
   \   00000318   10009D05           LDREQ    R0,[SP, #+16]
   \   0000031C   0210E003           MVNEQ    R1,#+2
   \   00000320   10108005           STREQ    R1,[R0, #+16]
   2547              }
   2548              if ((int)msg->data0==contactlist_menu_id)
   \   00000324   0C0094E5           LDR      R0,[R4, #+12]
   \   00000328   041195E5           LDR      R1,[R5, #+260]
   \   0000032C   010050E1           CMP      R0,R1
   2549              {
   2550                contactlist_menu_id=0;
   \   00000330   04618505           STREQ    R6,[R5, #+260]
   2551                prev_clmenu_itemcount=0;
   \   00000334   0C618505           STREQ    R6,[R5, #+268]
   2552              }
   2553              if ((int)msg->data0==edchat_id)
   \   00000338   081195E5           LDR      R1,[R5, #+264]
   \   0000033C   010050E1           CMP      R0,R1
   2554              {
   2555                edchat_id=0;
   \   00000340   08618505           STREQ    R6,[R5, #+264]
   2556              }
   2557            }
   2558            if (msg->msg==MSG_HELPER_TRANSLATOR)
   \                     ??maincsm_onmessage_23:
   \   00000344   040094E5           LDR      R0,[R4, #+4]
   \   00000348   AE10A0E3           MOV      R1,#+174
   \   0000034C   DE1C81E3           ORR      R1,R1,#0xDE00
   \   00000350   010050E1           CMP      R0,R1
   \   00000354   2400001A           BNE      ??maincsm_onmessage_24
   2559            {
   2560              switch((int)msg->data0)
   \   00000358   0C0094E5           LDR      R0,[R4, #+12]
   \   0000035C   101094E5           LDR      R1,[R4, #+16]
   \   00000360   ........           LDR      R8,??DataTable100  ;; do_reconnect
   \   00000364   EA4FA0E3           MOV      R4,#+936
   \   00000368   A29FA0E3           MOV      R9,#+648
   \   0000036C   01A0A0E3           MOV      R10,#+1
   \   00000370   802050E2           SUBS     R2,R0,#+128
   \   00000374   0600000A           BEQ      ??maincsm_onmessage_25
   \   00000378   022052E2           SUBS     R2,R2,#+2
   \   0000037C   0200000A           BEQ      ??maincsm_onmessage_26
   \   00000380   122052E2           SUBS     R2,R2,#+18
   \   00000384   1000000A           BEQ      ??maincsm_onmessage_27
   \   00000388   190000EA           B        ??maincsm_onmessage_28
   2561              {
   2562              case LMAN_DISCONNECT_IND:
   2563                is_gprs_online=0;
   \                     ??maincsm_onmessage_26:
   \   0000038C   F46085E5           STR      R6,[R5, #+244]
   \   00000390   150000EA           B        ??maincsm_onmessage_24
   2564                return(1);
   2565              case LMAN_CONNECT_CNF:
   2566                vibra_count=1;
   \                     ??maincsm_onmessage_25:
   \   00000394   C4A085E5           STR      R10,[R5, #+196]
   2567                start_vibra();
   \   00000398   ........           BL       start_vibra
   2568                is_gprs_online=1;
   \   0000039C   F4A085E5           STR      R10,[R5, #+244]
   2569                strcpy(logmsg,LG_GRGPRSUP);
   \   000003A0   9C1087E2           ADD      R1,R7,#+156
   \   000003A4   050089E0           ADD      R0,R9,R5
   \   000003A8   1A0000EF           SWI      +26
   2570                GBS_StartTimerProc(&reconnect_tmr,TMR_SECOND*RECONNECT_TIME,do_reconnect);
   \   000003AC   ........           LDR      R0,??DataTable108  ;; RECONNECT_TIME
   \   000003B0   0820A0E1           MOV      R2,R8
   \   000003B4   000090E5           LDR      R0,[R0, #+0]
   \   000003B8   D830A0E3           MOV      R3,#+216
   \   000003BC   930001E0           MUL      R1,R3,R0
   \   000003C0   050084E0           ADD      R0,R4,R5
   \   000003C4   4D0000EF           SWI      +77
   \   000003C8   070000EA           B        ??maincsm_onmessage_24
   2571                return(1);
   2572              case ENIP_DNR_HOST_BY_NAME:
   2573                if ((int)msg->data1==DNR_ID)
   \                     ??maincsm_onmessage_27:
   \   000003CC   140195E5           LDR      R0,[R5, #+276]
   \   000003D0   000051E1           CMP      R1,R0
   \   000003D4   0400001A           BNE      ??maincsm_onmessage_24
   2574                {
   2575          	if (DNR_TRIES) SUBPROC((void *)create_connect);
   \   000003D8   180195E5           LDR      R0,[R5, #+280]
   \   000003DC   000050E3           CMP      R0,#+0
   \   000003E0   0100000A           BEQ      ??maincsm_onmessage_24
   \   000003E4   ........           LDR      R0,??DataTable102  ;; create_connect
   \                     ??maincsm_onmessage_29:
   \   000003E8   710100EF           SWI      +369
   2576                }
   2577                return(1);
   \                     ??maincsm_onmessage_24:
   \   000003EC   0100A0E3           MOV      R0,#+1
   \                     ??maincsm_onmessage_30:
   \   000003F0   ........           B        ?Subroutine104
   2578              }
   2579              if ((int)msg->data1==sock)
   \                     ??maincsm_onmessage_28:
   \   000003F4   D82095E5           LDR      R2,[R5, #+216]
   \   000003F8   020051E1           CMP      R1,R2
   \   000003FC   FAFFFF1A           BNE      ??maincsm_onmessage_24
   2580              {
   2581                //Если наш сокет
   2582                if ((((unsigned int)msg->data0)>>28)==0xA)
   \   00000400   201EA0E1           LSR      R1,R0,#+28
   \   00000404   0A0051E3           CMP      R1,#+10
   \   00000408   0200001A           BNE      ??maincsm_onmessage_31
   2583                {
   2584          	//Принят пакет
   2585          	ProcessPacket((TPKT *)msg->data0);
   \   0000040C   ........           BL       ProcessPacket
   2586          	return(0);
   \   00000410   0000A0E3           MOV      R0,#+0
   \   00000414   F5FFFFEA           B        ??maincsm_onmessage_30
   2587                }
   2588                switch((int)msg->data0)
   \                     ??maincsm_onmessage_31:
   \   00000418   ........           LDR      R2,??DataTable103  ;; VIBR_ON_CONNECT
   \   0000041C   D41095E5           LDR      R1,[R5, #+212]
   \   00000420   00B092E5           LDR      R11,[R2, #+0]
   \   00000424   8A0040E2           SUB      R0,R0,#+138
   \   00000428   050050E3           CMP      R0,#+5
   \   0000042C   EEFFFF8A           BHI      ??maincsm_onmessage_24
   \   00000430   012F8FE2           ADR      R2,??maincsm_onmessage_1
   \   00000434   D02092E1           LDRSB    R2,[R2, R0]
   \   00000438   02F18FE0           ADD      PC,PC,R2, LSL #+2
   \                     ??maincsm_onmessage_1:
   \   0000043C   3D3D3801           DC8      +61,+61,+56,+1
   \   00000440   46420000           DC8      +70,+66,+0,+0
   2589                {
   2590                case ENIP_SOCK_CONNECTED:
   2591          	if (connect_state==1)
   \                     ??maincsm_onmessage_32:
   \   00000444   010051E3           CMP      R1,#+1
   \   00000448   3000001A           BNE      ??maincsm_onmessage_33
   2592          	{
   2593          	  if(VIBR_ON_CONNECT)
   2594                      vibra_count=2;
   2595                    else
   2596                      vibra_count=1;
   2597          	  start_vibra();
   2598          	  //Соединение установленно, посылаем пакет login
   2599          	  strcpy(logmsg, LG_GRTRYLOGIN);
   2600          	  {
   2601          	    int i=strlen(PASS);
   \   0000044C   BC419FE5           LDR      R4,??maincsm_onmessage_5+0x14  ;; PASS
   \   00000450   00005BE3           CMP      R11,#+0
   \   00000454   0200A013           MOVNE    R0,#+2
   \   00000458   C4008515           STRNE    R0,[R5, #+196]
   \   0000045C   C4A08505           STREQ    R10,[R5, #+196]
   \   00000460   ........           BL       start_vibra
   \   00000464   B41087E2           ADD      R1,R7,#+180
   \   00000468   050089E0           ADD      R0,R9,R5
   \   0000046C   1A0000EF           SWI      +26
   \   00000470   0400A0E1           MOV      R0,R4
   \   00000474   1B0000EF           SWI      +27
   \   00000478   0080A0E1           MOV      R8,R0
   2602          	    TPKT *p=malloc(sizeof(PKT)+i);
   \   0000047C   080088E2           ADD      R0,R8,#+8
   \   00000480   140000EF           SWI      +20
   \   00000484   0090A0E1           MOV      R9,R0
   2603          	    p->pkt.uin=UIN;
   \   00000488   ........           LDR      R0,??DataTable113  ;; UIN
   2604          	    p->pkt.type=T_REQLOGIN;
   2605          	    p->pkt.data_len=i;
   2606          	    memcpy(p->data,PASS,i);
   \   0000048C   0820A0E1           MOV      R2,R8
   \   00000490   00B090E5           LDR      R11,[R0, #+0]
   \   00000494   0410A0E1           MOV      R1,R4
   \   00000498   00B089E5           STR      R11,[R9, #+0]
   \   0000049C   B4A0C9E1           STRH     R10,[R9, #+4]
   \   000004A0   B680C9E1           STRH     R8,[R9, #+6]
   \   000004A4   080089E2           ADD      R0,R9,#+8
   \   000004A8   1E0100EF           SWI      +286
   2607          	    SUBPROC((void *)send_login,0,p);
   \   000004AC   60019FE5           LDR      R0,??maincsm_onmessage_5+0x18  ;; send_login
   \   000004B0   0920A0E1           MOV      R2,R9
   \   000004B4   0010A0E3           MOV      R1,#+0
   \   000004B8   710100EF           SWI      +369
   2608          	  }
   2609          	  GROUP_CACHE=0;
   \   000004BC   006185E5           STR      R6,[R5, #+256]
   2610          	  SENDMSGCOUNT=0; //Начинаем отсчет
   \   000004C0   946085E5           STR      R6,[R5, #+148]
   2611          	  if (!FindGroupByID(0)) AddGroup(0,LG_GROUPNOTINLIST);
   \   000004C4   0600A0E1           MOV      R0,R6
   \   000004C8   ........           _BLF     FindGroupByID,??FindGroupByID??rA
   \   000004CC   000050E3           CMP      R0,#+0
   \   000004D0   0100001A           BNE      ??maincsm_onmessage_34
   \   000004D4   C41087E2           ADD      R1,R7,#+196
   \   000004D8   ........           _BLF     AddGroup,??AddGroup??rA
   2612          	  if (!FindContactByUin(UIN)) AddContact(UIN, LG_CLLOOPBACK,0,1);
   \                     ??maincsm_onmessage_34:
   \   000004DC   0B00A0E1           MOV      R0,R11
   \   000004E0   ........           _BLF     FindContactByUin,??FindContactByUin??rA
   \   000004E4   000050E3           CMP      R0,#+0
   \   000004E8   0400001A           BNE      ??maincsm_onmessage_35
   \   000004EC   0130A0E3           MOV      R3,#+1
   \   000004F0   0620A0E1           MOV      R2,R6
   \   000004F4   581F87E2           ADD      R1,R7,#+352
   \   000004F8   0B00A0E1           MOV      R0,R11
   \   000004FC   ........           _BLF     AddContact,??AddContact??rA
   2613          	  SUBPROC((void *)LoadLocalCL);
   \                     ??maincsm_onmessage_35:
   \   00000500   10019FE5           LDR      R0,??maincsm_onmessage_5+0x1C  ;; LoadLocalCL
   \   00000504   710100EF           SWI      +369
   2614          	  SMART_REDRAW();
   \   00000508   ........           BL       SMART_REDRAW
   \   0000050C   B6FFFFEA           B        ??maincsm_onmessage_24
   2615          	}
   2616          	else
   2617          	{
   2618          	  ShowMSG(1,(int)LG_MSGILLEGMSGCON);
   \                     ??maincsm_onmessage_33:
   \   00000510   D01087E2           ADD      R1,R7,#+208
   \                     ??maincsm_onmessage_36:
   \   00000514   0100A0E3           MOV      R0,#+1
   \   00000518   480100EF           SWI      +328
   \   0000051C   B2FFFFEA           B        ??maincsm_onmessage_24
   2619          	}
   2620          	break;
   2621                case ENIP_SOCK_DATA_READ:
   2622          	if (connect_state>=2)
   \                     ??maincsm_onmessage_37:
   \   00000520   020051E3           CMP      R1,#+2
   2623          	{
   2624          	  //Если посылали send
   2625          	  SUBPROC((void *)get_answer);
   \   00000524   F0009FA5           LDRGE    R0,??maincsm_onmessage_5+0x20  ;; get_answer
   \   00000528   AEFFFFAA           BGE      ??maincsm_onmessage_29
   2626          	  //SMART_REDRAW();
   2627          	}
   2628          	else
   2629          	{
   2630          	  ShowMSG(1,(int)LG_MSGILLEGMSGREA);
   \   0000052C   F81087E2           ADD      R1,R7,#+248
   \   00000530   F7FFFFEA           B        ??maincsm_onmessage_36
   2631          	}
   2632          	break;
   2633                case ENIP_BUFFER_FREE:
   2634                case ENIP_BUFFER_FREE1:
   2635          	SUBPROC((void *)SendAnswer,0,0);
   \                     ??maincsm_onmessage_38:
   \   00000534   ........           LDR      R0,??DataTable105  ;; SendAnswer
   \   00000538   0020A0E3           MOV      R2,#+0
   \   0000053C   0210A0E1           MOV      R1,R2
   \   00000540   710100EF           SWI      +369
   \   00000544   A8FFFFEA           B        ??maincsm_onmessage_24
   2636          	break;
   2637                case ENIP_SOCK_REMOTE_CLOSED:
   2638          	//Закрыт со стороны сервера
   2639          	if (connect_state)
   \                     ??maincsm_onmessage_39:
   \   00000548   000051E3           CMP      R1,#+0
   \   0000054C   A6FFFF0A           BEQ      ??maincsm_onmessage_24
   2640          	  SUBPROC((void *)end_socket);
   \   00000550   ........           LDR      R0,??DataTable106  ;; end_socket
   \   00000554   A3FFFFEA           B        ??maincsm_onmessage_29
   2641          	break;
   2642                case ENIP_SOCK_CLOSED:
   2643          	//strcpy(logmsg, "No connection");
   2644          	//Dump not received
   2645          /*	if (RXstate>(-(int)sizeof(PKT)))
   2646          	{
   2647          	  unsigned int err;
   2648          	  int f=fopen("4:\\NATICQ.dump",A_ReadWrite+A_Create+A_Truncate+A_BIN,P_READ+P_WRITE,&err);
   2649          	  if (f!=-1)
   2650          	  {
   2651          	    fwrite(f,&RXbuf,RXstate+sizeof(PKT),&err);
   2652          	    fclose(f,&err);
   2653          	  }
   2654          	}*/
   2655          	FillAllOffline();
   \                     ??maincsm_onmessage_40:
   \   00000558   ........           _BLF     FillAllOffline,??FillAllOffline??rA
   2656          	RecountMenu(NULL, 1);
   \   0000055C   0110A0E3           MOV      R1,#+1
   \   00000560   0600A0E1           MOV      R0,R6
   \   00000564   ........           BL       RecountMenu
   2657          	connect_state=0;
   \   00000568   D46085E5           STR      R6,[R5, #+212]
   2658          	sock=-1;
   \   0000056C   0600E0E1           MVN      R0,R6
   \   00000570   D80085E5           STR      R0,[R5, #+216]
   2659                  if(VIBR_ON_CONNECT)
   \   00000574   00005BE3           CMP      R11,#+0
   2660                    vibra_count=4;
   \   00000578   0400A013           MOVNE    R0,#+4
   \   0000057C   C4008515           STRNE    R0,[R5, #+196]
   2661                  else
   2662                    vibra_count=1;
   \   00000580   C4A08505           STREQ    R10,[R5, #+196]
   2663          
   2664          	start_vibra();
   \   00000584   ........           BL       start_vibra
   2665          	if (sendq_p)
   \   00000588   F00095E5           LDR      R0,[R5, #+240]
   \   0000058C   000050E3           CMP      R0,#+0
   \   00000590   0400000A           BEQ      ??maincsm_onmessage_41
   2666          	{
   2667          	  snprintf(logmsg,255,"Disconnected, %d bytes not sended!",sendq_l);
   \   00000594   EC3095E5           LDR      R3,[R5, #+236]
   \   00000598   472F87E2           ADD      R2,R7,#+284
   \   0000059C   FF10A0E3           MOV      R1,#+255
   \   000005A0   050089E0           ADD      R0,R9,R5
   \   000005A4   1B0100EF           SWI      +283
   2668          	}
   2669          	SMART_REDRAW();
   \                     ??maincsm_onmessage_41:
   \   000005A8   ........           BL       SMART_REDRAW
   2670          	SUBPROC((void *)ClearSendQ);
   \   000005AC   ........           LDR      R0,??DataTable107  ;; ClearSendQ
   \   000005B0   710100EF           SWI      +369
   2671          	if (!disautorecconect)
   \   000005B4   A40095E5           LDR      R0,[R5, #+164]
   \   000005B8   000050E3           CMP      R0,#+0
   \   000005BC   8AFFFF1A           BNE      ??maincsm_onmessage_24
   2672                  {
   2673                    GBS_StartTimerProc(&reconnect_tmr,TMR_SECOND*RECONNECT_TIME,do_reconnect);
   \   000005C0   ........           LDR      R0,??DataTable108  ;; RECONNECT_TIME
   \   000005C4   0820A0E1           MOV      R2,R8
   \   000005C8   006090E5           LDR      R6,[R0, #+0]
   \   000005CC   D800A0E3           MOV      R0,#+216
   \   000005D0   900601E0           MUL      R1,R0,R6
   \   000005D4   050084E0           ADD      R0,R4,R5
   \   000005D8   4D0000EF           SWI      +77
   2674                    snprintf(logmsg,255,"%s\nReconect after %d second...",logmsg, RECONNECT_TIME);
   \   000005DC   40002DE9           PUSH     {R6}
   \   000005E0   053089E0           ADD      R3,R9,R5
   \   000005E4   502F87E2           ADD      R2,R7,#+320
   \   000005E8   FF10A0E3           MOV      R1,#+255
   \   000005EC   050089E0           ADD      R0,R9,R5
   \   000005F0   1B0100EF           SWI      +283
   \   000005F4   04D08DE2           ADD      SP,SP,#+4
   \   000005F8   7BFFFFEA           B        ??maincsm_onmessage_24
   \                     ??maincsm_onmessage_5:
   \   000005FC   ........           DC32     CheckDoubleRun
   \   00000600   ........           DC32     ProcessNextSmile
   \   00000604   ........           DC32     ProcessNextXStatImg
   \   00000608   ........           DC32     IDLEICON_X
   \   0000060C   ........           DC32     IDLEICON_Y
   \   00000610   ........           DC32     PASS
   \   00000614   ........           DC32     send_login
   \   00000618   ........           DC32     LoadLocalCL
   \   0000061C   ........           DC32     get_answer
   2675                  }
   2676          	break;
   2677                }
   2678              }
   2679            }
   2680            return(1);
   2681          }
   2682          
   2683          

   \                                 In segment DATA_C, align 4, align-sorted
   2684          const int minus11=-11;
   \                     minus11:
   \   00000000   F5FFFFFF           DC32 -11
   2685          

   \                                 In segment DATA_Z, align 4, align-sorted
   2686          unsigned short maincsm_name_body[140];
   \                     maincsm_name_body:
   \   00000000                      DS8 280
   2687          
   2688          const struct
   2689          {
   2690            CSM_DESC maincsm;
   2691            WSHDR maincsm_name;

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "NATICQ: %d">`:
   \   00000000   4E4154494351       DC8 "NATICQ: %d"
   \              3A20256400  
   \   0000000B   00                 DC8 0
   \   0000000C   C2E2E5E4E8F2       DC8 "\302\342\345\344\350\362\345 UIN/\357\340\360\356\353\374!"
   \              E52055494E2F
   \              EFE0F0EEEBFC
   \              2100        
   2692          }MAINCSM =
   \                     MAINCSM:
   \   00000020   ............       DC32 maincsm_onmessage, maincsm_oncreate, 0, 0, 0, 0, maincsm_onclose
   \              ....00000000
   \              000000000000
   \              000000000000
   \              ........    
   \   0000003C   2C0000000100       DC32 44, 1, minus11, maincsm_name_body, 55AACCCCH, 3333AA55H, 0
   \              0000........
   \              ........CCCC
   \              AA5555AA3333
   \              00000000    
   \   00000058   8B00               DC16 139
   \   0000005A   0000               DC8 0, 0
   2693          {
   2694            {
   2695              maincsm_onmessage,
   2696              maincsm_oncreate,
   2697          #ifdef NEWSGOLD
   2698          0,
   2699          0,
   2700          0,
   2701          0,
   2702          #endif
   2703          maincsm_onclose,
   2704          sizeof(MAIN_CSM),
   2705          1,
   2706          &minus11
   2707            },
   2708            {
   2709              maincsm_name_body,
   2710              NAMECSM_MAGIC1,
   2711              NAMECSM_MAGIC2,
   2712              0x0,
   2713              139
   2714            }
   2715          };
   2716          

   \                                 In segment CODE, align 4, keep-with-next
   2717          void UpdateCSMname(void)
   2718          {
   2719            wsprintf((WSHDR *)(&MAINCSM.maincsm_name), "NATICQ: %d",UIN);
   \                     UpdateCSMname:
   \   00000000   ........           LDR      R0,??DataTable112  ;; `?<Constant "NATICQ: %d">`
   \   00000004   ........           LDR      R1,??DataTable113  ;; UIN
   \   00000008   00402DE9           PUSH     {LR}
   \   0000000C   002091E5           LDR      R2,[R1, #+0]
   \   00000010   0010A0E1           MOV      R1,R0
   \   00000014   480080E2           ADD      R0,R0,#+72
   \   00000018   240100EF           SWI      +292
   2720          }
   \   0000001C   0080BDE8           POP      {PC}             ;; return
   2721          
   2722          

   \                                 In segment CODE, align 4, keep-with-next
   2723          int main(char *filename)
   2724          {
   \                     main:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   2725            MAIN_CSM main_csm;
   2726            char *s;
   2727            int len;
   2728            extern const char *successed_config_filename;
   2729            WSHDR *ws;
   2730          
   2731            InitConfig();
   2732            s=strrchr(filename,'\\');
   2733            len=(s-filename)+1;
   2734            strncpy(elf_path,filename,len);
   \   00000004   ........           LDR      R6,??DataTable118  ;; S_ICONS
   \   00000008   2CD04DE2           SUB      SP,SP,#+44
   \   0000000C   0040A0E1           MOV      R4,R0
   \   00000010   ........           _BLF     InitConfig,??InitConfig??rA
   \   00000014   5C10A0E3           MOV      R1,#+92
   \   00000018   0400A0E1           MOV      R0,R4
   \   0000001C   170100EF           SWI      +279
   \   00000020   040040E0           SUB      R0,R0,R4
   \   00000024   015080E2           ADD      R5,R0,#+1
   \   00000028   0520A0E1           MOV      R2,R5
   \   0000002C   0410A0E1           MOV      R1,R4
   2735            elf_path[len]=0;
   2736            if (!UIN)
   \   00000030   ........           LDR      R4,??DataTable112  ;; `?<Constant "NATICQ: %d">`
   \   00000034   5A0F86E2           ADD      R0,R6,#+360
   \   00000038   160100EF           SWI      +278
   \   0000003C   060085E0           ADD      R0,R5,R6
   \   00000040   0010A0E3           MOV      R1,#+0
   \   00000044   6811C0E5           STRB     R1,[R0, #+360]
   \   00000048   ........           LDR      R0,??DataTable113  ;; UIN
   \   0000004C   000090E5           LDR      R0,[R0, #+0]
   \   00000050   000050E3           CMP      R0,#+0
   \   00000054   1300001A           BNE      ??main_0
   2737            {
   2738              LockSched();
   \   00000058   460100EF           SWI      +326
   2739              ShowMSG(1,(int)LG_MSGNOUINPASS);
   \   0000005C   0C1084E2           ADD      R1,R4,#+12
   \   00000060   0100A0E3           MOV      R0,#+1
   \   00000064   480100EF           SWI      +328
   2740              ws=AllocWS(150);
   \   00000068   9600A0E3           MOV      R0,#+150
   \   0000006C   250100EF           SWI      +293
   \   00000070   0040A0E1           MOV      R4,R0
   2741              str_2ws(ws,successed_config_filename,128);
   \   00000074   ........           LDR      R0,??DataTable114  ;; successed_config_filename
   \   00000078   8020A0E3           MOV      R2,#+128
   \   0000007C   001090E5           LDR      R1,[R0, #+0]
   \   00000080   0400A0E1           MOV      R0,R4
   \   00000084   6C0100EF           SWI      +364
   2742              ExecuteFile(ws,0,0);
   \   00000088   0020A0E3           MOV      R2,#+0
   \   0000008C   0010A0E3           MOV      R1,#+0
   \   00000090   0400A0E1           MOV      R0,R4
   \   00000094   940000EF           SWI      +148
   2743              UnlockSched();
   \   00000098   470100EF           SWI      +327
   2744              SUBPROC((void *)ElfKiller);
   \   0000009C   ........           LDR      R0,??DataTable115  ;; ElfKiller
   \   000000A0   710100EF           SWI      +369
   2745              return 0;
   \   000000A4   0A0000EA           B        ??main_1
   2746            }
   2747            ReadDefSettings();
   \                     ??main_0:
   \   000000A8   ........           BL       ReadDefSettings
   2748            setup_ICONS();
   \   000000AC   ........           BL       setup_ICONS
   2749            LoadXStatusText();
   \   000000B0   ........           _BLF     LoadXStatusText,??LoadXStatusText??rA
   2750            UpdateCSMname();
   \   000000B4   ........           BL       UpdateCSMname
   2751            LockSched();
   \   000000B8   460100EF           SWI      +326
   2752            maincsm_id=CreateCSM(&MAINCSM.maincsm,&main_csm,0);
   \   000000BC   0020A0E3           MOV      R2,#+0
   \   000000C0   0D10A0E1           MOV      R1,SP
   \   000000C4   200084E2           ADD      R0,R4,#+32
   \   000000C8   070100EF           SWI      +263
   \   000000CC   8C0086E5           STR      R0,[R6, #+140]
   2753            UnlockSched();
   \   000000D0   470100EF           SWI      +327
   2754            return 0;
   \                     ??main_1:
   \   000000D4   0000A0E3           MOV      R0,#+0
   \   000000D8   ........           B        ?Subroutine105
   2755          }

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine105:
   \   00000000   2CD08DE2           ADD      SP,SP,#+44
   \   00000004   7080BDE8           POP      {R4-R6,PC}       ;; return
   2756          
   2757          //===========================================================
   2758          // Edit chat
   2759          //===========================================================

   \                                 In segment CODE, align 4, keep-with-next
   2760          void edchat_locret(void){}
   \                     edchat_locret:
   \   00000000   1EFF2FE1           BX       LR               ;; return
   2761          

   \                                 In segment CODE, align 4, keep-with-next
   2762          char *ExtractAnswer(WSHDR *ws)
   2763          {
   \                     ExtractAnswer:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   2764            S_SMILES *t;
   2765            int c;
   2766            int len=0;
   2767            int scur;
   2768            char *msg=NULL;
   2769            unsigned short *wsbody=ws->wsbody;
   \   00000004   005090E5           LDR      R5,[R0, #+0]
   \   00000008   0040A0E3           MOV      R4,#+0
   2770            int wslen=wsbody[0];
   \   0000000C   B060D5E1           LDRH     R6,[R5, #+0]
   \   00000010   0080A0E3           MOV      R8,#+0
   2771            if (wslen)
   \   00000014   000056E3           CMP      R6,#+0
   \   00000018   3C00000A           BEQ      ??ExtractAnswer_0
   2772            {
   2773              for (int i=0; i<wslen; i++) // Посчитаем общую длину будущей строки
   \   0000001C   010000EA           B        ??ExtractAnswer_1
   2774              {
   2775                c=wsbody[i+1];
   2776                if (c>=0xE100)
   2777                {
   2778                  t=FindSmileByUni(c);
   2779                  if (t)
   2780                  {
   2781                    if (t->lines)
   2782                    {
   2783                      len+=strlen(t->lines->text);
   2784                    }
   2785                  }
   2786                  else  len++;
   \                     ??ExtractAnswer_2:
   \   00000020   0940A0E1           MOV      R4,R9
   \                     ??ExtractAnswer_3:
   \   00000024   018088E2           ADD      R8,R8,#+1
   \                     ??ExtractAnswer_1:
   \   00000028   019084E2           ADD      R9,R4,#+1
   \   0000002C   060058E1           CMP      R8,R6
   \   00000030   0E0000AA           BGE      ??ExtractAnswer_4
   \   00000034   880085E0           ADD      R0,R5,R8, LSL #+1
   \   00000038   B270D0E1           LDRH     R7,[R0, #+2]
   \   0000003C   E10C57E3           CMP      R7,#+57600
   \   00000040   F6FFFFBA           BLT      ??ExtractAnswer_2
   \   00000044   0700A0E1           MOV      R0,R7
   \   00000048   ........           _BLF     FindSmileByUni,??FindSmileByUni??rA
   \   0000004C   000050E3           CMP      R0,#+0
   \   00000050   F2FFFF0A           BEQ      ??ExtractAnswer_2
   \   00000054   080090E5           LDR      R0,[R0, #+8]
   \   00000058   000050E3           CMP      R0,#+0
   \   0000005C   F0FFFF0A           BEQ      ??ExtractAnswer_3
   \   00000060   0C0080E2           ADD      R0,R0,#+12
   \   00000064   1B0000EF           SWI      +27
   \   00000068   044080E0           ADD      R4,R0,R4
   \   0000006C   ECFFFFEA           B        ??ExtractAnswer_3
   2787                }
   2788                else  len++;
   2789              }
   2790          
   2791              msg=malloc(len+1);
   \                     ??ExtractAnswer_4:
   \   00000070   0900A0E1           MOV      R0,R9
   \   00000074   140000EF           SWI      +20
   \   00000078   0080A0E1           MOV      R8,R0
   2792              scur=0;
   \   0000007C   0090A0E3           MOV      R9,#+0
   2793              for (int wcur=0; wcur<wslen && scur<len; wcur++)
   \   00000080   00A0A0E3           MOV      R10,#+0
   \   00000084   050000EA           B        ??ExtractAnswer_5
   2794              {
   2795                c=wsbody[wcur+1];
   2796                if (c==10) c=13;
   \                     ??ExtractAnswer_6:
   \   00000088   0D70A0E3           MOV      R7,#+13
   2797                if (c>=0xE100)
   2798                {
   2799                  t=FindSmileByUni(c);
   2800                  if (t)
   2801                  {
   2802                    int w;
   2803                    char *s;
   2804                    if (t->lines)
   2805                    {
   2806                      s=t->lines->text;
   2807                      while ((w=*s++) && scur<len)
   2808                      {
   2809                        msg[scur]=w;
   2810                        scur++;
   2811                      }
   2812                    }
   2813                  }
   2814                  else
   2815                  {
   2816                    msg[scur]=char16to8(c);
   2817                    scur++;
   2818                  }
   2819                }
   2820                else
   2821                {
   2822                  msg[scur]=char16to8(c);
   \                     ??ExtractAnswer_7:
   \   0000008C   0700A0E1           MOV      R0,R7
   \   00000090   ........           _BLF     char16to8,??char16to8??rA
   \   00000094   0800C9E7           STRB     R0,[R9, +R8]
   2823                  scur++;
   \   00000098   0B90A0E1           MOV      R9,R11
   2824                }
   \                     ??ExtractAnswer_8:
   \   0000009C   01A08AE2           ADD      R10,R10,#+1
   \                     ??ExtractAnswer_5:
   \   000000A0   06005AE1           CMP      R10,R6
   \   000000A4   040059B1           CMPLT    R9,R4
   \   000000A8   160000AA           BGE      ??ExtractAnswer_9
   \   000000AC   8A0085E0           ADD      R0,R5,R10, LSL #+1
   \   000000B0   B270D0E1           LDRH     R7,[R0, #+2]
   \   000000B4   01B089E2           ADD      R11,R9,#+1
   \   000000B8   0A0057E3           CMP      R7,#+10
   \   000000BC   F1FFFF0A           BEQ      ??ExtractAnswer_6
   \   000000C0   E10C57E3           CMP      R7,#+57600
   \   000000C4   F0FFFFBA           BLT      ??ExtractAnswer_7
   \   000000C8   0700A0E1           MOV      R0,R7
   \   000000CC   ........           _BLF     FindSmileByUni,??FindSmileByUni??rA
   \   000000D0   000050E3           CMP      R0,#+0
   \   000000D4   ECFFFF0A           BEQ      ??ExtractAnswer_7
   \   000000D8   080090E5           LDR      R0,[R0, #+8]
   \   000000DC   000050E3           CMP      R0,#+0
   \   000000E0   EDFFFF0A           BEQ      ??ExtractAnswer_8
   \   000000E4   0C0080E2           ADD      R0,R0,#+12
   \                     ??ExtractAnswer_10:
   \   000000E8   ........           LDRB     R1,[R0], #+1
   \   000000EC   000051E3           CMP      R1,#+0
   \   000000F0   E9FFFF0A           BEQ      ??ExtractAnswer_8
   \   000000F4   040059E1           CMP      R9,R4
   \   000000F8   E7FFFFAA           BGE      ??ExtractAnswer_8
   \   000000FC   0810C9E7           STRB     R1,[R9, +R8]
   \   00000100   019089E2           ADD      R9,R9,#+1
   \   00000104   F7FFFFEA           B        ??ExtractAnswer_10
   2825              }
   2826              msg[scur]=0;
   \                     ??ExtractAnswer_9:
   \   00000108   0000A0E3           MOV      R0,#+0
   \   0000010C   0800C9E7           STRB     R0,[R9, +R8]
   2827            }
   2828            return msg;
   \                     ??ExtractAnswer_0:
   \   00000110   0800A0E1           MOV      R0,R8
   \   00000114   F08FBDE8           POP      {R4-R11,PC}      ;; return
   2829          }
   2830          

   \                                 In segment CODE, align 4, keep-with-next
   2831          CLIST *FindNextActiveContact(CLIST *t)
   2832          {
   2833            while(t=(CLIST *)(t->next))
   \                     FindNextActiveContact:
   \                     ??FindNextActiveContact_0:
   \   00000000   000090E5           LDR      R0,[R0, #+0]
   \   00000004   000050E3           CMP      R0,#+0
   \   00000008   0300000A           BEQ      ??FindNextActiveContact_1
   2834            {
   2835              if (t->isactive) return t;
   \   0000000C   701090E5           LDR      R1,[R0, #+112]
   \   00000010   000051E3           CMP      R1,#+0
   \   00000014   F9FFFF0A           BEQ      ??FindNextActiveContact_0
   \   00000018   1EFF2FE1           BX       LR
   2836            }
   2837            t=(CLIST *)(&cltop);
   \                     ??FindNextActiveContact_1:
   \   0000001C   ........           LDR      R0,??DataTable117  ;; S_ICONS + 252
   \   00000020   020000EA           B        ??FindNextActiveContact_2
   2838            while(t=(CLIST *)(t->next))
   2839            {
   2840              if (t->isactive) return t;
   \                     ??FindNextActiveContact_3:
   \   00000024   701090E5           LDR      R1,[R0, #+112]
   \   00000028   000051E3           CMP      R1,#+0
   \   0000002C   1EFF2F11           BXNE     LR
   2841            }
   \                     ??FindNextActiveContact_2:
   \   00000030   000090E5           LDR      R0,[R0, #+0]
   \   00000034   000050E3           CMP      R0,#+0
   \   00000038   F9FFFF1A           BNE      ??FindNextActiveContact_3
   2842            return NULL;
   \   0000003C   1EFF2FE1           BX       LR               ;; return
   2843          }
   2844          

   \                                 In segment CODE, align 4, keep-with-next
   2845          CLIST *FindPrevActiveContact(CLIST *t)
   2846          {
   2847            CLIST *cl;
   2848            CLIST *cl_active=NULL;
   2849            cl=(CLIST *)(&cltop);
   \                     FindPrevActiveContact:
   \   00000000   ........           LDR      R2,??DataTable117  ;; S_ICONS + 252
   \   00000004   0010A0E3           MOV      R1,#+0
   \   00000008   020000EA           B        ??FindPrevActiveContact_0
   2850          
   2851          
   2852            while(cl=cl->next)
   2853            {
   2854              if (cl==t)
   2855              {
   2856                if (cl_active==NULL) break;
   2857                else return (cl_active);
   2858              }
   2859              else
   2860              {
   2861                if (cl->isactive) cl_active=cl;
   \                     ??FindPrevActiveContact_1:
   \   0000000C   703092E5           LDR      R3,[R2, #+112]
   \   00000010   000053E3           CMP      R3,#+0
   \   00000014   0210A011           MOVNE    R1,R2
   2862              }
   \                     ??FindPrevActiveContact_0:
   \   00000018   002092E5           LDR      R2,[R2, #+0]
   \   0000001C   000052E3           CMP      R2,#+0
   \   00000020   0400000A           BEQ      ??FindPrevActiveContact_2
   \   00000024   000052E1           CMP      R2,R0
   \   00000028   F7FFFF1A           BNE      ??FindPrevActiveContact_1
   \   0000002C   000051E3           CMP      R1,#+0
   \   00000030   0000000A           BEQ      ??FindPrevActiveContact_2
   \                     ??FindPrevActiveContact_3:
   \   00000034   ........           B        ?Subroutine103
   2863            }
   2864            while(t)
   \                     ??FindPrevActiveContact_2:
   \   00000038   000050E3           CMP      R0,#+0
   \   0000003C   FCFFFF0A           BEQ      ??FindPrevActiveContact_3
   2865            {
   2866              if (t->isactive) cl_active=t;
   \   00000040   702090E5           LDR      R2,[R0, #+112]
   \   00000044   000052E3           CMP      R2,#+0
   \   00000048   0010A011           MOVNE    R1,R0
   2867              t=t->next;
   \   0000004C   000090E5           LDR      R0,[R0, #+0]
   \   00000050   F8FFFFEA           B        ??FindPrevActiveContact_2
   2868            }
   2869            return cl_active;
   2870          }
   2871          
   2872          

   \                                 In segment CODE, align 4, keep-with-next
   2873          void ed_options_handler(USR_MENU_ITEM *item)
   2874          {
   \                     ed_options_handler:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   2875            EDCHAT_STRUCT *ed_struct=item->user_pointer;
   2876            CLIST *t;
   2877            int i=item->cur_item;
   2878            if (item->type==0)
   \   00000004   ........           LDR      R5,??DataTable118  ;; S_ICONS
   \   00000008   2CD04DE2           SUB      SP,SP,#+44
   \   0000000C   0070A0E1           MOV      R7,R0
   \   00000010   0000D7E5           LDRB     R0,[R7, #+0]
   \   00000014   044097E5           LDR      R4,[R7, #+4]
   \   00000018   B860D7E1           LDRH     R6,[R7, #+8]
   \   0000001C   000050E3           CMP      R0,#+0
   \   00000020   0D00001A           BNE      ??ed_options_handler_0
   2879            {
   2880              switch(i)
   \   00000024   0C0097E5           LDR      R0,[R7, #+12]
   \   00000028   7C119FE5           LDR      R1,??ed_options_handler_1  ;; `?<Constant "\\321\\353\\345\\344\\363\\376\\371\\350\\3`
   \   0000002C   0620B0E1           MOVS     R2,R6
   \   00000030   0800000A           BEQ      ??ed_options_handler_2
   \   00000034   012056E2           SUBS     R2,R6,#+1
   2881              {
   2882              case 0:
   2883                ascii2ws(item->ws,LG_MNUEDNEXTACT);
   2884                break;
   2885              case 1:
   2886                ascii2ws(item->ws,LG_MNUEDPREVACT);
   \   00000038   10108102           ADDEQ    R1,R1,#+16
   \   0000003C   0500000A           BEQ      ??ed_options_handler_2
   2887                break;
   2888              default:
   2889                i-=2;
   2890                if (i<ed_struct->loaded_templates) ascii2ws(item->ws,templates_lines[i]);
   \   00000040   101094E5           LDR      R1,[R4, #+16]
   \   00000044   026046E2           SUB      R6,R6,#+2
   \   00000048   010056E1           CMP      R6,R1
   \   0000004C   540000AA           BGE      ??ed_options_handler_3
   \   00000050   CC1095E5           LDR      R1,[R5, #+204]
   \   00000054   061191E7           LDR      R1,[R1, +R6, LSL #+2]
   \                     ??ed_options_handler_2:
   \   00000058   ........           _BLF     ascii2ws,??ascii2ws??rA
   2891                break;
   2892              }
   2893            }
   2894            if (item->type==1)
   \                     ??ed_options_handler_0:
   \   0000005C   0000D7E5           LDRB     R0,[R7, #+0]
   \   00000060   010050E3           CMP      R0,#+1
   \   00000064   4E00001A           BNE      ??ed_options_handler_3
   2895            {
   2896              switch(i)
   \   00000068   007094E5           LDR      R7,[R4, #+0]
   \   0000006C   0600B0E1           MOVS     R0,R6
   \   00000070   0200000A           BEQ      ??ed_options_handler_4
   \   00000074   010056E2           SUBS     R0,R6,#+1
   \   00000078   0B00000A           BEQ      ??ed_options_handler_5
   \   0000007C   0D0000EA           B        ??ed_options_handler_6
   2897              {
   2898              case 0:
   2899                t=FindNextActiveContact(ed_struct->ed_contact);
   \                     ??ed_options_handler_4:
   \   00000080   0700A0E1           MOV      R0,R7
   \   00000084   ........           BL       FindNextActiveContact
   \                     ??ed_options_handler_7:
   \   00000088   0040B0E1           MOVS     R4,R0
   2900                if (t && t!=ed_struct->ed_contact)
   \   0000008C   07005411           CMPNE    R4,R7
   \   00000090   4300000A           BEQ      ??ed_options_handler_3
   2901                {
   2902                  GeneralFunc_flag1(edchat_id,1);
   \   00000094   080195E5           LDR      R0,[R5, #+264]
   \   00000098   0110A0E3           MOV      R1,#+1
   \   0000009C   3D0100EF           SWI      +317
   2903                  CreateEditChat(t);
   \   000000A0   0400A0E1           MOV      R0,R4
   \   000000A4   ........           BL       CreateEditChat
   \   000000A8   3D0000EA           B        ??ed_options_handler_3
   2904                }
   2905                break;
   2906              case 1:
   2907                t=FindPrevActiveContact(ed_struct->ed_contact);
   \                     ??ed_options_handler_5:
   \   000000AC   0700A0E1           MOV      R0,R7
   \   000000B0   ........           BL       FindPrevActiveContact
   \   000000B4   F3FFFFEA           B        ??ed_options_handler_7
   2908                if (t && t!=ed_struct->ed_contact)
   2909                {
   2910                  GeneralFunc_flag1(edchat_id,1);
   2911                  CreateEditChat(t);
   2912                }
   2913                break;
   2914              default:
   2915                i-=2;
   2916                if (i<ed_struct->loaded_templates)
   \                     ??ed_options_handler_6:
   \   000000B8   100094E5           LDR      R0,[R4, #+16]
   \   000000BC   026046E2           SUB      R6,R6,#+2
   \   000000C0   000056E1           CMP      R6,R0
   \   000000C4   360000AA           BGE      ??ed_options_handler_3
   2917                {
   2918          	EDITCONTROL ec;
   2919          	WSHDR *ed_ws;
   2920          	int c;
   2921          	char *p=templates_lines[i];
   \   000000C8   CC0095E5           LDR      R0,[R5, #+204]
   2922          	ExtractEditControl(ed_struct->ed_chatgui,ed_struct->ed_answer,&ec);
   \   000000CC   081094E5           LDR      R1,[R4, #+8]
   \   000000D0   065190E7           LDR      R5,[R0, +R6, LSL #+2]
   \   000000D4   040094E5           LDR      R0,[R4, #+4]
   \   000000D8   0D20A0E1           MOV      R2,SP
   \   000000DC   690100EF           SWI      +361
   2923          	ed_ws=AllocWS(ec.pWS->wsbody[0]+strlen(p));
   \   000000E0   0500A0E1           MOV      R0,R5
   \   000000E4   1B0000EF           SWI      +27
   \   000000E8   28109DE5           LDR      R1,[SP, #+40]
   \   000000EC   001091E5           LDR      R1,[R1, #+0]
   \   000000F0   B010D1E1           LDRH     R1,[R1, #+0]
   \   000000F4   010080E0           ADD      R0,R0,R1
   \   000000F8   250100EF           SWI      +293
   2924          	wstrcpy(ed_ws,ec.pWS);
   \   000000FC   28109DE5           LDR      R1,[SP, #+40]
   \   00000100   0060A0E1           MOV      R6,R0
   \   00000104   1F0100EF           SWI      +287
   2925                  if (EDIT_GetFocus(ed_struct->ed_chatgui)==ed_struct->ed_answer)
   \   00000108   040094E5           LDR      R0,[R4, #+4]
   \   0000010C   820100EF           SWI      +386
   \   00000110   081094E5           LDR      R1,[R4, #+8]
   \   00000114   010050E1           CMP      R0,R1
   \   00000118   1800001A           BNE      ??ed_options_handler_8
   2926                  {
   2927                    int pos=EDIT_GetCursorPos(ed_struct->ed_chatgui);
   \   0000011C   040094E5           LDR      R0,[R4, #+4]
   \   00000120   D30100EF           SWI      +467
   \   00000124   0070A0E1           MOV      R7,R0
   \   00000128   050000EA           B        ??ed_options_handler_9
   2928                    while(c=*p++)
   2929                    {
   2930                      wsInsertChar(ed_ws,char8to16(c),pos++);
   \                     ??ed_options_handler_10:
   \   0000012C   ........           _BLF     char8to16,??char8to16??rA
   \   00000130   0010A0E1           MOV      R1,R0
   \   00000134   0720A0E1           MOV      R2,R7
   \   00000138   0600A0E1           MOV      R0,R6
   \   0000013C   1D0000EF           SWI      +29
   \   00000140   017087E2           ADD      R7,R7,#+1
   2931                    }
   \                     ??ed_options_handler_9:
   \   00000144   ........           LDRB     R0,[R5], #+1
   \   00000148   000050E3           CMP      R0,#+0
   \   0000014C   F6FFFF1A           BNE      ??ed_options_handler_10
   2932                    EDIT_SetTextToEditControl(ed_struct->ed_chatgui,ed_struct->ed_answer,ed_ws);
   \   00000150   081094E5           LDR      R1,[R4, #+8]
   \   00000154   040094E5           LDR      R0,[R4, #+4]
   \   00000158   0620A0E1           MOV      R2,R6
   \   0000015C   DE0100EF           SWI      +478
   2933                    EDIT_SetCursorPos(ed_struct->ed_chatgui,pos);
   \   00000160   040094E5           LDR      R0,[R4, #+4]
   \   00000164   0710A0E1           MOV      R1,R7
   \   00000168   D40100EF           SWI      +468
   \   0000016C   0A0000EA           B        ??ed_options_handler_11
   2934                  }
   2935                  else
   2936                  {
   2937                    while(c=*p++)
   2938                    {
   2939                      wsAppendChar(ed_ws,char8to16(c));
   \                     ??ed_options_handler_12:
   \   00000170   ........           _BLF     char8to16,??char8to16??rA
   \   00000174   0010A0E1           MOV      R1,R0
   \   00000178   0600A0E1           MOV      R0,R6
   \   0000017C   1C0000EF           SWI      +28
   2940                    }
   \                     ??ed_options_handler_8:
   \   00000180   ........           LDRB     R0,[R5], #+1
   \   00000184   000050E3           CMP      R0,#+0
   \   00000188   F8FFFF1A           BNE      ??ed_options_handler_12
   2941                    EDIT_SetTextToEditControl(ed_struct->ed_chatgui,ed_struct->ed_answer,ed_ws);
   \   0000018C   081094E5           LDR      R1,[R4, #+8]
   \   00000190   040094E5           LDR      R0,[R4, #+4]
   \   00000194   0620A0E1           MOV      R2,R6
   \   00000198   DE0100EF           SWI      +478
   2942                  }
   2943          	FreeWS(ed_ws);
   \                     ??ed_options_handler_11:
   \   0000019C   0600A0E1           MOV      R0,R6
   \   000001A0   290100EF           SWI      +297
   2944                }
   2945                break;
   2946              }
   2947            }
   2948          }
   \                     ??ed_options_handler_3:
   \   000001A4   2CD08DE2           ADD      SP,SP,#+44       ;; stack cleaning
   \   000001A8   F080BDE8           POP      {R4-R7,PC}       ;; return
   \                     ??ed_options_handler_1:
   \   000001AC   ........           DC32     `?<Constant "\\321\\353\\345\\344\\363\\376\\371\\350\\3`
   2949          

   \                                 In segment CODE, align 4, keep-with-next
   2950          unsigned short * wstrstr(unsigned short *ws, char *str, int *wslen, int len)
   2951          {
   \                     wstrstr:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   \   00000004   0070A0E1           MOV      R7,R0
   \   00000008   0140A0E1           MOV      R4,R1
   \   0000000C   0250A0E1           MOV      R5,R2
   \   00000010   0360A0E1           MOV      R6,R3
   \   00000014   030000EA           B        ??wstrstr_0
   2952            char *s;
   2953            unsigned short *w;
   2954            int l;
   2955           
   2956            while(*wslen >= len)
   2957            {
   2958              s = str;
   2959              w = ws;
   2960              l = len;
   2961              for(; (char16to8(*w) == *s) && l; w++, s++, l--);     
   2962              if(!l) return ws;
   2963              ws++;
   2964              (*wslen)--;
   \                     ??wstrstr_1:
   \   00000018   000095E5           LDR      R0,[R5, #+0]
   \   0000001C   027087E2           ADD      R7,R7,#+2
   \   00000020   010040E2           SUB      R0,R0,#+1
   \   00000024   000085E5           STR      R0,[R5, #+0]
   \                     ??wstrstr_0:
   \   00000028   000095E5           LDR      R0,[R5, #+0]
   \   0000002C   060050E1           CMP      R0,R6
   \   00000030   0F0000BA           BLT      ??wstrstr_2
   \   00000034   0480A0E1           MOV      R8,R4
   \   00000038   0790A0E1           MOV      R9,R7
   \   0000003C   06A0A0E1           MOV      R10,R6
   \   00000040   000000EA           B        ??wstrstr_3
   \                     ??wstrstr_4:
   \   00000044   01A04AE2           SUB      R10,R10,#+1
   \                     ??wstrstr_3:
   \   00000048   ........           LDRH     R0,[R9], #+2
   \   0000004C   ........           _BLF     char16to8,??char16to8??rA
   \   00000050   ........           LDRB     R1,[R8], #+1
   \   00000054   010050E1           CMP      R0,R1
   \   00000058   0100001A           BNE      ??wstrstr_5
   \   0000005C   00005AE3           CMP      R10,#+0
   \   00000060   F7FFFF1A           BNE      ??wstrstr_4
   \                     ??wstrstr_5:
   \   00000064   00005AE3           CMP      R10,#+0
   \   00000068   EAFFFF1A           BNE      ??wstrstr_1
   \   0000006C   0700A0E1           MOV      R0,R7
   \   00000070   F087BDE8           POP      {R4-R10,PC}
   2965            }
   2966            return 0;
   \                     ??wstrstr_2:
   \   00000074   0000A0E3           MOV      R0,#+0
   \   00000078   F087BDE8           POP      {R4-R10,PC}      ;; return
   2967            
   2968          }
   2969          

   \                                 In segment CODE, align 4, keep-with-next
   2970          int IsUrl(WSHDR *ws, int pos, char *link)
   2971          {
   \                     IsUrl:
   \   00000000   F14F2DE9           PUSH     {R0,R4-R11,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0150A0E1           MOV      R5,R1
   2972            const char *valid = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789$-_.+!*'(),%;:@&=/?абвгдеёжзийклмнопрстуфхцчшщъыьэюяАБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ";
   2973          
   2974            int len = wstrlen(ws);
   2975            unsigned short *str = ws->wsbody+1, *tmp, *begin;
   2976            tmp = str;
   2977            
   2978            begin = str = wstrstr(str, "http://", &len, 7);
   \   0000000C   ........           LDR      R7,??DataTable120  ;; `?<Constant "abcdefghijklmnopqrstu...">`
   \   00000010   0260A0E1           MOV      R6,R2
   \   00000014   230100EF           SWI      +291
   \   00000018   00008DE5           STR      R0,[SP, #+0]
   \   0000001C   04009DE5           LDR      R0,[SP, #+4]
   \   00000020   0730A0E3           MOV      R3,#+7
   \   00000024   000090E5           LDR      R0,[R0, #+0]
   \   00000028   0D20A0E1           MOV      R2,SP
   \   0000002C   028080E2           ADD      R8,R0,#+2
   \   00000030   941087E2           ADD      R1,R7,#+148
   \   00000034   0800A0E1           MOV      R0,R8
   \   00000038   ........           BL       wstrstr
   \   0000003C   00B0A0E1           MOV      R11,R0
   \   00000040   0040A0E1           MOV      R4,R0
   \   00000044   A890A0E1           LSR      R9,R8,#+1
   \   00000048   02A045E2           SUB      R10,R5,#+2
   \   0000004C   060000EA           B        ??IsUrl_0
   2979          
   2980            while(str && (begin-tmp <= pos))
   2981            {
   2982              while(len && strchr(valid, char16to8(*str))) {str++; len--;}
   2983              if(str-tmp >= pos-2)
   2984              {
   2985                for(;begin < str; begin++, link++)
   2986                  *link = char16to8(*begin);
   2987                link[str-begin] = 0;
   2988                return 1;
   2989              }
   2990              begin = str = wstrstr(str, "http://", &len, 7);
   \                     ??IsUrl_1:
   \   00000050   0730A0E3           MOV      R3,#+7
   \   00000054   0D20A0E1           MOV      R2,SP
   \   00000058   941087E2           ADD      R1,R7,#+148
   \   0000005C   0B00A0E1           MOV      R0,R11
   \   00000060   ........           BL       wstrstr
   \   00000064   00B0A0E1           MOV      R11,R0
   \   00000068   0040A0E1           MOV      R4,R0
   \                     ??IsUrl_0:
   \   0000006C   00005BE3           CMP      R11,#+0
   \   00000070   0200000A           BEQ      ??IsUrl_2
   \   00000074   A40069E0           RSB      R0,R9,R4, LSR #+1
   \   00000078   000055E1           CMP      R5,R0
   \   0000007C   0B0000AA           BGE      ??IsUrl_3
   2991            }
   2992          
   2993            len = wstrlen(ws);
   \                     ??IsUrl_2:
   \   00000080   04009DE5           LDR      R0,[SP, #+4]
   \   00000084   230100EF           SWI      +291
   \   00000088   00008DE5           STR      R0,[SP, #+0]
   2994            begin = str = wstrstr(tmp, "www.", &len, 4);
   \   0000008C   0430A0E3           MOV      R3,#+4
   \   00000090   0D20A0E1           MOV      R2,SP
   \   00000094   9C1087E2           ADD      R1,R7,#+156
   \   00000098   0800A0E1           MOV      R0,R8
   \   0000009C   200000EA           B        ??IsUrl_4
   \                     ??IsUrl_5:
   \   000000A0   00109DE5           LDR      R1,[SP, #+0]
   \   000000A4   02B08BE2           ADD      R11,R11,#+2
   \   000000A8   011041E2           SUB      R1,R1,#+1
   \   000000AC   00108DE5           STR      R1,[SP, #+0]
   \                     ??IsUrl_3:
   \   000000B0   00009DE5           LDR      R0,[SP, #+0]
   \   000000B4   000050E3           CMP      R0,#+0
   \   000000B8   0600000A           BEQ      ??IsUrl_6
   \   000000BC   B000DBE1           LDRH     R0,[R11, #+0]
   \   000000C0   ........           _BLF     char16to8,??char16to8??rA
   \   000000C4   0010A0E1           MOV      R1,R0
   \   000000C8   0700A0E1           MOV      R0,R7
   \   000000CC   180000EF           SWI      +24
   \   000000D0   000050E3           CMP      R0,#+0
   \   000000D4   F1FFFF1A           BNE      ??IsUrl_5
   \                     ??IsUrl_6:
   \   000000D8   AB0069E0           RSB      R0,R9,R11, LSR #+1
   \   000000DC   0A0050E1           CMP      R0,R10
   \   000000E0   DAFFFFBA           BLT      ??IsUrl_1
   \                     ??IsUrl_7:
   \   000000E4   0B0054E1           CMP      R4,R11
   \   000000E8   0300002A           BCS      ??IsUrl_8
   \   000000EC   ........           LDRH     R0,[R4], #+2
   \   000000F0   ........           _BLF     char16to8,??char16to8??rA
   \   000000F4   ........           STRB     R0,[R6], #+1
   \   000000F8   F9FFFFEA           B        ??IsUrl_7
   \                     ??IsUrl_8:
   \   000000FC   AB00A0E1           LSR      R0,R11,#+1
   \   00000100   A40040E0           SUB      R0,R0,R4, LSR #+1
   \   00000104   0010A0E3           MOV      R1,#+0
   \   00000108   0610C0E7           STRB     R1,[R0, +R6]
   \   0000010C   0100A0E3           MOV      R0,#+1
   \   00000110   F68FBDE8           POP      {R1,R2,R4-R11,PC}
   2995            while(str && (begin-tmp <= pos))
   2996            {
   2997              while(len && strchr(valid, char16to8(*str))) {str++; len--;}
   2998              if(str-tmp >= pos-2)
   2999              {
   3000                for(;begin < str; begin++, link++)
   3001                  *link = char16to8(*begin);
   3002                link[str-begin] = 0;
   3003                return 1;
   3004              }
   3005              begin = str = wstrstr(str, "www.", &len, 4);
   \                     ??IsUrl_9:
   \   00000114   0430A0E3           MOV      R3,#+4
   \   00000118   0D20A0E1           MOV      R2,SP
   \   0000011C   9C1087E2           ADD      R1,R7,#+156
   \   00000120   0B00A0E1           MOV      R0,R11
   \                     ??IsUrl_4:
   \   00000124   ........           BL       wstrstr
   \   00000128   00B0A0E1           MOV      R11,R0
   \   0000012C   0040A0E1           MOV      R4,R0
   \   00000130   00005BE3           CMP      R11,#+0
   \   00000134   0200000A           BEQ      ??IsUrl_10
   \   00000138   A40069E0           RSB      R0,R9,R4, LSR #+1
   \   0000013C   000055E1           CMP      R5,R0
   \   00000140   050000AA           BGE      ??IsUrl_11
   3006            }
   3007            return 0;
   \                     ??IsUrl_10:
   \   00000144   0000A0E3           MOV      R0,#+0
   \   00000148   F68FBDE8           POP      {R1,R2,R4-R11,PC}  ;; return
   \                     ??IsUrl_12:
   \   0000014C   00109DE5           LDR      R1,[SP, #+0]
   \   00000150   02B08BE2           ADD      R11,R11,#+2
   \   00000154   011041E2           SUB      R1,R1,#+1
   \   00000158   00108DE5           STR      R1,[SP, #+0]
   \                     ??IsUrl_11:
   \   0000015C   00009DE5           LDR      R0,[SP, #+0]
   \   00000160   000050E3           CMP      R0,#+0
   \   00000164   0600000A           BEQ      ??IsUrl_13
   \   00000168   B000DBE1           LDRH     R0,[R11, #+0]
   \   0000016C   ........           _BLF     char16to8,??char16to8??rA
   \   00000170   0010A0E1           MOV      R1,R0
   \   00000174   0700A0E1           MOV      R0,R7
   \   00000178   180000EF           SWI      +24
   \   0000017C   000050E3           CMP      R0,#+0
   \   00000180   F1FFFF1A           BNE      ??IsUrl_12
   \                     ??IsUrl_13:
   \   00000184   AB0069E0           RSB      R0,R9,R11, LSR #+1
   \   00000188   0A0050E1           CMP      R0,R10
   \   0000018C   E0FFFFBA           BLT      ??IsUrl_9
   \                     ??IsUrl_14:
   \   00000190   0B0054E1           CMP      R4,R11
   \   00000194   D8FFFF2A           BCS      ??IsUrl_8
   \   00000198   ........           LDRH     R0,[R4], #+2
   \   0000019C   ........           _BLF     char16to8,??char16to8??rA
   \   000001A0   ........           STRB     R0,[R6], #+1
   \   000001A4   F9FFFFEA           B        ??IsUrl_14
   3008          }
   3009          
   3010          #define UTF16_DIS_UNDERLINE (0xE002)
   3011          #define UTF16_ENA_UNDERLINE (0xE001)
   3012          

   \                                 In segment CODE, align 4, keep-with-next
   3013          void ParseAnswer(WSHDR *ws, const char *s)
   3014          {
   \                     ParseAnswer:
   \   00000000   F1472DE9           PUSH     {R0,R4-R10,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   3015            const char *valid = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789$-_.+!*'(),%;:@&=/?абвгдеёжзийклмнопрстуфхцчшщъыьэюяАБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ";
   3016            S_SMILES *t;
   3017            S_SMILES *t_root=(S_SMILES *)s_top;
   \   00000008   0C029FE5           LDR      R0,??ParseAnswer_0  ;; s_top
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   006090E5           LDR      R6,[R0, #+0]
   3018            STXT_SMILES *st;
   3019            unsigned int wchar;
   3020            unsigned int ulb=s[0]+(s[1]<<8)+(s[2]<<16)+(s[3]<<24);
   \   00000014   0000D5E5           LDRB     R0,[R5, #+0]
   \   00000018   0110D5E5           LDRB     R1,[R5, #+1]
   \   0000001C   010480E0           ADD      R0,R0,R1, LSL #+8
   \   00000020   0210D5E5           LDRB     R1,[R5, #+2]
   \   00000024   010880E0           ADD      R0,R0,R1, LSL #+16
   \   00000028   0310D5E5           LDRB     R1,[R5, #+3]
   \   0000002C   018C80E0           ADD      R8,R0,R1, LSL #+24
   3021            CutWSTR(ws,0);
   \   00000030   0010A0E3           MOV      R1,#+0
   \   00000034   0400A0E1           MOV      R0,R4
   \   00000038   260100EF           SWI      +294
   \   0000003C   160000EA           B        ??ParseAnswer_1
   3022            int i;
   3023            while(wchar=*s)
   3024            {
   3025              if(s==strstr(s, "http://") || s == strstr(s, "www."))
   3026              {
   3027                wsAppendChar(ws,UTF16_ENA_UNDERLINE);
   3028                while(*s && strchr(valid, *s))
   3029                {
   3030                  wchar=char8to16(*s);
   \                     ??ParseAnswer_2:
   \   00000040   ........           LDRB     R0,[R5], #+1
   \   00000044   ........           _BLF     char8to16,??char8to16??rA
   3031                  wsAppendChar(ws,wchar);
   \   00000048   0010A0E1           MOV      R1,R0
   \                     ??ParseAnswer_3:
   \   0000004C   0400A0E1           MOV      R0,R4
   \   00000050   1C0000EF           SWI      +28
   3032                  s++;       
   3033                }
   \   00000054   0010D5E5           LDRB     R1,[R5, #+0]
   \   00000058   000051E3           CMP      R1,#+0
   \   0000005C   0300000A           BEQ      ??ParseAnswer_4
   \   00000060   0900A0E1           MOV      R0,R9
   \   00000064   180000EF           SWI      +24
   \   00000068   000050E3           CMP      R0,#+0
   \   0000006C   F3FFFF1A           BNE      ??ParseAnswer_2
   3034                wsAppendChar(ws,UTF16_DIS_UNDERLINE);
   \                     ??ParseAnswer_4:
   \   00000070   0210A0E3           MOV      R1,#+2
   \   00000074   E01C81E3           ORR      R1,R1,#0xE000
   \   00000078   0400A0E1           MOV      R0,R4
   \   0000007C   1C0000EF           SWI      +28
   3035                ulb=s[0]+(s[1]<<8)+(s[2]<<16)+(s[3]<<24);
   \   00000080   0000D5E5           LDRB     R0,[R5, #+0]
   \   00000084   0110D5E5           LDRB     R1,[R5, #+1]
   \   00000088   010480E0           ADD      R0,R0,R1, LSL #+8
   \   0000008C   0210D5E5           LDRB     R1,[R5, #+2]
   \   00000090   010880E0           ADD      R0,R0,R1, LSL #+16
   \   00000094   0310D5E5           LDRB     R1,[R5, #+3]
   \   00000098   018C80E0           ADD      R8,R0,R1, LSL #+24
   3036                continue;
   \                     ??ParseAnswer_1:
   \   0000009C   0070D5E5           LDRB     R7,[R5, #+0]
   \   000000A0   000057E3           CMP      R7,#+0
   \   000000A4   4F00000A           BEQ      ??ParseAnswer_5
   \   000000A8   ........           LDR      R9,??DataTable120  ;; `?<Constant "abcdefghijklmnopqrstu...">`
   \   000000AC   0500A0E1           MOV      R0,R5
   \   000000B0   941089E2           ADD      R1,R9,#+148
   \   000000B4   180100EF           SWI      +280
   \   000000B8   000055E1           CMP      R5,R0
   \   000000BC   0400000A           BEQ      ??ParseAnswer_6
   \   000000C0   9C1089E2           ADD      R1,R9,#+156
   \   000000C4   0500A0E1           MOV      R0,R5
   \   000000C8   180100EF           SWI      +280
   \   000000CC   000055E1           CMP      R5,R0
   \   000000D0   0200001A           BNE      ??ParseAnswer_7
   \                     ??ParseAnswer_6:
   \   000000D4   0110A0E3           MOV      R1,#+1
   \   000000D8   E01C81E3           ORR      R1,R1,#0xE000
   \   000000DC   DAFFFFEA           B        ??ParseAnswer_3
   3037              }
   3038              
   3039              t=t_root;
   \                     ??ParseAnswer_7:
   \   000000E0   0690A0E1           MOV      R9,R6
   \   000000E4   230000EA           B        ??ParseAnswer_8
   3040              while(t)
   3041              {
   3042                st=t->lines;
   3043                while(st)
   3044                {
   3045          	if ((ulb&st->mask)==st->key)
   \                     ??ParseAnswer_9:
   \   000000E8   0B00DAE5           LDRB     R0,[R10, #+11]
   \   000000EC   0A10DAE5           LDRB     R1,[R10, #+10]
   \   000000F0   0620DAE5           LDRB     R2,[R10, #+6]
   \   000000F4   000481E1           ORR      R0,R1,R0, LSL #+8
   \   000000F8   0910DAE5           LDRB     R1,[R10, #+9]
   \   000000FC   000481E1           ORR      R0,R1,R0, LSL #+8
   \   00000100   0810DAE5           LDRB     R1,[R10, #+8]
   \   00000104   000481E1           ORR      R0,R1,R0, LSL #+8
   \   00000108   0710DAE5           LDRB     R1,[R10, #+7]
   \   0000010C   080000E0           AND      R0,R0,R8
   \   00000110   011482E1           ORR      R1,R2,R1, LSL #+8
   \   00000114   0520DAE5           LDRB     R2,[R10, #+5]
   \   00000118   011482E1           ORR      R1,R2,R1, LSL #+8
   \   0000011C   0420DAE5           LDRB     R2,[R10, #+4]
   \   00000120   011482E1           ORR      R1,R2,R1, LSL #+8
   \   00000124   010050E1           CMP      R0,R1
   \   00000128   0700001A           BNE      ??ParseAnswer_10
   3046          	{
   3047          	  if (!strncmp(s,st->text,strlen(st->text))) goto L1;
   \   0000012C   0C008AE2           ADD      R0,R10,#+12
   \   00000130   1B0000EF           SWI      +27
   \   00000134   0020A0E1           MOV      R2,R0
   \   00000138   0C108AE2           ADD      R1,R10,#+12
   \   0000013C   0500A0E1           MOV      R0,R5
   \   00000140   150100EF           SWI      +277
   \   00000144   000050E3           CMP      R0,#+0
   \   00000148   1500000A           BEQ      ??ParseAnswer_11
   3048          	}
   3049          	st=st->next;
   \                     ??ParseAnswer_10:
   \   0000014C   0000A0E3           MOV      R0,#+0
   \                     ??ParseAnswer_12:
   \   00000150   0A20D0E7           LDRB     R2,[R0, +R10]
   \   00000154   0D10A0E1           MOV      R1,SP
   \   00000158   0120C0E7           STRB     R2,[R0, +R1]
   \   0000015C   010080E2           ADD      R0,R0,#+1
   \   00000160   040050E3           CMP      R0,#+4
   \   00000164   F9FFFFBA           BLT      ??ParseAnswer_12
   \   00000168   00A09DE5           LDR      R10,[SP, #+0]
   3050                }
   \                     ??ParseAnswer_13:
   \   0000016C   00005AE3           CMP      R10,#+0
   \   00000170   DCFFFF1A           BNE      ??ParseAnswer_9
   3051                t=t->next;
   \   00000174   009099E5           LDR      R9,[R9, #+0]
   \                     ??ParseAnswer_8:
   \   00000178   000059E3           CMP      R9,#+0
   \   0000017C   08A09915           LDRNE    R10,[R9, #+8]
   \   00000180   F9FFFF1A           BNE      ??ParseAnswer_13
   3052              }
   3053            L1:
   3054              if (t)
   3055              {
   3056                wchar=t->uni_smile;
   3057                s+=strlen(st->text);
   3058                ulb=s[0]+(s[1]<<8)+(s[2]<<16)+(s[3]<<24);
   3059              }
   3060              else
   3061              {
   3062                wchar=char8to16(wchar);
   \   00000184   0700A0E1           MOV      R0,R7
   \   00000188   ........           _BLF     char8to16,??char8to16??rA
   \   0000018C   0070A0E1           MOV      R7,R0
   3063                s++;
   3064                ulb>>=8;
   3065                ulb+=s[3]<<24;
   \   00000190   015085E2           ADD      R5,R5,#+1
   \   00000194   0300D5E5           LDRB     R0,[R5, #+3]
   \   00000198   000CA0E1           LSL      R0,R0,#+24
   \   0000019C   288480E0           ADD      R8,R0,R8, LSR #+8
   \   000001A0   0A0000EA           B        ??ParseAnswer_14
   3066              }
   \                     ??ParseAnswer_11:
   \   000001A4   047099E5           LDR      R7,[R9, #+4]
   \   000001A8   0C008AE2           ADD      R0,R10,#+12
   \   000001AC   1B0000EF           SWI      +27
   \   000001B0   055080E0           ADD      R5,R0,R5
   \   000001B4   0000D5E5           LDRB     R0,[R5, #+0]
   \   000001B8   0110D5E5           LDRB     R1,[R5, #+1]
   \   000001BC   010480E0           ADD      R0,R0,R1, LSL #+8
   \   000001C0   0210D5E5           LDRB     R1,[R5, #+2]
   \   000001C4   010880E0           ADD      R0,R0,R1, LSL #+16
   \   000001C8   0310D5E5           LDRB     R1,[R5, #+3]
   \   000001CC   018C80E0           ADD      R8,R0,R1, LSL #+24
   3067              if (wchar!=10) wsAppendChar(ws,wchar);
   \                     ??ParseAnswer_14:
   \   000001D0   0A0057E3           CMP      R7,#+10
   \   000001D4   B0FFFF0A           BEQ      ??ParseAnswer_1
   \   000001D8   0710A0E1           MOV      R1,R7
   \   000001DC   0400A0E1           MOV      R0,R4
   \   000001E0   1C0000EF           SWI      +28
   \   000001E4   ACFFFFEA           B        ??ParseAnswer_1
   3068            }
   3069            i=ws->wsbody[0];
   \                     ??ParseAnswer_5:
   \   000001E8   000094E5           LDR      R0,[R4, #+0]
   \   000001EC   B010D0E1           LDRH     R1,[R0, #+0]
   \   000001F0   000000EA           B        ??ParseAnswer_15
   3070            while(i>1)
   3071            {
   3072              if (ws->wsbody[i--]!=13) break;
   3073              ws->wsbody[0]=i;
   \                     ??ParseAnswer_16:
   \   000001F4   B010C0E1           STRH     R1,[R0, #+0]
   \                     ??ParseAnswer_15:
   \   000001F8   020051E3           CMP      R1,#+2
   \   000001FC   F187BDB8           POPLT    {R0,R4-R10,PC}
   \   00000200   0120A0E1           MOV      R2,R1
   \   00000204   011042E2           SUB      R1,R2,#+1
   \   00000208   822080E0           ADD      R2,R0,R2, LSL #+1
   \   0000020C   B020D2E1           LDRH     R2,[R2, #+0]
   \   00000210   0D0052E3           CMP      R2,#+13
   \   00000214   F6FFFF0A           BEQ      ??ParseAnswer_16
   3074            }
   3075          }
   \   00000218   F187BDE8           POP      {R0,R4-R10,PC}   ;; return
   \                     ??ParseAnswer_0:
   \   0000021C   ........           DC32     s_top
   3076          

   \                                 In segment CODE, align 4, keep-with-next
   3077          void SaveAnswer(CLIST *cl, WSHDR *ws)
   3078          {
   \                     SaveAnswer:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0100A0E1           MOV      R0,R1
   3079            char *p=ExtractAnswer(ws);
   \   0000000C   ........           BL       ExtractAnswer
   \   00000010   0050A0E1           MOV      R5,R0
   3080            mfree(cl->answer);
   \   00000014   680094E5           LDR      R0,[R4, #+104]
   \   00000018   150000EF           SWI      +21
   3081            cl->answer=p;
   \   0000001C   685084E5           STR      R5,[R4, #+104]
   3082          }
   \   00000020   3080BDE8           POP      {R4,R5,PC}       ;; return
   3083          
   3084          

   \                                 In segment CODE, align 4, keep-with-next
   3085          int GetTempName(void)
   3086          {
   \                     GetTempName:
   \   00000000   0F402DE9           PUSH     {R0-R3,LR}
   3087            static const int DMonth[]={0,31,59,90,120,151,181,212,243,273,304,334,365};
   3088            unsigned long iday;
   3089            TTime tt;
   3090            TDate dd;
   3091            GetDateTime(&dd,&tt);
   \   00000004   08108DE2           ADD      R1,SP,#+8
   \   00000008   0D00A0E1           MOV      R0,SP
   \   0000000C   B40000EF           SWI      +180
   3092            dd.year=dd.year%100;
   \   00000010   00009DE5           LDR      R0,[SP, #+0]
   \   00000014   6410A0E3           MOV      R1,#+100
   \   00000018   ........           _BLF     ??divu32_a,??rA??divu32_a
   3093            iday=365*dd.year+DMonth[dd.month-1]+(dd.day - 1);
   3094            iday=iday+(dd.year>>2);
   \   0000001C   6CC09FE5           LDR      R12,??GetTempName_0  ;; ??DMonth
   \   00000020   00008DE5           STR      R0,[SP, #+0]
   \   00000024   0400DDE5           LDRB     R0,[SP, #+4]
   \   00000028   00109DE5           LDR      R1,[SP, #+0]
   \   0000002C   6D20A0E3           MOV      R2,#+109
   \   00000030   402F82E3           ORR      R2,R2,#0x100
   \   00000034   00318CE0           ADD      R3,R12,R0, LSL #+2
   \   00000038   043013E5           LDR      R3,[R3, #-4]
   3095            if (dd.month>2||(dd.year&3)>0)
   \   0000003C   030050E3           CMP      R0,#+3
   \   00000040   923121E0           MLA      R1,R2,R1,R3
   \   00000044   0520DDE5           LDRB     R2,[SP, #+5]
   \   00000048   012042E2           SUB      R2,R2,#+1
   \   0000004C   011082E0           ADD      R1,R2,R1
   \   00000050   00209DE5           LDR      R2,[SP, #+0]
   \   00000054   221181E0           ADD      R1,R1,R2, LSR #+2
   \   00000058   0100002A           BCS      ??GetTempName_1
   \   0000005C   030012E3           TST      R2,#0x3
   \   00000060   0000000A           BEQ      ??GetTempName_2
   3096              iday++;
   \                     ??GetTempName_1:
   \   00000064   011081E2           ADD      R1,R1,#+1
   3097            iday=(tt.sec+60*(tt.min+60*(tt.hour+24* iday)));
   3098            return iday;
   \                     ??GetTempName_2:
   \   00000068   0830DDE5           LDRB     R3,[SP, #+8]
   \   0000006C   0920DDE5           LDRB     R2,[SP, #+9]
   \   00000070   0A00DDE5           LDRB     R0,[SP, #+10]
   \   00000074   18C0A0E3           MOV      R12,#+24
   \   00000078   9C3121E0           MLA      R1,R12,R1,R3
   \   0000007C   3C30A0E3           MOV      R3,#+60
   \   00000080   932121E0           MLA      R1,R3,R1,R2
   \   00000084   10D08DE2           ADD      SP,SP,#+16
   \   00000088   930120E0           MLA      R0,R3,R1,R0
   \   0000008C   0080BDE8           POP      {PC}             ;; return
   \                     ??GetTempName_0:
   \   00000090   ........           DC32     ??DMonth
   3099          }

   \                                 In segment DATA_C, align 4, align-sorted
   \                     ??DMonth:
   \   00000000   000000001F00       DC32 0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334, 365
   \              00003B000000
   \              5A0000007800
   \              000097000000
   \              B5000000D400
   \              0000F3000000
   \              110100003001
   \              00004E010000
   \              6D010000    
   3100          
   3101          

   \                                 In segment CODE, align 4, keep-with-next
   3102          int edchat_onkey(GUI *data, GUI_MSG *msg)
   3103          {
   \                     edchat_onkey:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   3104            //-1 - do redraw
   3105            GBS_DelTimer(&tmr_illumination);
   \   00000004   ........           LDR      R6,??DataTable126  ;; S_ICONS
   \   00000008   4CDF4DE2           SUB      SP,SP,#+304
   \   0000000C   0040A0E1           MOV      R4,R0
   \   00000010   0170A0E1           MOV      R7,R1
   \   00000014   E20F86E2           ADD      R0,R6,#+904
   \   00000018   8C0100EF           SWI      +396
   3106            CLIST *t;
   3107            TPKT *p;
   3108            EDITCONTROL ec;
   3109            int len, f;
   3110            unsigned err;
   3111            char *s;
   3112            int l=msg->gbsmsg->submess;
   \   0000001C   040097E5           LDR      R0,[R7, #+4]
   \   00000020   089090E5           LDR      R9,[R0, #+8]
   3113            EDCHAT_STRUCT *ed_struct=EDIT_GetUserPointer(data);
   \   00000024   0400A0E1           MOV      R0,R4
   \   00000028   DF0100EF           SWI      +479
   \   0000002C   0050A0E1           MOV      R5,R0
   3114          //  WSHDR *ews;
   3115            char fn[256];
   3116          
   3117            if (msg->keys==0xFFF)
   \   00000030   F200D7E1           LDRSH    R0,[R7, #+2]
   \   00000034   FF10A0E3           MOV      R1,#+255
   \   00000038   F01E81E3           ORR      R1,R1,#0xF00
   \   0000003C   010050E1           CMP      R0,R1
   \   00000040   0200001A           BNE      ??edchat_onkey_0
   3118            {
   3119              void ec_menu(EDCHAT_STRUCT *);
   3120              ec_menu(ed_struct);
   \   00000044   0500A0E1           MOV      R0,R5
   \   00000048   ........           BL       ec_menu
   \   0000004C   D90000EA           B        ??edchat_onkey_1
   3121              return(-1);
   3122            }
   3123            if (msg->keys==0xFF0)  return (1);
   \                     ??edchat_onkey_0:
   \   00000050   FF0E50E3           CMP      R0,#+4080
   \   00000054   0100001A           BNE      ??edchat_onkey_2
   \                     ??edchat_onkey_3:
   \   00000058   0100A0E3           MOV      R0,#+1
   \   0000005C   300000EA           B        ??edchat_onkey_4
   3124            if (msg->gbsmsg->msg==LONG_PRESS)
   \                     ??edchat_onkey_2:
   \   00000060   040097E5           LDR      R0,[R7, #+4]
   \   00000064   9510A0E3           MOV      R1,#+149
   \   00000068   040090E5           LDR      R0,[R0, #+4]
   \   0000006C   401F81E3           ORR      R1,R1,#0x100
   \   00000070   010050E1           CMP      R0,R1
   3125            {
   3126              if (l==RIGHT_BUTTON)
   \   00000074   3E005903           CMPEQ    R9,#+62
   \   00000078   1700001A           BNE      ??edchat_onkey_5
   3127              {
   3128                if (EDIT_GetFocus(data)==ed_struct->ed_answer)
   \   0000007C   0400A0E1           MOV      R0,R4
   \   00000080   820100EF           SWI      +386
   \   00000084   081095E5           LDR      R1,[R5, #+8]
   \   00000088   010050E1           CMP      R0,R1
   \   0000008C   1200001A           BNE      ??edchat_onkey_5
   3129                {
   3130          	ExtractEditControl(data,ed_struct->ed_answer,&ec);
   \   00000090   04208DE2           ADD      R2,SP,#+4
   \   00000094   0400A0E1           MOV      R0,R4
   \   00000098   690100EF           SWI      +361
   3131          	if (ec.pWS->wsbody[0]==(EDIT_GetCursorPos(data)-1))
   \   0000009C   0400A0E1           MOV      R0,R4
   \   000000A0   D30100EF           SWI      +467
   \   000000A4   2C109DE5           LDR      R1,[SP, #+44]
   \   000000A8   010040E2           SUB      R0,R0,#+1
   \   000000AC   001091E5           LDR      R1,[R1, #+0]
   \   000000B0   B010D1E1           LDRH     R1,[R1, #+0]
   \   000000B4   000051E1           CMP      R1,R0
   \   000000B8   0700001A           BNE      ??edchat_onkey_5
   3132          	{
   3133          	  t=FindNextActiveContact(ed_struct->ed_contact);
   \   000000BC   00A095E5           LDR      R10,[R5, #+0]
   \   000000C0   0A00A0E1           MOV      R0,R10
   \   000000C4   ........           BL       FindNextActiveContact
   \   000000C8   0080B0E1           MOVS     R8,R0
   3134          	  if (t && t!=ed_struct->ed_contact)
   \   000000CC   0A005011           CMPNE    R0,R10
   \   000000D0   0100000A           BEQ      ??edchat_onkey_5
   3135          	  {
   3136          	    CreateEditChat(t);
   \   000000D4   ........           BL       CreateEditChat
   \   000000D8   DEFFFFEA           B        ??edchat_onkey_3
   3137          	    return(1);
   3138          	  }
   3139          	}
   3140                }
   3141              }
   3142            }
   3143            if (msg->gbsmsg->msg==KEY_DOWN)
   \                     ??edchat_onkey_5:
   \   000000DC   040097E5           LDR      R0,[R7, #+4]
   \   000000E0   9310A0E3           MOV      R1,#+147
   \   000000E4   040090E5           LDR      R0,[R0, #+4]
   \   000000E8   401F81E3           ORR      R1,R1,#0x100
   \   000000EC   010050E1           CMP      R0,R1
   \   000000F0   0A00001A           BNE      ??edchat_onkey_6
   3144            {
   3145              if ((l>='0')&&(l<='9'))
   \   000000F4   300059E3           CMP      R9,#+48
   \   000000F8   0B0000BA           BLT      ??edchat_onkey_7
   \   000000FC   3A0059E3           CMP      R9,#+58
   \   00000100   060000AA           BGE      ??edchat_onkey_6
   3146              {
   3147                if (EDIT_GetFocus(data)!=ed_struct->ed_answer)
   \   00000104   0400A0E1           MOV      R0,R4
   \   00000108   820100EF           SWI      +386
   \   0000010C   081095E5           LDR      R1,[R5, #+8]
   \   00000110   010050E1           CMP      R0,R1
   \   00000114   0100000A           BEQ      ??edchat_onkey_6
   3148          	EDIT_SetFocus(data,ed_struct->ed_answer);
   \   00000118   0400A0E1           MOV      R0,R4
   \   0000011C   9B0100EF           SWI      +411
   3149              }
   3150              if (l==GREEN_BUTTON)
   3151              {
   3152                if (connect_state==3)
   3153                {
   3154          	if ((t=ed_struct->ed_contact))
   3155          	{
   3156                    ExtractEditControl(data,ed_struct->ed_answer,&ec);
   3157                    SaveAnswer(t,ec.pWS);
   3158          	  if ((s=t->answer))
   3159          	  {
   3160          	    if ((len=strlen(s)))
   3161          	    {
   3162          	      t->isactive=ACTIVE_TIME;
   3163          	      p=malloc(sizeof(PKT)+len+1);
   3164          	      p->pkt.uin=t->uin;
   3165          	      p->pkt.type=T_SENDMSG;
   3166          	      p->pkt.data_len=len;
   3167          	      strcpy(p->data,s);
   3168          	      AddStringToLog(t,0x01,p->data,I_str,(++SENDMSGCOUNT)&0x7FFF); //Номер сообщения
   3169          	      SUBPROC((void *)SendAnswer,0,p);
   3170          	      mfree(t->answer);
   3171          	      t->answer=NULL;
   3172          	      //        request_remake_edchat=1;
   3173          	      EDIT_SetFocus(data,ed_struct->ed_answer);
   3174          	      CutWSTR(ews,0);
   3175          	      EDIT_SetTextToFocused(data,ews);
   3176          	      AddMsgToChat(data);
   3177          	      RecountMenu(t, 1);
   3178          	      return(-1);
   3179          	    }
   3180          	  }
   3181          	}
   3182                }
   3183              }
   3184              if (l==ENTER_BUTTON)
   3185              {
   3186          
   3187                if (!EDIT_IsMarkModeActive(data))  // Только если не выделение
   3188                {
   3189                  int pos, len;
   3190                  char *link;
   3191                  ExtractEditControl(ed_struct->ed_chatgui,EDIT_GetFocus(ed_struct->ed_chatgui),&ec);
   3192                  wstrcpy(ews,ec.pWS);
   3193                  pos = EDIT_GetCursorPos(data);
   3194                  len = wstrlen(ews);
   3195                  
   3196                  link = malloc(len+1);
   3197                          
   3198                  if(IsUrl(ews, pos, link))
   3199                  {
   3200                    snprintf(fn, 255, "%s\\tmp%u.url", TEMPLATES_PATH, GetTempName);
   3201                    if ((f=fopen(fn,A_WriteOnly+A_BIN+A_Create+A_Truncate,P_WRITE,&err))!=-1)
   3202                    {
   3203                      fwrite(f,link,strlen(link),&err);
   3204                      fclose(f,&err);
   3205                      str_2ws(ews,fn,256);
   3206                      ExecuteFile(ews,0,0);            
   3207                      unlink(fn, &err);
   3208                    }          
   3209                    
   3210          //          LockSched();
   3211          //          ShowMSG(1,(int)link);
   3212          //          UnlockSched();
   3213                    mfree(link);
   3214                    return (-1);
   3215                  }
   3216                  else
   3217                  {
   3218                    int i=ed_struct->loaded_templates=LoadTemplates(ed_struct->ed_contact->uin);
   3219                    EDIT_OpenOptionMenuWithUserItems(data,ed_options_handler,ed_struct,i+2);
   3220                    mfree(link);
   3221                    return (-1);
   3222                  }          
   3223                    
   3224                }
   3225          
   3226              }
   3227              if (l==VOL_UP_BUTTON)
   3228              {
   3229                int pos;
   3230          
   3231                if ((pos=EDIT_GetFocus(data)-2)>=2)
   3232                {
   3233                  EDIT_SetFocus(data, pos);
   3234                  EDIT_SetCursorPos(data, 1);
   3235                }
   3236                return (-1);
   3237              }
   3238              if (l==VOL_DOWN_BUTTON)
   3239              {
   3240                int pos;
   3241          
   3242                if ((pos=EDIT_GetFocus(data)+2)<=ed_struct->ed_answer)
   3243                {
   3244                  EDIT_SetFocus(data, pos);
   3245                  EDIT_SetCursorPos(data, 1);
   3246                }
   3247                return (-1);
   3248              }
   3249            }
   3250            return(0); //Do standart keys
   \                     ??edchat_onkey_6:
   \   00000120   0000A0E3           MOV      R0,#+0
   \                     ??edchat_onkey_4:
   \   00000124   4CDF8DE2           ADD      SP,SP,#+304      ;; stack cleaning
   \   00000128   F08FBDE8           POP      {R4-R11,PC}      ;; return
   \                     ??edchat_onkey_7:
   \   0000012C   ........           LDR      R7,??DataTable149  ;; `?<Constant "\\302\\373 \\340\\342\\362\\356\\360\\350\\`
   \   00000130   0B0059E3           CMP      R9,#+11
   \   00000134   4300001A           BNE      ??edchat_onkey_8
   \   00000138   D40096E5           LDR      R0,[R6, #+212]
   \   0000013C   030050E3           CMP      R0,#+3
   \   00000140   F6FFFF1A           BNE      ??edchat_onkey_6
   \   00000144   008095E5           LDR      R8,[R5, #+0]
   \   00000148   000058E3           CMP      R8,#+0
   \   0000014C   F3FFFF0A           BEQ      ??edchat_onkey_6
   \   00000150   081095E5           LDR      R1,[R5, #+8]
   \   00000154   04208DE2           ADD      R2,SP,#+4
   \   00000158   0400A0E1           MOV      R0,R4
   \   0000015C   690100EF           SWI      +361
   \   00000160   2C109DE5           LDR      R1,[SP, #+44]
   \   00000164   0800A0E1           MOV      R0,R8
   \   00000168   ........           BL       SaveAnswer
   \   0000016C   68A098E5           LDR      R10,[R8, #+104]
   \   00000170   00005AE3           CMP      R10,#+0
   \   00000174   E9FFFF0A           BEQ      ??edchat_onkey_6
   \   00000178   0A00A0E1           MOV      R0,R10
   \   0000017C   1B0000EF           SWI      +27
   \   00000180   00B0B0E1           MOVS     R11,R0
   \   00000184   E5FFFF0A           BEQ      ??edchat_onkey_6
   \   00000188   5A0FA0E3           MOV      R0,#+360
   \   0000018C   700088E5           STR      R0,[R8, #+112]
   \   00000190   09008BE2           ADD      R0,R11,#+9
   \   00000194   140000EF           SWI      +20
   \   00000198   0090A0E1           MOV      R9,R0
   \   0000019C   0C0098E5           LDR      R0,[R8, #+12]
   \   000001A0   0A10A0E1           MOV      R1,R10
   \   000001A4   000089E5           STR      R0,[R9, #+0]
   \   000001A8   0200A0E3           MOV      R0,#+2
   \   000001AC   B400C9E1           STRH     R0,[R9, #+4]
   \   000001B0   B6B0C9E1           STRH     R11,[R9, #+6]
   \   000001B4   080089E2           ADD      R0,R9,#+8
   \   000001B8   1A0000EF           SWI      +26
   \   000001BC   940096E5           LDR      R0,[R6, #+148]
   \   000001C0   103087E2           ADD      R3,R7,#+16
   \   000001C4   010080E2           ADD      R0,R0,#+1
   \   000001C8   940086E5           STR      R0,[R6, #+148]
   \   000001CC   8008A0E1           LSL      R0,R0,#+17
   \   000001D0   A008A0E1           LSR      R0,R0,#+17
   \   000001D4   01002DE9           PUSH     {R0}
   \   000001D8   082089E2           ADD      R2,R9,#+8
   \   000001DC   0110A0E3           MOV      R1,#+1
   \   000001E0   0800A0E1           MOV      R0,R8
   \   000001E4   ........           BL       AddStringToLog
   \   000001E8   ........           LDR      R0,??DataTable151  ;; SendAnswer
   \   000001EC   0920A0E1           MOV      R2,R9
   \   000001F0   0010A0E3           MOV      R1,#+0
   \   000001F4   710100EF           SWI      +369
   \   000001F8   680098E5           LDR      R0,[R8, #+104]
   \   000001FC   150000EF           SWI      +21
   \   00000200   0000A0E3           MOV      R0,#+0
   \   00000204   680088E5           STR      R0,[R8, #+104]
   \   00000208   081095E5           LDR      R1,[R5, #+8]
   \   0000020C   0400A0E1           MOV      R0,R4
   \   00000210   9B0100EF           SWI      +411
   \   00000214   9C0096E5           LDR      R0,[R6, #+156]
   \   00000218   0010A0E3           MOV      R1,#+0
   \   0000021C   260100EF           SWI      +294
   \   00000220   9C1096E5           LDR      R1,[R6, #+156]
   \   00000224   0400A0E1           MOV      R0,R4
   \   00000228   810100EF           SWI      +385
   \   0000022C   0400A0E1           MOV      R0,R4
   \   00000230   ........           BL       AddMsgToChat
   \   00000234   0110A0E3           MOV      R1,#+1
   \   00000238   0800A0E1           MOV      R0,R8
   \   0000023C   ........           BL       RecountMenu
   \   00000240   04D08DE2           ADD      SP,SP,#+4
   \   00000244   5B0000EA           B        ??edchat_onkey_1
   \                     ??edchat_onkey_8:
   \   00000248   1A0059E3           CMP      R9,#+26
   \   0000024C   4D00001A           BNE      ??edchat_onkey_9
   \   00000250   0400A0E1           MOV      R0,R4
   \   00000254   D80100EF           SWI      +472
   \   00000258   000050E3           CMP      R0,#+0
   \   0000025C   AFFFFF1A           BNE      ??edchat_onkey_6
   \   00000260   040095E5           LDR      R0,[R5, #+4]
   \   00000264   820100EF           SWI      +386
   \   00000268   04208DE2           ADD      R2,SP,#+4
   \   0000026C   0010A0E1           MOV      R1,R0
   \   00000270   040095E5           LDR      R0,[R5, #+4]
   \   00000274   690100EF           SWI      +361
   \   00000278   9C0096E5           LDR      R0,[R6, #+156]
   \   0000027C   2C109DE5           LDR      R1,[SP, #+44]
   \   00000280   1F0100EF           SWI      +287
   \   00000284   0400A0E1           MOV      R0,R4
   \   00000288   D30100EF           SWI      +467
   \   0000028C   0090A0E1           MOV      R9,R0
   \   00000290   9C0096E5           LDR      R0,[R6, #+156]
   \   00000294   230100EF           SWI      +291
   \   00000298   010080E2           ADD      R0,R0,#+1
   \   0000029C   140000EF           SWI      +20
   \   000002A0   0080A0E1           MOV      R8,R0
   \   000002A4   9C0096E5           LDR      R0,[R6, #+156]
   \   000002A8   0820A0E1           MOV      R2,R8
   \   000002AC   0910A0E1           MOV      R1,R9
   \   000002B0   ........           BL       IsUrl
   \   000002B4   000050E3           CMP      R0,#+0
   \   000002B8   2800000A           BEQ      ??edchat_onkey_10
   \   000002BC   1C019FE5           LDR      R0,??edchat_onkey_11  ;; GetTempName
   \   000002C0   ........           LDR      R3,??DataTable124  ;; TEMPLATES_PATH
   \   000002C4   01002DE9           PUSH     {R0}
   \   000002C8   142087E2           ADD      R2,R7,#+20
   \   000002CC   FF10A0E3           MOV      R1,#+255
   \   000002D0   34008DE2           ADD      R0,SP,#+52
   \   000002D4   1B0100EF           SWI      +283
   \   000002D8   04308DE2           ADD      R3,SP,#+4
   \   000002DC   402FA0E3           MOV      R2,#+256
   \   000002E0   0110A0E3           MOV      R1,#+1
   \   000002E4   831C81E3           ORR      R1,R1,#0x8300
   \   000002E8   34008DE2           ADD      R0,SP,#+52
   \   000002EC   0A0000EF           SWI      +10
   \   000002F0   0040A0E1           MOV      R4,R0
   \   000002F4   010074E3           CMN      R4,#+1
   \   000002F8   04D08DE2           ADD      SP,SP,#+4
   \   000002FC   1400000A           BEQ      ??edchat_onkey_12
   \   00000300   0800A0E1           MOV      R0,R8
   \   00000304   1B0000EF           SWI      +27
   \   00000308   0020A0E1           MOV      R2,R0
   \   0000030C   0D30A0E1           MOV      R3,SP
   \   00000310   0810A0E1           MOV      R1,R8
   \   00000314   0400A0E1           MOV      R0,R4
   \   00000318   0C0000EF           SWI      +12
   \   0000031C   0D10A0E1           MOV      R1,SP
   \   00000320   0400A0E1           MOV      R0,R4
   \   00000324   0D0000EF           SWI      +13
   \   00000328   9C0096E5           LDR      R0,[R6, #+156]
   \   0000032C   402FA0E3           MOV      R2,#+256
   \   00000330   30108DE2           ADD      R1,SP,#+48
   \   00000334   6C0100EF           SWI      +364
   \   00000338   9C0096E5           LDR      R0,[R6, #+156]
   \   0000033C   0020A0E3           MOV      R2,#+0
   \   00000340   0010A0E3           MOV      R1,#+0
   \   00000344   940000EF           SWI      +148
   \   00000348   0D10A0E1           MOV      R1,SP
   \   0000034C   30008DE2           ADD      R0,SP,#+48
   \   00000350   6B0100EF           SWI      +363
   \                     ??edchat_onkey_12:
   \   00000354   0800A0E1           MOV      R0,R8
   \   00000358   150000EF           SWI      +21
   \   0000035C   150000EA           B        ??edchat_onkey_1
   \                     ??edchat_onkey_10:
   \   00000360   000095E5           LDR      R0,[R5, #+0]
   \   00000364   0C0090E5           LDR      R0,[R0, #+12]
   \   00000368   ........           BL       LoadTemplates
   \   0000036C   70109FE5           LDR      R1,??edchat_onkey_11+0x4  ;; ed_options_handler
   \   00000370   100085E5           STR      R0,[R5, #+16]
   \   00000374   023080E2           ADD      R3,R0,#+2
   \   00000378   0520A0E1           MOV      R2,R5
   \   0000037C   0400A0E1           MOV      R0,R4
   \   00000380   E50100EF           SWI      +485
   \   00000384   F2FFFFEA           B        ??edchat_onkey_12
   \                     ??edchat_onkey_9:
   \   00000388   0D0059E3           CMP      R9,#+13
   \   0000038C   0B00001A           BNE      ??edchat_onkey_13
   \   00000390   0400A0E1           MOV      R0,R4
   \   00000394   820100EF           SWI      +386
   \   00000398   021040E2           SUB      R1,R0,#+2
   \   0000039C   020051E3           CMP      R1,#+2
   \                     ??edchat_onkey_14:
   \   000003A0   040000BA           BLT      ??edchat_onkey_1
   \   000003A4   0400A0E1           MOV      R0,R4
   \   000003A8   9B0100EF           SWI      +411
   \   000003AC   0110A0E3           MOV      R1,#+1
   \   000003B0   0400A0E1           MOV      R0,R4
   \   000003B4   D40100EF           SWI      +468
   \                     ??edchat_onkey_1:
   \   000003B8   0000E0E3           MVN      R0,#+0
   \   000003BC   58FFFFEA           B        ??edchat_onkey_4
   \                     ??edchat_onkey_13:
   \   000003C0   0E0059E3           CMP      R9,#+14
   \   000003C4   55FFFF1A           BNE      ??edchat_onkey_6
   \   000003C8   0400A0E1           MOV      R0,R4
   \   000003CC   820100EF           SWI      +386
   \   000003D0   021080E2           ADD      R1,R0,#+2
   \   000003D4   080095E5           LDR      R0,[R5, #+8]
   \   000003D8   010050E1           CMP      R0,R1
   \   000003DC   EFFFFFEA           B        ??edchat_onkey_14
   \                     ??edchat_onkey_11:
   \   000003E0   ........           DC32     GetTempName
   \   000003E4   ........           DC32     ed_options_handler
   3251            //1: close
   3252          }
   3253          
   3254          static const HEADER_DESC edchat_hdr={0,0,NULL,NULL,NULL,0,LGP_NULL};
   3255          
   3256          void (*old_ed_redraw)(void *data);

   \                                 In segment CODE, align 4, keep-with-next
   3257          void my_ed_redraw(void *data)
   3258          {
   \                     my_ed_redraw:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   3259            void *edchat_gui;
   3260            EDCHAT_STRUCT *ed_struct;
   3261            if (old_ed_redraw) old_ed_redraw(data);
   \   00000004   ........           LDR      R4,??DataTable127  ;; S_ICONS
   \   00000008   241194E5           LDR      R1,[R4, #+292]
   \   0000000C   000051E3           CMP      R1,#+0
   \   00000010   0100000A           BEQ      ??my_ed_redraw_0
   \   00000014   31FF2FE1           BLX      R1
   3262            edchat_gui=FindGUIbyId(edchat_id,NULL);
   \   00000018   0010A0E3           MOV      R1,#+0
   \                     ??my_ed_redraw_0:
   \   0000001C   080194E5           LDR      R0,[R4, #+264]
   \   00000020   090200EF           SWI      +521
   3263            if (edchat_gui)
   \   00000024   000050E3           CMP      R0,#+0
   \   00000028   3080BD08           POPEQ    {R4,R5,PC}
   3264            {
   3265              ed_struct=EDIT_GetUserPointer(edchat_gui);
   \   0000002C   DF0100EF           SWI      +479
   3266              if (ed_struct)
   \   00000030   000050E3           CMP      R0,#+0
   \   00000034   3080BD08           POPEQ    {R4,R5,PC}
   3267              {
   3268                int icon, width;
   3269          #ifndef	NEWSGOLD
   3270                icon=*(S_ICONS+GetIconIndex(ed_struct->ed_contact));
   3271                ((HEADER_DESC *)&edchat_hdr)->rc.x2=ScreenW()-1-(width=GetImgWidth(icon));
   3272                DrawImg(ScreenW()-1-width,1,icon);
   3273          #else
   3274                icon=*(S_ICONS+GetIconIndex(ed_struct->ed_contact));
   \   00000038   000090E5           LDR      R0,[R0, #+0]
   \   0000003C   ........           BL       GetIconIndex
   \   00000040   004194E7           LDR      R4,[R4, +R0, LSL #+2]
   3275                width=GetImgWidth(icon);
   \   00000044   0400A0E1           MOV      R0,R4
   \   00000048   220000EF           SWI      +34
   \   0000004C   0050A0E1           MOV      R5,R0
   3276                DrawImg(2,((HeaderH()-width)>>1)+YDISP,icon);
   \   00000050   8A8100EF           SWI      +33162
   \   00000054   0420A0E1           MOV      R2,R4
   \   00000058   050040E0           SUB      R0,R0,R5
   \   0000005C   1810A0E3           MOV      R1,#+24
   \   00000060   C01081E0           ADD      R1,R1,R0, ASR #+1
   \   00000064   0200A0E3           MOV      R0,#+2
   \   00000068   230000EF           SWI      +35
   3277          /*      DrawRoundedFrame(ScreenW()-8,YDISP,ScreenW()-1,YDISP+7,0,0,0,
   3278          		       GetPaletteAdrByColorIndex(0),
   3279          		       GetPaletteAdrByColorIndex(EDIT_IsBusy(edchat_gui)?3:4));*/
   3280          #endif
   3281              }
   3282            }
   3283          }
   \   0000006C   3080BDE8           POP      {R4,R5,PC}       ;; return
   3284          

   \                                 In segment CODE, align 4, keep-with-next
   3285          void edchat_ghook(GUI *data, int cmd)
   3286          {
   \                     edchat_ghook:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   3287          
   3288            static const SOFTKEY_DESC sk={0x0FFF,0x0000,(int)LG_MENU};
   3289            static const SOFTKEY_DESC sk_cancel={0x0FF0,0x0000,(int)LG_CLOSE};
   3290            //  static SOFTKEY_DESC sk={0x0018,0x0000,(int)"Menu"};
   3291            int j;
   3292            EDITCONTROL ec;
   3293            EDCHAT_STRUCT *ed_struct=EDIT_GetUserPointer(data);
   3294            PNGTOP_DESC *pltop=PNG_TOP();
   3295            if (cmd==9)
   \   00000004   ........           LDR      R4,??DataTable126  ;; S_ICONS
   \   00000008   2CD04DE2           SUB      SP,SP,#+44
   \   0000000C   0050A0E1           MOV      R5,R0
   \   00000010   0180A0E1           MOV      R8,R1
   \   00000014   DF0100EF           SWI      +479
   \   00000018   0070A0E1           MOV      R7,R0
   \   0000001C   B98100EF           SWI      +33209
   \   00000020   0090A0E1           MOV      R9,R0
   \   00000024   0060A0E3           MOV      R6,#+0
   \   00000028   090058E3           CMP      R8,#+9
   \   0000002C   0300001A           BNE      ??edchat_ghook_0
   3296            {
   3297              GBS_DelTimer(&tmr_illumination);          //by BoBa 25.06.07
   \   00000030   E20F84E2           ADD      R0,R4,#+904
   \   00000034   8C0100EF           SWI      +396
   3298              pltop->dyn_pltop=NULL;
   \   00000038   086089E5           STR      R6,[R9, #+8]
   \   0000003C   6F0000EA           B        ??edchat_ghook_1
   3299            }
   3300            if (cmd==2)
   \                     ??edchat_ghook_0:
   \   00000040   081097E5           LDR      R1,[R7, #+8]
   \   00000044   020058E3           CMP      R8,#+2
   \   00000048   1500001A           BNE      ??edchat_ghook_2
   3301            {
   3302              ed_struct->ed_chatgui=data;
   \   0000004C   045087E5           STR      R5,[R7, #+4]
   3303          //    edgui_data=data;
   3304              EDIT_SetFocus(data,ed_struct->ed_answer);
   \   00000050   0500A0E1           MOV      R0,R5
   \   00000054   9B0100EF           SWI      +411
   3305          
   3306              static void *methods[16];
   3307              void **m=GetDataOfItemByID(data,2);
   \   00000058   0210A0E3           MOV      R1,#+2
   \   0000005C   0500A0E1           MOV      R0,R5
   \   00000060   4F0100EF           SWI      +335
   \   00000064   0050B0E1           MOVS     R5,R0
   3308              if (m)
   3309              {
   3310                if (m[1])
   \   00000068   04009515           LDRNE    R0,[R5, #+4]
   \   0000006C   00005013           CMPNE    R0,#+0
   \   00000070   6200000A           BEQ      ??edchat_ghook_1
   3311                {
   3312                  memcpy(methods,m[1],sizeof(methods));
   \   00000074   4A6FA0E3           MOV      R6,#+296
   \   00000078   4020A0E3           MOV      R2,#+64
   \   0000007C   0010A0E1           MOV      R1,R0
   \   00000080   040086E0           ADD      R0,R6,R4
   \   00000084   1E0100EF           SWI      +286
   3313                  old_ed_redraw=(void (*)(void *))(methods[0]);
   \   00000088   040096E7           LDR      R0,[R6, +R4]
   \   0000008C   240184E5           STR      R0,[R4, #+292]
   3314                  methods[0]=(void *)my_ed_redraw;
   \   00000090   70019FE5           LDR      R0,??edchat_ghook_3  ;; my_ed_redraw
   \   00000094   040086E7           STR      R0,[R6, +R4]
   3315                  m[1]=methods;
   \   00000098   040086E0           ADD      R0,R6,R4
   \   0000009C   040085E5           STR      R0,[R5, #+4]
   \   000000A0   560000EA           B        ??edchat_ghook_1
   3316                }
   3317              }
   3318            }
   3319            if (cmd==3)
   \                     ??edchat_ghook_2:
   \   000000A4   030058E3           CMP      R8,#+3
   \   000000A8   0E00001A           BNE      ??edchat_ghook_4
   3320            {
   3321          //    if (edgui_data==data) edgui_data=NULL;
   3322              if (ed_struct->ed_contact)
   \   000000AC   000097E5           LDR      R0,[R7, #+0]
   \   000000B0   000050E3           CMP      R0,#+0
   \   000000B4   0500000A           BEQ      ??edchat_ghook_5
   3323              {
   3324                ExtractEditControl(data,ed_struct->ed_answer,&ec);
   \   000000B8   0D20A0E1           MOV      R2,SP
   \   000000BC   0500A0E1           MOV      R0,R5
   \   000000C0   690100EF           SWI      +361
   3325                SaveAnswer(ed_struct->ed_contact,ec.pWS);
   \   000000C4   28109DE5           LDR      R1,[SP, #+40]
   \   000000C8   000097E5           LDR      R0,[R7, #+0]
   \   000000CC   ........           BL       SaveAnswer
   3326              }
   3327              RecountMenu(ed_struct->ed_contact, 1);
   \                     ??edchat_ghook_5:
   \   000000D0   000097E5           LDR      R0,[R7, #+0]
   \   000000D4   0110A0E3           MOV      R1,#+1
   \   000000D8   ........           BL       RecountMenu
   3328              mfree(ed_struct);
   \   000000DC   0700A0E1           MOV      R0,R7
   \   000000E0   150000EF           SWI      +21
   \   000000E4   450000EA           B        ??edchat_ghook_1
   3329            }
   3330            if (cmd==0x0A)
   \                     ??edchat_ghook_4:
   \   000000E8   0A0058E3           CMP      R8,#+10
   \   000000EC   0900001A           BNE      ??edchat_ghook_6
   3331            {
   3332              pltop->dyn_pltop=SmilesImgList;
   \   000000F0   14019FE5           LDR      R0,??edchat_ghook_3+0x4  ;; SmilesImgList
   \   000000F4   000090E5           LDR      R0,[R0, #+0]
   \   000000F8   080089E5           STR      R0,[R9, #+8]
   3333              DisableIDLETMR();
   \   000000FC   7F0100EF           SWI      +383
   3334              total_unread-=ed_struct->requested_decrement_total_unread;
   \   00000100   F80094E5           LDR      R0,[R4, #+248]
   \   00000104   0C1097E5           LDR      R1,[R7, #+12]
   \   00000108   010040E0           SUB      R0,R0,R1
   \   0000010C   F80084E5           STR      R0,[R4, #+248]
   3335              ed_struct->requested_decrement_total_unread=0;
   \   00000110   0C6087E5           STR      R6,[R7, #+12]
   \   00000114   390000EA           B        ??edchat_ghook_1
   3336          /*    if (request_close_edchat)
   3337              {
   3338                request_close_edchat=0;
   3339                GeneralFunc_flag1(edchat_id,1);
   3340                return;
   3341              }*/
   3342            }
   3343            if (cmd==7)
   \                     ??edchat_ghook_6:
   \   00000118   070058E3           CMP      R8,#+7
   \   0000011C   2800001A           BNE      ??edchat_ghook_7
   3344            {
   3345              SetSoftKey(data,&sk,SET_SOFT_KEY_N);
   \   00000120   E8809FE5           LDR      R8,??edchat_ghook_3+0x8  ;; ??sk
   \   00000124   0020A0E3           MOV      R2,#+0
   \   00000128   0810A0E1           MOV      R1,R8
   \   0000012C   0500A0E1           MOV      R0,R5
   \   00000130   680100EF           SWI      +360
   3346              ExtractEditControl(data,ed_struct->ed_answer,&ec);
   \   00000134   081097E5           LDR      R1,[R7, #+8]
   \   00000138   0D20A0E1           MOV      R2,SP
   \   0000013C   0500A0E1           MOV      R0,R5
   \   00000140   690100EF           SWI      +361
   3347              if (ec.pWS->wsbody[0]==0)
   \   00000144   28009DE5           LDR      R0,[SP, #+40]
   \   00000148   000090E5           LDR      R0,[R0, #+0]
   \   0000014C   B000D0E1           LDRH     R0,[R0, #+0]
   \   00000150   000050E3           CMP      R0,#+0
   \   00000154   0300001A           BNE      ??edchat_ghook_8
   3348                SetSoftKey(data,&sk_cancel,SET_SOFT_KEY_N==0?1:0);
   \   00000158   0120A0E3           MOV      R2,#+1
   \   0000015C   081088E2           ADD      R1,R8,#+8
   \   00000160   0500A0E1           MOV      R0,R5
   \   00000164   680100EF           SWI      +360
   3349              if (!EDIT_IsBusy(data))
   \                     ??edchat_ghook_8:
   \   00000168   0500A0E1           MOV      R0,R5
   \   0000016C   1C0200EF           SWI      +540
   \   00000170   000050E3           CMP      R0,#+0
   \   00000174   2100001A           BNE      ??edchat_ghook_1
   3350              {
   3351                time_to_stop_t9=0;
   \   00000178   206184E5           STR      R6,[R4, #+288]
   3352                if (ed_struct->ed_contact->req_add)
   \   0000017C   000097E5           LDR      R0,[R7, #+0]
   \   00000180   5C1090E5           LDR      R1,[R0, #+92]
   \   00000184   000051E3           CMP      R1,#+0
   \   00000188   0500000A           BEQ      ??edchat_ghook_9
   3353                {
   3354          	ed_struct->ed_contact->req_add=0;
   \   0000018C   5C6080E5           STR      R6,[R0, #+92]
   3355          	AddMsgToChat(data);
   \   00000190   0500A0E1           MOV      R0,R5
   \   00000194   ........           BL       AddMsgToChat
   3356          	RecountMenu(ed_struct->ed_contact, 1);
   \   00000198   000097E5           LDR      R0,[R7, #+0]
   \   0000019C   0110A0E3           MOV      R1,#+1
   \   000001A0   ........           BL       RecountMenu
   3357                }
   3358                if (ed_struct->ed_contact->req_drawack)
   \                     ??edchat_ghook_9:
   \   000001A4   000097E5           LDR      R0,[R7, #+0]
   \   000001A8   601090E5           LDR      R1,[R0, #+96]
   \   000001AC   000051E3           CMP      R1,#+0
   \   000001B0   1200000A           BEQ      ??edchat_ghook_1
   3359                {
   3360          	ed_struct->ed_contact->req_drawack=0;
   \   000001B4   606080E5           STR      R6,[R0, #+96]
   3361          	DrawAck(data);
   \   000001B8   0500A0E1           MOV      R0,R5
   \   000001BC   ........           BL       DrawAck
   \   000001C0   0E0000EA           B        ??edchat_ghook_1
   3362                }
   3363              }
   3364            }
   3365            if (cmd==0x0C)
   \                     ??edchat_ghook_7:
   \   000001C4   0C0058E3           CMP      R8,#+12
   \   000001C8   0C00001A           BNE      ??edchat_ghook_1
   3366            {
   3367              j=EDIT_GetFocus(data);
   \   000001CC   0500A0E1           MOV      R0,R5
   \   000001D0   820100EF           SWI      +386
   \   000001D4   0040A0E1           MOV      R4,R0
   3368              if ((EDIT_GetUnFocus(data)<j)&&(j!=ed_struct->ed_answer))
   \   000001D8   0500A0E1           MOV      R0,R5
   \   000001DC   830100EF           SWI      +387
   \   000001E0   040050E1           CMP      R0,R4
   \   000001E4   050000AA           BGE      ??edchat_ghook_1
   \   000001E8   080097E5           LDR      R0,[R7, #+8]
   \   000001EC   000054E1           CMP      R4,R0
   \   000001F0   0200000A           BEQ      ??edchat_ghook_1
   3369                EDIT_SetCursorPos(data,1);
   \   000001F4   0110A0E3           MOV      R1,#+1
   \   000001F8   0500A0E1           MOV      R0,R5
   \   000001FC   D40100EF           SWI      +468
   3370            }
   3371          }
   \                     ??edchat_ghook_1:
   \   00000200   2CD08DE2           ADD      SP,SP,#+44       ;; stack cleaning
   \   00000204   F083BDE8           POP      {R4-R9,PC}       ;; return
   \                     ??edchat_ghook_3:
   \   00000208   ........           DC32     my_ed_redraw
   \   0000020C   ........           DC32     SmilesImgList
   \   00000210   ........           DC32     ??sk

   \                                 In segment DATA_C, align 4, align-sorted
   \                     edchat_hdr:
   \   00000000   000000000000       DC16 0, 0, 0, 0
   \              0000        
   \   00000008   000000000000       DC32 0H, 0, 2147483647
   \              0000FFFFFF7F
   \   00000014   2D2D2D2D2D2D       DC8 "-------"
   \              2D00        
   \   0000001C   01000000....       DC32 1, edchat_onkey, edchat_ghook, edchat_locret, 0, menu_skt
   \              ............
   \              ........0000
   \              0000........
   \   00000034   000000000000       DC16 0, 0, 0, 0
   \              0000        
   \   0000003C   080000006400       DC32 8, 100, 101, 0, 0, 1073741824
   \              000065000000
   \              000000000000
   \              000000000040

   \                                 In segment DATA_C, align 4, align-sorted
   \                     ??sk:
   \   00000000   FF0F0000           DC16 4095, 0
   \   00000004   ........           DC32 `?<Constant "\\314\\345\\355\\376">`
   \   00000008   F00F0000           DC16 4080, 0
   \   0000000C   ........           DC32 `?<Constant "\\307\\340\\352\\360\\373\\362\\374">`
   3372          
   3373          
   3374          
   3375          static const INPUTDIA_DESC edchat_desc =
   3376          {
   3377            1,
   3378            edchat_onkey,
   3379            edchat_ghook,
   3380            (void *)edchat_locret,
   3381            0,
   3382            &menu_skt,
   3383            {0,NULL,NULL,NULL},
   3384            FONT_SMALL,
   3385            100,
   3386            101,
   3387            0,
   3388            //  0x00000001 - Выровнять по правому краю
   3389            //  0x00000002 - Выровнять по центру
   3390            //  0x00000004 - Инверсия знакомест
   3391            //  0x00000008 - UnderLine
   3392            //  0x00000020 - Не переносить слова
   3393            //  0x00000200 - bold
   3394            0,
   3395            //  0x00000002 - ReadOnly
   3396            //  0x00000004 - Не двигается курсор
   3397            //  0x40000000 - Поменять местами софт-кнопки
   3398            0x40000000
   3399          };
   3400          

   \                                 In segment CODE, align 4, keep-with-next
   3401          void CreateEditChat(CLIST *t)
   3402          {
   \                     CreateEditChat:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000004   48D04DE2           SUB      SP,SP,#+72
   3403            extern const int FIRST_LETTER;
   3404            void *ma=malloc_adr();
   3405            void *eq;
   3406            EDITCONTROL ec;
   3407            EDITC_OPTIONS ec_options;
   3408            int color, font, type;
   3409            int zc;
   3410          
   3411            LOGQ *lp;
   3412            int edchat_toitem;
   3413          //  edcontact=t;
   3414          
   3415            *((int *)(&edchat_hdr.lgp_id))=(int)t->name;
   3416          //  *((int **)(&edchat_hdr.icon))=(int *)S_ICONS+GetIconIndex(t);
   3417            *((int **)(&edchat_hdr.icon))=(int *)S_ICONS+IS_NULLICON;
   \   00000008   ........           LDR      R7,??DataTable127  ;; S_ICONS
   \   0000000C   0050A0E1           MOV      R5,R0
   \   00000010   148000EF           SWI      +32788
   \   00000014   0060A0E1           MOV      R6,R0
   \   00000018   1C049FE5           LDR      R0,??CreateEditChat_0  ;; edchat_hdr + 12
   \   0000001C   141085E2           ADD      R1,R5,#+20
   \   00000020   001080E5           STR      R1,[R0, #+0]
   \   00000024   14049FE5           LDR      R0,??CreateEditChat_0+0x4  ;; edchat_hdr + 8
   \   00000028   441087E2           ADD      R1,R7,#+68
   \   0000002C   001080E5           STR      R1,[R0, #+0]
   3418          
   3419            eq=AllocEQueue(ma,mfree_adr());
   \   00000030   158000EF           SWI      +32789
   \   00000034   0010A0E1           MOV      R1,R0
   \   00000038   0600A0E1           MOV      R0,R6
   \   0000003C   630100EF           SWI      +355
   3420          
   3421          
   3422            lp=t->log;
   \   00000040   649095E5           LDR      R9,[R5, #+100]
   \   00000044   0080A0E1           MOV      R8,R0
   \   00000048   090000EA           B        ??CreateEditChat_1
   3423          
   3424            while(lp)
   3425            {
   3426              font = ED_H_FONT_SIZE;
   3427              if ((zc=lp->acked&3))
   3428              {
   3429                if (zc==1)
   3430          	color=ACK_COLOR; //Зеленый
   3431                else
   3432          	color=I_COLOR;
   3433              }
   3434              else
   3435              {
   3436                if (lp->ID==0xFFFFFFFF)
   3437                {
   3438                  type = lp->type&0x0F;
   3439                  if(lp->type&0x10)
   3440                  {
   3441                    color = (type==1)?O_I_COLOR:((type==3)?O_X_COLOR:O_TO_COLOR);
   3442                    font = (type==3)?O_ED_X_FONT_SIZE:O_ED_H_FONT_SIZE;
   3443                  }
   3444                  else
   3445                  {
   3446                    color = (type==1)?I_COLOR:((type==3)?X_COLOR:TO_COLOR);
   3447                    font = (type==3)?ED_X_FONT_SIZE:ED_H_FONT_SIZE;
   3448                  }
   3449                }
   3450                else
   3451          	color=UNACK_COLOR; //Серый
   3452              }
   3453              PrepareEditControl(&ec);
   3454              if ((lp->type&0x0F)!=3)
   3455              {
   3456                ascii2ws(ews,lp->hdr);
   3457                ConstructEditControl(&ec,ECT_HEADER,ECF_APPEND_EOL,ews,ews->wsbody[0]);
   3458              }
   3459              else
   3460                ConstructEditControl(&ec,ECT_HEADER,ECF_DELSTR,ews,0);
   3461              PrepareEditCOptions(&ec_options);
   3462              SetPenColorToEditCOptions(&ec_options,color);
   3463              SetFontToEditCOptions(&ec_options,font);
   3464              CopyOptionsToEditControl(&ec,&ec_options);
   3465              AddEditControlToEditQend(eq,&ec,ma);
   3466              if ((lp->type&0x0F)!=3)
   3467              {
   3468                ParseAnswer(ews,lp->text);
   3469              }
   3470              else
   3471              {
   3472                ParseXStatusText(ews,lp->text,(lp->type&0x10)?O_X_COLOR:X_COLOR);
   3473              }
   3474              PrepareEditControl(&ec);
   3475              ConstructEditControl(&ec,
   3476                                   ECT_NORMAL_TEXT,
   3477                                   ews->wsbody[0] ? ECF_APPEND_EOL|ECF_DISABLE_T9 : ECF_DELSTR,
   3478                                   ews,ews->wsbody[0]);
   3479              PrepareEditCOptions(&ec_options);
   3480          //#ifdef M75
   3481              if ((lp->type&0x0F)!=3)
   3482              {
   3483                SetFontToEditCOptions(&ec_options,(lp->type&0x10)?O_ED_FONT_SIZE:ED_FONT_SIZE);
   \                     ??CreateEditChat_2:
   \   0000004C   0D00A0E1           MOV      R0,SP
   \   00000050   CA0100EF           SWI      +458
   3484              }
   3485              else
   3486              {
   3487                SetPenColorToEditCOptions(&ec_options,(lp->type&0x10)?O_X_COLOR:X_COLOR);
   3488                SetFontToEditCOptions(&ec_options,(lp->type&0x10)?O_ED_X_FONT_SIZE:ED_X_FONT_SIZE);
   3489              }
   3490          //#else
   3491          //    SetFontToEditCOptions(&ec_options,(lp->type&0x10)?O_ED_FONT_SIZE:ED_FONT_SIZE);
   3492          //#endif
   3493              CopyOptionsToEditControl(&ec,&ec_options);
   \   00000054   0D10A0E1           MOV      R1,SP
   \   00000058   1C008DE2           ADD      R0,SP,#+28
   \   0000005C   CE0100EF           SWI      +462
   3494              AddEditControlToEditQend(eq,&ec,ma);
   \   00000060   0620A0E1           MOV      R2,R6
   \   00000064   1C108DE2           ADD      R1,SP,#+28
   \   00000068   0800A0E1           MOV      R0,R8
   \   0000006C   660100EF           SWI      +358
   3495              lp=lp->next;
   \   00000070   009099E5           LDR      R9,[R9, #+0]
   \                     ??CreateEditChat_1:
   \   00000074   000059E3           CMP      R9,#+0
   \   00000078   8900000A           BEQ      ??CreateEditChat_3
   \   0000007C   ........           LDR      R2,??DataTable128  ;; ED_X_FONT_SIZE
   \   00000080   ........           LDR      R0,??DataTable129  ;; ED_H_FONT_SIZE
   \   00000084   002092E5           LDR      R2,[R2, #+0]
   \   00000088   00A090E5           LDR      R10,[R0, #+0]
   \   0000008C   040099E5           LDR      R0,[R9, #+4]
   \   00000090   ........           LDR      R1,??DataTable130  ;; O_X_COLOR
   \   00000094   14208DE5           STR      R2,[SP, #+20]
   \   00000098   ........           LDR      R2,??DataTable131  ;; X_COLOR
   \   0000009C   030010E2           ANDS     R0,R0,#0x3
   \   000000A0   002092E5           LDR      R2,[R2, #+0]
   \   000000A4   10208DE5           STR      R2,[SP, #+16]
   \   000000A8   ........           LDR      R2,??DataTable132  ;; O_ED_X_FONT_SIZE
   \   000000AC   002092E5           LDR      R2,[R2, #+0]
   \   000000B0   18208DE5           STR      R2,[SP, #+24]
   \   000000B4   004091E5           LDR      R4,[R1, #+0]
   \   000000B8   ........           LDR      R1,??DataTable133  ;; I_COLOR
   \   000000BC   00B091E5           LDR      R11,[R1, #+0]
   \   000000C0   0300000A           BEQ      ??CreateEditChat_4
   \   000000C4   010050E3           CMP      R0,#+1
   \   000000C8   1E00001A           BNE      ??CreateEditChat_5
   \   000000CC   ........           LDR      R0,??DataTable134  ;; ACK_COLOR
   \   000000D0   1B0000EA           B        ??CreateEditChat_6
   \                     ??CreateEditChat_4:
   \   000000D4   080099E5           LDR      R0,[R9, #+8]
   \   000000D8   010070E3           CMN      R0,#+1
   \   000000DC   1700001A           BNE      ??CreateEditChat_7
   \   000000E0   0C0099E5           LDR      R0,[R9, #+12]
   \   000000E4   0F1000E2           AND      R1,R0,#0xF
   \   000000E8   100010E3           TST      R0,#0x10
   \   000000EC   0B00000A           BEQ      ??CreateEditChat_8
   \   000000F0   010051E3           CMP      R1,#+1
   \   000000F4   ........           LDREQ    R0,??DataTable135  ;; O_I_COLOR
   \   000000F8   0400000A           BEQ      ??CreateEditChat_9
   \   000000FC   030051E3           CMP      R1,#+3
   \   00000100   04B0A001           MOVEQ    R11,R4
   \   00000104   02A0A001           MOVEQ    R10,R2
   \   00000108   0E00000A           BEQ      ??CreateEditChat_5
   \   0000010C   ........           LDR      R0,??DataTable136  ;; O_TO_COLOR
   \                     ??CreateEditChat_9:
   \   00000110   00B090E5           LDR      R11,[R0, #+0]
   \   00000114   ........           LDR      R0,??DataTable137  ;; O_ED_H_FONT_SIZE
   \   00000118   00A090E5           LDR      R10,[R0, #+0]
   \   0000011C   090000EA           B        ??CreateEditChat_5
   \                     ??CreateEditChat_8:
   \   00000120   010051E3           CMP      R1,#+1
   \   00000124   0700000A           BEQ      ??CreateEditChat_5
   \   00000128   030051E3           CMP      R1,#+3
   \   0000012C   10B09D05           LDREQ    R11,[SP, #+16]
   \   00000130   14A09D05           LDREQ    R10,[SP, #+20]
   \   00000134   0300000A           BEQ      ??CreateEditChat_5
   \   00000138   ........           LDR      R0,??DataTable138  ;; TO_COLOR
   \   0000013C   000000EA           B        ??CreateEditChat_6
   \                     ??CreateEditChat_7:
   \   00000140   ........           LDR      R0,??DataTable139  ;; UNACK_COLOR
   \                     ??CreateEditChat_6:
   \   00000144   00B090E5           LDR      R11,[R0, #+0]
   \                     ??CreateEditChat_5:
   \   00000148   1C008DE2           ADD      R0,SP,#+28
   \   0000014C   640100EF           SWI      +356
   \   00000150   0C0099E5           LDR      R0,[R9, #+12]
   \   00000154   0F0000E2           AND      R0,R0,#0xF
   \   00000158   030050E3           CMP      R0,#+3
   \   0000015C   0800000A           BEQ      ??CreateEditChat_10
   \   00000160   9C0097E5           LDR      R0,[R7, #+156]
   \   00000164   101089E2           ADD      R1,R9,#+16
   \   00000168   ........           _BLF     ascii2ws,??ascii2ws??rA
   \   0000016C   9C3097E5           LDR      R3,[R7, #+156]
   \   00000170   4020A0E3           MOV      R2,#+64
   \   00000174   000093E5           LDR      R0,[R3, #+0]
   \   00000178   B000D0E1           LDRH     R0,[R0, #+0]
   \   0000017C   01002DE9           PUSH     {R0}
   \   00000180   030000EA           B        ??CreateEditChat_11
   \                     ??CreateEditChat_10:
   \   00000184   0000A0E3           MOV      R0,#+0
   \   00000188   01002DE9           PUSH     {R0}
   \   0000018C   9C3097E5           LDR      R3,[R7, #+156]
   \   00000190   2020A0E3           MOV      R2,#+32
   \                     ??CreateEditChat_11:
   \   00000194   0110A0E3           MOV      R1,#+1
   \   00000198   20008DE2           ADD      R0,SP,#+32
   \   0000019C   650100EF           SWI      +357
   \   000001A0   04D08DE2           ADD      SP,SP,#+4
   \   000001A4   0D00A0E1           MOV      R0,SP
   \   000001A8   C80100EF           SWI      +456
   \   000001AC   0B10A0E1           MOV      R1,R11
   \   000001B0   0D00A0E1           MOV      R0,SP
   \   000001B4   CC0100EF           SWI      +460
   \   000001B8   0A10A0E1           MOV      R1,R10
   \   000001BC   0D00A0E1           MOV      R0,SP
   \   000001C0   CA0100EF           SWI      +458
   \   000001C4   0D10A0E1           MOV      R1,SP
   \   000001C8   1C008DE2           ADD      R0,SP,#+28
   \   000001CC   CE0100EF           SWI      +462
   \   000001D0   0620A0E1           MOV      R2,R6
   \   000001D4   1C108DE2           ADD      R1,SP,#+28
   \   000001D8   0800A0E1           MOV      R0,R8
   \   000001DC   660100EF           SWI      +358
   \   000001E0   0C0099E5           LDR      R0,[R9, #+12]
   \   000001E4   0F1000E2           AND      R1,R0,#0xF
   \   000001E8   030051E3           CMP      R1,#+3
   \   000001EC   0300000A           BEQ      ??CreateEditChat_12
   \   000001F0   9C0097E5           LDR      R0,[R7, #+156]
   \   000001F4   601089E2           ADD      R1,R9,#+96
   \   000001F8   ........           BL       ParseAnswer
   \   000001FC   050000EA           B        ??CreateEditChat_13
   \                     ??CreateEditChat_12:
   \   00000200   100010E3           TST      R0,#0x10
   \   00000204   10209D05           LDREQ    R2,[SP, #+16]
   \   00000208   9C0097E5           LDR      R0,[R7, #+156]
   \   0000020C   0420A011           MOVNE    R2,R4
   \   00000210   601089E2           ADD      R1,R9,#+96
   \   00000214   ........           BL       ParseXStatusText
   \                     ??CreateEditChat_13:
   \   00000218   1C008DE2           ADD      R0,SP,#+28
   \   0000021C   640100EF           SWI      +356
   \   00000220   9C3097E5           LDR      R3,[R7, #+156]
   \   00000224   000093E5           LDR      R0,[R3, #+0]
   \   00000228   B010D0E1           LDRH     R1,[R0, #+0]
   \   0000022C   000051E3           CMP      R1,#+0
   \   00000230   0100A0E1           MOV      R0,R1
   \   00000234   01002DE9           PUSH     {R0}
   \   00000238   812DA013           MOVNE    R2,#+8256
   \   0000023C   2020A003           MOVEQ    R2,#+32
   \   00000240   0310A0E3           MOV      R1,#+3
   \   00000244   20008DE2           ADD      R0,SP,#+32
   \   00000248   650100EF           SWI      +357
   \   0000024C   04008DE2           ADD      R0,SP,#+4
   \   00000250   C80100EF           SWI      +456
   \   00000254   0C0099E5           LDR      R0,[R9, #+12]
   \   00000258   04D08DE2           ADD      SP,SP,#+4
   \   0000025C   0F1000E2           AND      R1,R0,#0xF
   \   00000260   030051E3           CMP      R1,#+3
   \   00000264   0400000A           BEQ      ??CreateEditChat_14
   \   00000268   100010E3           TST      R0,#0x10
   \   0000026C   ........           LDRNE    R0,??DataTable140  ;; O_ED_FONT_SIZE
   \   00000270   ........           LDREQ    R0,??DataTable142  ;; ED_FONT_SIZE
   \   00000274   001090E5           LDR      R1,[R0, #+0]
   \   00000278   73FFFFEA           B        ??CreateEditChat_2
   \                     ??CreateEditChat_14:
   \   0000027C   100010E3           TST      R0,#0x10
   \   00000280   10109D05           LDREQ    R1,[SP, #+16]
   \   00000284   0D00A0E1           MOV      R0,SP
   \   00000288   0410A011           MOVNE    R1,R4
   \   0000028C   CC0100EF           SWI      +460
   \   00000290   0C0099E5           LDR      R0,[R9, #+12]
   \   00000294   100010E3           TST      R0,#0x10
   \   00000298   14109D05           LDREQ    R1,[SP, #+20]
   \   0000029C   18109D15           LDRNE    R1,[SP, #+24]
   \   000002A0   69FFFFEA           B        ??CreateEditChat_2
   3496            }
   3497            if (t->isunread) total_unread--;
   \                     ??CreateEditChat_3:
   \   000002A4   580095E5           LDR      R0,[R5, #+88]
   3498            t->isunread=0;
   \   000002A8   0040A0E3           MOV      R4,#+0
   \   000002AC   000050E3           CMP      R0,#+0
   \   000002B0   F8009715           LDRNE    R0,[R7, #+248]
   \   000002B4   01004012           SUBNE    R0,R0,#+1
   \   000002B8   F8008715           STRNE    R0,[R7, #+248]
   \   000002BC   584085E5           STR      R4,[R5, #+88]
   3499            ChangeContactPos(t);
   \   000002C0   0500A0E1           MOV      R0,R5
   \   000002C4   ........           _BLF     ChangeContactPos,??ChangeContactPos??rA
   3500            wsprintf(ews, "-------");
   \   000002C8   74119FE5           LDR      R1,??CreateEditChat_0+0x8  ;; edchat_hdr + 20
   \   000002CC   9C0097E5           LDR      R0,[R7, #+156]
   \   000002D0   240100EF           SWI      +292
   3501            PrepareEditControl(&ec);
   \   000002D4   1C008DE2           ADD      R0,SP,#+28
   \   000002D8   640100EF           SWI      +356
   3502            ConstructEditControl(&ec,ECT_HEADER,ECF_APPEND_EOL,ews,ews->wsbody[0]);
   \   000002DC   9C3097E5           LDR      R3,[R7, #+156]
   \   000002E0   4020A0E3           MOV      R2,#+64
   \   000002E4   000093E5           LDR      R0,[R3, #+0]
   \   000002E8   0110A0E3           MOV      R1,#+1
   \   000002EC   B000D0E1           LDRH     R0,[R0, #+0]
   \   000002F0   01002DE9           PUSH     {R0}
   \   000002F4   20008DE2           ADD      R0,SP,#+32
   \   000002F8   650100EF           SWI      +357
   3503            PrepareEditCOptions(&ec_options);
   \   000002FC   04008DE2           ADD      R0,SP,#+4
   \   00000300   C80100EF           SWI      +456
   3504            SetFontToEditCOptions(&ec_options,ED_FONT_SIZE);
   \   00000304   ........           LDR      R0,??DataTable142  ;; ED_FONT_SIZE
   \   00000308   009090E5           LDR      R9,[R0, #+0]
   \   0000030C   04008DE2           ADD      R0,SP,#+4
   \   00000310   0910A0E1           MOV      R1,R9
   \   00000314   CA0100EF           SWI      +458
   3505            CopyOptionsToEditControl(&ec,&ec_options);
   \   00000318   04108DE2           ADD      R1,SP,#+4
   \   0000031C   20008DE2           ADD      R0,SP,#+32
   \   00000320   CE0100EF           SWI      +462
   3506            AddEditControlToEditQend(eq,&ec,ma);
   \   00000324   0620A0E1           MOV      R2,R6
   \   00000328   20108DE2           ADD      R1,SP,#+32
   \   0000032C   0800A0E1           MOV      R0,R8
   \   00000330   660100EF           SWI      +358
   3507          
   3508            if (t->answer) ParseAnswer(ews,t->answer);
   \   00000334   681095E5           LDR      R1,[R5, #+104]
   \   00000338   04D08DE2           ADD      SP,SP,#+4
   \   0000033C   000051E3           CMP      R1,#+0
   \   00000340   0200000A           BEQ      ??CreateEditChat_15
   \   00000344   9C0097E5           LDR      R0,[R7, #+156]
   \   00000348   ........           BL       ParseAnswer
   \   0000034C   020000EA           B        ??CreateEditChat_16
   3509            else  CutWSTR(ews,0);
   \                     ??CreateEditChat_15:
   \   00000350   9C0097E5           LDR      R0,[R7, #+156]
   \   00000354   0010A0E3           MOV      R1,#+0
   \   00000358   260100EF           SWI      +294
   3510            PrepareEditControl(&ec);
   \                     ??CreateEditChat_16:
   \   0000035C   1C008DE2           ADD      R0,SP,#+28
   \   00000360   640100EF           SWI      +356
   3511            ConstructEditControl(&ec,3,(FIRST_LETTER)?ECF_DEFAULT_BIG_LETTER:0,ews,1024);
   \   00000364   DC009FE5           LDR      R0,??CreateEditChat_0+0xC  ;; FIRST_LETTER
   \   00000368   0310A0E3           MOV      R1,#+3
   \   0000036C   000090E5           LDR      R0,[R0, #+0]
   \   00000370   000050E3           CMP      R0,#+0
   \   00000374   400EA0E3           MOV      R0,#+1024
   \   00000378   01002DE9           PUSH     {R0}
   \   0000037C   9C3097E5           LDR      R3,[R7, #+156]
   \   00000380   402DA013           MOVNE    R2,#+4096
   \   00000384   0020A003           MOVEQ    R2,#+0
   \   00000388   20008DE2           ADD      R0,SP,#+32
   \   0000038C   650100EF           SWI      +357
   3512          
   3513            PrepareEditCOptions(&ec_options);
   \   00000390   04008DE2           ADD      R0,SP,#+4
   \   00000394   C80100EF           SWI      +456
   3514            SetFontToEditCOptions(&ec_options,ED_FONT_SIZE);
   \   00000398   0910A0E1           MOV      R1,R9
   \   0000039C   04008DE2           ADD      R0,SP,#+4
   \   000003A0   CA0100EF           SWI      +458
   3515            CopyOptionsToEditControl(&ec,&ec_options);
   \   000003A4   04108DE2           ADD      R1,SP,#+4
   \   000003A8   20008DE2           ADD      R0,SP,#+32
   \   000003AC   CE0100EF           SWI      +462
   3516            edchat_toitem=AddEditControlToEditQend(eq,&ec,ma);
   \   000003B0   0620A0E1           MOV      R2,R6
   \   000003B4   20108DE2           ADD      R1,SP,#+32
   \   000003B8   0800A0E1           MOV      R0,R8
   \   000003BC   660100EF           SWI      +358
   \   000003C0   0060A0E1           MOV      R6,R0
   3517          
   3518            if (t->req_xtext)
   \   000003C4   7C0095E5           LDR      R0,[R5, #+124]
   \   000003C8   04D08DE2           ADD      SP,SP,#+4
   \   000003CC   000050E3           CMP      R0,#+0
   \   000003D0   0400000A           BEQ      ??CreateEditChat_17
   3519            {
   3520              FreeXText(t);
   \   000003D4   0500A0E1           MOV      R0,R5
   \   000003D8   ........           _BLF     FreeXText,??FreeXText??rA
   3521              t->req_xtext=0;
   \   000003DC   7C4085E5           STR      R4,[R5, #+124]
   3522              RequestXText(t->uin);
   \   000003E0   0C0095E5           LDR      R0,[R5, #+12]
   \   000003E4   ........           BL       RequestXText
   3523            }
   3524          
   3525            EDCHAT_STRUCT *ed_struct=malloc(sizeof(EDCHAT_STRUCT));
   \                     ??CreateEditChat_17:
   \   000003E8   1400A0E3           MOV      R0,#+20
   \   000003EC   140000EF           SWI      +20
   \   000003F0   0090A0E1           MOV      R9,R0
   3526            ed_struct->ed_contact=t;
   3527            ed_struct->ed_answer=edchat_toitem;
   3528            ed_struct->requested_decrement_total_unread=0;
   3529            t->req_add=0;
   3530            t->last_log=NULL;
   3531          
   3532            //  int scr_w=ScreenW();
   3533            //  int scr_h=ScreenH();
   3534            //  int head_h=HeaderH();
   3535          
   3536            patch_header(&edchat_hdr);
   \   000003F4   50009FE5           LDR      R0,??CreateEditChat_0+0x10  ;; edchat_hdr
   \   000003F8   005089E5           STR      R5,[R9, #+0]
   \   000003FC   086089E5           STR      R6,[R9, #+8]
   \   00000400   0C4089E5           STR      R4,[R9, #+12]
   \   00000404   5C4085E5           STR      R4,[R5, #+92]
   \   00000408   6C4085E5           STR      R4,[R5, #+108]
   \   0000040C   ........           _BLF     patch_header,??patch_header??rA
   3537            patch_input(&edchat_desc);
   \   00000410   38009FE5           LDR      R0,??CreateEditChat_0+0x14  ;; edchat_hdr + 28
   \   00000414   ........           _BLF     patch_input,??patch_input??rA
   3538            //  edchat_desc.font=ED_FONT_SIZE;
   3539            edchat_id=CreateInputTextDialog(&edchat_desc,&edchat_hdr,eq,1,ed_struct);
   \   00000418   30009FE5           LDR      R0,??CreateEditChat_0+0x14  ;; edchat_hdr + 28
   \   0000041C   28109FE5           LDR      R1,??CreateEditChat_0+0x10  ;; edchat_hdr
   \   00000420   00022DE9           PUSH     {R9}
   \   00000424   0130A0E3           MOV      R3,#+1
   \   00000428   0820A0E1           MOV      R2,R8
   \   0000042C   670100EF           SWI      +359
   \   00000430   080187E5           STR      R0,[R7, #+264]
   3540          }
   \   00000434   4CD08DE2           ADD      SP,SP,#+76
   \   00000438   F08FBDE8           POP      {R4-R11,PC}      ;; return
   \                     ??CreateEditChat_0:
   \   0000043C   ........           DC32     edchat_hdr + 12
   \   00000440   ........           DC32     edchat_hdr + 8
   \   00000444   ........           DC32     edchat_hdr + 20
   \   00000448   ........           DC32     FIRST_LETTER
   \   0000044C   ........           DC32     edchat_hdr
   \   00000450   ........           DC32     edchat_hdr + 28
   3541          
   3542          //-----------------------------------------------------------------------------
   3543          #define EC_MNU_MAX 8
   3544          

   \                                 In segment CODE, align 4, keep-with-next
   3545          void Quote(GUI *data)
   3546          {
   \                     Quote:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   84D04DE2           SUB      SP,SP,#+132
   3547            int q_n;
   3548            EDITCONTROL ec, ec_hdr;
   3549            EDITCONTROL ec_ed;
   3550            WSHDR *ed_ws;
   3551            WSHDR *ws;
   3552          
   3553            EDCHAT_STRUCT *ed_struct;
   3554            ed_struct=MenuGetUserPointer(data);
   \   00000008   E00100EF           SWI      +480
   \   0000000C   0040A0E1           MOV      R4,R0
   3555          
   3556            q_n=EDIT_GetFocus(ed_struct->ed_chatgui);
   \   00000010   040094E5           LDR      R0,[R4, #+4]
   \   00000014   820100EF           SWI      +386
   \   00000018   0050A0E1           MOV      R5,R0
   3557            ExtractEditControl(ed_struct->ed_chatgui,q_n,&ec);
   \   0000001C   040094E5           LDR      R0,[R4, #+4]
   \   00000020   2C208DE2           ADD      R2,SP,#+44
   \   00000024   0510A0E1           MOV      R1,R5
   \   00000028   690100EF           SWI      +361
   3558            ExtractEditControl(ed_struct->ed_chatgui,q_n-1,&ec_hdr);
   \   0000002C   040094E5           LDR      R0,[R4, #+4]
   \   00000030   58208DE2           ADD      R2,SP,#+88
   \   00000034   011045E2           SUB      R1,R5,#+1
   \   00000038   690100EF           SWI      +361
   3559            ExtractEditControl(ed_struct->ed_chatgui,ed_struct->ed_answer,&ec_ed);
   \   0000003C   081094E5           LDR      R1,[R4, #+8]
   \   00000040   040094E5           LDR      R0,[R4, #+4]
   \   00000044   0D20A0E1           MOV      R2,SP
   \   00000048   690100EF           SWI      +361
   3560          
   3561            ed_ws=AllocWS((ec_ed.maxlen<<1) + 1);
   \   0000004C   F801DDE1           LDRSH    R0,[SP, #+24]
   \   00000050   0110A0E3           MOV      R1,#+1
   \   00000054   800081E0           ADD      R0,R1,R0, LSL #+1
   \   00000058   250100EF           SWI      +293
   \   0000005C   0050A0E1           MOV      R5,R0
   3562            if(wstrlen(ec_hdr.pWS))
   \   00000060   80009DE5           LDR      R0,[SP, #+128]
   \   00000064   230100EF           SWI      +291
   \   00000068   000050E3           CMP      R0,#+0
   \   0000006C   0600000A           BEQ      ??Quote_0
   3563            {
   3564              wstrcpy(ed_ws,ec_hdr.pWS);
   \   00000070   80109DE5           LDR      R1,[SP, #+128]
   \   00000074   0500A0E1           MOV      R0,R5
   \   00000078   1F0100EF           SWI      +287
   3565              wsAppendChar(ed_ws,'\r');
   \   0000007C   0D10A0E3           MOV      R1,#+13
   \   00000080   0500A0E1           MOV      R0,R5
   \   00000084   1C0000EF           SWI      +28
   \   00000088   020000EA           B        ??Quote_1
   3566            }
   3567            else
   3568              CutWSTR(ed_ws,0);
   \                     ??Quote_0:
   \   0000008C   0010A0E3           MOV      R1,#+0
   \   00000090   0500A0E1           MOV      R0,R5
   \   00000094   260100EF           SWI      +294
   3569            if (EDIT_IsMarkModeActive(ed_struct->ed_chatgui))
   \                     ??Quote_1:
   \   00000098   040094E5           LDR      R0,[R4, #+4]
   \   0000009C   D80100EF           SWI      +472
   \   000000A0   000050E3           CMP      R0,#+0
   \   000000A4   0300000A           BEQ      ??Quote_2
   3570            {
   3571              EDIT_GetMarkedText(ed_struct->ed_chatgui,ed_ws);
   \   000000A8   040094E5           LDR      R0,[R4, #+4]
   \   000000AC   0510A0E1           MOV      R1,R5
   \   000000B0   D90100EF           SWI      +473
   \   000000B4   020000EA           B        ??Quote_3
   3572            }
   3573            else
   3574            {
   3575              wstrcat(ed_ws,ec.pWS);
   \                     ??Quote_2:
   \   000000B8   54109DE5           LDR      R1,[SP, #+84]
   \   000000BC   0500A0E1           MOV      R0,R5
   \   000000C0   210100EF           SWI      +289
   3576            }
   3577            int ed_pos=0;
   \                     ??Quote_3:
   \   000000C4   0000A0E3           MOV      R0,#+0
   3578            do
   3579            {
   3580              ed_pos++;
   \                     ??Quote_4:
   \   000000C8   016080E2           ADD      R6,R0,#+1
   3581              wsInsertChar(ed_ws,'>',ed_pos++);
   \   000000CC   0620A0E1           MOV      R2,R6
   \   000000D0   3E10A0E3           MOV      R1,#+62
   \   000000D4   0500A0E1           MOV      R0,R5
   \   000000D8   1D0000EF           SWI      +29
   \   000000DC   016086E2           ADD      R6,R6,#+1
   3582              wsInsertChar(ed_ws,' ',ed_pos);
   \   000000E0   0620A0E1           MOV      R2,R6
   \   000000E4   2010A0E3           MOV      R1,#+32
   \   000000E8   0500A0E1           MOV      R0,R5
   \   000000EC   1D0000EF           SWI      +29
   3583            }
   3584            while((ed_pos=wstrchr(ed_ws,ed_pos,'\r'))!=0xFFFF);
   \   000000F0   0D20A0E3           MOV      R2,#+13
   \   000000F4   0610A0E1           MOV      R1,R6
   \   000000F8   0500A0E1           MOV      R0,R5
   \   000000FC   DC0100EF           SWI      +476
   \   00000100   FF10A0E3           MOV      R1,#+255
   \   00000104   FF1C81E3           ORR      R1,R1,#0xFF00
   \   00000108   010050E1           CMP      R0,R1
   \   0000010C   EDFFFF1A           BNE      ??Quote_4
   3585            wsAppendChar(ed_ws,'\r');
   \   00000110   0D10A0E3           MOV      R1,#+13
   \   00000114   0500A0E1           MOV      R0,R5
   \   00000118   1C0000EF           SWI      +28
   3586            wsAppendChar(ed_ws,'\r');
   \   0000011C   0D10A0E3           MOV      R1,#+13
   \   00000120   0500A0E1           MOV      R0,R5
   \   00000124   1C0000EF           SWI      +28
   3587            ws=AllocWS(ec_ed.pWS->wsbody[0]+ed_ws->wsbody[0]);
   \   00000128   28009DE5           LDR      R0,[SP, #+40]
   \   0000012C   001095E5           LDR      R1,[R5, #+0]
   \   00000130   000090E5           LDR      R0,[R0, #+0]
   \   00000134   B010D1E1           LDRH     R1,[R1, #+0]
   \   00000138   B000D0E1           LDRH     R0,[R0, #+0]
   \   0000013C   000081E0           ADD      R0,R1,R0
   \   00000140   250100EF           SWI      +293
   3588            wstrcpy(ws,ec_ed.pWS);
   \   00000144   28109DE5           LDR      R1,[SP, #+40]
   \   00000148   0060A0E1           MOV      R6,R0
   \   0000014C   1F0100EF           SWI      +287
   3589            wstrcat(ws,ed_ws);
   \   00000150   0510A0E1           MOV      R1,R5
   \   00000154   0600A0E1           MOV      R0,R6
   \   00000158   210100EF           SWI      +289
   3590            FreeWS(ed_ws);
   \   0000015C   0500A0E1           MOV      R0,R5
   \   00000160   290100EF           SWI      +297
   3591            CutWSTR(ws,ec_ed.maxlen);
   \   00000164   F811DDE1           LDRSH    R1,[SP, #+24]
   \   00000168   0600A0E1           MOV      R0,R6
   \   0000016C   260100EF           SWI      +294
   3592            EDIT_SetFocus(ed_struct->ed_chatgui,ed_struct->ed_answer);
   \   00000170   081094E5           LDR      R1,[R4, #+8]
   \   00000174   040094E5           LDR      R0,[R4, #+4]
   \   00000178   9B0100EF           SWI      +411
   3593            EDIT_SetTextToFocused(ed_struct->ed_chatgui,ws);
   \   0000017C   040094E5           LDR      R0,[R4, #+4]
   \   00000180   0610A0E1           MOV      R1,R6
   \   00000184   810100EF           SWI      +385
   3594            FreeWS(ws);
   \   00000188   0600A0E1           MOV      R0,R6
   \   0000018C   290100EF           SWI      +297
   3595            GeneralFuncF1(1);
   \   00000190   0100A0E3           MOV      R0,#+1
   \   00000194   3B0100EF           SWI      +315
   3596          }
   \   00000198   84D08DE2           ADD      SP,SP,#+132
   \   0000019C   7080BDE8           POP      {R4-R6,PC}       ;; return
   3597          
   3598          

   \                                 In segment CODE, align 4, keep-with-next
   3599          void GetShortInfo(GUI *data)
   3600          {
   \                     GetShortInfo:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   3601            EDCHAT_STRUCT *ed_struct;
   3602            ed_struct=MenuGetUserPointer(data);
   \   00000004   E00100EF           SWI      +480
   \   00000008   0040A0E1           MOV      R4,R0
   3603          
   3604            TPKT *p;
   3605            CLIST *t;
   3606            if ((t=ed_struct->ed_contact)&&(connect_state==3))
   \   0000000C   005094E5           LDR      R5,[R4, #+0]
   \   00000010   000055E3           CMP      R5,#+0
   \   00000014   1E00000A           BEQ      ??GetShortInfo_0
   \   00000018   ........           LDR      R0,??DataTable150  ;; S_ICONS + 212
   \   0000001C   000090E5           LDR      R0,[R0, #+0]
   \   00000020   030050E3           CMP      R0,#+3
   \   00000024   1A00001A           BNE      ??GetShortInfo_0
   3607            {
   3608              p=malloc(sizeof(PKT));
   \   00000028   0800A0E3           MOV      R0,#+8
   \   0000002C   140000EF           SWI      +20
   \   00000030   0060A0E1           MOV      R6,R0
   3609              p->pkt.uin=t->uin;
   \   00000034   0C0095E5           LDR      R0,[R5, #+12]
   3610              p->pkt.type=T_REQINFOSHORT;
   3611              p->pkt.data_len=0;
   3612              AddStringToLog(t, 0x01, "Request info...", I_str,0xFFFFFFFF);
   \   00000038   0010E0E3           MVN      R1,#+0
   \   0000003C   000086E5           STR      R0,[R6, #+0]
   \   00000040   0B00A0E3           MOV      R0,#+11
   \   00000044   B400C6E1           STRH     R0,[R6, #+4]
   \   00000048   0000A0E3           MOV      R0,#+0
   \   0000004C   B600C6E1           STRH     R0,[R6, #+6]
   \   00000050   ........           LDR      R0,??DataTable149  ;; `?<Constant "\\302\\373 \\340\\342\\362\\356\\360\\350\\`
   \   00000054   02002DE9           PUSH     {R1}
   \   00000058   103080E2           ADD      R3,R0,#+16
   \   0000005C   242080E2           ADD      R2,R0,#+36
   \   00000060   0500A0E1           MOV      R0,R5
   \   00000064   0110A0E3           MOV      R1,#+1
   \   00000068   ........           BL       AddStringToLog
   3613              AddMsgToChat(ed_struct->ed_chatgui);
   \   0000006C   040094E5           LDR      R0,[R4, #+4]
   \   00000070   ........           BL       AddMsgToChat
   3614              RecountMenu(t, 1);
   \   00000074   0110A0E3           MOV      R1,#+1
   \   00000078   0500A0E1           MOV      R0,R5
   \   0000007C   ........           BL       RecountMenu
   3615              SUBPROC((void *)SendAnswer,0,p);
   \   00000080   ........           LDR      R0,??DataTable151  ;; SendAnswer
   \   00000084   0620A0E1           MOV      R2,R6
   \   00000088   0010A0E3           MOV      R1,#+0
   \   0000008C   710100EF           SWI      +369
   \   00000090   04D08DE2           ADD      SP,SP,#+4
   3616            }
   3617            GeneralFuncF1(1);
   \                     ??GetShortInfo_0:
   \   00000094   0100A0E3           MOV      R0,#+1
   \   00000098   3B0100EF           SWI      +315
   3618          }
   \   0000009C   7080BDE8           POP      {R4-R6,PC}       ;; return
   3619          
   3620          void AskNickAndAddContact(EDCHAT_STRUCT *);

   \                                 In segment CODE, align 4, keep-with-next
   3621          void AddCurContact(GUI *data)
   3622          {
   \                     AddCurContact:
   \   00000000   00402DE9           PUSH     {LR}
   3623            EDCHAT_STRUCT *ed_struct;
   3624            ed_struct=MenuGetUserPointer(data);
   \   00000004   E00100EF           SWI      +480
   3625          
   3626            if ((ed_struct->ed_contact)&&(connect_state==3)) AskNickAndAddContact(ed_struct);
   \   00000008   000090E5           LDR      R0,[R0, #+0]
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   0400000A           BEQ      ??AddCurContact_0
   \   00000014   ........           LDR      R1,??DataTable150  ;; S_ICONS + 212
   \   00000018   001091E5           LDR      R1,[R1, #+0]
   \   0000001C   030051E3           CMP      R1,#+3
   \   00000020   0000001A           BNE      ??AddCurContact_0
   \   00000024   ........           _BLF     CreateAddContactGrpDialog,??CreateAddContactGrpDialog??rA
   3627            GeneralFuncF1(1);
   \                     ??AddCurContact_0:
   \   00000028   ........           B        ?Subroutine101
   3628          }

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine101:
   \   00000000   0100A0E3           MOV      R0,#+1
   \   00000004   3B0100EF           SWI      +315
   \   00000008   0080BDE8           POP      {PC}             ;; return
   3629          

   \                                 In segment CODE, align 4, keep-with-next
   3630          void SendAuthReq(GUI *data)
   3631          {
   \                     SendAuthReq:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   14D04DE2           SUB      SP,SP,#+20
   3632            EDCHAT_STRUCT *ed_struct;
   3633            ed_struct=MenuGetUserPointer(data);
   \   00000008   E00100EF           SWI      +480
   3634          
   3635            TPKT *p;
   3636            CLIST *t;
   3637            int l;
   3638            const char s[]=LG_AUTHREQ;
   \   0000000C   B4109FE5           LDR      R1,??SendAuthReq_0  ;; `?<Constant "\\300\\342\\362\\356\\360\\350\\347\\363\\3`
   \   00000010   0040A0E1           MOV      R4,R0
   \   00000014   EC0091E8           LDM      R1,{R2,R3,R5-R7}
   \   00000018   0D00A0E1           MOV      R0,SP
   \   0000001C   EC0080E8           STM      R0,{R2,R3,R5-R7}
   3639            if ((t=ed_struct->ed_contact)&&(connect_state==3))
   \   00000020   005094E5           LDR      R5,[R4, #+0]
   \   00000024   000055E3           CMP      R5,#+0
   \   00000028   2200000A           BEQ      ??SendAuthReq_1
   \   0000002C   ........           LDR      R0,??DataTable150  ;; S_ICONS + 212
   \   00000030   000090E5           LDR      R0,[R0, #+0]
   \   00000034   030050E3           CMP      R0,#+3
   \   00000038   1E00001A           BNE      ??SendAuthReq_1
   3640            {
   3641              p=malloc(sizeof(PKT)+(l=strlen(s))+1);
   \   0000003C   0D00A0E1           MOV      R0,SP
   \   00000040   1B0000EF           SWI      +27
   \   00000044   0060A0E1           MOV      R6,R0
   \   00000048   090086E2           ADD      R0,R6,#+9
   \   0000004C   140000EF           SWI      +20
   \   00000050   0070A0E1           MOV      R7,R0
   3642              p->pkt.uin=t->uin;
   \   00000054   0C0095E5           LDR      R0,[R5, #+12]
   3643              p->pkt.type=T_AUTHREQ;
   3644              p->pkt.data_len=l;
   3645              strcpy(p->data,s);
   \   00000058   0D10A0E1           MOV      R1,SP
   \   0000005C   000087E5           STR      R0,[R7, #+0]
   \   00000060   0A00A0E3           MOV      R0,#+10
   \   00000064   B400C7E1           STRH     R0,[R7, #+4]
   \   00000068   B660C7E1           STRH     R6,[R7, #+6]
   \   0000006C   080087E2           ADD      R0,R7,#+8
   \   00000070   1A0000EF           SWI      +26
   3646              AddStringToLog(t,0x01,p->data,I_str,0xFFFFFFFF);
   \   00000074   50309FE5           LDR      R3,??SendAuthReq_0+0x4  ;; `?<Constant "\\302\\373 \\340\\342\\362\\356\\360\\350\\` + 16
   \   00000078   0000E0E3           MVN      R0,#+0
   \   0000007C   01002DE9           PUSH     {R0}
   \   00000080   082087E2           ADD      R2,R7,#+8
   \   00000084   0110A0E3           MOV      R1,#+1
   \   00000088   0500A0E1           MOV      R0,R5
   \   0000008C   ........           BL       AddStringToLog
   3647              AddMsgToChat(ed_struct->ed_chatgui);
   \   00000090   040094E5           LDR      R0,[R4, #+4]
   \   00000094   ........           BL       AddMsgToChat
   3648              RecountMenu(t, 1);
   \   00000098   0110A0E3           MOV      R1,#+1
   \   0000009C   0500A0E1           MOV      R0,R5
   \   000000A0   ........           BL       RecountMenu
   3649              SUBPROC((void *)SendAnswer,0,p);
   \   000000A4   ........           LDR      R0,??DataTable151  ;; SendAnswer
   \   000000A8   0720A0E1           MOV      R2,R7
   \   000000AC   0010A0E3           MOV      R1,#+0
   \   000000B0   710100EF           SWI      +369
   \   000000B4   04D08DE2           ADD      SP,SP,#+4
   3650            }
   3651            GeneralFuncF1(1);
   \                     ??SendAuthReq_1:
   \   000000B8   0100A0E3           MOV      R0,#+1
   \   000000BC   3B0100EF           SWI      +315
   3652          }
   \   000000C0   14D08DE2           ADD      SP,SP,#+20
   \   000000C4   F080BDE8           POP      {R4-R7,PC}       ;; return
   \                     ??SendAuthReq_0:
   \   000000C8   ........           DC32     `?<Constant "\\300\\342\\362\\356\\360\\350\\347\\363\\3`
   \   000000CC   ........           DC32     `?<Constant "\\302\\373 \\340\\342\\362\\356\\360\\350\\` + 16
   3653          

   \                                 In segment CODE, align 4, keep-with-next
   3654          void SendAuthGrant(GUI *data)
   3655          {
   \                     SendAuthGrant:
   \   00000000   FF412DE9           PUSH     {R0-R8,LR}
   3656            EDCHAT_STRUCT *ed_struct;
   3657            ed_struct=MenuGetUserPointer(data);
   3658          
   3659            TPKT *p;
   3660            CLIST *t;
   3661            int l;
   3662            const char s[]=LG_AUTHGRANT;
   \   00000004   ........           LDR      R5,??DataTable149  ;; `?<Constant "\\302\\373 \\340\\342\\362\\356\\360\\350\\`
   \   00000008   E00100EF           SWI      +480
   \   0000000C   CC0095E8           LDM      R5,{R2,R3,R6,R7}
   \   00000010   0040A0E1           MOV      R4,R0
   \   00000014   0D00A0E1           MOV      R0,SP
   \   00000018   CC0080E8           STM      R0,{R2,R3,R6,R7}
   3663            if ((t=ed_struct->ed_contact)&&(connect_state==3))
   \   0000001C   006094E5           LDR      R6,[R4, #+0]
   \   00000020   000056E3           CMP      R6,#+0
   \   00000024   2200000A           BEQ      ??SendAuthGrant_0
   \   00000028   ........           LDR      R0,??DataTable150  ;; S_ICONS + 212
   \   0000002C   000090E5           LDR      R0,[R0, #+0]
   \   00000030   030050E3           CMP      R0,#+3
   \   00000034   1E00001A           BNE      ??SendAuthGrant_0
   3664            {
   3665              p=malloc(sizeof(PKT)+(l=strlen(s))+1);
   \   00000038   0D00A0E1           MOV      R0,SP
   \   0000003C   1B0000EF           SWI      +27
   \   00000040   0070A0E1           MOV      R7,R0
   \   00000044   090087E2           ADD      R0,R7,#+9
   \   00000048   140000EF           SWI      +20
   \   0000004C   0080A0E1           MOV      R8,R0
   3666              p->pkt.uin=t->uin;
   \   00000050   0C0096E5           LDR      R0,[R6, #+12]
   3667              p->pkt.type=T_AUTHGRANT;
   3668              p->pkt.data_len=l;
   3669              strcpy(p->data,s);
   \   00000054   0D10A0E1           MOV      R1,SP
   \   00000058   000088E5           STR      R0,[R8, #+0]
   \   0000005C   0E00A0E3           MOV      R0,#+14
   \   00000060   B400C8E1           STRH     R0,[R8, #+4]
   \   00000064   B670C8E1           STRH     R7,[R8, #+6]
   \   00000068   080088E2           ADD      R0,R8,#+8
   \   0000006C   1A0000EF           SWI      +26
   3670              AddStringToLog(t,0x01,p->data,I_str,0xFFFFFFFF);
   \   00000070   0000E0E3           MVN      R0,#+0
   \   00000074   01002DE9           PUSH     {R0}
   \   00000078   103085E2           ADD      R3,R5,#+16
   \   0000007C   082088E2           ADD      R2,R8,#+8
   \   00000080   0110A0E3           MOV      R1,#+1
   \   00000084   0600A0E1           MOV      R0,R6
   \   00000088   ........           BL       AddStringToLog
   3671              AddMsgToChat(ed_struct->ed_chatgui);
   \   0000008C   040094E5           LDR      R0,[R4, #+4]
   \   00000090   ........           BL       AddMsgToChat
   3672              RecountMenu(t, 1);
   \   00000094   0110A0E3           MOV      R1,#+1
   \   00000098   0600A0E1           MOV      R0,R6
   \   0000009C   ........           BL       RecountMenu
   3673              SUBPROC((void *)SendAnswer,0,p);
   \   000000A0   ........           LDR      R0,??DataTable151  ;; SendAnswer
   \   000000A4   0820A0E1           MOV      R2,R8
   \   000000A8   0010A0E3           MOV      R1,#+0
   \   000000AC   710100EF           SWI      +369
   \   000000B0   04D08DE2           ADD      SP,SP,#+4
   3674            }
   3675            GeneralFuncF1(1);
   \                     ??SendAuthGrant_0:
   \   000000B4   0100A0E3           MOV      R0,#+1
   \   000000B8   3B0100EF           SWI      +315
   3676          }
   \   000000BC   FF81BDE8           POP      {R0-R8,PC}       ;; return
   3677          

   \                                 In segment CODE, align 4, keep-with-next
   3678          void OpenLogfile(GUI *data)
   3679          {
   \                     OpenLogfile:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   3680            EDCHAT_STRUCT *ed_struct;
   3681            ed_struct=MenuGetUserPointer(data);
   \   00000004   E00100EF           SWI      +480
   \   00000008   0040A0E1           MOV      R4,R0
   3682          
   3683            extern const char HIST_PATH[64];
   3684            extern const int HISTORY_TYPE;
   3685            CLIST *t;
   3686            WSHDR *ws=AllocWS(256);
   \   0000000C   400FA0E3           MOV      R0,#+256
   \   00000010   250100EF           SWI      +293
   \   00000014   0050A0E1           MOV      R5,R0
   3687            if ((t=ed_struct->ed_contact))
   \   00000018   000094E5           LDR      R0,[R4, #+0]
   \   0000001C   000050E3           CMP      R0,#+0
   \   00000020   1400000A           BEQ      ??OpenLogfile_0
   3688            {
   3689              if (HISTORY_TYPE)
   \   00000024   0C3090E5           LDR      R3,[R0, #+12]
   \   00000028   5C009FE5           LDR      R0,??OpenLogfile_1  ;; HISTORY_TYPE
   \   0000002C   5C109FE5           LDR      R1,??OpenLogfile_1+0x4  ;; `?<Constant "%s\\\\%u\\\\%u.txt">`
   \   00000030   000090E5           LDR      R0,[R0, #+0]
   \   00000034   58209FE5           LDR      R2,??OpenLogfile_1+0x8  ;; HIST_PATH
   \   00000038   000050E3           CMP      R0,#+0
   \   0000003C   0600000A           BEQ      ??OpenLogfile_2
   3690                wsprintf(ws,"%s\\%u\\%u.txt",HIST_PATH,UIN,t->uin);
   \   00000040   ........           LDR      R0,??DataTable152  ;; UIN
   \   00000044   08002DE9           PUSH     {R3}
   \   00000048   003090E5           LDR      R3,[R0, #+0]
   \   0000004C   0500A0E1           MOV      R0,R5
   \   00000050   240100EF           SWI      +292
   \   00000054   04D08DE2           ADD      SP,SP,#+4
   \   00000058   020000EA           B        ??OpenLogfile_3
   3691              else
   3692                wsprintf(ws,"%s\\%u.txt",HIST_PATH,t->uin);
   \                     ??OpenLogfile_2:
   \   0000005C   101081E2           ADD      R1,R1,#+16
   \   00000060   0500A0E1           MOV      R0,R5
   \   00000064   240100EF           SWI      +292
   3693              ExecuteFile(ws,NULL,NULL);
   \                     ??OpenLogfile_3:
   \   00000068   0020A0E3           MOV      R2,#+0
   \   0000006C   0010A0E3           MOV      R1,#+0
   \   00000070   0500A0E1           MOV      R0,R5
   \   00000074   940000EF           SWI      +148
   3694            }
   3695            FreeWS(ws);
   \                     ??OpenLogfile_0:
   \   00000078   0500A0E1           MOV      R0,R5
   \   0000007C   290100EF           SWI      +297
   3696            GeneralFuncF1(1);
   \   00000080   0100A0E3           MOV      R0,#+1
   \   00000084   3B0100EF           SWI      +315
   3697          }
   \   00000088   3080BDE8           POP      {R4,R5,PC}       ;; return
   \                     ??OpenLogfile_1:
   \   0000008C   ........           DC32     HISTORY_TYPE
   \   00000090   ........           DC32     `?<Constant "%s\\\\%u\\\\%u.txt">`
   \   00000094   ........           DC32     HIST_PATH
   3698          

   \                                 In segment CODE, align 4, keep-with-next
   3699          void ClearLog(GUI *data/*,void *dummy*/)
   3700          {
   \                     ClearLog:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   2CD04DE2           SUB      SP,SP,#+44
   3701            EDITCONTROL ec;
   3702            EDCHAT_STRUCT *ed_struct;
   3703            WSHDR *ws;
   3704            CLIST *t;
   3705          
   3706            ed_struct=MenuGetUserPointer(data);
   \   00000008   E00100EF           SWI      +480
   \   0000000C   0040A0E1           MOV      R4,R0
   3707          
   3708            ExtractEditControl(ed_struct->ed_chatgui,ed_struct->ed_answer,&ec);
   \   00000010   081094E5           LDR      R1,[R4, #+8]
   \   00000014   040094E5           LDR      R0,[R4, #+4]
   \   00000018   0D20A0E1           MOV      R2,SP
   \   0000001C   690100EF           SWI      +361
   3709            if(wstrlen(ec.pWS)>0)
   \   00000020   28009DE5           LDR      R0,[SP, #+40]
   \   00000024   230100EF           SWI      +291
   \   00000028   010050E3           CMP      R0,#+1
   \   0000002C   0D0000BA           BLT      ??ClearLog_0
   3710            {
   3711              ws=AllocWS(1);
   \   00000030   0100A0E3           MOV      R0,#+1
   \   00000034   250100EF           SWI      +293
   \   00000038   0050A0E1           MOV      R5,R0
   3712              CutWSTR(ws,0);
   \   0000003C   0010A0E3           MOV      R1,#+0
   \   00000040   260100EF           SWI      +294
   3713          
   3714              EDIT_SetFocus(ed_struct->ed_chatgui,ed_struct->ed_answer);
   \   00000044   081094E5           LDR      R1,[R4, #+8]
   \   00000048   040094E5           LDR      R0,[R4, #+4]
   \   0000004C   9B0100EF           SWI      +411
   3715              EDIT_SetTextToFocused(ed_struct->ed_chatgui,ws);
   \   00000050   040094E5           LDR      R0,[R4, #+4]
   \   00000054   0510A0E1           MOV      R1,R5
   \   00000058   810100EF           SWI      +385
   3716          
   3717              FreeWS(ws);
   \   0000005C   0500A0E1           MOV      R0,R5
   \   00000060   290100EF           SWI      +297
   3718              GeneralFuncF1(1);
   \   00000064   1D0000EA           B        ??ClearLog_1
   3719            }
   3720            else
   3721            {
   3722          
   3723              if ((t=ed_struct->ed_contact))
   \                     ??ClearLog_0:
   \   00000068   005094E5           LDR      R5,[R4, #+0]
   \   0000006C   000055E3           CMP      R5,#+0
   \   00000070   1C00000A           BEQ      ??ClearLog_2
   3724              {
   3725                if (t->log)
   \   00000074   640095E5           LDR      R0,[R5, #+100]
   \   00000078   0060A0E3           MOV      R6,#+0
   \   0000007C   000050E3           CMP      R0,#+0
   \   00000080   1200000A           BEQ      ??ClearLog_3
   3726                {
   3727                  FreeLOGQ(&t->log);
   \   00000084   640085E2           ADD      R0,R5,#+100
   \   00000088   ........           BL       FreeLOGQ
   3728                  t->msg_count=0;
   \   0000008C   746085E5           STR      R6,[R5, #+116]
   3729                  if (ed_struct->ed_answer>=2&&ed_struct->ed_chatgui)
   \   00000090   080094E5           LDR      R0,[R4, #+8]
   \   00000094   020050E3           CMP      R0,#+2
   \   00000098   0C0000BA           BLT      ??ClearLog_3
   \   0000009C   040094E5           LDR      R0,[R4, #+4]
   \   000000A0   000050E3           CMP      R0,#+0
   \   000000A4   0900000A           BEQ      ??ClearLog_3
   \   000000A8   050000EA           B        ??ClearLog_4
   3730                  {
   3731                    while(ed_struct->ed_answer!=2)
   3732                    {
   3733                      EDIT_RemoveEditControl(ed_struct->ed_chatgui,1);
   \                     ??ClearLog_5:
   \   000000AC   040094E5           LDR      R0,[R4, #+4]
   \   000000B0   0110A0E3           MOV      R1,#+1
   \   000000B4   D10100EF           SWI      +465
   3734                      ed_struct->ed_answer--;
   \   000000B8   080094E5           LDR      R0,[R4, #+8]
   \   000000BC   010040E2           SUB      R0,R0,#+1
   \   000000C0   080084E5           STR      R0,[R4, #+8]
   3735                    }
   \                     ??ClearLog_4:
   \   000000C4   080094E5           LDR      R0,[R4, #+8]
   \   000000C8   020050E3           CMP      R0,#+2
   \   000000CC   F6FFFF1A           BNE      ??ClearLog_5
   3736                  }
   3737                }
   3738                t->isactive=0;		//by BoBa  18.06.07
   \                     ??ClearLog_3:
   \   000000D0   706085E5           STR      R6,[R5, #+112]
   3739                RecountMenu(t, 1);
   \   000000D4   0110A0E3           MOV      R1,#+1
   \   000000D8   0500A0E1           MOV      R0,R5
   \   000000DC   ........           BL       RecountMenu
   3740                GeneralFuncF1(1);
   \                     ??ClearLog_1:
   \   000000E0   0100A0E3           MOV      R0,#+1
   \   000000E4   3B0100EF           SWI      +315
   3741              }
   3742            }
   3743          }
   \                     ??ClearLog_2:
   \   000000E8                      REQUIRE ?Subroutine105
   \   000000E8                      ;; // Fall through to label ?Subroutine105
   3744          

   \                                 In segment CODE, align 4, keep-with-next
   3745          void ecmenu_ghook(void *data, int cmd)
   3746          {
   \                     ecmenu_ghook:
   \   00000000   00402DE9           PUSH     {LR}
   3747            if (cmd==0x0A)
   \   00000004   0A0051E3           CMP      R1,#+10
   \   00000008   0080BD18           POPNE    {PC}
   3748            {
   3749              DisableIDLETMR();
   \   0000000C   7F0100EF           SWI      +383
   3750            }
   3751          }
   \   00000010   0080BDE8           POP      {PC}             ;; return
   3752          

   \                                 In segment DATA_C, align 4, align-sorted
   3753          static const MENUITEM_DESC ecmenu_ITEMS[EC_MNU_MAX]=
   \                     ecmenu_ITEMS:
   \   00000000   00000000....       DC32 0H, `?<Constant "\\326\\350\\362\\350\\360\\356\\342\\340\\3`
   \              ....        
   \   00000008   FFFFFF7F0000       DC32 2147483647, 0, 0H, 3, 1442, 0H
   \              000000000000
   \              03000000A205
   \              000000000000
   \   00000020   ........           DC32 `?<Constant "\\302\\361\\362\\340\\342\\350\\362\\374 \\`
   \   00000024   FFFFFF7F0000       DC32 2147483647, 0, 0H, 3, 1442, 0H
   \              000000000000
   \              03000000A205
   \              000000000000
   \   0000003C   ........           DC32 `?<Constant "\\317\\356\\353\\363\\367\\350\\362\\374 \\`
   \   00000040   FFFFFF7F0000       DC32 2147483647, 0, 0H, 3, 1442, 0H
   \              000000000000
   \              03000000A205
   \              000000000000
   \   00000058   ........           DC32 `?<Constant "\\304\\356\\341\\340\\342./\\350\\354\\377`
   \   0000005C   FFFFFF7F0000       DC32 2147483647, 0, 0H, 3, 1442, 0H
   \              000000000000
   \              03000000A205
   \              000000000000
   \   00000074   ........           DC32 `?<Constant "\\307\\340\\357\\360\\356\\361 \\340\\342\\`
   \   00000078   FFFFFF7F0000       DC32 2147483647, 0, 0H, 3, 1442, 0H
   \              000000000000
   \              03000000A205
   \              000000000000
   \   00000090   ........           DC32 `?<Constant "\\300\\342\\362\\356\\360\\350\\347\\356\\3`
   \   00000094   FFFFFF7F0000       DC32 2147483647, 0, 0H, 3, 1442, 0H
   \              000000000000
   \              03000000A205
   \              000000000000
   \   000000AC   ........           DC32 `?<Constant "\\316\\362\\352\\360\\373\\362\\374 \\350\\`
   \   000000B0   FFFFFF7F0000       DC32 2147483647, 0, 0H, 3, 1442, 0H
   \              000000000000
   \              03000000A205
   \              000000000000
   \   000000C8   ........           DC32 `?<Constant "\\316\\367\\350\\361\\362\\350\\362\\374 \\`
   \   000000CC   FFFFFF7F0000       DC32 2147483647, 0, 0H, 3, 1442
   \              000000000000
   \              03000000A205
   \              0000        
   3754          {
   3755            {NULL,(int)LG_MNUQUOTE,    LGP_NULL,0,NULL,MENU_FLAG3,MENU_FLAG2},
   3756            {NULL,(int)LG_MNUADDSML,   LGP_NULL,0,NULL,MENU_FLAG3,MENU_FLAG2},
   3757            {NULL,(int)LG_MNUSHINFO,   LGP_NULL,0,NULL,MENU_FLAG3,MENU_FLAG2},
   3758            {NULL,(int)LG_MNUADDREN,   LGP_NULL,0,NULL,MENU_FLAG3,MENU_FLAG2},
   3759            {NULL,(int)LG_MNUSAUTHREQ, LGP_NULL,0,NULL,MENU_FLAG3,MENU_FLAG2},
   3760            {NULL,(int)LG_MNUSAUTHGRT, LGP_NULL,0,NULL,MENU_FLAG3,MENU_FLAG2},
   3761            {NULL,(int)LG_MNUOPENLOG,  LGP_NULL,0,NULL,MENU_FLAG3,MENU_FLAG2},
   3762            {NULL,(int)LG_MNUCLEARCHT, LGP_NULL,0,NULL,MENU_FLAG3,MENU_FLAG2}
   3763          };
   3764          
   3765          extern void AddSmile(GUI *data);

   \                                 In segment DATA_C, align 4, align-sorted
   3766          static const MENUPROCS_DESC ecmenu_HNDLS[EC_MNU_MAX]=
   \                     ecmenu_HNDLS:
   \   00000000   ............       DC32 Quote, AddSmile, GetShortInfo, AddCurContact, SendAuthReq
   \              ............
   \              ............
   \              ....        
   \   00000014   ............       DC32 SendAuthGrant, OpenLogfile, ClearLog
   \              ............

   \                                 In segment DATA_I, align 4, align-sorted
   \                     S_ICONS:
   \   00000000                      DS8 116
   \   00000074                      REQUIRE `?<Initializer for S_ICONS>`
   \                     gipc:
   \   00000074                      DS8 12
   \   00000080                      REQUIRE `?<Initializer for gipc>`
   \                     tmr_gipc:
   \   00000080                      DS8 12
   \   0000008C                      REQUIRE `?<Initializer for tmr_gipc>`
   \                     maincsm_id:
   \   0000008C                      DS8 4
   \   00000090                      REQUIRE `?<Initializer for maincsm_id>`
   \                     maingui_id:
   \   00000090                      DS8 4
   \   00000094                      REQUIRE `?<Initializer for maingui_id>`
   \                     SENDMSGCOUNT:
   \   00000094                      DS8 4
   \   00000098                      REQUIRE `?<Initializer for SENDMSGCOUNT>`
   \                     IsActiveUp:
   \   00000098                      DS8 4
   \   0000009C                      REQUIRE `?<Initializer for IsActiveUp>`
   \                     ews:
   \   0000009C                      DS8 4
   \   000000A0                      REQUIRE `?<Initializer for ews>`
   \                     silenthide:
   \   000000A0                      DS8 4
   \   000000A4                      REQUIRE `?<Initializer for silenthide>`
   \                     disautorecconect:
   \   000000A4                      DS8 4
   \   000000A8                      REQUIRE `?<Initializer for disautorecconect>`
   \                     Is_Vibra_Enabled:
   \   000000A8                      DS8 4
   \   000000AC                      REQUIRE `?<Initializer for Is_Vibra_Enabled>`
   \                     Is_Sounds_Enabled:
   \   000000AC                      DS8 4
   \   000000B0                      REQUIRE `?<Initializer for Is_Sounds_Enabled>`
   \                     Is_Show_Offline:
   \   000000B0                      DS8 4
   \   000000B4                      REQUIRE `?<Initializer for Is_Show_Offline>`
   \                     Is_Show_Groups:
   \   000000B4                      DS8 4
   \   000000B8                      REQUIRE `?<Initializer for Is_Show_Groups>`
   \                     CurrentStatus:
   \   000000B8                      DS8 4
   \   000000BC                      REQUIRE `?<Initializer for CurrentStatus>`
   \                     CurrentXStatus:
   \   000000BC                      DS8 4
   \   000000C0                      REQUIRE `?<Initializer for CurrentXStatus>`
   \                     CurrentPrivateStatus:
   \   000000C0                      DS8 4
   \   000000C4                      REQUIRE `?<Initializer for CurrentPrivateStatus>`
   \                     vibra_count:
   \   000000C4                      DS8 4
   \   000000C8                      REQUIRE `?<Initializer for vibra_count>`
   \                     templates_chars:
   \   000000C8                      DS8 4
   \   000000CC                      REQUIRE `?<Initializer for templates_chars>`
   \                     templates_lines:
   \   000000CC                      DS8 4
   \   000000D0                      REQUIRE `?<Initializer for templates_lines>`
   \                     RXstate:
   \   000000D0                      DS8 4
   \   000000D4                      REQUIRE `?<Initializer for RXstate>`
   \                     connect_state:
   \   000000D4                      DS8 4
   \   000000D8                      REQUIRE `?<Initializer for connect_state>`
   \                     sock:
   \   000000D8                      DS8 4
   \   000000DC                      REQUIRE `?<Initializer for sock>`
   \                     TOTALRECEIVED:
   \   000000DC                      DS8 4
   \   000000E0                      REQUIRE `?<Initializer for TOTALRECEIVED>`
   \                     TOTALSENDED:
   \   000000E0                      DS8 4
   \   000000E4                      REQUIRE `?<Initializer for TOTALSENDED>`
   \                     ALLTOTALRECEIVED:
   \   000000E4                      DS8 4
   \   000000E8                      REQUIRE `?<Initializer for ALLTOTALRECEIVED>`
   \                     ALLTOTALSENDED:
   \   000000E8                      DS8 4
   \   000000EC                      REQUIRE `?<Initializer for ALLTOTALSENDED>`
   \                     sendq_l:
   \   000000EC                      DS8 4
   \   000000F0                      REQUIRE `?<Initializer for sendq_l>`
   \                     sendq_p:
   \   000000F0                      DS8 4
   \   000000F4                      REQUIRE `?<Initializer for sendq_p>`
   \                     is_gprs_online:
   \   000000F4                      DS8 4
   \   000000F8                      REQUIRE `?<Initializer for is_gprs_online>`
   \                     total_unread:
   \   000000F8                      DS8 4
   \   000000FC                      REQUIRE `?<Initializer for total_unread>`
   \                     cltop:
   \   000000FC                      DS8 4
   \   00000100                      REQUIRE `?<Initializer for cltop>`
   \                     GROUP_CACHE:
   \   00000100                      DS8 4
   \   00000104                      REQUIRE `?<Initializer for GROUP_CACHE>`
   \                     contactlist_menu_id:
   \   00000104                      DS8 4
   \   00000108                      REQUIRE `?<Initializer for contactlist_menu_id>`
   \                     edchat_id:
   \   00000108                      DS8 4
   \   0000010C                      REQUIRE `?<Initializer for edchat_id>`
   \   0000010C                      DS8 4
   \   00000110                      REQUIRE `?<Initializer for prev_clmenu_itemcount>`
   \                     tenseconds_to_ping:
   \   00000110                      DS8 4
   \   00000114                      REQUIRE `?<Initializer for tenseconds_to_ping>`
   \                     DNR_ID:
   \   00000114                      DS8 4
   \   00000118                      REQUIRE `?<Initializer for DNR_ID>`
   \                     DNR_TRIES:
   \   00000118                      DS8 4
   \   0000011C                      REQUIRE `?<Initializer for DNR_TRIES>`
   \                     host_counter:
   \   0000011C                      DS8 4
   \   00000120                      REQUIRE `?<Initializer for host_counter>`
   \                     time_to_stop_t9:
   \   00000120                      DS8 4
   \   00000124                      REQUIRE `?<Initializer for time_to_stop_t9>`
   \                     old_ed_redraw:
   \   00000124                      DS8 4
   \   00000128                      REQUIRE `?<Initializer for old_ed_redraw>`
   \   00000128                      DS8 64
   \   00000168                      REQUIRE `?<Initializer for methods>`
   \                     elf_path:
   \   00000168                      DS8 256
   \   00000268                      REQUIRE `?<Initializer for elf_path>`
   \                     ContactT9Key:
   \   00000268                      DS8 32
   \   00000288                      REQUIRE `?<Initializer for ContactT9Key>`
   \                     logmsg:
   \   00000288                      DS8 256
   \   00000388                      REQUIRE `?<Initializer for logmsg>`
   \                     tmr_illumination:
   \   00000388                      DS8 16
   \   00000398                      REQUIRE `?<Initializer for tmr_illumination>`
   \                     tmr_vibra:
   \   00000398                      DS8 16
   \   000003A8                      REQUIRE `?<Initializer for tmr_vibra>`
   \                     reconnect_tmr:
   \   000003A8                      DS8 16
   \   000003B8                      REQUIRE `?<Initializer for reconnect_tmr>`
   \                     tmr_active:
   \   000003B8                      DS8 16
   \   000003C8                      REQUIRE `?<Initializer for tmr_active>`
   \                     clm_hdr_text:
   \   000003C8                      DS8 48
   \   000003F8                      REQUIRE `?<Initializer for clm_hdr_text>`
   \                     clmenu_sk_r:
   \   000003F8                      DS8 16
   \   00000408                      REQUIRE `?<Initializer for clmenu_sk_r>`
   \                     hostname:
   \   00000408                      DS8 128
   \   00000488                      REQUIRE `?<Initializer for hostname>`
   3767          {
   3768            Quote,
   3769            AddSmile,
   3770            GetShortInfo,
   3771            AddCurContact,
   3772            SendAuthReq,
   3773            SendAuthGrant,
   3774            OpenLogfile,
   3775            ClearLog,
   3776          };
   3777          
   3778          char ecm_contactname[64];
   \                     ecm_contactname:
   \   00000488                      DS8 64
   \   000004C8                      REQUIRE `?<Initializer for ecm_contactname>`
   3779          

   \                                 In segment DATA_C, align 4, align-sorted
   3780          static const HEADER_DESC ecmenu_HDR={0,0,NULL,NULL,NULL,(int)ecm_contactname,LGP_NULL};
   \                     ecmenu_HDR:
   \   00000000   000000000000       DC16 0, 0, 0, 0
   \              0000        
   \   00000008   00000000....       DC32 0H, ecm_contactname, 2147483647
   \              ....FFFFFF7F
   \   00000014   080000000000       DC32 8, 0H, ecmenu_ghook, 0H, menusoftkeys, menu_skt, 0, 0H
   \              0000........
   \              00000000....
   \              ............
   \              000000000000
   \              0000        
   \   00000034   ............       DC32 ecmenu_ITEMS, ecmenu_HNDLS, 8
   \              ....08000000
   3781          
   3782          static const MENU_DESC ecmenu_STRUCT=
   3783          {
   3784            8,NULL,ecmenu_ghook,NULL,
   3785            menusoftkeys,
   3786            &menu_skt,
   3787            0,
   3788            NULL,
   3789            ecmenu_ITEMS,
   3790            ecmenu_HNDLS,
   3791            EC_MNU_MAX
   3792          };
   3793          

   \                                 In segment CODE, align 4, keep-with-next
   3794          void ec_menu(EDCHAT_STRUCT *ed_struct)
   3795          {
   \                     ec_menu:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   24D04DE2           SUB      SP,SP,#+36
   \   00000008   0040A0E1           MOV      R4,R0
   3796            CLIST *t;
   3797            int to_remove[EC_MNU_MAX+1];
   3798            int remove=0;
   3799            if ((t=ed_struct->ed_contact))
   \   0000000C   000094E5           LDR      R0,[R4, #+0]
   \   00000010   000050E3           CMP      R0,#+0
   \   00000014   3D00000A           BEQ      ??ec_menu_0
   3800            {
   3801              if (t->name)
   \   00000018   ........           LDR      R5,??DataTable153  ;; S_ICONS
   \   0000001C   8830A0E3           MOV      R3,#+136
   \   00000020   403E83E3           ORR      R3,R3,#0x400
   \   00000024   141090E2           ADDS     R1,R0,#+20
   \   00000028   0300000A           BEQ      ??ec_menu_1
   3802              {
   3803                strncpy(ecm_contactname,t->name,63);
   \   0000002C   3F20A0E3           MOV      R2,#+63
   \   00000030   050083E0           ADD      R0,R3,R5
   \   00000034   160100EF           SWI      +278
   \   00000038   030000EA           B        ??ec_menu_2
   3804              }
   3805              else
   3806              {
   3807                sprintf(ecm_contactname,"%u",t->uin);
   \                     ??ec_menu_1:
   \   0000003C   0C2090E5           LDR      R2,[R0, #+12]
   \   00000040   341F8FE2           ADR      R1,??ec_menu_3   ;; "%u"
   \   00000044   050083E0           ADD      R0,R3,R5
   \   00000048   160000EF           SWI      +22
   3808              }
   3809              if (EDIT_GetFocus(ed_struct->ed_chatgui)==ed_struct->ed_answer)
   \                     ??ec_menu_2:
   \   0000004C   040094E5           LDR      R0,[R4, #+4]
   \   00000050   0160A0E3           MOV      R6,#+1
   \   00000054   820100EF           SWI      +386
   \   00000058   081094E5           LDR      R1,[R4, #+8]
   \   0000005C   010050E1           CMP      R0,R1
   3810              {
   3811                to_remove[++remove]=0;
   \   00000060   0010A003           MOVEQ    R1,#+0
   3812              }
   3813              else
   3814              {
   3815                to_remove[++remove]=1;
   \   00000064   0110A013           MOVNE    R1,#+1
   \   00000068   04108DE5           STR      R1,[SP, #+4]
   3816              }
   3817          
   3818              if (ed_struct->ed_answer<=2) to_remove[++remove]=7;
   \   0000006C   080094E5           LDR      R0,[R4, #+8]
   \   00000070   030050E3           CMP      R0,#+3
   \   00000074   0710A0B3           MOVLT    R1,#+7
   \   00000078   08108DB5           STRLT    R1,[SP, #+8]
   3819              if (!ed_struct->ed_contact || connect_state!=3)
   \   0000007C   000094E5           LDR      R0,[R4, #+0]
   \   00000080   0260A0B3           MOVLT    R6,#+2
   \   00000084   000050E3           CMP      R0,#+0
   \   00000088   0200000A           BEQ      ??ec_menu_4
   \   0000008C   D40095E5           LDR      R0,[R5, #+212]
   \   00000090   030050E3           CMP      R0,#+3
   \   00000094   0D00000A           BEQ      ??ec_menu_5
   3820              {
   3821                to_remove[++remove]=2;
   \                     ??ec_menu_4:
   \   00000098   010086E2           ADD      R0,R6,#+1
   \   0000009C   0D10A0E1           MOV      R1,SP
   \   000000A0   0220A0E3           MOV      R2,#+2
   \   000000A4   002181E7           STR      R2,[R1, +R0, LSL #+2]
   3822                to_remove[++remove]=3;
   \   000000A8   010080E2           ADD      R0,R0,#+1
   \   000000AC   0320A0E3           MOV      R2,#+3
   \   000000B0   002181E7           STR      R2,[R1, +R0, LSL #+2]
   3823                to_remove[++remove]=4;
   \   000000B4   010080E2           ADD      R0,R0,#+1
   \   000000B8   0420A0E3           MOV      R2,#+4
   \   000000BC   002181E7           STR      R2,[R1, +R0, LSL #+2]
   3824                to_remove[++remove]=5;
   \   000000C0   016080E2           ADD      R6,R0,#+1
   \   000000C4   0D00A0E1           MOV      R0,SP
   \   000000C8   0510A0E3           MOV      R1,#+5
   \   000000CC   061180E7           STR      R1,[R0, +R6, LSL #+2]
   3825              }
   3826          
   3827              patch_header(&ecmenu_HDR);
   \                     ??ec_menu_5:
   \   000000D0   44509FE5           LDR      R5,??ec_menu_3+0x4  ;; ecmenu_HDR
   \   000000D4   0500A0E1           MOV      R0,R5
   \   000000D8   ........           _BLF     patch_header,??patch_header??rA
   3828              to_remove[0]=remove;
   \   000000DC   00608DE5           STR      R6,[SP, #+0]
   3829              CreateMenu(0,0,&ecmenu_STRUCT,&ecmenu_HDR,0,EC_MNU_MAX,ed_struct,to_remove);
   \   000000E0   0D00A0E1           MOV      R0,SP
   \   000000E4   01002DE9           PUSH     {R0}
   \   000000E8   10002DE9           PUSH     {R4}
   \   000000EC   0530A0E1           MOV      R3,R5
   \   000000F0   0800A0E3           MOV      R0,#+8
   \   000000F4   01002DE9           PUSH     {R0}
   \   000000F8   142085E2           ADD      R2,R5,#+20
   \   000000FC   0010A0E3           MOV      R1,#+0
   \   00000100   0000A0E3           MOV      R0,#+0
   \   00000104   01002DE9           PUSH     {R0}
   \   00000108   520100EF           SWI      +338
   \   0000010C   10D08DE2           ADD      SP,SP,#+16
   3830            }
   3831          }
   \                     ??ec_menu_0:
   \   00000110   24D08DE2           ADD      SP,SP,#+36       ;; stack cleaning
   \   00000114   7080BDE8           POP      {R4-R6,PC}       ;; return
   \                     ??ec_menu_3:
   \   00000118   25750000           DC8      "%u",+0
   \   0000011C   ........           DC32     ecmenu_HDR
   3832          
   3833          

   \                                 In segment CODE, align 4, keep-with-next
   3834          void AskNickAndAddContact(EDCHAT_STRUCT *ed_struct)
   3835          {
   3836            CreateAddContactGrpDialog(ed_struct->ed_contact);
   \                     AskNickAndAddContact:
   \   00000000   000090E5           LDR      R0,[R0, #+0]
   \   00000004   ........           _BF      CreateAddContactGrpDialog,??CreateAddContactGrpDialog??rA  ;; tailcall
   3837          }
   3838          

   \                                 In segment CODE, align 4, keep-with-next
   3839          void AddSmile(GUI *data)
   3840          {
   \                     AddSmile:
   \   00000000   00402DE9           PUSH     {LR}
   3841            EDCHAT_STRUCT *ed_struct=MenuGetUserPointer(data);
   \   00000004   E00100EF           SWI      +480
   3842            CreateSmileSelectGUI(ed_struct);
   \   00000008   ........           _BLF     CreateSmileSelectGUI,??CreateSmileSelectGUI??rA
   3843            GeneralFuncF1(1);
   \   0000000C                      REQUIRE ?Subroutine101
   \   0000000C                      ;; // Fall through to label ?Subroutine101
   3844          }

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   ........           DC32     S_ICONS

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable6:
   \   00000000   ........           DC32     UIN

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable7:
   \   00000000   ........           DC32     def_setting

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable12:
   \   00000000   ........           DC32     VIBR_TYPE

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable16:
   \   00000000   ........           DC32     TEMPLATES_PATH

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable23:
   \   00000000   ........           DC32     S_ICONS

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable24:
   \   00000000   ........           DC32     HISTORY_BUFFER

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable26:
   \   00000000   ........           DC32     S_ICONS + 252

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable27:
   \   00000000   ........           DC32     Canvas

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable28:
   \   00000000   ........           DC32     S_ICONS

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable30:
   \   00000000   ........           DC32     do_reconnect

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable31:
   \   00000000   ........           DC32     RECONNECT_TIME

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable37:
   \   00000000   ........           DC32     UIN

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable40:
   \   00000000   ........           DC32     HISTORY_BUFFER

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable41:
   \   00000000   ........           DC32     S_ICONS

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable43:
   \   00000000   ........           DC32     ED_X_FONT_SIZE

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable45:
   \   00000000   ........           DC32     X_COLOR

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable46:
   \   00000000   ........           DC32     O_ED_X_FONT_SIZE

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable47:
   \   00000000   ........           DC32     O_X_COLOR

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable55:
   \   00000000   ........           DC32     O_ED_FONT_SIZE

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable56:
   \   00000000   ........           DC32     ED_FONT_SIZE

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable58:
   \   00000000   ........           DC32     ACK_COLOR

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable59:
   \   00000000   ........           DC32     O_TO_COLOR

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable60:
   \   00000000   ........           DC32     O_I_COLOR

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable61:
   \   00000000   ........           DC32     TO_COLOR

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable62:
   \   00000000   ........           DC32     I_COLOR

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable63:
   \   00000000   ........           DC32     UNACK_COLOR

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable64:
   \   00000000   ........           DC32     ED_H_FONT_SIZE

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable65:
   \   00000000   ........           DC32     O_ED_H_FONT_SIZE

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable68:
   \   00000000   ........           DC32     SendAnswer

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable74:
   \   00000000   ........           DC32     VIBR_ON_CONNECT

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable75:
   \   00000000   ........           DC32     HISTORY_BUFFER

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable76:
   \   00000000   ........           DC32     VIBR_TYPE

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable77:
   \   00000000   ........           DC32     S_ICONS

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable86:
   \   00000000   ........           DC32     process_active_timer

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable95:
   \   00000000   ........           DC32     Canvas

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable96:
   \   00000000   ........           DC32     S_ICONS

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable97:
   \   00000000   ........           DC32     Canvas

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable100:
   \   00000000   ........           DC32     do_reconnect

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable102:
   \   00000000   ........           DC32     create_connect

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable103:
   \   00000000   ........           DC32     VIBR_ON_CONNECT

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable105:
   \   00000000   ........           DC32     SendAnswer

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable106:
   \   00000000   ........           DC32     end_socket

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable107:
   \   00000000   ........           DC32     ClearSendQ

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable108:
   \   00000000   ........           DC32     RECONNECT_TIME

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable112:
   \   00000000   ........           DC32     `?<Constant "NATICQ: %d">`

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable113:
   \   00000000   ........           DC32     UIN

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable114:
   \   00000000   ........           DC32     successed_config_filename

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable115:
   \   00000000   ........           DC32     ElfKiller

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable117:
   \   00000000   ........           DC32     S_ICONS + 252

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable118:
   \   00000000   ........           DC32     S_ICONS

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable120:
   \   00000000   ........           DC32     `?<Constant "abcdefghijklmnopqrstu...">`

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable124:
   \   00000000   ........           DC32     TEMPLATES_PATH

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable126:
   \   00000000   ........           DC32     S_ICONS

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable127:
   \   00000000   ........           DC32     S_ICONS

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable128:
   \   00000000   ........           DC32     ED_X_FONT_SIZE

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable129:
   \   00000000   ........           DC32     ED_H_FONT_SIZE

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable130:
   \   00000000   ........           DC32     O_X_COLOR

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable131:
   \   00000000   ........           DC32     X_COLOR

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable132:
   \   00000000   ........           DC32     O_ED_X_FONT_SIZE

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable133:
   \   00000000   ........           DC32     I_COLOR

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable134:
   \   00000000   ........           DC32     ACK_COLOR

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable135:
   \   00000000   ........           DC32     O_I_COLOR

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable136:
   \   00000000   ........           DC32     O_TO_COLOR

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable137:
   \   00000000   ........           DC32     O_ED_H_FONT_SIZE

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable138:
   \   00000000   ........           DC32     TO_COLOR

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable139:
   \   00000000   ........           DC32     UNACK_COLOR

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable140:
   \   00000000   ........           DC32     O_ED_FONT_SIZE

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable142:
   \   00000000   ........           DC32     ED_FONT_SIZE

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable149:
   \   00000000   ........           DC32     `?<Constant "\\302\\373 \\340\\342\\362\\356\\360\\350\\`

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable150:
   \   00000000   ........           DC32     S_ICONS + 212

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable151:
   \   00000000   ........           DC32     SendAnswer

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable152:
   \   00000000   ........           DC32     UIN

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable153:
   \   00000000   ........           DC32     S_ICONS

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for S_ICONS>`:
   \   00000000   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000010   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000020   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000030   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000040   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000050   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000060   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000        
   \                     `?<Initializer for gipc>`:
   \   00000074   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \                     `?<Initializer for tmr_gipc>`:
   \   00000080   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \                     `?<Initializer for maincsm_id>`:
   \   0000008C   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for maingui_id>`:
   \   00000090   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for SENDMSGCOUNT>`:
   \   00000094   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for IsActiveUp>`:
   \   00000098   00000000           DC32 0
   \                     `?<Initializer for ews>`:
   \   0000009C   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for silenthide>`:
   \   000000A0   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for disautorecconect>`:
   \   000000A4   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for Is_Vibra_Enabled>`:
   \   000000A8   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for Is_Sounds_Enabled>`:
   \   000000AC   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for Is_Show_Offline>`:
   \   000000B0   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for Is_Show_Groups>`:
   \   000000B4   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for CurrentStatus>`:
   \   000000B8   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for CurrentXStatus>`:
   \   000000BC   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for CurrentPrivateStatus>`:
   \   000000C0   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for vibra_count>`:
   \   000000C4   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for templates_chars>`:
   \   000000C8   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for templates_lines>`:
   \   000000CC   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for RXstate>`:
   \   000000D0   F6FFFFFF           DC32 -10
   \                     `?<Initializer for connect_state>`:
   \   000000D4   00000000           DC32 0
   \                     `?<Initializer for sock>`:
   \   000000D8   FFFFFFFF           DC32 -1
   \                     `?<Initializer for TOTALRECEIVED>`:
   \   000000DC   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for TOTALSENDED>`:
   \   000000E0   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for ALLTOTALRECEIVED>`:
   \   000000E4   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for ALLTOTALSENDED>`:
   \   000000E8   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for sendq_l>`:
   \   000000EC   00000000           DC32 0
   \                     `?<Initializer for sendq_p>`:
   \   000000F0   00000000           DC32 0H
   \                     `?<Initializer for is_gprs_online>`:
   \   000000F4   01000000           DC32 1
   \                     `?<Initializer for total_unread>`:
   \   000000F8   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for cltop>`:
   \   000000FC   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for GROUP_CACHE>`:
   \   00000100   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for contactlist_menu_id>`:
   \   00000104   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for edchat_id>`:
   \   00000108   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for prev_clmenu_itemcount>`:
   \   0000010C   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for tenseconds_to_ping>`:
   \   00000110   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for DNR_ID>`:
   \   00000114   00000000           DC32 0
   \                     `?<Initializer for DNR_TRIES>`:
   \   00000118   03000000           DC32 3
   \                     `?<Initializer for host_counter>`:
   \   0000011C   00000000           DC32 0
   \                     `?<Initializer for time_to_stop_t9>`:
   \   00000120   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for old_ed_redraw>`:
   \   00000124   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for methods>`:
   \   00000128   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000138   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000148   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000158   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \                     `?<Initializer for elf_path>`:
   \   00000168   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000178   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000188   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000198   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000001A8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000001B8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000001C8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000001D8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000001E8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000001F8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000208   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000218   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000228   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000238   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000248   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000258   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \                     `?<Initializer for ContactT9Key>`:
   \   00000268   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000278   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \                     `?<Initializer for logmsg>`:
   \   00000288   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000298   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000002A8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000002B8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000002C8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000002D8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000002E8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000002F8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000308   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000318   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000328   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000338   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000348   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000358   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000368   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000378   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \                     `?<Initializer for tmr_illumination>`:
   \   00000388   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \                     `?<Initializer for tmr_vibra>`:
   \   00000398   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \                     `?<Initializer for reconnect_tmr>`:
   \   000003A8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \                     `?<Initializer for tmr_active>`:
   \   000003B8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \                     `?<Initializer for clm_hdr_text>`:
   \   000003C8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000003D8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000003E8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \                     `?<Initializer for clmenu_sk_r>`:
   \   000003F8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \                     `?<Initializer for hostname>`:
   \   00000408   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000418   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000428   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000438   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000448   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000458   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000468   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000478   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \                     `?<Initializer for ecm_contactname>`:
   \   00000488   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000498   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000004A8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000004B8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "dnd.png">`:
   \   00000000   646E642E706E       DC8 "dnd.png"
   \              6700        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "depression.png">`:
   \   00000000   646570726573       DC8 "depression.png"
   \              73696F6E2E70
   \              6E6700      
   \   0000000F   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "evil.png">`:
   \   00000000   6576696C2E70       DC8 "evil.png"
   \              6E6700      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "home.png">`:
   \   00000000   686F6D652E70       DC8 "home.png"
   \              6E6700      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "lunch.png">`:
   \   00000000   6C756E63682E       DC8 "lunch.png"
   \              706E6700    
   \   0000000A   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "work.png">`:
   \   00000000   776F726B2E70       DC8 "work.png"
   \              6E6700      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "online.png">`:
   \   00000000   6F6E6C696E65       DC8 "online.png"
   \              2E706E6700  
   \   0000000B   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "ffc.png">`:
   \   00000000   6666632E706E       DC8 "ffc.png"
   \              6700        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "message.png">`:
   \   00000000   6D6573736167       DC8 "message.png"
   \              652E706E6700

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "unknown.png">`:
   \   00000000   756E6B6E6F77       DC8 "unknown.png"
   \              6E2E706E6700

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "groupon.png">`:
   \   00000000   67726F75706F       DC8 "groupon.png"
   \              6E2E706E6700

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "groupoff.png">`:
   \   00000000   67726F75706F       DC8 "groupoff.png"
   \              66662E706E67
   \              00          
   \   0000000D   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "null.png">`:
   \   00000000   6E756C6C2E70       DC8 "null.png"
   \              6E6700      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "addcont.png">`:
   \   00000000   616464636F6E       DC8 "addcont.png"
   \              742E706E6700

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "head.png">`:
   \   00000000   686561642E70       DC8 "head.png"
   \              6E6700      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "logo.png">`:
   \   00000000   6C6F676F2E70       DC8 "logo.png"
   \              6E6700      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "ping.png">`:
   \   00000000   70696E672E70       DC8 "ping.png"
   \              6E6700      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "settings.png">`:
   \   00000000   73657474696E       DC8 "settings.png"
   \              67732E706E67
   \              00          
   \   0000000D   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "vis1.png">`:
   \   00000000   766973312E70       DC8 "vis1.png"
   \              6E6700      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "vis2.png">`:
   \   00000000   766973322E70       DC8 "vis2.png"
   \              6E6700      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "vis3.png">`:
   \   00000000   766973332E70       DC8 "vis3.png"
   \              6E6700      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "vis4.png">`:
   \   00000000   766973342E70       DC8 "vis4.png"
   \              6E6700      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "vis5.png">`:
   \   00000000   766973352E70       DC8 "vis5.png"
   \              6E6700      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\307\\340\\352\\360\\373\\362\\374">`:
   \   00000000   C7E0EAF0FBF2       DC8 "\307\340\352\360\373\362\374"
   \              FC00        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\302\\373\\341\\356\\360">`:
   \   00000000   C2FBE1EEF000       DC8 "\302\373\341\356\360"
   \   00000006   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\316\\357\\366\\350\\350">`:
   \   00000000   CEEFF6E8E800       DC8 "\316\357\366\350\350"
   \   00000006   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\326\\350\\362\\350\\360\\356\\342\\340\\3`:
   \   00000000   D6E8F2E8F0EE       DC8 "\326\350\362\350\360\356\342\340\362\374"
   \              E2E0F2FC00  
   \   0000000B   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\302\\361\\362\\340\\342\\350\\362\\374 \\`:
   \   00000000   C2F1F2E0E2E8       DC8 "\302\361\362\340\342\350\362\374 \361\354\340\351\353"
   \              F2FC20F1ECE0
   \              E9EB00      
   \   0000000F   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\317\\356\\353\\363\\367\\350\\362\\374 \\`:
   \   00000000   CFEEEBF3F7E8       DC8 "\317\356\353\363\367\350\362\374 \350\355\364\356"
   \              F2FC20E8EDF4
   \              EE00        
   \   0000000E   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\304\\356\\341\\340\\342./\\350\\354\\377`:
   \   00000000   C4EEE1E0E22E       DC8 "\304\356\341\340\342./\350\354\377"
   \              2FE8ECFF00  
   \   0000000B   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\307\\340\\357\\360\\356\\361 \\340\\342\\`:
   \   00000000   C7E0EFF0EEF1       DC8 "\307\340\357\360\356\361 \340\342\362\356\360\350\347."
   \              20E0E2F2EEF0
   \              E8E72E00    

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\300\\342\\362\\356\\360\\350\\347\\356\\3`:
   \   00000000   C0E2F2EEF0E8       DC8 "\300\342\362\356\360\350\347\356\342\340\362\374"
   \              E7EEE2E0F2FC
   \              00          
   \   0000000D   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\316\\362\\352\\360\\373\\362\\374 \\350\\`:
   \   00000000   CEF2EAF0FBF2       DC8 "\316\362\352\360\373\362\374 \350\361\362\356\360\350\376"
   \              FC20E8F1F2EE
   \              F0E8FE00    

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\316\\367\\350\\361\\362\\350\\362\\374 \\`:
   \   00000000   CEF7E8F1F2E8       DC8 "\316\367\350\361\362\350\362\374 \367\340\362"
   \              F2FC20F7E0F2
   \              00          
   \   0000000D   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\302\\350\\341\\360\\340 \\356\\362\\352\\`:
   \   00000000   C2E8E1F0E020       DC8 "\302\350\341\360\340 \356\362\352\353\376\367\345\355\340!"
   \              EEF2EAEBFEF7
   \              E5EDE02100  
   \   00000011   000000             DC8 0, 0, 0
   \   00000014   C2E8E1F0E020       DC8 "\302\350\341\360\340 \342\352\353\376\367\345\355\340!"
   \              E2EAEBFEF7E5
   \              EDE02100    

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\307\\342\\363\\352\\350 \\356\\362\\352\\`:
   \   00000000   C7E2F3EAE820       DC8 "\307\342\363\352\350 \356\362\352\353\376\367\345\355\373!"
   \              EEF2EAEBFEF7
   \              E5EDFB2100  
   \   00000011   000000             DC8 0, 0, 0
   \   00000014   C7E2F3EAE820       DC8 "\307\342\363\352\350 \342\352\353\376\367\345\355\373!"
   \              E2EAEBFEF7E5
   \              EDFB2100    

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\\\%d.txt">`:
   \   00000000   5C25642E7478       DC8 "\\%d.txt"
   \              7400        
   \   00000008   5C302E747874       DC8 "\\0.txt"
   \              00          
   \   0000000F   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Waiting for GPRS up...">`:
   \   00000000   57616974696E       DC8 "Waiting for GPRS up..."
   \              6720666F7220
   \              475052532075
   \              702E2E2E00  
   \   00000017   00                 DC8 0
   \   00000018   25733A256400       DC8 "%s:%d"
   \   0000001E   0000               DC8 0, 0
   \   00000020   0A436F6E6E65       DC8 "\012Connect by IP!"
   \              637420627920
   \              49502100    
   \   00000030   53656E642044       DC8 "Send DNR..."
   \              4E522E2E2E00
   \   0000003C   444E52204552       DC8 "DNR ERROR %d!"
   \              524F52202564
   \              2100        
   \   0000004A   0000               DC8 0, 0
   \   0000004C   444E52204F6B       DC8 "DNR Ok, connecting..."
   \              2C20636F6E6E
   \              656374696E67
   \              2E2E2E00    
   \   00000062   0000               DC8 0, 0
   \   00000064   CDE5E2EEE7EC       DC8 "\315\345\342\356\347\354\356\346\355\356 \357\356\344\352\353\376\367\350\362\374\361\377!"
   \              EEE6EDEE20EF
   \              EEE4EAEBFEF7
   \              E8F2FCF1FF21
   \              00          
   \   0000007D   000000             DC8 0, 0, 0
   \   00000080   CDE5E2EEE7EC       DC8 "\315\345\342\356\347\354\356\346\355\356 \361\356\347\344\340\362\374 \361\356\352\345\362, \357\345\360\345\347\340\357\363\361\352 GPRS!"
   \              EEE6EDEE20F1
   \              EEE7E4E0F2FC
   \              20F1EEEAE5F2
   \              2C20EFE5F0E5
   \              E7E0EFF3F1EA
   \              204750525321
   \              00          
   \   000000AB   00                 DC8 0
   \   000000AC   D1E5F0E2E5F0       DC8 "\321\345\360\342\345\360 \355\345 \355\340\351\344\345\355!"
   \              20EDE520EDE0
   \              E9E4E5ED2100
   \   000000BE   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "send res %d">`:
   \   00000000   73656E642072       DC8 "send res %d"
   \              657320256400
   \   0000000C   53656E642064       DC8 "Send delayed..."
   \              656C61796564
   \              2E2E2E00    
   \   0000001C   53656E642065       DC8 "Send error!"
   \              72726F722100

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Sie_%04d">`:
   \   00000000   5369655F2530       DC8 "Sie_%04d"
   \              346400      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Bad packet">`:
   \   00000000   426164207061       DC8 "Bad packet"
   \              636B657400  
   \   0000000B   00                 DC8 0
   \   0000000C   534325643A20       DC8 "SC%d: %04X"
   \              2530345800  
   \   00000017   00                 DC8 0
   \   00000018   4552523A2025       DC8 "ERR: %s"
   \              7300        
   \   00000020   4D534725643A       DC8 "MSG%d: %s"
   \              20257300    
   \   0000002A   0000               DC8 0, 0
   \   0000002C   50696E672025       DC8 "Ping %d-%d seconds!"
   \              642D25642073
   \              65636F6E6473
   \              2100        

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   257300             DC8 "%s"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "%02d:%02d %02d-%02d %...">`:
   \   00000000   253032643A25       DC8 "%02d:%02d %02d-%02d %s:\015\012"
   \              303264202530
   \              32642D253032
   \              642025733A0D
   \              0A00        
   \   0000001A   0000               DC8 0, 0
   \   0000001C   253032643A25       DC8 "%02d:%02d %02d-%02d %s:"
   \              303264202530
   \              32642D253032
   \              642025733A00

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   3A0A00             DC8 ":\012"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "occupied.png">`:
   \   00000000   6F6363757069       DC8 "occupied.png"
   \              65642E706E67
   \              00          
   \   0000000D   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\321\\353\\345\\344\\363\\376\\371\\350\\3`:
   \   00000000   D1EBE5E4F3FE       DC8 "\321\353\345\344\363\376\371\350\351 \367\340\362"
   \              F9E8E920F7E0
   \              F200        
   \   0000000E   0000               DC8 0, 0
   \   00000010   CFF0E5E4FBE4       DC8 "\317\360\345\344\373\344\363\371\350\351 \367\340\362"
   \              F3F9E8E920F7
   \              E0F200      
   \   0000001F   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "abcdefghijklmnopqrstu...">`:
   \   00000000   616263646566       DC8 61H, 62H, 63H, 64H, 65H, 66H, 67H, 68H
   \              6768        
   \   00000008   696A6B6C6D6E       DC8 69H, 6AH, 6BH, 6CH, 6DH, 6EH, 6FH, 70H
   \              6F70        
   \   00000010   717273747576       DC8 71H, 72H, 73H, 74H, 75H, 76H, 77H, 78H
   \              7778        
   \   00000018   797A41424344       DC8 79H, 7AH, 41H, 42H, 43H, 44H, 45H, 46H
   \              4546        
   \   00000020   4748494A4B4C       DC8 47H, 48H, 49H, 4AH, 4BH, 4CH, 4DH, 4EH
   \              4D4E        
   \   00000028   4F5051525354       DC8 4FH, 50H, 51H, 52H, 53H, 54H, 55H, 56H
   \              5556        
   \   00000030   5758595A3031       DC8 57H, 58H, 59H, 5AH, 30H, 31H, 32H, 33H
   \              3233        
   \   00000038   343536373839       DC8 34H, 35H, 36H, 37H, 38H, 39H, 24H, 2DH
   \              242D        
   \   00000040   5F2E2B212A27       DC8 5FH, 2EH, 2BH, 21H, 2AH, 27H, 28H, 29H
   \              2829        
   \   00000048   2C253B3A4026       DC8 2CH, 25H, 3BH, 3AH, 40H, 26H, 3DH, 2FH
   \              3D2F        
   \   00000050   3FE0E1E2E3E4       DC8 3FH, 0E0H, 0E1H, 0E2H, 0E3H, 0E4H, 0E5H, 0B8H
   \              E5B8        
   \   00000058   E6E7E8E9EAEB       DC8 0E6H, 0E7H, 0E8H, 0E9H, 0EAH, 0EBH, 0ECH, 0EDH
   \              ECED        
   \   00000060   EEEFF0F1F2F3       DC8 0EEH, 0EFH, 0F0H, 0F1H, 0F2H, 0F3H, 0F4H, 0F5H
   \              F4F5        
   \   00000068   F6F7F8F9FAFB       DC8 0F6H, 0F7H, 0F8H, 0F9H, 0FAH, 0FBH, 0FCH, 0FDH
   \              FCFD        
   \   00000070   FEFFC0C1C2C3       DC8 0FEH, 0FFH, 0C0H, 0C1H, 0C2H, 0C3H, 0C4H, 0C5H
   \              C4C5        
   \   00000078   A8C6C7C8C9CA       DC8 0A8H, 0C6H, 0C7H, 0C8H, 0C9H, 0CAH, 0CBH, 0CCH
   \              CBCC        
   \   00000080   CDCECFD0D1D2       DC8 0CDH, 0CEH, 0CFH, 0D0H, 0D1H, 0D2H, 0D3H, 0D4H
   \              D3D4        
   \   00000088   D5D6D7D8D9DA       DC8 0D5H, 0D6H, 0D7H, 0D8H, 0D9H, 0DAH, 0DBH, 0DCH
   \              DBDC        
   \   00000090   DDDEDF00           DC8 0DDH, 0DEH, 0DFH, 0
   \   00000094   687474703A2F       DC8 "http://"
   \              2F00        
   \   0000009C   7777772E00         DC8 "www."
   \   000000A1   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\314\\345\\355\\376">`:
   \   00000000   CCE5EDFE00         DC8 "\314\345\355\376"
   \   00000005   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "\\300\\342\\362\\356\\360\\350\\347\\363\\3`:
   \   00000000   C0E2F2EEF0E8       DC8 "\300\342\362\356\360\350\347\363\351\362\345 \354\345\355\377..."
   \              E7F3E9F2E520
   \              ECE5EDFF2E2E
   \              2E00        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "%s\\\\%u\\\\%u.txt">`:
   \   00000000   25735C25755C       DC8 "%s\\%u\\%u.txt"
   \              25752E747874
   \              00          
   \   0000000D   000000             DC8 0, 0, 0
   \   00000010   25735C25752E       DC8 "%s\\%u.txt"
   \              74787400    
   \   0000001A   0000               DC8 0, 0

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   257500             DC8 "%u"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "offline.png">`:
   \   00000000   6F66666C696E       DC8 "offline.png"
   \              652E706E6700

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "invisible.png">`:
   \   00000000   696E76697369       DC8 "invisible.png"
   \              626C652E706E
   \              6700        
   \   0000000E   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "away.png">`:
   \   00000000   617761792E70       DC8 "away.png"
   \              6E6700      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "na.png">`:
   \   00000000   6E612E706E67       DC8 "na.png"
   \              00          
   \   00000007   00                 DC8 0

   Maximum stack usage in bytes:

     Function                  CSTACK
     --------                  ------
     AddContactT9Key              12
     AddCurContact                 4
     AddLOGQ                       0
     AddMsgToChat                108
     AddSmile                      4
     AddStringToLog              188
     AskNickAndAddContact          4
     BackSpaceContactT9            8
     ChangeSound                   4
     ChangeVibra                   4
     CheckDoubleRun                8
     ClearContactT9Key             4
     ClearLog                     60
     ClearSendQ                    8
     CreateEditChat              112
     DrawAck                      80
     ElfKiller                     4
     ExtractAnswer                36
     FindContactLOGQByAck         12
     FindNextActiveContact         0
     FindPrevActiveContact         0
     FreeLOGQ                      8
     FreeTemplates                 8
     GetHost                       0
     GetHostsCount                 0
     GetIconIndex                  0
     GetLastXTextLOGQ              0
     GetOnTotalContact             8
     GetPort                      16
     GetShortInfo                 20
     GetTempName                  20
     IlluminationOff               8
     IlluminationOn               28
     IsUrl                        44
     LastLOGQ                      0
     LoadTemplates               332
     NewLOGQ                      12
     OpenLogfile                  16
     ParseAnswer                  36
     ParseXStatusText             20
     Play                        236
     ProcessPacket               292
     Quote                       148
     ReadDefSettings             152
     RecountMenu                  20
     RemoveLOGQ                    4
     ReqAddMsgToChat              16
     RequestXText                  8
     SMART_REDRAW                  8
     SaveAnswer                   12
     SendAnswer                   28
     SendAuthGrant                44
     SendAuthReq                  44
     SendMSGACK                    8
     UpdateCLheader               24
     UpdateCSMname                 4
     WriteDefSettings            152
     ask_my_info                   0
     atoi                          4
     contactlist_menu_ghook        8
     contactlist_menu_iconhndl   664
     contactlist_menu_onkey       36
     create_connect              184
     create_contactlist_menu      24
     do_ping                       4
     do_reconnect                  4
     ec_menu                      68
     ecmenu_ghook                  4
     ed_options_handler           64
     edchat_ghook                 72
     edchat_locret                 0
     edchat_onkey                344
     end_socket                    8
     free_ICONS                   12
     get_answer                 1084
     main                         60
     maincsm_onclose               8
     maincsm_oncreate             20
     maincsm_onmessage            64
     method0                      96
     method1                       8
     method2                       8
     method3                       8
     method4                       0
     method5                       8
     method8                       0
     method9                       0
     my_ed_redraw                 12
     patch_header                  8
     patch_input                  12
     process_active_timer         12
     send_login                   36
     set_my_status                 4
     set_my_xstatus               36
     setup_ICONS                  12
     start_vibra                   8
     stop_vibra                    4
     to_develop                    4
     wstrstr                      32


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     SMART_REDRAW                      48
     setup_ICONS                       72
     free_ICONS                        44
     IlluminationOff                   60
     IlluminationOn                   120
     ReadDefSettings                  220
     ?Subroutine98                      8
     WriteDefSettings                 204
     Play                             304
     start_vibra                      100
     stop_vibra                        84
     ChangeVibra                       40
     ?Subroutine100                    24
     ChangeSound                       32
     FreeTemplates                     56
     LoadTemplates                    396
     RXbuf                          16392
     TXbuf                          16392
     ElfKiller                         28
     patch_header                      52
     patch_input                       68
     NewLOGQ                           48
     ?Subroutine99                      8
     LastLOGQ                          36
     FreeLOGQ                          48
     RemoveLOGQ                        52
     AddLOGQ                           44
     GetLastXTextLOGQ                  72
     GetIconIndex                     228
     FindContactLOGQByAck              80
     UpdateCLheader                   104
     ClearContactT9Key                 24
     AddContactT9Key                   36
     BackSpaceContactT9                36
     create_contactlist_menu           76
     contactlist_menu_ghook            72
     RecountMenu                      160
     contactlist_menu_onkey           712
     GetOnTotalContact                 92
     contactlist_menu_iconhndl        520
     GetHost                          192
     atoi                              84
     GetPort                          272
     GetHostsCount                    112
     ?Subroutine102                     8
     ?Subroutine103                     8
     create_connect                   644
     ClearSendQ                        32
     end_socket                        40
     SendAnswer                       380
     send_login                       144
     do_ping                           52
     SendMSGACK                        52
     RequestXText                      52
     get_answer                      1056
     AddStringToLog                   508
     ParseXStatusText                 152
     AddMsgToChat                     800
     DrawAck                          340
     ask_my_info                        4
     set_my_status                     72
     set_my_xstatus                   268
     to_develop                        80
     ReqAddMsgToChat                  116
     ProcessPacket                   1844
     process_active_timer             132
     method0                          768
     ?Subroutine104                    16
     method1                           40
     ?Subroutine97                      8
     method2                           28
     method3                           20
     method4                           20
     method5                          180
     method8                            0
     method9                            4
     Canvas                           464
     S_OFFLINE                          8
     S_INVISIBLE                       12
     S_AWAY                             8
     S_NA                               4
     S_OCCUPIED                        12
     S_DND                              4
     S_ONLINE                           8
     S_FFC                              4
     icons_names                      112
     ?<Constant "\302\373 \340\342\362\356\360\350\
                                       52
     def_setting                       20
     key_clmenu_sk_r                   36
     contactlist_menuhdr               68
     menusoftkeys                      12
     menu_sk                           24
     clmenu_sk                         24
     menu_skt                           8
     clmenu_skt                         8
     maincsm_oncreate                 244
     maincsm_onclose                  128
     do_reconnect                      40
     CheckDoubleRun                   104
     maincsm_onmessage               1568
     minus11                            4
     maincsm_name_body                280
     ?<Constant "NATICQ: %d">          92
     UpdateCSMname                     32
     main                             220
     ?Subroutine105                     8
     edchat_locret                      4
     ExtractAnswer                    280
     ??FindNextActiveContact_0         64
     FindPrevActiveContact             84
     ed_options_handler               432
     wstrstr                          124
     IsUrl                            424
     ParseAnswer                      544
     SaveAnswer                        36
     GetTempName                      148
     DMonth                            52
     edchat_onkey                    1000
     my_ed_redraw                     112
     edchat_ghook                     532
     edchat_hdr                        84
     sk                                16
     CreateEditChat                  1108
     Quote                            416
     GetShortInfo                     160
     AddCurContact                     44
     ?Subroutine101                    12
     SendAuthReq                      208
     SendAuthGrant                    192
     OpenLogfile                      152
     ClearLog                         232
     ecmenu_ghook                      20
     ecmenu_ITEMS                     224
     ecmenu_HNDLS                      32
     S_ICONS                         1224
     ecmenu_HDR                        64
     ec_menu                          288
     AskNickAndAddContact               8
     AddSmile                          12
     ??DataTable1                       4
     ??DataTable6                       4
     ??DataTable7                       4
     ??DataTable12                      4
     ??DataTable16                      4
     ??DataTable23                      4
     ??DataTable24                      4
     ??DataTable26                      4
     ??DataTable27                      4
     ??DataTable28                      4
     ??DataTable30                      4
     ??DataTable31                      4
     ??DataTable37                      4
     ??DataTable40                      4
     ??DataTable41                      4
     ??DataTable43                      4
     ??DataTable45                      4
     ??DataTable46                      4
     ??DataTable47                      4
     ??DataTable55                      4
     ??DataTable56                      4
     ??DataTable58                      4
     ??DataTable59                      4
     ??DataTable60                      4
     ??DataTable61                      4
     ??DataTable62                      4
     ??DataTable63                      4
     ??DataTable64                      4
     ??DataTable65                      4
     ??DataTable68                      4
     ??DataTable74                      4
     ??DataTable75                      4
     ??DataTable76                      4
     ??DataTable77                      4
     ??DataTable86                      4
     ??DataTable95                      4
     ??DataTable96                      4
     ??DataTable97                      4
     ??DataTable100                     4
     ??DataTable102                     4
     ??DataTable103                     4
     ??DataTable105                     4
     ??DataTable106                     4
     ??DataTable107                     4
     ??DataTable108                     4
     ??DataTable112                     4
     ??DataTable113                     4
     ??DataTable114                     4
     ??DataTable115                     4
     ??DataTable117                     4
     ??DataTable118                     4
     ??DataTable120                     4
     ??DataTable124                     4
     ??DataTable126                     4
     ??DataTable127                     4
     ??DataTable128                     4
     ??DataTable129                     4
     ??DataTable130                     4
     ??DataTable131                     4
     ??DataTable132                     4
     ??DataTable133                     4
     ??DataTable134                     4
     ??DataTable135                     4
     ??DataTable136                     4
     ??DataTable137                     4
     ??DataTable138                     4
     ??DataTable139                     4
     ??DataTable140                     4
     ??DataTable142                     4
     ??DataTable149                     4
     ??DataTable150                     4
     ??DataTable151                     4
     ??DataTable152                     4
     ??DataTable153                     4
     ?<Initializer for S_ICONS>      1224
     ?<Constant "dnd.png">              8
     ?<Constant "depression.png">      16
     ?<Constant "evil.png">            12
     ?<Constant "home.png">            12
     ?<Constant "lunch.png">           12
     ?<Constant "work.png">            12
     ?<Constant "online.png">          12
     ?<Constant "ffc.png">              8
     ?<Constant "message.png">         12
     ?<Constant "unknown.png">         12
     ?<Constant "groupon.png">         12
     ?<Constant "groupoff.png">        16
     ?<Constant "null.png">            12
     ?<Constant "addcont.png">         12
     ?<Constant "head.png">            12
     ?<Constant "logo.png">            12
     ?<Constant "ping.png">            12
     ?<Constant "settings.png">        16
     ?<Constant "vis1.png">            12
     ?<Constant "vis2.png">            12
     ?<Constant "vis3.png">            12
     ?<Constant "vis4.png">            12
     ?<Constant "vis5.png">            12
     ?<Constant "\307\340\352\360\373\362\374">
                                        8
     ?<Constant "\302\373\341\356\360">
                                        8
     ?<Constant "\316\357\366\350\350">
                                        8
     ?<Constant "\326\350\362\350\360\356\342\340\3
                                       12
     ?<Constant "\302\361\362\340\342\350\362\374 \
                                       16
     ?<Constant "\317\356\353\363\367\350\362\374 \
                                       16
     ?<Constant "\304\356\341\340\342./\350\354\377
                                       12
     ?<Constant "\307\340\357\360\356\361 \340\342\
                                       16
     ?<Constant "\300\342\362\356\360\350\347\356\3
                                       16
     ?<Constant "\316\362\352\360\373\362\374 \350\
                                       16
     ?<Constant "\316\367\350\361\362\350\362\374 \
                                       16
     ?<Constant "\302\350\341\360\340 \356\362\352\
                                       36
     ?<Constant "\307\342\363\352\350 \356\362\352\
                                       36
     ?<Constant "\\%d.txt">            16
     ?<Constant "Waiting for GPRS up...">
                                      192
     ?<Constant "send res %d">         40
     ?<Constant "Sie_%04d">            12
     ?<Constant "Bad packet">          64
     ?<Constant "%s">                   3
     ?<Constant "%02d:%02d %02d-%02d %...">
                                       52
     ?<Constant ":\n">                  3
     ?<Constant "occupied.png">        16
     ?<Constant "\321\353\345\344\363\376\371\350\3
                                       32
     ?<Constant "abcdefghijklmnopqrstu...">
                                      164
     ?<Constant "\314\345\355\376">     8
     ?<Constant "\300\342\362\356\360\350\347\363\3
                                       20
     ?<Constant "%s\\%u\\%u.txt">      28
     ?<Constant "%u">                   3
     ?<Constant "offline.png">         12
     ?<Constant "invisible.png">       16
     ?<Constant "away.png">            12
     ?<Constant "na.png">               8
      Others                          820

 
 23 008 bytes in segment CODE
  2 653 bytes in segment DATA_C
  1 224 bytes in segment DATA_I
  1 224 bytes in segment DATA_ID
 33 064 bytes in segment DATA_Z
     24 bytes in segment INITTAB
 
 22 092 bytes of CODE  memory (+ 940 bytes shared)
  3 877 bytes of CONST memory
 34 288 bytes of DATA  memory

Errors: none
Warnings: none
